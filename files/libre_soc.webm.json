{"text": " Okay, LibreSock project is creating free and open source ship design for a family of system on ship products for powering routers, cell phones, laptops, your laptop maybe in the future. So it uses the power extension set, augmented with 3D upcodes, accelerating 3D graphics and also video acceleration upcodes and audio decoders and coders. So we needed for avoiding right proprietary binary blobs and drivers and no reverse engineering needed for supporting our hardware and well it is hard to do so we do it by grants and donations, we use a pool of community experts on newsnet, IRC, academia and also commercial partners which will produce our ship as you see later. So it is architecture is a traditional fetch decode issue and execute pipeline but to increase performance you use parallel decoders to decode instructions in advance, a vectored issue so one instruction can generate many results at one time utilizing the functions units of the ship with the parallel execution units and well managing all things scoreboard dependency tracking design. Well, we started from zero from the power is instruction set specification as published by the open power foundation which is a open standard and you can submit the extensions to it and that's one of the reasons we chose the power architecture. So the power has this big manual with all the assembly instructions and all these formats and we take these formats, these tables and auto-generate by Python and Python decoder from these specifications and the specification of the power architecture also has a sealed code and with this sealed code which is for humans but we use it for auto-translation to a simulator, Python simulator and we start from the beginning just simulating instructions in software then you use the simulator to test against this one, the last one and the harder simulator will verify against the software simulator and finally FPGA and even an ASIC. Let's jump here so this is like an imagine you have an add instruction coming in and the LU has to process it but before processing it, it has to receive operands like add what A and B but A and B can be the result of a previous instruction which is still being processed so it has to wait, wait where, in here, in here and here and when it has to have a read transaction, read the transaction then it will fill the buffers then the add instructions can proceed and it will generate a result and condition codes but maybe you cannot write them right now because you'll overwrite another instruction so we wait here and here also and this has to be managed so one of my tasks is to simulate this to see if it works well and do what? Formal verification which is so, so good, so, so interesting. With normal simulation you just throw random inputs maybe and some test cases but how do you know that you didn't hit a corner case? Well, the formal verification is like it's try everything at once. Actually, it starts from a bad result that you don't want to have and it shows you the input which reaches that bad result. Yes, so that's the bit of the thing. We get a simple core, first we do not do these function units all in parallel it just was one to test all of this is working put it here and then we read an instruction which decode instruction and then run the instruction terribly slowly but we validate the function units and the decoder. Next step which we do, we did already is we vectorize it so we put a read 64 because there are 32 instructions you add vector prefix to them and this vector prefix will tell you to read a predicate so from the vector you say no I don't want all of them I want the even ones or the odd ones or the ones with pass it a test like if then else but vectorized and then you run the vector loop so when instruction again can generate many may take the place of many many instructions and well now we go to the next steps we have this working now we have to do it in parallel we want to have performance it is working now performance so to be a performant you need to while you execute in one instruction you are decoding the next one you are fetching the next next one and if there is a jump instruction by chance and it doesn't match what you are fetching you have to reset the pipeline yes test well where you are right now we have a development environment that any of you can download and test in your computer you can do it is running in a shoot and then you can do make test to run the tests and if you have an FPGA board you can compile the bit stream and put into a supported board and we even did a ASIC with it well for the ASIC we need the PBK which is a process development kit that the factories don't give it to you freely so that part is done by a third party we don't touch property stuff but while it was done yes and we hope in the future to have a free PDK with it so the FPGA is booted we have a bare metal like Arduino like FPGA team running Zephyr OS was ported with network so networking was proved and the Linux with a serial console yes we have the test silicon with that little a simple core and it is being carefully tested because you have few chips produced one not to burn them so they are tested in a lab yes and the parties underway with the new instructions vector instructions already and the new instructions been submitted to the open power foundation for standardization and we are porting algorithms cryptographic algorithms and multimedia etc. so what you aim we aim to port and boot a Linux distro in the future eventually we want to have a full-term change GCC with vectorization they find these tensions to include the texture upcodes for 3d acceleration so you notice there will not be a GPU the instructions the CPU will be the GPU and well we need the hardware and software developers and testers and also well documentation optional no okay so who will build the chips well you just have research research money right well who produce thousands of chips for the market well we are partnered with red semiconductor which is have the mission of producing these chips producing a powerful and power efficient chip with our car so if you see some of them some of us some of them with this logo on the shirts you can talk to them you're here hello David hello people so that's it thank you very much thank you very much for the presentation there's a few minutes left for questions so in the back of the room I see someone waving just a moment thanks for your presentation you said that you had some test chips going on what's the status of the bring-up like how far did you get in the bring-up process okay we know the clock is working it has an well the azik it's not only for Libresock but for the academic institution to test their design so they are testing this the clock generation and well we know the clock generation works just that so maybe anyone else with a question okay thank you for your attention.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 14.0, "text": " Okay, LibreSock project is creating free and open source ship design for a family of system", "tokens": [1033, 11, 15834, 265, 50, 1560, 1716, 307, 4084, 1737, 293, 1269, 4009, 5374, 1715, 337, 257, 1605, 295, 1185], "temperature": 0.0, "avg_logprob": -0.3420323352424466, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0665857344865799}, {"id": 1, "seek": 0, "start": 14.0, "end": 20.64, "text": " on ship products for powering routers, cell phones, laptops, your laptop maybe in the", "tokens": [322, 5374, 3383, 337, 1347, 278, 4020, 433, 11, 2815, 10216, 11, 27642, 11, 428, 10732, 1310, 294, 264], "temperature": 0.0, "avg_logprob": -0.3420323352424466, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0665857344865799}, {"id": 2, "seek": 0, "start": 20.64, "end": 22.080000000000002, "text": " future.", "tokens": [2027, 13], "temperature": 0.0, "avg_logprob": -0.3420323352424466, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0665857344865799}, {"id": 3, "seek": 2208, "start": 22.08, "end": 30.519999999999996, "text": " So it uses the power extension set, augmented with 3D upcodes, accelerating 3D graphics", "tokens": [407, 309, 4960, 264, 1347, 10320, 992, 11, 36155, 365, 805, 35, 493, 66, 4789, 11, 34391, 805, 35, 11837], "temperature": 0.0, "avg_logprob": -0.23894381523132324, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.0010249600745737553}, {"id": 4, "seek": 2208, "start": 30.519999999999996, "end": 38.32, "text": " and also video acceleration upcodes and audio decoders and coders.", "tokens": [293, 611, 960, 17162, 493, 66, 4789, 293, 6278, 979, 378, 433, 293, 17656, 433, 13], "temperature": 0.0, "avg_logprob": -0.23894381523132324, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.0010249600745737553}, {"id": 5, "seek": 2208, "start": 38.32, "end": 48.519999999999996, "text": " So we needed for avoiding right proprietary binary blobs and drivers and no reverse engineering", "tokens": [407, 321, 2978, 337, 20220, 558, 38992, 17434, 1749, 929, 293, 11590, 293, 572, 9943, 7043], "temperature": 0.0, "avg_logprob": -0.23894381523132324, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.0010249600745737553}, {"id": 6, "seek": 4852, "start": 48.52, "end": 57.84, "text": " needed for supporting our hardware and well it is hard to do so we do it by grants and", "tokens": [2978, 337, 7231, 527, 8837, 293, 731, 309, 307, 1152, 281, 360, 370, 321, 360, 309, 538, 16101, 293], "temperature": 0.0, "avg_logprob": -0.18739213614628233, "compression_ratio": 1.4472049689440993, "no_speech_prob": 0.0003063881886191666}, {"id": 7, "seek": 4852, "start": 57.84, "end": 68.04, "text": " donations, we use a pool of community experts on newsnet, IRC, academia and also commercial", "tokens": [22705, 11, 321, 764, 257, 7005, 295, 1768, 8572, 322, 2583, 7129, 11, 16486, 34, 11, 28937, 293, 611, 6841], "temperature": 0.0, "avg_logprob": -0.18739213614628233, "compression_ratio": 1.4472049689440993, "no_speech_prob": 0.0003063881886191666}, {"id": 8, "seek": 4852, "start": 68.04, "end": 73.60000000000001, "text": " partners which will produce our ship as you see later.", "tokens": [4462, 597, 486, 5258, 527, 5374, 382, 291, 536, 1780, 13], "temperature": 0.0, "avg_logprob": -0.18739213614628233, "compression_ratio": 1.4472049689440993, "no_speech_prob": 0.0003063881886191666}, {"id": 9, "seek": 7360, "start": 73.6, "end": 81.67999999999999, "text": " So it is architecture is a traditional fetch decode issue and execute pipeline but to increase", "tokens": [407, 309, 307, 9482, 307, 257, 5164, 23673, 979, 1429, 2734, 293, 14483, 15517, 457, 281, 3488], "temperature": 0.0, "avg_logprob": -0.28146168223598544, "compression_ratio": 1.6130952380952381, "no_speech_prob": 0.000561798398848623}, {"id": 10, "seek": 7360, "start": 81.67999999999999, "end": 89.32, "text": " performance you use parallel decoders to decode instructions in advance, a vectored issue", "tokens": [3389, 291, 764, 8952, 979, 378, 433, 281, 979, 1429, 9415, 294, 7295, 11, 257, 8062, 292, 2734], "temperature": 0.0, "avg_logprob": -0.28146168223598544, "compression_ratio": 1.6130952380952381, "no_speech_prob": 0.000561798398848623}, {"id": 11, "seek": 7360, "start": 89.32, "end": 103.56, "text": " so one instruction can generate many results at one time utilizing the functions units", "tokens": [370, 472, 10951, 393, 8460, 867, 3542, 412, 472, 565, 26775, 264, 6828, 6815], "temperature": 0.0, "avg_logprob": -0.28146168223598544, "compression_ratio": 1.6130952380952381, "no_speech_prob": 0.000561798398848623}, {"id": 12, "seek": 10356, "start": 103.56, "end": 114.4, "text": " of the ship with the parallel execution units and well managing all things scoreboard dependency", "tokens": [295, 264, 5374, 365, 264, 8952, 15058, 6815, 293, 731, 11642, 439, 721, 6175, 3787, 33621], "temperature": 0.0, "avg_logprob": -0.30957474027361187, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.00010021101479651406}, {"id": 13, "seek": 10356, "start": 114.4, "end": 116.56, "text": " tracking design.", "tokens": [11603, 1715, 13], "temperature": 0.0, "avg_logprob": -0.30957474027361187, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.00010021101479651406}, {"id": 14, "seek": 10356, "start": 116.56, "end": 127.4, "text": " Well, we started from zero from the power is instruction set specification as published", "tokens": [1042, 11, 321, 1409, 490, 4018, 490, 264, 1347, 307, 10951, 992, 31256, 382, 6572], "temperature": 0.0, "avg_logprob": -0.30957474027361187, "compression_ratio": 1.4154929577464788, "no_speech_prob": 0.00010021101479651406}, {"id": 15, "seek": 12740, "start": 127.4, "end": 137.56, "text": " by the open power foundation which is a open standard and you can submit the extensions", "tokens": [538, 264, 1269, 1347, 7030, 597, 307, 257, 1269, 3832, 293, 291, 393, 10315, 264, 25129], "temperature": 0.0, "avg_logprob": -0.21919214075261897, "compression_ratio": 1.5569620253164558, "no_speech_prob": 0.0003155186423100531}, {"id": 16, "seek": 12740, "start": 137.56, "end": 142.72, "text": " to it and that's one of the reasons we chose the power architecture.", "tokens": [281, 309, 293, 300, 311, 472, 295, 264, 4112, 321, 5111, 264, 1347, 9482, 13], "temperature": 0.0, "avg_logprob": -0.21919214075261897, "compression_ratio": 1.5569620253164558, "no_speech_prob": 0.0003155186423100531}, {"id": 17, "seek": 12740, "start": 142.72, "end": 150.96, "text": " So the power has this big manual with all the assembly instructions and all these formats", "tokens": [407, 264, 1347, 575, 341, 955, 9688, 365, 439, 264, 12103, 9415, 293, 439, 613, 25879], "temperature": 0.0, "avg_logprob": -0.21919214075261897, "compression_ratio": 1.5569620253164558, "no_speech_prob": 0.0003155186423100531}, {"id": 18, "seek": 15096, "start": 150.96, "end": 157.92000000000002, "text": " and we take these formats, these tables and auto-generate by Python and Python decoder", "tokens": [293, 321, 747, 613, 25879, 11, 613, 8020, 293, 8399, 12, 21848, 473, 538, 15329, 293, 15329, 979, 19866], "temperature": 0.0, "avg_logprob": -0.3150828997294108, "compression_ratio": 1.6708860759493671, "no_speech_prob": 0.0001350262318737805}, {"id": 19, "seek": 15096, "start": 157.92000000000002, "end": 167.76000000000002, "text": " from these specifications and the specification of the power architecture also has a sealed", "tokens": [490, 613, 29448, 293, 264, 31256, 295, 264, 1347, 9482, 611, 575, 257, 21514], "temperature": 0.0, "avg_logprob": -0.3150828997294108, "compression_ratio": 1.6708860759493671, "no_speech_prob": 0.0001350262318737805}, {"id": 20, "seek": 15096, "start": 167.76000000000002, "end": 175.60000000000002, "text": " code and with this sealed code which is for humans but we use it for auto-translation", "tokens": [3089, 293, 365, 341, 21514, 3089, 597, 307, 337, 6255, 457, 321, 764, 309, 337, 8399, 12, 24999, 24278], "temperature": 0.0, "avg_logprob": -0.3150828997294108, "compression_ratio": 1.6708860759493671, "no_speech_prob": 0.0001350262318737805}, {"id": 21, "seek": 17560, "start": 175.6, "end": 184.6, "text": " to a simulator, Python simulator and we start from the beginning just simulating instructions", "tokens": [281, 257, 32974, 11, 15329, 32974, 293, 321, 722, 490, 264, 2863, 445, 1034, 12162, 9415], "temperature": 0.0, "avg_logprob": -0.22386401494344074, "compression_ratio": 1.691358024691358, "no_speech_prob": 0.0001997314830077812}, {"id": 22, "seek": 17560, "start": 184.6, "end": 191.68, "text": " in software then you use the simulator to test against this one, the last one and the", "tokens": [294, 4722, 550, 291, 764, 264, 32974, 281, 1500, 1970, 341, 472, 11, 264, 1036, 472, 293, 264], "temperature": 0.0, "avg_logprob": -0.22386401494344074, "compression_ratio": 1.691358024691358, "no_speech_prob": 0.0001997314830077812}, {"id": 23, "seek": 17560, "start": 191.68, "end": 202.2, "text": " harder simulator will verify against the software simulator and finally FPGA and even an ASIC.", "tokens": [6081, 32974, 486, 16888, 1970, 264, 4722, 32974, 293, 2721, 36655, 12570, 293, 754, 364, 7469, 2532, 13], "temperature": 0.0, "avg_logprob": -0.22386401494344074, "compression_ratio": 1.691358024691358, "no_speech_prob": 0.0001997314830077812}, {"id": 24, "seek": 20220, "start": 202.2, "end": 209.16, "text": " Let's jump here so this is like an imagine you have an add instruction coming in and", "tokens": [961, 311, 3012, 510, 370, 341, 307, 411, 364, 3811, 291, 362, 364, 909, 10951, 1348, 294, 293], "temperature": 0.0, "avg_logprob": -0.25224415639813025, "compression_ratio": 1.7704081632653061, "no_speech_prob": 0.000794322055298835}, {"id": 25, "seek": 20220, "start": 209.16, "end": 216.04, "text": " the LU has to process it but before processing it, it has to receive operands like add what", "tokens": [264, 31851, 575, 281, 1399, 309, 457, 949, 9007, 309, 11, 309, 575, 281, 4774, 2208, 2967, 411, 909, 437], "temperature": 0.0, "avg_logprob": -0.25224415639813025, "compression_ratio": 1.7704081632653061, "no_speech_prob": 0.000794322055298835}, {"id": 26, "seek": 20220, "start": 216.04, "end": 221.83999999999997, "text": " A and B but A and B can be the result of a previous instruction which is still being", "tokens": [316, 293, 363, 457, 316, 293, 363, 393, 312, 264, 1874, 295, 257, 3894, 10951, 597, 307, 920, 885], "temperature": 0.0, "avg_logprob": -0.25224415639813025, "compression_ratio": 1.7704081632653061, "no_speech_prob": 0.000794322055298835}, {"id": 27, "seek": 20220, "start": 221.83999999999997, "end": 229.32, "text": " processed so it has to wait, wait where, in here, in here and here and when it has to", "tokens": [18846, 370, 309, 575, 281, 1699, 11, 1699, 689, 11, 294, 510, 11, 294, 510, 293, 510, 293, 562, 309, 575, 281], "temperature": 0.0, "avg_logprob": -0.25224415639813025, "compression_ratio": 1.7704081632653061, "no_speech_prob": 0.000794322055298835}, {"id": 28, "seek": 22932, "start": 229.32, "end": 235.76, "text": " have a read transaction, read the transaction then it will fill the buffers then the add", "tokens": [362, 257, 1401, 14425, 11, 1401, 264, 14425, 550, 309, 486, 2836, 264, 9204, 433, 550, 264, 909], "temperature": 0.0, "avg_logprob": -0.19819551781763003, "compression_ratio": 1.7828282828282829, "no_speech_prob": 0.0001250082568731159}, {"id": 29, "seek": 22932, "start": 235.76, "end": 243.6, "text": " instructions can proceed and it will generate a result and condition codes but maybe you", "tokens": [9415, 393, 8991, 293, 309, 486, 8460, 257, 1874, 293, 4188, 14211, 457, 1310, 291], "temperature": 0.0, "avg_logprob": -0.19819551781763003, "compression_ratio": 1.7828282828282829, "no_speech_prob": 0.0001250082568731159}, {"id": 30, "seek": 22932, "start": 243.6, "end": 250.12, "text": " cannot write them right now because you'll overwrite another instruction so we wait here", "tokens": [2644, 2464, 552, 558, 586, 570, 291, 603, 670, 21561, 1071, 10951, 370, 321, 1699, 510], "temperature": 0.0, "avg_logprob": -0.19819551781763003, "compression_ratio": 1.7828282828282829, "no_speech_prob": 0.0001250082568731159}, {"id": 31, "seek": 22932, "start": 250.12, "end": 257.24, "text": " and here also and this has to be managed so one of my tasks is to simulate this to see", "tokens": [293, 510, 611, 293, 341, 575, 281, 312, 6453, 370, 472, 295, 452, 9608, 307, 281, 27817, 341, 281, 536], "temperature": 0.0, "avg_logprob": -0.19819551781763003, "compression_ratio": 1.7828282828282829, "no_speech_prob": 0.0001250082568731159}, {"id": 32, "seek": 25724, "start": 257.24, "end": 267.52, "text": " if it works well and do what? Formal verification which is so, so good, so, so interesting.", "tokens": [498, 309, 1985, 731, 293, 360, 437, 30, 10126, 304, 30206, 597, 307, 370, 11, 370, 665, 11, 370, 11, 370, 1880, 13], "temperature": 0.0, "avg_logprob": -0.212265342029173, "compression_ratio": 1.5170454545454546, "no_speech_prob": 0.0003970859688706696}, {"id": 33, "seek": 25724, "start": 267.52, "end": 274.96000000000004, "text": " With normal simulation you just throw random inputs maybe and some test cases but how do", "tokens": [2022, 2710, 16575, 291, 445, 3507, 4974, 15743, 1310, 293, 512, 1500, 3331, 457, 577, 360], "temperature": 0.0, "avg_logprob": -0.212265342029173, "compression_ratio": 1.5170454545454546, "no_speech_prob": 0.0003970859688706696}, {"id": 34, "seek": 25724, "start": 274.96000000000004, "end": 282.32, "text": " you know that you didn't hit a corner case? Well, the formal verification is like it's", "tokens": [291, 458, 300, 291, 994, 380, 2045, 257, 4538, 1389, 30, 1042, 11, 264, 9860, 30206, 307, 411, 309, 311], "temperature": 0.0, "avg_logprob": -0.212265342029173, "compression_ratio": 1.5170454545454546, "no_speech_prob": 0.0003970859688706696}, {"id": 35, "seek": 28232, "start": 282.32, "end": 290.84, "text": " try everything at once. Actually, it starts from a bad result that you don't want to have", "tokens": [853, 1203, 412, 1564, 13, 5135, 11, 309, 3719, 490, 257, 1578, 1874, 300, 291, 500, 380, 528, 281, 362], "temperature": 0.0, "avg_logprob": -0.2545334872077493, "compression_ratio": 1.497142857142857, "no_speech_prob": 0.00032614130759611726}, {"id": 36, "seek": 28232, "start": 290.84, "end": 300.32, "text": " and it shows you the input which reaches that bad result. Yes, so that's the bit of", "tokens": [293, 309, 3110, 291, 264, 4846, 597, 14235, 300, 1578, 1874, 13, 1079, 11, 370, 300, 311, 264, 857, 295], "temperature": 0.0, "avg_logprob": -0.2545334872077493, "compression_ratio": 1.497142857142857, "no_speech_prob": 0.00032614130759611726}, {"id": 37, "seek": 28232, "start": 300.32, "end": 309.84, "text": " the thing. We get a simple core, first we do not do these function units all in parallel", "tokens": [264, 551, 13, 492, 483, 257, 2199, 4965, 11, 700, 321, 360, 406, 360, 613, 2445, 6815, 439, 294, 8952], "temperature": 0.0, "avg_logprob": -0.2545334872077493, "compression_ratio": 1.497142857142857, "no_speech_prob": 0.00032614130759611726}, {"id": 38, "seek": 30984, "start": 309.84, "end": 317.79999999999995, "text": " it just was one to test all of this is working put it here and then we read an instruction", "tokens": [309, 445, 390, 472, 281, 1500, 439, 295, 341, 307, 1364, 829, 309, 510, 293, 550, 321, 1401, 364, 10951], "temperature": 0.0, "avg_logprob": -0.25793269323924234, "compression_ratio": 1.6625, "no_speech_prob": 0.0003617477777879685}, {"id": 39, "seek": 30984, "start": 317.79999999999995, "end": 326.23999999999995, "text": " which decode instruction and then run the instruction terribly slowly but we validate", "tokens": [597, 979, 1429, 10951, 293, 550, 1190, 264, 10951, 22903, 5692, 457, 321, 29562], "temperature": 0.0, "avg_logprob": -0.25793269323924234, "compression_ratio": 1.6625, "no_speech_prob": 0.0003617477777879685}, {"id": 40, "seek": 30984, "start": 326.23999999999995, "end": 334.88, "text": " the function units and the decoder. Next step which we do, we did already is we vectorize", "tokens": [264, 2445, 6815, 293, 264, 979, 19866, 13, 3087, 1823, 597, 321, 360, 11, 321, 630, 1217, 307, 321, 8062, 1125], "temperature": 0.0, "avg_logprob": -0.25793269323924234, "compression_ratio": 1.6625, "no_speech_prob": 0.0003617477777879685}, {"id": 41, "seek": 33488, "start": 334.88, "end": 345.0, "text": " it so we put a read 64 because there are 32 instructions you add vector prefix to them", "tokens": [309, 370, 321, 829, 257, 1401, 12145, 570, 456, 366, 8858, 9415, 291, 909, 8062, 46969, 281, 552], "temperature": 0.0, "avg_logprob": -0.2339986887845126, "compression_ratio": 1.6163522012578617, "no_speech_prob": 0.00023375607270281762}, {"id": 42, "seek": 33488, "start": 345.0, "end": 351.2, "text": " and this vector prefix will tell you to read a predicate so from the vector you say no", "tokens": [293, 341, 8062, 46969, 486, 980, 291, 281, 1401, 257, 3852, 8700, 370, 490, 264, 8062, 291, 584, 572], "temperature": 0.0, "avg_logprob": -0.2339986887845126, "compression_ratio": 1.6163522012578617, "no_speech_prob": 0.00023375607270281762}, {"id": 43, "seek": 33488, "start": 351.2, "end": 357.15999999999997, "text": " I don't want all of them I want the even ones or the odd ones or the ones with pass", "tokens": [286, 500, 380, 528, 439, 295, 552, 286, 528, 264, 754, 2306, 420, 264, 7401, 2306, 420, 264, 2306, 365, 1320], "temperature": 0.0, "avg_logprob": -0.2339986887845126, "compression_ratio": 1.6163522012578617, "no_speech_prob": 0.00023375607270281762}, {"id": 44, "seek": 35716, "start": 357.16, "end": 365.96000000000004, "text": " it a test like if then else but vectorized and then you run the vector loop so when instruction", "tokens": [309, 257, 1500, 411, 498, 550, 1646, 457, 8062, 1602, 293, 550, 291, 1190, 264, 8062, 6367, 370, 562, 10951], "temperature": 0.0, "avg_logprob": -0.2926631569862366, "compression_ratio": 1.694267515923567, "no_speech_prob": 0.00018621225899551064}, {"id": 45, "seek": 35716, "start": 365.96000000000004, "end": 375.0, "text": " again can generate many may take the place of many many instructions and well now we", "tokens": [797, 393, 8460, 867, 815, 747, 264, 1081, 295, 867, 867, 9415, 293, 731, 586, 321], "temperature": 0.0, "avg_logprob": -0.2926631569862366, "compression_ratio": 1.694267515923567, "no_speech_prob": 0.00018621225899551064}, {"id": 46, "seek": 35716, "start": 375.0, "end": 382.68, "text": " go to the next steps we have this working now we have to do it in parallel we want to", "tokens": [352, 281, 264, 958, 4439, 321, 362, 341, 1364, 586, 321, 362, 281, 360, 309, 294, 8952, 321, 528, 281], "temperature": 0.0, "avg_logprob": -0.2926631569862366, "compression_ratio": 1.694267515923567, "no_speech_prob": 0.00018621225899551064}, {"id": 47, "seek": 38268, "start": 382.68, "end": 390.44, "text": " have performance it is working now performance so to be a performant you need to while you", "tokens": [362, 3389, 309, 307, 1364, 586, 3389, 370, 281, 312, 257, 2042, 394, 291, 643, 281, 1339, 291], "temperature": 0.0, "avg_logprob": -0.22939777374267578, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.00017631797527428716}, {"id": 48, "seek": 38268, "start": 390.44, "end": 396.0, "text": " execute in one instruction you are decoding the next one you are fetching the next next", "tokens": [14483, 294, 472, 10951, 291, 366, 979, 8616, 264, 958, 472, 291, 366, 23673, 278, 264, 958, 958], "temperature": 0.0, "avg_logprob": -0.22939777374267578, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.00017631797527428716}, {"id": 49, "seek": 38268, "start": 396.0, "end": 405.04, "text": " one and if there is a jump instruction by chance and it doesn't match what you are fetching", "tokens": [472, 293, 498, 456, 307, 257, 3012, 10951, 538, 2931, 293, 309, 1177, 380, 2995, 437, 291, 366, 23673, 278], "temperature": 0.0, "avg_logprob": -0.22939777374267578, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.00017631797527428716}, {"id": 50, "seek": 40504, "start": 405.04, "end": 417.0, "text": " you have to reset the pipeline yes test well where you are right now we have a development", "tokens": [291, 362, 281, 14322, 264, 15517, 2086, 1500, 731, 689, 291, 366, 558, 586, 321, 362, 257, 3250], "temperature": 0.0, "avg_logprob": -0.2514096462365353, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.00017931584443431348}, {"id": 51, "seek": 40504, "start": 417.0, "end": 424.16, "text": " environment that any of you can download and test in your computer you can do it is running", "tokens": [2823, 300, 604, 295, 291, 393, 5484, 293, 1500, 294, 428, 3820, 291, 393, 360, 309, 307, 2614], "temperature": 0.0, "avg_logprob": -0.2514096462365353, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.00017931584443431348}, {"id": 52, "seek": 40504, "start": 424.16, "end": 432.04, "text": " in a shoot and then you can do make test to run the tests and if you have an FPGA board", "tokens": [294, 257, 3076, 293, 550, 291, 393, 360, 652, 1500, 281, 1190, 264, 6921, 293, 498, 291, 362, 364, 36655, 12570, 3150], "temperature": 0.0, "avg_logprob": -0.2514096462365353, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.00017931584443431348}, {"id": 53, "seek": 43204, "start": 432.04, "end": 438.68, "text": " you can compile the bit stream and put into a supported board and we even did a ASIC", "tokens": [291, 393, 31413, 264, 857, 4309, 293, 829, 666, 257, 8104, 3150, 293, 321, 754, 630, 257, 7469, 2532], "temperature": 0.0, "avg_logprob": -0.23347301759581635, "compression_ratio": 1.4835164835164836, "no_speech_prob": 0.00030295579927042127}, {"id": 54, "seek": 43204, "start": 438.68, "end": 448.04, "text": " with it well for the ASIC we need the PBK which is a process development kit that the factories", "tokens": [365, 309, 731, 337, 264, 7469, 2532, 321, 643, 264, 24056, 42, 597, 307, 257, 1399, 3250, 8260, 300, 264, 24813], "temperature": 0.0, "avg_logprob": -0.23347301759581635, "compression_ratio": 1.4835164835164836, "no_speech_prob": 0.00030295579927042127}, {"id": 55, "seek": 43204, "start": 448.04, "end": 459.36, "text": " don't give it to you freely so that part is done by a third party we don't touch property", "tokens": [500, 380, 976, 309, 281, 291, 16433, 370, 300, 644, 307, 1096, 538, 257, 2636, 3595, 321, 500, 380, 2557, 4707], "temperature": 0.0, "avg_logprob": -0.23347301759581635, "compression_ratio": 1.4835164835164836, "no_speech_prob": 0.00030295579927042127}, {"id": 56, "seek": 45936, "start": 459.36, "end": 467.44, "text": " stuff but while it was done yes and we hope in the future to have a free PDK with it so", "tokens": [1507, 457, 1339, 309, 390, 1096, 2086, 293, 321, 1454, 294, 264, 2027, 281, 362, 257, 1737, 10464, 42, 365, 309, 370], "temperature": 0.0, "avg_logprob": -0.2699233310323366, "compression_ratio": 1.5142857142857142, "no_speech_prob": 9.872132068267092e-05}, {"id": 57, "seek": 45936, "start": 467.44, "end": 478.36, "text": " the FPGA is booted we have a bare metal like Arduino like FPGA team running Zephyr OS was", "tokens": [264, 36655, 12570, 307, 11450, 292, 321, 362, 257, 6949, 5760, 411, 39539, 411, 36655, 12570, 1469, 2614, 1176, 595, 3495, 81, 12731, 390], "temperature": 0.0, "avg_logprob": -0.2699233310323366, "compression_ratio": 1.5142857142857142, "no_speech_prob": 9.872132068267092e-05}, {"id": 58, "seek": 45936, "start": 478.36, "end": 487.40000000000003, "text": " ported with network so networking was proved and the Linux with a serial console yes we", "tokens": [2436, 292, 365, 3209, 370, 17985, 390, 14617, 293, 264, 18734, 365, 257, 17436, 11076, 2086, 321], "temperature": 0.0, "avg_logprob": -0.2699233310323366, "compression_ratio": 1.5142857142857142, "no_speech_prob": 9.872132068267092e-05}, {"id": 59, "seek": 48740, "start": 487.4, "end": 495.4, "text": " have the test silicon with that little a simple core and it is being carefully tested because", "tokens": [362, 264, 1500, 22848, 365, 300, 707, 257, 2199, 4965, 293, 309, 307, 885, 7500, 8246, 570], "temperature": 0.0, "avg_logprob": -0.33183189918254985, "compression_ratio": 1.705521472392638, "no_speech_prob": 0.00018189279944635928}, {"id": 60, "seek": 48740, "start": 495.4, "end": 504.64, "text": " you have few chips produced one not to burn them so they are tested in a lab yes and the", "tokens": [291, 362, 1326, 11583, 7126, 472, 406, 281, 5064, 552, 370, 436, 366, 8246, 294, 257, 2715, 2086, 293, 264], "temperature": 0.0, "avg_logprob": -0.33183189918254985, "compression_ratio": 1.705521472392638, "no_speech_prob": 0.00018189279944635928}, {"id": 61, "seek": 48740, "start": 504.64, "end": 511.03999999999996, "text": " parties underway with the new instructions vector instructions already and the new instructions", "tokens": [8265, 27534, 365, 264, 777, 9415, 8062, 9415, 1217, 293, 264, 777, 9415], "temperature": 0.0, "avg_logprob": -0.33183189918254985, "compression_ratio": 1.705521472392638, "no_speech_prob": 0.00018189279944635928}, {"id": 62, "seek": 51104, "start": 511.04, "end": 518.6800000000001, "text": " been submitted to the open power foundation for standardization and we are porting algorithms", "tokens": [668, 14405, 281, 264, 1269, 1347, 7030, 337, 3832, 2144, 293, 321, 366, 2436, 278, 14642], "temperature": 0.0, "avg_logprob": -0.42547353108723956, "compression_ratio": 1.5, "no_speech_prob": 0.00016918458277359605}, {"id": 63, "seek": 51104, "start": 518.6800000000001, "end": 528.08, "text": " cryptographic algorithms and multimedia etc. so what you aim we aim to port and boot a", "tokens": [9844, 12295, 14642, 293, 49202, 5183, 13, 370, 437, 291, 5939, 321, 5939, 281, 2436, 293, 11450, 257], "temperature": 0.0, "avg_logprob": -0.42547353108723956, "compression_ratio": 1.5, "no_speech_prob": 0.00016918458277359605}, {"id": 64, "seek": 51104, "start": 528.08, "end": 537.88, "text": " Linux distro in the future eventually we want to have a full-term change GCC with vectorization", "tokens": [18734, 1483, 340, 294, 264, 2027, 4728, 321, 528, 281, 362, 257, 1577, 12, 7039, 1319, 460, 11717, 365, 8062, 2144], "temperature": 0.0, "avg_logprob": -0.42547353108723956, "compression_ratio": 1.5, "no_speech_prob": 0.00016918458277359605}, {"id": 65, "seek": 53788, "start": 537.88, "end": 545.92, "text": " they find these tensions to include the texture upcodes for 3d acceleration so you notice there", "tokens": [436, 915, 613, 28303, 281, 4090, 264, 8091, 493, 66, 4789, 337, 805, 67, 17162, 370, 291, 3449, 456], "temperature": 0.0, "avg_logprob": -0.26913436514432315, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.0002833972394000739}, {"id": 66, "seek": 53788, "start": 545.92, "end": 554.0, "text": " will not be a GPU the instructions the CPU will be the GPU and well we need the hardware", "tokens": [486, 406, 312, 257, 18407, 264, 9415, 264, 13199, 486, 312, 264, 18407, 293, 731, 321, 643, 264, 8837], "temperature": 0.0, "avg_logprob": -0.26913436514432315, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.0002833972394000739}, {"id": 67, "seek": 53788, "start": 554.0, "end": 563.88, "text": " and software developers and testers and also well documentation optional no okay so who", "tokens": [293, 4722, 8849, 293, 1500, 433, 293, 611, 731, 14333, 17312, 572, 1392, 370, 567], "temperature": 0.0, "avg_logprob": -0.26913436514432315, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.0002833972394000739}, {"id": 68, "seek": 56388, "start": 563.88, "end": 571.32, "text": " will build the chips well you just have research research money right well who produce thousands", "tokens": [486, 1322, 264, 11583, 731, 291, 445, 362, 2132, 2132, 1460, 558, 731, 567, 5258, 5383], "temperature": 0.0, "avg_logprob": -0.25131036524187056, "compression_ratio": 1.7345679012345678, "no_speech_prob": 0.00025643364642746747}, {"id": 69, "seek": 56388, "start": 571.32, "end": 578.4, "text": " of chips for the market well we are partnered with red semiconductor which is have the mission", "tokens": [295, 11583, 337, 264, 2142, 731, 321, 366, 29865, 365, 2182, 45310, 597, 307, 362, 264, 4447], "temperature": 0.0, "avg_logprob": -0.25131036524187056, "compression_ratio": 1.7345679012345678, "no_speech_prob": 0.00025643364642746747}, {"id": 70, "seek": 56388, "start": 578.4, "end": 586.88, "text": " of producing these chips producing a powerful and power efficient chip with our car so if", "tokens": [295, 10501, 613, 11583, 10501, 257, 4005, 293, 1347, 7148, 11409, 365, 527, 1032, 370, 498], "temperature": 0.0, "avg_logprob": -0.25131036524187056, "compression_ratio": 1.7345679012345678, "no_speech_prob": 0.00025643364642746747}, {"id": 71, "seek": 58688, "start": 586.88, "end": 594.92, "text": " you see some of them some of us some of them with this logo on the shirts you can talk", "tokens": [291, 536, 512, 295, 552, 512, 295, 505, 512, 295, 552, 365, 341, 9699, 322, 264, 20832, 291, 393, 751], "temperature": 0.0, "avg_logprob": -0.23404755062527127, "compression_ratio": 1.5398230088495575, "no_speech_prob": 0.000646783912088722}, {"id": 72, "seek": 58688, "start": 594.92, "end": 616.36, "text": " to them you're here hello David hello people so that's it thank you very much thank you", "tokens": [281, 552, 291, 434, 510, 7751, 4389, 7751, 561, 370, 300, 311, 309, 1309, 291, 588, 709, 1309, 291], "temperature": 0.0, "avg_logprob": -0.23404755062527127, "compression_ratio": 1.5398230088495575, "no_speech_prob": 0.000646783912088722}, {"id": 73, "seek": 61636, "start": 616.36, "end": 625.32, "text": " very much for the presentation there's a few minutes left for questions so in the back", "tokens": [588, 709, 337, 264, 5860, 456, 311, 257, 1326, 2077, 1411, 337, 1651, 370, 294, 264, 646], "temperature": 0.0, "avg_logprob": -0.13702906370162965, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.001888365251943469}, {"id": 74, "seek": 61636, "start": 625.32, "end": 640.28, "text": " of the room I see someone waving just a moment thanks for your presentation you said that", "tokens": [295, 264, 1808, 286, 536, 1580, 35347, 445, 257, 1623, 3231, 337, 428, 5860, 291, 848, 300], "temperature": 0.0, "avg_logprob": -0.13702906370162965, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.001888365251943469}, {"id": 75, "seek": 64028, "start": 640.28, "end": 646.88, "text": " you had some test chips going on what's the status of the bring-up like how far did you", "tokens": [291, 632, 512, 1500, 11583, 516, 322, 437, 311, 264, 6558, 295, 264, 1565, 12, 1010, 411, 577, 1400, 630, 291], "temperature": 0.0, "avg_logprob": -0.23480119839520522, "compression_ratio": 1.5433526011560694, "no_speech_prob": 0.000681073812302202}, {"id": 76, "seek": 64028, "start": 646.88, "end": 655.24, "text": " get in the bring-up process okay we know the clock is working it has an well the azik", "tokens": [483, 294, 264, 1565, 12, 1010, 1399, 1392, 321, 458, 264, 7830, 307, 1364, 309, 575, 364, 731, 264, 7883, 1035], "temperature": 0.0, "avg_logprob": -0.23480119839520522, "compression_ratio": 1.5433526011560694, "no_speech_prob": 0.000681073812302202}, {"id": 77, "seek": 64028, "start": 655.24, "end": 662.56, "text": " it's not only for Libresock but for the academic institution to test their design so they are", "tokens": [309, 311, 406, 787, 337, 15834, 265, 539, 547, 457, 337, 264, 7778, 7818, 281, 1500, 641, 1715, 370, 436, 366], "temperature": 0.0, "avg_logprob": -0.23480119839520522, "compression_ratio": 1.5433526011560694, "no_speech_prob": 0.000681073812302202}, {"id": 78, "seek": 66256, "start": 662.56, "end": 677.76, "text": " testing this the clock generation and well we know the clock generation works just that", "tokens": [4997, 341, 264, 7830, 5125, 293, 731, 321, 458, 264, 7830, 5125, 1985, 445, 300], "temperature": 0.0, "avg_logprob": -0.2602226357710989, "compression_ratio": 1.3181818181818181, "no_speech_prob": 0.0009882096201181412}, {"id": 79, "seek": 67776, "start": 677.76, "end": 693.3199999999999, "text": " so maybe anyone else with a question okay thank you for your attention.", "tokens": [370, 1310, 2878, 1646, 365, 257, 1168, 1392, 1309, 291, 337, 428, 3202, 13], "temperature": 0.0, "avg_logprob": -0.3647097746531169, "compression_ratio": 1.0441176470588236, "no_speech_prob": 0.0056135994382202625}], "language": "en"}