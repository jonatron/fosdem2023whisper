{"text": " Okay, welcome everyone, starting with the next session, so yeah, try to find a place, if you're free to use the reserved spaces if nobody comes. Let's welcome Patrick on the talk on SQL on stuff like this. Alright, hey everybody, I'm Patrick Donnelly, I know I got Red Hat slides up, but I'm actually part of the storage group at Red Hat that got moved over to IBM as of this year, so technically I'm at IBM now, if that matters for anybody who wants to ask me questions. Today I'm talking about SQL on CIF, it's kind of a small project that started about two years ago, it was actually a COVID project for me while I was dealing with the newborn baby that had lots of, or some time on my hands, but anyway, this is kind of like an overview for what we're going to talk about. Yeah, go ahead. Yeah, I do. We don't have a PA, unfortunately. Oh, yeah, I just have to speak up, so I'm naturally soft spoken, so if you can't hear me in the back, just wave your hand and I'll try to speak up more, okay? I'm okay right now, alright. Where was I? So just a quick canvassing the audience, who's used CIF before? Oh, wow, okay. Who's used SQLite before? Fewer people, that's interesting, okay, but not much fewer. Alright, so I'm going to quickly talk about CIF and what it is. I won't spend too much time on it due to the time I have available in my talk. I'll give you a brief introduction to RATOS for anyone who's not familiar with it. Then I'm going to talk a little bit about SQLite. Then some typical storage patterns we use for storing data on RATOS. I'll give you an introduction to this new library, LibCefSQLite. And then I'm going to talk about how we use that today within CIF, just to show that this library is not being used by anyone. Although I am interested if anyone's using it in the community. I'll give you a brief, go through a brief tutorial, an interactive tutorial using the library, and then I'll end the talk with some retrospective and talk about future work. So what's CIF? CIF is an ecosystem for distributed object storage. It's composed of numerous projects centered around managing a large storage cluster. The underpinning of CIF is RATOS, which I'll talk about on the next slide, but it's basically a distributed object store. Most people don't use it, use RATOS directly. What they use instead is the storage abstractions we built on top of RATOS, which provide the more popular storage mechanisms that people are familiar with, including CIFFS, which gives you your file storage as a distributed file system, RGW, providing the S3 object storage gateway, and RBD, which gives you your block device storage on top of RATOS. CIF has kind of evolved more and more recently to become more user-friendly. If you had maybe poor experiences in the past with CIF, I encourage you to give it another shot. The dev team has dedicated a lot of time recently to improving the user experience, and also taking the hassle out of managing your storage cluster out of the experience. There are things like monitoring device health. We now have a very mature dashboard for interacting with the CIF cluster, and the cluster management itself is now largely being done through CIFADM, which, as you saw in the previous talk, you can start up a CIF cluster with just a simple command and then start adding hosts to it. It's never been simpler. Oops, went backwards. So what's RATOS? RATOS is a number of object storage demons that run on physical disks. They can be hard disks, SSDs, and VMEs. On top of these object storage devices, we have this concept of pools, which allows you to have various administrative policies regarding what kind of hardware the pool should use, how the data should be replicated. Clients of RATOS talk directly to the primary object storage device for a given object, and you can look up which object storage device an object belongs to in constant time using a library called crush. You don't need to use that directly. That's just under the covers. And then, as part of the name suggests, reliable, autonomic object storage. Distributed object storage, the cluster heals. Self-heals, it's autonomic, and the replication is done automatically. You don't have to worry about how any of that works. So what's an object? The object storage device is composed of a number of objects, and that is the logical unit you have when you're storing things in RATOS. An object is composed of three different parts. You can use one or all. They have the data blob, which is analogous to, like, a regular file. Like, you put data in the file, you get data out of the file. You have key value X-Satters. This is sort of an older technology that was used in the early days with CEPFS for storing certain information about files, which is typically very small data. It's not usually used anymore, except in some parts of CEPFS. Now, the key value store that's used most often in CEPFS, also RGW, is OMAP, and that is much more of a general purpose key value store used today. So this is how you interact with RATOS through these objects. Now, it's not that simple to take, like, a number of objects, distribute all over the cluster and try to build something with that, because you've got consistency issues that you have to deal with. You've got to manage how you're going to stripe the data across all these objects, which is why we have these more popular abstractions that I talked about, CEPFS, RBD, RGW, which is how you typically interact with RATOS. So what I'm going to talk about today is a SQLite library that operates alongside these other three storage abstractions, gives you something on top of LibRATOS, but you can also now run SQL on CEPFS. So how do you typically do application storage on RATOS? Well, we have various bindings you can use to talk to RATOS. We have the typical CC++ bindings, which are part of the broader project, also used within CEPFS. We also have a Python interface, which is used for manipulating the objects. That's somewhat used in the broader community for various projects, but also within CEPFS we use it for some of the new CEPFS manager daemon, which I'll talk about more later. And again, it's not that simple to stripe data across the objects, which is why we have these other abstractions. One of the more notable exceptions is this LibRATOS striper, which is one of the ways you can create a file concept on top of objects, where you open and close, read and write and sync to a number of objects, and it looks like a regular file. That was developed by some folks at CERN, and it's mostly, I think, in terms of use, it's stayed confined to that space. Well, even though we do have these other storage abstractions, it's still useful to talk to RATOS directly, because sometimes you want to do something that is not dependent on these other storage abstractions, which may, in the case of within CEPFS internals, may not actually be available, which is why a number of CEPFS manager plugins, the CEPFS manager has a number of Python modules, and they talk directly to RATOS. So this was something I wanted to address, because it was a little bit awkward, and I'll talk about that more. So a quick overview of SQLite. For those who've never used it before, it's a user application library for allowing you, the X is a SQL engine, and lets you store a SQL database as a regular file, usually two files. It'll be a journal, and then the database object itself. And depending on how you use it, the journal is transient, may come and go. It's widely recognized as one of the most used SQLite engines in the world. It's very popular. They estimate on their website, there's billions of SQLite databases in use. It's at least tens of billions at this point, because it's in every Android phone. So it was easy choice to make. It's a very simple library, and bindings exist for numerous SQL systems. In particular, of interest to me, was Python. Actually, extending SQLites is fairly simple. They have this VFS concept, virtual file system concept. It lets you swap in different virtual file systems as needed. The basic one is the UNIX VFS that's what comes with SQLite by default, and it's very intuitive. It just passes on open, read, write, closed off to the local file system for execution. So Libsef SQLite is a library for a SQLite VFS library that lets you put a database, SQLite database in RATOS. It's composed of two parts. Libsef SQLite and simple RATOS striper. I'll talk about simple RATOS striper on the next slide. The use of this library does not require any application modification, and that's kind of like the killer feature here, because you can just set some environment variables and modify the database URI, and you can automatically start storing your database in SEF. And all of these, you know, the journal objects, the database objects are striped across the OSDs. You don't need to do anything differently. The simple RATOS striper is based loosely off of the Lib RATOS striper developed by CERN. The main reason I didn't end up using CERN's library was because it had some locking behavior that was not really desirable for a highly asynchronous use case, and I didn't want to modify their library out from under their feet, so I just wrote a simple version. It provides the primitives that SQLite needs, open, read, write, close, sync, and all the writes are done asynchronously, and then the sync call that comes from SQLite actually flushes them all out. So these are all stored across RATOS with these names, you know, foo.db, and it's got like the block number associated with the database, and so on. Using LibSeph SQLite, again, it's very easy. You just have to load a VFS library. This is done with the SQLite command.loadLibSephSQLite, and then you just provide a URI for the database. This is the pool ID or the pool name, the namespace within that pool, which is optional, and then you give the database a name and specify the VFS is Seph, and that's it. It just works. You may have to specify some environment variables if you're using the SQLite binary to give it, tell it which Seph cluster to use, or which Seph configs to read, things like that, but that's all fairly unobtrusive, not obtrusive. Within the Seph manager, so the Seph manager is one of the newer demons in Seph that takes care of certain details of managing your Seph cluster and trying to provide easier interfaces. A particular interest to us is one that handles health metrics that come from the OSDs, giving the Seph manager information about the smart data associated with the disks, being able to anticipate failures in disks, again, Seph trying to reduce the management burden of storage clusters, and then also a portal to higher level commands like managing volumes within Seph that is a subvolume concept that's used by OpenStack or Kubernetes, CSI. Within the Seph manager demon, what I observed was that there were several modules that were just storing data in the OMAP key value of a particular object, and it turned out this doesn't scale very well. We know it won't scale well because if you have more than 10,000 key value pairs in a single object, the performance starts to degrade. In fact, you'll start getting cluster warnings that there's objects with too many key value pairs. So it was also pretty awkward in terms of how it was being used, and just by how we were managing the data, it was a perfect match for a SQL database, except it was not very easy to put a SQL database on Seph at the time. In fact, Jan here worked on SNAP schedule, which is a module for creating snapshots and maintaining snapshots in Seph FS and handling retention policies, and that actually used a SQL database that was flushed to RATOS objects and then loaded in anticipation of the project that I'm working on now, and that's all been updated now to use this of Seph SQLite library. All right. So in terms of how it actually looks within the Seph manager, on the left we have a schema. It's fairly simple. Just creating a table with the device ID as the primary key, and then another table with device health metrics. With the time we got the metrics, the device ID associated with that metric, and then the raw smart text. And then they actually put the device metrics in the database. It's as simple as this. Within the manager I've taken out a few unnecessary lines just for space or unnecessary keywords for space in the SQL. You create the device ID, which just calls another SQL statement to insert into this table, and actually execute the SQL statement with the Epic dev ID and data. It's that simple. And now that's stored, persisted, and RATOS. So here's a quick Libsep SQLite in action series of gifts I've created. Here we're running the Seph status command, just showing us the state of the cluster. We have two pools right now, a.manager and an A pool that I'm creating for this demo. Here I'm purging A just to show that there's nothing in it. It removed one object. And here I'm just listing all the objects within this pool. There's none because I just purged it. So that's just a starter. And then here we're actually going to run the Libsep SQLite. So to do that, again, I mentioned there were some environment variables. If I'm using the SQLite command directly, I have to specify some environment variables. So the library knows what to do. Here, because this is a dev cluster, I have to tell it to use the library path associated with my build. I specify which Seph config to load, which key ring associated with the admin user that I'm going to specify here. I was actually going to also add some logging data, but I ended up not doing that, just to save space. And then here I'm actually running a SQLite command. I'm loading the Libsep SQLite library. That's one of the first command that Libsep SQLite is going to run. And here I'm opening a database in pool A, namespace B within that pool, and then a database named a.db with vfsf. All right, now I'm in SQLite. Here I create a simple table with an integer column. There's the schema, exactly what I wrote. And then we're going to insert into the table one value and then dump it. So it's now in RATOS. And now just to confirm that, I'm going to run the RATOS command on the pool A, list all the objects in the pool. You can see namespace B. I have this a.db. So now I'm going to use this striper command. I'm actually, if this database were composed of many objects, you can use the striper command to actually pull the database out. And you can see here I've done that. It's an 8k database. It's small because there's just one table with one value. And I loaded that locally. I pulled it out of RATOS. Sorry, the GIF loops. I pulled it out of RATOS. And then I now have the database as a local file. I ran SQLite on that local file database. And just dumped it to confirm that it actually wrote the data out to RATOS correctly. And I can pull it out of RATOS and verify that it actually worked. So here's another demo with just rerunning the same SQLite command I had earlier. And sorry, this is going to be a big paste. But I'm creating a table. This is just some magic in SQLite to basically create an infinite loop. And I'm just going to insert a number. I think it's 100,000 integers into the table. And just see how many objects are in the database now. There's four objects composed of that database. So I think for time reasons, I'm not going to go through the performance notes, but it's on the slide if you want to look at it later. And just as a retrospective for Quincy, when the database got used live, it's being used in the two manager modules right now, the device health and the SNAP scheduling module. It's been fairly successful. We had a few minor hiccups that weren't really too much related to the library. And just for some future work, I want to add support for supporting concurrent readers. That's not yet possible right now. All readers and writers obtained exclusive locks when accessing the database. But there's not a technical reason why we can't add concurrent reader support. And then I also want to look at adding read-ahead performance, improving read-ahead performance. Because right now every read call in Libsef SQLite is synchronous. So that's the end of my talk. Thank you. Do we have any time for questions? Sorry, no time for questions to this session. You have to find Patrick and I'll send him.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 26.0, "text": " Okay, welcome everyone, starting with the next session, so yeah, try to find a place,", "tokens": [1033, 11, 2928, 1518, 11, 2891, 365, 264, 958, 5481, 11, 370, 1338, 11, 853, 281, 915, 257, 1081, 11], "temperature": 0.0, "avg_logprob": -0.6344393491744995, "compression_ratio": 1.0897435897435896, "no_speech_prob": 0.5788858532905579}, {"id": 1, "seek": 2600, "start": 26.0, "end": 32.0, "text": " if you're free to use the reserved spaces if nobody comes. Let's welcome Patrick on the", "tokens": [498, 291, 434, 1737, 281, 764, 264, 24819, 7673, 498, 5079, 1487, 13, 961, 311, 2928, 13980, 322, 264], "temperature": 0.0, "avg_logprob": -0.2621274511498141, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.0002447057922836393}, {"id": 2, "seek": 2600, "start": 32.0, "end": 36.0, "text": " talk on SQL on stuff like this.", "tokens": [751, 322, 19200, 322, 1507, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.2621274511498141, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.0002447057922836393}, {"id": 3, "seek": 2600, "start": 36.0, "end": 44.0, "text": " Alright, hey everybody, I'm Patrick Donnelly, I know I got Red Hat slides up, but I'm actually", "tokens": [2798, 11, 4177, 2201, 11, 286, 478, 13980, 1468, 8903, 88, 11, 286, 458, 286, 658, 4477, 15867, 9788, 493, 11, 457, 286, 478, 767], "temperature": 0.0, "avg_logprob": -0.2621274511498141, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.0002447057922836393}, {"id": 4, "seek": 2600, "start": 44.0, "end": 49.0, "text": " part of the storage group at Red Hat that got moved over to IBM as of this year, so technically", "tokens": [644, 295, 264, 6725, 1594, 412, 4477, 15867, 300, 658, 4259, 670, 281, 23487, 382, 295, 341, 1064, 11, 370, 12120], "temperature": 0.0, "avg_logprob": -0.2621274511498141, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.0002447057922836393}, {"id": 5, "seek": 4900, "start": 49.0, "end": 56.0, "text": " I'm at IBM now, if that matters for anybody who wants to ask me questions. Today I'm talking", "tokens": [286, 478, 412, 23487, 586, 11, 498, 300, 7001, 337, 4472, 567, 2738, 281, 1029, 385, 1651, 13, 2692, 286, 478, 1417], "temperature": 0.0, "avg_logprob": -0.1592944037054003, "compression_ratio": 1.5060728744939271, "no_speech_prob": 3.881503289449029e-05}, {"id": 6, "seek": 4900, "start": 56.0, "end": 63.0, "text": " about SQL on CIF, it's kind of a small project that started about two years ago, it was actually", "tokens": [466, 19200, 322, 383, 12775, 11, 309, 311, 733, 295, 257, 1359, 1716, 300, 1409, 466, 732, 924, 2057, 11, 309, 390, 767], "temperature": 0.0, "avg_logprob": -0.1592944037054003, "compression_ratio": 1.5060728744939271, "no_speech_prob": 3.881503289449029e-05}, {"id": 7, "seek": 4900, "start": 63.0, "end": 71.0, "text": " a COVID project for me while I was dealing with the newborn baby that had lots of, or", "tokens": [257, 4566, 1716, 337, 385, 1339, 286, 390, 6260, 365, 264, 32928, 3186, 300, 632, 3195, 295, 11, 420], "temperature": 0.0, "avg_logprob": -0.1592944037054003, "compression_ratio": 1.5060728744939271, "no_speech_prob": 3.881503289449029e-05}, {"id": 8, "seek": 4900, "start": 71.0, "end": 77.0, "text": " some time on my hands, but anyway, this is kind of like an overview for what we're going to talk", "tokens": [512, 565, 322, 452, 2377, 11, 457, 4033, 11, 341, 307, 733, 295, 411, 364, 12492, 337, 437, 321, 434, 516, 281, 751], "temperature": 0.0, "avg_logprob": -0.1592944037054003, "compression_ratio": 1.5060728744939271, "no_speech_prob": 3.881503289449029e-05}, {"id": 9, "seek": 7700, "start": 77.0, "end": 84.0, "text": " about. Yeah, go ahead. Yeah, I do.", "tokens": [466, 13, 865, 11, 352, 2286, 13, 865, 11, 286, 360, 13], "temperature": 0.0, "avg_logprob": -0.1630628564384546, "compression_ratio": 1.5, "no_speech_prob": 3.763262793654576e-05}, {"id": 10, "seek": 7700, "start": 84.0, "end": 87.0, "text": " We don't have a PA, unfortunately.", "tokens": [492, 500, 380, 362, 257, 17718, 11, 7015, 13], "temperature": 0.0, "avg_logprob": -0.1630628564384546, "compression_ratio": 1.5, "no_speech_prob": 3.763262793654576e-05}, {"id": 11, "seek": 7700, "start": 87.0, "end": 94.0, "text": " Oh, yeah, I just have to speak up, so I'm naturally soft spoken, so if you can't hear me in the back,", "tokens": [876, 11, 1338, 11, 286, 445, 362, 281, 1710, 493, 11, 370, 286, 478, 8195, 2787, 10759, 11, 370, 498, 291, 393, 380, 1568, 385, 294, 264, 646, 11], "temperature": 0.0, "avg_logprob": -0.1630628564384546, "compression_ratio": 1.5, "no_speech_prob": 3.763262793654576e-05}, {"id": 12, "seek": 7700, "start": 94.0, "end": 97.0, "text": " just wave your hand and I'll try to speak up more, okay?", "tokens": [445, 5772, 428, 1011, 293, 286, 603, 853, 281, 1710, 493, 544, 11, 1392, 30], "temperature": 0.0, "avg_logprob": -0.1630628564384546, "compression_ratio": 1.5, "no_speech_prob": 3.763262793654576e-05}, {"id": 13, "seek": 7700, "start": 97.0, "end": 103.0, "text": " I'm okay right now, alright. Where was I?", "tokens": [286, 478, 1392, 558, 586, 11, 5845, 13, 2305, 390, 286, 30], "temperature": 0.0, "avg_logprob": -0.1630628564384546, "compression_ratio": 1.5, "no_speech_prob": 3.763262793654576e-05}, {"id": 14, "seek": 10300, "start": 103.0, "end": 110.0, "text": " So just a quick canvassing the audience, who's used CIF before?", "tokens": [407, 445, 257, 1702, 393, 85, 42705, 264, 4034, 11, 567, 311, 1143, 383, 12775, 949, 30], "temperature": 0.0, "avg_logprob": -0.10871581828340571, "compression_ratio": 1.4549763033175356, "no_speech_prob": 4.565429208014393e-06}, {"id": 15, "seek": 10300, "start": 110.0, "end": 116.0, "text": " Oh, wow, okay. Who's used SQLite before?", "tokens": [876, 11, 6076, 11, 1392, 13, 2102, 311, 1143, 19200, 642, 949, 30], "temperature": 0.0, "avg_logprob": -0.10871581828340571, "compression_ratio": 1.4549763033175356, "no_speech_prob": 4.565429208014393e-06}, {"id": 16, "seek": 10300, "start": 116.0, "end": 120.0, "text": " Fewer people, that's interesting, okay, but not much fewer.", "tokens": [33468, 260, 561, 11, 300, 311, 1880, 11, 1392, 11, 457, 406, 709, 13366, 13], "temperature": 0.0, "avg_logprob": -0.10871581828340571, "compression_ratio": 1.4549763033175356, "no_speech_prob": 4.565429208014393e-06}, {"id": 17, "seek": 10300, "start": 120.0, "end": 127.0, "text": " Alright, so I'm going to quickly talk about CIF and what it is.", "tokens": [2798, 11, 370, 286, 478, 516, 281, 2661, 751, 466, 383, 12775, 293, 437, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.10871581828340571, "compression_ratio": 1.4549763033175356, "no_speech_prob": 4.565429208014393e-06}, {"id": 18, "seek": 10300, "start": 127.0, "end": 131.0, "text": " I won't spend too much time on it due to the time I have available in my talk.", "tokens": [286, 1582, 380, 3496, 886, 709, 565, 322, 309, 3462, 281, 264, 565, 286, 362, 2435, 294, 452, 751, 13], "temperature": 0.0, "avg_logprob": -0.10871581828340571, "compression_ratio": 1.4549763033175356, "no_speech_prob": 4.565429208014393e-06}, {"id": 19, "seek": 13100, "start": 131.0, "end": 135.0, "text": " I'll give you a brief introduction to RATOS for anyone who's not familiar with it.", "tokens": [286, 603, 976, 291, 257, 5353, 9339, 281, 497, 2218, 4367, 337, 2878, 567, 311, 406, 4963, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.14563298732676405, "compression_ratio": 1.616504854368932, "no_speech_prob": 4.13288980780635e-05}, {"id": 20, "seek": 13100, "start": 135.0, "end": 138.0, "text": " Then I'm going to talk a little bit about SQLite.", "tokens": [1396, 286, 478, 516, 281, 751, 257, 707, 857, 466, 19200, 642, 13], "temperature": 0.0, "avg_logprob": -0.14563298732676405, "compression_ratio": 1.616504854368932, "no_speech_prob": 4.13288980780635e-05}, {"id": 21, "seek": 13100, "start": 138.0, "end": 144.0, "text": " Then some typical storage patterns we use for storing data on RATOS.", "tokens": [1396, 512, 7476, 6725, 8294, 321, 764, 337, 26085, 1412, 322, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.14563298732676405, "compression_ratio": 1.616504854368932, "no_speech_prob": 4.13288980780635e-05}, {"id": 22, "seek": 13100, "start": 144.0, "end": 150.0, "text": " I'll give you an introduction to this new library, LibCefSQLite.", "tokens": [286, 603, 976, 291, 364, 9339, 281, 341, 777, 6405, 11, 15834, 34, 5666, 39934, 642, 13], "temperature": 0.0, "avg_logprob": -0.14563298732676405, "compression_ratio": 1.616504854368932, "no_speech_prob": 4.13288980780635e-05}, {"id": 23, "seek": 13100, "start": 150.0, "end": 157.0, "text": " And then I'm going to talk about how we use that today within CIF,", "tokens": [400, 550, 286, 478, 516, 281, 751, 466, 577, 321, 764, 300, 965, 1951, 383, 12775, 11], "temperature": 0.0, "avg_logprob": -0.14563298732676405, "compression_ratio": 1.616504854368932, "no_speech_prob": 4.13288980780635e-05}, {"id": 24, "seek": 15700, "start": 157.0, "end": 162.0, "text": " just to show that this library is not being used by anyone.", "tokens": [445, 281, 855, 300, 341, 6405, 307, 406, 885, 1143, 538, 2878, 13], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 25, "seek": 15700, "start": 162.0, "end": 166.0, "text": " Although I am interested if anyone's using it in the community.", "tokens": [5780, 286, 669, 3102, 498, 2878, 311, 1228, 309, 294, 264, 1768, 13], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 26, "seek": 15700, "start": 166.0, "end": 170.0, "text": " I'll give you a brief, go through a brief tutorial,", "tokens": [286, 603, 976, 291, 257, 5353, 11, 352, 807, 257, 5353, 7073, 11], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 27, "seek": 15700, "start": 170.0, "end": 173.0, "text": " an interactive tutorial using the library,", "tokens": [364, 15141, 7073, 1228, 264, 6405, 11], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 28, "seek": 15700, "start": 173.0, "end": 179.0, "text": " and then I'll end the talk with some retrospective and talk about future work.", "tokens": [293, 550, 286, 603, 917, 264, 751, 365, 512, 34997, 488, 293, 751, 466, 2027, 589, 13], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 29, "seek": 15700, "start": 179.0, "end": 181.0, "text": " So what's CIF?", "tokens": [407, 437, 311, 383, 12775, 30], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 30, "seek": 15700, "start": 181.0, "end": 184.0, "text": " CIF is an ecosystem for distributed object storage.", "tokens": [383, 12775, 307, 364, 11311, 337, 12631, 2657, 6725, 13], "temperature": 0.0, "avg_logprob": -0.10538285907946135, "compression_ratio": 1.5964912280701755, "no_speech_prob": 6.33810623185127e-06}, {"id": 31, "seek": 18400, "start": 184.0, "end": 192.0, "text": " It's composed of numerous projects centered around managing a large storage cluster.", "tokens": [467, 311, 18204, 295, 12546, 4455, 18988, 926, 11642, 257, 2416, 6725, 13630, 13], "temperature": 0.0, "avg_logprob": -0.06514858657663519, "compression_ratio": 1.4841628959276019, "no_speech_prob": 4.537323911790736e-05}, {"id": 32, "seek": 18400, "start": 192.0, "end": 197.0, "text": " The underpinning of CIF is RATOS, which I'll talk about on the next slide,", "tokens": [440, 833, 17836, 773, 295, 383, 12775, 307, 497, 2218, 4367, 11, 597, 286, 603, 751, 466, 322, 264, 958, 4137, 11], "temperature": 0.0, "avg_logprob": -0.06514858657663519, "compression_ratio": 1.4841628959276019, "no_speech_prob": 4.537323911790736e-05}, {"id": 33, "seek": 18400, "start": 197.0, "end": 200.0, "text": " but it's basically a distributed object store.", "tokens": [457, 309, 311, 1936, 257, 12631, 2657, 3531, 13], "temperature": 0.0, "avg_logprob": -0.06514858657663519, "compression_ratio": 1.4841628959276019, "no_speech_prob": 4.537323911790736e-05}, {"id": 34, "seek": 18400, "start": 200.0, "end": 204.0, "text": " Most people don't use it, use RATOS directly.", "tokens": [4534, 561, 500, 380, 764, 309, 11, 764, 497, 2218, 4367, 3838, 13], "temperature": 0.0, "avg_logprob": -0.06514858657663519, "compression_ratio": 1.4841628959276019, "no_speech_prob": 4.537323911790736e-05}, {"id": 35, "seek": 18400, "start": 204.0, "end": 208.0, "text": " What they use instead is the storage abstractions we built on top of RATOS,", "tokens": [708, 436, 764, 2602, 307, 264, 6725, 12649, 626, 321, 3094, 322, 1192, 295, 497, 2218, 4367, 11], "temperature": 0.0, "avg_logprob": -0.06514858657663519, "compression_ratio": 1.4841628959276019, "no_speech_prob": 4.537323911790736e-05}, {"id": 36, "seek": 20800, "start": 208.0, "end": 214.0, "text": " which provide the more popular storage mechanisms that people are familiar with,", "tokens": [597, 2893, 264, 544, 3743, 6725, 15902, 300, 561, 366, 4963, 365, 11], "temperature": 0.0, "avg_logprob": -0.07969891087392743, "compression_ratio": 1.537117903930131, "no_speech_prob": 4.5385240809991956e-05}, {"id": 37, "seek": 20800, "start": 214.0, "end": 218.0, "text": " including CIFFS, which gives you your file storage as a distributed file system,", "tokens": [3009, 383, 12775, 29318, 11, 597, 2709, 291, 428, 3991, 6725, 382, 257, 12631, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.07969891087392743, "compression_ratio": 1.537117903930131, "no_speech_prob": 4.5385240809991956e-05}, {"id": 38, "seek": 20800, "start": 218.0, "end": 224.0, "text": " RGW, providing the S3 object storage gateway,", "tokens": [497, 38, 54, 11, 6530, 264, 318, 18, 2657, 6725, 28532, 11], "temperature": 0.0, "avg_logprob": -0.07969891087392743, "compression_ratio": 1.537117903930131, "no_speech_prob": 4.5385240809991956e-05}, {"id": 39, "seek": 20800, "start": 224.0, "end": 230.0, "text": " and RBD, which gives you your block device storage on top of RATOS.", "tokens": [293, 40302, 35, 11, 597, 2709, 291, 428, 3461, 4302, 6725, 322, 1192, 295, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.07969891087392743, "compression_ratio": 1.537117903930131, "no_speech_prob": 4.5385240809991956e-05}, {"id": 40, "seek": 20800, "start": 230.0, "end": 235.0, "text": " CIF has kind of evolved more and more recently to become more user-friendly.", "tokens": [383, 12775, 575, 733, 295, 14178, 544, 293, 544, 3938, 281, 1813, 544, 4195, 12, 22864, 13], "temperature": 0.0, "avg_logprob": -0.07969891087392743, "compression_ratio": 1.537117903930131, "no_speech_prob": 4.5385240809991956e-05}, {"id": 41, "seek": 23500, "start": 235.0, "end": 239.0, "text": " If you had maybe poor experiences in the past with CIF,", "tokens": [759, 291, 632, 1310, 4716, 5235, 294, 264, 1791, 365, 383, 12775, 11], "temperature": 0.0, "avg_logprob": -0.06267186757680532, "compression_ratio": 1.5829145728643217, "no_speech_prob": 3.9423724956577644e-05}, {"id": 42, "seek": 23500, "start": 239.0, "end": 241.0, "text": " I encourage you to give it another shot.", "tokens": [286, 5373, 291, 281, 976, 309, 1071, 3347, 13], "temperature": 0.0, "avg_logprob": -0.06267186757680532, "compression_ratio": 1.5829145728643217, "no_speech_prob": 3.9423724956577644e-05}, {"id": 43, "seek": 23500, "start": 241.0, "end": 248.0, "text": " The dev team has dedicated a lot of time recently to improving the user experience,", "tokens": [440, 1905, 1469, 575, 8374, 257, 688, 295, 565, 3938, 281, 11470, 264, 4195, 1752, 11], "temperature": 0.0, "avg_logprob": -0.06267186757680532, "compression_ratio": 1.5829145728643217, "no_speech_prob": 3.9423724956577644e-05}, {"id": 44, "seek": 23500, "start": 248.0, "end": 257.0, "text": " and also taking the hassle out of managing your storage cluster out of the experience.", "tokens": [293, 611, 1940, 264, 39526, 484, 295, 11642, 428, 6725, 13630, 484, 295, 264, 1752, 13], "temperature": 0.0, "avg_logprob": -0.06267186757680532, "compression_ratio": 1.5829145728643217, "no_speech_prob": 3.9423724956577644e-05}, {"id": 45, "seek": 23500, "start": 257.0, "end": 261.0, "text": " There are things like monitoring device health.", "tokens": [821, 366, 721, 411, 11028, 4302, 1585, 13], "temperature": 0.0, "avg_logprob": -0.06267186757680532, "compression_ratio": 1.5829145728643217, "no_speech_prob": 3.9423724956577644e-05}, {"id": 46, "seek": 26100, "start": 261.0, "end": 266.0, "text": " We now have a very mature dashboard for interacting with the CIF cluster,", "tokens": [492, 586, 362, 257, 588, 14442, 18342, 337, 18017, 365, 264, 383, 12775, 13630, 11], "temperature": 0.0, "avg_logprob": -0.07575307495292576, "compression_ratio": 1.5091743119266054, "no_speech_prob": 2.7525687983143143e-05}, {"id": 47, "seek": 26100, "start": 266.0, "end": 272.0, "text": " and the cluster management itself is now largely being done through CIFADM,", "tokens": [293, 264, 13630, 4592, 2564, 307, 586, 11611, 885, 1096, 807, 383, 12775, 6112, 44, 11], "temperature": 0.0, "avg_logprob": -0.07575307495292576, "compression_ratio": 1.5091743119266054, "no_speech_prob": 2.7525687983143143e-05}, {"id": 48, "seek": 26100, "start": 272.0, "end": 276.0, "text": " which, as you saw in the previous talk,", "tokens": [597, 11, 382, 291, 1866, 294, 264, 3894, 751, 11], "temperature": 0.0, "avg_logprob": -0.07575307495292576, "compression_ratio": 1.5091743119266054, "no_speech_prob": 2.7525687983143143e-05}, {"id": 49, "seek": 26100, "start": 276.0, "end": 282.0, "text": " you can start up a CIF cluster with just a simple command and then start adding hosts to it.", "tokens": [291, 393, 722, 493, 257, 383, 12775, 13630, 365, 445, 257, 2199, 5622, 293, 550, 722, 5127, 21573, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.07575307495292576, "compression_ratio": 1.5091743119266054, "no_speech_prob": 2.7525687983143143e-05}, {"id": 50, "seek": 26100, "start": 282.0, "end": 286.0, "text": " It's never been simpler.", "tokens": [467, 311, 1128, 668, 18587, 13], "temperature": 0.0, "avg_logprob": -0.07575307495292576, "compression_ratio": 1.5091743119266054, "no_speech_prob": 2.7525687983143143e-05}, {"id": 51, "seek": 26100, "start": 286.0, "end": 288.0, "text": " Oops, went backwards.", "tokens": [21726, 11, 1437, 12204, 13], "temperature": 0.0, "avg_logprob": -0.07575307495292576, "compression_ratio": 1.5091743119266054, "no_speech_prob": 2.7525687983143143e-05}, {"id": 52, "seek": 28800, "start": 288.0, "end": 295.0, "text": " So what's RATOS? RATOS is a number of object storage demons that run on physical disks.", "tokens": [407, 437, 311, 497, 2218, 4367, 30, 497, 2218, 4367, 307, 257, 1230, 295, 2657, 6725, 19733, 300, 1190, 322, 4001, 41617, 13], "temperature": 0.0, "avg_logprob": -0.08538131923465939, "compression_ratio": 1.53125, "no_speech_prob": 1.4967265997256618e-05}, {"id": 53, "seek": 28800, "start": 295.0, "end": 299.0, "text": " They can be hard disks, SSDs, and VMEs.", "tokens": [814, 393, 312, 1152, 41617, 11, 30262, 82, 11, 293, 691, 15454, 82, 13], "temperature": 0.0, "avg_logprob": -0.08538131923465939, "compression_ratio": 1.53125, "no_speech_prob": 1.4967265997256618e-05}, {"id": 54, "seek": 28800, "start": 299.0, "end": 303.0, "text": " On top of these object storage devices, we have this concept of pools,", "tokens": [1282, 1192, 295, 613, 2657, 6725, 5759, 11, 321, 362, 341, 3410, 295, 28688, 11], "temperature": 0.0, "avg_logprob": -0.08538131923465939, "compression_ratio": 1.53125, "no_speech_prob": 1.4967265997256618e-05}, {"id": 55, "seek": 28800, "start": 303.0, "end": 306.0, "text": " which allows you to have various administrative policies", "tokens": [597, 4045, 291, 281, 362, 3683, 17900, 7657], "temperature": 0.0, "avg_logprob": -0.08538131923465939, "compression_ratio": 1.53125, "no_speech_prob": 1.4967265997256618e-05}, {"id": 56, "seek": 28800, "start": 306.0, "end": 309.0, "text": " regarding what kind of hardware the pool should use,", "tokens": [8595, 437, 733, 295, 8837, 264, 7005, 820, 764, 11], "temperature": 0.0, "avg_logprob": -0.08538131923465939, "compression_ratio": 1.53125, "no_speech_prob": 1.4967265997256618e-05}, {"id": 57, "seek": 28800, "start": 309.0, "end": 312.0, "text": " how the data should be replicated.", "tokens": [577, 264, 1412, 820, 312, 46365, 13], "temperature": 0.0, "avg_logprob": -0.08538131923465939, "compression_ratio": 1.53125, "no_speech_prob": 1.4967265997256618e-05}, {"id": 58, "seek": 31200, "start": 312.0, "end": 319.0, "text": " Clients of RATOS talk directly to the primary object storage device for a given object,", "tokens": [2033, 2448, 295, 497, 2218, 4367, 751, 3838, 281, 264, 6194, 2657, 6725, 4302, 337, 257, 2212, 2657, 11], "temperature": 0.0, "avg_logprob": -0.12484998481218205, "compression_ratio": 1.5871559633027523, "no_speech_prob": 7.07123035681434e-06}, {"id": 59, "seek": 31200, "start": 319.0, "end": 324.0, "text": " and you can look up which object storage device an object belongs to in constant time", "tokens": [293, 291, 393, 574, 493, 597, 2657, 6725, 4302, 364, 2657, 12953, 281, 294, 5754, 565], "temperature": 0.0, "avg_logprob": -0.12484998481218205, "compression_ratio": 1.5871559633027523, "no_speech_prob": 7.07123035681434e-06}, {"id": 60, "seek": 31200, "start": 324.0, "end": 327.0, "text": " using a library called crush.", "tokens": [1228, 257, 6405, 1219, 10321, 13], "temperature": 0.0, "avg_logprob": -0.12484998481218205, "compression_ratio": 1.5871559633027523, "no_speech_prob": 7.07123035681434e-06}, {"id": 61, "seek": 31200, "start": 327.0, "end": 332.0, "text": " You don't need to use that directly. That's just under the covers.", "tokens": [509, 500, 380, 643, 281, 764, 300, 3838, 13, 663, 311, 445, 833, 264, 10538, 13], "temperature": 0.0, "avg_logprob": -0.12484998481218205, "compression_ratio": 1.5871559633027523, "no_speech_prob": 7.07123035681434e-06}, {"id": 62, "seek": 31200, "start": 332.0, "end": 339.0, "text": " And then, as part of the name suggests, reliable, autonomic object storage.", "tokens": [400, 550, 11, 382, 644, 295, 264, 1315, 13409, 11, 12924, 11, 18203, 299, 2657, 6725, 13], "temperature": 0.0, "avg_logprob": -0.12484998481218205, "compression_ratio": 1.5871559633027523, "no_speech_prob": 7.07123035681434e-06}, {"id": 63, "seek": 33900, "start": 339.0, "end": 342.0, "text": " Distributed object storage, the cluster heals.", "tokens": [9840, 2024, 4866, 2657, 6725, 11, 264, 13630, 45653, 13], "temperature": 0.0, "avg_logprob": -0.10290407604641384, "compression_ratio": 1.5255813953488373, "no_speech_prob": 1.1478059604996815e-05}, {"id": 64, "seek": 33900, "start": 342.0, "end": 347.0, "text": " Self-heals, it's autonomic, and the replication is done automatically.", "tokens": [16348, 12, 675, 1124, 11, 309, 311, 18203, 299, 11, 293, 264, 39911, 307, 1096, 6772, 13], "temperature": 0.0, "avg_logprob": -0.10290407604641384, "compression_ratio": 1.5255813953488373, "no_speech_prob": 1.1478059604996815e-05}, {"id": 65, "seek": 33900, "start": 347.0, "end": 351.0, "text": " You don't have to worry about how any of that works.", "tokens": [509, 500, 380, 362, 281, 3292, 466, 577, 604, 295, 300, 1985, 13], "temperature": 0.0, "avg_logprob": -0.10290407604641384, "compression_ratio": 1.5255813953488373, "no_speech_prob": 1.1478059604996815e-05}, {"id": 66, "seek": 33900, "start": 351.0, "end": 356.0, "text": " So what's an object?", "tokens": [407, 437, 311, 364, 2657, 30], "temperature": 0.0, "avg_logprob": -0.10290407604641384, "compression_ratio": 1.5255813953488373, "no_speech_prob": 1.1478059604996815e-05}, {"id": 67, "seek": 33900, "start": 356.0, "end": 361.0, "text": " The object storage device is composed of a number of objects,", "tokens": [440, 2657, 6725, 4302, 307, 18204, 295, 257, 1230, 295, 6565, 11], "temperature": 0.0, "avg_logprob": -0.10290407604641384, "compression_ratio": 1.5255813953488373, "no_speech_prob": 1.1478059604996815e-05}, {"id": 68, "seek": 33900, "start": 361.0, "end": 367.0, "text": " and that is the logical unit you have when you're storing things in RATOS.", "tokens": [293, 300, 307, 264, 14978, 4985, 291, 362, 562, 291, 434, 26085, 721, 294, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.10290407604641384, "compression_ratio": 1.5255813953488373, "no_speech_prob": 1.1478059604996815e-05}, {"id": 69, "seek": 36700, "start": 367.0, "end": 371.0, "text": " An object is composed of three different parts. You can use one or all.", "tokens": [1107, 2657, 307, 18204, 295, 1045, 819, 3166, 13, 509, 393, 764, 472, 420, 439, 13], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 70, "seek": 36700, "start": 371.0, "end": 376.0, "text": " They have the data blob, which is analogous to, like, a regular file.", "tokens": [814, 362, 264, 1412, 46115, 11, 597, 307, 16660, 563, 281, 11, 411, 11, 257, 3890, 3991, 13], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 71, "seek": 36700, "start": 376.0, "end": 379.0, "text": " Like, you put data in the file, you get data out of the file.", "tokens": [1743, 11, 291, 829, 1412, 294, 264, 3991, 11, 291, 483, 1412, 484, 295, 264, 3991, 13], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 72, "seek": 36700, "start": 379.0, "end": 381.0, "text": " You have key value X-Satters.", "tokens": [509, 362, 2141, 2158, 1783, 12, 50, 267, 1559, 13], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 73, "seek": 36700, "start": 381.0, "end": 385.0, "text": " This is sort of an older technology that was used in the early days with CEPFS", "tokens": [639, 307, 1333, 295, 364, 4906, 2899, 300, 390, 1143, 294, 264, 2440, 1708, 365, 383, 8929, 29318], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 74, "seek": 36700, "start": 385.0, "end": 391.0, "text": " for storing certain information about files, which is typically very small data.", "tokens": [337, 26085, 1629, 1589, 466, 7098, 11, 597, 307, 5850, 588, 1359, 1412, 13], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 75, "seek": 36700, "start": 391.0, "end": 395.0, "text": " It's not usually used anymore, except in some parts of CEPFS.", "tokens": [467, 311, 406, 2673, 1143, 3602, 11, 3993, 294, 512, 3166, 295, 383, 8929, 29318, 13], "temperature": 0.0, "avg_logprob": -0.12057561492919922, "compression_ratio": 1.5909090909090908, "no_speech_prob": 2.5862578695523553e-05}, {"id": 76, "seek": 39500, "start": 395.0, "end": 402.0, "text": " Now, the key value store that's used most often in CEPFS, also RGW,", "tokens": [823, 11, 264, 2141, 2158, 3531, 300, 311, 1143, 881, 2049, 294, 383, 8929, 29318, 11, 611, 497, 38, 54, 11], "temperature": 0.0, "avg_logprob": -0.0991353988647461, "compression_ratio": 1.4890829694323144, "no_speech_prob": 3.119665416306816e-05}, {"id": 77, "seek": 39500, "start": 402.0, "end": 410.0, "text": " is OMAP, and that is much more of a general purpose key value store used today.", "tokens": [307, 16954, 4715, 11, 293, 300, 307, 709, 544, 295, 257, 2674, 4334, 2141, 2158, 3531, 1143, 965, 13], "temperature": 0.0, "avg_logprob": -0.0991353988647461, "compression_ratio": 1.4890829694323144, "no_speech_prob": 3.119665416306816e-05}, {"id": 78, "seek": 39500, "start": 410.0, "end": 415.0, "text": " So this is how you interact with RATOS through these objects.", "tokens": [407, 341, 307, 577, 291, 4648, 365, 497, 2218, 4367, 807, 613, 6565, 13], "temperature": 0.0, "avg_logprob": -0.0991353988647461, "compression_ratio": 1.4890829694323144, "no_speech_prob": 3.119665416306816e-05}, {"id": 79, "seek": 39500, "start": 415.0, "end": 419.0, "text": " Now, it's not that simple to take, like, a number of objects,", "tokens": [823, 11, 309, 311, 406, 300, 2199, 281, 747, 11, 411, 11, 257, 1230, 295, 6565, 11], "temperature": 0.0, "avg_logprob": -0.0991353988647461, "compression_ratio": 1.4890829694323144, "no_speech_prob": 3.119665416306816e-05}, {"id": 80, "seek": 39500, "start": 419.0, "end": 422.0, "text": " distribute all over the cluster and try to build something with that,", "tokens": [20594, 439, 670, 264, 13630, 293, 853, 281, 1322, 746, 365, 300, 11], "temperature": 0.0, "avg_logprob": -0.0991353988647461, "compression_ratio": 1.4890829694323144, "no_speech_prob": 3.119665416306816e-05}, {"id": 81, "seek": 42200, "start": 422.0, "end": 425.0, "text": " because you've got consistency issues that you have to deal with.", "tokens": [570, 291, 600, 658, 14416, 2663, 300, 291, 362, 281, 2028, 365, 13], "temperature": 0.0, "avg_logprob": -0.07210639287840645, "compression_ratio": 1.623015873015873, "no_speech_prob": 4.005062146461569e-05}, {"id": 82, "seek": 42200, "start": 425.0, "end": 429.0, "text": " You've got to manage how you're going to stripe the data across all these objects,", "tokens": [509, 600, 658, 281, 3067, 577, 291, 434, 516, 281, 42957, 264, 1412, 2108, 439, 613, 6565, 11], "temperature": 0.0, "avg_logprob": -0.07210639287840645, "compression_ratio": 1.623015873015873, "no_speech_prob": 4.005062146461569e-05}, {"id": 83, "seek": 42200, "start": 429.0, "end": 433.0, "text": " which is why we have these more popular abstractions that I talked about,", "tokens": [597, 307, 983, 321, 362, 613, 544, 3743, 12649, 626, 300, 286, 2825, 466, 11], "temperature": 0.0, "avg_logprob": -0.07210639287840645, "compression_ratio": 1.623015873015873, "no_speech_prob": 4.005062146461569e-05}, {"id": 84, "seek": 42200, "start": 433.0, "end": 438.0, "text": " CEPFS, RBD, RGW, which is how you typically interact with RATOS.", "tokens": [383, 8929, 29318, 11, 40302, 35, 11, 497, 38, 54, 11, 597, 307, 577, 291, 5850, 4648, 365, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.07210639287840645, "compression_ratio": 1.623015873015873, "no_speech_prob": 4.005062146461569e-05}, {"id": 85, "seek": 42200, "start": 438.0, "end": 443.0, "text": " So what I'm going to talk about today is a SQLite library", "tokens": [407, 437, 286, 478, 516, 281, 751, 466, 965, 307, 257, 19200, 642, 6405], "temperature": 0.0, "avg_logprob": -0.07210639287840645, "compression_ratio": 1.623015873015873, "no_speech_prob": 4.005062146461569e-05}, {"id": 86, "seek": 42200, "start": 443.0, "end": 448.0, "text": " that operates alongside these other three storage abstractions,", "tokens": [300, 22577, 12385, 613, 661, 1045, 6725, 12649, 626, 11], "temperature": 0.0, "avg_logprob": -0.07210639287840645, "compression_ratio": 1.623015873015873, "no_speech_prob": 4.005062146461569e-05}, {"id": 87, "seek": 44800, "start": 448.0, "end": 456.0, "text": " gives you something on top of LibRATOS, but you can also now run SQL on CEPFS.", "tokens": [2709, 291, 746, 322, 1192, 295, 15834, 49, 2218, 4367, 11, 457, 291, 393, 611, 586, 1190, 19200, 322, 383, 8929, 29318, 13], "temperature": 0.0, "avg_logprob": -0.0795340358086352, "compression_ratio": 1.5654008438818565, "no_speech_prob": 3.119689063169062e-05}, {"id": 88, "seek": 44800, "start": 456.0, "end": 461.0, "text": " So how do you typically do application storage on RATOS?", "tokens": [407, 577, 360, 291, 5850, 360, 3861, 6725, 322, 497, 2218, 4367, 30], "temperature": 0.0, "avg_logprob": -0.0795340358086352, "compression_ratio": 1.5654008438818565, "no_speech_prob": 3.119689063169062e-05}, {"id": 89, "seek": 44800, "start": 461.0, "end": 465.0, "text": " Well, we have various bindings you can use to talk to RATOS.", "tokens": [1042, 11, 321, 362, 3683, 14786, 1109, 291, 393, 764, 281, 751, 281, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.0795340358086352, "compression_ratio": 1.5654008438818565, "no_speech_prob": 3.119689063169062e-05}, {"id": 90, "seek": 44800, "start": 465.0, "end": 470.0, "text": " We have the typical CC++ bindings, which are part of the broader project,", "tokens": [492, 362, 264, 7476, 12630, 25472, 14786, 1109, 11, 597, 366, 644, 295, 264, 13227, 1716, 11], "temperature": 0.0, "avg_logprob": -0.0795340358086352, "compression_ratio": 1.5654008438818565, "no_speech_prob": 3.119689063169062e-05}, {"id": 91, "seek": 44800, "start": 470.0, "end": 472.0, "text": " also used within CEPFS.", "tokens": [611, 1143, 1951, 383, 8929, 29318, 13], "temperature": 0.0, "avg_logprob": -0.0795340358086352, "compression_ratio": 1.5654008438818565, "no_speech_prob": 3.119689063169062e-05}, {"id": 92, "seek": 44800, "start": 472.0, "end": 477.0, "text": " We also have a Python interface, which is used for manipulating the objects.", "tokens": [492, 611, 362, 257, 15329, 9226, 11, 597, 307, 1143, 337, 40805, 264, 6565, 13], "temperature": 0.0, "avg_logprob": -0.0795340358086352, "compression_ratio": 1.5654008438818565, "no_speech_prob": 3.119689063169062e-05}, {"id": 93, "seek": 47700, "start": 477.0, "end": 484.0, "text": " That's somewhat used in the broader community for various projects,", "tokens": [663, 311, 8344, 1143, 294, 264, 13227, 1768, 337, 3683, 4455, 11], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 94, "seek": 47700, "start": 484.0, "end": 488.0, "text": " but also within CEPFS we use it for some of the new CEPFS manager daemon,", "tokens": [457, 611, 1951, 383, 8929, 29318, 321, 764, 309, 337, 512, 295, 264, 777, 383, 8929, 29318, 6598, 1120, 36228, 11], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 95, "seek": 47700, "start": 488.0, "end": 490.0, "text": " which I'll talk about more later.", "tokens": [597, 286, 603, 751, 466, 544, 1780, 13], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 96, "seek": 47700, "start": 490.0, "end": 495.0, "text": " And again, it's not that simple to stripe data across the objects,", "tokens": [400, 797, 11, 309, 311, 406, 300, 2199, 281, 42957, 1412, 2108, 264, 6565, 11], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 97, "seek": 47700, "start": 495.0, "end": 497.0, "text": " which is why we have these other abstractions.", "tokens": [597, 307, 983, 321, 362, 613, 661, 12649, 626, 13], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 98, "seek": 47700, "start": 497.0, "end": 501.0, "text": " One of the more notable exceptions is this LibRATOS striper,", "tokens": [1485, 295, 264, 544, 22556, 22847, 307, 341, 15834, 49, 2218, 4367, 3575, 610, 11], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 99, "seek": 47700, "start": 501.0, "end": 506.0, "text": " which is one of the ways you can create a file concept on top of objects,", "tokens": [597, 307, 472, 295, 264, 2098, 291, 393, 1884, 257, 3991, 3410, 322, 1192, 295, 6565, 11], "temperature": 0.0, "avg_logprob": -0.07423355704859684, "compression_ratio": 1.618320610687023, "no_speech_prob": 2.0459037841646932e-05}, {"id": 100, "seek": 50600, "start": 506.0, "end": 513.0, "text": " where you open and close, read and write and sync to a number of objects,", "tokens": [689, 291, 1269, 293, 1998, 11, 1401, 293, 2464, 293, 20271, 281, 257, 1230, 295, 6565, 11], "temperature": 0.0, "avg_logprob": -0.11422746572921526, "compression_ratio": 1.3734939759036144, "no_speech_prob": 2.467274316586554e-05}, {"id": 101, "seek": 50600, "start": 513.0, "end": 515.0, "text": " and it looks like a regular file.", "tokens": [293, 309, 1542, 411, 257, 3890, 3991, 13], "temperature": 0.0, "avg_logprob": -0.11422746572921526, "compression_ratio": 1.3734939759036144, "no_speech_prob": 2.467274316586554e-05}, {"id": 102, "seek": 50600, "start": 515.0, "end": 517.0, "text": " That was developed by some folks at CERN,", "tokens": [663, 390, 4743, 538, 512, 4024, 412, 383, 1598, 45, 11], "temperature": 0.0, "avg_logprob": -0.11422746572921526, "compression_ratio": 1.3734939759036144, "no_speech_prob": 2.467274316586554e-05}, {"id": 103, "seek": 50600, "start": 517.0, "end": 531.0, "text": " and it's mostly, I think, in terms of use, it's stayed confined to that space.", "tokens": [293, 309, 311, 5240, 11, 286, 519, 11, 294, 2115, 295, 764, 11, 309, 311, 9181, 31745, 281, 300, 1901, 13], "temperature": 0.0, "avg_logprob": -0.11422746572921526, "compression_ratio": 1.3734939759036144, "no_speech_prob": 2.467274316586554e-05}, {"id": 104, "seek": 53100, "start": 531.0, "end": 536.0, "text": " Well, even though we do have these other storage abstractions,", "tokens": [1042, 11, 754, 1673, 321, 360, 362, 613, 661, 6725, 12649, 626, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 105, "seek": 53100, "start": 536.0, "end": 539.0, "text": " it's still useful to talk to RATOS directly,", "tokens": [309, 311, 920, 4420, 281, 751, 281, 497, 2218, 4367, 3838, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 106, "seek": 53100, "start": 539.0, "end": 543.0, "text": " because sometimes you want to do something that is not dependent", "tokens": [570, 2171, 291, 528, 281, 360, 746, 300, 307, 406, 12334], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 107, "seek": 53100, "start": 543.0, "end": 545.0, "text": " on these other storage abstractions,", "tokens": [322, 613, 661, 6725, 12649, 626, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 108, "seek": 53100, "start": 545.0, "end": 548.0, "text": " which may, in the case of within CEPFS internals,", "tokens": [597, 815, 11, 294, 264, 1389, 295, 1951, 383, 8929, 29318, 2154, 1124, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 109, "seek": 53100, "start": 548.0, "end": 550.0, "text": " may not actually be available,", "tokens": [815, 406, 767, 312, 2435, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 110, "seek": 53100, "start": 550.0, "end": 554.0, "text": " which is why a number of CEPFS manager plugins,", "tokens": [597, 307, 983, 257, 1230, 295, 383, 8929, 29318, 6598, 33759, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 111, "seek": 53100, "start": 554.0, "end": 558.0, "text": " the CEPFS manager has a number of Python modules,", "tokens": [264, 383, 8929, 29318, 6598, 575, 257, 1230, 295, 15329, 16679, 11], "temperature": 0.0, "avg_logprob": -0.07225934891473679, "compression_ratio": 1.6943231441048034, "no_speech_prob": 1.5202224858512636e-05}, {"id": 112, "seek": 55800, "start": 558.0, "end": 561.0, "text": " and they talk directly to RATOS.", "tokens": [293, 436, 751, 3838, 281, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 113, "seek": 55800, "start": 561.0, "end": 564.0, "text": " So this was something I wanted to address,", "tokens": [407, 341, 390, 746, 286, 1415, 281, 2985, 11], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 114, "seek": 55800, "start": 564.0, "end": 568.0, "text": " because it was a little bit awkward,", "tokens": [570, 309, 390, 257, 707, 857, 11411, 11], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 115, "seek": 55800, "start": 568.0, "end": 570.0, "text": " and I'll talk about that more.", "tokens": [293, 286, 603, 751, 466, 300, 544, 13], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 116, "seek": 55800, "start": 570.0, "end": 573.0, "text": " So a quick overview of SQLite.", "tokens": [407, 257, 1702, 12492, 295, 19200, 642, 13], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 117, "seek": 55800, "start": 573.0, "end": 575.0, "text": " For those who've never used it before,", "tokens": [1171, 729, 567, 600, 1128, 1143, 309, 949, 11], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 118, "seek": 55800, "start": 575.0, "end": 578.0, "text": " it's a user application library for allowing you,", "tokens": [309, 311, 257, 4195, 3861, 6405, 337, 8293, 291, 11], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 119, "seek": 55800, "start": 578.0, "end": 581.0, "text": " the X is a SQL engine,", "tokens": [264, 1783, 307, 257, 19200, 2848, 11], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 120, "seek": 55800, "start": 581.0, "end": 585.0, "text": " and lets you store a SQL database as a regular file,", "tokens": [293, 6653, 291, 3531, 257, 19200, 8149, 382, 257, 3890, 3991, 11], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 121, "seek": 55800, "start": 585.0, "end": 587.0, "text": " usually two files.", "tokens": [2673, 732, 7098, 13], "temperature": 0.0, "avg_logprob": -0.09305033593807581, "compression_ratio": 1.497907949790795, "no_speech_prob": 2.7960310035268776e-05}, {"id": 122, "seek": 58700, "start": 587.0, "end": 591.0, "text": " It'll be a journal, and then the database object itself.", "tokens": [467, 603, 312, 257, 6708, 11, 293, 550, 264, 8149, 2657, 2564, 13], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 123, "seek": 58700, "start": 591.0, "end": 593.0, "text": " And depending on how you use it,", "tokens": [400, 5413, 322, 577, 291, 764, 309, 11], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 124, "seek": 58700, "start": 593.0, "end": 596.0, "text": " the journal is transient, may come and go.", "tokens": [264, 6708, 307, 41998, 11, 815, 808, 293, 352, 13], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 125, "seek": 58700, "start": 596.0, "end": 600.0, "text": " It's widely recognized as one of the most used SQLite engines", "tokens": [467, 311, 13371, 9823, 382, 472, 295, 264, 881, 1143, 19200, 642, 12982], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 126, "seek": 58700, "start": 600.0, "end": 601.0, "text": " in the world.", "tokens": [294, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 127, "seek": 58700, "start": 601.0, "end": 602.0, "text": " It's very popular.", "tokens": [467, 311, 588, 3743, 13], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 128, "seek": 58700, "start": 602.0, "end": 604.0, "text": " They estimate on their website,", "tokens": [814, 12539, 322, 641, 3144, 11], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 129, "seek": 58700, "start": 604.0, "end": 609.0, "text": " there's billions of SQLite databases in use.", "tokens": [456, 311, 17375, 295, 19200, 642, 22380, 294, 764, 13], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 130, "seek": 58700, "start": 609.0, "end": 611.0, "text": " It's at least tens of billions at this point,", "tokens": [467, 311, 412, 1935, 10688, 295, 17375, 412, 341, 935, 11], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 131, "seek": 58700, "start": 611.0, "end": 614.0, "text": " because it's in every Android phone.", "tokens": [570, 309, 311, 294, 633, 8853, 2593, 13], "temperature": 0.0, "avg_logprob": -0.10234053351662376, "compression_ratio": 1.6260504201680672, "no_speech_prob": 1.7773470972315408e-05}, {"id": 132, "seek": 61400, "start": 614.0, "end": 617.0, "text": " So it was easy choice to make.", "tokens": [407, 309, 390, 1858, 3922, 281, 652, 13], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 133, "seek": 61400, "start": 617.0, "end": 618.0, "text": " It's a very simple library,", "tokens": [467, 311, 257, 588, 2199, 6405, 11], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 134, "seek": 61400, "start": 618.0, "end": 621.0, "text": " and bindings exist for numerous SQL systems.", "tokens": [293, 14786, 1109, 2514, 337, 12546, 19200, 3652, 13], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 135, "seek": 61400, "start": 621.0, "end": 626.0, "text": " In particular, of interest to me, was Python.", "tokens": [682, 1729, 11, 295, 1179, 281, 385, 11, 390, 15329, 13], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 136, "seek": 61400, "start": 626.0, "end": 630.0, "text": " Actually, extending SQLites is fairly simple.", "tokens": [5135, 11, 24360, 19200, 3324, 307, 6457, 2199, 13], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 137, "seek": 61400, "start": 630.0, "end": 634.0, "text": " They have this VFS concept, virtual file system concept.", "tokens": [814, 362, 341, 691, 29318, 3410, 11, 6374, 3991, 1185, 3410, 13], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 138, "seek": 61400, "start": 634.0, "end": 641.0, "text": " It lets you swap in different virtual file systems as needed.", "tokens": [467, 6653, 291, 18135, 294, 819, 6374, 3991, 3652, 382, 2978, 13], "temperature": 0.0, "avg_logprob": -0.1336750870659238, "compression_ratio": 1.5023923444976077, "no_speech_prob": 2.709790896915365e-05}, {"id": 139, "seek": 64100, "start": 641.0, "end": 645.0, "text": " The basic one is the UNIX VFS that's what comes with SQLite", "tokens": [440, 3875, 472, 307, 264, 8229, 21124, 691, 29318, 300, 311, 437, 1487, 365, 19200, 642], "temperature": 0.0, "avg_logprob": -0.13407537672254774, "compression_ratio": 1.4532019704433496, "no_speech_prob": 5.861842964804964e-06}, {"id": 140, "seek": 64100, "start": 645.0, "end": 648.0, "text": " by default, and it's very intuitive.", "tokens": [538, 7576, 11, 293, 309, 311, 588, 21769, 13], "temperature": 0.0, "avg_logprob": -0.13407537672254774, "compression_ratio": 1.4532019704433496, "no_speech_prob": 5.861842964804964e-06}, {"id": 141, "seek": 64100, "start": 648.0, "end": 650.0, "text": " It just passes on open, read, write,", "tokens": [467, 445, 11335, 322, 1269, 11, 1401, 11, 2464, 11], "temperature": 0.0, "avg_logprob": -0.13407537672254774, "compression_ratio": 1.4532019704433496, "no_speech_prob": 5.861842964804964e-06}, {"id": 142, "seek": 64100, "start": 650.0, "end": 657.0, "text": " closed off to the local file system for execution.", "tokens": [5395, 766, 281, 264, 2654, 3991, 1185, 337, 15058, 13], "temperature": 0.0, "avg_logprob": -0.13407537672254774, "compression_ratio": 1.4532019704433496, "no_speech_prob": 5.861842964804964e-06}, {"id": 143, "seek": 64100, "start": 657.0, "end": 665.0, "text": " So Libsef SQLite is a library for a SQLite VFS library", "tokens": [407, 15834, 405, 69, 19200, 642, 307, 257, 6405, 337, 257, 19200, 642, 691, 29318, 6405], "temperature": 0.0, "avg_logprob": -0.13407537672254774, "compression_ratio": 1.4532019704433496, "no_speech_prob": 5.861842964804964e-06}, {"id": 144, "seek": 64100, "start": 665.0, "end": 670.0, "text": " that lets you put a database, SQLite database in RATOS.", "tokens": [300, 6653, 291, 829, 257, 8149, 11, 19200, 642, 8149, 294, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.13407537672254774, "compression_ratio": 1.4532019704433496, "no_speech_prob": 5.861842964804964e-06}, {"id": 145, "seek": 67000, "start": 670.0, "end": 674.0, "text": " It's composed of two parts.", "tokens": [467, 311, 18204, 295, 732, 3166, 13], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 146, "seek": 67000, "start": 674.0, "end": 676.0, "text": " Libsef SQLite and simple RATOS striper.", "tokens": [15834, 405, 69, 19200, 642, 293, 2199, 497, 2218, 4367, 3575, 610, 13], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 147, "seek": 67000, "start": 676.0, "end": 681.0, "text": " I'll talk about simple RATOS striper on the next slide.", "tokens": [286, 603, 751, 466, 2199, 497, 2218, 4367, 3575, 610, 322, 264, 958, 4137, 13], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 148, "seek": 67000, "start": 681.0, "end": 684.0, "text": " The use of this library does not require any application", "tokens": [440, 764, 295, 341, 6405, 775, 406, 3651, 604, 3861], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 149, "seek": 67000, "start": 684.0, "end": 687.0, "text": " modification, and that's kind of like the killer feature here,", "tokens": [26747, 11, 293, 300, 311, 733, 295, 411, 264, 13364, 4111, 510, 11], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 150, "seek": 67000, "start": 687.0, "end": 689.0, "text": " because you can just set some environment variables", "tokens": [570, 291, 393, 445, 992, 512, 2823, 9102], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 151, "seek": 67000, "start": 689.0, "end": 692.0, "text": " and modify the database URI,", "tokens": [293, 16927, 264, 8149, 624, 5577, 11], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 152, "seek": 67000, "start": 692.0, "end": 697.0, "text": " and you can automatically start storing your database in SEF.", "tokens": [293, 291, 393, 6772, 722, 26085, 428, 8149, 294, 10269, 37, 13], "temperature": 0.0, "avg_logprob": -0.11165745744427431, "compression_ratio": 1.5502008032128514, "no_speech_prob": 1.2217417861393187e-05}, {"id": 153, "seek": 69700, "start": 697.0, "end": 700.0, "text": " And all of these, you know, the journal objects,", "tokens": [400, 439, 295, 613, 11, 291, 458, 11, 264, 6708, 6565, 11], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 154, "seek": 69700, "start": 700.0, "end": 702.0, "text": " the database objects are striped across the OSDs.", "tokens": [264, 8149, 6565, 366, 3575, 3452, 2108, 264, 12731, 35, 82, 13], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 155, "seek": 69700, "start": 702.0, "end": 704.0, "text": " You don't need to do anything differently.", "tokens": [509, 500, 380, 643, 281, 360, 1340, 7614, 13], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 156, "seek": 69700, "start": 704.0, "end": 707.0, "text": " The simple RATOS striper is based loosely off", "tokens": [440, 2199, 497, 2218, 4367, 3575, 610, 307, 2361, 37966, 766], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 157, "seek": 69700, "start": 707.0, "end": 711.0, "text": " of the Lib RATOS striper developed by CERN.", "tokens": [295, 264, 15834, 497, 2218, 4367, 3575, 610, 4743, 538, 383, 1598, 45, 13], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 158, "seek": 69700, "start": 711.0, "end": 714.0, "text": " The main reason I didn't end up using CERN's library", "tokens": [440, 2135, 1778, 286, 994, 380, 917, 493, 1228, 383, 1598, 45, 311, 6405], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 159, "seek": 69700, "start": 714.0, "end": 717.0, "text": " was because it had some locking behavior", "tokens": [390, 570, 309, 632, 512, 23954, 5223], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 160, "seek": 69700, "start": 717.0, "end": 721.0, "text": " that was not really desirable for a highly asynchronous use", "tokens": [300, 390, 406, 534, 30533, 337, 257, 5405, 49174, 764], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 161, "seek": 69700, "start": 721.0, "end": 725.0, "text": " case, and I didn't want to modify their library", "tokens": [1389, 11, 293, 286, 994, 380, 528, 281, 16927, 641, 6405], "temperature": 0.0, "avg_logprob": -0.09446915785471598, "compression_ratio": 1.5919117647058822, "no_speech_prob": 1.5204929695755709e-05}, {"id": 162, "seek": 72500, "start": 725.0, "end": 730.0, "text": " out from under their feet, so I just wrote a simple version.", "tokens": [484, 490, 833, 641, 3521, 11, 370, 286, 445, 4114, 257, 2199, 3037, 13], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 163, "seek": 72500, "start": 730.0, "end": 735.0, "text": " It provides the primitives that SQLite needs,", "tokens": [467, 6417, 264, 2886, 38970, 300, 19200, 642, 2203, 11], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 164, "seek": 72500, "start": 735.0, "end": 739.0, "text": " open, read, write, close, sync, and all the writes", "tokens": [1269, 11, 1401, 11, 2464, 11, 1998, 11, 20271, 11, 293, 439, 264, 13657], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 165, "seek": 72500, "start": 739.0, "end": 743.0, "text": " are done asynchronously, and then the sync call", "tokens": [366, 1096, 42642, 5098, 11, 293, 550, 264, 20271, 818], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 166, "seek": 72500, "start": 743.0, "end": 746.0, "text": " that comes from SQLite actually flushes them all out.", "tokens": [300, 1487, 490, 19200, 642, 767, 19568, 279, 552, 439, 484, 13], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 167, "seek": 72500, "start": 746.0, "end": 750.0, "text": " So these are all stored across RATOS with these names,", "tokens": [407, 613, 366, 439, 12187, 2108, 497, 2218, 4367, 365, 613, 5288, 11], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 168, "seek": 72500, "start": 750.0, "end": 753.0, "text": " you know, foo.db, and it's got like the block number", "tokens": [291, 458, 11, 726, 78, 13, 67, 65, 11, 293, 309, 311, 658, 411, 264, 3461, 1230], "temperature": 0.0, "avg_logprob": -0.08315754836460329, "compression_ratio": 1.5751072961373391, "no_speech_prob": 1.593483284523245e-05}, {"id": 169, "seek": 75300, "start": 753.0, "end": 757.0, "text": " associated with the database, and so on.", "tokens": [6615, 365, 264, 8149, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 170, "seek": 75300, "start": 757.0, "end": 760.0, "text": " Using LibSeph SQLite, again, it's very easy.", "tokens": [11142, 15834, 50, 595, 71, 19200, 642, 11, 797, 11, 309, 311, 588, 1858, 13], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 171, "seek": 75300, "start": 760.0, "end": 765.0, "text": " You just have to load a VFS library.", "tokens": [509, 445, 362, 281, 3677, 257, 691, 29318, 6405, 13], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 172, "seek": 75300, "start": 765.0, "end": 769.0, "text": " This is done with the SQLite command.loadLibSephSQLite,", "tokens": [639, 307, 1096, 365, 264, 19200, 642, 5622, 13, 2907, 43, 897, 50, 595, 71, 39934, 642, 11], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 173, "seek": 75300, "start": 769.0, "end": 774.0, "text": " and then you just provide a URI for the database.", "tokens": [293, 550, 291, 445, 2893, 257, 624, 5577, 337, 264, 8149, 13], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 174, "seek": 75300, "start": 774.0, "end": 778.0, "text": " This is the pool ID or the pool name,", "tokens": [639, 307, 264, 7005, 7348, 420, 264, 7005, 1315, 11], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 175, "seek": 75300, "start": 778.0, "end": 781.0, "text": " the namespace within that pool, which is optional,", "tokens": [264, 5288, 17940, 1951, 300, 7005, 11, 597, 307, 17312, 11], "temperature": 0.0, "avg_logprob": -0.13059318655788307, "compression_ratio": 1.5771144278606966, "no_speech_prob": 4.264259405317716e-05}, {"id": 176, "seek": 78100, "start": 781.0, "end": 784.0, "text": " and then you give the database a name and specify", "tokens": [293, 550, 291, 976, 264, 8149, 257, 1315, 293, 16500], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 177, "seek": 78100, "start": 784.0, "end": 787.0, "text": " the VFS is Seph, and that's it.", "tokens": [264, 691, 29318, 307, 22012, 71, 11, 293, 300, 311, 309, 13], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 178, "seek": 78100, "start": 787.0, "end": 789.0, "text": " It just works.", "tokens": [467, 445, 1985, 13], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 179, "seek": 78100, "start": 789.0, "end": 792.0, "text": " You may have to specify some environment variables", "tokens": [509, 815, 362, 281, 16500, 512, 2823, 9102], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 180, "seek": 78100, "start": 792.0, "end": 797.0, "text": " if you're using the SQLite binary to give it,", "tokens": [498, 291, 434, 1228, 264, 19200, 642, 17434, 281, 976, 309, 11], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 181, "seek": 78100, "start": 797.0, "end": 799.0, "text": " tell it which Seph cluster to use,", "tokens": [980, 309, 597, 22012, 71, 13630, 281, 764, 11], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 182, "seek": 78100, "start": 799.0, "end": 801.0, "text": " or which Seph configs to read, things like that,", "tokens": [420, 597, 22012, 71, 6662, 82, 281, 1401, 11, 721, 411, 300, 11], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 183, "seek": 78100, "start": 801.0, "end": 806.0, "text": " but that's all fairly unobtrusive, not obtrusive.", "tokens": [457, 300, 311, 439, 6457, 517, 996, 6903, 23053, 11, 406, 1111, 6903, 23053, 13], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 184, "seek": 78100, "start": 806.0, "end": 808.0, "text": " Within the Seph manager, so the Seph manager", "tokens": [15996, 264, 22012, 71, 6598, 11, 370, 264, 22012, 71, 6598], "temperature": 0.0, "avg_logprob": -0.12548795499299703, "compression_ratio": 1.631578947368421, "no_speech_prob": 1.4738017853233032e-05}, {"id": 185, "seek": 80800, "start": 808.0, "end": 811.0, "text": " is one of the newer demons in Seph", "tokens": [307, 472, 295, 264, 17628, 19733, 294, 22012, 71], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 186, "seek": 80800, "start": 811.0, "end": 813.0, "text": " that takes care of certain details", "tokens": [300, 2516, 1127, 295, 1629, 4365], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 187, "seek": 80800, "start": 813.0, "end": 815.0, "text": " of managing your Seph cluster", "tokens": [295, 11642, 428, 22012, 71, 13630], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 188, "seek": 80800, "start": 815.0, "end": 819.0, "text": " and trying to provide easier interfaces.", "tokens": [293, 1382, 281, 2893, 3571, 28416, 13], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 189, "seek": 80800, "start": 819.0, "end": 821.0, "text": " A particular interest to us is one that handles", "tokens": [316, 1729, 1179, 281, 505, 307, 472, 300, 18722], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 190, "seek": 80800, "start": 821.0, "end": 824.0, "text": " health metrics that come from the OSDs,", "tokens": [1585, 16367, 300, 808, 490, 264, 12731, 35, 82, 11], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 191, "seek": 80800, "start": 824.0, "end": 826.0, "text": " giving the Seph manager information", "tokens": [2902, 264, 22012, 71, 6598, 1589], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 192, "seek": 80800, "start": 826.0, "end": 829.0, "text": " about the smart data associated with the disks,", "tokens": [466, 264, 4069, 1412, 6615, 365, 264, 41617, 11], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 193, "seek": 80800, "start": 829.0, "end": 832.0, "text": " being able to anticipate failures in disks,", "tokens": [885, 1075, 281, 21685, 20774, 294, 41617, 11], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 194, "seek": 80800, "start": 832.0, "end": 836.0, "text": " again, Seph trying to reduce the management burden", "tokens": [797, 11, 22012, 71, 1382, 281, 5407, 264, 4592, 12578], "temperature": 0.0, "avg_logprob": -0.06583199781530044, "compression_ratio": 1.6748971193415638, "no_speech_prob": 1.5934630937408656e-05}, {"id": 195, "seek": 83600, "start": 836.0, "end": 839.0, "text": " of storage clusters, and then also a portal", "tokens": [295, 6725, 23313, 11, 293, 550, 611, 257, 14982], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 196, "seek": 83600, "start": 839.0, "end": 842.0, "text": " to higher level commands like managing volumes", "tokens": [281, 2946, 1496, 16901, 411, 11642, 22219], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 197, "seek": 83600, "start": 842.0, "end": 847.0, "text": " within Seph that is a subvolume concept", "tokens": [1951, 22012, 71, 300, 307, 257, 1422, 9646, 2540, 3410], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 198, "seek": 83600, "start": 847.0, "end": 853.0, "text": " that's used by OpenStack or Kubernetes, CSI.", "tokens": [300, 311, 1143, 538, 7238, 4520, 501, 420, 23145, 11, 9460, 40, 13], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 199, "seek": 83600, "start": 853.0, "end": 855.0, "text": " Within the Seph manager demon, what I observed", "tokens": [15996, 264, 22012, 71, 6598, 14283, 11, 437, 286, 13095], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 200, "seek": 83600, "start": 855.0, "end": 857.0, "text": " was that there were several modules", "tokens": [390, 300, 456, 645, 2940, 16679], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 201, "seek": 83600, "start": 857.0, "end": 860.0, "text": " that were just storing data in the OMAP key value", "tokens": [300, 645, 445, 26085, 1412, 294, 264, 16954, 4715, 2141, 2158], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 202, "seek": 83600, "start": 860.0, "end": 862.0, "text": " of a particular object, and it turned out", "tokens": [295, 257, 1729, 2657, 11, 293, 309, 3574, 484], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 203, "seek": 83600, "start": 862.0, "end": 864.0, "text": " this doesn't scale very well.", "tokens": [341, 1177, 380, 4373, 588, 731, 13], "temperature": 0.0, "avg_logprob": -0.10679358127070408, "compression_ratio": 1.5261044176706828, "no_speech_prob": 2.2469359464594163e-05}, {"id": 204, "seek": 86400, "start": 864.0, "end": 866.0, "text": " We know it won't scale well because if you have", "tokens": [492, 458, 309, 1582, 380, 4373, 731, 570, 498, 291, 362], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 205, "seek": 86400, "start": 866.0, "end": 870.0, "text": " more than 10,000 key value pairs in a single object,", "tokens": [544, 813, 1266, 11, 1360, 2141, 2158, 15494, 294, 257, 2167, 2657, 11], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 206, "seek": 86400, "start": 870.0, "end": 872.0, "text": " the performance starts to degrade.", "tokens": [264, 3389, 3719, 281, 368, 8692, 13], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 207, "seek": 86400, "start": 872.0, "end": 874.0, "text": " In fact, you'll start getting cluster warnings", "tokens": [682, 1186, 11, 291, 603, 722, 1242, 13630, 30009], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 208, "seek": 86400, "start": 874.0, "end": 877.0, "text": " that there's objects with too many key value pairs.", "tokens": [300, 456, 311, 6565, 365, 886, 867, 2141, 2158, 15494, 13], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 209, "seek": 86400, "start": 877.0, "end": 883.0, "text": " So it was also pretty awkward in terms of how it was being used,", "tokens": [407, 309, 390, 611, 1238, 11411, 294, 2115, 295, 577, 309, 390, 885, 1143, 11], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 210, "seek": 86400, "start": 883.0, "end": 889.0, "text": " and just by how we were managing the data,", "tokens": [293, 445, 538, 577, 321, 645, 11642, 264, 1412, 11], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 211, "seek": 86400, "start": 889.0, "end": 892.0, "text": " it was a perfect match for a SQL database,", "tokens": [309, 390, 257, 2176, 2995, 337, 257, 19200, 8149, 11], "temperature": 0.0, "avg_logprob": -0.08188753861647385, "compression_ratio": 1.5909090909090908, "no_speech_prob": 1.3004980246478226e-05}, {"id": 212, "seek": 89200, "start": 892.0, "end": 895.0, "text": " except it was not very easy to put a SQL database", "tokens": [3993, 309, 390, 406, 588, 1858, 281, 829, 257, 19200, 8149], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 213, "seek": 89200, "start": 895.0, "end": 898.0, "text": " on Seph at the time.", "tokens": [322, 22012, 71, 412, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 214, "seek": 89200, "start": 898.0, "end": 903.0, "text": " In fact, Jan here worked on SNAP schedule,", "tokens": [682, 1186, 11, 4956, 510, 2732, 322, 13955, 4715, 7567, 11], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 215, "seek": 89200, "start": 903.0, "end": 907.0, "text": " which is a module for creating snapshots", "tokens": [597, 307, 257, 10088, 337, 4084, 19206, 27495], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 216, "seek": 89200, "start": 907.0, "end": 911.0, "text": " and maintaining snapshots in Seph FS", "tokens": [293, 14916, 19206, 27495, 294, 22012, 71, 41138], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 217, "seek": 89200, "start": 911.0, "end": 914.0, "text": " and handling retention policies,", "tokens": [293, 13175, 22871, 7657, 11], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 218, "seek": 89200, "start": 914.0, "end": 916.0, "text": " and that actually used a SQL database", "tokens": [293, 300, 767, 1143, 257, 19200, 8149], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 219, "seek": 89200, "start": 916.0, "end": 920.0, "text": " that was flushed to RATOS objects and then loaded", "tokens": [300, 390, 19568, 292, 281, 497, 2218, 4367, 6565, 293, 550, 13210], "temperature": 0.0, "avg_logprob": -0.11963303883870442, "compression_ratio": 1.5072463768115942, "no_speech_prob": 5.647683428833261e-05}, {"id": 220, "seek": 92000, "start": 920.0, "end": 923.0, "text": " in anticipation of the project that I'm working on now,", "tokens": [294, 35979, 295, 264, 1716, 300, 286, 478, 1364, 322, 586, 11], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 221, "seek": 92000, "start": 923.0, "end": 925.0, "text": " and that's all been updated now to use this", "tokens": [293, 300, 311, 439, 668, 10588, 586, 281, 764, 341], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 222, "seek": 92000, "start": 925.0, "end": 929.0, "text": " of Seph SQLite library.", "tokens": [295, 22012, 71, 19200, 642, 6405, 13], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 223, "seek": 92000, "start": 929.0, "end": 931.0, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 224, "seek": 92000, "start": 931.0, "end": 937.0, "text": " So in terms of how it actually looks within the Seph manager,", "tokens": [407, 294, 2115, 295, 577, 309, 767, 1542, 1951, 264, 22012, 71, 6598, 11], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 225, "seek": 92000, "start": 937.0, "end": 940.0, "text": " on the left we have a schema.", "tokens": [322, 264, 1411, 321, 362, 257, 34078, 13], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 226, "seek": 92000, "start": 940.0, "end": 941.0, "text": " It's fairly simple.", "tokens": [467, 311, 6457, 2199, 13], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 227, "seek": 92000, "start": 941.0, "end": 943.0, "text": " Just creating a table with the device ID", "tokens": [1449, 4084, 257, 3199, 365, 264, 4302, 7348], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 228, "seek": 92000, "start": 943.0, "end": 945.0, "text": " as the primary key, and then another table", "tokens": [382, 264, 6194, 2141, 11, 293, 550, 1071, 3199], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 229, "seek": 92000, "start": 945.0, "end": 947.0, "text": " with device health metrics.", "tokens": [365, 4302, 1585, 16367, 13], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 230, "seek": 92000, "start": 947.0, "end": 949.0, "text": " With the time we got the metrics,", "tokens": [2022, 264, 565, 321, 658, 264, 16367, 11], "temperature": 0.0, "avg_logprob": -0.16202273411033427, "compression_ratio": 1.5934959349593496, "no_speech_prob": 1.078226250683656e-05}, {"id": 231, "seek": 94900, "start": 949.0, "end": 952.0, "text": " the device ID associated with that metric,", "tokens": [264, 4302, 7348, 6615, 365, 300, 20678, 11], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 232, "seek": 94900, "start": 952.0, "end": 954.0, "text": " and then the raw smart text.", "tokens": [293, 550, 264, 8936, 4069, 2487, 13], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 233, "seek": 94900, "start": 954.0, "end": 959.0, "text": " And then they actually put the device metrics in the database.", "tokens": [400, 550, 436, 767, 829, 264, 4302, 16367, 294, 264, 8149, 13], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 234, "seek": 94900, "start": 959.0, "end": 961.0, "text": " It's as simple as this.", "tokens": [467, 311, 382, 2199, 382, 341, 13], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 235, "seek": 94900, "start": 961.0, "end": 965.0, "text": " Within the manager I've taken out a few unnecessary lines", "tokens": [15996, 264, 6598, 286, 600, 2726, 484, 257, 1326, 19350, 3876], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 236, "seek": 94900, "start": 965.0, "end": 968.0, "text": " just for space or unnecessary keywords", "tokens": [445, 337, 1901, 420, 19350, 21009], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 237, "seek": 94900, "start": 968.0, "end": 970.0, "text": " for space in the SQL.", "tokens": [337, 1901, 294, 264, 19200, 13], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 238, "seek": 94900, "start": 970.0, "end": 971.0, "text": " You create the device ID,", "tokens": [509, 1884, 264, 4302, 7348, 11], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 239, "seek": 94900, "start": 971.0, "end": 973.0, "text": " which just calls another SQL statement", "tokens": [597, 445, 5498, 1071, 19200, 5629], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 240, "seek": 94900, "start": 973.0, "end": 975.0, "text": " to insert into this table,", "tokens": [281, 8969, 666, 341, 3199, 11], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 241, "seek": 94900, "start": 975.0, "end": 978.0, "text": " and actually execute the SQL statement", "tokens": [293, 767, 14483, 264, 19200, 5629], "temperature": 0.0, "avg_logprob": -0.08607019696916852, "compression_ratio": 1.707112970711297, "no_speech_prob": 1.1123948752356227e-05}, {"id": 242, "seek": 97800, "start": 978.0, "end": 981.0, "text": " with the Epic dev ID and data.", "tokens": [365, 264, 26785, 1905, 7348, 293, 1412, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 243, "seek": 97800, "start": 981.0, "end": 983.0, "text": " It's that simple.", "tokens": [467, 311, 300, 2199, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 244, "seek": 97800, "start": 983.0, "end": 986.0, "text": " And now that's stored, persisted, and RATOS.", "tokens": [400, 586, 300, 311, 12187, 11, 13233, 292, 11, 293, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 245, "seek": 97800, "start": 986.0, "end": 990.0, "text": " So here's a quick Libsep SQLite in action series", "tokens": [407, 510, 311, 257, 1702, 15834, 405, 79, 19200, 642, 294, 3069, 2638], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 246, "seek": 97800, "start": 990.0, "end": 992.0, "text": " of gifts I've created.", "tokens": [295, 11449, 286, 600, 2942, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 247, "seek": 97800, "start": 992.0, "end": 995.0, "text": " Here we're running the Seph status command,", "tokens": [1692, 321, 434, 2614, 264, 22012, 71, 6558, 5622, 11], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 248, "seek": 97800, "start": 995.0, "end": 997.0, "text": " just showing us the state of the cluster.", "tokens": [445, 4099, 505, 264, 1785, 295, 264, 13630, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 249, "seek": 97800, "start": 997.0, "end": 1001.0, "text": " We have two pools right now, a.manager and an A pool", "tokens": [492, 362, 732, 28688, 558, 586, 11, 257, 2411, 1601, 3557, 293, 364, 316, 7005], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 250, "seek": 97800, "start": 1001.0, "end": 1003.0, "text": " that I'm creating for this demo.", "tokens": [300, 286, 478, 4084, 337, 341, 10723, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 251, "seek": 97800, "start": 1003.0, "end": 1007.0, "text": " Here I'm purging A just to show that there's nothing in it.", "tokens": [1692, 286, 478, 1864, 3249, 316, 445, 281, 855, 300, 456, 311, 1825, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.14443975781637525, "compression_ratio": 1.5447470817120623, "no_speech_prob": 1.2218231859151274e-05}, {"id": 252, "seek": 100700, "start": 1007.0, "end": 1010.0, "text": " It removed one object.", "tokens": [467, 7261, 472, 2657, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 253, "seek": 100700, "start": 1010.0, "end": 1014.0, "text": " And here I'm just listing all the objects within this pool.", "tokens": [400, 510, 286, 478, 445, 22161, 439, 264, 6565, 1951, 341, 7005, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 254, "seek": 100700, "start": 1014.0, "end": 1017.0, "text": " There's none because I just purged it.", "tokens": [821, 311, 6022, 570, 286, 445, 1864, 3004, 309, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 255, "seek": 100700, "start": 1017.0, "end": 1019.0, "text": " So that's just a starter.", "tokens": [407, 300, 311, 445, 257, 22465, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 256, "seek": 100700, "start": 1019.0, "end": 1022.0, "text": " And then here we're actually going to run the Libsep SQLite.", "tokens": [400, 550, 510, 321, 434, 767, 516, 281, 1190, 264, 15834, 405, 79, 19200, 642, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 257, "seek": 100700, "start": 1022.0, "end": 1024.0, "text": " So to do that, again, I mentioned there were", "tokens": [407, 281, 360, 300, 11, 797, 11, 286, 2835, 456, 645], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 258, "seek": 100700, "start": 1024.0, "end": 1025.0, "text": " some environment variables.", "tokens": [512, 2823, 9102, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 259, "seek": 100700, "start": 1025.0, "end": 1028.0, "text": " If I'm using the SQLite command directly,", "tokens": [759, 286, 478, 1228, 264, 19200, 642, 5622, 3838, 11], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 260, "seek": 100700, "start": 1028.0, "end": 1031.0, "text": " I have to specify some environment variables.", "tokens": [286, 362, 281, 16500, 512, 2823, 9102, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 261, "seek": 100700, "start": 1031.0, "end": 1034.0, "text": " So the library knows what to do.", "tokens": [407, 264, 6405, 3255, 437, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 262, "seek": 100700, "start": 1034.0, "end": 1036.0, "text": " Here, because this is a dev cluster,", "tokens": [1692, 11, 570, 341, 307, 257, 1905, 13630, 11], "temperature": 0.0, "avg_logprob": -0.09182372283935547, "compression_ratio": 1.694980694980695, "no_speech_prob": 8.80042261997005e-06}, {"id": 263, "seek": 103600, "start": 1036.0, "end": 1038.0, "text": " I have to tell it to use the library path", "tokens": [286, 362, 281, 980, 309, 281, 764, 264, 6405, 3100], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 264, "seek": 103600, "start": 1038.0, "end": 1040.0, "text": " associated with my build.", "tokens": [6615, 365, 452, 1322, 13], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 265, "seek": 103600, "start": 1040.0, "end": 1045.0, "text": " I specify which Seph config to load, which key ring associated", "tokens": [286, 16500, 597, 22012, 71, 6662, 281, 3677, 11, 597, 2141, 4875, 6615], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 266, "seek": 103600, "start": 1045.0, "end": 1050.0, "text": " with the admin user that I'm going to specify here.", "tokens": [365, 264, 24236, 4195, 300, 286, 478, 516, 281, 16500, 510, 13], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 267, "seek": 103600, "start": 1050.0, "end": 1052.0, "text": " I was actually going to also add some logging data,", "tokens": [286, 390, 767, 516, 281, 611, 909, 512, 27991, 1412, 11], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 268, "seek": 103600, "start": 1052.0, "end": 1057.0, "text": " but I ended up not doing that, just to save space.", "tokens": [457, 286, 4590, 493, 406, 884, 300, 11, 445, 281, 3155, 1901, 13], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 269, "seek": 103600, "start": 1057.0, "end": 1060.0, "text": " And then here I'm actually running a SQLite command.", "tokens": [400, 550, 510, 286, 478, 767, 2614, 257, 19200, 642, 5622, 13], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 270, "seek": 103600, "start": 1060.0, "end": 1064.0, "text": " I'm loading the Libsep SQLite library.", "tokens": [286, 478, 15114, 264, 15834, 405, 79, 19200, 642, 6405, 13], "temperature": 0.0, "avg_logprob": -0.0928431647164481, "compression_ratio": 1.6535087719298245, "no_speech_prob": 6.747611223545391e-06}, {"id": 271, "seek": 106400, "start": 1064.0, "end": 1068.0, "text": " That's one of the first command that Libsep SQLite is going to run.", "tokens": [663, 311, 472, 295, 264, 700, 5622, 300, 15834, 405, 79, 19200, 642, 307, 516, 281, 1190, 13], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 272, "seek": 106400, "start": 1068.0, "end": 1072.0, "text": " And here I'm opening a database in pool A,", "tokens": [400, 510, 286, 478, 5193, 257, 8149, 294, 7005, 316, 11], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 273, "seek": 106400, "start": 1072.0, "end": 1075.0, "text": " namespace B within that pool,", "tokens": [5288, 17940, 363, 1951, 300, 7005, 11], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 274, "seek": 106400, "start": 1075.0, "end": 1080.0, "text": " and then a database named a.db with vfsf.", "tokens": [293, 550, 257, 8149, 4926, 257, 13, 67, 65, 365, 371, 16883, 69, 13], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 275, "seek": 106400, "start": 1080.0, "end": 1082.0, "text": " All right, now I'm in SQLite.", "tokens": [1057, 558, 11, 586, 286, 478, 294, 19200, 642, 13], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 276, "seek": 106400, "start": 1082.0, "end": 1088.0, "text": " Here I create a simple table with an integer column.", "tokens": [1692, 286, 1884, 257, 2199, 3199, 365, 364, 24922, 7738, 13], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 277, "seek": 106400, "start": 1088.0, "end": 1091.0, "text": " There's the schema, exactly what I wrote.", "tokens": [821, 311, 264, 34078, 11, 2293, 437, 286, 4114, 13], "temperature": 0.0, "avg_logprob": -0.14523131577010007, "compression_ratio": 1.497560975609756, "no_speech_prob": 1.0129209840670228e-05}, {"id": 278, "seek": 109100, "start": 1091.0, "end": 1096.0, "text": " And then we're going to insert into the table one value", "tokens": [400, 550, 321, 434, 516, 281, 8969, 666, 264, 3199, 472, 2158], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 279, "seek": 109100, "start": 1096.0, "end": 1100.0, "text": " and then dump it.", "tokens": [293, 550, 11430, 309, 13], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 280, "seek": 109100, "start": 1100.0, "end": 1102.0, "text": " So it's now in RATOS.", "tokens": [407, 309, 311, 586, 294, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 281, "seek": 109100, "start": 1102.0, "end": 1106.0, "text": " And now just to confirm that, I'm going to run the RATOS command", "tokens": [400, 586, 445, 281, 9064, 300, 11, 286, 478, 516, 281, 1190, 264, 497, 2218, 4367, 5622], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 282, "seek": 109100, "start": 1106.0, "end": 1109.0, "text": " on the pool A, list all the objects in the pool.", "tokens": [322, 264, 7005, 316, 11, 1329, 439, 264, 6565, 294, 264, 7005, 13], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 283, "seek": 109100, "start": 1109.0, "end": 1114.0, "text": " You can see namespace B. I have this a.db.", "tokens": [509, 393, 536, 5288, 17940, 363, 13, 286, 362, 341, 257, 13, 67, 65, 13], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 284, "seek": 109100, "start": 1114.0, "end": 1118.0, "text": " So now I'm going to use this striper command.", "tokens": [407, 586, 286, 478, 516, 281, 764, 341, 3575, 610, 5622, 13], "temperature": 0.0, "avg_logprob": -0.1082819832695855, "compression_ratio": 1.5602094240837696, "no_speech_prob": 8.529287697456311e-06}, {"id": 285, "seek": 111800, "start": 1118.0, "end": 1122.0, "text": " I'm actually, if this database were composed of many objects,", "tokens": [286, 478, 767, 11, 498, 341, 8149, 645, 18204, 295, 867, 6565, 11], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 286, "seek": 111800, "start": 1122.0, "end": 1125.0, "text": " you can use the striper command to actually pull the database out.", "tokens": [291, 393, 764, 264, 3575, 610, 5622, 281, 767, 2235, 264, 8149, 484, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 287, "seek": 111800, "start": 1125.0, "end": 1127.0, "text": " And you can see here I've done that.", "tokens": [400, 291, 393, 536, 510, 286, 600, 1096, 300, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 288, "seek": 111800, "start": 1127.0, "end": 1129.0, "text": " It's an 8k database.", "tokens": [467, 311, 364, 1649, 74, 8149, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 289, "seek": 111800, "start": 1129.0, "end": 1133.0, "text": " It's small because there's just one table with one value.", "tokens": [467, 311, 1359, 570, 456, 311, 445, 472, 3199, 365, 472, 2158, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 290, "seek": 111800, "start": 1133.0, "end": 1136.0, "text": " And I loaded that locally.", "tokens": [400, 286, 13210, 300, 16143, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 291, "seek": 111800, "start": 1136.0, "end": 1138.0, "text": " I pulled it out of RATOS.", "tokens": [286, 7373, 309, 484, 295, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 292, "seek": 111800, "start": 1138.0, "end": 1139.0, "text": " Sorry, the GIF loops.", "tokens": [4919, 11, 264, 460, 12775, 16121, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 293, "seek": 111800, "start": 1139.0, "end": 1141.0, "text": " I pulled it out of RATOS.", "tokens": [286, 7373, 309, 484, 295, 497, 2218, 4367, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 294, "seek": 111800, "start": 1141.0, "end": 1145.0, "text": " And then I now have the database as a local file.", "tokens": [400, 550, 286, 586, 362, 264, 8149, 382, 257, 2654, 3991, 13], "temperature": 0.0, "avg_logprob": -0.0908448266201332, "compression_ratio": 1.7400881057268722, "no_speech_prob": 8.664087545184884e-06}, {"id": 295, "seek": 114500, "start": 1145.0, "end": 1149.0, "text": " I ran SQLite on that local file database.", "tokens": [286, 5872, 19200, 642, 322, 300, 2654, 3991, 8149, 13], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 296, "seek": 114500, "start": 1149.0, "end": 1153.0, "text": " And just dumped it to confirm that it actually wrote the data out", "tokens": [400, 445, 32131, 309, 281, 9064, 300, 309, 767, 4114, 264, 1412, 484], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 297, "seek": 114500, "start": 1153.0, "end": 1154.0, "text": " to RATOS correctly.", "tokens": [281, 497, 2218, 4367, 8944, 13], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 298, "seek": 114500, "start": 1154.0, "end": 1159.0, "text": " And I can pull it out of RATOS and verify that it actually worked.", "tokens": [400, 286, 393, 2235, 309, 484, 295, 497, 2218, 4367, 293, 16888, 300, 309, 767, 2732, 13], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 299, "seek": 114500, "start": 1159.0, "end": 1167.0, "text": " So here's another demo with just rerunning the same SQLite command", "tokens": [407, 510, 311, 1071, 10723, 365, 445, 43819, 25589, 264, 912, 19200, 642, 5622], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 300, "seek": 114500, "start": 1167.0, "end": 1168.0, "text": " I had earlier.", "tokens": [286, 632, 3071, 13], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 301, "seek": 114500, "start": 1168.0, "end": 1171.0, "text": " And sorry, this is going to be a big paste.", "tokens": [400, 2597, 11, 341, 307, 516, 281, 312, 257, 955, 9163, 13], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 302, "seek": 114500, "start": 1171.0, "end": 1173.0, "text": " But I'm creating a table.", "tokens": [583, 286, 478, 4084, 257, 3199, 13], "temperature": 0.0, "avg_logprob": -0.07193857136339245, "compression_ratio": 1.5656108597285068, "no_speech_prob": 6.143799510027748e-06}, {"id": 303, "seek": 117300, "start": 1173.0, "end": 1178.0, "text": " This is just some magic in SQLite to basically create an infinite loop.", "tokens": [639, 307, 445, 512, 5585, 294, 19200, 642, 281, 1936, 1884, 364, 13785, 6367, 13], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 304, "seek": 117300, "start": 1178.0, "end": 1181.0, "text": " And I'm just going to insert a number.", "tokens": [400, 286, 478, 445, 516, 281, 8969, 257, 1230, 13], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 305, "seek": 117300, "start": 1181.0, "end": 1185.0, "text": " I think it's 100,000 integers into the table.", "tokens": [286, 519, 309, 311, 2319, 11, 1360, 41674, 666, 264, 3199, 13], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 306, "seek": 117300, "start": 1185.0, "end": 1188.0, "text": " And just see how many objects are in the database now.", "tokens": [400, 445, 536, 577, 867, 6565, 366, 294, 264, 8149, 586, 13], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 307, "seek": 117300, "start": 1188.0, "end": 1193.0, "text": " There's four objects composed of that database.", "tokens": [821, 311, 1451, 6565, 18204, 295, 300, 8149, 13], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 308, "seek": 117300, "start": 1193.0, "end": 1197.0, "text": " So I think for time reasons, I'm not going to go through the performance notes,", "tokens": [407, 286, 519, 337, 565, 4112, 11, 286, 478, 406, 516, 281, 352, 807, 264, 3389, 5570, 11], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 309, "seek": 117300, "start": 1197.0, "end": 1200.0, "text": " but it's on the slide if you want to look at it later.", "tokens": [457, 309, 311, 322, 264, 4137, 498, 291, 528, 281, 574, 412, 309, 1780, 13], "temperature": 0.0, "avg_logprob": -0.06977882563510787, "compression_ratio": 1.5887096774193548, "no_speech_prob": 5.093343588669086e-06}, {"id": 310, "seek": 120000, "start": 1200.0, "end": 1206.0, "text": " And just as a retrospective for Quincy, when the database got used live,", "tokens": [400, 445, 382, 257, 34997, 488, 337, 44761, 1344, 11, 562, 264, 8149, 658, 1143, 1621, 11], "temperature": 0.0, "avg_logprob": -0.08656916054346228, "compression_ratio": 1.5423728813559323, "no_speech_prob": 2.354803837079089e-05}, {"id": 311, "seek": 120000, "start": 1206.0, "end": 1210.0, "text": " it's being used in the two manager modules right now,", "tokens": [309, 311, 885, 1143, 294, 264, 732, 6598, 16679, 558, 586, 11], "temperature": 0.0, "avg_logprob": -0.08656916054346228, "compression_ratio": 1.5423728813559323, "no_speech_prob": 2.354803837079089e-05}, {"id": 312, "seek": 120000, "start": 1210.0, "end": 1213.0, "text": " the device health and the SNAP scheduling module.", "tokens": [264, 4302, 1585, 293, 264, 13955, 4715, 29055, 10088, 13], "temperature": 0.0, "avg_logprob": -0.08656916054346228, "compression_ratio": 1.5423728813559323, "no_speech_prob": 2.354803837079089e-05}, {"id": 313, "seek": 120000, "start": 1213.0, "end": 1214.0, "text": " It's been fairly successful.", "tokens": [467, 311, 668, 6457, 4406, 13], "temperature": 0.0, "avg_logprob": -0.08656916054346228, "compression_ratio": 1.5423728813559323, "no_speech_prob": 2.354803837079089e-05}, {"id": 314, "seek": 120000, "start": 1214.0, "end": 1224.0, "text": " We had a few minor hiccups that weren't really too much related to the library.", "tokens": [492, 632, 257, 1326, 6696, 23697, 66, 7528, 300, 4999, 380, 534, 886, 709, 4077, 281, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.08656916054346228, "compression_ratio": 1.5423728813559323, "no_speech_prob": 2.354803837079089e-05}, {"id": 315, "seek": 120000, "start": 1224.0, "end": 1229.0, "text": " And just for some future work, I want to add support for supporting concurrent", "tokens": [400, 445, 337, 512, 2027, 589, 11, 286, 528, 281, 909, 1406, 337, 7231, 37702], "temperature": 0.0, "avg_logprob": -0.08656916054346228, "compression_ratio": 1.5423728813559323, "no_speech_prob": 2.354803837079089e-05}, {"id": 316, "seek": 122900, "start": 1229.0, "end": 1230.0, "text": " readers.", "tokens": [17147, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 317, "seek": 122900, "start": 1230.0, "end": 1232.0, "text": " That's not yet possible right now.", "tokens": [663, 311, 406, 1939, 1944, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 318, "seek": 122900, "start": 1232.0, "end": 1236.0, "text": " All readers and writers obtained exclusive locks when accessing the database.", "tokens": [1057, 17147, 293, 13491, 14879, 13005, 20703, 562, 26440, 264, 8149, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 319, "seek": 122900, "start": 1236.0, "end": 1241.0, "text": " But there's not a technical reason why we can't add concurrent reader support.", "tokens": [583, 456, 311, 406, 257, 6191, 1778, 983, 321, 393, 380, 909, 37702, 15149, 1406, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 320, "seek": 122900, "start": 1241.0, "end": 1245.0, "text": " And then I also want to look at adding read-ahead performance,", "tokens": [400, 550, 286, 611, 528, 281, 574, 412, 5127, 1401, 12, 545, 2056, 3389, 11], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 321, "seek": 122900, "start": 1245.0, "end": 1247.0, "text": " improving read-ahead performance.", "tokens": [11470, 1401, 12, 545, 2056, 3389, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 322, "seek": 122900, "start": 1247.0, "end": 1253.0, "text": " Because right now every read call in Libsef SQLite is synchronous.", "tokens": [1436, 558, 586, 633, 1401, 818, 294, 15834, 405, 69, 19200, 642, 307, 44743, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 323, "seek": 122900, "start": 1253.0, "end": 1255.0, "text": " So that's the end of my talk.", "tokens": [407, 300, 311, 264, 917, 295, 452, 751, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 324, "seek": 122900, "start": 1255.0, "end": 1256.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.1506162625606929, "compression_ratio": 1.6071428571428572, "no_speech_prob": 2.5066547095775604e-05}, {"id": 325, "seek": 125600, "start": 1256.0, "end": 1262.0, "text": " Do we have any time for questions?", "tokens": [1144, 321, 362, 604, 565, 337, 1651, 30], "temperature": 0.0, "avg_logprob": -0.30283518398509307, "compression_ratio": 1.2421052631578948, "no_speech_prob": 0.0009802120039239526}, {"id": 326, "seek": 125600, "start": 1262.0, "end": 1264.0, "text": " Sorry, no time for questions to this session.", "tokens": [4919, 11, 572, 565, 337, 1651, 281, 341, 5481, 13], "temperature": 0.0, "avg_logprob": -0.30283518398509307, "compression_ratio": 1.2421052631578948, "no_speech_prob": 0.0009802120039239526}, {"id": 327, "seek": 126400, "start": 1264.0, "end": 1293.0, "text": " You have to find Patrick and I'll send him.", "tokens": [50364, 509, 362, 281, 915, 13980, 293, 286, 603, 2845, 796, 13, 51814], "temperature": 0.0, "avg_logprob": -0.4753077370779855, "compression_ratio": 0.8958333333333334, "no_speech_prob": 0.0005007990985177457}], "language": "en"}