{"text": " Okay. Take a picture. So, good morning. My name is Daniel Mejado. I'm here today with my colleague Miguel. Here we are both principals of our engineers at Weihardt. I'm currently working in the Epsilon DTT team, basically monitoring so, and he's on the OpenShift virtualization team. I guess we just wanted to speak today a little bit about CNI, which stands for Container Network Interface, which this is basically all the networking in Kubernetes, but not only limited to that. Because I think one of the things that this project lacks the most is documentation and how does this work, how you create a plugin, what are the primitives. I think that's something that is super simple, but there's little to no documentation besides the spec. So, let's go watch through that. Yeah, this is a quick intro. So, you may have noticed and that we are going to be speaking about CNI plugins changed specifically. That means that we are going to be basically putting a couple of plugins in CNI mode. But first of all, CNI may stand for three different things and I want to be a little bit clear here. Like you're going to have the CNI specification itself, which is a document. It's fine. You can read it. Then you've got the plugins. So, if you go to GitHub, you can see the CNI plugins. This is a set of plugins basically maintained by the community. Bridge, Mac BLM, you name it. There's a couple of those. And the third thing, it may be just a couple of plugins. So, those are basically the three things that you may be interested into. We are going to be always speaking about the plugins here in this session, but we'll hopefully discuss anything after that. So, just in case, I mean, here we are going to be speaking about Kubernetes, but let me take a note that the CNI specification on the plugins, they do work totally without Kubernetes. So, with any runtime engine such as Rocket, and in fact, these are started out with Rocket. Well, I guess in case you started that out, you can be running this out with cryo, Rocket, whatever you want to play with this. So, what is the CNI plugin specifically? CNI plugins are binaries, which are basically copied over any of the hosts that are in your Kubernetes clusters. So, if you want to install this out, you probably need a demo set to deploy it on or do that manually. So, here, who runs this CNI plugins? You could either run that yourself, but usually, you would need to have the kubelet run those for you. Is there anybody here who doesn't know what a kubelet is? Okay. The kubelet, oh, you fuck, anyway. They were trying me out. So, anyways, I'll go ahead. So, basically, when you go and have the kubelet, which is a mystery thing that you don't know what it's about, runs the binary here in the host, it basically creates a network name and space, which is tied to a BF interface. As this guy doesn't know what a BF interface is, I'm going to be basically speaking out for him. So, it's a B12 point-to-point tunnel, so you can basically hook this up into whatever you want to. Like, usually, these are connected to OVN, OpenB streets, or whatever, B12 streets, or it depends on the CNI plugin implementation. How do I configure the thing? These are used, like, configured by a configuration file. We're going to be speaking later on a little bit about how this changes. But, yes, FYI, and Miguel will be speaking later on about this more. Prior to the CNI specification 0.3.0, you weren't able to, you know, put your plugins in CL mode. It would just break. So, you would need to know, basically, there's a couple of CNI components that you need to put. Basically, the name of your CNI plugin, the type, and the type should match the name of your binary or it would probably break afterwards. Then, later on, you need also some mbars, which basically are specifically about telling you, like, okay, it can switch both the way around this, you see, because it may be a part of whatever. If you put all this out, and, again, recall, a CNI plugin, it's a binary, so you just run it as any binary you would run, goes to your CNI plugin, and then you can exit code. If you did your things right, like that, this should be getting you an exit code of zero, not error, and then you would be getting your standard out here, which is just JSON. Why JSON? And why not using the RPC and the daemon, like everything in Kubernetes, you may ask? Because, again, this wasn't meant to be used on a lot of Kubernetes, and if you get to stay at the more networking session, they'll probably be speaking about some point using YAML for that, too. But here, for the sake of this session, what you would need to remember here is this prep results, basically, and advancing some stuff later from my colleague. This is the previous results as per JSON of the plugin, and if any plugin gets a previous result here, it should output the next one, just in a serial mode way. I was speaking about the specification. What the hell is that? So, yes, if you're implementing your plugin, you need to make sure that it observes several primitives, which is add, del, check, and version. So, for instance, you may want to add, okay, I want to add a pod. I want to delete a pod network interface. A second version, to be honest, and even if the specification really requests you to, you know, honor this and observe this, they aren't really used by most of the commercial appliances. So, for instance, Celium, I guess they don't do any kind of check, maybe version, but those aren't really needed, and we'll be discussing that later on. So, this is what a coffee file usually looks like. So, this is nothing like a big deal. Super simple. CNA version, again, for example, I'm getting you backwards, like with the things that we were speaking before. This one would work with CNA plugin change, because it's 0.3.1. If you put 0.2.0, it would basically fail miserably telling you that he hates you, and it would crash. Then you got here the name, I don't care, but this type should match the name of your binary there later on. Then you can put out some plugin-specific things that are, for instance, this basically comes from the Brits plugin, which Miguel will be showcasing later on. So you can put here, okay, this, what do I need for a Brits? I need the name. You see the default gateway, I'm going to be forcing address later on. This is a little bit special, but I won't be discussing that because you'll be seeing that later on the conflict. Again, like, okay, so you told me about CNA plugins or binaries, and also I got Jameson's configurations. So where do I store these things out? So basically, when you define the cubular configuration, you tell the CNA binary path, and by CNA binary path, it's just a directory where I store all the plugins. Sadly, there's little to no login in most of the plugins, so if something breaks, you would have to go and see what's going on here. So you would just go, one of the things that you'd like to fail the most is just like you don't have the binary here installed, and it would fail and tell you that it hits again. And the conflict directory is here, and here's just a couple of Jameson who maps to the name of the binaries usually, and where do you put this specific plugin configs? Plug-in chains. Let's go for that. So that's the big deal. Again, available since CNA or CO2-0, those are required since the version 1, because now everything is the chain, even if it's just a single plugin, and everything is the conflict, again, even if it's just a single plugin. So if you just want to put the things in the old way, it would just break. I was also pointing out that now, let's assume that you've got a couple of plugins here, like, you've got the Bricks plugin, then you've got a Firewall plugin, which is one of the most used cases for this, and then, let's say, put a couple of plugins bound with Firewall because I like to, and I'm going to be putting another Macbillan interface here. So all these plugins are expected to honor, like, that they're going to be passing the prep results to each other. So even if they don't know anything about what comes before, because the Bricks plugin will know how to make a Bricks, but the Macbillan plugin won't. So everything comes through the plugins, all the info goes through using prep results, and we'll be showing you later on as in with the demo, if it doesn't fail. This is the config, this is not a config, this is not a config for CNI plugins, this is a config list. So if you see, this pretty much resembles what you had in the config file for a plugin before. So now we got CNI version, okay, I know I'm just saying this a lot, but it should be greater than 3.0, otherwise this would just break. This is your config list, and then you get, basically, a list of plugins. At one, we got a few of those, and those would be just working together. So in this case, we got a name, because all the plugins would need the name, it would need the type, which would match the binary, and then we got the specific configurations. So in the demo, we'll be showing you how these plugins get to link with the prep results and so forth. But if you see, it's just a list of plugins with name, type, and then specific configurations, but if you just want to do something, okay, I'm buying this, I want to create my own plugin, you really need a name and type, even if it doesn't do anything. Okay, go ahead, Miguel. Now, use cases, and then, I guess I spoke maybe a little bit too much, and even if we are late because we got a rush to the airport and that, but I'm handing over to Miko Miguel, who's going to be showing you this a little bit around, and then if it works again, demo. Go ahead, Miguel. Hello? Well, I'll use this. So this is like a list of the plugins that are provided by the CNI maintainers and are available on the container networking slash plugins repository. So the first is Tuning CNI. It allows you to configure like a list of syscuddles. So if you need some syscuddles to happen inside of your pod, you use this Tuning CNI. The bandwidth CNI, as the name implies, like quite evident, what it does is to throttle either the ingress or egress traffic to your pod, if you want to do those kind of things. The firewall plugin, what it does is only allow access to and from the IP addresses that are referenced in the results that the plugin got, for instance. And the port mapping, as the name kind of implies, it does port forwarding, configures port forwarding from the host into the container for the set of ports that you specify in the configuration. Now, having said this, let's go to the demo, and I'm now wondering how can I do this while holding the microphone. This doesn't work, I think. Easy. Okay, so the first thing that I should mention, like Daniel referenced Kubernetes a lot, but please remember that CNI is more like, like Kubernetes is a user of CNI. Like, it's not that you can use CNI by itself, and as such, we're going to be using something called CNI tool. It's just a binary that you point at your, at a certain CNI binary and give it like a set of environment variables, the plugins configuration via standard then, as Daniel said before, like, you basically pass the configuration of the plugins, you give it the input parameters, which are the environment variables, and you execute the binary. And this is how we're going to be seeing, well, the demo. You can follow it on this, on this link. But yeah, the first thing I think I should explain is like the scenario we're trying to achieve. And this can be seen here in the bottom right corner. So very simple thing. We just want to have like a bridge, two namespaces interconnected via this bridge, and we're going to be configuring a static IPM on static IP addresses on each of the namespaces. And then we'll run an IPer from the client to the server, and we're going to see how it fares. So first, I also need to show you the configuration that I'm using for this. Okay, it's this one. And this is the configuration that we're going to be using to achieve this scenario. Like, we're going to be using the plugin of type bridge. This is the name of the binary that will be invoked on the host to create the bridge. We get the name, we enable the IPs capability so you can put a static IP in it and you tell it that you want static IPM. And that's pretty much the configuration that you need to give it. So let's just run the example. Okay, like this parameter here that you see, can you see it? It's like the font big enough. It's good. Okay, thanks. Like, you have to give this like the name of the configuration if you see like unlimited bandwidth, it's the attribute here on the upper left corner that you see under name. It's the same thing. It must match. And now this configured the scenario and it's now running the IPer session between the both the client and the server. And as you see, we're getting like a very big bit rate of around 60 gigabits per second. So this is with a straight configuration. Now let's use a different configuration where we put we reuse the first configuration, but we use it in a chain. And afterwards, we put like the bandwidth plugin. Again, what this does, it will throttle the input traffic into the network interface of both namespaces. So we're going to be doing the exact same thing. But with this added with this different configuration and bandwidth limiter. And as we see, like the bit rate that we're getting is literally a lot less. And it should map somehow to the values that we've configured here. So what this shows is that you can use like this band with plug in a chain in order to achieve a different use case than you had before, like you want to throttle traffic to this, you use this type of plug in. Yeah, I think that's let me just check the time. Yeah, we're good. We still have 10 minutes. So let's run the second. The second demo we had, we have actually sorry, okay, the scenario is a lot simpler this time, like we just have the same bridge as before, but we just have like a network namespace connected to it. And what we're going to be doing is showing you how the chain actually works, focusing on the on what Daniel said before, like you need to handle always the previous result, and you need to account for it. And you need to pass it along the chain continuously. And okay, let's just show the configuration of this plugin. So this chain might look a lot more complex than the one before because it has more things in it, but it's very, very, very simple. So this thing first will in it will call the bridge plugin, it will create the bridge. Then we'll invoke the debug CNI, like this CNI plugin is very, very simple. The only thing it does is print the result it got from the previous plugin. So what we're going to be seeing is here is the result of the first plugin in the chain. Afterwards, we run the tuning CNI plugin. And what we're going to do is to change the MAC address that we got on the interface of this dummy namespace that we see here. So the idea is we first run the bridge plugin. This thing will assign a random MAC address to the interface that is on this namespace. We'll print that will run tuning to change that MAC address. And we're going to print that again to see like the result of the previous plugin. And that's pretty much it. Let's just run the example and show you the, what I actually mean. So here we see like, and so this log here is the result of the, of the first call of the debug CNI. And as we see in the, in the pods, in what would be the pod interface which is identified by this attribute sandbox that points to the name of the namespace or actually to the path of the namespace. We see that in its result, we have the interface name that was created on that network namespace. And we see that it was assigned like a random MAC address that is identified here. We then run the tuning plugin that changed this MAC address and we finally printed the previous result again. And we see that this changed to the MAC address that we specifically specified statically in the, in the plugin configuration, which is exactly what we wanted to show. Like that's like very simple demo, but I think it kind of illustrates in a very neat way how chaining actually works in a step-by-step manner. And with this, we arrived at the conclusions. And I'd like to basically tell you again what we just told you, like focusing on the most important things that we think are about this slide. First thing is like these plugins, remember what they do. They add more stuff to the pod. So they enable different use cases. Like they can, you can prevent IP spoofing. You can throttle bandwidth as we've seen. You can configure port forwarding from the host to different containers. You can configure different syscuttles. And actually you can also create an allow list of the syscuttles that you can use inside of the pod. And finally I think like if you have to, to keep one thing from this presentation is that a meta-plugin must always handle the result of the previous plugin. Like you need to account for it. First of all, because you don't know if, if you're a plugin, you don't know if anything will run after you in a chain. Like the user will configure it. So you don't know what's going to happen afterwards. So you need to send a result. And if you're somewhere in the middle of the chain, least you can do, or least you must do is grab the result you got from the previous one and echo it into the next one. Now finally, remember that two things, plugin chains are only allowed starting from CNI 0.3. And they're the only configuration type allowed starting from CNI version 1.0. Like if you use the first example, configuration example we shown on CNI 1.0, it wouldn't work. It will explode, it will fail, make you miserable. And like the idea here is know your previous result always because that's probably the most information you'll get from anything that ran before you. Like as Daniel said, everything is clearly not the thing that's most prevalent on, at least on the CNI, on the plugins that are maintained by the CNI maintainers. And yeah, this concludes our, our talk. And so thanks a lot guys. Questions? Questions? Thank you. Thank you. Can you tell a little more about use cases of CNI without Kubernetes? Okay, that's a really good question. And it's going to probably eat all the time that we have. Like I can, like I work for Qvert, like, and one thing we do in it is, so there's a pod. And inside the pod, you run a virtual machine in it. Now, CNI, what it does is configure the pod interface. But what you want to have is like networking inside of VM, like you need some way to get like the extended connectivity from the pod, from the pod interface and into the VM, you need to have something there. And we have code in our code base in the Qvert code base to achieve this, like one of the thing we could do using CNI chains to offload that entire code to CNI plugins that would create, for instance, the bridge that you have inside of the pod to extend that connectivity that would create the tap device from which the VM would create the emulated network device from. So I really think this could be moduled using CNI. That's something we still need to see, like it's a very rough idea yet, but it's an example, I think. And so besides that, I guess the quickest one is, yes, you know, he was mentioning CNI tool, CNI tool is just used to develop CNI plugins. It doesn't have Kubernetes at all. And you can see that the plugins have just run there. Even that, Rocket, so Rocket, it was on its own. He didn't have to use Kubernetes at all. And it's where most of the CNI plugins were originally developed. You just put any kind of, you know, runtime engine, and it would work. No Kubernetes needed. So if I have a CNI plugin that sets up some external state, for example, a firewall that might even be a separate device, and something goes wrong, and I lose the delete, how do I recover from that? So that's an amazing question. Like you need all, like you must design everything assuming that CNI deletes will be missed. Like it might happen like all the time. So you need to have a reconciled loops of sorts that knows about your state, relevant state, and reconciles it somehow. I didn't see a way to even check if the stage should still be active. How does my CNI plugin know that something is still there? It's clueless. Like you need to monitor this little kid and assume that he will not fall and hit the head in the corner of the table. You need to do that out of bed. It's not designed to allow for that. I'm sorry. Hi. During the presentation you mentioned that some CNI plugin like Cilium, but I guess that you were also mentioning other plugins, they're not doing the logins and they're not using the entire APIs. How come? I guess you hear it. It's okay? So it kind of depends on your CNI plugin presentation. So for instance, some CNI do implement logging, but it's not something that is within implementation itself at all. So you may be totally fine in doing no logging at all, but then go back to debugging it so you can have to go to the queue with loops, you can have to go to cry over loops, and then go back to debugging all those. So it depends on your implementation. For instance, that, which is here, he implemented some of his logins for enamel, but that's not something that is on every plugin. For service, not in any of the community maintained ones. Okay, thanks. Any more questions? Well, thanks a lot for your time and for listening to us and bye-bye. Enjoy your time.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.64, "text": " Okay. Take a picture. So, good morning. My name is Daniel Mejado. I'm here today with", "tokens": [1033, 13, 3664, 257, 3036, 13, 407, 11, 665, 2446, 13, 1222, 1315, 307, 8033, 1923, 73, 1573, 13, 286, 478, 510, 965, 365], "temperature": 0.0, "avg_logprob": -0.42481133489325495, "compression_ratio": 1.453125, "no_speech_prob": 0.15779688954353333}, {"id": 1, "seek": 0, "start": 11.64, "end": 15.76, "text": " my colleague Miguel. Here we are both principals of our engineers at Weihardt. I'm currently", "tokens": [452, 13532, 29150, 13, 1692, 321, 366, 1293, 45333, 295, 527, 11955, 412, 492, 4247, 515, 83, 13, 286, 478, 4362], "temperature": 0.0, "avg_logprob": -0.42481133489325495, "compression_ratio": 1.453125, "no_speech_prob": 0.15779688954353333}, {"id": 2, "seek": 0, "start": 15.76, "end": 22.88, "text": " working in the Epsilon DTT team, basically monitoring so, and he's on the OpenShift virtualization", "tokens": [1364, 294, 264, 462, 16592, 413, 51, 51, 1469, 11, 1936, 11028, 370, 11, 293, 415, 311, 322, 264, 7238, 7774, 2008, 6374, 2144], "temperature": 0.0, "avg_logprob": -0.42481133489325495, "compression_ratio": 1.453125, "no_speech_prob": 0.15779688954353333}, {"id": 3, "seek": 0, "start": 22.88, "end": 28.68, "text": " team. I guess we just wanted to speak today a little bit about CNI, which stands for Container", "tokens": [1469, 13, 286, 2041, 321, 445, 1415, 281, 1710, 965, 257, 707, 857, 466, 14589, 40, 11, 597, 7382, 337, 43732, 260], "temperature": 0.0, "avg_logprob": -0.42481133489325495, "compression_ratio": 1.453125, "no_speech_prob": 0.15779688954353333}, {"id": 4, "seek": 2868, "start": 28.68, "end": 32.8, "text": " Network Interface, which this is basically all the networking in Kubernetes, but not", "tokens": [12640, 5751, 2868, 11, 597, 341, 307, 1936, 439, 264, 17985, 294, 23145, 11, 457, 406], "temperature": 0.0, "avg_logprob": -0.21898630261421204, "compression_ratio": 1.7211538461538463, "no_speech_prob": 0.0002516693784855306}, {"id": 5, "seek": 2868, "start": 32.8, "end": 37.76, "text": " only limited to that. Because I think one of the things that this project lacks the most", "tokens": [787, 5567, 281, 300, 13, 1436, 286, 519, 472, 295, 264, 721, 300, 341, 1716, 31132, 264, 881], "temperature": 0.0, "avg_logprob": -0.21898630261421204, "compression_ratio": 1.7211538461538463, "no_speech_prob": 0.0002516693784855306}, {"id": 6, "seek": 2868, "start": 37.76, "end": 42.0, "text": " is documentation and how does this work, how you create a plugin, what are the primitives.", "tokens": [307, 14333, 293, 577, 775, 341, 589, 11, 577, 291, 1884, 257, 23407, 11, 437, 366, 264, 2886, 38970, 13], "temperature": 0.0, "avg_logprob": -0.21898630261421204, "compression_ratio": 1.7211538461538463, "no_speech_prob": 0.0002516693784855306}, {"id": 7, "seek": 2868, "start": 42.0, "end": 46.68, "text": " I think that's something that is super simple, but there's little to no documentation besides", "tokens": [286, 519, 300, 311, 746, 300, 307, 1687, 2199, 11, 457, 456, 311, 707, 281, 572, 14333, 11868], "temperature": 0.0, "avg_logprob": -0.21898630261421204, "compression_ratio": 1.7211538461538463, "no_speech_prob": 0.0002516693784855306}, {"id": 8, "seek": 2868, "start": 46.68, "end": 53.64, "text": " the spec. So, let's go watch through that. Yeah, this is a quick intro. So, you may have", "tokens": [264, 1608, 13, 407, 11, 718, 311, 352, 1159, 807, 300, 13, 865, 11, 341, 307, 257, 1702, 12897, 13, 407, 11, 291, 815, 362], "temperature": 0.0, "avg_logprob": -0.21898630261421204, "compression_ratio": 1.7211538461538463, "no_speech_prob": 0.0002516693784855306}, {"id": 9, "seek": 2868, "start": 53.64, "end": 57.6, "text": " noticed and that we are going to be speaking about CNI plugins changed specifically. That", "tokens": [5694, 293, 300, 321, 366, 516, 281, 312, 4124, 466, 14589, 40, 33759, 3105, 4682, 13, 663], "temperature": 0.0, "avg_logprob": -0.21898630261421204, "compression_ratio": 1.7211538461538463, "no_speech_prob": 0.0002516693784855306}, {"id": 10, "seek": 5760, "start": 57.6, "end": 62.64, "text": " means that we are going to be basically putting a couple of plugins in CNI mode. But first", "tokens": [1355, 300, 321, 366, 516, 281, 312, 1936, 3372, 257, 1916, 295, 33759, 294, 14589, 40, 4391, 13, 583, 700], "temperature": 0.0, "avg_logprob": -0.21111853648040255, "compression_ratio": 1.6481481481481481, "no_speech_prob": 8.191107190214097e-05}, {"id": 11, "seek": 5760, "start": 62.64, "end": 67.24000000000001, "text": " of all, CNI may stand for three different things and I want to be a little bit clear", "tokens": [295, 439, 11, 14589, 40, 815, 1463, 337, 1045, 819, 721, 293, 286, 528, 281, 312, 257, 707, 857, 1850], "temperature": 0.0, "avg_logprob": -0.21111853648040255, "compression_ratio": 1.6481481481481481, "no_speech_prob": 8.191107190214097e-05}, {"id": 12, "seek": 5760, "start": 67.24000000000001, "end": 72.44, "text": " here. Like you're going to have the CNI specification itself, which is a document. It's fine. You", "tokens": [510, 13, 1743, 291, 434, 516, 281, 362, 264, 14589, 40, 31256, 2564, 11, 597, 307, 257, 4166, 13, 467, 311, 2489, 13, 509], "temperature": 0.0, "avg_logprob": -0.21111853648040255, "compression_ratio": 1.6481481481481481, "no_speech_prob": 8.191107190214097e-05}, {"id": 13, "seek": 5760, "start": 72.44, "end": 77.36, "text": " can read it. Then you've got the plugins. So, if you go to GitHub, you can see the CNI", "tokens": [393, 1401, 309, 13, 1396, 291, 600, 658, 264, 33759, 13, 407, 11, 498, 291, 352, 281, 23331, 11, 291, 393, 536, 264, 14589, 40], "temperature": 0.0, "avg_logprob": -0.21111853648040255, "compression_ratio": 1.6481481481481481, "no_speech_prob": 8.191107190214097e-05}, {"id": 14, "seek": 5760, "start": 77.36, "end": 82.88, "text": " plugins. This is a set of plugins basically maintained by the community. Bridge, Mac", "tokens": [33759, 13, 639, 307, 257, 992, 295, 33759, 1936, 17578, 538, 264, 1768, 13, 18917, 11, 5707], "temperature": 0.0, "avg_logprob": -0.21111853648040255, "compression_ratio": 1.6481481481481481, "no_speech_prob": 8.191107190214097e-05}, {"id": 15, "seek": 8288, "start": 82.88, "end": 87.75999999999999, "text": " BLM, you name it. There's a couple of those. And the third thing, it may be just a couple", "tokens": [15132, 44, 11, 291, 1315, 309, 13, 821, 311, 257, 1916, 295, 729, 13, 400, 264, 2636, 551, 11, 309, 815, 312, 445, 257, 1916], "temperature": 0.0, "avg_logprob": -0.24209102133046026, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0002222364564659074}, {"id": 16, "seek": 8288, "start": 87.75999999999999, "end": 92.88, "text": " of plugins. So, those are basically the three things that you may be interested into. We", "tokens": [295, 33759, 13, 407, 11, 729, 366, 1936, 264, 1045, 721, 300, 291, 815, 312, 3102, 666, 13, 492], "temperature": 0.0, "avg_logprob": -0.24209102133046026, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0002222364564659074}, {"id": 17, "seek": 8288, "start": 92.88, "end": 97.03999999999999, "text": " are going to be always speaking about the plugins here in this session, but we'll hopefully", "tokens": [366, 516, 281, 312, 1009, 4124, 466, 264, 33759, 510, 294, 341, 5481, 11, 457, 321, 603, 4696], "temperature": 0.0, "avg_logprob": -0.24209102133046026, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0002222364564659074}, {"id": 18, "seek": 8288, "start": 97.03999999999999, "end": 104.28, "text": " discuss anything after that. So, just in case, I mean, here we are going to be speaking about", "tokens": [2248, 1340, 934, 300, 13, 407, 11, 445, 294, 1389, 11, 286, 914, 11, 510, 321, 366, 516, 281, 312, 4124, 466], "temperature": 0.0, "avg_logprob": -0.24209102133046026, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0002222364564659074}, {"id": 19, "seek": 8288, "start": 104.28, "end": 109.91999999999999, "text": " Kubernetes, but let me take a note that the CNI specification on the plugins, they do", "tokens": [23145, 11, 457, 718, 385, 747, 257, 3637, 300, 264, 14589, 40, 31256, 322, 264, 33759, 11, 436, 360], "temperature": 0.0, "avg_logprob": -0.24209102133046026, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0002222364564659074}, {"id": 20, "seek": 10992, "start": 109.92, "end": 115.36, "text": " work totally without Kubernetes. So, with any runtime engine such as Rocket, and in fact,", "tokens": [589, 3879, 1553, 23145, 13, 407, 11, 365, 604, 34474, 2848, 1270, 382, 29651, 11, 293, 294, 1186, 11], "temperature": 0.0, "avg_logprob": -0.2605245489823191, "compression_ratio": 1.7882352941176471, "no_speech_prob": 0.0002372445014771074}, {"id": 21, "seek": 10992, "start": 115.36, "end": 119.04, "text": " these are started out with Rocket. Well, I guess in case you started that out, you can", "tokens": [613, 366, 1409, 484, 365, 29651, 13, 1042, 11, 286, 2041, 294, 1389, 291, 1409, 300, 484, 11, 291, 393], "temperature": 0.0, "avg_logprob": -0.2605245489823191, "compression_ratio": 1.7882352941176471, "no_speech_prob": 0.0002372445014771074}, {"id": 22, "seek": 10992, "start": 119.04, "end": 124.16, "text": " be running this out with cryo, Rocket, whatever you want to play with this. So, what is the", "tokens": [312, 2614, 341, 484, 365, 3305, 78, 11, 29651, 11, 2035, 291, 528, 281, 862, 365, 341, 13, 407, 11, 437, 307, 264], "temperature": 0.0, "avg_logprob": -0.2605245489823191, "compression_ratio": 1.7882352941176471, "no_speech_prob": 0.0002372445014771074}, {"id": 23, "seek": 10992, "start": 124.16, "end": 130.44, "text": " CNI plugin specifically? CNI plugins are binaries, which are basically copied over any of the", "tokens": [14589, 40, 23407, 4682, 30, 14589, 40, 33759, 366, 5171, 4889, 11, 597, 366, 1936, 25365, 670, 604, 295, 264], "temperature": 0.0, "avg_logprob": -0.2605245489823191, "compression_ratio": 1.7882352941176471, "no_speech_prob": 0.0002372445014771074}, {"id": 24, "seek": 10992, "start": 130.44, "end": 137.56, "text": " hosts that are in your Kubernetes clusters. So, if you want to install this out, you probably", "tokens": [21573, 300, 366, 294, 428, 23145, 23313, 13, 407, 11, 498, 291, 528, 281, 3625, 341, 484, 11, 291, 1391], "temperature": 0.0, "avg_logprob": -0.2605245489823191, "compression_ratio": 1.7882352941176471, "no_speech_prob": 0.0002372445014771074}, {"id": 25, "seek": 13756, "start": 137.56, "end": 145.2, "text": " need a demo set to deploy it on or do that manually. So, here, who runs this CNI plugins?", "tokens": [643, 257, 10723, 992, 281, 7274, 309, 322, 420, 360, 300, 16945, 13, 407, 11, 510, 11, 567, 6676, 341, 14589, 40, 33759, 30], "temperature": 0.0, "avg_logprob": -0.240674504693949, "compression_ratio": 1.5884955752212389, "no_speech_prob": 0.00012599964975379407}, {"id": 26, "seek": 13756, "start": 145.2, "end": 150.24, "text": " You could either run that yourself, but usually, you would need to have the kubelet run those", "tokens": [509, 727, 2139, 1190, 300, 1803, 11, 457, 2673, 11, 291, 576, 643, 281, 362, 264, 350, 836, 15966, 1190, 729], "temperature": 0.0, "avg_logprob": -0.240674504693949, "compression_ratio": 1.5884955752212389, "no_speech_prob": 0.00012599964975379407}, {"id": 27, "seek": 13756, "start": 150.24, "end": 156.08, "text": " for you. Is there anybody here who doesn't know what a kubelet is? Okay. The kubelet,", "tokens": [337, 291, 13, 1119, 456, 4472, 510, 567, 1177, 380, 458, 437, 257, 350, 836, 15966, 307, 30, 1033, 13, 440, 350, 836, 15966, 11], "temperature": 0.0, "avg_logprob": -0.240674504693949, "compression_ratio": 1.5884955752212389, "no_speech_prob": 0.00012599964975379407}, {"id": 28, "seek": 13756, "start": 156.08, "end": 163.8, "text": " oh, you fuck, anyway. They were trying me out. So, anyways, I'll go ahead. So, basically,", "tokens": [1954, 11, 291, 3275, 11, 4033, 13, 814, 645, 1382, 385, 484, 13, 407, 11, 13448, 11, 286, 603, 352, 2286, 13, 407, 11, 1936, 11], "temperature": 0.0, "avg_logprob": -0.240674504693949, "compression_ratio": 1.5884955752212389, "no_speech_prob": 0.00012599964975379407}, {"id": 29, "seek": 16380, "start": 163.8, "end": 167.92000000000002, "text": " when you go and have the kubelet, which is a mystery thing that you don't know what it's", "tokens": [562, 291, 352, 293, 362, 264, 350, 836, 15966, 11, 597, 307, 257, 11422, 551, 300, 291, 500, 380, 458, 437, 309, 311], "temperature": 0.0, "avg_logprob": -0.206289086460082, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.0002072341158054769}, {"id": 30, "seek": 16380, "start": 167.92000000000002, "end": 173.4, "text": " about, runs the binary here in the host, it basically creates a network name and space,", "tokens": [466, 11, 6676, 264, 17434, 510, 294, 264, 3975, 11, 309, 1936, 7829, 257, 3209, 1315, 293, 1901, 11], "temperature": 0.0, "avg_logprob": -0.206289086460082, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.0002072341158054769}, {"id": 31, "seek": 16380, "start": 173.4, "end": 177.92000000000002, "text": " which is tied to a BF interface. As this guy doesn't know what a BF interface is, I'm", "tokens": [597, 307, 9601, 281, 257, 363, 37, 9226, 13, 1018, 341, 2146, 1177, 380, 458, 437, 257, 363, 37, 9226, 307, 11, 286, 478], "temperature": 0.0, "avg_logprob": -0.206289086460082, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.0002072341158054769}, {"id": 32, "seek": 16380, "start": 177.92000000000002, "end": 184.68, "text": " going to be basically speaking out for him. So, it's a B12 point-to-point tunnel, so you", "tokens": [516, 281, 312, 1936, 4124, 484, 337, 796, 13, 407, 11, 309, 311, 257, 363, 4762, 935, 12, 1353, 12, 6053, 13186, 11, 370, 291], "temperature": 0.0, "avg_logprob": -0.206289086460082, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.0002072341158054769}, {"id": 33, "seek": 16380, "start": 184.68, "end": 189.52, "text": " can basically hook this up into whatever you want to. Like, usually, these are connected", "tokens": [393, 1936, 6328, 341, 493, 666, 2035, 291, 528, 281, 13, 1743, 11, 2673, 11, 613, 366, 4582], "temperature": 0.0, "avg_logprob": -0.206289086460082, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.0002072341158054769}, {"id": 34, "seek": 18952, "start": 189.52, "end": 197.88, "text": " to OVN, OpenB streets, or whatever, B12 streets, or it depends on the CNI plugin implementation.", "tokens": [281, 422, 53, 45, 11, 7238, 33, 8481, 11, 420, 2035, 11, 363, 4762, 8481, 11, 420, 309, 5946, 322, 264, 14589, 40, 23407, 11420, 13], "temperature": 0.0, "avg_logprob": -0.2888315219690304, "compression_ratio": 1.5423728813559323, "no_speech_prob": 9.51993788476102e-05}, {"id": 35, "seek": 18952, "start": 197.88, "end": 203.20000000000002, "text": " How do I configure the thing? These are used, like, configured by a configuration file.", "tokens": [1012, 360, 286, 22162, 264, 551, 30, 1981, 366, 1143, 11, 411, 11, 30538, 538, 257, 11694, 3991, 13], "temperature": 0.0, "avg_logprob": -0.2888315219690304, "compression_ratio": 1.5423728813559323, "no_speech_prob": 9.51993788476102e-05}, {"id": 36, "seek": 18952, "start": 203.20000000000002, "end": 208.44, "text": " We're going to be speaking later on a little bit about how this changes. But, yes, FYI,", "tokens": [492, 434, 516, 281, 312, 4124, 1780, 322, 257, 707, 857, 466, 577, 341, 2962, 13, 583, 11, 2086, 11, 42730, 40, 11], "temperature": 0.0, "avg_logprob": -0.2888315219690304, "compression_ratio": 1.5423728813559323, "no_speech_prob": 9.51993788476102e-05}, {"id": 37, "seek": 18952, "start": 208.44, "end": 215.04000000000002, "text": " and Miguel will be speaking later on about this more. Prior to the CNI specification 0.3.0,", "tokens": [293, 29150, 486, 312, 4124, 1780, 322, 466, 341, 544, 13, 24032, 281, 264, 14589, 40, 31256, 1958, 13, 18, 13, 15, 11], "temperature": 0.0, "avg_logprob": -0.2888315219690304, "compression_ratio": 1.5423728813559323, "no_speech_prob": 9.51993788476102e-05}, {"id": 38, "seek": 21504, "start": 215.04, "end": 220.84, "text": " you weren't able to, you know, put your plugins in CL mode. It would just break. So, you would", "tokens": [291, 4999, 380, 1075, 281, 11, 291, 458, 11, 829, 428, 33759, 294, 12855, 4391, 13, 467, 576, 445, 1821, 13, 407, 11, 291, 576], "temperature": 0.0, "avg_logprob": -0.24628503443831104, "compression_ratio": 1.75, "no_speech_prob": 0.00010840425966307521}, {"id": 39, "seek": 21504, "start": 220.84, "end": 226.68, "text": " need to know, basically, there's a couple of CNI components that you need to put. Basically,", "tokens": [643, 281, 458, 11, 1936, 11, 456, 311, 257, 1916, 295, 14589, 40, 6677, 300, 291, 643, 281, 829, 13, 8537, 11], "temperature": 0.0, "avg_logprob": -0.24628503443831104, "compression_ratio": 1.75, "no_speech_prob": 0.00010840425966307521}, {"id": 40, "seek": 21504, "start": 226.68, "end": 231.16, "text": " the name of your CNI plugin, the type, and the type should match the name of your binary", "tokens": [264, 1315, 295, 428, 14589, 40, 23407, 11, 264, 2010, 11, 293, 264, 2010, 820, 2995, 264, 1315, 295, 428, 17434], "temperature": 0.0, "avg_logprob": -0.24628503443831104, "compression_ratio": 1.75, "no_speech_prob": 0.00010840425966307521}, {"id": 41, "seek": 21504, "start": 231.16, "end": 237.35999999999999, "text": " or it would probably break afterwards. Then, later on, you need also some mbars, which", "tokens": [420, 309, 576, 1391, 1821, 10543, 13, 1396, 11, 1780, 322, 11, 291, 643, 611, 512, 275, 42162, 11, 597], "temperature": 0.0, "avg_logprob": -0.24628503443831104, "compression_ratio": 1.75, "no_speech_prob": 0.00010840425966307521}, {"id": 42, "seek": 21504, "start": 237.35999999999999, "end": 242.72, "text": " basically are specifically about telling you, like, okay, it can switch both the way around", "tokens": [1936, 366, 4682, 466, 3585, 291, 11, 411, 11, 1392, 11, 309, 393, 3679, 1293, 264, 636, 926], "temperature": 0.0, "avg_logprob": -0.24628503443831104, "compression_ratio": 1.75, "no_speech_prob": 0.00010840425966307521}, {"id": 43, "seek": 24272, "start": 242.72, "end": 248.8, "text": " this, you see, because it may be a part of whatever. If you put all this out, and, again,", "tokens": [341, 11, 291, 536, 11, 570, 309, 815, 312, 257, 644, 295, 2035, 13, 759, 291, 829, 439, 341, 484, 11, 293, 11, 797, 11], "temperature": 0.0, "avg_logprob": -0.2788466506116972, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.00015852371871005744}, {"id": 44, "seek": 24272, "start": 248.8, "end": 254.6, "text": " recall, a CNI plugin, it's a binary, so you just run it as any binary you would run, goes", "tokens": [9901, 11, 257, 14589, 40, 23407, 11, 309, 311, 257, 17434, 11, 370, 291, 445, 1190, 309, 382, 604, 17434, 291, 576, 1190, 11, 1709], "temperature": 0.0, "avg_logprob": -0.2788466506116972, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.00015852371871005744}, {"id": 45, "seek": 24272, "start": 254.6, "end": 260.8, "text": " to your CNI plugin, and then you can exit code. If you did your things right, like that,", "tokens": [281, 428, 14589, 40, 23407, 11, 293, 550, 291, 393, 11043, 3089, 13, 759, 291, 630, 428, 721, 558, 11, 411, 300, 11], "temperature": 0.0, "avg_logprob": -0.2788466506116972, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.00015852371871005744}, {"id": 46, "seek": 24272, "start": 260.8, "end": 265.68, "text": " this should be getting you an exit code of zero, not error, and then you would be getting", "tokens": [341, 820, 312, 1242, 291, 364, 11043, 3089, 295, 4018, 11, 406, 6713, 11, 293, 550, 291, 576, 312, 1242], "temperature": 0.0, "avg_logprob": -0.2788466506116972, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.00015852371871005744}, {"id": 47, "seek": 24272, "start": 265.68, "end": 271.0, "text": " your standard out here, which is just JSON. Why JSON? And why not using the RPC and the", "tokens": [428, 3832, 484, 510, 11, 597, 307, 445, 31828, 13, 1545, 31828, 30, 400, 983, 406, 1228, 264, 497, 12986, 293, 264], "temperature": 0.0, "avg_logprob": -0.2788466506116972, "compression_ratio": 1.735408560311284, "no_speech_prob": 0.00015852371871005744}, {"id": 48, "seek": 27100, "start": 271.0, "end": 275.36, "text": " daemon, like everything in Kubernetes, you may ask? Because, again, this wasn't meant", "tokens": [1120, 36228, 11, 411, 1203, 294, 23145, 11, 291, 815, 1029, 30, 1436, 11, 797, 11, 341, 2067, 380, 4140], "temperature": 0.0, "avg_logprob": -0.255520502726237, "compression_ratio": 1.6115107913669064, "no_speech_prob": 0.0005389287252910435}, {"id": 49, "seek": 27100, "start": 275.36, "end": 282.0, "text": " to be used on a lot of Kubernetes, and if you get to stay at the more networking session,", "tokens": [281, 312, 1143, 322, 257, 688, 295, 23145, 11, 293, 498, 291, 483, 281, 1754, 412, 264, 544, 17985, 5481, 11], "temperature": 0.0, "avg_logprob": -0.255520502726237, "compression_ratio": 1.6115107913669064, "no_speech_prob": 0.0005389287252910435}, {"id": 50, "seek": 27100, "start": 282.0, "end": 286.72, "text": " they'll probably be speaking about some point using YAML for that, too. But here, for the", "tokens": [436, 603, 1391, 312, 4124, 466, 512, 935, 1228, 398, 2865, 43, 337, 300, 11, 886, 13, 583, 510, 11, 337, 264], "temperature": 0.0, "avg_logprob": -0.255520502726237, "compression_ratio": 1.6115107913669064, "no_speech_prob": 0.0005389287252910435}, {"id": 51, "seek": 27100, "start": 286.72, "end": 293.2, "text": " sake of this session, what you would need to remember here is this prep results, basically,", "tokens": [9717, 295, 341, 5481, 11, 437, 291, 576, 643, 281, 1604, 510, 307, 341, 2666, 3542, 11, 1936, 11], "temperature": 0.0, "avg_logprob": -0.255520502726237, "compression_ratio": 1.6115107913669064, "no_speech_prob": 0.0005389287252910435}, {"id": 52, "seek": 27100, "start": 293.2, "end": 298.32, "text": " and advancing some stuff later from my colleague. This is the previous results as per JSON", "tokens": [293, 27267, 512, 1507, 1780, 490, 452, 13532, 13, 639, 307, 264, 3894, 3542, 382, 680, 31828], "temperature": 0.0, "avg_logprob": -0.255520502726237, "compression_ratio": 1.6115107913669064, "no_speech_prob": 0.0005389287252910435}, {"id": 53, "seek": 29832, "start": 298.32, "end": 304.59999999999997, "text": " of the plugin, and if any plugin gets a previous result here, it should output the next one,", "tokens": [295, 264, 23407, 11, 293, 498, 604, 23407, 2170, 257, 3894, 1874, 510, 11, 309, 820, 5598, 264, 958, 472, 11], "temperature": 0.0, "avg_logprob": -0.1803338071133228, "compression_ratio": 1.5478260869565217, "no_speech_prob": 0.0002360740036237985}, {"id": 54, "seek": 29832, "start": 304.59999999999997, "end": 312.15999999999997, "text": " just in a serial mode way. I was speaking about the specification. What the hell is", "tokens": [445, 294, 257, 17436, 4391, 636, 13, 286, 390, 4124, 466, 264, 31256, 13, 708, 264, 4921, 307], "temperature": 0.0, "avg_logprob": -0.1803338071133228, "compression_ratio": 1.5478260869565217, "no_speech_prob": 0.0002360740036237985}, {"id": 55, "seek": 29832, "start": 312.15999999999997, "end": 320.24, "text": " that? So, yes, if you're implementing your plugin, you need to make sure that it observes", "tokens": [300, 30, 407, 11, 2086, 11, 498, 291, 434, 18114, 428, 23407, 11, 291, 643, 281, 652, 988, 300, 309, 3181, 9054], "temperature": 0.0, "avg_logprob": -0.1803338071133228, "compression_ratio": 1.5478260869565217, "no_speech_prob": 0.0002360740036237985}, {"id": 56, "seek": 29832, "start": 320.24, "end": 326.68, "text": " several primitives, which is add, del, check, and version. So, for instance, you may want", "tokens": [2940, 2886, 38970, 11, 597, 307, 909, 11, 1103, 11, 1520, 11, 293, 3037, 13, 407, 11, 337, 5197, 11, 291, 815, 528], "temperature": 0.0, "avg_logprob": -0.1803338071133228, "compression_ratio": 1.5478260869565217, "no_speech_prob": 0.0002360740036237985}, {"id": 57, "seek": 32668, "start": 326.68, "end": 333.36, "text": " to add, okay, I want to add a pod. I want to delete a pod network interface. A second", "tokens": [281, 909, 11, 1392, 11, 286, 528, 281, 909, 257, 2497, 13, 286, 528, 281, 12097, 257, 2497, 3209, 9226, 13, 316, 1150], "temperature": 0.0, "avg_logprob": -0.25299135167548, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.000192513907677494}, {"id": 58, "seek": 32668, "start": 333.36, "end": 339.08, "text": " version, to be honest, and even if the specification really requests you to, you know, honor this", "tokens": [3037, 11, 281, 312, 3245, 11, 293, 754, 498, 264, 31256, 534, 12475, 291, 281, 11, 291, 458, 11, 5968, 341], "temperature": 0.0, "avg_logprob": -0.25299135167548, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.000192513907677494}, {"id": 59, "seek": 32668, "start": 339.08, "end": 344.6, "text": " and observe this, they aren't really used by most of the commercial appliances. So,", "tokens": [293, 11441, 341, 11, 436, 3212, 380, 534, 1143, 538, 881, 295, 264, 6841, 35480, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.25299135167548, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.000192513907677494}, {"id": 60, "seek": 32668, "start": 344.6, "end": 350.52, "text": " for instance, Celium, I guess they don't do any kind of check, maybe version, but those", "tokens": [337, 5197, 11, 19967, 2197, 11, 286, 2041, 436, 500, 380, 360, 604, 733, 295, 1520, 11, 1310, 3037, 11, 457, 729], "temperature": 0.0, "avg_logprob": -0.25299135167548, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.000192513907677494}, {"id": 61, "seek": 35052, "start": 350.52, "end": 356.84, "text": " aren't really needed, and we'll be discussing that later on. So, this is what a coffee file", "tokens": [3212, 380, 534, 2978, 11, 293, 321, 603, 312, 10850, 300, 1780, 322, 13, 407, 11, 341, 307, 437, 257, 4982, 3991], "temperature": 0.0, "avg_logprob": -0.20678677097443612, "compression_ratio": 1.6035714285714286, "no_speech_prob": 0.00019024267385248095}, {"id": 62, "seek": 35052, "start": 356.84, "end": 364.03999999999996, "text": " usually looks like. So, this is nothing like a big deal. Super simple. CNA version, again,", "tokens": [2673, 1542, 411, 13, 407, 11, 341, 307, 1825, 411, 257, 955, 2028, 13, 4548, 2199, 13, 383, 5321, 3037, 11, 797, 11], "temperature": 0.0, "avg_logprob": -0.20678677097443612, "compression_ratio": 1.6035714285714286, "no_speech_prob": 0.00019024267385248095}, {"id": 63, "seek": 35052, "start": 364.03999999999996, "end": 368.76, "text": " for example, I'm getting you backwards, like with the things that we were speaking before.", "tokens": [337, 1365, 11, 286, 478, 1242, 291, 12204, 11, 411, 365, 264, 721, 300, 321, 645, 4124, 949, 13], "temperature": 0.0, "avg_logprob": -0.20678677097443612, "compression_ratio": 1.6035714285714286, "no_speech_prob": 0.00019024267385248095}, {"id": 64, "seek": 35052, "start": 368.76, "end": 374.71999999999997, "text": " This one would work with CNA plugin change, because it's 0.3.1. If you put 0.2.0, it would", "tokens": [639, 472, 576, 589, 365, 383, 5321, 23407, 1319, 11, 570, 309, 311, 1958, 13, 18, 13, 16, 13, 759, 291, 829, 1958, 13, 17, 13, 15, 11, 309, 576], "temperature": 0.0, "avg_logprob": -0.20678677097443612, "compression_ratio": 1.6035714285714286, "no_speech_prob": 0.00019024267385248095}, {"id": 65, "seek": 35052, "start": 374.71999999999997, "end": 379.28, "text": " basically fail miserably telling you that he hates you, and it would crash. Then you", "tokens": [1936, 3061, 17725, 1188, 3585, 291, 300, 415, 23000, 291, 11, 293, 309, 576, 8252, 13, 1396, 291], "temperature": 0.0, "avg_logprob": -0.20678677097443612, "compression_ratio": 1.6035714285714286, "no_speech_prob": 0.00019024267385248095}, {"id": 66, "seek": 37928, "start": 379.28, "end": 384.59999999999997, "text": " got here the name, I don't care, but this type should match the name of your binary", "tokens": [658, 510, 264, 1315, 11, 286, 500, 380, 1127, 11, 457, 341, 2010, 820, 2995, 264, 1315, 295, 428, 17434], "temperature": 0.0, "avg_logprob": -0.2288003905206664, "compression_ratio": 1.6807692307692308, "no_speech_prob": 6.848412158433348e-05}, {"id": 67, "seek": 37928, "start": 384.59999999999997, "end": 390.4, "text": " there later on. Then you can put out some plugin-specific things that are, for instance,", "tokens": [456, 1780, 322, 13, 1396, 291, 393, 829, 484, 512, 23407, 12, 29258, 721, 300, 366, 11, 337, 5197, 11], "temperature": 0.0, "avg_logprob": -0.2288003905206664, "compression_ratio": 1.6807692307692308, "no_speech_prob": 6.848412158433348e-05}, {"id": 68, "seek": 37928, "start": 390.4, "end": 395.79999999999995, "text": " this basically comes from the Brits plugin, which Miguel will be showcasing later on.", "tokens": [341, 1936, 1487, 490, 264, 1603, 1208, 23407, 11, 597, 29150, 486, 312, 29794, 3349, 1780, 322, 13], "temperature": 0.0, "avg_logprob": -0.2288003905206664, "compression_ratio": 1.6807692307692308, "no_speech_prob": 6.848412158433348e-05}, {"id": 69, "seek": 37928, "start": 395.79999999999995, "end": 399.84, "text": " So you can put here, okay, this, what do I need for a Brits? I need the name. You see", "tokens": [407, 291, 393, 829, 510, 11, 1392, 11, 341, 11, 437, 360, 286, 643, 337, 257, 1603, 1208, 30, 286, 643, 264, 1315, 13, 509, 536], "temperature": 0.0, "avg_logprob": -0.2288003905206664, "compression_ratio": 1.6807692307692308, "no_speech_prob": 6.848412158433348e-05}, {"id": 70, "seek": 37928, "start": 399.84, "end": 406.32, "text": " the default gateway, I'm going to be forcing address later on. This is a little bit special,", "tokens": [264, 7576, 28532, 11, 286, 478, 516, 281, 312, 19030, 2985, 1780, 322, 13, 639, 307, 257, 707, 857, 2121, 11], "temperature": 0.0, "avg_logprob": -0.2288003905206664, "compression_ratio": 1.6807692307692308, "no_speech_prob": 6.848412158433348e-05}, {"id": 71, "seek": 40632, "start": 406.32, "end": 413.2, "text": " but I won't be discussing that because you'll be seeing that later on the conflict. Again,", "tokens": [457, 286, 1582, 380, 312, 10850, 300, 570, 291, 603, 312, 2577, 300, 1780, 322, 264, 6596, 13, 3764, 11], "temperature": 0.0, "avg_logprob": -0.2291649409702846, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.0001220932899741456}, {"id": 72, "seek": 40632, "start": 413.2, "end": 420.92, "text": " like, okay, so you told me about CNA plugins or binaries, and also I got Jameson's configurations.", "tokens": [411, 11, 1392, 11, 370, 291, 1907, 385, 466, 383, 5321, 33759, 420, 5171, 4889, 11, 293, 611, 286, 658, 5678, 266, 311, 31493, 13], "temperature": 0.0, "avg_logprob": -0.2291649409702846, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.0001220932899741456}, {"id": 73, "seek": 40632, "start": 420.92, "end": 427.24, "text": " So where do I store these things out? So basically, when you define the cubular configuration,", "tokens": [407, 689, 360, 286, 3531, 613, 721, 484, 30, 407, 1936, 11, 562, 291, 6964, 264, 10057, 1040, 11694, 11], "temperature": 0.0, "avg_logprob": -0.2291649409702846, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.0001220932899741456}, {"id": 74, "seek": 40632, "start": 427.24, "end": 433.32, "text": " you tell the CNA binary path, and by CNA binary path, it's just a directory where I store", "tokens": [291, 980, 264, 383, 5321, 17434, 3100, 11, 293, 538, 383, 5321, 17434, 3100, 11, 309, 311, 445, 257, 21120, 689, 286, 3531], "temperature": 0.0, "avg_logprob": -0.2291649409702846, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.0001220932899741456}, {"id": 75, "seek": 43332, "start": 433.32, "end": 438.48, "text": " all the plugins. Sadly, there's little to no login in most of the plugins, so if something", "tokens": [439, 264, 33759, 13, 29628, 11, 456, 311, 707, 281, 572, 24276, 294, 881, 295, 264, 33759, 11, 370, 498, 746], "temperature": 0.0, "avg_logprob": -0.20795882461417434, "compression_ratio": 1.7698412698412698, "no_speech_prob": 0.00014478579396381974}, {"id": 76, "seek": 43332, "start": 438.48, "end": 444.36, "text": " breaks, you would have to go and see what's going on here. So you would just go, one of", "tokens": [9857, 11, 291, 576, 362, 281, 352, 293, 536, 437, 311, 516, 322, 510, 13, 407, 291, 576, 445, 352, 11, 472, 295], "temperature": 0.0, "avg_logprob": -0.20795882461417434, "compression_ratio": 1.7698412698412698, "no_speech_prob": 0.00014478579396381974}, {"id": 77, "seek": 43332, "start": 444.36, "end": 447.96, "text": " the things that you'd like to fail the most is just like you don't have the binary here", "tokens": [264, 721, 300, 291, 1116, 411, 281, 3061, 264, 881, 307, 445, 411, 291, 500, 380, 362, 264, 17434, 510], "temperature": 0.0, "avg_logprob": -0.20795882461417434, "compression_ratio": 1.7698412698412698, "no_speech_prob": 0.00014478579396381974}, {"id": 78, "seek": 43332, "start": 447.96, "end": 451.84, "text": " installed, and it would fail and tell you that it hits again. And the conflict directory", "tokens": [8899, 11, 293, 309, 576, 3061, 293, 980, 291, 300, 309, 8664, 797, 13, 400, 264, 6596, 21120], "temperature": 0.0, "avg_logprob": -0.20795882461417434, "compression_ratio": 1.7698412698412698, "no_speech_prob": 0.00014478579396381974}, {"id": 79, "seek": 43332, "start": 451.84, "end": 457.36, "text": " is here, and here's just a couple of Jameson who maps to the name of the binaries usually,", "tokens": [307, 510, 11, 293, 510, 311, 445, 257, 1916, 295, 5678, 266, 567, 11317, 281, 264, 1315, 295, 264, 5171, 4889, 2673, 11], "temperature": 0.0, "avg_logprob": -0.20795882461417434, "compression_ratio": 1.7698412698412698, "no_speech_prob": 0.00014478579396381974}, {"id": 80, "seek": 45736, "start": 457.36, "end": 464.44, "text": " and where do you put this specific plugin configs? Plug-in chains. Let's go for that.", "tokens": [293, 689, 360, 291, 829, 341, 2685, 23407, 6662, 82, 30, 40740, 12, 259, 12626, 13, 961, 311, 352, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.2265099034164891, "compression_ratio": 1.662037037037037, "no_speech_prob": 7.360434392467141e-05}, {"id": 81, "seek": 45736, "start": 464.44, "end": 473.44, "text": " So that's the big deal. Again, available since CNA or CO2-0, those are required since the", "tokens": [407, 300, 311, 264, 955, 2028, 13, 3764, 11, 2435, 1670, 383, 5321, 420, 3002, 17, 12, 15, 11, 729, 366, 4739, 1670, 264], "temperature": 0.0, "avg_logprob": -0.2265099034164891, "compression_ratio": 1.662037037037037, "no_speech_prob": 7.360434392467141e-05}, {"id": 82, "seek": 45736, "start": 473.44, "end": 478.76, "text": " version 1, because now everything is the chain, even if it's just a single plugin, and everything", "tokens": [3037, 502, 11, 570, 586, 1203, 307, 264, 5021, 11, 754, 498, 309, 311, 445, 257, 2167, 23407, 11, 293, 1203], "temperature": 0.0, "avg_logprob": -0.2265099034164891, "compression_ratio": 1.662037037037037, "no_speech_prob": 7.360434392467141e-05}, {"id": 83, "seek": 45736, "start": 478.76, "end": 484.08000000000004, "text": " is the conflict, again, even if it's just a single plugin. So if you just want to put", "tokens": [307, 264, 6596, 11, 797, 11, 754, 498, 309, 311, 445, 257, 2167, 23407, 13, 407, 498, 291, 445, 528, 281, 829], "temperature": 0.0, "avg_logprob": -0.2265099034164891, "compression_ratio": 1.662037037037037, "no_speech_prob": 7.360434392467141e-05}, {"id": 84, "seek": 48408, "start": 484.08, "end": 490.91999999999996, "text": " the things in the old way, it would just break. I was also pointing out that now, let's assume", "tokens": [264, 721, 294, 264, 1331, 636, 11, 309, 576, 445, 1821, 13, 286, 390, 611, 12166, 484, 300, 586, 11, 718, 311, 6552], "temperature": 0.0, "avg_logprob": -0.29414199602485885, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.00010630637552822009}, {"id": 85, "seek": 48408, "start": 490.91999999999996, "end": 494.91999999999996, "text": " that you've got a couple of plugins here, like, you've got the Bricks plugin, then you've", "tokens": [300, 291, 600, 658, 257, 1916, 295, 33759, 510, 11, 411, 11, 291, 600, 658, 264, 1603, 7663, 23407, 11, 550, 291, 600], "temperature": 0.0, "avg_logprob": -0.29414199602485885, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.00010630637552822009}, {"id": 86, "seek": 48408, "start": 494.91999999999996, "end": 502.56, "text": " got a Firewall plugin, which is one of the most used cases for this, and then, let's", "tokens": [658, 257, 7652, 16256, 23407, 11, 597, 307, 472, 295, 264, 881, 1143, 3331, 337, 341, 11, 293, 550, 11, 718, 311], "temperature": 0.0, "avg_logprob": -0.29414199602485885, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.00010630637552822009}, {"id": 87, "seek": 48408, "start": 502.56, "end": 508.47999999999996, "text": " say, put a couple of plugins bound with Firewall because I like to, and I'm going to be putting", "tokens": [584, 11, 829, 257, 1916, 295, 33759, 5472, 365, 7652, 16256, 570, 286, 411, 281, 11, 293, 286, 478, 516, 281, 312, 3372], "temperature": 0.0, "avg_logprob": -0.29414199602485885, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.00010630637552822009}, {"id": 88, "seek": 50848, "start": 508.48, "end": 517.24, "text": " another Macbillan interface here. So all these plugins are expected to honor, like, that", "tokens": [1071, 5707, 65, 373, 282, 9226, 510, 13, 407, 439, 613, 33759, 366, 5176, 281, 5968, 11, 411, 11, 300], "temperature": 0.0, "avg_logprob": -0.24514422285447426, "compression_ratio": 1.7591836734693878, "no_speech_prob": 0.00012789263564627618}, {"id": 89, "seek": 50848, "start": 517.24, "end": 521.32, "text": " they're going to be passing the prep results to each other. So even if they don't know", "tokens": [436, 434, 516, 281, 312, 8437, 264, 2666, 3542, 281, 1184, 661, 13, 407, 754, 498, 436, 500, 380, 458], "temperature": 0.0, "avg_logprob": -0.24514422285447426, "compression_ratio": 1.7591836734693878, "no_speech_prob": 0.00012789263564627618}, {"id": 90, "seek": 50848, "start": 521.32, "end": 525.0, "text": " anything about what comes before, because the Bricks plugin will know how to make a", "tokens": [1340, 466, 437, 1487, 949, 11, 570, 264, 1603, 7663, 23407, 486, 458, 577, 281, 652, 257], "temperature": 0.0, "avg_logprob": -0.24514422285447426, "compression_ratio": 1.7591836734693878, "no_speech_prob": 0.00012789263564627618}, {"id": 91, "seek": 50848, "start": 525.0, "end": 530.36, "text": " Bricks, but the Macbillan plugin won't. So everything comes through the plugins, all", "tokens": [1603, 7663, 11, 457, 264, 5707, 65, 373, 282, 23407, 1582, 380, 13, 407, 1203, 1487, 807, 264, 33759, 11, 439], "temperature": 0.0, "avg_logprob": -0.24514422285447426, "compression_ratio": 1.7591836734693878, "no_speech_prob": 0.00012789263564627618}, {"id": 92, "seek": 50848, "start": 530.36, "end": 533.4, "text": " the info goes through using prep results, and we'll be showing you later on as in with", "tokens": [264, 13614, 1709, 807, 1228, 2666, 3542, 11, 293, 321, 603, 312, 4099, 291, 1780, 322, 382, 294, 365], "temperature": 0.0, "avg_logprob": -0.24514422285447426, "compression_ratio": 1.7591836734693878, "no_speech_prob": 0.00012789263564627618}, {"id": 93, "seek": 53340, "start": 533.4, "end": 541.68, "text": " the demo, if it doesn't fail. This is the config, this is not a config, this is not a", "tokens": [264, 10723, 11, 498, 309, 1177, 380, 3061, 13, 639, 307, 264, 6662, 11, 341, 307, 406, 257, 6662, 11, 341, 307, 406, 257], "temperature": 0.0, "avg_logprob": -0.24709008379680356, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00010620914690662175}, {"id": 94, "seek": 53340, "start": 541.68, "end": 546.48, "text": " config for CNI plugins, this is a config list. So if you see, this pretty much resembles", "tokens": [6662, 337, 14589, 40, 33759, 11, 341, 307, 257, 6662, 1329, 13, 407, 498, 291, 536, 11, 341, 1238, 709, 34433], "temperature": 0.0, "avg_logprob": -0.24709008379680356, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00010620914690662175}, {"id": 95, "seek": 53340, "start": 546.48, "end": 552.52, "text": " what you had in the config file for a plugin before. So now we got CNI version, okay, I", "tokens": [437, 291, 632, 294, 264, 6662, 3991, 337, 257, 23407, 949, 13, 407, 586, 321, 658, 14589, 40, 3037, 11, 1392, 11, 286], "temperature": 0.0, "avg_logprob": -0.24709008379680356, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00010620914690662175}, {"id": 96, "seek": 53340, "start": 552.52, "end": 556.76, "text": " know I'm just saying this a lot, but it should be greater than 3.0, otherwise this would", "tokens": [458, 286, 478, 445, 1566, 341, 257, 688, 11, 457, 309, 820, 312, 5044, 813, 805, 13, 15, 11, 5911, 341, 576], "temperature": 0.0, "avg_logprob": -0.24709008379680356, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00010620914690662175}, {"id": 97, "seek": 53340, "start": 556.76, "end": 562.4399999999999, "text": " just break. This is your config list, and then you get, basically, a list of plugins.", "tokens": [445, 1821, 13, 639, 307, 428, 6662, 1329, 11, 293, 550, 291, 483, 11, 1936, 11, 257, 1329, 295, 33759, 13], "temperature": 0.0, "avg_logprob": -0.24709008379680356, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00010620914690662175}, {"id": 98, "seek": 56244, "start": 562.44, "end": 569.0400000000001, "text": " At one, we got a few of those, and those would be just working together. So in this case,", "tokens": [1711, 472, 11, 321, 658, 257, 1326, 295, 729, 11, 293, 729, 576, 312, 445, 1364, 1214, 13, 407, 294, 341, 1389, 11], "temperature": 0.0, "avg_logprob": -0.17128234531568445, "compression_ratio": 1.8898305084745763, "no_speech_prob": 0.0003377893881406635}, {"id": 99, "seek": 56244, "start": 569.0400000000001, "end": 573.8000000000001, "text": " we got a name, because all the plugins would need the name, it would need the type, which", "tokens": [321, 658, 257, 1315, 11, 570, 439, 264, 33759, 576, 643, 264, 1315, 11, 309, 576, 643, 264, 2010, 11, 597], "temperature": 0.0, "avg_logprob": -0.17128234531568445, "compression_ratio": 1.8898305084745763, "no_speech_prob": 0.0003377893881406635}, {"id": 100, "seek": 56244, "start": 573.8000000000001, "end": 579.12, "text": " would match the binary, and then we got the specific configurations. So in the demo, we'll", "tokens": [576, 2995, 264, 17434, 11, 293, 550, 321, 658, 264, 2685, 31493, 13, 407, 294, 264, 10723, 11, 321, 603], "temperature": 0.0, "avg_logprob": -0.17128234531568445, "compression_ratio": 1.8898305084745763, "no_speech_prob": 0.0003377893881406635}, {"id": 101, "seek": 56244, "start": 579.12, "end": 584.96, "text": " be showing you how these plugins get to link with the prep results and so forth. But if", "tokens": [312, 4099, 291, 577, 613, 33759, 483, 281, 2113, 365, 264, 2666, 3542, 293, 370, 5220, 13, 583, 498], "temperature": 0.0, "avg_logprob": -0.17128234531568445, "compression_ratio": 1.8898305084745763, "no_speech_prob": 0.0003377893881406635}, {"id": 102, "seek": 56244, "start": 584.96, "end": 591.36, "text": " you see, it's just a list of plugins with name, type, and then specific configurations,", "tokens": [291, 536, 11, 309, 311, 445, 257, 1329, 295, 33759, 365, 1315, 11, 2010, 11, 293, 550, 2685, 31493, 11], "temperature": 0.0, "avg_logprob": -0.17128234531568445, "compression_ratio": 1.8898305084745763, "no_speech_prob": 0.0003377893881406635}, {"id": 103, "seek": 59136, "start": 591.36, "end": 597.48, "text": " but if you just want to do something, okay, I'm buying this, I want to create my own plugin,", "tokens": [457, 498, 291, 445, 528, 281, 360, 746, 11, 1392, 11, 286, 478, 6382, 341, 11, 286, 528, 281, 1884, 452, 1065, 23407, 11], "temperature": 0.0, "avg_logprob": -0.22937659015805703, "compression_ratio": 1.7045454545454546, "no_speech_prob": 0.0009265491389669478}, {"id": 104, "seek": 59136, "start": 597.48, "end": 604.6, "text": " you really need a name and type, even if it doesn't do anything. Okay, go ahead, Miguel.", "tokens": [291, 534, 643, 257, 1315, 293, 2010, 11, 754, 498, 309, 1177, 380, 360, 1340, 13, 1033, 11, 352, 2286, 11, 29150, 13], "temperature": 0.0, "avg_logprob": -0.22937659015805703, "compression_ratio": 1.7045454545454546, "no_speech_prob": 0.0009265491389669478}, {"id": 105, "seek": 59136, "start": 604.6, "end": 609.04, "text": " Now, use cases, and then, I guess I spoke maybe a little bit too much, and even if we", "tokens": [823, 11, 764, 3331, 11, 293, 550, 11, 286, 2041, 286, 7179, 1310, 257, 707, 857, 886, 709, 11, 293, 754, 498, 321], "temperature": 0.0, "avg_logprob": -0.22937659015805703, "compression_ratio": 1.7045454545454546, "no_speech_prob": 0.0009265491389669478}, {"id": 106, "seek": 59136, "start": 609.04, "end": 613.08, "text": " are late because we got a rush to the airport and that, but I'm handing over to Miko Miguel,", "tokens": [366, 3469, 570, 321, 658, 257, 9300, 281, 264, 10155, 293, 300, 11, 457, 286, 478, 34774, 670, 281, 376, 10770, 29150, 11], "temperature": 0.0, "avg_logprob": -0.22937659015805703, "compression_ratio": 1.7045454545454546, "no_speech_prob": 0.0009265491389669478}, {"id": 107, "seek": 59136, "start": 613.08, "end": 617.9200000000001, "text": " who's going to be showing you this a little bit around, and then if it works again, demo.", "tokens": [567, 311, 516, 281, 312, 4099, 291, 341, 257, 707, 857, 926, 11, 293, 550, 498, 309, 1985, 797, 11, 10723, 13], "temperature": 0.0, "avg_logprob": -0.22937659015805703, "compression_ratio": 1.7045454545454546, "no_speech_prob": 0.0009265491389669478}, {"id": 108, "seek": 61792, "start": 617.92, "end": 629.5999999999999, "text": " Go ahead, Miguel. Hello? Well, I'll use this. So this is like a list of the plugins that", "tokens": [1037, 2286, 11, 29150, 13, 2425, 30, 1042, 11, 286, 603, 764, 341, 13, 407, 341, 307, 411, 257, 1329, 295, 264, 33759, 300], "temperature": 0.0, "avg_logprob": -0.16932532713585294, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.00020182554726488888}, {"id": 109, "seek": 61792, "start": 629.5999999999999, "end": 634.56, "text": " are provided by the CNI maintainers and are available on the container networking slash", "tokens": [366, 5649, 538, 264, 14589, 40, 6909, 433, 293, 366, 2435, 322, 264, 10129, 17985, 17330], "temperature": 0.0, "avg_logprob": -0.16932532713585294, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.00020182554726488888}, {"id": 110, "seek": 61792, "start": 634.56, "end": 641.8, "text": " plugins repository. So the first is Tuning CNI. It allows you to configure like a list", "tokens": [33759, 25841, 13, 407, 264, 700, 307, 21363, 278, 14589, 40, 13, 467, 4045, 291, 281, 22162, 411, 257, 1329], "temperature": 0.0, "avg_logprob": -0.16932532713585294, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.00020182554726488888}, {"id": 111, "seek": 61792, "start": 641.8, "end": 646.4399999999999, "text": " of syscuddles. So if you need some syscuddles to happen inside of your pod, you use this", "tokens": [295, 262, 749, 66, 532, 21915, 13, 407, 498, 291, 643, 512, 262, 749, 66, 532, 21915, 281, 1051, 1854, 295, 428, 2497, 11, 291, 764, 341], "temperature": 0.0, "avg_logprob": -0.16932532713585294, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.00020182554726488888}, {"id": 112, "seek": 64644, "start": 646.44, "end": 652.2, "text": " Tuning CNI. The bandwidth CNI, as the name implies, like quite evident, what it does", "tokens": [21363, 278, 14589, 40, 13, 440, 23647, 14589, 40, 11, 382, 264, 1315, 18779, 11, 411, 1596, 16371, 11, 437, 309, 775], "temperature": 0.0, "avg_logprob": -0.1455651601155599, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.0002564851602073759}, {"id": 113, "seek": 64644, "start": 652.2, "end": 657.8000000000001, "text": " is to throttle either the ingress or egress traffic to your pod, if you want to do those", "tokens": [307, 281, 24235, 2139, 264, 3957, 735, 420, 308, 3091, 6419, 281, 428, 2497, 11, 498, 291, 528, 281, 360, 729], "temperature": 0.0, "avg_logprob": -0.1455651601155599, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.0002564851602073759}, {"id": 114, "seek": 64644, "start": 657.8000000000001, "end": 664.8000000000001, "text": " kind of things. The firewall plugin, what it does is only allow access to and from the", "tokens": [733, 295, 721, 13, 440, 36109, 23407, 11, 437, 309, 775, 307, 787, 2089, 2105, 281, 293, 490, 264], "temperature": 0.0, "avg_logprob": -0.1455651601155599, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.0002564851602073759}, {"id": 115, "seek": 64644, "start": 664.8000000000001, "end": 670.4000000000001, "text": " IP addresses that are referenced in the results that the plugin got, for instance. And the", "tokens": [8671, 16862, 300, 366, 32734, 294, 264, 3542, 300, 264, 23407, 658, 11, 337, 5197, 13, 400, 264], "temperature": 0.0, "avg_logprob": -0.1455651601155599, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.0002564851602073759}, {"id": 116, "seek": 67040, "start": 670.4, "end": 677.1999999999999, "text": " port mapping, as the name kind of implies, it does port forwarding, configures port forwarding", "tokens": [2436, 18350, 11, 382, 264, 1315, 733, 295, 18779, 11, 309, 775, 2436, 2128, 278, 11, 6662, 1303, 2436, 2128, 278], "temperature": 0.0, "avg_logprob": -0.12013384322045555, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.00011018877557944506}, {"id": 117, "seek": 67040, "start": 677.1999999999999, "end": 686.64, "text": " from the host into the container for the set of ports that you specify in the configuration.", "tokens": [490, 264, 3975, 666, 264, 10129, 337, 264, 992, 295, 18160, 300, 291, 16500, 294, 264, 11694, 13], "temperature": 0.0, "avg_logprob": -0.12013384322045555, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.00011018877557944506}, {"id": 118, "seek": 67040, "start": 686.64, "end": 692.4399999999999, "text": " Now, having said this, let's go to the demo, and I'm now wondering how can I do this while", "tokens": [823, 11, 1419, 848, 341, 11, 718, 311, 352, 281, 264, 10723, 11, 293, 286, 478, 586, 6359, 577, 393, 286, 360, 341, 1339], "temperature": 0.0, "avg_logprob": -0.12013384322045555, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.00011018877557944506}, {"id": 119, "seek": 69244, "start": 692.44, "end": 712.08, "text": " holding the microphone. This doesn't work, I think. Easy. Okay, so the first thing that", "tokens": [5061, 264, 10952, 13, 639, 1177, 380, 589, 11, 286, 519, 13, 16002, 13, 1033, 11, 370, 264, 700, 551, 300], "temperature": 0.0, "avg_logprob": -0.22284147013788638, "compression_ratio": 1.2797202797202798, "no_speech_prob": 2.3913140466902405e-05}, {"id": 120, "seek": 69244, "start": 712.08, "end": 719.7600000000001, "text": " I should mention, like Daniel referenced Kubernetes a lot, but please remember that CNI is more", "tokens": [286, 820, 2152, 11, 411, 8033, 32734, 23145, 257, 688, 11, 457, 1767, 1604, 300, 14589, 40, 307, 544], "temperature": 0.0, "avg_logprob": -0.22284147013788638, "compression_ratio": 1.2797202797202798, "no_speech_prob": 2.3913140466902405e-05}, {"id": 121, "seek": 71976, "start": 719.76, "end": 728.76, "text": " like, like Kubernetes is a user of CNI. Like, it's not that you can use CNI by itself, and", "tokens": [411, 11, 411, 23145, 307, 257, 4195, 295, 14589, 40, 13, 1743, 11, 309, 311, 406, 300, 291, 393, 764, 14589, 40, 538, 2564, 11, 293], "temperature": 0.0, "avg_logprob": -0.22431359392531375, "compression_ratio": 1.5663716814159292, "no_speech_prob": 2.3177010007202625e-05}, {"id": 122, "seek": 71976, "start": 728.76, "end": 735.36, "text": " as such, we're going to be using something called CNI tool. It's just a binary that you", "tokens": [382, 1270, 11, 321, 434, 516, 281, 312, 1228, 746, 1219, 14589, 40, 2290, 13, 467, 311, 445, 257, 17434, 300, 291], "temperature": 0.0, "avg_logprob": -0.22431359392531375, "compression_ratio": 1.5663716814159292, "no_speech_prob": 2.3177010007202625e-05}, {"id": 123, "seek": 71976, "start": 735.36, "end": 743.48, "text": " point at your, at a certain CNI binary and give it like a set of environment variables,", "tokens": [935, 412, 428, 11, 412, 257, 1629, 14589, 40, 17434, 293, 976, 309, 411, 257, 992, 295, 2823, 9102, 11], "temperature": 0.0, "avg_logprob": -0.22431359392531375, "compression_ratio": 1.5663716814159292, "no_speech_prob": 2.3177010007202625e-05}, {"id": 124, "seek": 71976, "start": 743.48, "end": 748.52, "text": " the plugins configuration via standard then, as Daniel said before, like, you basically", "tokens": [264, 33759, 11694, 5766, 3832, 550, 11, 382, 8033, 848, 949, 11, 411, 11, 291, 1936], "temperature": 0.0, "avg_logprob": -0.22431359392531375, "compression_ratio": 1.5663716814159292, "no_speech_prob": 2.3177010007202625e-05}, {"id": 125, "seek": 74852, "start": 748.52, "end": 753.56, "text": " pass the configuration of the plugins, you give it the input parameters, which are the", "tokens": [1320, 264, 11694, 295, 264, 33759, 11, 291, 976, 309, 264, 4846, 9834, 11, 597, 366, 264], "temperature": 0.0, "avg_logprob": -0.1390206869258437, "compression_ratio": 1.5906976744186045, "no_speech_prob": 3.268709406256676e-05}, {"id": 126, "seek": 74852, "start": 753.56, "end": 759.68, "text": " environment variables, and you execute the binary. And this is how we're going to be", "tokens": [2823, 9102, 11, 293, 291, 14483, 264, 17434, 13, 400, 341, 307, 577, 321, 434, 516, 281, 312], "temperature": 0.0, "avg_logprob": -0.1390206869258437, "compression_ratio": 1.5906976744186045, "no_speech_prob": 3.268709406256676e-05}, {"id": 127, "seek": 74852, "start": 759.68, "end": 767.92, "text": " seeing, well, the demo. You can follow it on this, on this link. But yeah, the first", "tokens": [2577, 11, 731, 11, 264, 10723, 13, 509, 393, 1524, 309, 322, 341, 11, 322, 341, 2113, 13, 583, 1338, 11, 264, 700], "temperature": 0.0, "avg_logprob": -0.1390206869258437, "compression_ratio": 1.5906976744186045, "no_speech_prob": 3.268709406256676e-05}, {"id": 128, "seek": 74852, "start": 767.92, "end": 772.6, "text": " thing I think I should explain is like the scenario we're trying to achieve. And this", "tokens": [551, 286, 519, 286, 820, 2903, 307, 411, 264, 9005, 321, 434, 1382, 281, 4584, 13, 400, 341], "temperature": 0.0, "avg_logprob": -0.1390206869258437, "compression_ratio": 1.5906976744186045, "no_speech_prob": 3.268709406256676e-05}, {"id": 129, "seek": 77260, "start": 772.6, "end": 779.0400000000001, "text": " can be seen here in the bottom right corner. So very simple thing. We just want to have", "tokens": [393, 312, 1612, 510, 294, 264, 2767, 558, 4538, 13, 407, 588, 2199, 551, 13, 492, 445, 528, 281, 362], "temperature": 0.0, "avg_logprob": -0.14155673007575834, "compression_ratio": 1.6199095022624435, "no_speech_prob": 4.0685717976884916e-05}, {"id": 130, "seek": 77260, "start": 779.0400000000001, "end": 785.84, "text": " like a bridge, two namespaces interconnected via this bridge, and we're going to be configuring", "tokens": [411, 257, 7283, 11, 732, 5288, 79, 2116, 36611, 5766, 341, 7283, 11, 293, 321, 434, 516, 281, 312, 6662, 1345], "temperature": 0.0, "avg_logprob": -0.14155673007575834, "compression_ratio": 1.6199095022624435, "no_speech_prob": 4.0685717976884916e-05}, {"id": 131, "seek": 77260, "start": 785.84, "end": 791.96, "text": " a static IPM on static IP addresses on each of the namespaces. And then we'll run an", "tokens": [257, 13437, 8671, 44, 322, 13437, 8671, 16862, 322, 1184, 295, 264, 5288, 79, 2116, 13, 400, 550, 321, 603, 1190, 364], "temperature": 0.0, "avg_logprob": -0.14155673007575834, "compression_ratio": 1.6199095022624435, "no_speech_prob": 4.0685717976884916e-05}, {"id": 132, "seek": 77260, "start": 791.96, "end": 800.2, "text": " IPer from the client to the server, and we're going to see how it fares. So first, I also", "tokens": [8671, 260, 490, 264, 6423, 281, 264, 7154, 11, 293, 321, 434, 516, 281, 536, 577, 309, 2050, 495, 13, 407, 700, 11, 286, 611], "temperature": 0.0, "avg_logprob": -0.14155673007575834, "compression_ratio": 1.6199095022624435, "no_speech_prob": 4.0685717976884916e-05}, {"id": 133, "seek": 80020, "start": 800.2, "end": 806.5600000000001, "text": " need to show you the configuration that I'm using for this. Okay, it's this one. And this", "tokens": [643, 281, 855, 291, 264, 11694, 300, 286, 478, 1228, 337, 341, 13, 1033, 11, 309, 311, 341, 472, 13, 400, 341], "temperature": 0.0, "avg_logprob": -0.1346102326603259, "compression_ratio": 1.8170731707317074, "no_speech_prob": 2.3547409000457264e-05}, {"id": 134, "seek": 80020, "start": 806.5600000000001, "end": 810.12, "text": " is the configuration that we're going to be using to achieve this scenario. Like, we're", "tokens": [307, 264, 11694, 300, 321, 434, 516, 281, 312, 1228, 281, 4584, 341, 9005, 13, 1743, 11, 321, 434], "temperature": 0.0, "avg_logprob": -0.1346102326603259, "compression_ratio": 1.8170731707317074, "no_speech_prob": 2.3547409000457264e-05}, {"id": 135, "seek": 80020, "start": 810.12, "end": 814.12, "text": " going to be using the plugin of type bridge. This is the name of the binary that will be", "tokens": [516, 281, 312, 1228, 264, 23407, 295, 2010, 7283, 13, 639, 307, 264, 1315, 295, 264, 17434, 300, 486, 312], "temperature": 0.0, "avg_logprob": -0.1346102326603259, "compression_ratio": 1.8170731707317074, "no_speech_prob": 2.3547409000457264e-05}, {"id": 136, "seek": 80020, "start": 814.12, "end": 821.1600000000001, "text": " invoked on the host to create the bridge. We get the name, we enable the IPs capability", "tokens": [1048, 9511, 322, 264, 3975, 281, 1884, 264, 7283, 13, 492, 483, 264, 1315, 11, 321, 9528, 264, 8671, 82, 13759], "temperature": 0.0, "avg_logprob": -0.1346102326603259, "compression_ratio": 1.8170731707317074, "no_speech_prob": 2.3547409000457264e-05}, {"id": 137, "seek": 80020, "start": 821.1600000000001, "end": 826.9200000000001, "text": " so you can put a static IP in it and you tell it that you want static IPM. And that's pretty", "tokens": [370, 291, 393, 829, 257, 13437, 8671, 294, 309, 293, 291, 980, 309, 300, 291, 528, 13437, 8671, 44, 13, 400, 300, 311, 1238], "temperature": 0.0, "avg_logprob": -0.1346102326603259, "compression_ratio": 1.8170731707317074, "no_speech_prob": 2.3547409000457264e-05}, {"id": 138, "seek": 82692, "start": 826.92, "end": 835.5999999999999, "text": " much the configuration that you need to give it. So let's just run the example. Okay, like", "tokens": [709, 264, 11694, 300, 291, 643, 281, 976, 309, 13, 407, 718, 311, 445, 1190, 264, 1365, 13, 1033, 11, 411], "temperature": 0.0, "avg_logprob": -0.14742142359415691, "compression_ratio": 1.674641148325359, "no_speech_prob": 3.480537634459324e-05}, {"id": 139, "seek": 82692, "start": 835.5999999999999, "end": 840.0799999999999, "text": " this parameter here that you see, can you see it? It's like the font big enough. It's", "tokens": [341, 13075, 510, 300, 291, 536, 11, 393, 291, 536, 309, 30, 467, 311, 411, 264, 10703, 955, 1547, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.14742142359415691, "compression_ratio": 1.674641148325359, "no_speech_prob": 3.480537634459324e-05}, {"id": 140, "seek": 82692, "start": 840.0799999999999, "end": 845.16, "text": " good. Okay, thanks. Like, you have to give this like the name of the configuration if", "tokens": [665, 13, 1033, 11, 3231, 13, 1743, 11, 291, 362, 281, 976, 341, 411, 264, 1315, 295, 264, 11694, 498], "temperature": 0.0, "avg_logprob": -0.14742142359415691, "compression_ratio": 1.674641148325359, "no_speech_prob": 3.480537634459324e-05}, {"id": 141, "seek": 82692, "start": 845.16, "end": 851.0, "text": " you see like unlimited bandwidth, it's the attribute here on the upper left corner that", "tokens": [291, 536, 411, 21950, 23647, 11, 309, 311, 264, 19667, 510, 322, 264, 6597, 1411, 4538, 300], "temperature": 0.0, "avg_logprob": -0.14742142359415691, "compression_ratio": 1.674641148325359, "no_speech_prob": 3.480537634459324e-05}, {"id": 142, "seek": 85100, "start": 851.0, "end": 857.28, "text": " you see under name. It's the same thing. It must match. And now this configured the scenario", "tokens": [291, 536, 833, 1315, 13, 467, 311, 264, 912, 551, 13, 467, 1633, 2995, 13, 400, 586, 341, 30538, 264, 9005], "temperature": 0.0, "avg_logprob": -0.14174496043812146, "compression_ratio": 1.6027397260273972, "no_speech_prob": 2.391885755059775e-05}, {"id": 143, "seek": 85100, "start": 857.28, "end": 862.32, "text": " and it's now running the IPer session between the both the client and the server. And as", "tokens": [293, 309, 311, 586, 2614, 264, 8671, 260, 5481, 1296, 264, 1293, 264, 6423, 293, 264, 7154, 13, 400, 382], "temperature": 0.0, "avg_logprob": -0.14174496043812146, "compression_ratio": 1.6027397260273972, "no_speech_prob": 2.391885755059775e-05}, {"id": 144, "seek": 85100, "start": 862.32, "end": 868.28, "text": " you see, we're getting like a very big bit rate of around 60 gigabits per second. So", "tokens": [291, 536, 11, 321, 434, 1242, 411, 257, 588, 955, 857, 3314, 295, 926, 4060, 8741, 455, 1208, 680, 1150, 13, 407], "temperature": 0.0, "avg_logprob": -0.14174496043812146, "compression_ratio": 1.6027397260273972, "no_speech_prob": 2.391885755059775e-05}, {"id": 145, "seek": 85100, "start": 868.28, "end": 875.32, "text": " this is with a straight configuration. Now let's use a different configuration where", "tokens": [341, 307, 365, 257, 2997, 11694, 13, 823, 718, 311, 764, 257, 819, 11694, 689], "temperature": 0.0, "avg_logprob": -0.14174496043812146, "compression_ratio": 1.6027397260273972, "no_speech_prob": 2.391885755059775e-05}, {"id": 146, "seek": 87532, "start": 875.32, "end": 882.6400000000001, "text": " we put we reuse the first configuration, but we use it in a chain. And afterwards, we put", "tokens": [321, 829, 321, 26225, 264, 700, 11694, 11, 457, 321, 764, 309, 294, 257, 5021, 13, 400, 10543, 11, 321, 829], "temperature": 0.0, "avg_logprob": -0.1678162602817311, "compression_ratio": 1.5168539325842696, "no_speech_prob": 1.8922572053270414e-05}, {"id": 147, "seek": 87532, "start": 882.6400000000001, "end": 889.2, "text": " like the bandwidth plugin. Again, what this does, it will throttle the input traffic into", "tokens": [411, 264, 23647, 23407, 13, 3764, 11, 437, 341, 775, 11, 309, 486, 24235, 264, 4846, 6419, 666], "temperature": 0.0, "avg_logprob": -0.1678162602817311, "compression_ratio": 1.5168539325842696, "no_speech_prob": 1.8922572053270414e-05}, {"id": 148, "seek": 87532, "start": 889.2, "end": 897.4000000000001, "text": " the network interface of both namespaces. So we're going to be doing the exact same thing.", "tokens": [264, 3209, 9226, 295, 1293, 5288, 79, 2116, 13, 407, 321, 434, 516, 281, 312, 884, 264, 1900, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.1678162602817311, "compression_ratio": 1.5168539325842696, "no_speech_prob": 1.8922572053270414e-05}, {"id": 149, "seek": 89740, "start": 897.4, "end": 906.1999999999999, "text": " But with this added with this different configuration and bandwidth limiter. And as we see, like", "tokens": [583, 365, 341, 3869, 365, 341, 819, 11694, 293, 23647, 2364, 1681, 13, 400, 382, 321, 536, 11, 411], "temperature": 0.0, "avg_logprob": -0.17212478593848218, "compression_ratio": 1.6805555555555556, "no_speech_prob": 5.862301804882009e-06}, {"id": 150, "seek": 89740, "start": 906.1999999999999, "end": 911.92, "text": " the bit rate that we're getting is literally a lot less. And it should map somehow to the", "tokens": [264, 857, 3314, 300, 321, 434, 1242, 307, 3736, 257, 688, 1570, 13, 400, 309, 820, 4471, 6063, 281, 264], "temperature": 0.0, "avg_logprob": -0.17212478593848218, "compression_ratio": 1.6805555555555556, "no_speech_prob": 5.862301804882009e-06}, {"id": 151, "seek": 89740, "start": 911.92, "end": 917.76, "text": " values that we've configured here. So what this shows is that you can use like this band", "tokens": [4190, 300, 321, 600, 30538, 510, 13, 407, 437, 341, 3110, 307, 300, 291, 393, 764, 411, 341, 4116], "temperature": 0.0, "avg_logprob": -0.17212478593848218, "compression_ratio": 1.6805555555555556, "no_speech_prob": 5.862301804882009e-06}, {"id": 152, "seek": 89740, "start": 917.76, "end": 922.52, "text": " with plug in a chain in order to achieve a different use case than you had before, like", "tokens": [365, 5452, 294, 257, 5021, 294, 1668, 281, 4584, 257, 819, 764, 1389, 813, 291, 632, 949, 11, 411], "temperature": 0.0, "avg_logprob": -0.17212478593848218, "compression_ratio": 1.6805555555555556, "no_speech_prob": 5.862301804882009e-06}, {"id": 153, "seek": 92252, "start": 922.52, "end": 929.12, "text": " you want to throttle traffic to this, you use this type of plug in. Yeah, I think that's", "tokens": [291, 528, 281, 24235, 6419, 281, 341, 11, 291, 764, 341, 2010, 295, 5452, 294, 13, 865, 11, 286, 519, 300, 311], "temperature": 0.0, "avg_logprob": -0.1680166303497, "compression_ratio": 1.600896860986547, "no_speech_prob": 2.1780095266876742e-05}, {"id": 154, "seek": 92252, "start": 929.12, "end": 933.96, "text": " let me just check the time. Yeah, we're good. We still have 10 minutes. So let's run the", "tokens": [718, 385, 445, 1520, 264, 565, 13, 865, 11, 321, 434, 665, 13, 492, 920, 362, 1266, 2077, 13, 407, 718, 311, 1190, 264], "temperature": 0.0, "avg_logprob": -0.1680166303497, "compression_ratio": 1.600896860986547, "no_speech_prob": 2.1780095266876742e-05}, {"id": 155, "seek": 92252, "start": 933.96, "end": 944.68, "text": " second. The second demo we had, we have actually sorry, okay, the scenario is a lot simpler", "tokens": [1150, 13, 440, 1150, 10723, 321, 632, 11, 321, 362, 767, 2597, 11, 1392, 11, 264, 9005, 307, 257, 688, 18587], "temperature": 0.0, "avg_logprob": -0.1680166303497, "compression_ratio": 1.600896860986547, "no_speech_prob": 2.1780095266876742e-05}, {"id": 156, "seek": 92252, "start": 944.68, "end": 949.04, "text": " this time, like we just have the same bridge as before, but we just have like a network", "tokens": [341, 565, 11, 411, 321, 445, 362, 264, 912, 7283, 382, 949, 11, 457, 321, 445, 362, 411, 257, 3209], "temperature": 0.0, "avg_logprob": -0.1680166303497, "compression_ratio": 1.600896860986547, "no_speech_prob": 2.1780095266876742e-05}, {"id": 157, "seek": 94904, "start": 949.04, "end": 956.56, "text": " namespace connected to it. And what we're going to be doing is showing you how the chain", "tokens": [5288, 17940, 4582, 281, 309, 13, 400, 437, 321, 434, 516, 281, 312, 884, 307, 4099, 291, 577, 264, 5021], "temperature": 0.0, "avg_logprob": -0.10502620076024255, "compression_ratio": 1.6542056074766356, "no_speech_prob": 3.168480907334015e-05}, {"id": 158, "seek": 94904, "start": 956.56, "end": 964.3199999999999, "text": " actually works, focusing on the on what Daniel said before, like you need to handle always", "tokens": [767, 1985, 11, 8416, 322, 264, 322, 437, 8033, 848, 949, 11, 411, 291, 643, 281, 4813, 1009], "temperature": 0.0, "avg_logprob": -0.10502620076024255, "compression_ratio": 1.6542056074766356, "no_speech_prob": 3.168480907334015e-05}, {"id": 159, "seek": 94904, "start": 964.3199999999999, "end": 968.1999999999999, "text": " the previous result, and you need to account for it. And you need to pass it along the", "tokens": [264, 3894, 1874, 11, 293, 291, 643, 281, 2696, 337, 309, 13, 400, 291, 643, 281, 1320, 309, 2051, 264], "temperature": 0.0, "avg_logprob": -0.10502620076024255, "compression_ratio": 1.6542056074766356, "no_speech_prob": 3.168480907334015e-05}, {"id": 160, "seek": 94904, "start": 968.1999999999999, "end": 978.36, "text": " chain continuously. And okay, let's just show the configuration of this plugin. So this", "tokens": [5021, 15684, 13, 400, 1392, 11, 718, 311, 445, 855, 264, 11694, 295, 341, 23407, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.10502620076024255, "compression_ratio": 1.6542056074766356, "no_speech_prob": 3.168480907334015e-05}, {"id": 161, "seek": 97836, "start": 978.36, "end": 983.16, "text": " chain might look a lot more complex than the one before because it has more things in it,", "tokens": [5021, 1062, 574, 257, 688, 544, 3997, 813, 264, 472, 949, 570, 309, 575, 544, 721, 294, 309, 11], "temperature": 0.0, "avg_logprob": -0.13126396714595326, "compression_ratio": 1.8181818181818181, "no_speech_prob": 1.3630045941681601e-05}, {"id": 162, "seek": 97836, "start": 983.16, "end": 987.08, "text": " but it's very, very, very simple. So this thing first will in it will call the bridge", "tokens": [457, 309, 311, 588, 11, 588, 11, 588, 2199, 13, 407, 341, 551, 700, 486, 294, 309, 486, 818, 264, 7283], "temperature": 0.0, "avg_logprob": -0.13126396714595326, "compression_ratio": 1.8181818181818181, "no_speech_prob": 1.3630045941681601e-05}, {"id": 163, "seek": 97836, "start": 987.08, "end": 993.52, "text": " plugin, it will create the bridge. Then we'll invoke the debug CNI, like this CNI plugin", "tokens": [23407, 11, 309, 486, 1884, 264, 7283, 13, 1396, 321, 603, 41117, 264, 24083, 14589, 40, 11, 411, 341, 14589, 40, 23407], "temperature": 0.0, "avg_logprob": -0.13126396714595326, "compression_ratio": 1.8181818181818181, "no_speech_prob": 1.3630045941681601e-05}, {"id": 164, "seek": 97836, "start": 993.52, "end": 999.0, "text": " is very, very simple. The only thing it does is print the result it got from the previous", "tokens": [307, 588, 11, 588, 2199, 13, 440, 787, 551, 309, 775, 307, 4482, 264, 1874, 309, 658, 490, 264, 3894], "temperature": 0.0, "avg_logprob": -0.13126396714595326, "compression_ratio": 1.8181818181818181, "no_speech_prob": 1.3630045941681601e-05}, {"id": 165, "seek": 97836, "start": 999.0, "end": 1003.04, "text": " plugin. So what we're going to be seeing is here is the result of the first plugin in", "tokens": [23407, 13, 407, 437, 321, 434, 516, 281, 312, 2577, 307, 510, 307, 264, 1874, 295, 264, 700, 23407, 294], "temperature": 0.0, "avg_logprob": -0.13126396714595326, "compression_ratio": 1.8181818181818181, "no_speech_prob": 1.3630045941681601e-05}, {"id": 166, "seek": 100304, "start": 1003.04, "end": 1009.5999999999999, "text": " the chain. Afterwards, we run the tuning CNI plugin. And what we're going to do is to change", "tokens": [264, 5021, 13, 41357, 11, 321, 1190, 264, 15164, 14589, 40, 23407, 13, 400, 437, 321, 434, 516, 281, 360, 307, 281, 1319], "temperature": 0.0, "avg_logprob": -0.13093600954328263, "compression_ratio": 1.875, "no_speech_prob": 1.7227648640982807e-05}, {"id": 167, "seek": 100304, "start": 1009.5999999999999, "end": 1015.12, "text": " the MAC address that we got on the interface of this dummy namespace that we see here.", "tokens": [264, 27716, 2985, 300, 321, 658, 322, 264, 9226, 295, 341, 35064, 5288, 17940, 300, 321, 536, 510, 13], "temperature": 0.0, "avg_logprob": -0.13093600954328263, "compression_ratio": 1.875, "no_speech_prob": 1.7227648640982807e-05}, {"id": 168, "seek": 100304, "start": 1015.12, "end": 1020.36, "text": " So the idea is we first run the bridge plugin. This thing will assign a random MAC address", "tokens": [407, 264, 1558, 307, 321, 700, 1190, 264, 7283, 23407, 13, 639, 551, 486, 6269, 257, 4974, 27716, 2985], "temperature": 0.0, "avg_logprob": -0.13093600954328263, "compression_ratio": 1.875, "no_speech_prob": 1.7227648640982807e-05}, {"id": 169, "seek": 100304, "start": 1020.36, "end": 1027.44, "text": " to the interface that is on this namespace. We'll print that will run tuning to change", "tokens": [281, 264, 9226, 300, 307, 322, 341, 5288, 17940, 13, 492, 603, 4482, 300, 486, 1190, 15164, 281, 1319], "temperature": 0.0, "avg_logprob": -0.13093600954328263, "compression_ratio": 1.875, "no_speech_prob": 1.7227648640982807e-05}, {"id": 170, "seek": 100304, "start": 1027.44, "end": 1031.8, "text": " that MAC address. And we're going to print that again to see like the result of the previous", "tokens": [300, 27716, 2985, 13, 400, 321, 434, 516, 281, 4482, 300, 797, 281, 536, 411, 264, 1874, 295, 264, 3894], "temperature": 0.0, "avg_logprob": -0.13093600954328263, "compression_ratio": 1.875, "no_speech_prob": 1.7227648640982807e-05}, {"id": 171, "seek": 103180, "start": 1031.8, "end": 1042.04, "text": " plugin. And that's pretty much it. Let's just run the example and show you the, what I actually", "tokens": [23407, 13, 400, 300, 311, 1238, 709, 309, 13, 961, 311, 445, 1190, 264, 1365, 293, 855, 291, 264, 11, 437, 286, 767], "temperature": 0.0, "avg_logprob": -0.17748539264385516, "compression_ratio": 1.3555555555555556, "no_speech_prob": 3.425786053412594e-05}, {"id": 172, "seek": 103180, "start": 1042.04, "end": 1054.76, "text": " mean. So here we see like, and so this log here is the result of the, of the first call", "tokens": [914, 13, 407, 510, 321, 536, 411, 11, 293, 370, 341, 3565, 510, 307, 264, 1874, 295, 264, 11, 295, 264, 700, 818], "temperature": 0.0, "avg_logprob": -0.17748539264385516, "compression_ratio": 1.3555555555555556, "no_speech_prob": 3.425786053412594e-05}, {"id": 173, "seek": 105476, "start": 1054.76, "end": 1063.0, "text": " of the debug CNI. And as we see in the, in the pods, in what would be the pod interface", "tokens": [295, 264, 24083, 14589, 40, 13, 400, 382, 321, 536, 294, 264, 11, 294, 264, 31925, 11, 294, 437, 576, 312, 264, 2497, 9226], "temperature": 0.0, "avg_logprob": -0.13186590021306818, "compression_ratio": 1.8252032520325203, "no_speech_prob": 1.5203618204395752e-05}, {"id": 174, "seek": 105476, "start": 1063.0, "end": 1067.8, "text": " which is identified by this attribute sandbox that points to the name of the namespace or", "tokens": [597, 307, 9234, 538, 341, 19667, 42115, 300, 2793, 281, 264, 1315, 295, 264, 5288, 17940, 420], "temperature": 0.0, "avg_logprob": -0.13186590021306818, "compression_ratio": 1.8252032520325203, "no_speech_prob": 1.5203618204395752e-05}, {"id": 175, "seek": 105476, "start": 1067.8, "end": 1072.48, "text": " actually to the path of the namespace. We see that in its result, we have the interface", "tokens": [767, 281, 264, 3100, 295, 264, 5288, 17940, 13, 492, 536, 300, 294, 1080, 1874, 11, 321, 362, 264, 9226], "temperature": 0.0, "avg_logprob": -0.13186590021306818, "compression_ratio": 1.8252032520325203, "no_speech_prob": 1.5203618204395752e-05}, {"id": 176, "seek": 105476, "start": 1072.48, "end": 1078.2, "text": " name that was created on that network namespace. And we see that it was assigned like a random", "tokens": [1315, 300, 390, 2942, 322, 300, 3209, 5288, 17940, 13, 400, 321, 536, 300, 309, 390, 13279, 411, 257, 4974], "temperature": 0.0, "avg_logprob": -0.13186590021306818, "compression_ratio": 1.8252032520325203, "no_speech_prob": 1.5203618204395752e-05}, {"id": 177, "seek": 105476, "start": 1078.2, "end": 1084.36, "text": " MAC address that is identified here. We then run the tuning plugin that changed this MAC", "tokens": [27716, 2985, 300, 307, 9234, 510, 13, 492, 550, 1190, 264, 15164, 23407, 300, 3105, 341, 27716], "temperature": 0.0, "avg_logprob": -0.13186590021306818, "compression_ratio": 1.8252032520325203, "no_speech_prob": 1.5203618204395752e-05}, {"id": 178, "seek": 108436, "start": 1084.36, "end": 1090.4799999999998, "text": " address and we finally printed the previous result again. And we see that this changed", "tokens": [2985, 293, 321, 2721, 13567, 264, 3894, 1874, 797, 13, 400, 321, 536, 300, 341, 3105], "temperature": 0.0, "avg_logprob": -0.1438010159660788, "compression_ratio": 1.6289592760180995, "no_speech_prob": 1.4735994227521587e-05}, {"id": 179, "seek": 108436, "start": 1090.4799999999998, "end": 1098.3999999999999, "text": " to the MAC address that we specifically specified statically in the, in the plugin configuration,", "tokens": [281, 264, 27716, 2985, 300, 321, 4682, 22206, 2219, 984, 294, 264, 11, 294, 264, 23407, 11694, 11], "temperature": 0.0, "avg_logprob": -0.1438010159660788, "compression_ratio": 1.6289592760180995, "no_speech_prob": 1.4735994227521587e-05}, {"id": 180, "seek": 108436, "start": 1098.3999999999999, "end": 1104.56, "text": " which is exactly what we wanted to show. Like that's like very simple demo, but I think", "tokens": [597, 307, 2293, 437, 321, 1415, 281, 855, 13, 1743, 300, 311, 411, 588, 2199, 10723, 11, 457, 286, 519], "temperature": 0.0, "avg_logprob": -0.1438010159660788, "compression_ratio": 1.6289592760180995, "no_speech_prob": 1.4735994227521587e-05}, {"id": 181, "seek": 108436, "start": 1104.56, "end": 1111.52, "text": " it kind of illustrates in a very neat way how chaining actually works in a step-by-step", "tokens": [309, 733, 295, 41718, 294, 257, 588, 10654, 636, 577, 417, 3686, 767, 1985, 294, 257, 1823, 12, 2322, 12, 16792], "temperature": 0.0, "avg_logprob": -0.1438010159660788, "compression_ratio": 1.6289592760180995, "no_speech_prob": 1.4735994227521587e-05}, {"id": 182, "seek": 111152, "start": 1111.52, "end": 1123.72, "text": " manner. And with this, we arrived at the conclusions. And I'd like to basically tell you again", "tokens": [9060, 13, 400, 365, 341, 11, 321, 6678, 412, 264, 22865, 13, 400, 286, 1116, 411, 281, 1936, 980, 291, 797], "temperature": 0.0, "avg_logprob": -0.18531461195512253, "compression_ratio": 1.481081081081081, "no_speech_prob": 1.5685876860516146e-05}, {"id": 183, "seek": 111152, "start": 1123.72, "end": 1129.12, "text": " what we just told you, like focusing on the most important things that we think are about", "tokens": [437, 321, 445, 1907, 291, 11, 411, 8416, 322, 264, 881, 1021, 721, 300, 321, 519, 366, 466], "temperature": 0.0, "avg_logprob": -0.18531461195512253, "compression_ratio": 1.481081081081081, "no_speech_prob": 1.5685876860516146e-05}, {"id": 184, "seek": 111152, "start": 1129.12, "end": 1135.6399999999999, "text": " this slide. First thing is like these plugins, remember what they do. They add more stuff", "tokens": [341, 4137, 13, 2386, 551, 307, 411, 613, 33759, 11, 1604, 437, 436, 360, 13, 814, 909, 544, 1507], "temperature": 0.0, "avg_logprob": -0.18531461195512253, "compression_ratio": 1.481081081081081, "no_speech_prob": 1.5685876860516146e-05}, {"id": 185, "seek": 113564, "start": 1135.64, "end": 1142.0800000000002, "text": " to the pod. So they enable different use cases. Like they can, you can prevent IP spoofing.", "tokens": [281, 264, 2497, 13, 407, 436, 9528, 819, 764, 3331, 13, 1743, 436, 393, 11, 291, 393, 4871, 8671, 637, 29496, 278, 13], "temperature": 0.0, "avg_logprob": -0.16856458912725034, "compression_ratio": 1.7342995169082125, "no_speech_prob": 4.755382178700529e-05}, {"id": 186, "seek": 113564, "start": 1142.0800000000002, "end": 1146.2, "text": " You can throttle bandwidth as we've seen. You can configure port forwarding from the", "tokens": [509, 393, 24235, 23647, 382, 321, 600, 1612, 13, 509, 393, 22162, 2436, 2128, 278, 490, 264], "temperature": 0.0, "avg_logprob": -0.16856458912725034, "compression_ratio": 1.7342995169082125, "no_speech_prob": 4.755382178700529e-05}, {"id": 187, "seek": 113564, "start": 1146.2, "end": 1152.76, "text": " host to different containers. You can configure different syscuttles. And actually you can", "tokens": [3975, 281, 819, 17089, 13, 509, 393, 22162, 819, 262, 749, 66, 13478, 904, 13, 400, 767, 291, 393], "temperature": 0.0, "avg_logprob": -0.16856458912725034, "compression_ratio": 1.7342995169082125, "no_speech_prob": 4.755382178700529e-05}, {"id": 188, "seek": 113564, "start": 1152.76, "end": 1162.0800000000002, "text": " also create an allow list of the syscuttles that you can use inside of the pod. And finally", "tokens": [611, 1884, 364, 2089, 1329, 295, 264, 262, 749, 66, 13478, 904, 300, 291, 393, 764, 1854, 295, 264, 2497, 13, 400, 2721], "temperature": 0.0, "avg_logprob": -0.16856458912725034, "compression_ratio": 1.7342995169082125, "no_speech_prob": 4.755382178700529e-05}, {"id": 189, "seek": 116208, "start": 1162.08, "end": 1170.6799999999998, "text": " I think like if you have to, to keep one thing from this presentation is that a meta-plugin", "tokens": [286, 519, 411, 498, 291, 362, 281, 11, 281, 1066, 472, 551, 490, 341, 5860, 307, 300, 257, 19616, 12, 564, 697, 259], "temperature": 0.0, "avg_logprob": -0.13165106092180526, "compression_ratio": 1.7755905511811023, "no_speech_prob": 7.64561536925612e-06}, {"id": 190, "seek": 116208, "start": 1170.6799999999998, "end": 1177.36, "text": " must always handle the result of the previous plugin. Like you need to account for it. First", "tokens": [1633, 1009, 4813, 264, 1874, 295, 264, 3894, 23407, 13, 1743, 291, 643, 281, 2696, 337, 309, 13, 2386], "temperature": 0.0, "avg_logprob": -0.13165106092180526, "compression_ratio": 1.7755905511811023, "no_speech_prob": 7.64561536925612e-06}, {"id": 191, "seek": 116208, "start": 1177.36, "end": 1181.6, "text": " of all, because you don't know if, if you're a plugin, you don't know if anything will", "tokens": [295, 439, 11, 570, 291, 500, 380, 458, 498, 11, 498, 291, 434, 257, 23407, 11, 291, 500, 380, 458, 498, 1340, 486], "temperature": 0.0, "avg_logprob": -0.13165106092180526, "compression_ratio": 1.7755905511811023, "no_speech_prob": 7.64561536925612e-06}, {"id": 192, "seek": 116208, "start": 1181.6, "end": 1185.28, "text": " run after you in a chain. Like the user will configure it. So you don't know what's going", "tokens": [1190, 934, 291, 294, 257, 5021, 13, 1743, 264, 4195, 486, 22162, 309, 13, 407, 291, 500, 380, 458, 437, 311, 516], "temperature": 0.0, "avg_logprob": -0.13165106092180526, "compression_ratio": 1.7755905511811023, "no_speech_prob": 7.64561536925612e-06}, {"id": 193, "seek": 116208, "start": 1185.28, "end": 1189.28, "text": " to happen afterwards. So you need to send a result. And if you're somewhere in the middle", "tokens": [281, 1051, 10543, 13, 407, 291, 643, 281, 2845, 257, 1874, 13, 400, 498, 291, 434, 4079, 294, 264, 2808], "temperature": 0.0, "avg_logprob": -0.13165106092180526, "compression_ratio": 1.7755905511811023, "no_speech_prob": 7.64561536925612e-06}, {"id": 194, "seek": 118928, "start": 1189.28, "end": 1194.8, "text": " of the chain, least you can do, or least you must do is grab the result you got from the", "tokens": [295, 264, 5021, 11, 1935, 291, 393, 360, 11, 420, 1935, 291, 1633, 360, 307, 4444, 264, 1874, 291, 658, 490, 264], "temperature": 0.0, "avg_logprob": -0.1377115810618681, "compression_ratio": 1.4640883977900552, "no_speech_prob": 1.3627559383166954e-05}, {"id": 195, "seek": 118928, "start": 1194.8, "end": 1205.24, "text": " previous one and echo it into the next one. Now finally, remember that two things, plugin", "tokens": [3894, 472, 293, 14300, 309, 666, 264, 958, 472, 13, 823, 2721, 11, 1604, 300, 732, 721, 11, 23407], "temperature": 0.0, "avg_logprob": -0.1377115810618681, "compression_ratio": 1.4640883977900552, "no_speech_prob": 1.3627559383166954e-05}, {"id": 196, "seek": 118928, "start": 1205.24, "end": 1213.56, "text": " chains are only allowed starting from CNI 0.3. And they're the only configuration type", "tokens": [12626, 366, 787, 4350, 2891, 490, 14589, 40, 1958, 13, 18, 13, 400, 436, 434, 264, 787, 11694, 2010], "temperature": 0.0, "avg_logprob": -0.1377115810618681, "compression_ratio": 1.4640883977900552, "no_speech_prob": 1.3627559383166954e-05}, {"id": 197, "seek": 121356, "start": 1213.56, "end": 1220.24, "text": " allowed starting from CNI version 1.0. Like if you use the first example, configuration", "tokens": [4350, 2891, 490, 14589, 40, 3037, 502, 13, 15, 13, 1743, 498, 291, 764, 264, 700, 1365, 11, 11694], "temperature": 0.0, "avg_logprob": -0.1451131734955177, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.3413335182121955e-05}, {"id": 198, "seek": 121356, "start": 1220.24, "end": 1226.84, "text": " example we shown on CNI 1.0, it wouldn't work. It will explode, it will fail, make you miserable.", "tokens": [1365, 321, 4898, 322, 14589, 40, 502, 13, 15, 11, 309, 2759, 380, 589, 13, 467, 486, 21411, 11, 309, 486, 3061, 11, 652, 291, 22321, 13], "temperature": 0.0, "avg_logprob": -0.1451131734955177, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.3413335182121955e-05}, {"id": 199, "seek": 121356, "start": 1226.84, "end": 1233.12, "text": " And like the idea here is know your previous result always because that's probably the", "tokens": [400, 411, 264, 1558, 510, 307, 458, 428, 3894, 1874, 1009, 570, 300, 311, 1391, 264], "temperature": 0.0, "avg_logprob": -0.1451131734955177, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.3413335182121955e-05}, {"id": 200, "seek": 121356, "start": 1233.12, "end": 1239.56, "text": " most information you'll get from anything that ran before you. Like as Daniel said,", "tokens": [881, 1589, 291, 603, 483, 490, 1340, 300, 5872, 949, 291, 13, 1743, 382, 8033, 848, 11], "temperature": 0.0, "avg_logprob": -0.1451131734955177, "compression_ratio": 1.5344827586206897, "no_speech_prob": 1.3413335182121955e-05}, {"id": 201, "seek": 123956, "start": 1239.56, "end": 1244.96, "text": " everything is clearly not the thing that's most prevalent on, at least on the CNI, on", "tokens": [1203, 307, 4448, 406, 264, 551, 300, 311, 881, 30652, 322, 11, 412, 1935, 322, 264, 14589, 40, 11, 322], "temperature": 0.0, "avg_logprob": -0.2965372085571289, "compression_ratio": 1.5903614457831325, "no_speech_prob": 0.00039733340963721275}, {"id": 202, "seek": 123956, "start": 1244.96, "end": 1252.8, "text": " the plugins that are maintained by the CNI maintainers. And yeah, this concludes our,", "tokens": [264, 33759, 300, 366, 17578, 538, 264, 14589, 40, 6909, 433, 13, 400, 1338, 11, 341, 24643, 527, 11], "temperature": 0.0, "avg_logprob": -0.2965372085571289, "compression_ratio": 1.5903614457831325, "no_speech_prob": 0.00039733340963721275}, {"id": 203, "seek": 123956, "start": 1252.8, "end": 1268.0, "text": " our talk. And so thanks a lot guys. Questions? Questions? Thank you. Thank you. Can you tell", "tokens": [527, 751, 13, 400, 370, 3231, 257, 688, 1074, 13, 27738, 30, 27738, 30, 1044, 291, 13, 1044, 291, 13, 1664, 291, 980], "temperature": 0.0, "avg_logprob": -0.2965372085571289, "compression_ratio": 1.5903614457831325, "no_speech_prob": 0.00039733340963721275}, {"id": 204, "seek": 126800, "start": 1268.0, "end": 1272.2, "text": " a little more about use cases of CNI without Kubernetes?", "tokens": [257, 707, 544, 466, 764, 3331, 295, 14589, 40, 1553, 23145, 30], "temperature": 0.0, "avg_logprob": -0.2148241711477948, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0006413479568436742}, {"id": 205, "seek": 126800, "start": 1272.2, "end": 1277.52, "text": " Okay, that's a really good question. And it's going to probably eat all the time that we", "tokens": [1033, 11, 300, 311, 257, 534, 665, 1168, 13, 400, 309, 311, 516, 281, 1391, 1862, 439, 264, 565, 300, 321], "temperature": 0.0, "avg_logprob": -0.2148241711477948, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0006413479568436742}, {"id": 206, "seek": 126800, "start": 1277.52, "end": 1284.52, "text": " have. Like I can, like I work for Qvert, like, and one thing we do in it is, so there's a", "tokens": [362, 13, 1743, 286, 393, 11, 411, 286, 589, 337, 1249, 3281, 11, 411, 11, 293, 472, 551, 321, 360, 294, 309, 307, 11, 370, 456, 311, 257], "temperature": 0.0, "avg_logprob": -0.2148241711477948, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0006413479568436742}, {"id": 207, "seek": 126800, "start": 1284.52, "end": 1291.36, "text": " pod. And inside the pod, you run a virtual machine in it. Now, CNI, what it does is configure", "tokens": [2497, 13, 400, 1854, 264, 2497, 11, 291, 1190, 257, 6374, 3479, 294, 309, 13, 823, 11, 14589, 40, 11, 437, 309, 775, 307, 22162], "temperature": 0.0, "avg_logprob": -0.2148241711477948, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0006413479568436742}, {"id": 208, "seek": 126800, "start": 1291.36, "end": 1296.28, "text": " the pod interface. But what you want to have is like networking inside of VM, like you", "tokens": [264, 2497, 9226, 13, 583, 437, 291, 528, 281, 362, 307, 411, 17985, 1854, 295, 18038, 11, 411, 291], "temperature": 0.0, "avg_logprob": -0.2148241711477948, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0006413479568436742}, {"id": 209, "seek": 129628, "start": 1296.28, "end": 1301.6399999999999, "text": " need some way to get like the extended connectivity from the pod, from the pod interface and into", "tokens": [643, 512, 636, 281, 483, 411, 264, 10913, 21095, 490, 264, 2497, 11, 490, 264, 2497, 9226, 293, 666], "temperature": 0.0, "avg_logprob": -0.1490042975189489, "compression_ratio": 1.8273092369477912, "no_speech_prob": 1.7498454326414503e-05}, {"id": 210, "seek": 129628, "start": 1301.6399999999999, "end": 1306.8799999999999, "text": " the VM, you need to have something there. And we have code in our code base in the Qvert", "tokens": [264, 18038, 11, 291, 643, 281, 362, 746, 456, 13, 400, 321, 362, 3089, 294, 527, 3089, 3096, 294, 264, 1249, 3281], "temperature": 0.0, "avg_logprob": -0.1490042975189489, "compression_ratio": 1.8273092369477912, "no_speech_prob": 1.7498454326414503e-05}, {"id": 211, "seek": 129628, "start": 1306.8799999999999, "end": 1312.72, "text": " code base to achieve this, like one of the thing we could do using CNI chains to offload", "tokens": [3089, 3096, 281, 4584, 341, 11, 411, 472, 295, 264, 551, 321, 727, 360, 1228, 14589, 40, 12626, 281, 766, 2907], "temperature": 0.0, "avg_logprob": -0.1490042975189489, "compression_ratio": 1.8273092369477912, "no_speech_prob": 1.7498454326414503e-05}, {"id": 212, "seek": 129628, "start": 1312.72, "end": 1317.96, "text": " that entire code to CNI plugins that would create, for instance, the bridge that you", "tokens": [300, 2302, 3089, 281, 14589, 40, 33759, 300, 576, 1884, 11, 337, 5197, 11, 264, 7283, 300, 291], "temperature": 0.0, "avg_logprob": -0.1490042975189489, "compression_ratio": 1.8273092369477912, "no_speech_prob": 1.7498454326414503e-05}, {"id": 213, "seek": 129628, "start": 1317.96, "end": 1323.24, "text": " have inside of the pod to extend that connectivity that would create the tap device from which", "tokens": [362, 1854, 295, 264, 2497, 281, 10101, 300, 21095, 300, 576, 1884, 264, 5119, 4302, 490, 597], "temperature": 0.0, "avg_logprob": -0.1490042975189489, "compression_ratio": 1.8273092369477912, "no_speech_prob": 1.7498454326414503e-05}, {"id": 214, "seek": 132324, "start": 1323.24, "end": 1329.48, "text": " the VM would create the emulated network device from. So I really think this could be", "tokens": [264, 18038, 576, 1884, 264, 846, 6987, 3209, 4302, 490, 13, 407, 286, 534, 519, 341, 727, 312], "temperature": 0.0, "avg_logprob": -0.24811172485351562, "compression_ratio": 1.5384615384615385, "no_speech_prob": 9.277378558181226e-05}, {"id": 215, "seek": 132324, "start": 1329.48, "end": 1337.84, "text": " moduled using CNI. That's something we still need to see, like it's a very rough idea yet,", "tokens": [1072, 45893, 1228, 14589, 40, 13, 663, 311, 746, 321, 920, 643, 281, 536, 11, 411, 309, 311, 257, 588, 5903, 1558, 1939, 11], "temperature": 0.0, "avg_logprob": -0.24811172485351562, "compression_ratio": 1.5384615384615385, "no_speech_prob": 9.277378558181226e-05}, {"id": 216, "seek": 132324, "start": 1337.84, "end": 1339.92, "text": " but it's an example, I think.", "tokens": [457, 309, 311, 364, 1365, 11, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.24811172485351562, "compression_ratio": 1.5384615384615385, "no_speech_prob": 9.277378558181226e-05}, {"id": 217, "seek": 132324, "start": 1339.92, "end": 1343.5, "text": " And so besides that, I guess the quickest one is, yes, you know, he was mentioning CNI", "tokens": [400, 370, 11868, 300, 11, 286, 2041, 264, 49403, 472, 307, 11, 2086, 11, 291, 458, 11, 415, 390, 18315, 14589, 40], "temperature": 0.0, "avg_logprob": -0.24811172485351562, "compression_ratio": 1.5384615384615385, "no_speech_prob": 9.277378558181226e-05}, {"id": 218, "seek": 132324, "start": 1343.5, "end": 1348.16, "text": " tool, CNI tool is just used to develop CNI plugins. It doesn't have Kubernetes at all.", "tokens": [2290, 11, 14589, 40, 2290, 307, 445, 1143, 281, 1499, 14589, 40, 33759, 13, 467, 1177, 380, 362, 23145, 412, 439, 13], "temperature": 0.0, "avg_logprob": -0.24811172485351562, "compression_ratio": 1.5384615384615385, "no_speech_prob": 9.277378558181226e-05}, {"id": 219, "seek": 134816, "start": 1348.16, "end": 1353.5600000000002, "text": " And you can see that the plugins have just run there. Even that, Rocket, so Rocket, it", "tokens": [400, 291, 393, 536, 300, 264, 33759, 362, 445, 1190, 456, 13, 2754, 300, 11, 29651, 11, 370, 29651, 11, 309], "temperature": 0.0, "avg_logprob": -0.22720086233956474, "compression_ratio": 1.6024590163934427, "no_speech_prob": 0.00040247556171379983}, {"id": 220, "seek": 134816, "start": 1353.5600000000002, "end": 1357.92, "text": " was on its own. He didn't have to use Kubernetes at all. And it's where most of the CNI plugins", "tokens": [390, 322, 1080, 1065, 13, 634, 994, 380, 362, 281, 764, 23145, 412, 439, 13, 400, 309, 311, 689, 881, 295, 264, 14589, 40, 33759], "temperature": 0.0, "avg_logprob": -0.22720086233956474, "compression_ratio": 1.6024590163934427, "no_speech_prob": 0.00040247556171379983}, {"id": 221, "seek": 134816, "start": 1357.92, "end": 1361.92, "text": " were originally developed. You just put any kind of, you know, runtime engine, and it", "tokens": [645, 7993, 4743, 13, 509, 445, 829, 604, 733, 295, 11, 291, 458, 11, 34474, 2848, 11, 293, 309], "temperature": 0.0, "avg_logprob": -0.22720086233956474, "compression_ratio": 1.6024590163934427, "no_speech_prob": 0.00040247556171379983}, {"id": 222, "seek": 134816, "start": 1361.92, "end": 1369.0800000000002, "text": " would work. No Kubernetes needed.", "tokens": [576, 589, 13, 883, 23145, 2978, 13], "temperature": 0.0, "avg_logprob": -0.22720086233956474, "compression_ratio": 1.6024590163934427, "no_speech_prob": 0.00040247556171379983}, {"id": 223, "seek": 134816, "start": 1369.0800000000002, "end": 1374.0800000000002, "text": " So if I have a CNI plugin that sets up some external state, for example, a firewall that", "tokens": [407, 498, 286, 362, 257, 14589, 40, 23407, 300, 6352, 493, 512, 8320, 1785, 11, 337, 1365, 11, 257, 36109, 300], "temperature": 0.0, "avg_logprob": -0.22720086233956474, "compression_ratio": 1.6024590163934427, "no_speech_prob": 0.00040247556171379983}, {"id": 224, "seek": 137408, "start": 1374.08, "end": 1378.72, "text": " might even be a separate device, and something goes wrong, and I lose the delete, how do", "tokens": [1062, 754, 312, 257, 4994, 4302, 11, 293, 746, 1709, 2085, 11, 293, 286, 3624, 264, 12097, 11, 577, 360], "temperature": 0.0, "avg_logprob": -0.16487497496373446, "compression_ratio": 1.6375, "no_speech_prob": 0.00021613309218082577}, {"id": 225, "seek": 137408, "start": 1378.72, "end": 1380.3999999999999, "text": " I recover from that?", "tokens": [286, 8114, 490, 300, 30], "temperature": 0.0, "avg_logprob": -0.16487497496373446, "compression_ratio": 1.6375, "no_speech_prob": 0.00021613309218082577}, {"id": 226, "seek": 137408, "start": 1380.3999999999999, "end": 1387.32, "text": " So that's an amazing question. Like you need all, like you must design everything assuming", "tokens": [407, 300, 311, 364, 2243, 1168, 13, 1743, 291, 643, 439, 11, 411, 291, 1633, 1715, 1203, 11926], "temperature": 0.0, "avg_logprob": -0.16487497496373446, "compression_ratio": 1.6375, "no_speech_prob": 0.00021613309218082577}, {"id": 227, "seek": 137408, "start": 1387.32, "end": 1393.08, "text": " that CNI deletes will be missed. Like it might happen like all the time. So you need", "tokens": [300, 14589, 40, 1103, 37996, 486, 312, 6721, 13, 1743, 309, 1062, 1051, 411, 439, 264, 565, 13, 407, 291, 643], "temperature": 0.0, "avg_logprob": -0.16487497496373446, "compression_ratio": 1.6375, "no_speech_prob": 0.00021613309218082577}, {"id": 228, "seek": 137408, "start": 1393.08, "end": 1400.24, "text": " to have a reconciled loops of sorts that knows about your state, relevant state, and reconciles", "tokens": [281, 362, 257, 9993, 3208, 292, 16121, 295, 7527, 300, 3255, 466, 428, 1785, 11, 7340, 1785, 11, 293, 9993, 3208, 279], "temperature": 0.0, "avg_logprob": -0.16487497496373446, "compression_ratio": 1.6375, "no_speech_prob": 0.00021613309218082577}, {"id": 229, "seek": 137408, "start": 1400.24, "end": 1401.24, "text": " it somehow.", "tokens": [309, 6063, 13], "temperature": 0.0, "avg_logprob": -0.16487497496373446, "compression_ratio": 1.6375, "no_speech_prob": 0.00021613309218082577}, {"id": 230, "seek": 140124, "start": 1401.24, "end": 1407.1200000000001, "text": " I didn't see a way to even check if the stage should still be active. How does my CNI plugin", "tokens": [286, 994, 380, 536, 257, 636, 281, 754, 1520, 498, 264, 3233, 820, 920, 312, 4967, 13, 1012, 775, 452, 14589, 40, 23407], "temperature": 0.0, "avg_logprob": -0.2133859073414522, "compression_ratio": 1.5145631067961165, "no_speech_prob": 9.301838144892827e-05}, {"id": 231, "seek": 140124, "start": 1407.1200000000001, "end": 1409.32, "text": " know that something is still there?", "tokens": [458, 300, 746, 307, 920, 456, 30], "temperature": 0.0, "avg_logprob": -0.2133859073414522, "compression_ratio": 1.5145631067961165, "no_speech_prob": 9.301838144892827e-05}, {"id": 232, "seek": 140124, "start": 1409.32, "end": 1420.92, "text": " It's clueless. Like you need to monitor this little kid and assume that he will not fall", "tokens": [467, 311, 596, 3483, 442, 13, 1743, 291, 643, 281, 6002, 341, 707, 1636, 293, 6552, 300, 415, 486, 406, 2100], "temperature": 0.0, "avg_logprob": -0.2133859073414522, "compression_ratio": 1.5145631067961165, "no_speech_prob": 9.301838144892827e-05}, {"id": 233, "seek": 140124, "start": 1420.92, "end": 1428.08, "text": " and hit the head in the corner of the table. You need to do that out of bed. It's not designed", "tokens": [293, 2045, 264, 1378, 294, 264, 4538, 295, 264, 3199, 13, 509, 643, 281, 360, 300, 484, 295, 2901, 13, 467, 311, 406, 4761], "temperature": 0.0, "avg_logprob": -0.2133859073414522, "compression_ratio": 1.5145631067961165, "no_speech_prob": 9.301838144892827e-05}, {"id": 234, "seek": 142808, "start": 1428.08, "end": 1431.6, "text": " to allow for that. I'm sorry.", "tokens": [281, 2089, 337, 300, 13, 286, 478, 2597, 13], "temperature": 0.0, "avg_logprob": -0.36936357286241317, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.0005004967679269612}, {"id": 235, "seek": 142808, "start": 1431.6, "end": 1439.1599999999999, "text": " Hi. During the presentation you mentioned that some CNI plugin like Cilium, but I guess", "tokens": [2421, 13, 6842, 264, 5860, 291, 2835, 300, 512, 14589, 40, 23407, 411, 383, 388, 2197, 11, 457, 286, 2041], "temperature": 0.0, "avg_logprob": -0.36936357286241317, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.0005004967679269612}, {"id": 236, "seek": 142808, "start": 1439.1599999999999, "end": 1443.56, "text": " that you were also mentioning other plugins, they're not doing the logins and they're not", "tokens": [300, 291, 645, 611, 18315, 661, 33759, 11, 436, 434, 406, 884, 264, 3565, 1292, 293, 436, 434, 406], "temperature": 0.0, "avg_logprob": -0.36936357286241317, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.0005004967679269612}, {"id": 237, "seek": 142808, "start": 1443.56, "end": 1445.76, "text": " using the entire APIs. How come?", "tokens": [1228, 264, 2302, 21445, 13, 1012, 808, 30], "temperature": 0.0, "avg_logprob": -0.36936357286241317, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.0005004967679269612}, {"id": 238, "seek": 142808, "start": 1445.76, "end": 1453.6399999999999, "text": " I guess you hear it. It's okay? So it kind of depends on your CNI plugin presentation.", "tokens": [286, 2041, 291, 1568, 309, 13, 467, 311, 1392, 30, 407, 309, 733, 295, 5946, 322, 428, 14589, 40, 23407, 5860, 13], "temperature": 0.0, "avg_logprob": -0.36936357286241317, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.0005004967679269612}, {"id": 239, "seek": 145364, "start": 1453.64, "end": 1459.16, "text": " So for instance, some CNI do implement logging, but it's not something that is within implementation", "tokens": [407, 337, 5197, 11, 512, 14589, 40, 360, 4445, 27991, 11, 457, 309, 311, 406, 746, 300, 307, 1951, 11420], "temperature": 0.0, "avg_logprob": -0.39317937997671276, "compression_ratio": 1.8811475409836065, "no_speech_prob": 0.0001119288062909618}, {"id": 240, "seek": 145364, "start": 1459.16, "end": 1463.44, "text": " itself at all. So you may be totally fine in doing no logging at all, but then go back", "tokens": [2564, 412, 439, 13, 407, 291, 815, 312, 3879, 2489, 294, 884, 572, 27991, 412, 439, 11, 457, 550, 352, 646], "temperature": 0.0, "avg_logprob": -0.39317937997671276, "compression_ratio": 1.8811475409836065, "no_speech_prob": 0.0001119288062909618}, {"id": 241, "seek": 145364, "start": 1463.44, "end": 1467.44, "text": " to debugging it so you can have to go to the queue with loops, you can have to go to cry", "tokens": [281, 45592, 309, 370, 291, 393, 362, 281, 352, 281, 264, 18639, 365, 16121, 11, 291, 393, 362, 281, 352, 281, 3305], "temperature": 0.0, "avg_logprob": -0.39317937997671276, "compression_ratio": 1.8811475409836065, "no_speech_prob": 0.0001119288062909618}, {"id": 242, "seek": 145364, "start": 1467.44, "end": 1474.24, "text": " over loops, and then go back to debugging all those. So it depends on your implementation.", "tokens": [670, 16121, 11, 293, 550, 352, 646, 281, 45592, 439, 729, 13, 407, 309, 5946, 322, 428, 11420, 13], "temperature": 0.0, "avg_logprob": -0.39317937997671276, "compression_ratio": 1.8811475409836065, "no_speech_prob": 0.0001119288062909618}, {"id": 243, "seek": 145364, "start": 1474.24, "end": 1479.8000000000002, "text": " For instance, that, which is here, he implemented some of his logins for enamel, but that's", "tokens": [1171, 5197, 11, 300, 11, 597, 307, 510, 11, 415, 12270, 512, 295, 702, 3565, 1292, 337, 465, 16103, 11, 457, 300, 311], "temperature": 0.0, "avg_logprob": -0.39317937997671276, "compression_ratio": 1.8811475409836065, "no_speech_prob": 0.0001119288062909618}, {"id": 244, "seek": 147980, "start": 1479.8, "end": 1484.6, "text": " not something that is on every plugin. For service, not in any of the community maintained", "tokens": [406, 746, 300, 307, 322, 633, 23407, 13, 1171, 2643, 11, 406, 294, 604, 295, 264, 1768, 17578], "temperature": 0.0, "avg_logprob": -0.4273883631972016, "compression_ratio": 1.4, "no_speech_prob": 0.0008343184017576277}, {"id": 245, "seek": 147980, "start": 1484.6, "end": 1485.6, "text": " ones.", "tokens": [2306, 13], "temperature": 0.0, "avg_logprob": -0.4273883631972016, "compression_ratio": 1.4, "no_speech_prob": 0.0008343184017576277}, {"id": 246, "seek": 147980, "start": 1485.6, "end": 1486.6, "text": " Okay, thanks.", "tokens": [1033, 11, 3231, 13], "temperature": 0.0, "avg_logprob": -0.4273883631972016, "compression_ratio": 1.4, "no_speech_prob": 0.0008343184017576277}, {"id": 247, "seek": 147980, "start": 1486.6, "end": 1487.6, "text": " Any more questions?", "tokens": [2639, 544, 1651, 30], "temperature": 0.0, "avg_logprob": -0.4273883631972016, "compression_ratio": 1.4, "no_speech_prob": 0.0008343184017576277}, {"id": 248, "seek": 148760, "start": 1487.6, "end": 1510.6, "text": " Well, thanks a lot for your time and for listening to us and bye-bye. Enjoy your time.", "tokens": [1042, 11, 3231, 257, 688, 337, 428, 565, 293, 337, 4764, 281, 505, 293, 6543, 12, 6650, 13, 15411, 428, 565, 13], "temperature": 0.0, "avg_logprob": -0.34730929594773513, "compression_ratio": 1.1025641025641026, "no_speech_prob": 0.0034193983301520348}], "language": "en"}