{"text": " So now we've got Tomasso, he's going to tell us how to build a snake game, and we're going to build it together. Hopefully. Hi all. Today we are here to talk about snake, obviously, rust and wasm. In particular, we will see how to build a snake game written in rust, and Shepard has a wasm module. Before doing that, I would like to introduce myself. Hi, I'm Tomasso, I have two cats. And commonly, I used to be a software architect in a web application environment. So probably the games is not my best stuff I can do build, but I try. So let's start to talk about what wasm is. Powerless is a stack-based virtual machine that allows to be portable. So we can build applications and bring where you want most mostly. And the main target is web, but not linked to the web only. We will see later. So we have four concepts, efficient and fast, memory safety, safeness, open the bug able, and part of the web platform. For this reason, we have four parts, the core one, JavaScript API that allows us to interact with the JavaScript world, like browser nodes and so on. Web API that allows us to interact with DOM events and so on. And wasm, this is a standard for web assembly system integration, if I remember correctly, that allows us to interact with the file system, networking, and so on. Obviously, was is not allowed in browser context for some reason. So how we can write a was module? Well, wasm actually supports two kind of format, text and binary, but probably you don't want to write directly into wasm. For example, assembly probably in this year, no one write in assembly directly. But if you want, you can do that. But probably you want to leverage on different languages, for example, cc++, raster, go and so on. But if you remember the previous slide, we talked about the memory safeness of the web assembly, and which is the other language that remember has a similar capability, raster. Because raster guarantee memory safety. And this is why we are here to talk about REST plus web assembly. So which is the constraint we have for building wasm in REST? Unfortunately, we are not so free to use what we want. We need to put an attribute wasm and gen in all type and exported, so structure and arms and so on, but not linked to that. Also the implementation block, we need to treat like that. So put the same attribute on top of the implementation block. And unfortunately wasm doesn't understand all the types available in REST. So bytes are integer, but not all the integer has supported floating points and vector. We have some limitation about that. As consequence, for example, enumeration need to be treated as 80. And all returned values from methods need to be casted to some wasm types or return a wasm and gen structure. So we are here to talk about snake, who play at least one snake, at least one, OK. For the other, snake is a simplest game, two grid, there is a two dimension grid. Your aim is to win, for winning, avoid and go through walls and eat yourself. You are able to eat foods that give you scores and so on. Your aim is to drive the snake through walls and try to eating the food, more or less. Anyway, we will see you later. So our code is here, is a cargo workspace with three members. The first one is just plain REST implementation of game logic without wasm stuff, without any other part. The second one is handmade snake that is just a wrapper on the previous one in order to let a JavaScript world to import it and use it. So we implement the web interface manually through JavaScript and DOMs. And the last is baby plug-in that allows us to create a proficiency, more proficiency than manual ones, a game. The last two members use the first one and we will see how. So conceptually we have a bunch of stuff, a direction that allows us to describe which is the direction the snake have. The point, because we live inside a grid, so we have to somehow describe the points. The game itself, private stuff, skip it, but mainly we have two members, tick and get the last snapshot. Tick allows us to move the snake in the direction specified there, has attributes. And the last snapshot allows us to know what happened in the last tick. For example, I eat a food, I go through the wall, which is my score, which is the position, and last but not least, the period duration. Because in the game the interval between the ticks changes accordingly with your score. So the game more gone, the period decrease. So how we can use hopefully you read the code, because the finger, anyway, I describe it. We have a level described that has a simplest, in simple way, through a string. We can parse it, creating a game. We invoke a tick method on the game, describing which is the direction we want to use. Get the last snapshot, check status, for example, in this case I eat a food, because the H goes on the food. We are not yet on the wall, and the game over is none. Instead the code below goes through the wall, so on wall is true, and the game over is some with the reason. And finally, we have two public levels, snake one is the two, the difference probably you know, but for repeating, the difference is the frame. So in snake one we have a frame with all the walls, instead snake two is more like a toroids, so you can go left and appear on the right and upper and bound. So how we can use these? We have a snake core, again without any dependency. We need to wrap it, because we already seen, we have some deficit about that. We have some custom JavaScript code that interact with DOM in order to update the UI. This is more like what happened. And at compilation time, after the compilation actually, we have a process for compilation, the Rust code into a wasm, and this compilation generates two artifacts actually, the wasm itself and an auto-generated JavaScript module that allow us to simplify the interaction with the wasm module. After that the same JavaScript code and the same DOM, so more or less what we have is wasm and auto-generated JavaScript that allow us a lot. So shortly, we need to wrap all the stuff, all the stuff. So the direction, the point, the game, the snapshot, and so on. So definitely, we are not able to do that for a large project. Obviously, this works for little ones like snake, but if you want to build a bigger one, probably it's not the best solution. But if you want instead create a cryptographic library, hashing library, something like that, this is really amazing, is sufficient. But for the gaming, probably not so much. So before seeing which is our alternative, we have, I have prepared a demo that obviously you can find in the code. So let's see if it is work properly. Ah, yes, here. OK. So because I haven't the framework that helped me to build a better user UI, I choose this one. Sorry, I'm not a UI expert. So for our proposal, it's sufficient. As you can see here, there is some bootstrap, webpack, blah, blah, blah, we don't care at all. But at a certain point with a lot of wasm, wasm is a few kilobytes, so not so big. The user is able to choose which game he would like to play, click on here, and move with the arrow key. Not whoa, but why not whoa. Thanks. OK. Obviously, when I go through the wall, the game is hence put on wall. Again, not the best user experience we have, but sorry. So we will see the code together in the final Q&A session, so sorry, time-restrainted. So which is our alternative? Our alternative, there are many alternatives, obviously. I choose a baby engine because I like it, I didn't find, again, I'm a web developer, so for gaming stuff, I don't understand nothing. But baby engine allow me to put something in a short time, so good stuff, guys, good stuff team. And support across platform as well, Windows Mac, Windows, and obviously web. The pattern used is ACS, entity component system, entity is just an ID that you can put on the world, and component is a tag, something you can attach to an entity, like image, like a position, like something like that. And system is a function that work on those stuff, can add entity, remove, add component, remove component, move existing component, and so on. So more or less how baby works, each frame invokes, baby runs our function, call it system, let change, add, remove components and entities, that allow us to change our worlds, and finally baby render some of them, obviously, on the screen. So conceptually, what I understand in two years at night, obviously, is not my job again. So it's almost simplest to understand. Last stuff to introduce of baby, we have two other concept, I need to introduce event, is a plane rest object that allow us to be fired and to be listened, so we can inform other functions, other systems, that something happens. And the resources is just a global instance, because system is allowed to access only on the world, not our custom objects. So you need to put your resources on the world and fetch it inside the system. And a nice feature, baby tracks when a resource change, we will see later. So how can you stem a system, for example, firing events that is listed by system two, that on that event change accordingly a resource A, and system three, more or less, react on that change, for example, moving the snake. So let's have a look to a more detailed example on the code, skipping the arguments because it's not important to understand better what I would like to show. Firstly, because systems runs every frame, we don't want to tick on every frame. We want to wait a timer. So also for test proposing, this is nice. So we need to wait a tick event. So only when the tick event is fired, we call tick method on game. Game is on the third arguments that the game resources, obviously, is the game we saw before. After that, we get the snapshot, check if the game over is, we are in game over. If yes, we send, we fire a game over event. After that, we update the snake position, update the resource score, update the food, and the duration of the timer because, you know, the period can change. The nice stuff to be focused on is the if because we don't want to change if the real value is changed. Bevy leveraged on the ref mute trait. So it is important to not the ref mute before the real change. So have a look at a quick demo, after the demo, we can see the code, I promise. So again, the demo, the demo, I propose you to show the native, the native part. So cargo run, blah, blah, blah. Okay, this is our windows that is created natively. Okay, again, I can choose snake one as the shoe with button this time. Thanks. And again, it's not my job, but this is what I implemented. So as you can see, under the hood, there is some locks, and in front of you should be at least the snake that runs through the table. And this is the way I handle the game over. So, and obviously, quit close the windows. So, we have three different states in our game, and in our code, I treat these in three different packages, sub packages, choose game, play game, and game over. And as you probably understand, we can leverage on event system to bring the user from one state to another one. So let's focus on the play state because probably is the most important one. So what we need to do in the play state, probably we need to, surely when we enter in that state, we create the resource, the dedicated resource, and make the initial draw. After that, we already saw we need to wait the tick event called tick game methods, update the position, update the food position, and the score number. And surely we do not forget them handling the press key and the game tick. So these are the last slides, after that we will see the output and the code. So the graphical representation, we have in red the systems, so the function, handle keyboard input that update the direction resource. We will see it before, when I press the key, the direction resource changes. Send game tick is the function that wait X seconds. So after X seconds sends game tick event, listed by tick system, that update after calling tick method on the game, all the resources. Because the resource changes, I can update accordingly the score, the snake and the food. Why I structure like that? Because the last three systems I mentioned, the score, the snake, the foods, can be parallelized by bevy. Bevy has a parallelization system that allows you to automatically parallelize the system if he understood that is parallelizable. For example, it does not access a mutable way on the same stuff. So show me the code, but probably show me the result also. If you want, you want, okay, okay. So I built it in release mode, and this is important, refresh the page, okay. As you can see here, we have 60 megabytes, not kilo, mega, but not in release mode. This heavier up to 70 mega, if I remember correctly, so crazy. Take one, obviously, are the same user experience, the same user experience, and as you can see here, there is the logs also. Nice feature is that he also linked to the particular lines, and this is amazing, at least from my point of view. So let's dig into the code. So we have time. Apparently, yes. So here we have the handmade snake. I remember that this is just a wrapper around our core implementation. As you can see here, there is a JSS that is a JavaScript API from the WebAssembly package we described before. The other part is just merely the tracing, for example, a different allocation. The second dependency allows us to print a message on panic, for example, and the first is the waspingen. So because I don't lie, not now, at least, here we have all the bingen attributes. With all the enumeration, the structures, and so on. And here, under this folder, we have the classic webpack, the webpack front-end stuff. I really don't know what is this. For building it, I use a webpack that allows us to translate rust in wasm, and used in the handmade package. Instead, the baby snake is built using a truck that allows us to somehow transform all the rust plus index.html into a web application directly. And if you are questioning how it works, why we made handmade snake and baby snake, which is the main difference under the hood, the answer is this. This is the public repository on GitHub. And here, as you can see, there is a web system, another API that allows us to interact with DOM world. So at the rust side, we can change the canvas. Because under the hood, there is the canvas, it's displayed inside the canvas. So more or less, I have done. Thank you. If there is any questions, I will be happy. Be kind. We have about five minutes for questions. Be kind. We have a show of hands for questions. Have you ever played around with much more entities like 100,000 or 1 million entities? Good question. No, I didn't. I know that the limitation here is the thread number. We have in JavaScript, we have in browser. If you don't use WebWorker, for example, you don't able to scale on this part, baby is not using WebWorker, at least for the time being, so he is not able to parallelize. And for this reason, probably, you can find a limitation. There is no internet, but in the baby engine website, there is a dedicated example. Also Shippe has a wasm, so you can find it and give me the answer, please. Thanks. Thank you very much. Thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 19.240000000000002, "text": " So now we've got Tomasso, he's going to tell us how to build a snake game, and we're going", "tokens": [407, 586, 321, 600, 658, 5041, 296, 539, 11, 415, 311, 516, 281, 980, 505, 577, 281, 1322, 257, 12650, 1216, 11, 293, 321, 434, 516], "temperature": 0.0, "avg_logprob": -0.4235852282980214, "compression_ratio": 1.2242990654205608, "no_speech_prob": 0.3854723274707794}, {"id": 1, "seek": 0, "start": 19.240000000000002, "end": 20.72, "text": " to build it together.", "tokens": [281, 1322, 309, 1214, 13], "temperature": 0.0, "avg_logprob": -0.4235852282980214, "compression_ratio": 1.2242990654205608, "no_speech_prob": 0.3854723274707794}, {"id": 2, "seek": 0, "start": 20.72, "end": 21.72, "text": " Hopefully.", "tokens": [10429, 13], "temperature": 0.0, "avg_logprob": -0.4235852282980214, "compression_ratio": 1.2242990654205608, "no_speech_prob": 0.3854723274707794}, {"id": 3, "seek": 0, "start": 21.72, "end": 23.72, "text": " Hi all.", "tokens": [2421, 439, 13], "temperature": 0.0, "avg_logprob": -0.4235852282980214, "compression_ratio": 1.2242990654205608, "no_speech_prob": 0.3854723274707794}, {"id": 4, "seek": 2372, "start": 23.72, "end": 30.599999999999998, "text": " Today we are here to talk about snake, obviously, rust and wasm.", "tokens": [2692, 321, 366, 510, 281, 751, 466, 12650, 11, 2745, 11, 15259, 293, 390, 76, 13], "temperature": 0.0, "avg_logprob": -0.2771436251126803, "compression_ratio": 1.4157303370786516, "no_speech_prob": 0.001965979114174843}, {"id": 5, "seek": 2372, "start": 30.599999999999998, "end": 39.0, "text": " In particular, we will see how to build a snake game written in rust, and Shepard has", "tokens": [682, 1729, 11, 321, 486, 536, 577, 281, 1322, 257, 12650, 1216, 3720, 294, 15259, 11, 293, 1160, 595, 515, 575], "temperature": 0.0, "avg_logprob": -0.2771436251126803, "compression_ratio": 1.4157303370786516, "no_speech_prob": 0.001965979114174843}, {"id": 6, "seek": 2372, "start": 39.0, "end": 41.879999999999995, "text": " a wasm module.", "tokens": [257, 390, 76, 10088, 13], "temperature": 0.0, "avg_logprob": -0.2771436251126803, "compression_ratio": 1.4157303370786516, "no_speech_prob": 0.001965979114174843}, {"id": 7, "seek": 2372, "start": 41.879999999999995, "end": 45.08, "text": " Before doing that, I would like to introduce myself.", "tokens": [4546, 884, 300, 11, 286, 576, 411, 281, 5366, 2059, 13], "temperature": 0.0, "avg_logprob": -0.2771436251126803, "compression_ratio": 1.4157303370786516, "no_speech_prob": 0.001965979114174843}, {"id": 8, "seek": 2372, "start": 45.08, "end": 48.2, "text": " Hi, I'm Tomasso, I have two cats.", "tokens": [2421, 11, 286, 478, 5041, 296, 539, 11, 286, 362, 732, 11111, 13], "temperature": 0.0, "avg_logprob": -0.2771436251126803, "compression_ratio": 1.4157303370786516, "no_speech_prob": 0.001965979114174843}, {"id": 9, "seek": 4820, "start": 48.2, "end": 55.160000000000004, "text": " And commonly, I used to be a software architect in a web application environment.", "tokens": [400, 12719, 11, 286, 1143, 281, 312, 257, 4722, 6331, 294, 257, 3670, 3861, 2823, 13], "temperature": 0.0, "avg_logprob": -0.23285703305844907, "compression_ratio": 1.3197278911564625, "no_speech_prob": 0.0007590489694848657}, {"id": 10, "seek": 4820, "start": 55.160000000000004, "end": 64.48, "text": " So probably the games is not my best stuff I can do build, but I try.", "tokens": [407, 1391, 264, 2813, 307, 406, 452, 1151, 1507, 286, 393, 360, 1322, 11, 457, 286, 853, 13], "temperature": 0.0, "avg_logprob": -0.23285703305844907, "compression_ratio": 1.3197278911564625, "no_speech_prob": 0.0007590489694848657}, {"id": 11, "seek": 4820, "start": 64.48, "end": 69.80000000000001, "text": " So let's start to talk about what wasm is.", "tokens": [407, 718, 311, 722, 281, 751, 466, 437, 390, 76, 307, 13], "temperature": 0.0, "avg_logprob": -0.23285703305844907, "compression_ratio": 1.3197278911564625, "no_speech_prob": 0.0007590489694848657}, {"id": 12, "seek": 6980, "start": 69.8, "end": 78.2, "text": " Powerless is a stack-based virtual machine that allows to be portable.", "tokens": [7086, 1832, 307, 257, 8630, 12, 6032, 6374, 3479, 300, 4045, 281, 312, 21800, 13], "temperature": 0.0, "avg_logprob": -0.3251003658070284, "compression_ratio": 1.2454545454545454, "no_speech_prob": 0.004095104988664389}, {"id": 13, "seek": 6980, "start": 78.2, "end": 88.6, "text": " So we can build applications and bring where you want most mostly.", "tokens": [407, 321, 393, 1322, 5821, 293, 1565, 689, 291, 528, 881, 5240, 13], "temperature": 0.0, "avg_logprob": -0.3251003658070284, "compression_ratio": 1.2454545454545454, "no_speech_prob": 0.004095104988664389}, {"id": 14, "seek": 8860, "start": 88.6, "end": 100.44, "text": " And the main target is web, but not linked to the web only.", "tokens": [400, 264, 2135, 3779, 307, 3670, 11, 457, 406, 9408, 281, 264, 3670, 787, 13], "temperature": 0.0, "avg_logprob": -0.21886557546155205, "compression_ratio": 1.3846153846153846, "no_speech_prob": 0.0007404827629216015}, {"id": 15, "seek": 8860, "start": 100.44, "end": 102.39999999999999, "text": " We will see later.", "tokens": [492, 486, 536, 1780, 13], "temperature": 0.0, "avg_logprob": -0.21886557546155205, "compression_ratio": 1.3846153846153846, "no_speech_prob": 0.0007404827629216015}, {"id": 16, "seek": 8860, "start": 102.39999999999999, "end": 111.44, "text": " So we have four concepts, efficient and fast, memory safety, safeness, open the bug able,", "tokens": [407, 321, 362, 1451, 10392, 11, 7148, 293, 2370, 11, 4675, 4514, 11, 3273, 1287, 11, 1269, 264, 7426, 1075, 11], "temperature": 0.0, "avg_logprob": -0.21886557546155205, "compression_ratio": 1.3846153846153846, "no_speech_prob": 0.0007404827629216015}, {"id": 17, "seek": 8860, "start": 111.44, "end": 115.16, "text": " and part of the web platform.", "tokens": [293, 644, 295, 264, 3670, 3663, 13], "temperature": 0.0, "avg_logprob": -0.21886557546155205, "compression_ratio": 1.3846153846153846, "no_speech_prob": 0.0007404827629216015}, {"id": 18, "seek": 11516, "start": 115.16, "end": 122.92, "text": " For this reason, we have four parts, the core one, JavaScript API that allows us to interact", "tokens": [1171, 341, 1778, 11, 321, 362, 1451, 3166, 11, 264, 4965, 472, 11, 15778, 9362, 300, 4045, 505, 281, 4648], "temperature": 0.0, "avg_logprob": -0.29942787170410157, "compression_ratio": 1.5894736842105264, "no_speech_prob": 0.0007759761065244675}, {"id": 19, "seek": 11516, "start": 122.92, "end": 128.56, "text": " with the JavaScript world, like browser nodes and so on.", "tokens": [365, 264, 15778, 1002, 11, 411, 11185, 13891, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.29942787170410157, "compression_ratio": 1.5894736842105264, "no_speech_prob": 0.0007759761065244675}, {"id": 20, "seek": 11516, "start": 128.56, "end": 134.88, "text": " Web API that allows us to interact with DOM events and so on.", "tokens": [9573, 9362, 300, 4045, 505, 281, 4648, 365, 35727, 3931, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.29942787170410157, "compression_ratio": 1.5894736842105264, "no_speech_prob": 0.0007759761065244675}, {"id": 21, "seek": 11516, "start": 134.88, "end": 143.72, "text": " And wasm, this is a standard for web assembly system integration, if I remember correctly,", "tokens": [400, 390, 76, 11, 341, 307, 257, 3832, 337, 3670, 12103, 1185, 10980, 11, 498, 286, 1604, 8944, 11], "temperature": 0.0, "avg_logprob": -0.29942787170410157, "compression_ratio": 1.5894736842105264, "no_speech_prob": 0.0007759761065244675}, {"id": 22, "seek": 14372, "start": 143.72, "end": 149.16, "text": " that allows us to interact with the file system, networking, and so on.", "tokens": [300, 4045, 505, 281, 4648, 365, 264, 3991, 1185, 11, 17985, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.28697740858879645, "compression_ratio": 1.456043956043956, "no_speech_prob": 0.00022558277123607695}, {"id": 23, "seek": 14372, "start": 149.16, "end": 159.64, "text": " Obviously, was is not allowed in browser context for some reason.", "tokens": [7580, 11, 390, 307, 406, 4350, 294, 11185, 4319, 337, 512, 1778, 13], "temperature": 0.0, "avg_logprob": -0.28697740858879645, "compression_ratio": 1.456043956043956, "no_speech_prob": 0.00022558277123607695}, {"id": 24, "seek": 14372, "start": 159.64, "end": 163.88, "text": " So how we can write a was module?", "tokens": [407, 577, 321, 393, 2464, 257, 390, 10088, 30], "temperature": 0.0, "avg_logprob": -0.28697740858879645, "compression_ratio": 1.456043956043956, "no_speech_prob": 0.00022558277123607695}, {"id": 25, "seek": 14372, "start": 163.88, "end": 172.6, "text": " Well, wasm actually supports two kind of format, text and binary, but probably you don't want", "tokens": [1042, 11, 390, 76, 767, 9346, 732, 733, 295, 7877, 11, 2487, 293, 17434, 11, 457, 1391, 291, 500, 380, 528], "temperature": 0.0, "avg_logprob": -0.28697740858879645, "compression_ratio": 1.456043956043956, "no_speech_prob": 0.00022558277123607695}, {"id": 26, "seek": 17260, "start": 172.6, "end": 175.92, "text": " to write directly into wasm.", "tokens": [281, 2464, 3838, 666, 390, 76, 13], "temperature": 0.0, "avg_logprob": -0.2526851381574358, "compression_ratio": 1.5855263157894737, "no_speech_prob": 0.0003625315730459988}, {"id": 27, "seek": 17260, "start": 175.92, "end": 183.56, "text": " For example, assembly probably in this year, no one write in assembly directly.", "tokens": [1171, 1365, 11, 12103, 1391, 294, 341, 1064, 11, 572, 472, 2464, 294, 12103, 3838, 13], "temperature": 0.0, "avg_logprob": -0.2526851381574358, "compression_ratio": 1.5855263157894737, "no_speech_prob": 0.0003625315730459988}, {"id": 28, "seek": 17260, "start": 183.56, "end": 186.48, "text": " But if you want, you can do that.", "tokens": [583, 498, 291, 528, 11, 291, 393, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.2526851381574358, "compression_ratio": 1.5855263157894737, "no_speech_prob": 0.0003625315730459988}, {"id": 29, "seek": 17260, "start": 186.48, "end": 193.51999999999998, "text": " But probably you want to leverage on different languages, for example, cc++, raster, go and", "tokens": [583, 1391, 291, 528, 281, 13982, 322, 819, 8650, 11, 337, 1365, 11, 269, 66, 25472, 11, 367, 1727, 11, 352, 293], "temperature": 0.0, "avg_logprob": -0.2526851381574358, "compression_ratio": 1.5855263157894737, "no_speech_prob": 0.0003625315730459988}, {"id": 30, "seek": 17260, "start": 193.51999999999998, "end": 195.48, "text": " so on.", "tokens": [370, 322, 13], "temperature": 0.0, "avg_logprob": -0.2526851381574358, "compression_ratio": 1.5855263157894737, "no_speech_prob": 0.0003625315730459988}, {"id": 31, "seek": 19548, "start": 195.48, "end": 206.07999999999998, "text": " But if you remember the previous slide, we talked about the memory safeness of the web", "tokens": [583, 498, 291, 1604, 264, 3894, 4137, 11, 321, 2825, 466, 264, 4675, 3597, 15264, 295, 264, 3670], "temperature": 0.0, "avg_logprob": -0.2474979699826708, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.0001353756815660745}, {"id": 32, "seek": 19548, "start": 206.07999999999998, "end": 215.28, "text": " assembly, and which is the other language that remember has a similar capability, raster.", "tokens": [12103, 11, 293, 597, 307, 264, 661, 2856, 300, 1604, 575, 257, 2531, 13759, 11, 367, 1727, 13], "temperature": 0.0, "avg_logprob": -0.2474979699826708, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.0001353756815660745}, {"id": 33, "seek": 19548, "start": 215.28, "end": 219.23999999999998, "text": " Because raster guarantee memory safety.", "tokens": [1436, 367, 1727, 10815, 4675, 4514, 13], "temperature": 0.0, "avg_logprob": -0.2474979699826708, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.0001353756815660745}, {"id": 34, "seek": 21924, "start": 219.24, "end": 226.4, "text": " And this is why we are here to talk about REST plus web assembly.", "tokens": [400, 341, 307, 983, 321, 366, 510, 281, 751, 466, 497, 14497, 1804, 3670, 12103, 13], "temperature": 0.0, "avg_logprob": -0.2510731579506234, "compression_ratio": 1.4378378378378378, "no_speech_prob": 7.50385588617064e-05}, {"id": 35, "seek": 21924, "start": 226.4, "end": 231.96, "text": " So which is the constraint we have for building wasm in REST?", "tokens": [407, 597, 307, 264, 25534, 321, 362, 337, 2390, 390, 76, 294, 497, 14497, 30], "temperature": 0.0, "avg_logprob": -0.2510731579506234, "compression_ratio": 1.4378378378378378, "no_speech_prob": 7.50385588617064e-05}, {"id": 36, "seek": 21924, "start": 231.96, "end": 237.92000000000002, "text": " Unfortunately, we are not so free to use what we want.", "tokens": [8590, 11, 321, 366, 406, 370, 1737, 281, 764, 437, 321, 528, 13], "temperature": 0.0, "avg_logprob": -0.2510731579506234, "compression_ratio": 1.4378378378378378, "no_speech_prob": 7.50385588617064e-05}, {"id": 37, "seek": 21924, "start": 237.92000000000002, "end": 245.20000000000002, "text": " We need to put an attribute wasm and gen in all type and exported, so structure and", "tokens": [492, 643, 281, 829, 364, 19667, 390, 76, 293, 1049, 294, 439, 2010, 293, 42055, 11, 370, 3877, 293], "temperature": 0.0, "avg_logprob": -0.2510731579506234, "compression_ratio": 1.4378378378378378, "no_speech_prob": 7.50385588617064e-05}, {"id": 38, "seek": 24520, "start": 245.2, "end": 250.44, "text": " arms and so on, but not linked to that.", "tokens": [5812, 293, 370, 322, 11, 457, 406, 9408, 281, 300, 13], "temperature": 0.0, "avg_logprob": -0.21815187136332195, "compression_ratio": 1.5064102564102564, "no_speech_prob": 6.410253990907222e-05}, {"id": 39, "seek": 24520, "start": 250.44, "end": 254.72, "text": " Also the implementation block, we need to treat like that.", "tokens": [2743, 264, 11420, 3461, 11, 321, 643, 281, 2387, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.21815187136332195, "compression_ratio": 1.5064102564102564, "no_speech_prob": 6.410253990907222e-05}, {"id": 40, "seek": 24520, "start": 254.72, "end": 263.0, "text": " So put the same attribute on top of the implementation block.", "tokens": [407, 829, 264, 912, 19667, 322, 1192, 295, 264, 11420, 3461, 13], "temperature": 0.0, "avg_logprob": -0.21815187136332195, "compression_ratio": 1.5064102564102564, "no_speech_prob": 6.410253990907222e-05}, {"id": 41, "seek": 24520, "start": 263.0, "end": 269.64, "text": " And unfortunately wasm doesn't understand all the types available in REST.", "tokens": [400, 7015, 390, 76, 1177, 380, 1223, 439, 264, 3467, 2435, 294, 497, 14497, 13], "temperature": 0.0, "avg_logprob": -0.21815187136332195, "compression_ratio": 1.5064102564102564, "no_speech_prob": 6.410253990907222e-05}, {"id": 42, "seek": 26964, "start": 269.64, "end": 277.59999999999997, "text": " So bytes are integer, but not all the integer has supported floating points and vector.", "tokens": [407, 36088, 366, 24922, 11, 457, 406, 439, 264, 24922, 575, 8104, 12607, 2793, 293, 8062, 13], "temperature": 0.0, "avg_logprob": -0.2566516598065694, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.0005498717073351145}, {"id": 43, "seek": 26964, "start": 277.59999999999997, "end": 282.08, "text": " We have some limitation about that.", "tokens": [492, 362, 512, 27432, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.2566516598065694, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.0005498717073351145}, {"id": 44, "seek": 26964, "start": 282.08, "end": 289.68, "text": " As consequence, for example, enumeration need to be treated as 80.", "tokens": [1018, 18326, 11, 337, 1365, 11, 465, 449, 5053, 643, 281, 312, 8668, 382, 4688, 13], "temperature": 0.0, "avg_logprob": -0.2566516598065694, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.0005498717073351145}, {"id": 45, "seek": 28968, "start": 289.68, "end": 306.92, "text": " And all returned values from methods need to be casted to some wasm types or return", "tokens": [400, 439, 1533, 925, 292, 4190, 490, 7150, 643, 281, 312, 4193, 292, 281, 512, 390, 76, 3467, 420, 1533, 925], "temperature": 0.0, "avg_logprob": -0.391292459824506, "compression_ratio": 1.2528735632183907, "no_speech_prob": 0.00026182126021012664}, {"id": 46, "seek": 28968, "start": 306.92, "end": 310.84000000000003, "text": " a wasm and gen structure.", "tokens": [257, 390, 76, 293, 1049, 3877, 13], "temperature": 0.0, "avg_logprob": -0.391292459824506, "compression_ratio": 1.2528735632183907, "no_speech_prob": 0.00026182126021012664}, {"id": 47, "seek": 31084, "start": 310.84, "end": 326.0, "text": " So we are here to talk about snake, who play at least one snake, at least one, OK.", "tokens": [407, 321, 366, 510, 281, 751, 466, 12650, 11, 567, 862, 412, 1935, 472, 12650, 11, 412, 1935, 472, 11, 2264, 13], "temperature": 0.0, "avg_logprob": -0.359723965326945, "compression_ratio": 1.3898305084745763, "no_speech_prob": 8.083136344794184e-05}, {"id": 48, "seek": 31084, "start": 326.0, "end": 334.32, "text": " For the other, snake is a simplest game, two grid, there is a two dimension grid.", "tokens": [1171, 264, 661, 11, 12650, 307, 257, 22811, 1216, 11, 732, 10748, 11, 456, 307, 257, 732, 10139, 10748, 13], "temperature": 0.0, "avg_logprob": -0.359723965326945, "compression_ratio": 1.3898305084745763, "no_speech_prob": 8.083136344794184e-05}, {"id": 49, "seek": 33432, "start": 334.32, "end": 346.12, "text": " Your aim is to win, for winning, avoid and go through walls and eat yourself.", "tokens": [2260, 5939, 307, 281, 1942, 11, 337, 8224, 11, 5042, 293, 352, 807, 7920, 293, 1862, 1803, 13], "temperature": 0.0, "avg_logprob": -0.25525989532470705, "compression_ratio": 1.5911949685534592, "no_speech_prob": 0.001201851642690599}, {"id": 50, "seek": 33432, "start": 346.12, "end": 352.15999999999997, "text": " You are able to eat foods that give you scores and so on.", "tokens": [509, 366, 1075, 281, 1862, 8656, 300, 976, 291, 13444, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.25525989532470705, "compression_ratio": 1.5911949685534592, "no_speech_prob": 0.001201851642690599}, {"id": 51, "seek": 33432, "start": 352.15999999999997, "end": 360.28, "text": " Your aim is to drive the snake through walls and try to eating the food, more or less.", "tokens": [2260, 5939, 307, 281, 3332, 264, 12650, 807, 7920, 293, 853, 281, 3936, 264, 1755, 11, 544, 420, 1570, 13], "temperature": 0.0, "avg_logprob": -0.25525989532470705, "compression_ratio": 1.5911949685534592, "no_speech_prob": 0.001201851642690599}, {"id": 52, "seek": 33432, "start": 360.28, "end": 362.68, "text": " Anyway, we will see you later.", "tokens": [5684, 11, 321, 486, 536, 291, 1780, 13], "temperature": 0.0, "avg_logprob": -0.25525989532470705, "compression_ratio": 1.5911949685534592, "no_speech_prob": 0.001201851642690599}, {"id": 53, "seek": 36268, "start": 362.68, "end": 372.44, "text": " So our code is here, is a cargo workspace with three members.", "tokens": [407, 527, 3089, 307, 510, 11, 307, 257, 19449, 32706, 365, 1045, 2679, 13], "temperature": 0.0, "avg_logprob": -0.18835268914699554, "compression_ratio": 1.5088757396449703, "no_speech_prob": 0.0029330600518733263}, {"id": 54, "seek": 36268, "start": 372.44, "end": 379.04, "text": " The first one is just plain REST implementation of game logic without wasm stuff, without", "tokens": [440, 700, 472, 307, 445, 11121, 497, 14497, 11420, 295, 1216, 9952, 1553, 390, 76, 1507, 11, 1553], "temperature": 0.0, "avg_logprob": -0.18835268914699554, "compression_ratio": 1.5088757396449703, "no_speech_prob": 0.0029330600518733263}, {"id": 55, "seek": 36268, "start": 379.04, "end": 382.48, "text": " any other part.", "tokens": [604, 661, 644, 13], "temperature": 0.0, "avg_logprob": -0.18835268914699554, "compression_ratio": 1.5088757396449703, "no_speech_prob": 0.0029330600518733263}, {"id": 56, "seek": 36268, "start": 382.48, "end": 389.92, "text": " The second one is handmade snake that is just a wrapper on the previous one in order to", "tokens": [440, 1150, 472, 307, 39446, 12650, 300, 307, 445, 257, 46906, 322, 264, 3894, 472, 294, 1668, 281], "temperature": 0.0, "avg_logprob": -0.18835268914699554, "compression_ratio": 1.5088757396449703, "no_speech_prob": 0.0029330600518733263}, {"id": 57, "seek": 38992, "start": 389.92, "end": 395.8, "text": " let a JavaScript world to import it and use it.", "tokens": [718, 257, 15778, 1002, 281, 974, 309, 293, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.21081406952904874, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.00047469482524320483}, {"id": 58, "seek": 38992, "start": 395.8, "end": 402.6, "text": " So we implement the web interface manually through JavaScript and DOMs.", "tokens": [407, 321, 4445, 264, 3670, 9226, 16945, 807, 15778, 293, 35727, 82, 13], "temperature": 0.0, "avg_logprob": -0.21081406952904874, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.00047469482524320483}, {"id": 59, "seek": 38992, "start": 402.6, "end": 411.40000000000003, "text": " And the last is baby plug-in that allows us to create a proficiency, more proficiency", "tokens": [400, 264, 1036, 307, 3186, 5452, 12, 259, 300, 4045, 505, 281, 1884, 257, 1740, 42081, 11, 544, 1740, 42081], "temperature": 0.0, "avg_logprob": -0.21081406952904874, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.00047469482524320483}, {"id": 60, "seek": 38992, "start": 411.40000000000003, "end": 416.64, "text": " than manual ones, a game.", "tokens": [813, 9688, 2306, 11, 257, 1216, 13], "temperature": 0.0, "avg_logprob": -0.21081406952904874, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.00047469482524320483}, {"id": 61, "seek": 41664, "start": 416.64, "end": 424.68, "text": " The last two members use the first one and we will see how.", "tokens": [440, 1036, 732, 2679, 764, 264, 700, 472, 293, 321, 486, 536, 577, 13], "temperature": 0.0, "avg_logprob": -0.1721351988175336, "compression_ratio": 1.5808383233532934, "no_speech_prob": 8.316147432196885e-05}, {"id": 62, "seek": 41664, "start": 424.68, "end": 431.84, "text": " So conceptually we have a bunch of stuff, a direction that allows us to describe which", "tokens": [407, 3410, 671, 321, 362, 257, 3840, 295, 1507, 11, 257, 3513, 300, 4045, 505, 281, 6786, 597], "temperature": 0.0, "avg_logprob": -0.1721351988175336, "compression_ratio": 1.5808383233532934, "no_speech_prob": 8.316147432196885e-05}, {"id": 63, "seek": 41664, "start": 431.84, "end": 435.84, "text": " is the direction the snake have.", "tokens": [307, 264, 3513, 264, 12650, 362, 13], "temperature": 0.0, "avg_logprob": -0.1721351988175336, "compression_ratio": 1.5808383233532934, "no_speech_prob": 8.316147432196885e-05}, {"id": 64, "seek": 41664, "start": 435.84, "end": 445.84, "text": " The point, because we live inside a grid, so we have to somehow describe the points.", "tokens": [440, 935, 11, 570, 321, 1621, 1854, 257, 10748, 11, 370, 321, 362, 281, 6063, 6786, 264, 2793, 13], "temperature": 0.0, "avg_logprob": -0.1721351988175336, "compression_ratio": 1.5808383233532934, "no_speech_prob": 8.316147432196885e-05}, {"id": 65, "seek": 44584, "start": 445.84, "end": 456.23999999999995, "text": " The game itself, private stuff, skip it, but mainly we have two members, tick and get the", "tokens": [440, 1216, 2564, 11, 4551, 1507, 11, 10023, 309, 11, 457, 8704, 321, 362, 732, 2679, 11, 5204, 293, 483, 264], "temperature": 0.0, "avg_logprob": -0.305771068650849, "compression_ratio": 1.4166666666666667, "no_speech_prob": 0.0003874480607919395}, {"id": 66, "seek": 44584, "start": 456.23999999999995, "end": 458.52, "text": " last snapshot.", "tokens": [1036, 30163, 13], "temperature": 0.0, "avg_logprob": -0.305771068650849, "compression_ratio": 1.4166666666666667, "no_speech_prob": 0.0003874480607919395}, {"id": 67, "seek": 44584, "start": 458.52, "end": 466.47999999999996, "text": " Tick allows us to move the snake in the direction specified there, has attributes.", "tokens": [314, 618, 4045, 505, 281, 1286, 264, 12650, 294, 264, 3513, 22206, 456, 11, 575, 17212, 13], "temperature": 0.0, "avg_logprob": -0.305771068650849, "compression_ratio": 1.4166666666666667, "no_speech_prob": 0.0003874480607919395}, {"id": 68, "seek": 46648, "start": 466.48, "end": 475.48, "text": " And the last snapshot allows us to know what happened in the last tick.", "tokens": [400, 264, 1036, 30163, 4045, 505, 281, 458, 437, 2011, 294, 264, 1036, 5204, 13], "temperature": 0.0, "avg_logprob": -0.17587519980765678, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.0003913041146006435}, {"id": 69, "seek": 46648, "start": 475.48, "end": 482.84000000000003, "text": " For example, I eat a food, I go through the wall, which is my score, which is the position,", "tokens": [1171, 1365, 11, 286, 1862, 257, 1755, 11, 286, 352, 807, 264, 2929, 11, 597, 307, 452, 6175, 11, 597, 307, 264, 2535, 11], "temperature": 0.0, "avg_logprob": -0.17587519980765678, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.0003913041146006435}, {"id": 70, "seek": 46648, "start": 482.84000000000003, "end": 486.88, "text": " and last but not least, the period duration.", "tokens": [293, 1036, 457, 406, 1935, 11, 264, 2896, 16365, 13], "temperature": 0.0, "avg_logprob": -0.17587519980765678, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.0003913041146006435}, {"id": 71, "seek": 46648, "start": 486.88, "end": 496.46000000000004, "text": " Because in the game the interval between the ticks changes accordingly with your score.", "tokens": [1436, 294, 264, 1216, 264, 15035, 1296, 264, 42475, 2962, 19717, 365, 428, 6175, 13], "temperature": 0.0, "avg_logprob": -0.17587519980765678, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.0003913041146006435}, {"id": 72, "seek": 49646, "start": 496.46, "end": 503.91999999999996, "text": " So the game more gone, the period decrease.", "tokens": [407, 264, 1216, 544, 2780, 11, 264, 2896, 11514, 13], "temperature": 0.0, "avg_logprob": -0.2747033102470532, "compression_ratio": 1.4489795918367347, "no_speech_prob": 0.0014878809452056885}, {"id": 73, "seek": 49646, "start": 503.91999999999996, "end": 515.84, "text": " So how we can use hopefully you read the code, because the finger, anyway, I describe it.", "tokens": [407, 577, 321, 393, 764, 4696, 291, 1401, 264, 3089, 11, 570, 264, 5984, 11, 4033, 11, 286, 6786, 309, 13], "temperature": 0.0, "avg_logprob": -0.2747033102470532, "compression_ratio": 1.4489795918367347, "no_speech_prob": 0.0014878809452056885}, {"id": 74, "seek": 49646, "start": 515.84, "end": 525.12, "text": " We have a level described that has a simplest, in simple way, through a string.", "tokens": [492, 362, 257, 1496, 7619, 300, 575, 257, 22811, 11, 294, 2199, 636, 11, 807, 257, 6798, 13], "temperature": 0.0, "avg_logprob": -0.2747033102470532, "compression_ratio": 1.4489795918367347, "no_speech_prob": 0.0014878809452056885}, {"id": 75, "seek": 52512, "start": 525.12, "end": 529.48, "text": " We can parse it, creating a game.", "tokens": [492, 393, 48377, 309, 11, 4084, 257, 1216, 13], "temperature": 0.0, "avg_logprob": -0.2209015332735502, "compression_ratio": 1.4585987261146496, "no_speech_prob": 0.0005648129736073315}, {"id": 76, "seek": 52512, "start": 529.48, "end": 540.04, "text": " We invoke a tick method on the game, describing which is the direction we want to use.", "tokens": [492, 41117, 257, 5204, 3170, 322, 264, 1216, 11, 16141, 597, 307, 264, 3513, 321, 528, 281, 764, 13], "temperature": 0.0, "avg_logprob": -0.2209015332735502, "compression_ratio": 1.4585987261146496, "no_speech_prob": 0.0005648129736073315}, {"id": 77, "seek": 52512, "start": 540.04, "end": 551.44, "text": " Get the last snapshot, check status, for example, in this case I eat a food, because the H goes", "tokens": [3240, 264, 1036, 30163, 11, 1520, 6558, 11, 337, 1365, 11, 294, 341, 1389, 286, 1862, 257, 1755, 11, 570, 264, 389, 1709], "temperature": 0.0, "avg_logprob": -0.2209015332735502, "compression_ratio": 1.4585987261146496, "no_speech_prob": 0.0005648129736073315}, {"id": 78, "seek": 52512, "start": 551.44, "end": 554.64, "text": " on the food.", "tokens": [322, 264, 1755, 13], "temperature": 0.0, "avg_logprob": -0.2209015332735502, "compression_ratio": 1.4585987261146496, "no_speech_prob": 0.0005648129736073315}, {"id": 79, "seek": 55464, "start": 554.64, "end": 560.96, "text": " We are not yet on the wall, and the game over is none.", "tokens": [492, 366, 406, 1939, 322, 264, 2929, 11, 293, 264, 1216, 670, 307, 6022, 13], "temperature": 0.0, "avg_logprob": -0.27844597636789514, "compression_ratio": 1.6012658227848102, "no_speech_prob": 0.0004580303211696446}, {"id": 80, "seek": 55464, "start": 560.96, "end": 571.36, "text": " Instead the code below goes through the wall, so on wall is true, and the game over is some", "tokens": [7156, 264, 3089, 2507, 1709, 807, 264, 2929, 11, 370, 322, 2929, 307, 2074, 11, 293, 264, 1216, 670, 307, 512], "temperature": 0.0, "avg_logprob": -0.27844597636789514, "compression_ratio": 1.6012658227848102, "no_speech_prob": 0.0004580303211696446}, {"id": 81, "seek": 55464, "start": 571.36, "end": 574.58, "text": " with the reason.", "tokens": [365, 264, 1778, 13], "temperature": 0.0, "avg_logprob": -0.27844597636789514, "compression_ratio": 1.6012658227848102, "no_speech_prob": 0.0004580303211696446}, {"id": 82, "seek": 55464, "start": 574.58, "end": 583.56, "text": " And finally, we have two public levels, snake one is the two, the difference probably you", "tokens": [400, 2721, 11, 321, 362, 732, 1908, 4358, 11, 12650, 472, 307, 264, 732, 11, 264, 2649, 1391, 291], "temperature": 0.0, "avg_logprob": -0.27844597636789514, "compression_ratio": 1.6012658227848102, "no_speech_prob": 0.0004580303211696446}, {"id": 83, "seek": 58356, "start": 583.56, "end": 587.92, "text": " know, but for repeating, the difference is the frame.", "tokens": [458, 11, 457, 337, 18617, 11, 264, 2649, 307, 264, 3920, 13], "temperature": 0.0, "avg_logprob": -0.20549809231477625, "compression_ratio": 1.5128205128205128, "no_speech_prob": 0.0002519718836992979}, {"id": 84, "seek": 58356, "start": 587.92, "end": 598.52, "text": " So in snake one we have a frame with all the walls, instead snake two is more like a toroids,", "tokens": [407, 294, 12650, 472, 321, 362, 257, 3920, 365, 439, 264, 7920, 11, 2602, 12650, 732, 307, 544, 411, 257, 281, 340, 3742, 11], "temperature": 0.0, "avg_logprob": -0.20549809231477625, "compression_ratio": 1.5128205128205128, "no_speech_prob": 0.0002519718836992979}, {"id": 85, "seek": 58356, "start": 598.52, "end": 606.28, "text": " so you can go left and appear on the right and upper and bound.", "tokens": [370, 291, 393, 352, 1411, 293, 4204, 322, 264, 558, 293, 6597, 293, 5472, 13], "temperature": 0.0, "avg_logprob": -0.20549809231477625, "compression_ratio": 1.5128205128205128, "no_speech_prob": 0.0002519718836992979}, {"id": 86, "seek": 58356, "start": 606.28, "end": 610.0, "text": " So how we can use these?", "tokens": [407, 577, 321, 393, 764, 613, 30], "temperature": 0.0, "avg_logprob": -0.20549809231477625, "compression_ratio": 1.5128205128205128, "no_speech_prob": 0.0002519718836992979}, {"id": 87, "seek": 61000, "start": 610.0, "end": 616.4, "text": " We have a snake core, again without any dependency.", "tokens": [492, 362, 257, 12650, 4965, 11, 797, 1553, 604, 33621, 13], "temperature": 0.0, "avg_logprob": -0.16737724233556678, "compression_ratio": 1.396103896103896, "no_speech_prob": 6.51630834909156e-05}, {"id": 88, "seek": 61000, "start": 616.4, "end": 627.4, "text": " We need to wrap it, because we already seen, we have some deficit about that.", "tokens": [492, 643, 281, 7019, 309, 11, 570, 321, 1217, 1612, 11, 321, 362, 512, 22132, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.16737724233556678, "compression_ratio": 1.396103896103896, "no_speech_prob": 6.51630834909156e-05}, {"id": 89, "seek": 61000, "start": 627.4, "end": 638.36, "text": " We have some custom JavaScript code that interact with DOM in order to update the UI.", "tokens": [492, 362, 512, 2375, 15778, 3089, 300, 4648, 365, 35727, 294, 1668, 281, 5623, 264, 15682, 13], "temperature": 0.0, "avg_logprob": -0.16737724233556678, "compression_ratio": 1.396103896103896, "no_speech_prob": 6.51630834909156e-05}, {"id": 90, "seek": 63836, "start": 638.36, "end": 642.12, "text": " This is more like what happened.", "tokens": [639, 307, 544, 411, 437, 2011, 13], "temperature": 0.0, "avg_logprob": -0.25157992870776685, "compression_ratio": 1.6717948717948719, "no_speech_prob": 0.00010113992175320163}, {"id": 91, "seek": 63836, "start": 642.12, "end": 648.52, "text": " And at compilation time, after the compilation actually, we have a process for compilation,", "tokens": [400, 412, 40261, 565, 11, 934, 264, 40261, 767, 11, 321, 362, 257, 1399, 337, 40261, 11], "temperature": 0.0, "avg_logprob": -0.25157992870776685, "compression_ratio": 1.6717948717948719, "no_speech_prob": 0.00010113992175320163}, {"id": 92, "seek": 63836, "start": 648.52, "end": 656.44, "text": " the Rust code into a wasm, and this compilation generates two artifacts actually, the wasm", "tokens": [264, 34952, 3089, 666, 257, 390, 76, 11, 293, 341, 40261, 23815, 732, 24617, 767, 11, 264, 390, 76], "temperature": 0.0, "avg_logprob": -0.25157992870776685, "compression_ratio": 1.6717948717948719, "no_speech_prob": 0.00010113992175320163}, {"id": 93, "seek": 63836, "start": 656.44, "end": 663.0, "text": " itself and an auto-generated JavaScript module that allow us to simplify the interaction", "tokens": [2564, 293, 364, 8399, 12, 21848, 770, 15778, 10088, 300, 2089, 505, 281, 20460, 264, 9285], "temperature": 0.0, "avg_logprob": -0.25157992870776685, "compression_ratio": 1.6717948717948719, "no_speech_prob": 0.00010113992175320163}, {"id": 94, "seek": 63836, "start": 663.0, "end": 665.64, "text": " with the wasm module.", "tokens": [365, 264, 390, 76, 10088, 13], "temperature": 0.0, "avg_logprob": -0.25157992870776685, "compression_ratio": 1.6717948717948719, "no_speech_prob": 0.00010113992175320163}, {"id": 95, "seek": 66564, "start": 665.64, "end": 673.68, "text": " After that the same JavaScript code and the same DOM, so more or less what we have is", "tokens": [2381, 300, 264, 912, 15778, 3089, 293, 264, 912, 35727, 11, 370, 544, 420, 1570, 437, 321, 362, 307], "temperature": 0.0, "avg_logprob": -0.16384435017903645, "compression_ratio": 1.5748502994011977, "no_speech_prob": 0.00044588500168174505}, {"id": 96, "seek": 66564, "start": 673.68, "end": 680.3199999999999, "text": " wasm and auto-generated JavaScript that allow us a lot.", "tokens": [390, 76, 293, 8399, 12, 21848, 770, 15778, 300, 2089, 505, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.16384435017903645, "compression_ratio": 1.5748502994011977, "no_speech_prob": 0.00044588500168174505}, {"id": 97, "seek": 66564, "start": 680.3199999999999, "end": 685.72, "text": " So shortly, we need to wrap all the stuff, all the stuff.", "tokens": [407, 13392, 11, 321, 643, 281, 7019, 439, 264, 1507, 11, 439, 264, 1507, 13], "temperature": 0.0, "avg_logprob": -0.16384435017903645, "compression_ratio": 1.5748502994011977, "no_speech_prob": 0.00044588500168174505}, {"id": 98, "seek": 66564, "start": 685.72, "end": 693.36, "text": " So the direction, the point, the game, the snapshot, and so on.", "tokens": [407, 264, 3513, 11, 264, 935, 11, 264, 1216, 11, 264, 30163, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.16384435017903645, "compression_ratio": 1.5748502994011977, "no_speech_prob": 0.00044588500168174505}, {"id": 99, "seek": 69336, "start": 693.36, "end": 698.36, "text": " So definitely, we are not able to do that for a large project.", "tokens": [407, 2138, 11, 321, 366, 406, 1075, 281, 360, 300, 337, 257, 2416, 1716, 13], "temperature": 0.0, "avg_logprob": -0.25253954166319315, "compression_ratio": 1.5432692307692308, "no_speech_prob": 0.0002144513709936291}, {"id": 100, "seek": 69336, "start": 698.36, "end": 706.36, "text": " Obviously, this works for little ones like snake, but if you want to build a bigger one,", "tokens": [7580, 11, 341, 1985, 337, 707, 2306, 411, 12650, 11, 457, 498, 291, 528, 281, 1322, 257, 3801, 472, 11], "temperature": 0.0, "avg_logprob": -0.25253954166319315, "compression_ratio": 1.5432692307692308, "no_speech_prob": 0.0002144513709936291}, {"id": 101, "seek": 69336, "start": 706.36, "end": 708.92, "text": " probably it's not the best solution.", "tokens": [1391, 309, 311, 406, 264, 1151, 3827, 13], "temperature": 0.0, "avg_logprob": -0.25253954166319315, "compression_ratio": 1.5432692307692308, "no_speech_prob": 0.0002144513709936291}, {"id": 102, "seek": 69336, "start": 708.92, "end": 716.84, "text": " But if you want instead create a cryptographic library, hashing library, something like that,", "tokens": [583, 498, 291, 528, 2602, 1884, 257, 9844, 12295, 6405, 11, 575, 571, 6405, 11, 746, 411, 300, 11], "temperature": 0.0, "avg_logprob": -0.25253954166319315, "compression_ratio": 1.5432692307692308, "no_speech_prob": 0.0002144513709936291}, {"id": 103, "seek": 69336, "start": 716.84, "end": 721.16, "text": " this is really amazing, is sufficient.", "tokens": [341, 307, 534, 2243, 11, 307, 11563, 13], "temperature": 0.0, "avg_logprob": -0.25253954166319315, "compression_ratio": 1.5432692307692308, "no_speech_prob": 0.0002144513709936291}, {"id": 104, "seek": 72116, "start": 721.16, "end": 724.88, "text": " But for the gaming, probably not so much.", "tokens": [583, 337, 264, 9703, 11, 1391, 406, 370, 709, 13], "temperature": 0.0, "avg_logprob": -0.22912438132546165, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.0009497389546595514}, {"id": 105, "seek": 72116, "start": 724.88, "end": 737.64, "text": " So before seeing which is our alternative, we have, I have prepared a demo that obviously", "tokens": [407, 949, 2577, 597, 307, 527, 8535, 11, 321, 362, 11, 286, 362, 4927, 257, 10723, 300, 2745], "temperature": 0.0, "avg_logprob": -0.22912438132546165, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.0009497389546595514}, {"id": 106, "seek": 72116, "start": 737.64, "end": 741.7199999999999, "text": " you can find in the code.", "tokens": [291, 393, 915, 294, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.22912438132546165, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.0009497389546595514}, {"id": 107, "seek": 72116, "start": 741.7199999999999, "end": 748.0799999999999, "text": " So let's see if it is work properly.", "tokens": [407, 718, 311, 536, 498, 309, 307, 589, 6108, 13], "temperature": 0.0, "avg_logprob": -0.22912438132546165, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.0009497389546595514}, {"id": 108, "seek": 74808, "start": 748.08, "end": 755.6800000000001, "text": " Ah, yes, here.", "tokens": [2438, 11, 2086, 11, 510, 13], "temperature": 0.0, "avg_logprob": -0.31746628705193014, "compression_ratio": 1.1833333333333333, "no_speech_prob": 0.0004311332886572927}, {"id": 109, "seek": 74808, "start": 755.6800000000001, "end": 759.6800000000001, "text": " OK.", "tokens": [2264, 13], "temperature": 0.0, "avg_logprob": -0.31746628705193014, "compression_ratio": 1.1833333333333333, "no_speech_prob": 0.0004311332886572927}, {"id": 110, "seek": 74808, "start": 759.6800000000001, "end": 771.5200000000001, "text": " So because I haven't the framework that helped me to build a better user UI, I choose this", "tokens": [407, 570, 286, 2378, 380, 264, 8388, 300, 4254, 385, 281, 1322, 257, 1101, 4195, 15682, 11, 286, 2826, 341], "temperature": 0.0, "avg_logprob": -0.31746628705193014, "compression_ratio": 1.1833333333333333, "no_speech_prob": 0.0004311332886572927}, {"id": 111, "seek": 74808, "start": 771.5200000000001, "end": 772.5200000000001, "text": " one.", "tokens": [472, 13], "temperature": 0.0, "avg_logprob": -0.31746628705193014, "compression_ratio": 1.1833333333333333, "no_speech_prob": 0.0004311332886572927}, {"id": 112, "seek": 74808, "start": 772.5200000000001, "end": 777.08, "text": " Sorry, I'm not a UI expert.", "tokens": [4919, 11, 286, 478, 406, 257, 15682, 5844, 13], "temperature": 0.0, "avg_logprob": -0.31746628705193014, "compression_ratio": 1.1833333333333333, "no_speech_prob": 0.0004311332886572927}, {"id": 113, "seek": 77708, "start": 777.08, "end": 781.5200000000001, "text": " So for our proposal, it's sufficient.", "tokens": [407, 337, 527, 11494, 11, 309, 311, 11563, 13], "temperature": 0.0, "avg_logprob": -0.24486507972081503, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.002982204081490636}, {"id": 114, "seek": 77708, "start": 781.5200000000001, "end": 786.5600000000001, "text": " As you can see here, there is some bootstrap, webpack, blah, blah, blah, we don't care at", "tokens": [1018, 291, 393, 536, 510, 11, 456, 307, 512, 11450, 372, 4007, 11, 3670, 9539, 11, 12288, 11, 12288, 11, 12288, 11, 321, 500, 380, 1127, 412], "temperature": 0.0, "avg_logprob": -0.24486507972081503, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.002982204081490636}, {"id": 115, "seek": 77708, "start": 786.5600000000001, "end": 787.5600000000001, "text": " all.", "tokens": [439, 13], "temperature": 0.0, "avg_logprob": -0.24486507972081503, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.002982204081490636}, {"id": 116, "seek": 77708, "start": 787.5600000000001, "end": 798.5600000000001, "text": " But at a certain point with a lot of wasm, wasm is a few kilobytes, so not so big.", "tokens": [583, 412, 257, 1629, 935, 365, 257, 688, 295, 390, 76, 11, 390, 76, 307, 257, 1326, 5128, 996, 43673, 11, 370, 406, 370, 955, 13], "temperature": 0.0, "avg_logprob": -0.24486507972081503, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.002982204081490636}, {"id": 117, "seek": 77708, "start": 798.5600000000001, "end": 805.76, "text": " The user is able to choose which game he would like to play, click on here, and move", "tokens": [440, 4195, 307, 1075, 281, 2826, 597, 1216, 415, 576, 411, 281, 862, 11, 2052, 322, 510, 11, 293, 1286], "temperature": 0.0, "avg_logprob": -0.24486507972081503, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.002982204081490636}, {"id": 118, "seek": 80576, "start": 805.76, "end": 808.56, "text": " with the arrow key.", "tokens": [365, 264, 11610, 2141, 13], "temperature": 0.0, "avg_logprob": -0.29634134886694735, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0002417490613879636}, {"id": 119, "seek": 80576, "start": 808.56, "end": 814.2, "text": " Not whoa, but why not whoa.", "tokens": [1726, 13310, 11, 457, 983, 406, 13310, 13], "temperature": 0.0, "avg_logprob": -0.29634134886694735, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0002417490613879636}, {"id": 120, "seek": 80576, "start": 814.2, "end": 815.2, "text": " Thanks.", "tokens": [2561, 13], "temperature": 0.0, "avg_logprob": -0.29634134886694735, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0002417490613879636}, {"id": 121, "seek": 80576, "start": 815.2, "end": 816.2, "text": " OK.", "tokens": [2264, 13], "temperature": 0.0, "avg_logprob": -0.29634134886694735, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0002417490613879636}, {"id": 122, "seek": 80576, "start": 816.2, "end": 823.68, "text": " Obviously, when I go through the wall, the game is hence put on wall.", "tokens": [7580, 11, 562, 286, 352, 807, 264, 2929, 11, 264, 1216, 307, 16678, 829, 322, 2929, 13], "temperature": 0.0, "avg_logprob": -0.29634134886694735, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0002417490613879636}, {"id": 123, "seek": 80576, "start": 823.68, "end": 828.8, "text": " Again, not the best user experience we have, but sorry.", "tokens": [3764, 11, 406, 264, 1151, 4195, 1752, 321, 362, 11, 457, 2597, 13], "temperature": 0.0, "avg_logprob": -0.29634134886694735, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.0002417490613879636}, {"id": 124, "seek": 82880, "start": 828.8, "end": 840.8399999999999, "text": " So we will see the code together in the final Q&A session, so sorry, time-restrainted.", "tokens": [407, 321, 486, 536, 264, 3089, 1214, 294, 264, 2572, 1249, 5, 32, 5481, 11, 370, 2597, 11, 565, 12, 4149, 424, 686, 292, 13], "temperature": 0.0, "avg_logprob": -0.26641265713438694, "compression_ratio": 1.3650793650793651, "no_speech_prob": 0.0001041408468154259}, {"id": 125, "seek": 82880, "start": 840.8399999999999, "end": 846.24, "text": " So which is our alternative?", "tokens": [407, 597, 307, 527, 8535, 30], "temperature": 0.0, "avg_logprob": -0.26641265713438694, "compression_ratio": 1.3650793650793651, "no_speech_prob": 0.0001041408468154259}, {"id": 126, "seek": 82880, "start": 846.24, "end": 851.12, "text": " Our alternative, there are many alternatives, obviously.", "tokens": [2621, 8535, 11, 456, 366, 867, 20478, 11, 2745, 13], "temperature": 0.0, "avg_logprob": -0.26641265713438694, "compression_ratio": 1.3650793650793651, "no_speech_prob": 0.0001041408468154259}, {"id": 127, "seek": 85112, "start": 851.12, "end": 861.88, "text": " I choose a baby engine because I like it, I didn't find, again, I'm a web developer,", "tokens": [286, 2826, 257, 3186, 2848, 570, 286, 411, 309, 11, 286, 994, 380, 915, 11, 797, 11, 286, 478, 257, 3670, 10754, 11], "temperature": 0.0, "avg_logprob": -0.24515166211484082, "compression_ratio": 1.4935064935064934, "no_speech_prob": 0.0014258937444537878}, {"id": 128, "seek": 85112, "start": 861.88, "end": 866.76, "text": " so for gaming stuff, I don't understand nothing.", "tokens": [370, 337, 9703, 1507, 11, 286, 500, 380, 1223, 1825, 13], "temperature": 0.0, "avg_logprob": -0.24515166211484082, "compression_ratio": 1.4935064935064934, "no_speech_prob": 0.0014258937444537878}, {"id": 129, "seek": 85112, "start": 866.76, "end": 875.44, "text": " But baby engine allow me to put something in a short time, so good stuff, guys, good", "tokens": [583, 3186, 2848, 2089, 385, 281, 829, 746, 294, 257, 2099, 565, 11, 370, 665, 1507, 11, 1074, 11, 665], "temperature": 0.0, "avg_logprob": -0.24515166211484082, "compression_ratio": 1.4935064935064934, "no_speech_prob": 0.0014258937444537878}, {"id": 130, "seek": 85112, "start": 875.44, "end": 877.24, "text": " stuff team.", "tokens": [1507, 1469, 13], "temperature": 0.0, "avg_logprob": -0.24515166211484082, "compression_ratio": 1.4935064935064934, "no_speech_prob": 0.0014258937444537878}, {"id": 131, "seek": 87724, "start": 877.24, "end": 887.64, "text": " And support across platform as well, Windows Mac, Windows, and obviously web.", "tokens": [400, 1406, 2108, 3663, 382, 731, 11, 8591, 5707, 11, 8591, 11, 293, 2745, 3670, 13], "temperature": 0.0, "avg_logprob": -0.20399214092053866, "compression_ratio": 1.596774193548387, "no_speech_prob": 0.0003845046740025282}, {"id": 132, "seek": 87724, "start": 887.64, "end": 894.52, "text": " The pattern used is ACS, entity component system, entity is just an ID that you can", "tokens": [440, 5102, 1143, 307, 8157, 50, 11, 13977, 6542, 1185, 11, 13977, 307, 445, 364, 7348, 300, 291, 393], "temperature": 0.0, "avg_logprob": -0.20399214092053866, "compression_ratio": 1.596774193548387, "no_speech_prob": 0.0003845046740025282}, {"id": 133, "seek": 87724, "start": 894.52, "end": 901.32, "text": " put on the world, and component is a tag, something you can attach to an entity, like", "tokens": [829, 322, 264, 1002, 11, 293, 6542, 307, 257, 6162, 11, 746, 291, 393, 5085, 281, 364, 13977, 11, 411], "temperature": 0.0, "avg_logprob": -0.20399214092053866, "compression_ratio": 1.596774193548387, "no_speech_prob": 0.0003845046740025282}, {"id": 134, "seek": 87724, "start": 901.32, "end": 905.92, "text": " image, like a position, like something like that.", "tokens": [3256, 11, 411, 257, 2535, 11, 411, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.20399214092053866, "compression_ratio": 1.596774193548387, "no_speech_prob": 0.0003845046740025282}, {"id": 135, "seek": 90592, "start": 905.92, "end": 914.92, "text": " And system is a function that work on those stuff, can add entity, remove, add component,", "tokens": [400, 1185, 307, 257, 2445, 300, 589, 322, 729, 1507, 11, 393, 909, 13977, 11, 4159, 11, 909, 6542, 11], "temperature": 0.0, "avg_logprob": -0.2623330725998175, "compression_ratio": 1.587837837837838, "no_speech_prob": 0.0001035080713336356}, {"id": 136, "seek": 90592, "start": 914.92, "end": 919.24, "text": " remove component, move existing component, and so on.", "tokens": [4159, 6542, 11, 1286, 6741, 6542, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.2623330725998175, "compression_ratio": 1.587837837837838, "no_speech_prob": 0.0001035080713336356}, {"id": 137, "seek": 90592, "start": 919.24, "end": 934.64, "text": " So more or less how baby works, each frame invokes, baby runs our function, call it system,", "tokens": [407, 544, 420, 1570, 577, 3186, 1985, 11, 1184, 3920, 1048, 8606, 11, 3186, 6676, 527, 2445, 11, 818, 309, 1185, 11], "temperature": 0.0, "avg_logprob": -0.2623330725998175, "compression_ratio": 1.587837837837838, "no_speech_prob": 0.0001035080713336356}, {"id": 138, "seek": 93464, "start": 934.64, "end": 948.48, "text": " let change, add, remove components and entities, that allow us to change our worlds, and finally", "tokens": [718, 1319, 11, 909, 11, 4159, 6677, 293, 16667, 11, 300, 2089, 505, 281, 1319, 527, 13401, 11, 293, 2721], "temperature": 0.0, "avg_logprob": -0.23252790852596886, "compression_ratio": 1.3214285714285714, "no_speech_prob": 7.793345139361918e-05}, {"id": 139, "seek": 93464, "start": 948.48, "end": 954.6, "text": " baby render some of them, obviously, on the screen.", "tokens": [3186, 15529, 512, 295, 552, 11, 2745, 11, 322, 264, 2568, 13], "temperature": 0.0, "avg_logprob": -0.23252790852596886, "compression_ratio": 1.3214285714285714, "no_speech_prob": 7.793345139361918e-05}, {"id": 140, "seek": 95460, "start": 954.6, "end": 965.96, "text": " So conceptually, what I understand in two years at night, obviously, is not my job again.", "tokens": [407, 3410, 671, 11, 437, 286, 1223, 294, 732, 924, 412, 1818, 11, 2745, 11, 307, 406, 452, 1691, 797, 13], "temperature": 0.0, "avg_logprob": -0.33630742345537457, "compression_ratio": 1.4527027027027026, "no_speech_prob": 0.0007595234783366323}, {"id": 141, "seek": 95460, "start": 965.96, "end": 972.0400000000001, "text": " So it's almost simplest to understand.", "tokens": [407, 309, 311, 1920, 22811, 281, 1223, 13], "temperature": 0.0, "avg_logprob": -0.33630742345537457, "compression_ratio": 1.4527027027027026, "no_speech_prob": 0.0007595234783366323}, {"id": 142, "seek": 95460, "start": 972.0400000000001, "end": 981.5600000000001, "text": " Last stuff to introduce of baby, we have two other concept, I need to introduce event,", "tokens": [5264, 1507, 281, 5366, 295, 3186, 11, 321, 362, 732, 661, 3410, 11, 286, 643, 281, 5366, 2280, 11], "temperature": 0.0, "avg_logprob": -0.33630742345537457, "compression_ratio": 1.4527027027027026, "no_speech_prob": 0.0007595234783366323}, {"id": 143, "seek": 98156, "start": 981.56, "end": 989.92, "text": " is a plane rest object that allow us to be fired and to be listened, so we can inform", "tokens": [307, 257, 5720, 1472, 2657, 300, 2089, 505, 281, 312, 11777, 293, 281, 312, 13207, 11, 370, 321, 393, 1356], "temperature": 0.0, "avg_logprob": -0.2585657266470102, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.0012585294898599386}, {"id": 144, "seek": 98156, "start": 989.92, "end": 997.1999999999999, "text": " other functions, other systems, that something happens.", "tokens": [661, 6828, 11, 661, 3652, 11, 300, 746, 2314, 13], "temperature": 0.0, "avg_logprob": -0.2585657266470102, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.0012585294898599386}, {"id": 145, "seek": 98156, "start": 997.1999999999999, "end": 1003.9599999999999, "text": " And the resources is just a global instance, because system is allowed to access only on", "tokens": [400, 264, 3593, 307, 445, 257, 4338, 5197, 11, 570, 1185, 307, 4350, 281, 2105, 787, 322], "temperature": 0.0, "avg_logprob": -0.2585657266470102, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.0012585294898599386}, {"id": 146, "seek": 98156, "start": 1003.9599999999999, "end": 1007.8399999999999, "text": " the world, not our custom objects.", "tokens": [264, 1002, 11, 406, 527, 2375, 6565, 13], "temperature": 0.0, "avg_logprob": -0.2585657266470102, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.0012585294898599386}, {"id": 147, "seek": 100784, "start": 1007.84, "end": 1016.36, "text": " So you need to put your resources on the world and fetch it inside the system.", "tokens": [407, 291, 643, 281, 829, 428, 3593, 322, 264, 1002, 293, 23673, 309, 1854, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1629553456460276, "compression_ratio": 1.4634146341463414, "no_speech_prob": 0.0003432428347878158}, {"id": 148, "seek": 100784, "start": 1016.36, "end": 1024.04, "text": " And a nice feature, baby tracks when a resource change, we will see later.", "tokens": [400, 257, 1481, 4111, 11, 3186, 10218, 562, 257, 7684, 1319, 11, 321, 486, 536, 1780, 13], "temperature": 0.0, "avg_logprob": -0.1629553456460276, "compression_ratio": 1.4634146341463414, "no_speech_prob": 0.0003432428347878158}, {"id": 149, "seek": 100784, "start": 1024.04, "end": 1032.88, "text": " So how can you stem a system, for example, firing events that is listed by system two,", "tokens": [407, 577, 393, 291, 12312, 257, 1185, 11, 337, 1365, 11, 16045, 3931, 300, 307, 10052, 538, 1185, 732, 11], "temperature": 0.0, "avg_logprob": -0.1629553456460276, "compression_ratio": 1.4634146341463414, "no_speech_prob": 0.0003432428347878158}, {"id": 150, "seek": 103288, "start": 1032.88, "end": 1041.2, "text": " that on that event change accordingly a resource A, and system three, more or less, react on", "tokens": [300, 322, 300, 2280, 1319, 19717, 257, 7684, 316, 11, 293, 1185, 1045, 11, 544, 420, 1570, 11, 4515, 322], "temperature": 0.0, "avg_logprob": -0.2121225490904691, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00011500211257953197}, {"id": 151, "seek": 103288, "start": 1041.2, "end": 1048.8400000000001, "text": " that change, for example, moving the snake.", "tokens": [300, 1319, 11, 337, 1365, 11, 2684, 264, 12650, 13], "temperature": 0.0, "avg_logprob": -0.2121225490904691, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00011500211257953197}, {"id": 152, "seek": 103288, "start": 1048.8400000000001, "end": 1059.72, "text": " So let's have a look to a more detailed example on the code, skipping the arguments because", "tokens": [407, 718, 311, 362, 257, 574, 281, 257, 544, 9942, 1365, 322, 264, 3089, 11, 31533, 264, 12869, 570], "temperature": 0.0, "avg_logprob": -0.2121225490904691, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.00011500211257953197}, {"id": 153, "seek": 105972, "start": 1059.72, "end": 1065.4, "text": " it's not important to understand better what I would like to show.", "tokens": [309, 311, 406, 1021, 281, 1223, 1101, 437, 286, 576, 411, 281, 855, 13], "temperature": 0.0, "avg_logprob": -0.2098851931297173, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.0001813510461943224}, {"id": 154, "seek": 105972, "start": 1065.4, "end": 1075.24, "text": " Firstly, because systems runs every frame, we don't want to tick on every frame.", "tokens": [20042, 11, 570, 3652, 6676, 633, 3920, 11, 321, 500, 380, 528, 281, 5204, 322, 633, 3920, 13], "temperature": 0.0, "avg_logprob": -0.2098851931297173, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.0001813510461943224}, {"id": 155, "seek": 105972, "start": 1075.24, "end": 1079.52, "text": " We want to wait a timer.", "tokens": [492, 528, 281, 1699, 257, 19247, 13], "temperature": 0.0, "avg_logprob": -0.2098851931297173, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.0001813510461943224}, {"id": 156, "seek": 105972, "start": 1079.52, "end": 1086.0, "text": " So also for test proposing, this is nice.", "tokens": [407, 611, 337, 1500, 29939, 11, 341, 307, 1481, 13], "temperature": 0.0, "avg_logprob": -0.2098851931297173, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.0001813510461943224}, {"id": 157, "seek": 108600, "start": 1086.0, "end": 1090.32, "text": " So we need to wait a tick event.", "tokens": [407, 321, 643, 281, 1699, 257, 5204, 2280, 13], "temperature": 0.0, "avg_logprob": -0.20735200845970297, "compression_ratio": 1.4402985074626866, "no_speech_prob": 0.0006937325815670192}, {"id": 158, "seek": 108600, "start": 1090.32, "end": 1099.04, "text": " So only when the tick event is fired, we call tick method on game.", "tokens": [407, 787, 562, 264, 5204, 2280, 307, 11777, 11, 321, 818, 5204, 3170, 322, 1216, 13], "temperature": 0.0, "avg_logprob": -0.20735200845970297, "compression_ratio": 1.4402985074626866, "no_speech_prob": 0.0006937325815670192}, {"id": 159, "seek": 108600, "start": 1099.04, "end": 1108.36, "text": " Game is on the third arguments that the game resources, obviously, is the game we saw before.", "tokens": [7522, 307, 322, 264, 2636, 12869, 300, 264, 1216, 3593, 11, 2745, 11, 307, 264, 1216, 321, 1866, 949, 13], "temperature": 0.0, "avg_logprob": -0.20735200845970297, "compression_ratio": 1.4402985074626866, "no_speech_prob": 0.0006937325815670192}, {"id": 160, "seek": 110836, "start": 1108.36, "end": 1117.12, "text": " After that, we get the snapshot, check if the game over is, we are in game over.", "tokens": [2381, 300, 11, 321, 483, 264, 30163, 11, 1520, 498, 264, 1216, 670, 307, 11, 321, 366, 294, 1216, 670, 13], "temperature": 0.0, "avg_logprob": -0.16743941184801933, "compression_ratio": 1.7407407407407407, "no_speech_prob": 0.00029720168095082045}, {"id": 161, "seek": 110836, "start": 1117.12, "end": 1123.56, "text": " If yes, we send, we fire a game over event.", "tokens": [759, 2086, 11, 321, 2845, 11, 321, 2610, 257, 1216, 670, 2280, 13], "temperature": 0.0, "avg_logprob": -0.16743941184801933, "compression_ratio": 1.7407407407407407, "no_speech_prob": 0.00029720168095082045}, {"id": 162, "seek": 110836, "start": 1123.56, "end": 1129.24, "text": " After that, we update the snake position, update the resource score, update the food,", "tokens": [2381, 300, 11, 321, 5623, 264, 12650, 2535, 11, 5623, 264, 7684, 6175, 11, 5623, 264, 1755, 11], "temperature": 0.0, "avg_logprob": -0.16743941184801933, "compression_ratio": 1.7407407407407407, "no_speech_prob": 0.00029720168095082045}, {"id": 163, "seek": 110836, "start": 1129.24, "end": 1136.32, "text": " and the duration of the timer because, you know, the period can change.", "tokens": [293, 264, 16365, 295, 264, 19247, 570, 11, 291, 458, 11, 264, 2896, 393, 1319, 13], "temperature": 0.0, "avg_logprob": -0.16743941184801933, "compression_ratio": 1.7407407407407407, "no_speech_prob": 0.00029720168095082045}, {"id": 164, "seek": 113632, "start": 1136.32, "end": 1144.08, "text": " The nice stuff to be focused on is the if because we don't want to change if the real", "tokens": [440, 1481, 1507, 281, 312, 5178, 322, 307, 264, 498, 570, 321, 500, 380, 528, 281, 1319, 498, 264, 957], "temperature": 0.0, "avg_logprob": -0.29880464488062364, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00028230613679625094}, {"id": 165, "seek": 113632, "start": 1144.08, "end": 1146.76, "text": " value is changed.", "tokens": [2158, 307, 3105, 13], "temperature": 0.0, "avg_logprob": -0.29880464488062364, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00028230613679625094}, {"id": 166, "seek": 113632, "start": 1146.76, "end": 1153.3999999999999, "text": " Bevy leveraged on the ref mute trait.", "tokens": [879, 11869, 12451, 2980, 322, 264, 1895, 24523, 22538, 13], "temperature": 0.0, "avg_logprob": -0.29880464488062364, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00028230613679625094}, {"id": 167, "seek": 113632, "start": 1153.3999999999999, "end": 1161.1599999999999, "text": " So it is important to not the ref mute before the real change.", "tokens": [407, 309, 307, 1021, 281, 406, 264, 1895, 24523, 949, 264, 957, 1319, 13], "temperature": 0.0, "avg_logprob": -0.29880464488062364, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00028230613679625094}, {"id": 168, "seek": 116116, "start": 1161.16, "end": 1170.6000000000001, "text": " So have a look at a quick demo, after the demo, we can see the code, I promise.", "tokens": [407, 362, 257, 574, 412, 257, 1702, 10723, 11, 934, 264, 10723, 11, 321, 393, 536, 264, 3089, 11, 286, 6228, 13], "temperature": 0.0, "avg_logprob": -0.27965333031826334, "compression_ratio": 1.5609756097560976, "no_speech_prob": 0.00014686932263430208}, {"id": 169, "seek": 116116, "start": 1170.6000000000001, "end": 1182.16, "text": " So again, the demo, the demo, I propose you to show the native, the native part.", "tokens": [407, 797, 11, 264, 10723, 11, 264, 10723, 11, 286, 17421, 291, 281, 855, 264, 8470, 11, 264, 8470, 644, 13], "temperature": 0.0, "avg_logprob": -0.27965333031826334, "compression_ratio": 1.5609756097560976, "no_speech_prob": 0.00014686932263430208}, {"id": 170, "seek": 116116, "start": 1182.16, "end": 1188.88, "text": " So cargo run, blah, blah, blah.", "tokens": [407, 19449, 1190, 11, 12288, 11, 12288, 11, 12288, 13], "temperature": 0.0, "avg_logprob": -0.27965333031826334, "compression_ratio": 1.5609756097560976, "no_speech_prob": 0.00014686932263430208}, {"id": 171, "seek": 118888, "start": 1188.88, "end": 1193.7600000000002, "text": " Okay, this is our windows that is created natively.", "tokens": [1033, 11, 341, 307, 527, 9309, 300, 307, 2942, 8470, 356, 13], "temperature": 0.0, "avg_logprob": -0.31516938460500615, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.000258209474850446}, {"id": 172, "seek": 118888, "start": 1193.7600000000002, "end": 1202.64, "text": " Okay, again, I can choose snake one as the shoe with button this time.", "tokens": [1033, 11, 797, 11, 286, 393, 2826, 12650, 472, 382, 264, 12796, 365, 2960, 341, 565, 13], "temperature": 0.0, "avg_logprob": -0.31516938460500615, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.000258209474850446}, {"id": 173, "seek": 118888, "start": 1202.64, "end": 1203.92, "text": " Thanks.", "tokens": [2561, 13], "temperature": 0.0, "avg_logprob": -0.31516938460500615, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.000258209474850446}, {"id": 174, "seek": 118888, "start": 1203.92, "end": 1213.44, "text": " And again, it's not my job, but this is what I implemented.", "tokens": [400, 797, 11, 309, 311, 406, 452, 1691, 11, 457, 341, 307, 437, 286, 12270, 13], "temperature": 0.0, "avg_logprob": -0.31516938460500615, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.000258209474850446}, {"id": 175, "seek": 121344, "start": 1213.44, "end": 1220.52, "text": " So as you can see, under the hood, there is some locks, and in front of you should be", "tokens": [407, 382, 291, 393, 536, 11, 833, 264, 13376, 11, 456, 307, 512, 20703, 11, 293, 294, 1868, 295, 291, 820, 312], "temperature": 0.0, "avg_logprob": -0.21167381226070345, "compression_ratio": 1.4473684210526316, "no_speech_prob": 0.0009454666287638247}, {"id": 176, "seek": 121344, "start": 1220.52, "end": 1228.76, "text": " at least the snake that runs through the table.", "tokens": [412, 1935, 264, 12650, 300, 6676, 807, 264, 3199, 13], "temperature": 0.0, "avg_logprob": -0.21167381226070345, "compression_ratio": 1.4473684210526316, "no_speech_prob": 0.0009454666287638247}, {"id": 177, "seek": 121344, "start": 1228.76, "end": 1233.92, "text": " And this is the way I handle the game over.", "tokens": [400, 341, 307, 264, 636, 286, 4813, 264, 1216, 670, 13], "temperature": 0.0, "avg_logprob": -0.21167381226070345, "compression_ratio": 1.4473684210526316, "no_speech_prob": 0.0009454666287638247}, {"id": 178, "seek": 121344, "start": 1233.92, "end": 1240.72, "text": " So, and obviously, quit close the windows.", "tokens": [407, 11, 293, 2745, 11, 10366, 1998, 264, 9309, 13], "temperature": 0.0, "avg_logprob": -0.21167381226070345, "compression_ratio": 1.4473684210526316, "no_speech_prob": 0.0009454666287638247}, {"id": 179, "seek": 124072, "start": 1240.72, "end": 1252.32, "text": " So, we have three different states in our game, and in our code, I treat these in three", "tokens": [407, 11, 321, 362, 1045, 819, 4368, 294, 527, 1216, 11, 293, 294, 527, 3089, 11, 286, 2387, 613, 294, 1045], "temperature": 0.0, "avg_logprob": -0.19278430938720703, "compression_ratio": 1.625, "no_speech_prob": 0.00040073037962429225}, {"id": 180, "seek": 124072, "start": 1252.32, "end": 1257.56, "text": " different packages, sub packages, choose game, play game, and game over.", "tokens": [819, 17401, 11, 1422, 17401, 11, 2826, 1216, 11, 862, 1216, 11, 293, 1216, 670, 13], "temperature": 0.0, "avg_logprob": -0.19278430938720703, "compression_ratio": 1.625, "no_speech_prob": 0.00040073037962429225}, {"id": 181, "seek": 124072, "start": 1257.56, "end": 1266.6000000000001, "text": " And as you probably understand, we can leverage on event system to bring the user from one", "tokens": [400, 382, 291, 1391, 1223, 11, 321, 393, 13982, 322, 2280, 1185, 281, 1565, 264, 4195, 490, 472], "temperature": 0.0, "avg_logprob": -0.19278430938720703, "compression_ratio": 1.625, "no_speech_prob": 0.00040073037962429225}, {"id": 182, "seek": 124072, "start": 1266.6000000000001, "end": 1270.04, "text": " state to another one.", "tokens": [1785, 281, 1071, 472, 13], "temperature": 0.0, "avg_logprob": -0.19278430938720703, "compression_ratio": 1.625, "no_speech_prob": 0.00040073037962429225}, {"id": 183, "seek": 127004, "start": 1270.04, "end": 1278.8799999999999, "text": " So let's focus on the play state because probably is the most important one.", "tokens": [407, 718, 311, 1879, 322, 264, 862, 1785, 570, 1391, 307, 264, 881, 1021, 472, 13], "temperature": 0.0, "avg_logprob": -0.23288511851477245, "compression_ratio": 1.6711409395973154, "no_speech_prob": 0.0005324714002199471}, {"id": 184, "seek": 127004, "start": 1278.8799999999999, "end": 1286.76, "text": " So what we need to do in the play state, probably we need to, surely when we enter in that state,", "tokens": [407, 437, 321, 643, 281, 360, 294, 264, 862, 1785, 11, 1391, 321, 643, 281, 11, 11468, 562, 321, 3242, 294, 300, 1785, 11], "temperature": 0.0, "avg_logprob": -0.23288511851477245, "compression_ratio": 1.6711409395973154, "no_speech_prob": 0.0005324714002199471}, {"id": 185, "seek": 127004, "start": 1286.76, "end": 1295.6399999999999, "text": " we create the resource, the dedicated resource, and make the initial draw.", "tokens": [321, 1884, 264, 7684, 11, 264, 8374, 7684, 11, 293, 652, 264, 5883, 2642, 13], "temperature": 0.0, "avg_logprob": -0.23288511851477245, "compression_ratio": 1.6711409395973154, "no_speech_prob": 0.0005324714002199471}, {"id": 186, "seek": 129564, "start": 1295.64, "end": 1301.68, "text": " After that, we already saw we need to wait the tick event called tick game methods, update", "tokens": [2381, 300, 11, 321, 1217, 1866, 321, 643, 281, 1699, 264, 5204, 2280, 1219, 5204, 1216, 7150, 11, 5623], "temperature": 0.0, "avg_logprob": -0.28080345903124126, "compression_ratio": 1.5763888888888888, "no_speech_prob": 0.0001549846783746034}, {"id": 187, "seek": 129564, "start": 1301.68, "end": 1307.44, "text": " the position, update the food position, and the score number.", "tokens": [264, 2535, 11, 5623, 264, 1755, 2535, 11, 293, 264, 6175, 1230, 13], "temperature": 0.0, "avg_logprob": -0.28080345903124126, "compression_ratio": 1.5763888888888888, "no_speech_prob": 0.0001549846783746034}, {"id": 188, "seek": 129564, "start": 1307.44, "end": 1318.48, "text": " And surely we do not forget them handling the press key and the game tick.", "tokens": [400, 11468, 321, 360, 406, 2870, 552, 13175, 264, 1886, 2141, 293, 264, 1216, 5204, 13], "temperature": 0.0, "avg_logprob": -0.28080345903124126, "compression_ratio": 1.5763888888888888, "no_speech_prob": 0.0001549846783746034}, {"id": 189, "seek": 131848, "start": 1318.48, "end": 1329.44, "text": " So these are the last slides, after that we will see the output and the code.", "tokens": [407, 613, 366, 264, 1036, 9788, 11, 934, 300, 321, 486, 536, 264, 5598, 293, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.21230617224001416, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.00016919718473218381}, {"id": 190, "seek": 131848, "start": 1329.44, "end": 1335.92, "text": " So the graphical representation, we have in red the systems, so the function, handle", "tokens": [407, 264, 35942, 10290, 11, 321, 362, 294, 2182, 264, 3652, 11, 370, 264, 2445, 11, 4813], "temperature": 0.0, "avg_logprob": -0.21230617224001416, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.00016919718473218381}, {"id": 191, "seek": 131848, "start": 1335.92, "end": 1340.92, "text": " keyboard input that update the direction resource.", "tokens": [10186, 4846, 300, 5623, 264, 3513, 7684, 13], "temperature": 0.0, "avg_logprob": -0.21230617224001416, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.00016919718473218381}, {"id": 192, "seek": 134092, "start": 1340.92, "end": 1350.64, "text": " We will see it before, when I press the key, the direction resource changes.", "tokens": [492, 486, 536, 309, 949, 11, 562, 286, 1886, 264, 2141, 11, 264, 3513, 7684, 2962, 13], "temperature": 0.0, "avg_logprob": -0.27098819944593644, "compression_ratio": 1.5, "no_speech_prob": 0.0002408140862826258}, {"id": 193, "seek": 134092, "start": 1350.64, "end": 1356.52, "text": " Send game tick is the function that wait X seconds.", "tokens": [17908, 1216, 5204, 307, 264, 2445, 300, 1699, 1783, 3949, 13], "temperature": 0.0, "avg_logprob": -0.27098819944593644, "compression_ratio": 1.5, "no_speech_prob": 0.0002408140862826258}, {"id": 194, "seek": 134092, "start": 1356.52, "end": 1368.2, "text": " So after X seconds sends game tick event, listed by tick system, that update after calling", "tokens": [407, 934, 1783, 3949, 14790, 1216, 5204, 2280, 11, 10052, 538, 5204, 1185, 11, 300, 5623, 934, 5141], "temperature": 0.0, "avg_logprob": -0.27098819944593644, "compression_ratio": 1.5, "no_speech_prob": 0.0002408140862826258}, {"id": 195, "seek": 136820, "start": 1368.2, "end": 1373.44, "text": " tick method on the game, all the resources.", "tokens": [5204, 3170, 322, 264, 1216, 11, 439, 264, 3593, 13], "temperature": 0.0, "avg_logprob": -0.25934732877291167, "compression_ratio": 1.6265822784810127, "no_speech_prob": 0.00033923584851436317}, {"id": 196, "seek": 136820, "start": 1373.44, "end": 1384.48, "text": " Because the resource changes, I can update accordingly the score, the snake and the food.", "tokens": [1436, 264, 7684, 2962, 11, 286, 393, 5623, 19717, 264, 6175, 11, 264, 12650, 293, 264, 1755, 13], "temperature": 0.0, "avg_logprob": -0.25934732877291167, "compression_ratio": 1.6265822784810127, "no_speech_prob": 0.00033923584851436317}, {"id": 197, "seek": 136820, "start": 1384.48, "end": 1387.3600000000001, "text": " Why I structure like that?", "tokens": [1545, 286, 3877, 411, 300, 30], "temperature": 0.0, "avg_logprob": -0.25934732877291167, "compression_ratio": 1.6265822784810127, "no_speech_prob": 0.00033923584851436317}, {"id": 198, "seek": 136820, "start": 1387.3600000000001, "end": 1396.44, "text": " Because the last three systems I mentioned, the score, the snake, the foods, can be parallelized", "tokens": [1436, 264, 1036, 1045, 3652, 286, 2835, 11, 264, 6175, 11, 264, 12650, 11, 264, 8656, 11, 393, 312, 8952, 1602], "temperature": 0.0, "avg_logprob": -0.25934732877291167, "compression_ratio": 1.6265822784810127, "no_speech_prob": 0.00033923584851436317}, {"id": 199, "seek": 139644, "start": 1396.44, "end": 1400.16, "text": " by bevy.", "tokens": [538, 312, 11869, 13], "temperature": 0.0, "avg_logprob": -0.24808221544538225, "compression_ratio": 1.593939393939394, "no_speech_prob": 0.00019018563034478575}, {"id": 200, "seek": 139644, "start": 1400.16, "end": 1407.16, "text": " Bevy has a parallelization system that allows you to automatically parallelize the system", "tokens": [879, 11869, 575, 257, 8952, 2144, 1185, 300, 4045, 291, 281, 6772, 8952, 1125, 264, 1185], "temperature": 0.0, "avg_logprob": -0.24808221544538225, "compression_ratio": 1.593939393939394, "no_speech_prob": 0.00019018563034478575}, {"id": 201, "seek": 139644, "start": 1407.16, "end": 1411.88, "text": " if he understood that is parallelizable.", "tokens": [498, 415, 7320, 300, 307, 8952, 22395, 13], "temperature": 0.0, "avg_logprob": -0.24808221544538225, "compression_ratio": 1.593939393939394, "no_speech_prob": 0.00019018563034478575}, {"id": 202, "seek": 139644, "start": 1411.88, "end": 1417.92, "text": " For example, it does not access a mutable way on the same stuff.", "tokens": [1171, 1365, 11, 309, 775, 406, 2105, 257, 5839, 712, 636, 322, 264, 912, 1507, 13], "temperature": 0.0, "avg_logprob": -0.24808221544538225, "compression_ratio": 1.593939393939394, "no_speech_prob": 0.00019018563034478575}, {"id": 203, "seek": 139644, "start": 1417.92, "end": 1424.68, "text": " So show me the code, but probably show me the result also.", "tokens": [407, 855, 385, 264, 3089, 11, 457, 1391, 855, 385, 264, 1874, 611, 13], "temperature": 0.0, "avg_logprob": -0.24808221544538225, "compression_ratio": 1.593939393939394, "no_speech_prob": 0.00019018563034478575}, {"id": 204, "seek": 142468, "start": 1424.68, "end": 1433.44, "text": " If you want, you want, okay, okay.", "tokens": [759, 291, 528, 11, 291, 528, 11, 1392, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.40990307595994735, "compression_ratio": 1.2444444444444445, "no_speech_prob": 0.002059006365016103}, {"id": 205, "seek": 142468, "start": 1433.44, "end": 1448.4, "text": " So I built it in release mode, and this is important, refresh the page, okay.", "tokens": [407, 286, 3094, 309, 294, 4374, 4391, 11, 293, 341, 307, 1021, 11, 15134, 264, 3028, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.40990307595994735, "compression_ratio": 1.2444444444444445, "no_speech_prob": 0.002059006365016103}, {"id": 206, "seek": 144840, "start": 1448.4, "end": 1455.96, "text": " As you can see here, we have 60 megabytes, not kilo, mega, but not in release mode.", "tokens": [1018, 291, 393, 536, 510, 11, 321, 362, 4060, 10816, 24538, 11, 406, 21112, 11, 17986, 11, 457, 406, 294, 4374, 4391, 13], "temperature": 0.0, "avg_logprob": -0.3058745861053467, "compression_ratio": 1.226890756302521, "no_speech_prob": 0.0016620332607999444}, {"id": 207, "seek": 144840, "start": 1455.96, "end": 1468.0, "text": " This heavier up to 70 mega, if I remember correctly, so crazy.", "tokens": [639, 18279, 493, 281, 5285, 17986, 11, 498, 286, 1604, 8944, 11, 370, 3219, 13], "temperature": 0.0, "avg_logprob": -0.3058745861053467, "compression_ratio": 1.226890756302521, "no_speech_prob": 0.0016620332607999444}, {"id": 208, "seek": 146800, "start": 1468.0, "end": 1481.76, "text": " Take one, obviously, are the same user experience, the same user experience, and as you can see", "tokens": [3664, 472, 11, 2745, 11, 366, 264, 912, 4195, 1752, 11, 264, 912, 4195, 1752, 11, 293, 382, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.27250753130231586, "compression_ratio": 1.4367816091954022, "no_speech_prob": 0.003031341591849923}, {"id": 209, "seek": 146800, "start": 1481.76, "end": 1485.72, "text": " here, there is the logs also.", "tokens": [510, 11, 456, 307, 264, 20820, 611, 13], "temperature": 0.0, "avg_logprob": -0.27250753130231586, "compression_ratio": 1.4367816091954022, "no_speech_prob": 0.003031341591849923}, {"id": 210, "seek": 148572, "start": 1485.72, "end": 1498.96, "text": " Nice feature is that he also linked to the particular lines, and this is amazing, at", "tokens": [5490, 4111, 307, 300, 415, 611, 9408, 281, 264, 1729, 3876, 11, 293, 341, 307, 2243, 11, 412], "temperature": 0.0, "avg_logprob": -0.2593581234967267, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.00039417430525645614}, {"id": 211, "seek": 148572, "start": 1498.96, "end": 1501.1200000000001, "text": " least from my point of view.", "tokens": [1935, 490, 452, 935, 295, 1910, 13], "temperature": 0.0, "avg_logprob": -0.2593581234967267, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.00039417430525645614}, {"id": 212, "seek": 148572, "start": 1501.1200000000001, "end": 1507.76, "text": " So let's dig into the code.", "tokens": [407, 718, 311, 2528, 666, 264, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2593581234967267, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.00039417430525645614}, {"id": 213, "seek": 148572, "start": 1507.76, "end": 1512.52, "text": " So we have time.", "tokens": [407, 321, 362, 565, 13], "temperature": 0.0, "avg_logprob": -0.2593581234967267, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.00039417430525645614}, {"id": 214, "seek": 148572, "start": 1512.52, "end": 1514.72, "text": " Apparently, yes.", "tokens": [16755, 11, 2086, 13], "temperature": 0.0, "avg_logprob": -0.2593581234967267, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.00039417430525645614}, {"id": 215, "seek": 151472, "start": 1514.72, "end": 1520.64, "text": " So here we have the handmade snake.", "tokens": [407, 510, 321, 362, 264, 39446, 12650, 13], "temperature": 0.0, "avg_logprob": -0.20571091300562808, "compression_ratio": 1.3734177215189873, "no_speech_prob": 0.00017915197531692684}, {"id": 216, "seek": 151472, "start": 1520.64, "end": 1527.48, "text": " I remember that this is just a wrapper around our core implementation.", "tokens": [286, 1604, 300, 341, 307, 445, 257, 46906, 926, 527, 4965, 11420, 13], "temperature": 0.0, "avg_logprob": -0.20571091300562808, "compression_ratio": 1.3734177215189873, "no_speech_prob": 0.00017915197531692684}, {"id": 217, "seek": 151472, "start": 1527.48, "end": 1537.84, "text": " As you can see here, there is a JSS that is a JavaScript API from the WebAssembly package", "tokens": [1018, 291, 393, 536, 510, 11, 456, 307, 257, 508, 21929, 300, 307, 257, 15778, 9362, 490, 264, 9573, 10884, 19160, 7372], "temperature": 0.0, "avg_logprob": -0.20571091300562808, "compression_ratio": 1.3734177215189873, "no_speech_prob": 0.00017915197531692684}, {"id": 218, "seek": 151472, "start": 1537.84, "end": 1539.8, "text": " we described before.", "tokens": [321, 7619, 949, 13], "temperature": 0.0, "avg_logprob": -0.20571091300562808, "compression_ratio": 1.3734177215189873, "no_speech_prob": 0.00017915197531692684}, {"id": 219, "seek": 153980, "start": 1539.8, "end": 1546.24, "text": " The other part is just merely the tracing, for example, a different allocation.", "tokens": [440, 661, 644, 307, 445, 17003, 264, 25262, 11, 337, 1365, 11, 257, 819, 27599, 13], "temperature": 0.0, "avg_logprob": -0.22328449928597227, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.00015376132796518505}, {"id": 220, "seek": 153980, "start": 1546.24, "end": 1553.36, "text": " The second dependency allows us to print a message on panic, for example, and the first", "tokens": [440, 1150, 33621, 4045, 505, 281, 4482, 257, 3636, 322, 14783, 11, 337, 1365, 11, 293, 264, 700], "temperature": 0.0, "avg_logprob": -0.22328449928597227, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.00015376132796518505}, {"id": 221, "seek": 153980, "start": 1553.36, "end": 1556.1599999999999, "text": " is the waspingen.", "tokens": [307, 264, 390, 3381, 268, 13], "temperature": 0.0, "avg_logprob": -0.22328449928597227, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.00015376132796518505}, {"id": 222, "seek": 153980, "start": 1556.1599999999999, "end": 1569.76, "text": " So because I don't lie, not now, at least, here we have all the bingen attributes.", "tokens": [407, 570, 286, 500, 380, 4544, 11, 406, 586, 11, 412, 1935, 11, 510, 321, 362, 439, 264, 272, 278, 268, 17212, 13], "temperature": 0.0, "avg_logprob": -0.22328449928597227, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.00015376132796518505}, {"id": 223, "seek": 156976, "start": 1569.76, "end": 1576.36, "text": " With all the enumeration, the structures, and so on.", "tokens": [2022, 439, 264, 465, 449, 5053, 11, 264, 9227, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.2749782238366469, "compression_ratio": 1.3206106870229009, "no_speech_prob": 0.0007832248229533434}, {"id": 224, "seek": 156976, "start": 1576.36, "end": 1590.48, "text": " And here, under this folder, we have the classic webpack, the webpack front-end stuff.", "tokens": [400, 510, 11, 833, 341, 10820, 11, 321, 362, 264, 7230, 3670, 9539, 11, 264, 3670, 9539, 1868, 12, 521, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2749782238366469, "compression_ratio": 1.3206106870229009, "no_speech_prob": 0.0007832248229533434}, {"id": 225, "seek": 156976, "start": 1590.48, "end": 1597.48, "text": " I really don't know what is this.", "tokens": [286, 534, 500, 380, 458, 437, 307, 341, 13], "temperature": 0.0, "avg_logprob": -0.2749782238366469, "compression_ratio": 1.3206106870229009, "no_speech_prob": 0.0007832248229533434}, {"id": 226, "seek": 159748, "start": 1597.48, "end": 1606.6, "text": " For building it, I use a webpack that allows us to translate rust in wasm, and used in", "tokens": [1171, 2390, 309, 11, 286, 764, 257, 3670, 9539, 300, 4045, 505, 281, 13799, 15259, 294, 390, 76, 11, 293, 1143, 294], "temperature": 0.0, "avg_logprob": -0.3768927867595966, "compression_ratio": 1.5075757575757576, "no_speech_prob": 0.0006041665910743177}, {"id": 227, "seek": 159748, "start": 1606.6, "end": 1611.72, "text": " the handmade package.", "tokens": [264, 39446, 7372, 13], "temperature": 0.0, "avg_logprob": -0.3768927867595966, "compression_ratio": 1.5075757575757576, "no_speech_prob": 0.0006041665910743177}, {"id": 228, "seek": 159748, "start": 1611.72, "end": 1626.72, "text": " Instead, the baby snake is built using a truck that allows us to somehow transform all the", "tokens": [7156, 11, 264, 3186, 12650, 307, 3094, 1228, 257, 5898, 300, 4045, 505, 281, 6063, 4088, 439, 264], "temperature": 0.0, "avg_logprob": -0.3768927867595966, "compression_ratio": 1.5075757575757576, "no_speech_prob": 0.0006041665910743177}, {"id": 229, "seek": 162672, "start": 1626.72, "end": 1635.0, "text": " rust plus index.html into a web application directly.", "tokens": [15259, 1804, 8186, 13, 357, 15480, 666, 257, 3670, 3861, 3838, 13], "temperature": 0.0, "avg_logprob": -0.24732171572171724, "compression_ratio": 1.4326241134751774, "no_speech_prob": 0.00017047497385647148}, {"id": 230, "seek": 162672, "start": 1635.0, "end": 1649.24, "text": " And if you are questioning how it works, why we made handmade snake and baby snake, which", "tokens": [400, 498, 291, 366, 21257, 577, 309, 1985, 11, 983, 321, 1027, 39446, 12650, 293, 3186, 12650, 11, 597], "temperature": 0.0, "avg_logprob": -0.24732171572171724, "compression_ratio": 1.4326241134751774, "no_speech_prob": 0.00017047497385647148}, {"id": 231, "seek": 162672, "start": 1649.24, "end": 1655.84, "text": " is the main difference under the hood, the answer is this.", "tokens": [307, 264, 2135, 2649, 833, 264, 13376, 11, 264, 1867, 307, 341, 13], "temperature": 0.0, "avg_logprob": -0.24732171572171724, "compression_ratio": 1.4326241134751774, "no_speech_prob": 0.00017047497385647148}, {"id": 232, "seek": 165584, "start": 1655.84, "end": 1667.04, "text": " This is the public repository on GitHub.", "tokens": [639, 307, 264, 1908, 25841, 322, 23331, 13], "temperature": 0.0, "avg_logprob": -0.2500707799738104, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.0009609442204236984}, {"id": 233, "seek": 165584, "start": 1667.04, "end": 1672.9599999999998, "text": " And here, as you can see, there is a web system, another API that allows us to interact", "tokens": [400, 510, 11, 382, 291, 393, 536, 11, 456, 307, 257, 3670, 1185, 11, 1071, 9362, 300, 4045, 505, 281, 4648], "temperature": 0.0, "avg_logprob": -0.2500707799738104, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.0009609442204236984}, {"id": 234, "seek": 165584, "start": 1672.9599999999998, "end": 1674.9599999999998, "text": " with DOM world.", "tokens": [365, 35727, 1002, 13], "temperature": 0.0, "avg_logprob": -0.2500707799738104, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.0009609442204236984}, {"id": 235, "seek": 165584, "start": 1674.9599999999998, "end": 1682.08, "text": " So at the rust side, we can change the canvas.", "tokens": [407, 412, 264, 15259, 1252, 11, 321, 393, 1319, 264, 16267, 13], "temperature": 0.0, "avg_logprob": -0.2500707799738104, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.0009609442204236984}, {"id": 236, "seek": 168208, "start": 1682.08, "end": 1687.08, "text": " Because under the hood, there is the canvas, it's displayed inside the canvas.", "tokens": [1436, 833, 264, 13376, 11, 456, 307, 264, 16267, 11, 309, 311, 16372, 1854, 264, 16267, 13], "temperature": 0.0, "avg_logprob": -0.26069039431485264, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.00028093456057831645}, {"id": 237, "seek": 168208, "start": 1687.08, "end": 1696.08, "text": " So more or less, I have done.", "tokens": [407, 544, 420, 1570, 11, 286, 362, 1096, 13], "temperature": 0.0, "avg_logprob": -0.26069039431485264, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.00028093456057831645}, {"id": 238, "seek": 168208, "start": 1696.08, "end": 1697.58, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.26069039431485264, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.00028093456057831645}, {"id": 239, "seek": 168208, "start": 1697.58, "end": 1704.24, "text": " If there is any questions, I will be happy.", "tokens": [759, 456, 307, 604, 1651, 11, 286, 486, 312, 2055, 13], "temperature": 0.0, "avg_logprob": -0.26069039431485264, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.00028093456057831645}, {"id": 240, "seek": 168208, "start": 1704.24, "end": 1705.24, "text": " Be kind.", "tokens": [879, 733, 13], "temperature": 0.0, "avg_logprob": -0.26069039431485264, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.00028093456057831645}, {"id": 241, "seek": 170524, "start": 1705.24, "end": 1712.72, "text": " We have about five minutes for questions.", "tokens": [492, 362, 466, 1732, 2077, 337, 1651, 13], "temperature": 0.0, "avg_logprob": -0.2892599787030901, "compression_ratio": 1.2027027027027026, "no_speech_prob": 0.006699884310364723}, {"id": 242, "seek": 170524, "start": 1712.72, "end": 1713.72, "text": " Be kind.", "tokens": [879, 733, 13], "temperature": 0.0, "avg_logprob": -0.2892599787030901, "compression_ratio": 1.2027027027027026, "no_speech_prob": 0.006699884310364723}, {"id": 243, "seek": 170524, "start": 1713.72, "end": 1729.04, "text": " We have a show of hands for questions.", "tokens": [492, 362, 257, 855, 295, 2377, 337, 1651, 13], "temperature": 0.0, "avg_logprob": -0.2892599787030901, "compression_ratio": 1.2027027027027026, "no_speech_prob": 0.006699884310364723}, {"id": 244, "seek": 172904, "start": 1729.04, "end": 1737.04, "text": " Have you ever played around with much more entities like 100,000 or 1 million entities?", "tokens": [3560, 291, 1562, 3737, 926, 365, 709, 544, 16667, 411, 2319, 11, 1360, 420, 502, 2459, 16667, 30], "temperature": 0.0, "avg_logprob": -0.2822449048360189, "compression_ratio": 1.33125, "no_speech_prob": 0.010336424224078655}, {"id": 245, "seek": 172904, "start": 1737.04, "end": 1739.04, "text": " Good question.", "tokens": [2205, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2822449048360189, "compression_ratio": 1.33125, "no_speech_prob": 0.010336424224078655}, {"id": 246, "seek": 172904, "start": 1739.04, "end": 1744.2, "text": " No, I didn't.", "tokens": [883, 11, 286, 994, 380, 13], "temperature": 0.0, "avg_logprob": -0.2822449048360189, "compression_ratio": 1.33125, "no_speech_prob": 0.010336424224078655}, {"id": 247, "seek": 172904, "start": 1744.2, "end": 1748.3999999999999, "text": " I know that the limitation here is the thread number.", "tokens": [286, 458, 300, 264, 27432, 510, 307, 264, 7207, 1230, 13], "temperature": 0.0, "avg_logprob": -0.2822449048360189, "compression_ratio": 1.33125, "no_speech_prob": 0.010336424224078655}, {"id": 248, "seek": 172904, "start": 1748.3999999999999, "end": 1752.2, "text": " We have in JavaScript, we have in browser.", "tokens": [492, 362, 294, 15778, 11, 321, 362, 294, 11185, 13], "temperature": 0.0, "avg_logprob": -0.2822449048360189, "compression_ratio": 1.33125, "no_speech_prob": 0.010336424224078655}, {"id": 249, "seek": 175220, "start": 1752.2, "end": 1761.1200000000001, "text": " If you don't use WebWorker, for example, you don't able to scale on this part, baby", "tokens": [759, 291, 500, 380, 764, 9573, 28846, 260, 11, 337, 1365, 11, 291, 500, 380, 1075, 281, 4373, 322, 341, 644, 11, 3186], "temperature": 0.0, "avg_logprob": -0.18488236327669513, "compression_ratio": 1.52, "no_speech_prob": 0.001749994233250618}, {"id": 250, "seek": 175220, "start": 1761.1200000000001, "end": 1768.96, "text": " is not using WebWorker, at least for the time being, so he is not able to parallelize.", "tokens": [307, 406, 1228, 9573, 28846, 260, 11, 412, 1935, 337, 264, 565, 885, 11, 370, 415, 307, 406, 1075, 281, 8952, 1125, 13], "temperature": 0.0, "avg_logprob": -0.18488236327669513, "compression_ratio": 1.52, "no_speech_prob": 0.001749994233250618}, {"id": 251, "seek": 175220, "start": 1768.96, "end": 1776.16, "text": " And for this reason, probably, you can find a limitation.", "tokens": [400, 337, 341, 1778, 11, 1391, 11, 291, 393, 915, 257, 27432, 13], "temperature": 0.0, "avg_logprob": -0.18488236327669513, "compression_ratio": 1.52, "no_speech_prob": 0.001749994233250618}, {"id": 252, "seek": 177616, "start": 1776.16, "end": 1792.44, "text": " There is no internet, but in the baby engine website, there is a dedicated example.", "tokens": [821, 307, 572, 4705, 11, 457, 294, 264, 3186, 2848, 3144, 11, 456, 307, 257, 8374, 1365, 13], "temperature": 0.0, "avg_logprob": -0.27799814397638495, "compression_ratio": 1.077922077922078, "no_speech_prob": 0.0032967363949865103}, {"id": 253, "seek": 179244, "start": 1792.44, "end": 1812.44, "text": " Also Shippe has a wasm, so you can find it and give me the answer, please.", "tokens": [2743, 1160, 2488, 68, 575, 257, 390, 76, 11, 370, 291, 393, 915, 309, 293, 976, 385, 264, 1867, 11, 1767, 13], "temperature": 0.0, "avg_logprob": -0.43868044260385874, "compression_ratio": 1.1444444444444444, "no_speech_prob": 0.011343762278556824}, {"id": 254, "seek": 179244, "start": 1812.44, "end": 1813.44, "text": " Thanks.", "tokens": [2561, 13], "temperature": 0.0, "avg_logprob": -0.43868044260385874, "compression_ratio": 1.1444444444444444, "no_speech_prob": 0.011343762278556824}, {"id": 255, "seek": 179244, "start": 1813.44, "end": 1814.44, "text": " Thank you very much.", "tokens": [1044, 291, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.43868044260385874, "compression_ratio": 1.1444444444444444, "no_speech_prob": 0.011343762278556824}, {"id": 256, "seek": 181444, "start": 1814.44, "end": 1826.44, "text": " Thank you very much.", "tokens": [50364, 1044, 291, 588, 709, 13, 50964], "temperature": 0.0, "avg_logprob": -0.8755951523780823, "compression_ratio": 0.7142857142857143, "no_speech_prob": 0.014805064536631107}], "language": "en"}