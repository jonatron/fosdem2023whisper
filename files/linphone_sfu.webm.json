{"text": " Okay, we can start. Thank you for attempting to this meeting, which is about Linfone and video conferencing. My name is Jean Monnier. I'm involved in the Linfone project since 2010 and I'm also part of the company which is backing the Linfone project since ten years almost. So first, I'm going to provide you with a quick introduction on Linfone and then have a couple of words around video conferencing with SIP followed by an introduction on the selecting forwarding unit, which is the art of the modern video conferencing systems. And later to talk about what is required on the SIP client part to be able to interrupt with this kind of video conferencing system. And finally, the conclusion. Okay, so just a couple of words about Linfone. Linfone is a voice-over IP client implementing the SIP protocol which started in early 2000. It's available on Linux, Android, iOS, Windows and Mac. It uses SIP as the base standard for almost everything including audio, video call and instant messaging presence. Everything which is required for real-time communication. And it also provides some end-to-end encryption for messaging based on the signal protocol more or less. The Linfone team developed the Linfone software but also SIPTrover, which is basically a SIP proxy. And if you want to use SIP account, it's possible to create them on our website for testing purpose mainly. Okay, video conferencing with SIP in a couple of words. It's around a couple of standards. The first one is SIP, a basic SIP with an invite referring by to create a conference, join the conference to be able to invite other participants to the conference. And it's almost based on the RFC 4579, which defines how to create a conference and how to join the conference. And there is also some interesting standard, which is the RFC 5366, which is about defining the list of the participants of the conference. So it's for the establishment of the conference. And the next important standard is what we call the conferencing events package, which is based on the subcribe notify RFC. And the idea is that when a participant joined the conference, it initiates SIP subscribe to the server. And the server then notify to every participant of the conference, which are the states of the conference within who is going to join is their audio video, everything which is related to the status of the conference. On the media port, it's regular RTP. And for this video conferencing project, we added the support of two important RFC, which are about bundling all the media stream into the same socket in order to avoid to have too many RTP sockets, RTP streams per SIP client. And regarding the security, it's a regular SIP TLS for the for the signaling. And for the media pass, it's either SDS where the symmetric key is set in the SDP or the RTP or even SRTP DTLS. And for the RTP itself, it's a standard AES. Okay, now let's introduce the what's the selective forwarding units. And I'm going to start with the description on what we used to have for conferencing server. So in the past, the media mixer received the video from every re-user decode the video stream, perform the mixing, it could be mosaic or any layout, and then re-encode all the stream to be sent to every participant. This kind of software exists since 30 years, maybe 20. Here, I just want to show you a page that I saw in the RFC 7667, which is about the RTP topology of former legacy conferencing system. So for each client, A, B, C, here it's audio, but it could be the same for video. You have one RTP stream going to the media server and one RTP stream, which come from the media server to each client. And it's server side that everything is decoded, mixed, and sent back to the client. The advantage of this approach was that it was very simple from the client side, as the conferencing server was almost the same as calling regular user agent. The drawbacks of this approach was that video layout was defined server side, so you could have one or two different layouts. It requires a lot of CPU resourced server side, as every video stream has to be decoded and then re-encoded. And to end encryption was not possible due to the fact that video was decoded. Now, if we go to the selecting forwarding unit, the idea is that the media server is no more decoding and then encoding every video stream, but it's more switching video coming from every device to every other devices. And it could be done depending on several policies, like ActiveSpeaker or Mosaic. And for that, we also need some information coming from each client, like the volume of the audio stream in order to be able to know who is talking without having to decode the audio stream as well. If I go to the same schema, still from the RFC 7667, now you can see that from the RTP standpoint, you still have one RTP stream for each client coming, going to the media server. But now you have also one incoming video stream per participant of the of the conference. So if we follow the audio, the video stream from the client A, you can see that it is copied to client B, but as well to client F. So it's no more a media mixer, but a switching matrix, more or less. What are the advantages of this architecture is that video layout is no more defined through the server side, but the client can decide where to display every participant of the conference. It's an application choice, no more a server choice. It scales very well as there is no resources which are used through the server side to decode or encode the video stream. And finally, it's open the door for end-to-end encryption as the media server no more has to know the content of a video stream. The drawback of this approach is that it requires the Cpliant to be able to manage mostly stream, which was not the case for a standard one-to-one call. So for the Cpliant agent, what we had to change are the following mainly. It's mainly about multi-stream requirement. In the past, the Cpliant was able to send one audio stream plus one video stream. Now, it requires the client to be able to send one, but most of the time, two video streams, one for high resolution video and another, a second one for thumbnail, as well as being able to receive one video stream per participant of the video conference. Just an example of the SDP to show what is involved. So bundle mode, as I said, which is required, RTP MOOCs as well, it's to limit the number of sockets used for the media. This extension is related to audio level in order to be able to display who is talking and also for the server to be able to select which video stream is talking. It still uses IC to be able to limit the usage of media release. And from the video part, what you can see is that there are two video streams in receive only, one for the high resolution of the camera and another for the thumbnail. So it means that we encode two times the video. It could be replaced by some video encoder like H264, AVC, which supports a multi-layer functionality. But if you want to be able to do that with a simple VP8, it's better to encode two times the video. And for the receiving side, there is one video stream because in this example, there is only one participant in the video conference. But this part would be multiplied by the number of participants of the conference. Okay. So this is for what we have done on the Linfone project for this feature. It could be tested with the FlexiSIP server, which is currently running on our infrastructure. So you can create a video conference thanks to this conference factory CPURI. And using Linfone client with version above 5.0, it's possible to join a video conference. Okay. Thank you. Conclusion. Okay. So now Linfone is capable of joining video conference in two modes, mosaic and active speaker using a selective forwarding unit, which allows to scale. Possible evolution that we have in mind is to implement the Xcon conferencing server in order to be able to manage conference from a website or to have something more advanced. We are also thinking about adding end-to-end encryption to this video conferencing server and why not to provide the compatibility with WebRTC, knowing that the media protocol that we use are very close than WebRTC. Useful link. If you want to have more information about this work, you can go to the Linfone website and to have a look on our GitHub. Okay. That's it. If you have a question. Thank you. Are you aware of any other CIP client that implements multi-party video with someone? Not yet because the work to move from a regular CIP phone with only supporting one audio stream and one video stream to support this multi-stream is very significant and I'm not aware of any work in progress so far. So if you want to use it, you have to go with Linfone. Even if it's fully standardized, if we are following standard. Thank you. Not yet. Not yet, but we are quite confident that it's going to scale as we have removed all the needs for audio or video encoding server signs. So it's really about switching of packets. Maybe the question might be around the network on the client side. Around network, on the client side, as we are using, we are sending two resolutions from the client, a high resolution and a low resolution. And in the case of active speaker, we only send back to every client the high resolution of the people which is currently talking and low resolution of every other participant. So it highly limits the needs of bandwidth. Yes. On the client side, you now decode more than one stream. Correct. It's almost the same answer. We decode one high resolution and many low resolution and the CPU resources is depend on the resolution of the video that you have to decode. Just one question about the STP that you showed before. So were two receive only streams for the client? Was that from the client? It was from the server. Okay, because that was my question. Because it looked like the client. The server received two videos from the client, one in high resolution and one in low resolution and sent one video to this client. There is only one participant in this comparison. From the client perspective, when you switch from big resolution to low resolution, you still use the same M line that you have to send to the client. It's, yes, exactly. Okay, thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.72, "text": " Okay, we can start. Thank you for attempting to this meeting, which is about Linfone and", "tokens": [1033, 11, 321, 393, 722, 13, 1044, 291, 337, 22001, 281, 341, 3440, 11, 597, 307, 466, 9355, 69, 546, 293], "temperature": 0.0, "avg_logprob": -0.33186646302541095, "compression_ratio": 1.2962962962962963, "no_speech_prob": 0.18761247396469116}, {"id": 1, "seek": 0, "start": 15.72, "end": 23.32, "text": " video conferencing. My name is Jean Monnier. I'm involved in the Linfone project since", "tokens": [960, 13765, 13644, 13, 1222, 1315, 307, 13854, 4713, 19165, 13, 286, 478, 3288, 294, 264, 9355, 69, 546, 1716, 1670], "temperature": 0.0, "avg_logprob": -0.33186646302541095, "compression_ratio": 1.2962962962962963, "no_speech_prob": 0.18761247396469116}, {"id": 2, "seek": 2332, "start": 23.32, "end": 32.0, "text": " 2010 and I'm also part of the company which is backing the Linfone project since ten years", "tokens": [9657, 293, 286, 478, 611, 644, 295, 264, 2237, 597, 307, 19373, 264, 9355, 69, 546, 1716, 1670, 2064, 924], "temperature": 0.0, "avg_logprob": -0.17773619694496268, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.00018602698401082307}, {"id": 3, "seek": 2332, "start": 32.0, "end": 42.24, "text": " almost. So first, I'm going to provide you with a quick introduction on Linfone and then", "tokens": [1920, 13, 407, 700, 11, 286, 478, 516, 281, 2893, 291, 365, 257, 1702, 9339, 322, 9355, 69, 546, 293, 550], "temperature": 0.0, "avg_logprob": -0.17773619694496268, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.00018602698401082307}, {"id": 4, "seek": 2332, "start": 42.24, "end": 52.72, "text": " have a couple of words around video conferencing with SIP followed by an introduction on the", "tokens": [362, 257, 1916, 295, 2283, 926, 960, 13765, 13644, 365, 318, 9139, 6263, 538, 364, 9339, 322, 264], "temperature": 0.0, "avg_logprob": -0.17773619694496268, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.00018602698401082307}, {"id": 5, "seek": 5272, "start": 52.72, "end": 62.44, "text": " selecting forwarding unit, which is the art of the modern video conferencing systems. And later to", "tokens": [18182, 2128, 278, 4985, 11, 597, 307, 264, 1523, 295, 264, 4363, 960, 13765, 13644, 3652, 13, 400, 1780, 281], "temperature": 0.0, "avg_logprob": -0.15997026927435576, "compression_ratio": 1.532967032967033, "no_speech_prob": 3.931070023099892e-05}, {"id": 6, "seek": 5272, "start": 62.44, "end": 69.03999999999999, "text": " talk about what is required on the SIP client part to be able to interrupt with this kind of", "tokens": [751, 466, 437, 307, 4739, 322, 264, 318, 9139, 6423, 644, 281, 312, 1075, 281, 12729, 365, 341, 733, 295], "temperature": 0.0, "avg_logprob": -0.15997026927435576, "compression_ratio": 1.532967032967033, "no_speech_prob": 3.931070023099892e-05}, {"id": 7, "seek": 5272, "start": 69.03999999999999, "end": 78.44, "text": " video conferencing system. And finally, the conclusion. Okay, so just a couple of words", "tokens": [960, 13765, 13644, 1185, 13, 400, 2721, 11, 264, 10063, 13, 1033, 11, 370, 445, 257, 1916, 295, 2283], "temperature": 0.0, "avg_logprob": -0.15997026927435576, "compression_ratio": 1.532967032967033, "no_speech_prob": 3.931070023099892e-05}, {"id": 8, "seek": 7844, "start": 78.44, "end": 88.4, "text": " about Linfone. Linfone is a voice-over IP client implementing the SIP protocol which started", "tokens": [466, 9355, 69, 546, 13, 9355, 69, 546, 307, 257, 3177, 12, 3570, 8671, 6423, 18114, 264, 318, 9139, 10336, 597, 1409], "temperature": 0.0, "avg_logprob": -0.17067808475134508, "compression_ratio": 1.2635135135135136, "no_speech_prob": 0.00011906564759556204}, {"id": 9, "seek": 7844, "start": 88.4, "end": 100.72, "text": " in early 2000. It's available on Linux, Android, iOS, Windows and Mac. It uses SIP as the base", "tokens": [294, 2440, 8132, 13, 467, 311, 2435, 322, 18734, 11, 8853, 11, 17430, 11, 8591, 293, 5707, 13, 467, 4960, 318, 9139, 382, 264, 3096], "temperature": 0.0, "avg_logprob": -0.17067808475134508, "compression_ratio": 1.2635135135135136, "no_speech_prob": 0.00011906564759556204}, {"id": 10, "seek": 10072, "start": 100.72, "end": 109.72, "text": " standard for almost everything including audio, video call and instant messaging presence. Everything", "tokens": [3832, 337, 1920, 1203, 3009, 6278, 11, 960, 818, 293, 9836, 21812, 6814, 13, 5471], "temperature": 0.0, "avg_logprob": -0.16750911024750256, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.9060072595020756e-05}, {"id": 11, "seek": 10072, "start": 109.72, "end": 118.03999999999999, "text": " which is required for real-time communication. And it also provides some end-to-end encryption", "tokens": [597, 307, 4739, 337, 957, 12, 3766, 6101, 13, 400, 309, 611, 6417, 512, 917, 12, 1353, 12, 521, 29575], "temperature": 0.0, "avg_logprob": -0.16750911024750256, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.9060072595020756e-05}, {"id": 12, "seek": 10072, "start": 118.03999999999999, "end": 127.44, "text": " for messaging based on the signal protocol more or less. The Linfone team developed the", "tokens": [337, 21812, 2361, 322, 264, 6358, 10336, 544, 420, 1570, 13, 440, 9355, 69, 546, 1469, 4743, 264], "temperature": 0.0, "avg_logprob": -0.16750911024750256, "compression_ratio": 1.5106382978723405, "no_speech_prob": 3.9060072595020756e-05}, {"id": 13, "seek": 12744, "start": 127.44, "end": 133.16, "text": " Linfone software but also SIPTrover, which is basically a SIP proxy. And if you want to use", "tokens": [9355, 69, 546, 4722, 457, 611, 318, 9139, 51, 340, 331, 11, 597, 307, 1936, 257, 318, 9139, 29690, 13, 400, 498, 291, 528, 281, 764], "temperature": 0.0, "avg_logprob": -0.1826625427642426, "compression_ratio": 1.441025641025641, "no_speech_prob": 5.9080579376313835e-05}, {"id": 14, "seek": 12744, "start": 133.16, "end": 143.24, "text": " SIP account, it's possible to create them on our website for testing purpose mainly. Okay,", "tokens": [318, 9139, 2696, 11, 309, 311, 1944, 281, 1884, 552, 322, 527, 3144, 337, 4997, 4334, 8704, 13, 1033, 11], "temperature": 0.0, "avg_logprob": -0.1826625427642426, "compression_ratio": 1.441025641025641, "no_speech_prob": 5.9080579376313835e-05}, {"id": 15, "seek": 12744, "start": 143.24, "end": 151.52, "text": " video conferencing with SIP in a couple of words. It's around a couple of standards. The first one", "tokens": [960, 13765, 13644, 365, 318, 9139, 294, 257, 1916, 295, 2283, 13, 467, 311, 926, 257, 1916, 295, 7787, 13, 440, 700, 472], "temperature": 0.0, "avg_logprob": -0.1826625427642426, "compression_ratio": 1.441025641025641, "no_speech_prob": 5.9080579376313835e-05}, {"id": 16, "seek": 15152, "start": 151.52, "end": 160.0, "text": " is SIP, a basic SIP with an invite referring by to create a conference, join the conference to be", "tokens": [307, 318, 9139, 11, 257, 3875, 318, 9139, 365, 364, 7980, 13761, 538, 281, 1884, 257, 7586, 11, 3917, 264, 7586, 281, 312], "temperature": 0.0, "avg_logprob": -0.22518343321034606, "compression_ratio": 1.6863905325443787, "no_speech_prob": 0.00021932915842626244}, {"id": 17, "seek": 15152, "start": 160.0, "end": 170.84, "text": " able to invite other participants to the conference. And it's almost based on the RFC 4579, which", "tokens": [1075, 281, 7980, 661, 10503, 281, 264, 7586, 13, 400, 309, 311, 1920, 2361, 322, 264, 497, 18671, 6905, 32042, 11, 597], "temperature": 0.0, "avg_logprob": -0.22518343321034606, "compression_ratio": 1.6863905325443787, "no_speech_prob": 0.00021932915842626244}, {"id": 18, "seek": 15152, "start": 170.84, "end": 179.88, "text": " defines how to create a conference and how to join the conference. And there is also some", "tokens": [23122, 577, 281, 1884, 257, 7586, 293, 577, 281, 3917, 264, 7586, 13, 400, 456, 307, 611, 512], "temperature": 0.0, "avg_logprob": -0.22518343321034606, "compression_ratio": 1.6863905325443787, "no_speech_prob": 0.00021932915842626244}, {"id": 19, "seek": 17988, "start": 179.88, "end": 188.44, "text": " interesting standard, which is the RFC 5366, which is about defining the list of the participants", "tokens": [1880, 3832, 11, 597, 307, 264, 497, 18671, 1025, 11309, 21, 11, 597, 307, 466, 17827, 264, 1329, 295, 264, 10503], "temperature": 0.0, "avg_logprob": -0.1830587387084961, "compression_ratio": 1.655367231638418, "no_speech_prob": 6.526560173369944e-05}, {"id": 20, "seek": 17988, "start": 188.44, "end": 198.12, "text": " of the conference. So it's for the establishment of the conference. And the next important standard", "tokens": [295, 264, 7586, 13, 407, 309, 311, 337, 264, 20971, 295, 264, 7586, 13, 400, 264, 958, 1021, 3832], "temperature": 0.0, "avg_logprob": -0.1830587387084961, "compression_ratio": 1.655367231638418, "no_speech_prob": 6.526560173369944e-05}, {"id": 21, "seek": 17988, "start": 198.12, "end": 207.0, "text": " is what we call the conferencing events package, which is based on the subcribe notify RFC. And", "tokens": [307, 437, 321, 818, 264, 13765, 13644, 3931, 7372, 11, 597, 307, 2361, 322, 264, 1422, 8056, 36560, 497, 18671, 13, 400], "temperature": 0.0, "avg_logprob": -0.1830587387084961, "compression_ratio": 1.655367231638418, "no_speech_prob": 6.526560173369944e-05}, {"id": 22, "seek": 20700, "start": 207.0, "end": 214.6, "text": " the idea is that when a participant joined the conference, it initiates SIP subscribe to the", "tokens": [264, 1558, 307, 300, 562, 257, 24950, 6869, 264, 7586, 11, 309, 6265, 1024, 318, 9139, 3022, 281, 264], "temperature": 0.0, "avg_logprob": -0.18416184763754567, "compression_ratio": 1.725, "no_speech_prob": 0.00013354720431379974}, {"id": 23, "seek": 20700, "start": 214.6, "end": 221.76, "text": " server. And the server then notify to every participant of the conference, which are the", "tokens": [7154, 13, 400, 264, 7154, 550, 36560, 281, 633, 24950, 295, 264, 7586, 11, 597, 366, 264], "temperature": 0.0, "avg_logprob": -0.18416184763754567, "compression_ratio": 1.725, "no_speech_prob": 0.00013354720431379974}, {"id": 24, "seek": 20700, "start": 221.76, "end": 229.0, "text": " states of the conference within who is going to join is their audio video, everything which is", "tokens": [4368, 295, 264, 7586, 1951, 567, 307, 516, 281, 3917, 307, 641, 6278, 960, 11, 1203, 597, 307], "temperature": 0.0, "avg_logprob": -0.18416184763754567, "compression_ratio": 1.725, "no_speech_prob": 0.00013354720431379974}, {"id": 25, "seek": 22900, "start": 229.0, "end": 241.8, "text": " related to the status of the conference. On the media port, it's regular RTP. And for this video", "tokens": [4077, 281, 264, 6558, 295, 264, 7586, 13, 1282, 264, 3021, 2436, 11, 309, 311, 3890, 497, 16804, 13, 400, 337, 341, 960], "temperature": 0.0, "avg_logprob": -0.15791628811810468, "compression_ratio": 1.5319148936170213, "no_speech_prob": 0.0001298203569604084}, {"id": 26, "seek": 22900, "start": 241.8, "end": 249.64, "text": " conferencing project, we added the support of two important RFC, which are about bundling all the", "tokens": [13765, 13644, 1716, 11, 321, 3869, 264, 1406, 295, 732, 1021, 497, 18671, 11, 597, 366, 466, 13882, 1688, 439, 264], "temperature": 0.0, "avg_logprob": -0.15791628811810468, "compression_ratio": 1.5319148936170213, "no_speech_prob": 0.0001298203569604084}, {"id": 27, "seek": 22900, "start": 249.64, "end": 258.04, "text": " media stream into the same socket in order to avoid to have too many RTP sockets, RTP streams", "tokens": [3021, 4309, 666, 264, 912, 19741, 294, 1668, 281, 5042, 281, 362, 886, 867, 497, 16804, 370, 11984, 11, 497, 16804, 15842], "temperature": 0.0, "avg_logprob": -0.15791628811810468, "compression_ratio": 1.5319148936170213, "no_speech_prob": 0.0001298203569604084}, {"id": 28, "seek": 25804, "start": 258.04, "end": 268.48, "text": " per SIP client. And regarding the security, it's a regular SIP TLS for the for the signaling. And", "tokens": [680, 318, 9139, 6423, 13, 400, 8595, 264, 3825, 11, 309, 311, 257, 3890, 318, 9139, 314, 19198, 337, 264, 337, 264, 38639, 13, 400], "temperature": 0.0, "avg_logprob": -0.26926141125815256, "compression_ratio": 1.4, "no_speech_prob": 2.8463799026212655e-05}, {"id": 29, "seek": 25804, "start": 268.48, "end": 278.32000000000005, "text": " for the media pass, it's either SDS where the symmetric key is set in the SDP or the RTP or", "tokens": [337, 264, 3021, 1320, 11, 309, 311, 2139, 318, 11844, 689, 264, 32330, 2141, 307, 992, 294, 264, 318, 11373, 420, 264, 497, 16804, 420], "temperature": 0.0, "avg_logprob": -0.26926141125815256, "compression_ratio": 1.4, "no_speech_prob": 2.8463799026212655e-05}, {"id": 30, "seek": 27832, "start": 278.32, "end": 292.04, "text": " even SRTP DTLS. And for the RTP itself, it's a standard AES. Okay, now let's introduce the what's", "tokens": [754, 20840, 16804, 413, 51, 19198, 13, 400, 337, 264, 497, 16804, 2564, 11, 309, 311, 257, 3832, 316, 2358, 13, 1033, 11, 586, 718, 311, 5366, 264, 437, 311], "temperature": 0.0, "avg_logprob": -0.17459259714399064, "compression_ratio": 1.3150684931506849, "no_speech_prob": 1.804611019906588e-05}, {"id": 31, "seek": 27832, "start": 292.04, "end": 300.36, "text": " the selective forwarding units. And I'm going to start with the description on what we used to", "tokens": [264, 33930, 2128, 278, 6815, 13, 400, 286, 478, 516, 281, 722, 365, 264, 3855, 322, 437, 321, 1143, 281], "temperature": 0.0, "avg_logprob": -0.17459259714399064, "compression_ratio": 1.3150684931506849, "no_speech_prob": 1.804611019906588e-05}, {"id": 32, "seek": 30036, "start": 300.36, "end": 311.92, "text": " have for conferencing server. So in the past, the media mixer received the video from every", "tokens": [362, 337, 13765, 13644, 7154, 13, 407, 294, 264, 1791, 11, 264, 3021, 24063, 4613, 264, 960, 490, 633], "temperature": 0.0, "avg_logprob": -0.18761751603107063, "compression_ratio": 1.406015037593985, "no_speech_prob": 7.640420517418534e-05}, {"id": 33, "seek": 30036, "start": 311.92, "end": 322.44, "text": " re-user decode the video stream, perform the mixing, it could be mosaic or any layout, and then", "tokens": [319, 12, 18088, 979, 1429, 264, 960, 4309, 11, 2042, 264, 11983, 11, 309, 727, 312, 275, 42261, 420, 604, 13333, 11, 293, 550], "temperature": 0.0, "avg_logprob": -0.18761751603107063, "compression_ratio": 1.406015037593985, "no_speech_prob": 7.640420517418534e-05}, {"id": 34, "seek": 32244, "start": 322.44, "end": 333.71999999999997, "text": " re-encode all the stream to be sent to every participant. This kind of software exists since", "tokens": [319, 12, 22660, 1429, 439, 264, 4309, 281, 312, 2279, 281, 633, 24950, 13, 639, 733, 295, 4722, 8198, 1670], "temperature": 0.0, "avg_logprob": -0.16937458956683124, "compression_ratio": 1.2483221476510067, "no_speech_prob": 4.739159703603946e-05}, {"id": 35, "seek": 32244, "start": 333.71999999999997, "end": 350.76, "text": " 30 years, maybe 20. Here, I just want to show you a page that I saw in the RFC 7667, which is", "tokens": [2217, 924, 11, 1310, 945, 13, 1692, 11, 286, 445, 528, 281, 855, 291, 257, 3028, 300, 286, 1866, 294, 264, 497, 18671, 24733, 22452, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.16937458956683124, "compression_ratio": 1.2483221476510067, "no_speech_prob": 4.739159703603946e-05}, {"id": 36, "seek": 35076, "start": 350.76, "end": 359.92, "text": " about the RTP topology of former legacy conferencing system. So for each client, A, B, C, here it's", "tokens": [466, 264, 497, 16804, 1192, 1793, 295, 5819, 11711, 13765, 13644, 1185, 13, 407, 337, 1184, 6423, 11, 316, 11, 363, 11, 383, 11, 510, 309, 311], "temperature": 0.0, "avg_logprob": -0.1927794933319092, "compression_ratio": 1.5851063829787233, "no_speech_prob": 7.96138629084453e-05}, {"id": 37, "seek": 35076, "start": 359.92, "end": 365.71999999999997, "text": " audio, but it could be the same for video. You have one RTP stream going to the media server and", "tokens": [6278, 11, 457, 309, 727, 312, 264, 912, 337, 960, 13, 509, 362, 472, 497, 16804, 4309, 516, 281, 264, 3021, 7154, 293], "temperature": 0.0, "avg_logprob": -0.1927794933319092, "compression_ratio": 1.5851063829787233, "no_speech_prob": 7.96138629084453e-05}, {"id": 38, "seek": 35076, "start": 365.71999999999997, "end": 375.52, "text": " one RTP stream, which come from the media server to each client. And it's server side that everything", "tokens": [472, 497, 16804, 4309, 11, 597, 808, 490, 264, 3021, 7154, 281, 1184, 6423, 13, 400, 309, 311, 7154, 1252, 300, 1203], "temperature": 0.0, "avg_logprob": -0.1927794933319092, "compression_ratio": 1.5851063829787233, "no_speech_prob": 7.96138629084453e-05}, {"id": 39, "seek": 37552, "start": 375.52, "end": 385.4, "text": " is decoded, mixed, and sent back to the client. The advantage of this approach was that it was", "tokens": [307, 979, 12340, 11, 7467, 11, 293, 2279, 646, 281, 264, 6423, 13, 440, 5002, 295, 341, 3109, 390, 300, 309, 390], "temperature": 0.0, "avg_logprob": -0.18960800766944885, "compression_ratio": 1.6625766871165644, "no_speech_prob": 0.00015043745224829763}, {"id": 40, "seek": 37552, "start": 385.4, "end": 392.56, "text": " very simple from the client side, as the conferencing server was almost the same as calling", "tokens": [588, 2199, 490, 264, 6423, 1252, 11, 382, 264, 13765, 13644, 7154, 390, 1920, 264, 912, 382, 5141], "temperature": 0.0, "avg_logprob": -0.18960800766944885, "compression_ratio": 1.6625766871165644, "no_speech_prob": 0.00015043745224829763}, {"id": 41, "seek": 37552, "start": 392.56, "end": 403.64, "text": " regular user agent. The drawbacks of this approach was that video layout was defined", "tokens": [3890, 4195, 9461, 13, 440, 2642, 17758, 295, 341, 3109, 390, 300, 960, 13333, 390, 7642], "temperature": 0.0, "avg_logprob": -0.18960800766944885, "compression_ratio": 1.6625766871165644, "no_speech_prob": 0.00015043745224829763}, {"id": 42, "seek": 40364, "start": 403.64, "end": 412.32, "text": " server side, so you could have one or two different layouts. It requires a lot of CPU", "tokens": [7154, 1252, 11, 370, 291, 727, 362, 472, 420, 732, 819, 46100, 13, 467, 7029, 257, 688, 295, 13199], "temperature": 0.0, "avg_logprob": -0.21673438284132215, "compression_ratio": 1.5056818181818181, "no_speech_prob": 9.391195635544136e-05}, {"id": 43, "seek": 40364, "start": 412.32, "end": 421.12, "text": " resourced server side, as every video stream has to be decoded and then re-encoded. And", "tokens": [725, 396, 1232, 7154, 1252, 11, 382, 633, 960, 4309, 575, 281, 312, 979, 12340, 293, 550, 319, 12, 22660, 12340, 13, 400], "temperature": 0.0, "avg_logprob": -0.21673438284132215, "compression_ratio": 1.5056818181818181, "no_speech_prob": 9.391195635544136e-05}, {"id": 44, "seek": 40364, "start": 421.12, "end": 432.71999999999997, "text": " to end encryption was not possible due to the fact that video was decoded. Now, if we go to", "tokens": [281, 917, 29575, 390, 406, 1944, 3462, 281, 264, 1186, 300, 960, 390, 979, 12340, 13, 823, 11, 498, 321, 352, 281], "temperature": 0.0, "avg_logprob": -0.21673438284132215, "compression_ratio": 1.5056818181818181, "no_speech_prob": 9.391195635544136e-05}, {"id": 45, "seek": 43272, "start": 432.72, "end": 442.0, "text": " the selecting forwarding unit, the idea is that the media server is no more decoding and then", "tokens": [264, 18182, 2128, 278, 4985, 11, 264, 1558, 307, 300, 264, 3021, 7154, 307, 572, 544, 979, 8616, 293, 550], "temperature": 0.0, "avg_logprob": -0.22936722726532907, "compression_ratio": 1.5635359116022098, "no_speech_prob": 6.238126661628485e-05}, {"id": 46, "seek": 43272, "start": 442.0, "end": 449.6, "text": " encoding every video stream, but it's more switching video coming from every device to every", "tokens": [43430, 633, 960, 4309, 11, 457, 309, 311, 544, 16493, 960, 1348, 490, 633, 4302, 281, 633], "temperature": 0.0, "avg_logprob": -0.22936722726532907, "compression_ratio": 1.5635359116022098, "no_speech_prob": 6.238126661628485e-05}, {"id": 47, "seek": 43272, "start": 449.6, "end": 460.32000000000005, "text": " other devices. And it could be done depending on several policies, like ActiveSpeaker or Mosaic.", "tokens": [661, 5759, 13, 400, 309, 727, 312, 1096, 5413, 322, 2940, 7657, 11, 411, 26635, 19588, 4003, 420, 376, 42261, 13], "temperature": 0.0, "avg_logprob": -0.22936722726532907, "compression_ratio": 1.5635359116022098, "no_speech_prob": 6.238126661628485e-05}, {"id": 48, "seek": 46032, "start": 460.32, "end": 467.68, "text": " And for that, we also need some information coming from each client, like the volume of the", "tokens": [400, 337, 300, 11, 321, 611, 643, 512, 1589, 1348, 490, 1184, 6423, 11, 411, 264, 5523, 295, 264], "temperature": 0.0, "avg_logprob": -0.1314036178588867, "compression_ratio": 1.5159574468085106, "no_speech_prob": 7.649446342838928e-05}, {"id": 49, "seek": 46032, "start": 467.68, "end": 473.92, "text": " audio stream in order to be able to know who is talking without having to decode the audio stream", "tokens": [6278, 4309, 294, 1668, 281, 312, 1075, 281, 458, 567, 307, 1417, 1553, 1419, 281, 979, 1429, 264, 6278, 4309], "temperature": 0.0, "avg_logprob": -0.1314036178588867, "compression_ratio": 1.5159574468085106, "no_speech_prob": 7.649446342838928e-05}, {"id": 50, "seek": 46032, "start": 473.92, "end": 488.8, "text": " as well. If I go to the same schema, still from the RFC 7667, now you can see that from the RTP", "tokens": [382, 731, 13, 759, 286, 352, 281, 264, 912, 34078, 11, 920, 490, 264, 497, 18671, 24733, 22452, 11, 586, 291, 393, 536, 300, 490, 264, 497, 16804], "temperature": 0.0, "avg_logprob": -0.1314036178588867, "compression_ratio": 1.5159574468085106, "no_speech_prob": 7.649446342838928e-05}, {"id": 51, "seek": 48880, "start": 488.8, "end": 498.24, "text": " standpoint, you still have one RTP stream for each client coming, going to the media server. But", "tokens": [15827, 11, 291, 920, 362, 472, 497, 16804, 4309, 337, 1184, 6423, 1348, 11, 516, 281, 264, 3021, 7154, 13, 583], "temperature": 0.0, "avg_logprob": -0.1484130671326543, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.00027703799423761666}, {"id": 52, "seek": 48880, "start": 498.24, "end": 508.40000000000003, "text": " now you have also one incoming video stream per participant of the of the conference. So if we", "tokens": [586, 291, 362, 611, 472, 22341, 960, 4309, 680, 24950, 295, 264, 295, 264, 7586, 13, 407, 498, 321], "temperature": 0.0, "avg_logprob": -0.1484130671326543, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.00027703799423761666}, {"id": 53, "seek": 48880, "start": 508.40000000000003, "end": 517.76, "text": " follow the audio, the video stream from the client A, you can see that it is copied to client B,", "tokens": [1524, 264, 6278, 11, 264, 960, 4309, 490, 264, 6423, 316, 11, 291, 393, 536, 300, 309, 307, 25365, 281, 6423, 363, 11], "temperature": 0.0, "avg_logprob": -0.1484130671326543, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.00027703799423761666}, {"id": 54, "seek": 51776, "start": 517.76, "end": 528.4, "text": " but as well to client F. So it's no more a media mixer, but a switching matrix, more or less.", "tokens": [457, 382, 731, 281, 6423, 479, 13, 407, 309, 311, 572, 544, 257, 3021, 24063, 11, 457, 257, 16493, 8141, 11, 544, 420, 1570, 13], "temperature": 0.0, "avg_logprob": -0.15208026196094268, "compression_ratio": 1.3478260869565217, "no_speech_prob": 4.32870838267263e-05}, {"id": 55, "seek": 51776, "start": 528.4, "end": 541.12, "text": " What are the advantages of this architecture is that video layout is no more defined through", "tokens": [708, 366, 264, 14906, 295, 341, 9482, 307, 300, 960, 13333, 307, 572, 544, 7642, 807], "temperature": 0.0, "avg_logprob": -0.15208026196094268, "compression_ratio": 1.3478260869565217, "no_speech_prob": 4.32870838267263e-05}, {"id": 56, "seek": 54112, "start": 541.12, "end": 548.08, "text": " the server side, but the client can decide where to display every participant of the conference.", "tokens": [264, 7154, 1252, 11, 457, 264, 6423, 393, 4536, 689, 281, 4674, 633, 24950, 295, 264, 7586, 13], "temperature": 0.0, "avg_logprob": -0.15800122008926568, "compression_ratio": 1.6604651162790698, "no_speech_prob": 5.931096529820934e-05}, {"id": 57, "seek": 54112, "start": 548.08, "end": 557.04, "text": " It's an application choice, no more a server choice. It scales very well as there is no", "tokens": [467, 311, 364, 3861, 3922, 11, 572, 544, 257, 7154, 3922, 13, 467, 17408, 588, 731, 382, 456, 307, 572], "temperature": 0.0, "avg_logprob": -0.15800122008926568, "compression_ratio": 1.6604651162790698, "no_speech_prob": 5.931096529820934e-05}, {"id": 58, "seek": 54112, "start": 558.24, "end": 563.28, "text": " resources which are used through the server side to decode or encode the video stream.", "tokens": [3593, 597, 366, 1143, 807, 264, 7154, 1252, 281, 979, 1429, 420, 2058, 1429, 264, 960, 4309, 13], "temperature": 0.0, "avg_logprob": -0.15800122008926568, "compression_ratio": 1.6604651162790698, "no_speech_prob": 5.931096529820934e-05}, {"id": 59, "seek": 54112, "start": 563.84, "end": 569.84, "text": " And finally, it's open the door for end-to-end encryption as the media server no more", "tokens": [400, 2721, 11, 309, 311, 1269, 264, 2853, 337, 917, 12, 1353, 12, 521, 29575, 382, 264, 3021, 7154, 572, 544], "temperature": 0.0, "avg_logprob": -0.15800122008926568, "compression_ratio": 1.6604651162790698, "no_speech_prob": 5.931096529820934e-05}, {"id": 60, "seek": 56984, "start": 569.84, "end": 578.4, "text": " has to know the content of a video stream. The drawback of this approach is that it requires", "tokens": [575, 281, 458, 264, 2701, 295, 257, 960, 4309, 13, 440, 2642, 3207, 295, 341, 3109, 307, 300, 309, 7029], "temperature": 0.0, "avg_logprob": -0.24277099908566943, "compression_ratio": 1.3695652173913044, "no_speech_prob": 7.03450568835251e-05}, {"id": 61, "seek": 56984, "start": 578.4, "end": 586.8000000000001, "text": " the Cpliant to be able to manage mostly stream, which was not the case for a standard one-to-one", "tokens": [264, 383, 564, 5798, 281, 312, 1075, 281, 3067, 5240, 4309, 11, 597, 390, 406, 264, 1389, 337, 257, 3832, 472, 12, 1353, 12, 546], "temperature": 0.0, "avg_logprob": -0.24277099908566943, "compression_ratio": 1.3695652173913044, "no_speech_prob": 7.03450568835251e-05}, {"id": 62, "seek": 58680, "start": 586.8, "end": 601.92, "text": " call. So for the Cpliant agent, what we had to change are the following mainly. It's mainly", "tokens": [818, 13, 407, 337, 264, 383, 564, 5798, 9461, 11, 437, 321, 632, 281, 1319, 366, 264, 3480, 8704, 13, 467, 311, 8704], "temperature": 0.0, "avg_logprob": -0.1664891242980957, "compression_ratio": 1.378787878787879, "no_speech_prob": 6.0432339523686096e-05}, {"id": 63, "seek": 58680, "start": 601.92, "end": 610.0, "text": " about multi-stream requirement. In the past, the Cpliant was able to send one audio stream", "tokens": [466, 4825, 12, 9291, 11695, 13, 682, 264, 1791, 11, 264, 383, 564, 5798, 390, 1075, 281, 2845, 472, 6278, 4309], "temperature": 0.0, "avg_logprob": -0.1664891242980957, "compression_ratio": 1.378787878787879, "no_speech_prob": 6.0432339523686096e-05}, {"id": 64, "seek": 61000, "start": 610.0, "end": 621.44, "text": " plus one video stream. Now, it requires the client to be able to send one, but most of the time,", "tokens": [1804, 472, 960, 4309, 13, 823, 11, 309, 7029, 264, 6423, 281, 312, 1075, 281, 2845, 472, 11, 457, 881, 295, 264, 565, 11], "temperature": 0.0, "avg_logprob": -0.1639385512380889, "compression_ratio": 1.6686746987951808, "no_speech_prob": 0.000106120525742881}, {"id": 65, "seek": 61000, "start": 621.44, "end": 629.44, "text": " two video streams, one for high resolution video and another, a second one for thumbnail,", "tokens": [732, 960, 15842, 11, 472, 337, 1090, 8669, 960, 293, 1071, 11, 257, 1150, 472, 337, 26746, 11], "temperature": 0.0, "avg_logprob": -0.1639385512380889, "compression_ratio": 1.6686746987951808, "no_speech_prob": 0.000106120525742881}, {"id": 66, "seek": 62944, "start": 629.44, "end": 639.6, "text": " as well as being able to receive one video stream per participant of the video conference.", "tokens": [382, 731, 382, 885, 1075, 281, 4774, 472, 960, 4309, 680, 24950, 295, 264, 960, 7586, 13], "temperature": 0.0, "avg_logprob": -0.20330927588722922, "compression_ratio": 1.3076923076923077, "no_speech_prob": 2.5703409846755676e-05}, {"id": 67, "seek": 62944, "start": 641.6, "end": 653.12, "text": " Just an example of the SDP to show what is involved. So bundle mode, as I said,", "tokens": [1449, 364, 1365, 295, 264, 318, 11373, 281, 855, 437, 307, 3288, 13, 407, 24438, 4391, 11, 382, 286, 848, 11], "temperature": 0.0, "avg_logprob": -0.20330927588722922, "compression_ratio": 1.3076923076923077, "no_speech_prob": 2.5703409846755676e-05}, {"id": 68, "seek": 65312, "start": 653.12, "end": 662.08, "text": " which is required, RTP MOOCs as well, it's to limit the number of sockets used for the media.", "tokens": [597, 307, 4739, 11, 497, 16804, 49197, 33290, 382, 731, 11, 309, 311, 281, 4948, 264, 1230, 295, 370, 11984, 1143, 337, 264, 3021, 13], "temperature": 0.0, "avg_logprob": -0.1892499542236328, "compression_ratio": 1.5502645502645502, "no_speech_prob": 8.911098120734096e-05}, {"id": 69, "seek": 65312, "start": 663.04, "end": 670.8, "text": " This extension is related to audio level in order to be able to display who is talking and also for", "tokens": [639, 10320, 307, 4077, 281, 6278, 1496, 294, 1668, 281, 312, 1075, 281, 4674, 567, 307, 1417, 293, 611, 337], "temperature": 0.0, "avg_logprob": -0.1892499542236328, "compression_ratio": 1.5502645502645502, "no_speech_prob": 8.911098120734096e-05}, {"id": 70, "seek": 65312, "start": 670.8, "end": 681.52, "text": " the server to be able to select which video stream is talking. It still uses IC to be able to limit", "tokens": [264, 7154, 281, 312, 1075, 281, 3048, 597, 960, 4309, 307, 1417, 13, 467, 920, 4960, 14360, 281, 312, 1075, 281, 4948], "temperature": 0.0, "avg_logprob": -0.1892499542236328, "compression_ratio": 1.5502645502645502, "no_speech_prob": 8.911098120734096e-05}, {"id": 71, "seek": 68152, "start": 681.52, "end": 691.84, "text": " the usage of media release. And from the video part, what you can see is that there are two", "tokens": [264, 14924, 295, 3021, 4374, 13, 400, 490, 264, 960, 644, 11, 437, 291, 393, 536, 307, 300, 456, 366, 732], "temperature": 0.0, "avg_logprob": -0.1321564281688017, "compression_ratio": 1.5359116022099448, "no_speech_prob": 2.239288733107969e-05}, {"id": 72, "seek": 68152, "start": 692.56, "end": 700.88, "text": " video streams in receive only, one for the high resolution of the camera and another for the", "tokens": [960, 15842, 294, 4774, 787, 11, 472, 337, 264, 1090, 8669, 295, 264, 2799, 293, 1071, 337, 264], "temperature": 0.0, "avg_logprob": -0.1321564281688017, "compression_ratio": 1.5359116022099448, "no_speech_prob": 2.239288733107969e-05}, {"id": 73, "seek": 68152, "start": 700.88, "end": 710.48, "text": " thumbnail. So it means that we encode two times the video. It could be replaced by some video", "tokens": [26746, 13, 407, 309, 1355, 300, 321, 2058, 1429, 732, 1413, 264, 960, 13, 467, 727, 312, 10772, 538, 512, 960], "temperature": 0.0, "avg_logprob": -0.1321564281688017, "compression_ratio": 1.5359116022099448, "no_speech_prob": 2.239288733107969e-05}, {"id": 74, "seek": 71048, "start": 710.48, "end": 720.4, "text": " encoder like H264, AVC, which supports a multi-layer functionality. But if you want to be able to do", "tokens": [2058, 19866, 411, 389, 10880, 19, 11, 30198, 34, 11, 597, 9346, 257, 4825, 12, 8376, 260, 14980, 13, 583, 498, 291, 528, 281, 312, 1075, 281, 360], "temperature": 0.0, "avg_logprob": -0.15085779387375403, "compression_ratio": 1.2580645161290323, "no_speech_prob": 7.728877244517207e-05}, {"id": 75, "seek": 71048, "start": 720.4, "end": 732.0, "text": " that with a simple VP8, it's better to encode two times the video. And for the receiving side,", "tokens": [300, 365, 257, 2199, 35812, 23, 11, 309, 311, 1101, 281, 2058, 1429, 732, 1413, 264, 960, 13, 400, 337, 264, 10040, 1252, 11], "temperature": 0.0, "avg_logprob": -0.15085779387375403, "compression_ratio": 1.2580645161290323, "no_speech_prob": 7.728877244517207e-05}, {"id": 76, "seek": 73200, "start": 732.0, "end": 742.16, "text": " there is one video stream because in this example, there is only one participant in the video", "tokens": [456, 307, 472, 960, 4309, 570, 294, 341, 1365, 11, 456, 307, 787, 472, 24950, 294, 264, 960], "temperature": 0.0, "avg_logprob": -0.18906074616967178, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00020968480384908617}, {"id": 77, "seek": 73200, "start": 742.16, "end": 756.0, "text": " conference. But this part would be multiplied by the number of participants of the conference.", "tokens": [7586, 13, 583, 341, 644, 576, 312, 17207, 538, 264, 1230, 295, 10503, 295, 264, 7586, 13], "temperature": 0.0, "avg_logprob": -0.18906074616967178, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00020968480384908617}, {"id": 78, "seek": 75600, "start": 756.0, "end": 768.88, "text": " Okay. So this is for what we have done on the Linfone project for this feature.", "tokens": [1033, 13, 407, 341, 307, 337, 437, 321, 362, 1096, 322, 264, 9355, 69, 546, 1716, 337, 341, 4111, 13], "temperature": 0.0, "avg_logprob": -0.2849860191345215, "compression_ratio": 1.2985074626865671, "no_speech_prob": 0.0002527299802750349}, {"id": 79, "seek": 75600, "start": 769.92, "end": 778.08, "text": " It could be tested with the FlexiSIP server, which is currently running on our infrastructure.", "tokens": [467, 727, 312, 8246, 365, 264, 29208, 72, 50, 9139, 7154, 11, 597, 307, 4362, 2614, 322, 527, 6896, 13], "temperature": 0.0, "avg_logprob": -0.2849860191345215, "compression_ratio": 1.2985074626865671, "no_speech_prob": 0.0002527299802750349}, {"id": 80, "seek": 77808, "start": 778.08, "end": 787.9200000000001, "text": " So you can create a video conference thanks to this conference factory CPURI. And using Linfone", "tokens": [407, 291, 393, 1884, 257, 960, 7586, 3231, 281, 341, 7586, 9265, 383, 8115, 5577, 13, 400, 1228, 9355, 69, 546], "temperature": 0.0, "avg_logprob": -0.19385950493090082, "compression_ratio": 1.490909090909091, "no_speech_prob": 0.00014728553651366383}, {"id": 81, "seek": 77808, "start": 787.9200000000001, "end": 796.1600000000001, "text": " client with version above 5.0, it's possible to join a video conference. Okay. Thank you.", "tokens": [6423, 365, 3037, 3673, 1025, 13, 15, 11, 309, 311, 1944, 281, 3917, 257, 960, 7586, 13, 1033, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.19385950493090082, "compression_ratio": 1.490909090909091, "no_speech_prob": 0.00014728553651366383}, {"id": 82, "seek": 77808, "start": 798.08, "end": 807.6800000000001, "text": " Conclusion. Okay. So now Linfone is capable of joining video", "tokens": [18200, 6485, 13, 1033, 13, 407, 586, 9355, 69, 546, 307, 8189, 295, 5549, 960], "temperature": 0.0, "avg_logprob": -0.19385950493090082, "compression_ratio": 1.490909090909091, "no_speech_prob": 0.00014728553651366383}, {"id": 83, "seek": 80768, "start": 807.68, "end": 815.4399999999999, "text": " conference in two modes, mosaic and active speaker using a selective forwarding unit,", "tokens": [7586, 294, 732, 14068, 11, 275, 42261, 293, 4967, 8145, 1228, 257, 33930, 2128, 278, 4985, 11], "temperature": 0.0, "avg_logprob": -0.15191020494625893, "compression_ratio": 1.6308411214953271, "no_speech_prob": 8.123190491460264e-05}, {"id": 84, "seek": 80768, "start": 815.4399999999999, "end": 822.56, "text": " which allows to scale. Possible evolution that we have in mind is to implement the Xcon", "tokens": [597, 4045, 281, 4373, 13, 430, 5785, 9303, 300, 321, 362, 294, 1575, 307, 281, 4445, 264, 1783, 1671], "temperature": 0.0, "avg_logprob": -0.15191020494625893, "compression_ratio": 1.6308411214953271, "no_speech_prob": 8.123190491460264e-05}, {"id": 85, "seek": 80768, "start": 823.5999999999999, "end": 828.4799999999999, "text": " conferencing server in order to be able to manage conference from a website or to have", "tokens": [13765, 13644, 7154, 294, 1668, 281, 312, 1075, 281, 3067, 7586, 490, 257, 3144, 420, 281, 362], "temperature": 0.0, "avg_logprob": -0.15191020494625893, "compression_ratio": 1.6308411214953271, "no_speech_prob": 8.123190491460264e-05}, {"id": 86, "seek": 80768, "start": 828.4799999999999, "end": 833.5999999999999, "text": " something more advanced. We are also thinking about adding end-to-end encryption to this", "tokens": [746, 544, 7339, 13, 492, 366, 611, 1953, 466, 5127, 917, 12, 1353, 12, 521, 29575, 281, 341], "temperature": 0.0, "avg_logprob": -0.15191020494625893, "compression_ratio": 1.6308411214953271, "no_speech_prob": 8.123190491460264e-05}, {"id": 87, "seek": 83360, "start": 833.6, "end": 839.36, "text": " video conferencing server and why not to provide the compatibility with WebRTC,", "tokens": [960, 13765, 13644, 7154, 293, 983, 406, 281, 2893, 264, 34237, 365, 9573, 49, 18238, 11], "temperature": 0.0, "avg_logprob": -0.12134343465169271, "compression_ratio": 1.4666666666666666, "no_speech_prob": 6.546669465024024e-05}, {"id": 88, "seek": 83360, "start": 839.36, "end": 844.88, "text": " knowing that the media protocol that we use are very close than WebRTC.", "tokens": [5276, 300, 264, 3021, 10336, 300, 321, 764, 366, 588, 1998, 813, 9573, 49, 18238, 13], "temperature": 0.0, "avg_logprob": -0.12134343465169271, "compression_ratio": 1.4666666666666666, "no_speech_prob": 6.546669465024024e-05}, {"id": 89, "seek": 83360, "start": 847.44, "end": 851.6, "text": " Useful link. If you want to have more information about this work,", "tokens": [8278, 906, 2113, 13, 759, 291, 528, 281, 362, 544, 1589, 466, 341, 589, 11], "temperature": 0.0, "avg_logprob": -0.12134343465169271, "compression_ratio": 1.4666666666666666, "no_speech_prob": 6.546669465024024e-05}, {"id": 90, "seek": 83360, "start": 851.6, "end": 855.44, "text": " you can go to the Linfone website and to have a look on our GitHub.", "tokens": [291, 393, 352, 281, 264, 9355, 69, 546, 3144, 293, 281, 362, 257, 574, 322, 527, 23331, 13], "temperature": 0.0, "avg_logprob": -0.12134343465169271, "compression_ratio": 1.4666666666666666, "no_speech_prob": 6.546669465024024e-05}, {"id": 91, "seek": 85544, "start": 855.44, "end": 862.8000000000001, "text": " Okay. That's it. If you have a question. Thank you.", "tokens": [1033, 13, 663, 311, 309, 13, 759, 291, 362, 257, 1168, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.43829073905944826, "compression_ratio": 1.1610169491525424, "no_speech_prob": 0.0022073150612413883}, {"id": 92, "seek": 85544, "start": 872.8000000000001, "end": 879.0400000000001, "text": " Are you aware of any other CIP client that implements multi-party video with someone?", "tokens": [2014, 291, 3650, 295, 604, 661, 383, 9139, 6423, 300, 704, 17988, 4825, 12, 23409, 960, 365, 1580, 30], "temperature": 0.0, "avg_logprob": -0.43829073905944826, "compression_ratio": 1.1610169491525424, "no_speech_prob": 0.0022073150612413883}, {"id": 93, "seek": 87904, "start": 879.04, "end": 890.0799999999999, "text": " Not yet because the work to move from a regular CIP phone with only supporting one audio stream", "tokens": [1726, 1939, 570, 264, 589, 281, 1286, 490, 257, 3890, 383, 9139, 2593, 365, 787, 7231, 472, 6278, 4309], "temperature": 0.0, "avg_logprob": -0.16254072189331054, "compression_ratio": 1.4754098360655739, "no_speech_prob": 0.0004550172889139503}, {"id": 94, "seek": 87904, "start": 890.0799999999999, "end": 898.8, "text": " and one video stream to support this multi-stream is very significant and I'm not aware of any", "tokens": [293, 472, 960, 4309, 281, 1406, 341, 4825, 12, 9291, 307, 588, 4776, 293, 286, 478, 406, 3650, 295, 604], "temperature": 0.0, "avg_logprob": -0.16254072189331054, "compression_ratio": 1.4754098360655739, "no_speech_prob": 0.0004550172889139503}, {"id": 95, "seek": 87904, "start": 900.0799999999999, "end": 906.9599999999999, "text": " work in progress so far. So if you want to use it, you have to go with Linfone.", "tokens": [589, 294, 4205, 370, 1400, 13, 407, 498, 291, 528, 281, 764, 309, 11, 291, 362, 281, 352, 365, 9355, 69, 546, 13], "temperature": 0.0, "avg_logprob": -0.16254072189331054, "compression_ratio": 1.4754098360655739, "no_speech_prob": 0.0004550172889139503}, {"id": 96, "seek": 90696, "start": 906.96, "end": 911.2800000000001, "text": " Even if it's fully standardized, if we are following standard.", "tokens": [2754, 498, 309, 311, 4498, 31677, 11, 498, 321, 366, 3480, 3832, 13], "temperature": 0.0, "avg_logprob": -0.2393190677349384, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0004918531631119549}, {"id": 97, "seek": 90696, "start": 913.84, "end": 914.1600000000001, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.2393190677349384, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0004918531631119549}, {"id": 98, "seek": 90696, "start": 923.36, "end": 929.2, "text": " Not yet. Not yet, but we are quite confident that it's going to scale as we have removed", "tokens": [1726, 1939, 13, 1726, 1939, 11, 457, 321, 366, 1596, 6679, 300, 309, 311, 516, 281, 4373, 382, 321, 362, 7261], "temperature": 0.0, "avg_logprob": -0.2393190677349384, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0004918531631119549}, {"id": 99, "seek": 90696, "start": 929.2, "end": 936.48, "text": " all the needs for audio or video encoding server signs. So it's really about switching of", "tokens": [439, 264, 2203, 337, 6278, 420, 960, 43430, 7154, 7880, 13, 407, 309, 311, 534, 466, 16493, 295], "temperature": 0.0, "avg_logprob": -0.2393190677349384, "compression_ratio": 1.4911242603550297, "no_speech_prob": 0.0004918531631119549}, {"id": 100, "seek": 93648, "start": 936.48, "end": 941.84, "text": " packets. Maybe the question might be around the network on the client side.", "tokens": [30364, 13, 2704, 264, 1168, 1062, 312, 926, 264, 3209, 322, 264, 6423, 1252, 13], "temperature": 0.0, "avg_logprob": -0.20002631899676745, "compression_ratio": 1.827027027027027, "no_speech_prob": 0.0008291659178212285}, {"id": 101, "seek": 93648, "start": 942.5600000000001, "end": 951.36, "text": " Around network, on the client side, as we are using, we are sending two resolutions", "tokens": [17633, 3209, 11, 322, 264, 6423, 1252, 11, 382, 321, 366, 1228, 11, 321, 366, 7750, 732, 32179], "temperature": 0.0, "avg_logprob": -0.20002631899676745, "compression_ratio": 1.827027027027027, "no_speech_prob": 0.0008291659178212285}, {"id": 102, "seek": 93648, "start": 952.0, "end": 958.08, "text": " from the client, a high resolution and a low resolution. And in the case of active speaker,", "tokens": [490, 264, 6423, 11, 257, 1090, 8669, 293, 257, 2295, 8669, 13, 400, 294, 264, 1389, 295, 4967, 8145, 11], "temperature": 0.0, "avg_logprob": -0.20002631899676745, "compression_ratio": 1.827027027027027, "no_speech_prob": 0.0008291659178212285}, {"id": 103, "seek": 93648, "start": 958.08, "end": 964.48, "text": " we only send back to every client the high resolution of the people which is currently", "tokens": [321, 787, 2845, 646, 281, 633, 6423, 264, 1090, 8669, 295, 264, 561, 597, 307, 4362], "temperature": 0.0, "avg_logprob": -0.20002631899676745, "compression_ratio": 1.827027027027027, "no_speech_prob": 0.0008291659178212285}, {"id": 104, "seek": 96448, "start": 964.48, "end": 972.4, "text": " talking and low resolution of every other participant. So it highly limits the needs of bandwidth.", "tokens": [1417, 293, 2295, 8669, 295, 633, 661, 24950, 13, 407, 309, 5405, 10406, 264, 2203, 295, 23647, 13], "temperature": 0.0, "avg_logprob": -0.23356251349815957, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0002793106541503221}, {"id": 105, "seek": 96448, "start": 974.48, "end": 974.72, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.23356251349815957, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0002793106541503221}, {"id": 106, "seek": 96448, "start": 975.84, "end": 981.44, "text": " On the client side, you now decode more than one stream.", "tokens": [1282, 264, 6423, 1252, 11, 291, 586, 979, 1429, 544, 813, 472, 4309, 13], "temperature": 0.0, "avg_logprob": -0.23356251349815957, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0002793106541503221}, {"id": 107, "seek": 96448, "start": 981.44, "end": 981.84, "text": " Correct.", "tokens": [12753, 13], "temperature": 0.0, "avg_logprob": -0.23356251349815957, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0002793106541503221}, {"id": 108, "seek": 96448, "start": 986.48, "end": 993.52, "text": " It's almost the same answer. We decode one high resolution and many low resolution", "tokens": [467, 311, 1920, 264, 912, 1867, 13, 492, 979, 1429, 472, 1090, 8669, 293, 867, 2295, 8669], "temperature": 0.0, "avg_logprob": -0.23356251349815957, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0002793106541503221}, {"id": 109, "seek": 99352, "start": 993.52, "end": 1001.6, "text": " and the CPU resources is depend on the resolution of the video that you have to decode.", "tokens": [293, 264, 13199, 3593, 307, 5672, 322, 264, 8669, 295, 264, 960, 300, 291, 362, 281, 979, 1429, 13], "temperature": 0.0, "avg_logprob": -0.36632809272179234, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.0001584997371537611}, {"id": 110, "seek": 99352, "start": 1004.3199999999999, "end": 1010.8, "text": " Just one question about the STP that you showed before. So were two receive only streams for", "tokens": [1449, 472, 1168, 466, 264, 4904, 47, 300, 291, 4712, 949, 13, 407, 645, 732, 4774, 787, 15842, 337], "temperature": 0.0, "avg_logprob": -0.36632809272179234, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.0001584997371537611}, {"id": 111, "seek": 99352, "start": 1010.8, "end": 1015.52, "text": " the client? Was that from the client? It was from the server.", "tokens": [264, 6423, 30, 3027, 300, 490, 264, 6423, 30, 467, 390, 490, 264, 7154, 13], "temperature": 0.0, "avg_logprob": -0.36632809272179234, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.0001584997371537611}, {"id": 112, "seek": 99352, "start": 1015.52, "end": 1019.76, "text": " Okay, because that was my question. Because it looked like the client.", "tokens": [1033, 11, 570, 300, 390, 452, 1168, 13, 1436, 309, 2956, 411, 264, 6423, 13], "temperature": 0.0, "avg_logprob": -0.36632809272179234, "compression_ratio": 1.6134020618556701, "no_speech_prob": 0.0001584997371537611}, {"id": 113, "seek": 101976, "start": 1019.76, "end": 1027.76, "text": " The server received two videos from the client, one in high resolution and one in low resolution", "tokens": [440, 7154, 4613, 732, 2145, 490, 264, 6423, 11, 472, 294, 1090, 8669, 293, 472, 294, 2295, 8669], "temperature": 0.0, "avg_logprob": -0.2400759708734206, "compression_ratio": 1.7653061224489797, "no_speech_prob": 0.0005594765534624457}, {"id": 114, "seek": 101976, "start": 1027.76, "end": 1034.8799999999999, "text": " and sent one video to this client. There is only one participant in this comparison.", "tokens": [293, 2279, 472, 960, 281, 341, 6423, 13, 821, 307, 787, 472, 24950, 294, 341, 9660, 13], "temperature": 0.0, "avg_logprob": -0.2400759708734206, "compression_ratio": 1.7653061224489797, "no_speech_prob": 0.0005594765534624457}, {"id": 115, "seek": 101976, "start": 1034.8799999999999, "end": 1039.68, "text": " From the client perspective, when you switch from big resolution to low resolution,", "tokens": [3358, 264, 6423, 4585, 11, 562, 291, 3679, 490, 955, 8669, 281, 2295, 8669, 11], "temperature": 0.0, "avg_logprob": -0.2400759708734206, "compression_ratio": 1.7653061224489797, "no_speech_prob": 0.0005594765534624457}, {"id": 116, "seek": 101976, "start": 1039.68, "end": 1045.04, "text": " you still use the same M line that you have to send to the client.", "tokens": [291, 920, 764, 264, 912, 376, 1622, 300, 291, 362, 281, 2845, 281, 264, 6423, 13], "temperature": 0.0, "avg_logprob": -0.2400759708734206, "compression_ratio": 1.7653061224489797, "no_speech_prob": 0.0005594765534624457}, {"id": 117, "seek": 104504, "start": 1045.04, "end": 1050.08, "text": " It's, yes, exactly.", "tokens": [467, 311, 11, 2086, 11, 2293, 13], "temperature": 0.0, "avg_logprob": -0.5670514859651264, "compression_ratio": 0.8846153846153846, "no_speech_prob": 0.0007829989190213382}, {"id": 118, "seek": 105008, "start": 1050.08, "end": 1074.1599999999999, "text": " Okay, thank you very much.", "tokens": [50364, 1033, 11, 1309, 291, 588, 709, 13, 51568], "temperature": 0.0, "avg_logprob": -0.5350214004516601, "compression_ratio": 0.7647058823529411, "no_speech_prob": 0.0021840056870132685}], "language": "en"}