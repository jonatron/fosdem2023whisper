{"text": " So, guys, there are some more seats. Please have a seat. And whenever you want, we can start. Okay. All right. So, let's start. Welcome, everyone. My name is Fernando. I'm a senior software engineer at Red Hat. I work on the networking services team, mainly focused on network management. So, today I'm going to talk how we can do networking management more simple and how we can make the life of CIS admins a little bit better. I know that network management can be complex, especially because most of the CIS admins need to sometimes configure networking and maybe they are not network experts. So, all right. The first thing is what is Network Manager. So, Network Manager is the standard Linux network configuration tool suite. Basically, it's almost on every distribution and it configures networking. It's just like that. It takes care of setting the IP address, all the properties, manage routes, manage DNS, manage almost everything. Make sure that when other to modify the network configuration, it will notify Network Manager, it will update the status, et cetera, et cetera. Network Manager provides Divas API and also they have their own library to communicate with the demo, which is LibNM. And this is why there are some tools built around Network Manager. For example, I know that some of you know them, NM-appler, NM-3, NM-CLI, or NM-Cloud setup. And there are more and we are building more of them. So, as I said, the Network Manager demo is the backend that we are going to use for the new tool, NM-State. And NM-State is a little bit special because it's declarative. So, the idea here is that as an user, you just need to define what do you want to configure. And you don't need to care about the whole. So you need to, you can define the state, you can define what IP address do you want, you can define what properties, if it's a bond, the bond properties, if it's a bridge, whatever you want. And NM-State will take care of it and will resolve all the interdependencies between the interfaces. We configure the routes, we configure everything that is needed to make it work. And we have, we use Network Manager as a backend, we communicate with Network Manager for applying the configuration, but we perform some operations that we are going to talk later, and we needed NISPOR to communicate with Kana. So, we had a problem, we, initially we were using CFS, and it was not working well, and we decided to create NISPOR, which is another library written in Rust that allowed you to communicate with Kana and get real time network configuration from Kana. So, well, the first question could be, why Nellink and why not CFS? So, CFS is not an API. You need to understand that, because I know that a lot of people build their tools parsing CFS, writing on CFS, using CFS everywhere, and this could be problematic, because CFS is not an API, and if you read the documentation, it's not a stable, it can break between releases. But Nellink is an API. Nellink is stable, it's not deprecated, because CFS is deprecated, so most of the new CFS options, sorry, most of the new network options that they are adding into Kana, they are not providing a CFS interface. And also, Nellink use sockets, and that's great, because you don't need to open a file, read it, parse it, and then get the proper value. Using sockets, you can get the attribute, you know the type, you communicate through the Nellink sockets, you get the value, and you get proper errors, so everything is better. Okay, so then let's go to the important part. So NMS state handles everything. You don't need to do anything, you just need to define what do you want, and ideally, you will apply that state, and everything will be configured after some operations. Sometimes it's not like that, so we have a lot of steps in the middle. We do, for example, validation, we do normalization, unverification, we are going to explain them later. And also, it will point you what is going wrong, so you can fix it. So for example, if you are configuring a MAC address, and this MAC address is not being configured correctly, it will point you which MAC address is configured on Kana, and what is the one that you wanted to configure, and right, you need to solve that. Also, if you put in valid IP address, it will tell you this IP address is not valid, please change it. Okay, for example, if you configure one, great thing is that if you configure an MTU that is bigger than the one supported by the driver, it will let you know about that. Okay, so one thing is that if you misconfigure something, good, we can do a rollback. Let's talk a little bit about rollbacks. So this is already supported in Neville Manager, this is not new from NMS state, but it's a little bit complex to use, and in NMS state, we simplify it. So basically, all the time that you do an operation, and NMS state do the verification, and if something goes wrong, it's rollback to the previous state. But we can also, maybe nothing goes wrong, but you lost connectivity, because you remove the IP address, and we cannot know if that is what you wanted or not, I mean, we as NMS state. So we allow you to define an option which is no commit. So you can say this simple command, NMS state CTL apply, the jammer file, we're going to see the format of the jammer file later, then no commit, and a timeout time. If you don't specify a timeout, it's going to be 60 seconds by default. So what happened if it went well? It's what you wanted, you have connectivity, everything's good. Okay, then NMS state CTL commit, and the configuration will be there permanently. But what happened if you notice that you mess up? All right, NMS state CTL rollback, and you're going to be on the previous state. This is really great, because it's really tiring when you misconfigure something, and then you need to undo it manually. So this time, you just do a rollback, and everything will be like before. And what happened when you are working remotely on a server, and you lose connectivity, and you end free travel to the data center. Right now, with this tool, you can, with a timeout, if you lose connectivity, you are not going to be able to do the commit. So at some point, it will rollback, and you will have your connectivity back, hopefully. All right, and well, verification is optional, but personally, I like it a lot, because what it does is NMS state gets the desired state from the user, then apply it, and then get the current state that is applied to the system, and compare them. And if they are not equal, then it's going to fail, and it's going to rollback to the previous state automatically. This is great, because sometimes you don't know about some options, and there are some requirements to set up these options on interface. So what you can do is apply this if it goes wrong, because kernel is not applying the option correctly, because they are incompatible, for example. So it does a rollback automatically, and you don't end up with a wrong configure interface. But you can skip this using dash dash no verify. Okay, so let's see some examples of YAML files. These are a little bit simple, but I think they are great examples. Here, for example, we have a bone interface, and you can just define the state, IPv4, the link aggregation options, you can define the mode, the options of that mode, and then define the board. And one thing that is really, really useful is that we have partial editing. So imagine that you want to change only the MAC address, but you don't want to change the IP address. You don't need to define the IP address, because you just define the interface and the type. So this is just enough. Then the MAC address, I'm going to apply the state. An NMS state, we get the current status of the interface, and we'll merge. So you won't lose any property. Alright, so then we have, for example, another example in the middle is the Abelian interface or the ATH1 interface. And another great thing here, as I say, is that NMS states resolve interdependencies automatically. So basically, you don't need to know if, in which state needs to be the ATH1 when creating the biland, it needs to be up or down. It doesn't matter. We are going to handle it. So you don't need to worry about it. And then, for example, we have a Linux bridge with the board and some options on the board. And also, one great thing here is that you don't need to care about the state of the board. NMS state will resolve the dependencies and will bring the board up if needed, or we configure as needed. Some more examples, because as I say, NMS state is not only focused on interfaces. It's also focused on DNS, root configuration, and also some other interfaces like OBS and OBS DPDK. So, okay, for example, here we have our interface with the ATH1 configure with static IP address, and then we have the AdRoot. So you can define the root and it will be applied to Kana. The same for routing policy. It's also supported. You can define from IP2 and IP4. It will be for one mask. It will be applied. The same thing for DNS. It's over. And as you can see there, the last example, it's an OBS interface with an OBS bridge. So you can define it. And then the great thing is that you don't need always to define the OBS interface. You can define only the OBS bridge and add ports or delete ports from it. So it's quite great. All right. So having seen these examples, I would like to do a demo. Sorry if it doesn't work. I hope it will. I have an environment. So let's try it out. All right. So is it big enough? I can make it bigger. Yeah? Okay. Right. So, okay, I'm using the main branch version, which is 2.2.6. And here we have, this is really great. We have an examples base. So you can, if you are learning how to use NMS stay, this is quite good. You can go here and see different examples of how you should do it. So one that is really simple is for example, this one. Right. So this one, one similar to what I showed before. So this is an ATH one. And then you have the config, a root config for the ATH one. So let's check before the state that we have already. Okay. This is the IP address that we have. And here we have ATH one. ATH one is a, it's a base, but it's defined as an Ethernet. So according to us, it will behave as an Ethernet. So let's apply the state. It's set ATH min and add root. That's it. It's done. If we go to IPA and we go to ATH one, we can see the IP address configure here. All right. Then if we do IPR, we are going to see the root here. One for the IP address and the other one, the root that we set. And also, if you are wanting to check what happened in the one manner here, you can do this. Oops. Okay. Sorry. All right. You can, you can do this. You will notice that the device is up and we could check the connection that we generated. But let's go to, sorry. Let's check a more complex sample. But we need first to clean up the state. So I'm going to show you how we clean up the states. We have ATH one, the old roots. All right. So here, for example, we just need to define the ATH one and then define the roots with the net hop interface and a state absent. And this will clear all the roots that are defined for that interface, which is great because when removing something, you don't need to define everything. You just need to define the properties that you want to match and then a state absent and it will clear them. All right. So it's applied. Let's check it. Okay. And then we can, oh, exactly. Right. Because we didn't bring down the ATH one interface. That's fine. But we drop the root. So let's create a more complex one, one that I especially like. It's this one. This is going to be the last one. So here we are going to define this. We have two ethernet interfaces that are connected to a point interface, which has also another port, which is going to be the other bridge and a villain over another bridge. So, all right. This is the state. We define the villain interfaces with the ID, the linux bridge, which the port is the villain, and then another linux bridge up and the port is going to be the bond. And then for the bond, we have the two ethernet interfaces, ATH one and ATH two, and we have ATH one and ATH two defined. So let's apply it. All right. This will do a little bit more. That's fine. Right. So in network manager, everything seems set. Then we can do IPA, plenty of things. Let me, this is the villain. Then we have here the bond with the others configure. No, sorry. We have the bond here and the bridge 29. And we can also move them as we did with the other example. And let me show you how it looks. Right. So this is quite simple. You just need to define ATH one, ATH two as down because ATH one is an ethernet. Well, it's emulating ethernet, but it's a physical device. So you cannot remove it completely. And then you have the bond, which can be dropped, the bridge, the villain, and the other bridge. So that's it. If you apply it, it will be gone. Check. All right. So it should be done. As you can see, they are not any more, you cannot see any more the link, not the routes and not the connections because we didn't, we removed also the network manager connection files. So I think that's it. It was a little bit, a little demo about how it works. I really encourage you to try it out. It's really simple. If you are really using network manager, you basically do not need to do anything else because installing NMS state will be enough. NMS state is packaged basically on Fedora, CentOS, Unreal. And well, it's, if you use the Rust library, you can also use the create to use it whenever you want. All right. So double bill. And now some questions. Thank you. You basically use network manager to do all the settings and everything, but do you also use net link? Why is it, why is it necessary? Don't you get all the information from network manager? No, because Nebo manager is not getting real time information from kernel all the time. It's not updating it directly. If you look to the devices, the devices doesn't have all the properties. And in NISPO we care about all the properties that are defined on kernel. So this is the main reason. Are there settings that you need to do the net link as well? No, no. We don't do the settings through net link. We just get them to compare. We found out the problem that as, our manager is a service and is listening on events of net link, sometimes takes sometimes to update their device cache. And that's a problem because when you do an operation, you want the result immediately. Isn't that the bug in the network manager? Well, it isn't. And in the end you have a very good cache and it's hard to keep everything updated. So they perform a lot of operations. Obviously it could be improved. But right now this is the solution that we thought about. Also, NISPO can apply settings to kernel, but we don't use it on NMSD. This is like an extra feature that we work on it from time to time. Hello. I would like to ask if dummy interfaces are supported and if not, are they planned to be supported? Dummy interfaces, yes. Dummy interfaces are supported. And that is, you can check recommendation. I think everything is supported for dummy. Thank you. Any more questions? All right. I think we're good. Yep, we're good. Thank you very much. Thank you very much for attending. Thank you. Thank you very much. Thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 14.120000000000001, "text": " So, guys, there are some more seats. Please have a seat. And whenever you want, we can", "tokens": [407, 11, 1074, 11, 456, 366, 512, 544, 11069, 13, 2555, 362, 257, 6121, 13, 400, 5699, 291, 528, 11, 321, 393], "temperature": 0.0, "avg_logprob": -0.31106254577636716, "compression_ratio": 1.38860103626943, "no_speech_prob": 0.1349135935306549}, {"id": 1, "seek": 0, "start": 14.120000000000001, "end": 15.120000000000001, "text": " start.", "tokens": [722, 13], "temperature": 0.0, "avg_logprob": -0.31106254577636716, "compression_ratio": 1.38860103626943, "no_speech_prob": 0.1349135935306549}, {"id": 2, "seek": 0, "start": 15.120000000000001, "end": 23.64, "text": " Okay. All right. So, let's start. Welcome, everyone. My name is Fernando. I'm a senior", "tokens": [1033, 13, 1057, 558, 13, 407, 11, 718, 311, 722, 13, 4027, 11, 1518, 13, 1222, 1315, 307, 30190, 13, 286, 478, 257, 7965], "temperature": 0.0, "avg_logprob": -0.31106254577636716, "compression_ratio": 1.38860103626943, "no_speech_prob": 0.1349135935306549}, {"id": 3, "seek": 0, "start": 23.64, "end": 28.88, "text": " software engineer at Red Hat. I work on the networking services team, mainly focused on", "tokens": [4722, 11403, 412, 4477, 15867, 13, 286, 589, 322, 264, 17985, 3328, 1469, 11, 8704, 5178, 322], "temperature": 0.0, "avg_logprob": -0.31106254577636716, "compression_ratio": 1.38860103626943, "no_speech_prob": 0.1349135935306549}, {"id": 4, "seek": 2888, "start": 28.88, "end": 35.56, "text": " network management. So, today I'm going to talk how we can do networking management more", "tokens": [3209, 4592, 13, 407, 11, 965, 286, 478, 516, 281, 751, 577, 321, 393, 360, 17985, 4592, 544], "temperature": 0.0, "avg_logprob": -0.15389143336902966, "compression_ratio": 1.5953757225433527, "no_speech_prob": 0.0008216527639888227}, {"id": 5, "seek": 2888, "start": 35.56, "end": 46.68, "text": " simple and how we can make the life of CIS admins a little bit better. I know that network", "tokens": [2199, 293, 577, 321, 393, 652, 264, 993, 295, 383, 2343, 5910, 1292, 257, 707, 857, 1101, 13, 286, 458, 300, 3209], "temperature": 0.0, "avg_logprob": -0.15389143336902966, "compression_ratio": 1.5953757225433527, "no_speech_prob": 0.0008216527639888227}, {"id": 6, "seek": 2888, "start": 46.68, "end": 53.239999999999995, "text": " management can be complex, especially because most of the CIS admins need to sometimes configure", "tokens": [4592, 393, 312, 3997, 11, 2318, 570, 881, 295, 264, 383, 2343, 5910, 1292, 643, 281, 2171, 22162], "temperature": 0.0, "avg_logprob": -0.15389143336902966, "compression_ratio": 1.5953757225433527, "no_speech_prob": 0.0008216527639888227}, {"id": 7, "seek": 5324, "start": 53.24, "end": 59.56, "text": " networking and maybe they are not network experts. So, all right. The first thing is", "tokens": [17985, 293, 1310, 436, 366, 406, 3209, 8572, 13, 407, 11, 439, 558, 13, 440, 700, 551, 307], "temperature": 0.0, "avg_logprob": -0.1701510190963745, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.00034123557270504534}, {"id": 8, "seek": 5324, "start": 59.56, "end": 65.44, "text": " what is Network Manager. So, Network Manager is the standard Linux network configuration", "tokens": [437, 307, 12640, 13821, 13, 407, 11, 12640, 13821, 307, 264, 3832, 18734, 3209, 11694], "temperature": 0.0, "avg_logprob": -0.1701510190963745, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.00034123557270504534}, {"id": 9, "seek": 5324, "start": 65.44, "end": 72.2, "text": " tool suite. Basically, it's almost on every distribution and it configures networking.", "tokens": [2290, 14205, 13, 8537, 11, 309, 311, 1920, 322, 633, 7316, 293, 309, 6662, 1303, 17985, 13], "temperature": 0.0, "avg_logprob": -0.1701510190963745, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.00034123557270504534}, {"id": 10, "seek": 5324, "start": 72.2, "end": 79.08, "text": " It's just like that. It takes care of setting the IP address, all the properties, manage", "tokens": [467, 311, 445, 411, 300, 13, 467, 2516, 1127, 295, 3287, 264, 8671, 2985, 11, 439, 264, 7221, 11, 3067], "temperature": 0.0, "avg_logprob": -0.1701510190963745, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.00034123557270504534}, {"id": 11, "seek": 7908, "start": 79.08, "end": 86.32, "text": " routes, manage DNS, manage almost everything. Make sure that when other to modify the network", "tokens": [18242, 11, 3067, 35153, 11, 3067, 1920, 1203, 13, 4387, 988, 300, 562, 661, 281, 16927, 264, 3209], "temperature": 0.0, "avg_logprob": -0.2686807025562633, "compression_ratio": 1.619047619047619, "no_speech_prob": 5.449812670121901e-05}, {"id": 12, "seek": 7908, "start": 86.32, "end": 91.64, "text": " configuration, it will notify Network Manager, it will update the status, et cetera, et", "tokens": [11694, 11, 309, 486, 36560, 12640, 13821, 11, 309, 486, 5623, 264, 6558, 11, 1030, 11458, 11, 1030], "temperature": 0.0, "avg_logprob": -0.2686807025562633, "compression_ratio": 1.619047619047619, "no_speech_prob": 5.449812670121901e-05}, {"id": 13, "seek": 7908, "start": 91.64, "end": 92.64, "text": " cetera.", "tokens": [11458, 13], "temperature": 0.0, "avg_logprob": -0.2686807025562633, "compression_ratio": 1.619047619047619, "no_speech_prob": 5.449812670121901e-05}, {"id": 14, "seek": 7908, "start": 92.64, "end": 98.6, "text": " Network Manager provides Divas API and also they have their own library to communicate with", "tokens": [12640, 13821, 6417, 9886, 296, 9362, 293, 611, 436, 362, 641, 1065, 6405, 281, 7890, 365], "temperature": 0.0, "avg_logprob": -0.2686807025562633, "compression_ratio": 1.619047619047619, "no_speech_prob": 5.449812670121901e-05}, {"id": 15, "seek": 7908, "start": 98.6, "end": 104.44, "text": " the demo, which is LibNM. And this is why there are some tools built around Network Manager.", "tokens": [264, 10723, 11, 597, 307, 15834, 45, 44, 13, 400, 341, 307, 983, 456, 366, 512, 3873, 3094, 926, 12640, 13821, 13], "temperature": 0.0, "avg_logprob": -0.2686807025562633, "compression_ratio": 1.619047619047619, "no_speech_prob": 5.449812670121901e-05}, {"id": 16, "seek": 10444, "start": 104.44, "end": 110.2, "text": " For example, I know that some of you know them, NM-appler, NM-3, NM-CLI, or NM-Cloud", "tokens": [1171, 1365, 11, 286, 458, 300, 512, 295, 291, 458, 552, 11, 426, 44, 12, 1746, 1918, 11, 426, 44, 12, 18, 11, 426, 44, 12, 22458, 40, 11, 420, 426, 44, 12, 32787], "temperature": 0.0, "avg_logprob": -0.22359898559048644, "compression_ratio": 1.5726872246696035, "no_speech_prob": 0.00010727815970312804}, {"id": 17, "seek": 10444, "start": 110.2, "end": 116.28, "text": " setup. And there are more and we are building more of them. So, as I said, the Network Manager", "tokens": [8657, 13, 400, 456, 366, 544, 293, 321, 366, 2390, 544, 295, 552, 13, 407, 11, 382, 286, 848, 11, 264, 12640, 13821], "temperature": 0.0, "avg_logprob": -0.22359898559048644, "compression_ratio": 1.5726872246696035, "no_speech_prob": 0.00010727815970312804}, {"id": 18, "seek": 10444, "start": 116.28, "end": 124.72, "text": " demo is the backend that we are going to use for the new tool, NM-State. And NM-State is", "tokens": [10723, 307, 264, 38087, 300, 321, 366, 516, 281, 764, 337, 264, 777, 2290, 11, 426, 44, 12, 4520, 473, 13, 400, 426, 44, 12, 4520, 473, 307], "temperature": 0.0, "avg_logprob": -0.22359898559048644, "compression_ratio": 1.5726872246696035, "no_speech_prob": 0.00010727815970312804}, {"id": 19, "seek": 10444, "start": 124.72, "end": 129.64, "text": " a little bit special because it's declarative. So, the idea here is that as an user, you", "tokens": [257, 707, 857, 2121, 570, 309, 311, 16694, 1166, 13, 407, 11, 264, 1558, 510, 307, 300, 382, 364, 4195, 11, 291], "temperature": 0.0, "avg_logprob": -0.22359898559048644, "compression_ratio": 1.5726872246696035, "no_speech_prob": 0.00010727815970312804}, {"id": 20, "seek": 12964, "start": 129.64, "end": 134.73999999999998, "text": " just need to define what do you want to configure. And you don't need to care about the whole.", "tokens": [445, 643, 281, 6964, 437, 360, 291, 528, 281, 22162, 13, 400, 291, 500, 380, 643, 281, 1127, 466, 264, 1379, 13], "temperature": 0.0, "avg_logprob": -0.16097858034331222, "compression_ratio": 1.956896551724138, "no_speech_prob": 7.922168879304081e-05}, {"id": 21, "seek": 12964, "start": 134.73999999999998, "end": 139.83999999999997, "text": " So you need to, you can define the state, you can define what IP address do you want,", "tokens": [407, 291, 643, 281, 11, 291, 393, 6964, 264, 1785, 11, 291, 393, 6964, 437, 8671, 2985, 360, 291, 528, 11], "temperature": 0.0, "avg_logprob": -0.16097858034331222, "compression_ratio": 1.956896551724138, "no_speech_prob": 7.922168879304081e-05}, {"id": 22, "seek": 12964, "start": 139.83999999999997, "end": 146.27999999999997, "text": " you can define what properties, if it's a bond, the bond properties, if it's a bridge,", "tokens": [291, 393, 6964, 437, 7221, 11, 498, 309, 311, 257, 6086, 11, 264, 6086, 7221, 11, 498, 309, 311, 257, 7283, 11], "temperature": 0.0, "avg_logprob": -0.16097858034331222, "compression_ratio": 1.956896551724138, "no_speech_prob": 7.922168879304081e-05}, {"id": 23, "seek": 12964, "start": 146.27999999999997, "end": 152.23999999999998, "text": " whatever you want. And NM-State will take care of it and will resolve all the interdependencies", "tokens": [2035, 291, 528, 13, 400, 426, 44, 12, 4520, 473, 486, 747, 1127, 295, 309, 293, 486, 14151, 439, 264, 728, 36763, 6464], "temperature": 0.0, "avg_logprob": -0.16097858034331222, "compression_ratio": 1.956896551724138, "no_speech_prob": 7.922168879304081e-05}, {"id": 24, "seek": 12964, "start": 152.23999999999998, "end": 157.0, "text": " between the interfaces. We configure the routes, we configure everything that is needed to", "tokens": [1296, 264, 28416, 13, 492, 22162, 264, 18242, 11, 321, 22162, 1203, 300, 307, 2978, 281], "temperature": 0.0, "avg_logprob": -0.16097858034331222, "compression_ratio": 1.956896551724138, "no_speech_prob": 7.922168879304081e-05}, {"id": 25, "seek": 15700, "start": 157.0, "end": 163.96, "text": " make it work. And we have, we use Network Manager as a backend, we communicate with Network Manager", "tokens": [652, 309, 589, 13, 400, 321, 362, 11, 321, 764, 12640, 13821, 382, 257, 38087, 11, 321, 7890, 365, 12640, 13821], "temperature": 0.0, "avg_logprob": -0.2604004237962806, "compression_ratio": 1.7704280155642023, "no_speech_prob": 7.509798888349906e-05}, {"id": 26, "seek": 15700, "start": 163.96, "end": 169.16, "text": " for applying the configuration, but we perform some operations that we are going to talk", "tokens": [337, 9275, 264, 11694, 11, 457, 321, 2042, 512, 7705, 300, 321, 366, 516, 281, 751], "temperature": 0.0, "avg_logprob": -0.2604004237962806, "compression_ratio": 1.7704280155642023, "no_speech_prob": 7.509798888349906e-05}, {"id": 27, "seek": 15700, "start": 169.16, "end": 176.24, "text": " later, and we needed NISPOR to communicate with Kana. So, we had a problem, we, initially", "tokens": [1780, 11, 293, 321, 2978, 426, 2343, 47, 2483, 281, 7890, 365, 591, 2095, 13, 407, 11, 321, 632, 257, 1154, 11, 321, 11, 9105], "temperature": 0.0, "avg_logprob": -0.2604004237962806, "compression_ratio": 1.7704280155642023, "no_speech_prob": 7.509798888349906e-05}, {"id": 28, "seek": 15700, "start": 176.24, "end": 181.28, "text": " we were using CFS, and it was not working well, and we decided to create NISPOR, which", "tokens": [321, 645, 1228, 383, 29318, 11, 293, 309, 390, 406, 1364, 731, 11, 293, 321, 3047, 281, 1884, 426, 2343, 47, 2483, 11, 597], "temperature": 0.0, "avg_logprob": -0.2604004237962806, "compression_ratio": 1.7704280155642023, "no_speech_prob": 7.509798888349906e-05}, {"id": 29, "seek": 15700, "start": 181.28, "end": 186.4, "text": " is another library written in Rust that allowed you to communicate with Kana and get real", "tokens": [307, 1071, 6405, 3720, 294, 34952, 300, 4350, 291, 281, 7890, 365, 591, 2095, 293, 483, 957], "temperature": 0.0, "avg_logprob": -0.2604004237962806, "compression_ratio": 1.7704280155642023, "no_speech_prob": 7.509798888349906e-05}, {"id": 30, "seek": 18640, "start": 186.4, "end": 192.20000000000002, "text": " time network configuration from Kana. So, well, the first question could be, why Nellink", "tokens": [565, 3209, 11694, 490, 591, 2095, 13, 407, 11, 731, 11, 264, 700, 1168, 727, 312, 11, 983, 426, 898, 475], "temperature": 0.0, "avg_logprob": -0.18853644168738162, "compression_ratio": 1.5777777777777777, "no_speech_prob": 6.141520862001926e-05}, {"id": 31, "seek": 18640, "start": 192.20000000000002, "end": 198.64000000000001, "text": " and why not CFS? So, CFS is not an API. You need to understand that, because I know that", "tokens": [293, 983, 406, 383, 29318, 30, 407, 11, 383, 29318, 307, 406, 364, 9362, 13, 509, 643, 281, 1223, 300, 11, 570, 286, 458, 300], "temperature": 0.0, "avg_logprob": -0.18853644168738162, "compression_ratio": 1.5777777777777777, "no_speech_prob": 6.141520862001926e-05}, {"id": 32, "seek": 18640, "start": 198.64000000000001, "end": 206.0, "text": " a lot of people build their tools parsing CFS, writing on CFS, using CFS everywhere,", "tokens": [257, 688, 295, 561, 1322, 641, 3873, 21156, 278, 383, 29318, 11, 3579, 322, 383, 29318, 11, 1228, 383, 29318, 5315, 11], "temperature": 0.0, "avg_logprob": -0.18853644168738162, "compression_ratio": 1.5777777777777777, "no_speech_prob": 6.141520862001926e-05}, {"id": 33, "seek": 18640, "start": 206.0, "end": 211.6, "text": " and this could be problematic, because CFS is not an API, and if you read the documentation,", "tokens": [293, 341, 727, 312, 19011, 11, 570, 383, 29318, 307, 406, 364, 9362, 11, 293, 498, 291, 1401, 264, 14333, 11], "temperature": 0.0, "avg_logprob": -0.18853644168738162, "compression_ratio": 1.5777777777777777, "no_speech_prob": 6.141520862001926e-05}, {"id": 34, "seek": 21160, "start": 211.6, "end": 220.76, "text": " it's not a stable, it can break between releases. But Nellink is an API. Nellink is stable, it's", "tokens": [309, 311, 406, 257, 8351, 11, 309, 393, 1821, 1296, 16952, 13, 583, 426, 898, 475, 307, 364, 9362, 13, 426, 898, 475, 307, 8351, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.17700065266002307, "compression_ratio": 1.712962962962963, "no_speech_prob": 9.625781240174547e-05}, {"id": 35, "seek": 21160, "start": 220.76, "end": 227.12, "text": " not deprecated, because CFS is deprecated, so most of the new CFS options, sorry, most", "tokens": [406, 1367, 13867, 770, 11, 570, 383, 29318, 307, 1367, 13867, 770, 11, 370, 881, 295, 264, 777, 383, 29318, 3956, 11, 2597, 11, 881], "temperature": 0.0, "avg_logprob": -0.17700065266002307, "compression_ratio": 1.712962962962963, "no_speech_prob": 9.625781240174547e-05}, {"id": 36, "seek": 21160, "start": 227.12, "end": 233.6, "text": " of the new network options that they are adding into Kana, they are not providing a CFS interface.", "tokens": [295, 264, 777, 3209, 3956, 300, 436, 366, 5127, 666, 591, 2095, 11, 436, 366, 406, 6530, 257, 383, 29318, 9226, 13], "temperature": 0.0, "avg_logprob": -0.17700065266002307, "compression_ratio": 1.712962962962963, "no_speech_prob": 9.625781240174547e-05}, {"id": 37, "seek": 21160, "start": 233.6, "end": 238.64, "text": " And also, Nellink use sockets, and that's great, because you don't need to open a file,", "tokens": [400, 611, 11, 426, 898, 475, 764, 370, 11984, 11, 293, 300, 311, 869, 11, 570, 291, 500, 380, 643, 281, 1269, 257, 3991, 11], "temperature": 0.0, "avg_logprob": -0.17700065266002307, "compression_ratio": 1.712962962962963, "no_speech_prob": 9.625781240174547e-05}, {"id": 38, "seek": 23864, "start": 238.64, "end": 244.32, "text": " read it, parse it, and then get the proper value. Using sockets, you can get the attribute,", "tokens": [1401, 309, 11, 48377, 309, 11, 293, 550, 483, 264, 2296, 2158, 13, 11142, 370, 11984, 11, 291, 393, 483, 264, 19667, 11], "temperature": 0.0, "avg_logprob": -0.1678065927619608, "compression_ratio": 1.8152610441767068, "no_speech_prob": 8.12437356216833e-05}, {"id": 39, "seek": 23864, "start": 244.32, "end": 249.23999999999998, "text": " you know the type, you communicate through the Nellink sockets, you get the value, and", "tokens": [291, 458, 264, 2010, 11, 291, 7890, 807, 264, 426, 898, 475, 370, 11984, 11, 291, 483, 264, 2158, 11, 293], "temperature": 0.0, "avg_logprob": -0.1678065927619608, "compression_ratio": 1.8152610441767068, "no_speech_prob": 8.12437356216833e-05}, {"id": 40, "seek": 23864, "start": 249.23999999999998, "end": 258.4, "text": " you get proper errors, so everything is better. Okay, so then let's go to the important part.", "tokens": [291, 483, 2296, 13603, 11, 370, 1203, 307, 1101, 13, 1033, 11, 370, 550, 718, 311, 352, 281, 264, 1021, 644, 13], "temperature": 0.0, "avg_logprob": -0.1678065927619608, "compression_ratio": 1.8152610441767068, "no_speech_prob": 8.12437356216833e-05}, {"id": 41, "seek": 23864, "start": 258.4, "end": 262.52, "text": " So NMS state handles everything. You don't need to do anything, you just need to define", "tokens": [407, 426, 10288, 1785, 18722, 1203, 13, 509, 500, 380, 643, 281, 360, 1340, 11, 291, 445, 643, 281, 6964], "temperature": 0.0, "avg_logprob": -0.1678065927619608, "compression_ratio": 1.8152610441767068, "no_speech_prob": 8.12437356216833e-05}, {"id": 42, "seek": 23864, "start": 262.52, "end": 267.59999999999997, "text": " what do you want, and ideally, you will apply that state, and everything will be configured", "tokens": [437, 360, 291, 528, 11, 293, 22915, 11, 291, 486, 3079, 300, 1785, 11, 293, 1203, 486, 312, 30538], "temperature": 0.0, "avg_logprob": -0.1678065927619608, "compression_ratio": 1.8152610441767068, "no_speech_prob": 8.12437356216833e-05}, {"id": 43, "seek": 26760, "start": 267.6, "end": 272.32000000000005, "text": " after some operations. Sometimes it's not like that, so we have a lot of steps in the", "tokens": [934, 512, 7705, 13, 4803, 309, 311, 406, 411, 300, 11, 370, 321, 362, 257, 688, 295, 4439, 294, 264], "temperature": 0.0, "avg_logprob": -0.1532434446621785, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.00017364966333843768}, {"id": 44, "seek": 26760, "start": 272.32000000000005, "end": 278.64000000000004, "text": " middle. We do, for example, validation, we do normalization, unverification, we are", "tokens": [2808, 13, 492, 360, 11, 337, 1365, 11, 24071, 11, 321, 360, 2710, 2144, 11, 517, 331, 3774, 11, 321, 366], "temperature": 0.0, "avg_logprob": -0.1532434446621785, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.00017364966333843768}, {"id": 45, "seek": 26760, "start": 278.64000000000004, "end": 285.16, "text": " going to explain them later. And also, it will point you what is going wrong, so you", "tokens": [516, 281, 2903, 552, 1780, 13, 400, 611, 11, 309, 486, 935, 291, 437, 307, 516, 2085, 11, 370, 291], "temperature": 0.0, "avg_logprob": -0.1532434446621785, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.00017364966333843768}, {"id": 46, "seek": 26760, "start": 285.16, "end": 288.84000000000003, "text": " can fix it. So for example, if you are configuring a MAC address, and this MAC address is not", "tokens": [393, 3191, 309, 13, 407, 337, 1365, 11, 498, 291, 366, 6662, 1345, 257, 27716, 2985, 11, 293, 341, 27716, 2985, 307, 406], "temperature": 0.0, "avg_logprob": -0.1532434446621785, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.00017364966333843768}, {"id": 47, "seek": 26760, "start": 288.84000000000003, "end": 293.88, "text": " being configured correctly, it will point you which MAC address is configured on Kana,", "tokens": [885, 30538, 8944, 11, 309, 486, 935, 291, 597, 27716, 2985, 307, 30538, 322, 591, 2095, 11], "temperature": 0.0, "avg_logprob": -0.1532434446621785, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.00017364966333843768}, {"id": 48, "seek": 29388, "start": 293.88, "end": 299.24, "text": " and what is the one that you wanted to configure, and right, you need to solve that. Also, if", "tokens": [293, 437, 307, 264, 472, 300, 291, 1415, 281, 22162, 11, 293, 558, 11, 291, 643, 281, 5039, 300, 13, 2743, 11, 498], "temperature": 0.0, "avg_logprob": -0.2016275723775228, "compression_ratio": 1.7089201877934272, "no_speech_prob": 0.00016355492698494345}, {"id": 49, "seek": 29388, "start": 299.24, "end": 305.52, "text": " you put in valid IP address, it will tell you this IP address is not valid, please change", "tokens": [291, 829, 294, 7363, 8671, 2985, 11, 309, 486, 980, 291, 341, 8671, 2985, 307, 406, 7363, 11, 1767, 1319], "temperature": 0.0, "avg_logprob": -0.2016275723775228, "compression_ratio": 1.7089201877934272, "no_speech_prob": 0.00016355492698494345}, {"id": 50, "seek": 29388, "start": 305.52, "end": 311.48, "text": " it. Okay, for example, if you configure one, great thing is that if you configure an MTU", "tokens": [309, 13, 1033, 11, 337, 1365, 11, 498, 291, 22162, 472, 11, 869, 551, 307, 300, 498, 291, 22162, 364, 37333, 52], "temperature": 0.0, "avg_logprob": -0.2016275723775228, "compression_ratio": 1.7089201877934272, "no_speech_prob": 0.00016355492698494345}, {"id": 51, "seek": 29388, "start": 311.48, "end": 319.15999999999997, "text": " that is bigger than the one supported by the driver, it will let you know about that. Okay,", "tokens": [300, 307, 3801, 813, 264, 472, 8104, 538, 264, 6787, 11, 309, 486, 718, 291, 458, 466, 300, 13, 1033, 11], "temperature": 0.0, "avg_logprob": -0.2016275723775228, "compression_ratio": 1.7089201877934272, "no_speech_prob": 0.00016355492698494345}, {"id": 52, "seek": 31916, "start": 319.16, "end": 325.12, "text": " so one thing is that if you misconfigure something, good, we can do a rollback. Let's talk a", "tokens": [370, 472, 551, 307, 300, 498, 291, 27631, 20646, 540, 746, 11, 665, 11, 321, 393, 360, 257, 3373, 3207, 13, 961, 311, 751, 257], "temperature": 0.0, "avg_logprob": -0.21831186806283345, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0001277483388548717}, {"id": 53, "seek": 31916, "start": 325.12, "end": 328.92, "text": " little bit about rollbacks. So this is already supported in Neville Manager, this is not", "tokens": [707, 857, 466, 3373, 17758, 13, 407, 341, 307, 1217, 8104, 294, 1734, 8386, 13821, 11, 341, 307, 406], "temperature": 0.0, "avg_logprob": -0.21831186806283345, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0001277483388548717}, {"id": 54, "seek": 31916, "start": 328.92, "end": 334.52000000000004, "text": " new from NMS state, but it's a little bit complex to use, and in NMS state, we simplify", "tokens": [777, 490, 426, 10288, 1785, 11, 457, 309, 311, 257, 707, 857, 3997, 281, 764, 11, 293, 294, 426, 10288, 1785, 11, 321, 20460], "temperature": 0.0, "avg_logprob": -0.21831186806283345, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0001277483388548717}, {"id": 55, "seek": 31916, "start": 334.52000000000004, "end": 342.84000000000003, "text": " it. So basically, all the time that you do an operation, and NMS state do the verification,", "tokens": [309, 13, 407, 1936, 11, 439, 264, 565, 300, 291, 360, 364, 6916, 11, 293, 426, 10288, 1785, 360, 264, 30206, 11], "temperature": 0.0, "avg_logprob": -0.21831186806283345, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0001277483388548717}, {"id": 56, "seek": 31916, "start": 342.84000000000003, "end": 349.12, "text": " and if something goes wrong, it's rollback to the previous state. But we can also, maybe", "tokens": [293, 498, 746, 1709, 2085, 11, 309, 311, 3373, 3207, 281, 264, 3894, 1785, 13, 583, 321, 393, 611, 11, 1310], "temperature": 0.0, "avg_logprob": -0.21831186806283345, "compression_ratio": 1.7509727626459144, "no_speech_prob": 0.0001277483388548717}, {"id": 57, "seek": 34912, "start": 349.12, "end": 356.84000000000003, "text": " nothing goes wrong, but you lost connectivity, because you remove the IP address, and we", "tokens": [1825, 1709, 2085, 11, 457, 291, 2731, 21095, 11, 570, 291, 4159, 264, 8671, 2985, 11, 293, 321], "temperature": 0.0, "avg_logprob": -0.2043124238650004, "compression_ratio": 1.5739910313901346, "no_speech_prob": 6.0297043091850355e-05}, {"id": 58, "seek": 34912, "start": 356.84000000000003, "end": 362.36, "text": " cannot know if that is what you wanted or not, I mean, we as NMS state. So we allow", "tokens": [2644, 458, 498, 300, 307, 437, 291, 1415, 420, 406, 11, 286, 914, 11, 321, 382, 426, 10288, 1785, 13, 407, 321, 2089], "temperature": 0.0, "avg_logprob": -0.2043124238650004, "compression_ratio": 1.5739910313901346, "no_speech_prob": 6.0297043091850355e-05}, {"id": 59, "seek": 34912, "start": 362.36, "end": 368.16, "text": " you to define an option which is no commit. So you can say this simple command, NMS state", "tokens": [291, 281, 6964, 364, 3614, 597, 307, 572, 5599, 13, 407, 291, 393, 584, 341, 2199, 5622, 11, 426, 10288, 1785], "temperature": 0.0, "avg_logprob": -0.2043124238650004, "compression_ratio": 1.5739910313901346, "no_speech_prob": 6.0297043091850355e-05}, {"id": 60, "seek": 34912, "start": 368.16, "end": 373.64, "text": " CTL apply, the jammer file, we're going to see the format of the jammer file later, then", "tokens": [19529, 43, 3079, 11, 264, 7872, 936, 3991, 11, 321, 434, 516, 281, 536, 264, 7877, 295, 264, 7872, 936, 3991, 1780, 11, 550], "temperature": 0.0, "avg_logprob": -0.2043124238650004, "compression_ratio": 1.5739910313901346, "no_speech_prob": 6.0297043091850355e-05}, {"id": 61, "seek": 37364, "start": 373.64, "end": 379.24, "text": " no commit, and a timeout time. If you don't specify a timeout, it's going to be 60 seconds", "tokens": [572, 5599, 11, 293, 257, 565, 346, 565, 13, 759, 291, 500, 380, 16500, 257, 565, 346, 11, 309, 311, 516, 281, 312, 4060, 3949], "temperature": 0.0, "avg_logprob": -0.1850550470273357, "compression_ratio": 1.635036496350365, "no_speech_prob": 4.449935659067705e-05}, {"id": 62, "seek": 37364, "start": 379.24, "end": 386.36, "text": " by default. So what happened if it went well? It's what you wanted, you have connectivity,", "tokens": [538, 7576, 13, 407, 437, 2011, 498, 309, 1437, 731, 30, 467, 311, 437, 291, 1415, 11, 291, 362, 21095, 11], "temperature": 0.0, "avg_logprob": -0.1850550470273357, "compression_ratio": 1.635036496350365, "no_speech_prob": 4.449935659067705e-05}, {"id": 63, "seek": 37364, "start": 386.36, "end": 392.44, "text": " everything's good. Okay, then NMS state CTL commit, and the configuration will be there", "tokens": [1203, 311, 665, 13, 1033, 11, 550, 426, 10288, 1785, 19529, 43, 5599, 11, 293, 264, 11694, 486, 312, 456], "temperature": 0.0, "avg_logprob": -0.1850550470273357, "compression_ratio": 1.635036496350365, "no_speech_prob": 4.449935659067705e-05}, {"id": 64, "seek": 37364, "start": 392.44, "end": 397.71999999999997, "text": " permanently. But what happened if you notice that you mess up? All right, NMS state CTL", "tokens": [24042, 13, 583, 437, 2011, 498, 291, 3449, 300, 291, 2082, 493, 30, 1057, 558, 11, 426, 10288, 1785, 19529, 43], "temperature": 0.0, "avg_logprob": -0.1850550470273357, "compression_ratio": 1.635036496350365, "no_speech_prob": 4.449935659067705e-05}, {"id": 65, "seek": 37364, "start": 397.71999999999997, "end": 402.36, "text": " rollback, and you're going to be on the previous state. This is really great, because it's", "tokens": [3373, 3207, 11, 293, 291, 434, 516, 281, 312, 322, 264, 3894, 1785, 13, 639, 307, 534, 869, 11, 570, 309, 311], "temperature": 0.0, "avg_logprob": -0.1850550470273357, "compression_ratio": 1.635036496350365, "no_speech_prob": 4.449935659067705e-05}, {"id": 66, "seek": 40236, "start": 402.36, "end": 408.04, "text": " really tiring when you misconfigure something, and then you need to undo it manually. So", "tokens": [534, 35182, 562, 291, 27631, 20646, 540, 746, 11, 293, 550, 291, 643, 281, 23779, 309, 16945, 13, 407], "temperature": 0.0, "avg_logprob": -0.18171252999254453, "compression_ratio": 1.7083333333333333, "no_speech_prob": 2.3276579668163322e-05}, {"id": 67, "seek": 40236, "start": 408.04, "end": 415.2, "text": " this time, you just do a rollback, and everything will be like before. And what happened when", "tokens": [341, 565, 11, 291, 445, 360, 257, 3373, 3207, 11, 293, 1203, 486, 312, 411, 949, 13, 400, 437, 2011, 562], "temperature": 0.0, "avg_logprob": -0.18171252999254453, "compression_ratio": 1.7083333333333333, "no_speech_prob": 2.3276579668163322e-05}, {"id": 68, "seek": 40236, "start": 415.2, "end": 420.88, "text": " you are working remotely on a server, and you lose connectivity, and you end free travel", "tokens": [291, 366, 1364, 20824, 322, 257, 7154, 11, 293, 291, 3624, 21095, 11, 293, 291, 917, 1737, 3147], "temperature": 0.0, "avg_logprob": -0.18171252999254453, "compression_ratio": 1.7083333333333333, "no_speech_prob": 2.3276579668163322e-05}, {"id": 69, "seek": 40236, "start": 420.88, "end": 428.24, "text": " to the data center. Right now, with this tool, you can, with a timeout, if you lose connectivity,", "tokens": [281, 264, 1412, 3056, 13, 1779, 586, 11, 365, 341, 2290, 11, 291, 393, 11, 365, 257, 565, 346, 11, 498, 291, 3624, 21095, 11], "temperature": 0.0, "avg_logprob": -0.18171252999254453, "compression_ratio": 1.7083333333333333, "no_speech_prob": 2.3276579668163322e-05}, {"id": 70, "seek": 42824, "start": 428.24, "end": 432.48, "text": " you are not going to be able to do the commit. So at some point, it will rollback, and you", "tokens": [291, 366, 406, 516, 281, 312, 1075, 281, 360, 264, 5599, 13, 407, 412, 512, 935, 11, 309, 486, 3373, 3207, 11, 293, 291], "temperature": 0.0, "avg_logprob": -0.1859148512495325, "compression_ratio": 1.6106194690265487, "no_speech_prob": 3.239788202336058e-05}, {"id": 71, "seek": 42824, "start": 432.48, "end": 441.04, "text": " will have your connectivity back, hopefully. All right, and well, verification is optional,", "tokens": [486, 362, 428, 21095, 646, 11, 4696, 13, 1057, 558, 11, 293, 731, 11, 30206, 307, 17312, 11], "temperature": 0.0, "avg_logprob": -0.1859148512495325, "compression_ratio": 1.6106194690265487, "no_speech_prob": 3.239788202336058e-05}, {"id": 72, "seek": 42824, "start": 441.04, "end": 449.48, "text": " but personally, I like it a lot, because what it does is NMS state gets the desired state", "tokens": [457, 5665, 11, 286, 411, 309, 257, 688, 11, 570, 437, 309, 775, 307, 426, 10288, 1785, 2170, 264, 14721, 1785], "temperature": 0.0, "avg_logprob": -0.1859148512495325, "compression_ratio": 1.6106194690265487, "no_speech_prob": 3.239788202336058e-05}, {"id": 73, "seek": 42824, "start": 449.48, "end": 455.76, "text": " from the user, then apply it, and then get the current state that is applied to the system,", "tokens": [490, 264, 4195, 11, 550, 3079, 309, 11, 293, 550, 483, 264, 2190, 1785, 300, 307, 6456, 281, 264, 1185, 11], "temperature": 0.0, "avg_logprob": -0.1859148512495325, "compression_ratio": 1.6106194690265487, "no_speech_prob": 3.239788202336058e-05}, {"id": 74, "seek": 45576, "start": 455.76, "end": 461.03999999999996, "text": " and compare them. And if they are not equal, then it's going to fail, and it's going to", "tokens": [293, 6794, 552, 13, 400, 498, 436, 366, 406, 2681, 11, 550, 309, 311, 516, 281, 3061, 11, 293, 309, 311, 516, 281], "temperature": 0.0, "avg_logprob": -0.15324013449928978, "compression_ratio": 1.7606177606177607, "no_speech_prob": 4.739530413644388e-05}, {"id": 75, "seek": 45576, "start": 461.03999999999996, "end": 465.56, "text": " rollback to the previous state automatically. This is great, because sometimes you don't", "tokens": [3373, 3207, 281, 264, 3894, 1785, 6772, 13, 639, 307, 869, 11, 570, 2171, 291, 500, 380], "temperature": 0.0, "avg_logprob": -0.15324013449928978, "compression_ratio": 1.7606177606177607, "no_speech_prob": 4.739530413644388e-05}, {"id": 76, "seek": 45576, "start": 465.56, "end": 471.92, "text": " know about some options, and there are some requirements to set up these options on interface.", "tokens": [458, 466, 512, 3956, 11, 293, 456, 366, 512, 7728, 281, 992, 493, 613, 3956, 322, 9226, 13], "temperature": 0.0, "avg_logprob": -0.15324013449928978, "compression_ratio": 1.7606177606177607, "no_speech_prob": 4.739530413644388e-05}, {"id": 77, "seek": 45576, "start": 471.92, "end": 478.8, "text": " So what you can do is apply this if it goes wrong, because kernel is not applying the option", "tokens": [407, 437, 291, 393, 360, 307, 3079, 341, 498, 309, 1709, 2085, 11, 570, 28256, 307, 406, 9275, 264, 3614], "temperature": 0.0, "avg_logprob": -0.15324013449928978, "compression_ratio": 1.7606177606177607, "no_speech_prob": 4.739530413644388e-05}, {"id": 78, "seek": 45576, "start": 478.8, "end": 483.92, "text": " correctly, because they are incompatible, for example. So it does a rollback automatically,", "tokens": [8944, 11, 570, 436, 366, 40393, 267, 964, 11, 337, 1365, 13, 407, 309, 775, 257, 3373, 3207, 6772, 11], "temperature": 0.0, "avg_logprob": -0.15324013449928978, "compression_ratio": 1.7606177606177607, "no_speech_prob": 4.739530413644388e-05}, {"id": 79, "seek": 48392, "start": 483.92, "end": 489.64000000000004, "text": " and you don't end up with a wrong configure interface. But you can skip this using dash", "tokens": [293, 291, 500, 380, 917, 493, 365, 257, 2085, 22162, 9226, 13, 583, 291, 393, 10023, 341, 1228, 8240], "temperature": 0.0, "avg_logprob": -0.20200245650773196, "compression_ratio": 1.5584415584415585, "no_speech_prob": 1.7442287571611814e-05}, {"id": 80, "seek": 48392, "start": 489.64000000000004, "end": 497.52000000000004, "text": " dash no verify. Okay, so let's see some examples of YAML files. These are a little bit simple,", "tokens": [8240, 572, 16888, 13, 1033, 11, 370, 718, 311, 536, 512, 5110, 295, 398, 2865, 43, 7098, 13, 1981, 366, 257, 707, 857, 2199, 11], "temperature": 0.0, "avg_logprob": -0.20200245650773196, "compression_ratio": 1.5584415584415585, "no_speech_prob": 1.7442287571611814e-05}, {"id": 81, "seek": 48392, "start": 497.52000000000004, "end": 503.84000000000003, "text": " but I think they are great examples. Here, for example, we have a bone interface, and", "tokens": [457, 286, 519, 436, 366, 869, 5110, 13, 1692, 11, 337, 1365, 11, 321, 362, 257, 9026, 9226, 11, 293], "temperature": 0.0, "avg_logprob": -0.20200245650773196, "compression_ratio": 1.5584415584415585, "no_speech_prob": 1.7442287571611814e-05}, {"id": 82, "seek": 48392, "start": 503.84000000000003, "end": 510.52000000000004, "text": " you can just define the state, IPv4, the link aggregation options, you can define the mode,", "tokens": [291, 393, 445, 6964, 264, 1785, 11, 8671, 85, 19, 11, 264, 2113, 16743, 399, 3956, 11, 291, 393, 6964, 264, 4391, 11], "temperature": 0.0, "avg_logprob": -0.20200245650773196, "compression_ratio": 1.5584415584415585, "no_speech_prob": 1.7442287571611814e-05}, {"id": 83, "seek": 51052, "start": 510.52, "end": 515.16, "text": " the options of that mode, and then define the board. And one thing that is really, really", "tokens": [264, 3956, 295, 300, 4391, 11, 293, 550, 6964, 264, 3150, 13, 400, 472, 551, 300, 307, 534, 11, 534], "temperature": 0.0, "avg_logprob": -0.15925285879489595, "compression_ratio": 1.7935222672064777, "no_speech_prob": 2.0537270756904036e-05}, {"id": 84, "seek": 51052, "start": 515.16, "end": 519.56, "text": " useful is that we have partial editing. So imagine that you want to change only the MAC", "tokens": [4420, 307, 300, 321, 362, 14641, 10000, 13, 407, 3811, 300, 291, 528, 281, 1319, 787, 264, 27716], "temperature": 0.0, "avg_logprob": -0.15925285879489595, "compression_ratio": 1.7935222672064777, "no_speech_prob": 2.0537270756904036e-05}, {"id": 85, "seek": 51052, "start": 519.56, "end": 523.16, "text": " address, but you don't want to change the IP address. You don't need to define the IP", "tokens": [2985, 11, 457, 291, 500, 380, 528, 281, 1319, 264, 8671, 2985, 13, 509, 500, 380, 643, 281, 6964, 264, 8671], "temperature": 0.0, "avg_logprob": -0.15925285879489595, "compression_ratio": 1.7935222672064777, "no_speech_prob": 2.0537270756904036e-05}, {"id": 86, "seek": 51052, "start": 523.16, "end": 530.16, "text": " address, because you just define the interface and the type. So this is just enough. Then", "tokens": [2985, 11, 570, 291, 445, 6964, 264, 9226, 293, 264, 2010, 13, 407, 341, 307, 445, 1547, 13, 1396], "temperature": 0.0, "avg_logprob": -0.15925285879489595, "compression_ratio": 1.7935222672064777, "no_speech_prob": 2.0537270756904036e-05}, {"id": 87, "seek": 51052, "start": 530.16, "end": 534.92, "text": " the MAC address, I'm going to apply the state. An NMS state, we get the current status of", "tokens": [264, 27716, 2985, 11, 286, 478, 516, 281, 3079, 264, 1785, 13, 1107, 426, 10288, 1785, 11, 321, 483, 264, 2190, 6558, 295], "temperature": 0.0, "avg_logprob": -0.15925285879489595, "compression_ratio": 1.7935222672064777, "no_speech_prob": 2.0537270756904036e-05}, {"id": 88, "seek": 53492, "start": 534.92, "end": 541.88, "text": " the interface, and we'll merge. So you won't lose any property. Alright, so then we have,", "tokens": [264, 9226, 11, 293, 321, 603, 22183, 13, 407, 291, 1582, 380, 3624, 604, 4707, 13, 2798, 11, 370, 550, 321, 362, 11], "temperature": 0.0, "avg_logprob": -0.22632001370799784, "compression_ratio": 1.6415929203539823, "no_speech_prob": 4.071627699886449e-05}, {"id": 89, "seek": 53492, "start": 541.88, "end": 548.04, "text": " for example, another example in the middle is the Abelian interface or the ATH1 interface.", "tokens": [337, 1365, 11, 1071, 1365, 294, 264, 2808, 307, 264, 2847, 338, 952, 9226, 420, 264, 8872, 39, 16, 9226, 13], "temperature": 0.0, "avg_logprob": -0.22632001370799784, "compression_ratio": 1.6415929203539823, "no_speech_prob": 4.071627699886449e-05}, {"id": 90, "seek": 53492, "start": 548.04, "end": 554.4, "text": " And another great thing here, as I say, is that NMS states resolve interdependencies automatically.", "tokens": [400, 1071, 869, 551, 510, 11, 382, 286, 584, 11, 307, 300, 426, 10288, 4368, 14151, 728, 36763, 6464, 6772, 13], "temperature": 0.0, "avg_logprob": -0.22632001370799784, "compression_ratio": 1.6415929203539823, "no_speech_prob": 4.071627699886449e-05}, {"id": 91, "seek": 53492, "start": 554.4, "end": 560.56, "text": " So basically, you don't need to know if, in which state needs to be the ATH1 when creating", "tokens": [407, 1936, 11, 291, 500, 380, 643, 281, 458, 498, 11, 294, 597, 1785, 2203, 281, 312, 264, 8872, 39, 16, 562, 4084], "temperature": 0.0, "avg_logprob": -0.22632001370799784, "compression_ratio": 1.6415929203539823, "no_speech_prob": 4.071627699886449e-05}, {"id": 92, "seek": 56056, "start": 560.56, "end": 566.0, "text": " the biland, it needs to be up or down. It doesn't matter. We are going to handle it. So you", "tokens": [264, 8588, 474, 11, 309, 2203, 281, 312, 493, 420, 760, 13, 467, 1177, 380, 1871, 13, 492, 366, 516, 281, 4813, 309, 13, 407, 291], "temperature": 0.0, "avg_logprob": -0.20078058242797853, "compression_ratio": 1.7072243346007605, "no_speech_prob": 1.8324755728826858e-05}, {"id": 93, "seek": 56056, "start": 566.0, "end": 571.28, "text": " don't need to worry about it. And then, for example, we have a Linux bridge with the board", "tokens": [500, 380, 643, 281, 3292, 466, 309, 13, 400, 550, 11, 337, 1365, 11, 321, 362, 257, 18734, 7283, 365, 264, 3150], "temperature": 0.0, "avg_logprob": -0.20078058242797853, "compression_ratio": 1.7072243346007605, "no_speech_prob": 1.8324755728826858e-05}, {"id": 94, "seek": 56056, "start": 571.28, "end": 576.16, "text": " and some options on the board. And also, one great thing here is that you don't need to", "tokens": [293, 512, 3956, 322, 264, 3150, 13, 400, 611, 11, 472, 869, 551, 510, 307, 300, 291, 500, 380, 643, 281], "temperature": 0.0, "avg_logprob": -0.20078058242797853, "compression_ratio": 1.7072243346007605, "no_speech_prob": 1.8324755728826858e-05}, {"id": 95, "seek": 56056, "start": 576.16, "end": 580.88, "text": " care about the state of the board. NMS state will resolve the dependencies and will bring", "tokens": [1127, 466, 264, 1785, 295, 264, 3150, 13, 426, 10288, 1785, 486, 14151, 264, 36606, 293, 486, 1565], "temperature": 0.0, "avg_logprob": -0.20078058242797853, "compression_ratio": 1.7072243346007605, "no_speech_prob": 1.8324755728826858e-05}, {"id": 96, "seek": 56056, "start": 580.88, "end": 588.28, "text": " the board up if needed, or we configure as needed. Some more examples, because as I say,", "tokens": [264, 3150, 493, 498, 2978, 11, 420, 321, 22162, 382, 2978, 13, 2188, 544, 5110, 11, 570, 382, 286, 584, 11], "temperature": 0.0, "avg_logprob": -0.20078058242797853, "compression_ratio": 1.7072243346007605, "no_speech_prob": 1.8324755728826858e-05}, {"id": 97, "seek": 58828, "start": 588.28, "end": 597.4, "text": " NMS state is not only focused on interfaces. It's also focused on DNS, root configuration,", "tokens": [426, 10288, 1785, 307, 406, 787, 5178, 322, 28416, 13, 467, 311, 611, 5178, 322, 35153, 11, 5593, 11694, 11], "temperature": 0.0, "avg_logprob": -0.278324691616759, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.00012158275785623118}, {"id": 98, "seek": 58828, "start": 597.4, "end": 605.16, "text": " and also some other interfaces like OBS and OBS DPDK. So, okay, for example, here we have", "tokens": [293, 611, 512, 661, 28416, 411, 422, 8176, 293, 422, 8176, 413, 17349, 42, 13, 407, 11, 1392, 11, 337, 1365, 11, 510, 321, 362], "temperature": 0.0, "avg_logprob": -0.278324691616759, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.00012158275785623118}, {"id": 99, "seek": 58828, "start": 605.16, "end": 612.0799999999999, "text": " our interface with the ATH1 configure with static IP address, and then we have the AdRoot.", "tokens": [527, 9226, 365, 264, 8872, 39, 16, 22162, 365, 13437, 8671, 2985, 11, 293, 550, 321, 362, 264, 1999, 49, 6259, 13], "temperature": 0.0, "avg_logprob": -0.278324691616759, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.00012158275785623118}, {"id": 100, "seek": 58828, "start": 612.0799999999999, "end": 617.4399999999999, "text": " So you can define the root and it will be applied to Kana. The same for routing policy.", "tokens": [407, 291, 393, 6964, 264, 5593, 293, 309, 486, 312, 6456, 281, 591, 2095, 13, 440, 912, 337, 32722, 3897, 13], "temperature": 0.0, "avg_logprob": -0.278324691616759, "compression_ratio": 1.5608695652173914, "no_speech_prob": 0.00012158275785623118}, {"id": 101, "seek": 61744, "start": 617.44, "end": 624.7600000000001, "text": " It's also supported. You can define from IP2 and IP4. It will be for one mask. It will", "tokens": [467, 311, 611, 8104, 13, 509, 393, 6964, 490, 8671, 17, 293, 8671, 19, 13, 467, 486, 312, 337, 472, 6094, 13, 467, 486], "temperature": 0.0, "avg_logprob": -0.20288848876953125, "compression_ratio": 1.6729857819905214, "no_speech_prob": 5.6532808230258524e-05}, {"id": 102, "seek": 61744, "start": 624.7600000000001, "end": 632.12, "text": " be applied. The same thing for DNS. It's over. And as you can see there, the last example,", "tokens": [312, 6456, 13, 440, 912, 551, 337, 35153, 13, 467, 311, 670, 13, 400, 382, 291, 393, 536, 456, 11, 264, 1036, 1365, 11], "temperature": 0.0, "avg_logprob": -0.20288848876953125, "compression_ratio": 1.6729857819905214, "no_speech_prob": 5.6532808230258524e-05}, {"id": 103, "seek": 61744, "start": 632.12, "end": 637.48, "text": " it's an OBS interface with an OBS bridge. So you can define it. And then the great thing", "tokens": [309, 311, 364, 422, 8176, 9226, 365, 364, 422, 8176, 7283, 13, 407, 291, 393, 6964, 309, 13, 400, 550, 264, 869, 551], "temperature": 0.0, "avg_logprob": -0.20288848876953125, "compression_ratio": 1.6729857819905214, "no_speech_prob": 5.6532808230258524e-05}, {"id": 104, "seek": 61744, "start": 637.48, "end": 642.0400000000001, "text": " is that you don't need always to define the OBS interface. You can define only the OBS", "tokens": [307, 300, 291, 500, 380, 643, 1009, 281, 6964, 264, 422, 8176, 9226, 13, 509, 393, 6964, 787, 264, 422, 8176], "temperature": 0.0, "avg_logprob": -0.20288848876953125, "compression_ratio": 1.6729857819905214, "no_speech_prob": 5.6532808230258524e-05}, {"id": 105, "seek": 64204, "start": 642.04, "end": 648.24, "text": " bridge and add ports or delete ports from it. So it's quite great.", "tokens": [7283, 293, 909, 18160, 420, 12097, 18160, 490, 309, 13, 407, 309, 311, 1596, 869, 13], "temperature": 0.0, "avg_logprob": -0.20959550804562038, "compression_ratio": 1.5123456790123457, "no_speech_prob": 0.0001469750568503514}, {"id": 106, "seek": 64204, "start": 648.24, "end": 654.5999999999999, "text": " All right. So having seen these examples, I would like to do a demo. Sorry if it doesn't", "tokens": [1057, 558, 13, 407, 1419, 1612, 613, 5110, 11, 286, 576, 411, 281, 360, 257, 10723, 13, 4919, 498, 309, 1177, 380], "temperature": 0.0, "avg_logprob": -0.20959550804562038, "compression_ratio": 1.5123456790123457, "no_speech_prob": 0.0001469750568503514}, {"id": 107, "seek": 64204, "start": 654.5999999999999, "end": 664.92, "text": " work. I hope it will. I have an environment. So let's try it out. All right. So is it big", "tokens": [589, 13, 286, 1454, 309, 486, 13, 286, 362, 364, 2823, 13, 407, 718, 311, 853, 309, 484, 13, 1057, 558, 13, 407, 307, 309, 955], "temperature": 0.0, "avg_logprob": -0.20959550804562038, "compression_ratio": 1.5123456790123457, "no_speech_prob": 0.0001469750568503514}, {"id": 108, "seek": 66492, "start": 664.92, "end": 672.28, "text": " enough? I can make it bigger. Yeah? Okay. Right. So, okay, I'm using the main branch", "tokens": [1547, 30, 286, 393, 652, 309, 3801, 13, 865, 30, 1033, 13, 1779, 13, 407, 11, 1392, 11, 286, 478, 1228, 264, 2135, 9819], "temperature": 0.0, "avg_logprob": -0.21468548774719237, "compression_ratio": 1.3473684210526315, "no_speech_prob": 7.711501530138776e-05}, {"id": 109, "seek": 66492, "start": 672.28, "end": 682.12, "text": " version, which is 2.2.6. And here we have, this is really great. We have an examples", "tokens": [3037, 11, 597, 307, 568, 13, 17, 13, 21, 13, 400, 510, 321, 362, 11, 341, 307, 534, 869, 13, 492, 362, 364, 5110], "temperature": 0.0, "avg_logprob": -0.21468548774719237, "compression_ratio": 1.3473684210526315, "no_speech_prob": 7.711501530138776e-05}, {"id": 110, "seek": 66492, "start": 682.12, "end": 689.04, "text": " base. So you can, if you are learning how to use NMS stay, this is quite good. You can", "tokens": [3096, 13, 407, 291, 393, 11, 498, 291, 366, 2539, 577, 281, 764, 426, 10288, 1754, 11, 341, 307, 1596, 665, 13, 509, 393], "temperature": 0.0, "avg_logprob": -0.21468548774719237, "compression_ratio": 1.3473684210526315, "no_speech_prob": 7.711501530138776e-05}, {"id": 111, "seek": 68904, "start": 689.04, "end": 699.88, "text": " go here and see different examples of how you should do it. So one that is really simple", "tokens": [352, 510, 293, 536, 819, 5110, 295, 577, 291, 820, 360, 309, 13, 407, 472, 300, 307, 534, 2199], "temperature": 0.0, "avg_logprob": -0.2089780757301732, "compression_ratio": 1.588235294117647, "no_speech_prob": 4.51283594884444e-05}, {"id": 112, "seek": 68904, "start": 699.88, "end": 708.8, "text": " is for example, this one. Right. So this one, one similar to what I showed before. So this", "tokens": [307, 337, 1365, 11, 341, 472, 13, 1779, 13, 407, 341, 472, 11, 472, 2531, 281, 437, 286, 4712, 949, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.2089780757301732, "compression_ratio": 1.588235294117647, "no_speech_prob": 4.51283594884444e-05}, {"id": 113, "seek": 68904, "start": 708.8, "end": 717.12, "text": " is an ATH one. And then you have the config, a root config for the ATH one. So let's check", "tokens": [307, 364, 8872, 39, 472, 13, 400, 550, 291, 362, 264, 6662, 11, 257, 5593, 6662, 337, 264, 8872, 39, 472, 13, 407, 718, 311, 1520], "temperature": 0.0, "avg_logprob": -0.2089780757301732, "compression_ratio": 1.588235294117647, "no_speech_prob": 4.51283594884444e-05}, {"id": 114, "seek": 71712, "start": 717.12, "end": 723.5600000000001, "text": " before the state that we have already. Okay. This is the IP address that we have. And here", "tokens": [949, 264, 1785, 300, 321, 362, 1217, 13, 1033, 13, 639, 307, 264, 8671, 2985, 300, 321, 362, 13, 400, 510], "temperature": 0.0, "avg_logprob": -0.27176689239869634, "compression_ratio": 1.5917159763313609, "no_speech_prob": 0.0001370231475448236}, {"id": 115, "seek": 71712, "start": 723.5600000000001, "end": 731.36, "text": " we have ATH one. ATH one is a, it's a base, but it's defined as an Ethernet. So according", "tokens": [321, 362, 8872, 39, 472, 13, 8872, 39, 472, 307, 257, 11, 309, 311, 257, 3096, 11, 457, 309, 311, 7642, 382, 364, 38636, 7129, 13, 407, 4650], "temperature": 0.0, "avg_logprob": -0.27176689239869634, "compression_ratio": 1.5917159763313609, "no_speech_prob": 0.0001370231475448236}, {"id": 116, "seek": 71712, "start": 731.36, "end": 742.4, "text": " to us, it will behave as an Ethernet. So let's apply the state. It's set ATH min and add", "tokens": [281, 505, 11, 309, 486, 15158, 382, 364, 38636, 7129, 13, 407, 718, 311, 3079, 264, 1785, 13, 467, 311, 992, 8872, 39, 923, 293, 909], "temperature": 0.0, "avg_logprob": -0.27176689239869634, "compression_ratio": 1.5917159763313609, "no_speech_prob": 0.0001370231475448236}, {"id": 117, "seek": 74240, "start": 742.4, "end": 751.8, "text": " root. That's it. It's done. If we go to IPA and we go to ATH one, we can see the IP address", "tokens": [5593, 13, 663, 311, 309, 13, 467, 311, 1096, 13, 759, 321, 352, 281, 8671, 32, 293, 321, 352, 281, 8872, 39, 472, 11, 321, 393, 536, 264, 8671, 2985], "temperature": 0.0, "avg_logprob": -0.1792559510185605, "compression_ratio": 1.6341463414634145, "no_speech_prob": 9.084228804567829e-05}, {"id": 118, "seek": 74240, "start": 751.8, "end": 762.04, "text": " configure here. All right. Then if we do IPR, we are going to see the root here. One for", "tokens": [22162, 510, 13, 1057, 558, 13, 1396, 498, 321, 360, 8671, 49, 11, 321, 366, 516, 281, 536, 264, 5593, 510, 13, 1485, 337], "temperature": 0.0, "avg_logprob": -0.1792559510185605, "compression_ratio": 1.6341463414634145, "no_speech_prob": 9.084228804567829e-05}, {"id": 119, "seek": 74240, "start": 762.04, "end": 767.56, "text": " the IP address and the other one, the root that we set. And also, if you are wanting to", "tokens": [264, 8671, 2985, 293, 264, 661, 472, 11, 264, 5593, 300, 321, 992, 13, 400, 611, 11, 498, 291, 366, 7935, 281], "temperature": 0.0, "avg_logprob": -0.1792559510185605, "compression_ratio": 1.6341463414634145, "no_speech_prob": 9.084228804567829e-05}, {"id": 120, "seek": 76756, "start": 767.56, "end": 777.64, "text": " check what happened in the one manner here, you can do this. Oops. Okay. Sorry. All right.", "tokens": [1520, 437, 2011, 294, 264, 472, 9060, 510, 11, 291, 393, 360, 341, 13, 21726, 13, 1033, 13, 4919, 13, 1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.23854042053222657, "compression_ratio": 1.5780346820809248, "no_speech_prob": 2.8154850951978005e-05}, {"id": 121, "seek": 76756, "start": 777.64, "end": 783.64, "text": " You can, you can do this. You will notice that the device is up and we could check the connection", "tokens": [509, 393, 11, 291, 393, 360, 341, 13, 509, 486, 3449, 300, 264, 4302, 307, 493, 293, 321, 727, 1520, 264, 4984], "temperature": 0.0, "avg_logprob": -0.23854042053222657, "compression_ratio": 1.5780346820809248, "no_speech_prob": 2.8154850951978005e-05}, {"id": 122, "seek": 76756, "start": 783.64, "end": 795.76, "text": " that we generated. But let's go to, sorry. Let's check a more complex sample. But we", "tokens": [300, 321, 10833, 13, 583, 718, 311, 352, 281, 11, 2597, 13, 961, 311, 1520, 257, 544, 3997, 6889, 13, 583, 321], "temperature": 0.0, "avg_logprob": -0.23854042053222657, "compression_ratio": 1.5780346820809248, "no_speech_prob": 2.8154850951978005e-05}, {"id": 123, "seek": 79576, "start": 795.76, "end": 800.16, "text": " need first to clean up the state. So I'm going to show you how we clean up the states. We", "tokens": [643, 700, 281, 2541, 493, 264, 1785, 13, 407, 286, 478, 516, 281, 855, 291, 577, 321, 2541, 493, 264, 4368, 13, 492], "temperature": 0.0, "avg_logprob": -0.1753063201904297, "compression_ratio": 1.8, "no_speech_prob": 2.709381078602746e-05}, {"id": 124, "seek": 79576, "start": 800.16, "end": 809.2, "text": " have ATH one, the old roots. All right. So here, for example, we just need to define", "tokens": [362, 8872, 39, 472, 11, 264, 1331, 10669, 13, 1057, 558, 13, 407, 510, 11, 337, 1365, 11, 321, 445, 643, 281, 6964], "temperature": 0.0, "avg_logprob": -0.1753063201904297, "compression_ratio": 1.8, "no_speech_prob": 2.709381078602746e-05}, {"id": 125, "seek": 79576, "start": 809.2, "end": 814.64, "text": " the ATH one and then define the roots with the net hop interface and a state absent.", "tokens": [264, 8872, 39, 472, 293, 550, 6964, 264, 10669, 365, 264, 2533, 3818, 9226, 293, 257, 1785, 25185, 13], "temperature": 0.0, "avg_logprob": -0.1753063201904297, "compression_ratio": 1.8, "no_speech_prob": 2.709381078602746e-05}, {"id": 126, "seek": 79576, "start": 814.64, "end": 819.24, "text": " And this will clear all the roots that are defined for that interface, which is great", "tokens": [400, 341, 486, 1850, 439, 264, 10669, 300, 366, 7642, 337, 300, 9226, 11, 597, 307, 869], "temperature": 0.0, "avg_logprob": -0.1753063201904297, "compression_ratio": 1.8, "no_speech_prob": 2.709381078602746e-05}, {"id": 127, "seek": 79576, "start": 819.24, "end": 822.76, "text": " because when removing something, you don't need to define everything. You just need to", "tokens": [570, 562, 12720, 746, 11, 291, 500, 380, 643, 281, 6964, 1203, 13, 509, 445, 643, 281], "temperature": 0.0, "avg_logprob": -0.1753063201904297, "compression_ratio": 1.8, "no_speech_prob": 2.709381078602746e-05}, {"id": 128, "seek": 82276, "start": 822.76, "end": 827.72, "text": " define the properties that you want to match and then a state absent and it will clear", "tokens": [6964, 264, 7221, 300, 291, 528, 281, 2995, 293, 550, 257, 1785, 25185, 293, 309, 486, 1850], "temperature": 0.0, "avg_logprob": -0.2308648801317402, "compression_ratio": 1.335820895522388, "no_speech_prob": 3.807049506576732e-05}, {"id": 129, "seek": 82276, "start": 827.72, "end": 850.3199999999999, "text": " them. All right. So it's applied. Let's check it. Okay. And then we can, oh, exactly. Right.", "tokens": [552, 13, 1057, 558, 13, 407, 309, 311, 6456, 13, 961, 311, 1520, 309, 13, 1033, 13, 400, 550, 321, 393, 11, 1954, 11, 2293, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.2308648801317402, "compression_ratio": 1.335820895522388, "no_speech_prob": 3.807049506576732e-05}, {"id": 130, "seek": 85032, "start": 850.32, "end": 856.72, "text": " Because we didn't bring down the ATH one interface. That's fine. But we drop the root. So let's", "tokens": [1436, 321, 994, 380, 1565, 760, 264, 8872, 39, 472, 9226, 13, 663, 311, 2489, 13, 583, 321, 3270, 264, 5593, 13, 407, 718, 311], "temperature": 0.0, "avg_logprob": -0.21655682722727457, "compression_ratio": 1.6883720930232557, "no_speech_prob": 0.00012620292545761913}, {"id": 131, "seek": 85032, "start": 856.72, "end": 866.12, "text": " create a more complex one, one that I especially like. It's this one. This is going to be the", "tokens": [1884, 257, 544, 3997, 472, 11, 472, 300, 286, 2318, 411, 13, 467, 311, 341, 472, 13, 639, 307, 516, 281, 312, 264], "temperature": 0.0, "avg_logprob": -0.21655682722727457, "compression_ratio": 1.6883720930232557, "no_speech_prob": 0.00012620292545761913}, {"id": 132, "seek": 85032, "start": 866.12, "end": 873.4000000000001, "text": " last one. So here we are going to define this. We have two ethernet interfaces that are", "tokens": [1036, 472, 13, 407, 510, 321, 366, 516, 281, 6964, 341, 13, 492, 362, 732, 37096, 7129, 28416, 300, 366], "temperature": 0.0, "avg_logprob": -0.21655682722727457, "compression_ratio": 1.6883720930232557, "no_speech_prob": 0.00012620292545761913}, {"id": 133, "seek": 85032, "start": 873.4000000000001, "end": 877.96, "text": " connected to a point interface, which has also another port, which is going to be the", "tokens": [4582, 281, 257, 935, 9226, 11, 597, 575, 611, 1071, 2436, 11, 597, 307, 516, 281, 312, 264], "temperature": 0.0, "avg_logprob": -0.21655682722727457, "compression_ratio": 1.6883720930232557, "no_speech_prob": 0.00012620292545761913}, {"id": 134, "seek": 87796, "start": 877.96, "end": 885.48, "text": " other bridge and a villain over another bridge. So, all right. This is the state. We define", "tokens": [661, 7283, 293, 257, 17906, 670, 1071, 7283, 13, 407, 11, 439, 558, 13, 639, 307, 264, 1785, 13, 492, 6964], "temperature": 0.0, "avg_logprob": -0.3012976938364457, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.00021266081603243947}, {"id": 135, "seek": 87796, "start": 885.48, "end": 891.24, "text": " the villain interfaces with the ID, the linux bridge, which the port is the villain, and", "tokens": [264, 17906, 28416, 365, 264, 7348, 11, 264, 22896, 2449, 7283, 11, 597, 264, 2436, 307, 264, 17906, 11, 293], "temperature": 0.0, "avg_logprob": -0.3012976938364457, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.00021266081603243947}, {"id": 136, "seek": 87796, "start": 891.24, "end": 898.24, "text": " then another linux bridge up and the port is going to be the bond. And then for the bond,", "tokens": [550, 1071, 22896, 2449, 7283, 493, 293, 264, 2436, 307, 516, 281, 312, 264, 6086, 13, 400, 550, 337, 264, 6086, 11], "temperature": 0.0, "avg_logprob": -0.3012976938364457, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.00021266081603243947}, {"id": 137, "seek": 87796, "start": 898.24, "end": 903.64, "text": " we have the two ethernet interfaces, ATH one and ATH two, and we have ATH one and ATH", "tokens": [321, 362, 264, 732, 37096, 7129, 28416, 11, 8872, 39, 472, 293, 8872, 39, 732, 11, 293, 321, 362, 8872, 39, 472, 293, 8872, 39], "temperature": 0.0, "avg_logprob": -0.3012976938364457, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.00021266081603243947}, {"id": 138, "seek": 90364, "start": 903.64, "end": 916.88, "text": " two defined. So let's apply it. All right. This will do a little bit more. That's fine.", "tokens": [732, 7642, 13, 407, 718, 311, 3079, 309, 13, 1057, 558, 13, 639, 486, 360, 257, 707, 857, 544, 13, 663, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.3121514320373535, "compression_ratio": 1.3208955223880596, "no_speech_prob": 1.78900172613794e-05}, {"id": 139, "seek": 90364, "start": 916.88, "end": 926.76, "text": " Right. So in network manager, everything seems set. Then we can do IPA, plenty of things.", "tokens": [1779, 13, 407, 294, 3209, 6598, 11, 1203, 2544, 992, 13, 1396, 321, 393, 360, 8671, 32, 11, 7140, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.3121514320373535, "compression_ratio": 1.3208955223880596, "no_speech_prob": 1.78900172613794e-05}, {"id": 140, "seek": 92676, "start": 926.76, "end": 936.56, "text": " Let me, this is the villain. Then we have here the bond with the others configure. No, sorry.", "tokens": [961, 385, 11, 341, 307, 264, 17906, 13, 1396, 321, 362, 510, 264, 6086, 365, 264, 2357, 22162, 13, 883, 11, 2597, 13], "temperature": 0.0, "avg_logprob": -0.26191065470377606, "compression_ratio": 1.5657142857142856, "no_speech_prob": 3.747281516552903e-05}, {"id": 141, "seek": 92676, "start": 936.56, "end": 946.2, "text": " We have the bond here and the bridge 29. And we can also move them as we did with the other", "tokens": [492, 362, 264, 6086, 510, 293, 264, 7283, 9413, 13, 400, 321, 393, 611, 1286, 552, 382, 321, 630, 365, 264, 661], "temperature": 0.0, "avg_logprob": -0.26191065470377606, "compression_ratio": 1.5657142857142856, "no_speech_prob": 3.747281516552903e-05}, {"id": 142, "seek": 92676, "start": 946.2, "end": 952.76, "text": " example. And let me show you how it looks. Right. So this is quite simple. You just need", "tokens": [1365, 13, 400, 718, 385, 855, 291, 577, 309, 1542, 13, 1779, 13, 407, 341, 307, 1596, 2199, 13, 509, 445, 643], "temperature": 0.0, "avg_logprob": -0.26191065470377606, "compression_ratio": 1.5657142857142856, "no_speech_prob": 3.747281516552903e-05}, {"id": 143, "seek": 95276, "start": 952.76, "end": 959.28, "text": " to define ATH one, ATH two as down because ATH one is an ethernet. Well, it's emulating", "tokens": [281, 6964, 8872, 39, 472, 11, 8872, 39, 732, 382, 760, 570, 8872, 39, 472, 307, 364, 37096, 7129, 13, 1042, 11, 309, 311, 846, 12162], "temperature": 0.0, "avg_logprob": -0.22340838940112623, "compression_ratio": 1.5141242937853108, "no_speech_prob": 7.891907443990931e-05}, {"id": 144, "seek": 95276, "start": 959.28, "end": 965.04, "text": " ethernet, but it's a physical device. So you cannot remove it completely. And then you", "tokens": [37096, 7129, 11, 457, 309, 311, 257, 4001, 4302, 13, 407, 291, 2644, 4159, 309, 2584, 13, 400, 550, 291], "temperature": 0.0, "avg_logprob": -0.22340838940112623, "compression_ratio": 1.5141242937853108, "no_speech_prob": 7.891907443990931e-05}, {"id": 145, "seek": 95276, "start": 965.04, "end": 972.84, "text": " have the bond, which can be dropped, the bridge, the villain, and the other bridge. So that's", "tokens": [362, 264, 6086, 11, 597, 393, 312, 8119, 11, 264, 7283, 11, 264, 17906, 11, 293, 264, 661, 7283, 13, 407, 300, 311], "temperature": 0.0, "avg_logprob": -0.22340838940112623, "compression_ratio": 1.5141242937853108, "no_speech_prob": 7.891907443990931e-05}, {"id": 146, "seek": 97284, "start": 972.84, "end": 987.76, "text": " it. If you apply it, it will be gone. Check. All right. So it should be done. As you can", "tokens": [309, 13, 759, 291, 3079, 309, 11, 309, 486, 312, 2780, 13, 6881, 13, 1057, 558, 13, 407, 309, 820, 312, 1096, 13, 1018, 291, 393], "temperature": 0.0, "avg_logprob": -0.2628464765951667, "compression_ratio": 1.5232558139534884, "no_speech_prob": 3.3807980798883364e-05}, {"id": 147, "seek": 97284, "start": 987.76, "end": 995.5600000000001, "text": " see, they are not any more, you cannot see any more the link, not the routes and not", "tokens": [536, 11, 436, 366, 406, 604, 544, 11, 291, 2644, 536, 604, 544, 264, 2113, 11, 406, 264, 18242, 293, 406], "temperature": 0.0, "avg_logprob": -0.2628464765951667, "compression_ratio": 1.5232558139534884, "no_speech_prob": 3.3807980798883364e-05}, {"id": 148, "seek": 97284, "start": 995.5600000000001, "end": 1002.5600000000001, "text": " the connections because we didn't, we removed also the network manager connection files.", "tokens": [264, 9271, 570, 321, 994, 380, 11, 321, 7261, 611, 264, 3209, 6598, 4984, 7098, 13], "temperature": 0.0, "avg_logprob": -0.2628464765951667, "compression_ratio": 1.5232558139534884, "no_speech_prob": 3.3807980798883364e-05}, {"id": 149, "seek": 100256, "start": 1002.56, "end": 1009.1199999999999, "text": " So I think that's it. It was a little bit, a little demo about how it works. I really", "tokens": [407, 286, 519, 300, 311, 309, 13, 467, 390, 257, 707, 857, 11, 257, 707, 10723, 466, 577, 309, 1985, 13, 286, 534], "temperature": 0.0, "avg_logprob": -0.3167966340717516, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.00022663439449388534}, {"id": 150, "seek": 100256, "start": 1009.1199999999999, "end": 1013.7199999999999, "text": " encourage you to try it out. It's really simple. If you are really using network manager, you", "tokens": [5373, 291, 281, 853, 309, 484, 13, 467, 311, 534, 2199, 13, 759, 291, 366, 534, 1228, 3209, 6598, 11, 291], "temperature": 0.0, "avg_logprob": -0.3167966340717516, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.00022663439449388534}, {"id": 151, "seek": 100256, "start": 1013.7199999999999, "end": 1021.68, "text": " basically do not need to do anything else because installing NMS state will be enough.", "tokens": [1936, 360, 406, 643, 281, 360, 1340, 1646, 570, 20762, 426, 10288, 1785, 486, 312, 1547, 13], "temperature": 0.0, "avg_logprob": -0.3167966340717516, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.00022663439449388534}, {"id": 152, "seek": 100256, "start": 1021.68, "end": 1029.56, "text": " NMS state is packaged basically on Fedora, CentOS, Unreal. And well, it's, if you use", "tokens": [426, 10288, 1785, 307, 38162, 1936, 322, 7772, 3252, 11, 3408, 4367, 11, 34464, 13, 400, 731, 11, 309, 311, 11, 498, 291, 764], "temperature": 0.0, "avg_logprob": -0.3167966340717516, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.00022663439449388534}, {"id": 153, "seek": 102956, "start": 1029.56, "end": 1038.56, "text": " the Rust library, you can also use the create to use it whenever you want. All right. So", "tokens": [264, 34952, 6405, 11, 291, 393, 611, 764, 264, 1884, 281, 764, 309, 5699, 291, 528, 13, 1057, 558, 13, 407], "temperature": 0.0, "avg_logprob": -0.43305617884585734, "compression_ratio": 1.2252252252252251, "no_speech_prob": 6.628806295339018e-05}, {"id": 154, "seek": 102956, "start": 1038.56, "end": 1047.0, "text": " double bill. And now some questions. Thank you.", "tokens": [3834, 2961, 13, 400, 586, 512, 1651, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.43305617884585734, "compression_ratio": 1.2252252252252251, "no_speech_prob": 6.628806295339018e-05}, {"id": 155, "seek": 104700, "start": 1047.0, "end": 1059.16, "text": " You basically use network manager to do all the settings and everything, but do you also", "tokens": [509, 1936, 764, 3209, 6598, 281, 360, 439, 264, 6257, 293, 1203, 11, 457, 360, 291, 611], "temperature": 0.0, "avg_logprob": -0.25988021763888275, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.000138838222483173}, {"id": 156, "seek": 104700, "start": 1059.16, "end": 1065.52, "text": " use net link? Why is it, why is it necessary? Don't you get all the information from network", "tokens": [764, 2533, 2113, 30, 1545, 307, 309, 11, 983, 307, 309, 4818, 30, 1468, 380, 291, 483, 439, 264, 1589, 490, 3209], "temperature": 0.0, "avg_logprob": -0.25988021763888275, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.000138838222483173}, {"id": 157, "seek": 104700, "start": 1065.52, "end": 1071.28, "text": " manager? No, because Nebo manager is not getting real time information from kernel all the", "tokens": [6598, 30, 883, 11, 570, 1734, 1763, 6598, 307, 406, 1242, 957, 565, 1589, 490, 28256, 439, 264], "temperature": 0.0, "avg_logprob": -0.25988021763888275, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.000138838222483173}, {"id": 158, "seek": 104700, "start": 1071.28, "end": 1076.6, "text": " time. It's not updating it directly. If you look to the devices, the devices doesn't have", "tokens": [565, 13, 467, 311, 406, 25113, 309, 3838, 13, 759, 291, 574, 281, 264, 5759, 11, 264, 5759, 1177, 380, 362], "temperature": 0.0, "avg_logprob": -0.25988021763888275, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.000138838222483173}, {"id": 159, "seek": 107660, "start": 1076.6, "end": 1083.12, "text": " all the properties. And in NISPO we care about all the properties that are defined on kernel.", "tokens": [439, 264, 7221, 13, 400, 294, 426, 2343, 34885, 321, 1127, 466, 439, 264, 7221, 300, 366, 7642, 322, 28256, 13], "temperature": 0.0, "avg_logprob": -0.2387087004525321, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.00010850914259208366}, {"id": 160, "seek": 107660, "start": 1083.12, "end": 1088.08, "text": " So this is the main reason. Are there settings that you need to do the net link as well?", "tokens": [407, 341, 307, 264, 2135, 1778, 13, 2014, 456, 6257, 300, 291, 643, 281, 360, 264, 2533, 2113, 382, 731, 30], "temperature": 0.0, "avg_logprob": -0.2387087004525321, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.00010850914259208366}, {"id": 161, "seek": 107660, "start": 1088.08, "end": 1092.12, "text": " No, no. We don't do the settings through net link. We just get them to compare. We found", "tokens": [883, 11, 572, 13, 492, 500, 380, 360, 264, 6257, 807, 2533, 2113, 13, 492, 445, 483, 552, 281, 6794, 13, 492, 1352], "temperature": 0.0, "avg_logprob": -0.2387087004525321, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.00010850914259208366}, {"id": 162, "seek": 107660, "start": 1092.12, "end": 1098.6799999999998, "text": " out the problem that as, our manager is a service and is listening on events of net", "tokens": [484, 264, 1154, 300, 382, 11, 527, 6598, 307, 257, 2643, 293, 307, 4764, 322, 3931, 295, 2533], "temperature": 0.0, "avg_logprob": -0.2387087004525321, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.00010850914259208366}, {"id": 163, "seek": 107660, "start": 1098.6799999999998, "end": 1106.04, "text": " link, sometimes takes sometimes to update their device cache. And that's a problem because", "tokens": [2113, 11, 2171, 2516, 2171, 281, 5623, 641, 4302, 19459, 13, 400, 300, 311, 257, 1154, 570], "temperature": 0.0, "avg_logprob": -0.2387087004525321, "compression_ratio": 1.722007722007722, "no_speech_prob": 0.00010850914259208366}, {"id": 164, "seek": 110604, "start": 1106.04, "end": 1108.92, "text": " when you do an operation, you want the result immediately.", "tokens": [562, 291, 360, 364, 6916, 11, 291, 528, 264, 1874, 4258, 13], "temperature": 0.0, "avg_logprob": -0.2763298239026751, "compression_ratio": 1.5535055350553506, "no_speech_prob": 0.00018400429689791054}, {"id": 165, "seek": 110604, "start": 1108.92, "end": 1113.68, "text": " Isn't that the bug in the network manager? Well, it isn't. And in the end you have a", "tokens": [6998, 380, 300, 264, 7426, 294, 264, 3209, 6598, 30, 1042, 11, 309, 1943, 380, 13, 400, 294, 264, 917, 291, 362, 257], "temperature": 0.0, "avg_logprob": -0.2763298239026751, "compression_ratio": 1.5535055350553506, "no_speech_prob": 0.00018400429689791054}, {"id": 166, "seek": 110604, "start": 1113.68, "end": 1120.8799999999999, "text": " very good cache and it's hard to keep everything updated. So they perform a lot of operations.", "tokens": [588, 665, 19459, 293, 309, 311, 1152, 281, 1066, 1203, 10588, 13, 407, 436, 2042, 257, 688, 295, 7705, 13], "temperature": 0.0, "avg_logprob": -0.2763298239026751, "compression_ratio": 1.5535055350553506, "no_speech_prob": 0.00018400429689791054}, {"id": 167, "seek": 110604, "start": 1120.8799999999999, "end": 1127.08, "text": " Obviously it could be improved. But right now this is the solution that we thought about.", "tokens": [7580, 309, 727, 312, 9689, 13, 583, 558, 586, 341, 307, 264, 3827, 300, 321, 1194, 466, 13], "temperature": 0.0, "avg_logprob": -0.2763298239026751, "compression_ratio": 1.5535055350553506, "no_speech_prob": 0.00018400429689791054}, {"id": 168, "seek": 110604, "start": 1127.08, "end": 1133.56, "text": " Also, NISPO can apply settings to kernel, but we don't use it on NMSD. This is like an extra", "tokens": [2743, 11, 426, 2343, 34885, 393, 3079, 6257, 281, 28256, 11, 457, 321, 500, 380, 764, 309, 322, 426, 10288, 35, 13, 639, 307, 411, 364, 2857], "temperature": 0.0, "avg_logprob": -0.2763298239026751, "compression_ratio": 1.5535055350553506, "no_speech_prob": 0.00018400429689791054}, {"id": 169, "seek": 113356, "start": 1133.56, "end": 1137.76, "text": " feature that we work on it from time to time.", "tokens": [4111, 300, 321, 589, 322, 309, 490, 565, 281, 565, 13], "temperature": 0.0, "avg_logprob": -0.26653490311060196, "compression_ratio": 1.6795580110497237, "no_speech_prob": 0.00030275079188868403}, {"id": 170, "seek": 113356, "start": 1137.76, "end": 1143.6799999999998, "text": " Hello. I would like to ask if dummy interfaces are supported and if not, are they planned", "tokens": [2425, 13, 286, 576, 411, 281, 1029, 498, 35064, 28416, 366, 8104, 293, 498, 406, 11, 366, 436, 8589], "temperature": 0.0, "avg_logprob": -0.26653490311060196, "compression_ratio": 1.6795580110497237, "no_speech_prob": 0.00030275079188868403}, {"id": 171, "seek": 113356, "start": 1143.6799999999998, "end": 1144.6799999999998, "text": " to be supported?", "tokens": [281, 312, 8104, 30], "temperature": 0.0, "avg_logprob": -0.26653490311060196, "compression_ratio": 1.6795580110497237, "no_speech_prob": 0.00030275079188868403}, {"id": 172, "seek": 113356, "start": 1144.6799999999998, "end": 1151.6799999999998, "text": " Dummy interfaces, yes. Dummy interfaces are supported. And that is, you can check recommendation.", "tokens": [413, 8620, 28416, 11, 2086, 13, 413, 8620, 28416, 366, 8104, 13, 400, 300, 307, 11, 291, 393, 1520, 11879, 13], "temperature": 0.0, "avg_logprob": -0.26653490311060196, "compression_ratio": 1.6795580110497237, "no_speech_prob": 0.00030275079188868403}, {"id": 173, "seek": 113356, "start": 1151.6799999999998, "end": 1156.04, "text": " I think everything is supported for dummy. Thank you.", "tokens": [286, 519, 1203, 307, 8104, 337, 35064, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.26653490311060196, "compression_ratio": 1.6795580110497237, "no_speech_prob": 0.00030275079188868403}, {"id": 174, "seek": 115604, "start": 1156.04, "end": 1168.36, "text": " Any more questions? All right.", "tokens": [2639, 544, 1651, 30, 1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.27433796723683673, "compression_ratio": 1.4646464646464648, "no_speech_prob": 0.00023825099924579263}, {"id": 175, "seek": 115604, "start": 1168.36, "end": 1169.36, "text": " I think we're good.", "tokens": [286, 519, 321, 434, 665, 13], "temperature": 0.0, "avg_logprob": -0.27433796723683673, "compression_ratio": 1.4646464646464648, "no_speech_prob": 0.00023825099924579263}, {"id": 176, "seek": 115604, "start": 1169.36, "end": 1170.36, "text": " Yep, we're good. Thank you very much.", "tokens": [7010, 11, 321, 434, 665, 13, 1044, 291, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.27433796723683673, "compression_ratio": 1.4646464646464648, "no_speech_prob": 0.00023825099924579263}, {"id": 177, "seek": 115604, "start": 1170.36, "end": 1171.36, "text": " Thank you very much for attending. Thank you.", "tokens": [1044, 291, 588, 709, 337, 15862, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.27433796723683673, "compression_ratio": 1.4646464646464648, "no_speech_prob": 0.00023825099924579263}, {"id": 178, "seek": 117136, "start": 1171.36, "end": 1187.36, "text": " Thank you very much. Thank you very much.", "tokens": [50364, 1044, 291, 588, 709, 13, 1044, 291, 588, 709, 13, 51164], "temperature": 0.0, "avg_logprob": -0.8069265072162335, "compression_ratio": 1.28125, "no_speech_prob": 0.0003276097704656422}], "language": "en"}