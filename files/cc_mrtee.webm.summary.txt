The speaker, Tom Van Eyck, discussed the research he and his team have done in the field of cyber-physical systems. These systems interact with the real world, and they often have safety-critical applications. The industry is looking to integrate a commodity operating system like Linux with these systems to allow for software updates and third-party applications. However, this poses a number of challenges, including the potential for bugs or attacks in the commodity OS to affect the safety-critical applications, the need for real-time execution, and the need to share peripherals between the OS and the safety-critical applications. To address these challenges, the team used ARM Trust Zone for hardware isolation, implemented a secure scheduler for real-time execution, and developed a transparent peripheral sharing system. They also demonstrated a use case where they monitored the Linux kernel running state and were able to reboot it while keeping the safety-critical applications running. The research showed that it is possible to ensure availability for safety-critical applications while running a commodity OS on the same system with little developer impact. The system had low latency, addressed security concerns, and could be implemented on low-end embedded devices. The speaker also discussed the limitations of the system and potential areas for further research, such as attestation and cryptographic verification.