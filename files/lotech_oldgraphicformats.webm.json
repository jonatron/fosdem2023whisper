{"text": " It's easy, you know, because my laptop doesn't really like how it's being disconnected from the laptop. Hello, my name is Paris and my talk is about supporting old proprietary graphic formats. Specifically, we're going to be talking about the WMF and the EMF formats from Windows. So what is a WMF? And this also applies to the EMFs, but the WMF is a Windows metafile. It is a graphics format that supports vector and raster operations, mostly vector. It was introduced in the early 1990s in comparison. A different vector format like the SVG was released in 2001. It is composed of a set of GDI drawing commands and structures. These drawing commands are played back in order to render the graphic within what is known as the playback device context. And it is not as widely supported as SVGs. Essentially, this means that you can code this format into existence by writing some GDI functions. What are the difficulties in supporting this format? So the WMF files are application and device dependent. The EMF files later, that were later introduced, try to solve this issue, but the WMF files are more difficult in that way. The device context that is associated with a WMF file cannot be queried. That is, an application cannot retrieve the device resolution data, font metrics, and so on. So if you made a WMF file for a specific device, you cannot really know. If you tried running on a different device, you don't really know the device it was built for. There is a format specification for this, but a lot of things are missing. And there is some edge cases with undefined behavior. And pinpointing the root cause of a buggy file can be tricky. So how do you debug a WMF? Well, there's a lot of ways. I'm going to present the way that I do it, usually. So you would want to get the drawing commands, the GDI drawing commands, and there is multiple ways of doing so, more than I listed. One is MSO Dumper. It is created and used by LibreOffice developers, and it dumps the drawing commands. Another one is the Metafile Explorer. It allows for viewing and stepping through the drawing commands, so you can easily understand which command does what. And then there is the Metafile GDI function, which is defined in the GDI header, which allows to enumerate the drawing commands in WMF file and call a callback function. A similar function also exists for EMF files. This is an example of an WMF drawing command. WMF drawing commands look very similar, of course. It's the function signature. It takes some parameters, and this is what the record looks within the file if you open it in the aforementioned debugger. So it's very similar to the function signature itself. After you obtain the drawing commands, well, you want to debug. Because WMF is such a platform-dependent graphic format, sometimes it's good to compare with other WMF reader implementations like PowerPoint to understand exactly what the graphic looks like in other implementations. Then you would want to identify which drawing commands cause the bug. You would, you know, the drawing commands that you obtained, you would step through them and try to pinpoint what exactly causes the bug. It is important to also reduce the relevant commands as much as possible. WMF files can contain thousands of drawing commands, and stepping through all of them is very tricky. A way to do this is to simplify the problematic file or make a new one that reproduces the bug in LibreOffice. And then you work around these buggy commands to find out what is wrong. Easier said than done, but yeah. Finally, you want to make sure you didn't break something. It is good to create a unit test for your fix using the minimally reproducible example you created before. You run the appropriate test suits. You probably broke something, so you go back to step one. And then you confirm that round-tripping works as expected. And you also, I should mention, monitor the WMF file, the fix you made for WMF file to make sure it doesn't break something in the future. And that is all. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 17.0, "text": " It's easy, you know, because my laptop doesn't really like how it's being disconnected from the laptop.", "tokens": [50364, 467, 311, 1858, 11, 291, 458, 11, 570, 452, 10732, 1177, 380, 534, 411, 577, 309, 311, 885, 29426, 490, 264, 10732, 13, 51214], "temperature": 0.0, "avg_logprob": -0.7876300811767578, "compression_ratio": 1.1318681318681318, "no_speech_prob": 0.4093831479549408}, {"id": 1, "seek": 3000, "start": 30.0, "end": 48.0, "text": " Hello, my name is Paris and my talk is about supporting old proprietary graphic formats.", "tokens": [50364, 2425, 11, 452, 1315, 307, 8380, 293, 452, 751, 307, 466, 7231, 1331, 38992, 14089, 25879, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13902400840412488, "compression_ratio": 1.2941176470588236, "no_speech_prob": 0.11334607005119324}, {"id": 2, "seek": 3000, "start": 48.0, "end": 55.0, "text": " Specifically, we're going to be talking about the WMF and the EMF formats from Windows.", "tokens": [51264, 26058, 11, 321, 434, 516, 281, 312, 1417, 466, 264, 343, 44, 37, 293, 264, 16237, 37, 25879, 490, 8591, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13902400840412488, "compression_ratio": 1.2941176470588236, "no_speech_prob": 0.11334607005119324}, {"id": 3, "seek": 5500, "start": 55.0, "end": 63.0, "text": " So what is a WMF? And this also applies to the EMFs, but the WMF is a Windows metafile.", "tokens": [50364, 407, 437, 307, 257, 343, 44, 37, 30, 400, 341, 611, 13165, 281, 264, 16237, 37, 82, 11, 457, 264, 343, 44, 37, 307, 257, 8591, 1131, 2792, 794, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11278434594472249, "compression_ratio": 1.5353982300884956, "no_speech_prob": 0.06829690933227539}, {"id": 4, "seek": 5500, "start": 63.0, "end": 69.0, "text": " It is a graphics format that supports vector and raster operations, mostly vector.", "tokens": [50764, 467, 307, 257, 11837, 7877, 300, 9346, 8062, 293, 367, 1727, 7705, 11, 5240, 8062, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11278434594472249, "compression_ratio": 1.5353982300884956, "no_speech_prob": 0.06829690933227539}, {"id": 5, "seek": 5500, "start": 69.0, "end": 73.0, "text": " It was introduced in the early 1990s in comparison.", "tokens": [51064, 467, 390, 7268, 294, 264, 2440, 13384, 82, 294, 9660, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11278434594472249, "compression_ratio": 1.5353982300884956, "no_speech_prob": 0.06829690933227539}, {"id": 6, "seek": 5500, "start": 73.0, "end": 78.0, "text": " A different vector format like the SVG was released in 2001.", "tokens": [51264, 316, 819, 8062, 7877, 411, 264, 31910, 38, 390, 4736, 294, 16382, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11278434594472249, "compression_ratio": 1.5353982300884956, "no_speech_prob": 0.06829690933227539}, {"id": 7, "seek": 5500, "start": 78.0, "end": 83.0, "text": " It is composed of a set of GDI drawing commands and structures.", "tokens": [51514, 467, 307, 18204, 295, 257, 992, 295, 460, 3085, 6316, 16901, 293, 9227, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11278434594472249, "compression_ratio": 1.5353982300884956, "no_speech_prob": 0.06829690933227539}, {"id": 8, "seek": 8300, "start": 83.0, "end": 91.0, "text": " These drawing commands are played back in order to render the graphic within what is known as the playback device context.", "tokens": [50364, 1981, 6316, 16901, 366, 3737, 646, 294, 1668, 281, 15529, 264, 14089, 1951, 437, 307, 2570, 382, 264, 37223, 4302, 4319, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07788639337244169, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004593622405081987}, {"id": 9, "seek": 8300, "start": 91.0, "end": 95.0, "text": " And it is not as widely supported as SVGs.", "tokens": [50764, 400, 309, 307, 406, 382, 13371, 8104, 382, 31910, 33715, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07788639337244169, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004593622405081987}, {"id": 10, "seek": 8300, "start": 95.0, "end": 103.0, "text": " Essentially, this means that you can code this format into existence by writing some GDI functions.", "tokens": [50964, 23596, 11, 341, 1355, 300, 291, 393, 3089, 341, 7877, 666, 9123, 538, 3579, 512, 460, 3085, 6828, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07788639337244169, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004593622405081987}, {"id": 11, "seek": 8300, "start": 103.0, "end": 108.0, "text": " What are the difficulties in supporting this format?", "tokens": [51364, 708, 366, 264, 14399, 294, 7231, 341, 7877, 30, 51614], "temperature": 0.0, "avg_logprob": -0.07788639337244169, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004593622405081987}, {"id": 12, "seek": 10800, "start": 108.0, "end": 113.0, "text": " So the WMF files are application and device dependent.", "tokens": [50364, 407, 264, 343, 44, 37, 7098, 366, 3861, 293, 4302, 12334, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10404688661748712, "compression_ratio": 1.72, "no_speech_prob": 0.013311827555298805}, {"id": 13, "seek": 10800, "start": 113.0, "end": 124.0, "text": " The EMF files later, that were later introduced, try to solve this issue, but the WMF files are more difficult in that way.", "tokens": [50614, 440, 16237, 37, 7098, 1780, 11, 300, 645, 1780, 7268, 11, 853, 281, 5039, 341, 2734, 11, 457, 264, 343, 44, 37, 7098, 366, 544, 2252, 294, 300, 636, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10404688661748712, "compression_ratio": 1.72, "no_speech_prob": 0.013311827555298805}, {"id": 14, "seek": 10800, "start": 124.0, "end": 129.0, "text": " The device context that is associated with a WMF file cannot be queried.", "tokens": [51164, 440, 4302, 4319, 300, 307, 6615, 365, 257, 343, 44, 37, 3991, 2644, 312, 7083, 1091, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10404688661748712, "compression_ratio": 1.72, "no_speech_prob": 0.013311827555298805}, {"id": 15, "seek": 10800, "start": 129.0, "end": 135.0, "text": " That is, an application cannot retrieve the device resolution data, font metrics, and so on.", "tokens": [51414, 663, 307, 11, 364, 3861, 2644, 30254, 264, 4302, 8669, 1412, 11, 10703, 16367, 11, 293, 370, 322, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10404688661748712, "compression_ratio": 1.72, "no_speech_prob": 0.013311827555298805}, {"id": 16, "seek": 13500, "start": 135.0, "end": 141.0, "text": " So if you made a WMF file for a specific device, you cannot really know.", "tokens": [50364, 407, 498, 291, 1027, 257, 343, 44, 37, 3991, 337, 257, 2685, 4302, 11, 291, 2644, 534, 458, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10613035904733759, "compression_ratio": 1.5911111111111111, "no_speech_prob": 0.0015932387905195355}, {"id": 17, "seek": 13500, "start": 141.0, "end": 147.0, "text": " If you tried running on a different device, you don't really know the device it was built for.", "tokens": [50664, 759, 291, 3031, 2614, 322, 257, 819, 4302, 11, 291, 500, 380, 534, 458, 264, 4302, 309, 390, 3094, 337, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10613035904733759, "compression_ratio": 1.5911111111111111, "no_speech_prob": 0.0015932387905195355}, {"id": 18, "seek": 13500, "start": 147.0, "end": 152.0, "text": " There is a format specification for this, but a lot of things are missing.", "tokens": [50964, 821, 307, 257, 7877, 31256, 337, 341, 11, 457, 257, 688, 295, 721, 366, 5361, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10613035904733759, "compression_ratio": 1.5911111111111111, "no_speech_prob": 0.0015932387905195355}, {"id": 19, "seek": 13500, "start": 152.0, "end": 156.0, "text": " And there is some edge cases with undefined behavior.", "tokens": [51214, 400, 456, 307, 512, 4691, 3331, 365, 674, 5666, 2001, 5223, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10613035904733759, "compression_ratio": 1.5911111111111111, "no_speech_prob": 0.0015932387905195355}, {"id": 20, "seek": 13500, "start": 156.0, "end": 161.0, "text": " And pinpointing the root cause of a buggy file can be tricky.", "tokens": [51414, 400, 40837, 278, 264, 5593, 3082, 295, 257, 7426, 1480, 3991, 393, 312, 12414, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10613035904733759, "compression_ratio": 1.5911111111111111, "no_speech_prob": 0.0015932387905195355}, {"id": 21, "seek": 16100, "start": 162.0, "end": 164.0, "text": " So how do you debug a WMF?", "tokens": [50414, 407, 577, 360, 291, 24083, 257, 343, 44, 37, 30, 50514], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 22, "seek": 16100, "start": 164.0, "end": 171.0, "text": " Well, there's a lot of ways. I'm going to present the way that I do it, usually.", "tokens": [50514, 1042, 11, 456, 311, 257, 688, 295, 2098, 13, 286, 478, 516, 281, 1974, 264, 636, 300, 286, 360, 309, 11, 2673, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 23, "seek": 16100, "start": 171.0, "end": 175.0, "text": " So you would want to get the drawing commands, the GDI drawing commands,", "tokens": [50864, 407, 291, 576, 528, 281, 483, 264, 6316, 16901, 11, 264, 460, 3085, 6316, 16901, 11, 51064], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 24, "seek": 16100, "start": 175.0, "end": 178.0, "text": " and there is multiple ways of doing so, more than I listed.", "tokens": [51064, 293, 456, 307, 3866, 2098, 295, 884, 370, 11, 544, 813, 286, 10052, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 25, "seek": 16100, "start": 178.0, "end": 180.0, "text": " One is MSO Dumper.", "tokens": [51214, 1485, 307, 7395, 46, 413, 1420, 260, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 26, "seek": 16100, "start": 180.0, "end": 186.0, "text": " It is created and used by LibreOffice developers, and it dumps the drawing commands.", "tokens": [51314, 467, 307, 2942, 293, 1143, 538, 15834, 265, 29745, 573, 8849, 11, 293, 309, 11430, 82, 264, 6316, 16901, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 27, "seek": 16100, "start": 186.0, "end": 189.0, "text": " Another one is the Metafile Explorer.", "tokens": [51614, 3996, 472, 307, 264, 6377, 2792, 794, 31895, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12427799455050764, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0006302428082562983}, {"id": 28, "seek": 18900, "start": 189.0, "end": 193.0, "text": " It allows for viewing and stepping through the drawing commands,", "tokens": [50364, 467, 4045, 337, 17480, 293, 16821, 807, 264, 6316, 16901, 11, 50564], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 29, "seek": 18900, "start": 193.0, "end": 197.0, "text": " so you can easily understand which command does what.", "tokens": [50564, 370, 291, 393, 3612, 1223, 597, 5622, 775, 437, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 30, "seek": 18900, "start": 197.0, "end": 202.0, "text": " And then there is the Metafile GDI function, which is defined in the GDI header,", "tokens": [50764, 400, 550, 456, 307, 264, 6377, 2792, 794, 460, 3085, 2445, 11, 597, 307, 7642, 294, 264, 460, 3085, 23117, 11, 51014], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 31, "seek": 18900, "start": 202.0, "end": 207.0, "text": " which allows to enumerate the drawing commands in WMF file and call a callback function.", "tokens": [51014, 597, 4045, 281, 465, 15583, 473, 264, 6316, 16901, 294, 343, 44, 37, 3991, 293, 818, 257, 818, 3207, 2445, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 32, "seek": 18900, "start": 207.0, "end": 212.0, "text": " A similar function also exists for EMF files.", "tokens": [51264, 316, 2531, 2445, 611, 8198, 337, 16237, 37, 7098, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 33, "seek": 18900, "start": 212.0, "end": 215.0, "text": " This is an example of an WMF drawing command.", "tokens": [51514, 639, 307, 364, 1365, 295, 364, 343, 44, 37, 6316, 5622, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 34, "seek": 18900, "start": 215.0, "end": 217.0, "text": " WMF drawing commands look very similar, of course.", "tokens": [51664, 343, 44, 37, 6316, 16901, 574, 588, 2531, 11, 295, 1164, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08232803682310391, "compression_ratio": 1.8033472803347281, "no_speech_prob": 0.00035676354309543967}, {"id": 35, "seek": 21700, "start": 217.0, "end": 220.0, "text": " It's the function signature. It takes some parameters,", "tokens": [50364, 467, 311, 264, 2445, 13397, 13, 467, 2516, 512, 9834, 11, 50514], "temperature": 0.0, "avg_logprob": -0.08102892105837903, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.0005325794336386025}, {"id": 36, "seek": 21700, "start": 220.0, "end": 228.0, "text": " and this is what the record looks within the file if you open it in the aforementioned debugger.", "tokens": [50514, 293, 341, 307, 437, 264, 2136, 1542, 1951, 264, 3991, 498, 291, 1269, 309, 294, 264, 48927, 46842, 24083, 1321, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08102892105837903, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.0005325794336386025}, {"id": 37, "seek": 21700, "start": 228.0, "end": 234.0, "text": " So it's very similar to the function signature itself.", "tokens": [50914, 407, 309, 311, 588, 2531, 281, 264, 2445, 13397, 2564, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08102892105837903, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.0005325794336386025}, {"id": 38, "seek": 21700, "start": 234.0, "end": 239.0, "text": " After you obtain the drawing commands, well, you want to debug.", "tokens": [51214, 2381, 291, 12701, 264, 6316, 16901, 11, 731, 11, 291, 528, 281, 24083, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08102892105837903, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.0005325794336386025}, {"id": 39, "seek": 21700, "start": 239.0, "end": 244.0, "text": " Because WMF is such a platform-dependent graphic format,", "tokens": [51464, 1436, 343, 44, 37, 307, 1270, 257, 3663, 12, 36763, 317, 14089, 7877, 11, 51714], "temperature": 0.0, "avg_logprob": -0.08102892105837903, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.0005325794336386025}, {"id": 40, "seek": 24400, "start": 244.0, "end": 252.0, "text": " sometimes it's good to compare with other WMF reader implementations like PowerPoint", "tokens": [50364, 2171, 309, 311, 665, 281, 6794, 365, 661, 343, 44, 37, 15149, 4445, 763, 411, 25584, 50764], "temperature": 0.0, "avg_logprob": -0.08424027516291692, "compression_ratio": 1.572972972972973, "no_speech_prob": 0.0007312249508686364}, {"id": 41, "seek": 24400, "start": 252.0, "end": 260.0, "text": " to understand exactly what the graphic looks like in other implementations.", "tokens": [50764, 281, 1223, 2293, 437, 264, 14089, 1542, 411, 294, 661, 4445, 763, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08424027516291692, "compression_ratio": 1.572972972972973, "no_speech_prob": 0.0007312249508686364}, {"id": 42, "seek": 24400, "start": 260.0, "end": 265.0, "text": " Then you would want to identify which drawing commands cause the bug.", "tokens": [51164, 1396, 291, 576, 528, 281, 5876, 597, 6316, 16901, 3082, 264, 7426, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08424027516291692, "compression_ratio": 1.572972972972973, "no_speech_prob": 0.0007312249508686364}, {"id": 43, "seek": 24400, "start": 265.0, "end": 268.0, "text": " You would, you know, the drawing commands that you obtained,", "tokens": [51414, 509, 576, 11, 291, 458, 11, 264, 6316, 16901, 300, 291, 14879, 11, 51564], "temperature": 0.0, "avg_logprob": -0.08424027516291692, "compression_ratio": 1.572972972972973, "no_speech_prob": 0.0007312249508686364}, {"id": 44, "seek": 26800, "start": 268.0, "end": 275.0, "text": " you would step through them and try to pinpoint what exactly causes the bug.", "tokens": [50364, 291, 576, 1823, 807, 552, 293, 853, 281, 40837, 437, 2293, 7700, 264, 7426, 13, 50714], "temperature": 0.0, "avg_logprob": -0.03643838127890786, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.002550120698288083}, {"id": 45, "seek": 26800, "start": 275.0, "end": 280.0, "text": " It is important to also reduce the relevant commands as much as possible.", "tokens": [50714, 467, 307, 1021, 281, 611, 5407, 264, 7340, 16901, 382, 709, 382, 1944, 13, 50964], "temperature": 0.0, "avg_logprob": -0.03643838127890786, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.002550120698288083}, {"id": 46, "seek": 26800, "start": 280.0, "end": 284.0, "text": " WMF files can contain thousands of drawing commands,", "tokens": [50964, 343, 44, 37, 7098, 393, 5304, 5383, 295, 6316, 16901, 11, 51164], "temperature": 0.0, "avg_logprob": -0.03643838127890786, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.002550120698288083}, {"id": 47, "seek": 26800, "start": 284.0, "end": 288.0, "text": " and stepping through all of them is very tricky.", "tokens": [51164, 293, 16821, 807, 439, 295, 552, 307, 588, 12414, 13, 51364], "temperature": 0.0, "avg_logprob": -0.03643838127890786, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.002550120698288083}, {"id": 48, "seek": 26800, "start": 288.0, "end": 291.0, "text": " A way to do this is to simplify the problematic file", "tokens": [51364, 316, 636, 281, 360, 341, 307, 281, 20460, 264, 19011, 3991, 51514], "temperature": 0.0, "avg_logprob": -0.03643838127890786, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.002550120698288083}, {"id": 49, "seek": 26800, "start": 291.0, "end": 296.0, "text": " or make a new one that reproduces the bug in LibreOffice.", "tokens": [51514, 420, 652, 257, 777, 472, 300, 11408, 887, 264, 7426, 294, 15834, 265, 29745, 573, 13, 51764], "temperature": 0.0, "avg_logprob": -0.03643838127890786, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.002550120698288083}, {"id": 50, "seek": 29600, "start": 296.0, "end": 302.0, "text": " And then you work around these buggy commands to find out what is wrong.", "tokens": [50364, 400, 550, 291, 589, 926, 613, 7426, 1480, 16901, 281, 915, 484, 437, 307, 2085, 13, 50664], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 51, "seek": 29600, "start": 302.0, "end": 306.0, "text": " Easier said than done, but yeah.", "tokens": [50664, 46879, 811, 848, 813, 1096, 11, 457, 1338, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 52, "seek": 29600, "start": 306.0, "end": 310.0, "text": " Finally, you want to make sure you didn't break something.", "tokens": [50864, 6288, 11, 291, 528, 281, 652, 988, 291, 994, 380, 1821, 746, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 53, "seek": 29600, "start": 310.0, "end": 316.0, "text": " It is good to create a unit test for your fix using the minimally reproducible example you created before.", "tokens": [51064, 467, 307, 665, 281, 1884, 257, 4985, 1500, 337, 428, 3191, 1228, 264, 4464, 379, 11408, 32128, 1365, 291, 2942, 949, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 54, "seek": 29600, "start": 316.0, "end": 318.0, "text": " You run the appropriate test suits.", "tokens": [51364, 509, 1190, 264, 6854, 1500, 15278, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 55, "seek": 29600, "start": 318.0, "end": 321.0, "text": " You probably broke something, so you go back to step one.", "tokens": [51464, 509, 1391, 6902, 746, 11, 370, 291, 352, 646, 281, 1823, 472, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 56, "seek": 29600, "start": 321.0, "end": 325.0, "text": " And then you confirm that round-tripping works as expected.", "tokens": [51614, 400, 550, 291, 9064, 300, 3098, 12, 83, 470, 3759, 1985, 382, 5176, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08829652612859552, "compression_ratio": 1.628352490421456, "no_speech_prob": 0.0003504317137412727}, {"id": 57, "seek": 32500, "start": 325.0, "end": 330.0, "text": " And you also, I should mention, monitor the WMF file,", "tokens": [50364, 400, 291, 611, 11, 286, 820, 2152, 11, 6002, 264, 343, 44, 37, 3991, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1221610050575406, "compression_ratio": 1.3070866141732282, "no_speech_prob": 0.0048943557776510715}, {"id": 58, "seek": 32500, "start": 330.0, "end": 336.0, "text": " the fix you made for WMF file to make sure it doesn't break something in the future.", "tokens": [50614, 264, 3191, 291, 1027, 337, 343, 44, 37, 3991, 281, 652, 988, 309, 1177, 380, 1821, 746, 294, 264, 2027, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1221610050575406, "compression_ratio": 1.3070866141732282, "no_speech_prob": 0.0048943557776510715}, {"id": 59, "seek": 32500, "start": 336.0, "end": 339.0, "text": " And that is all. Thank you.", "tokens": [50914, 400, 300, 307, 439, 13, 1044, 291, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1221610050575406, "compression_ratio": 1.3070866141732282, "no_speech_prob": 0.0048943557776510715}], "language": "en"}