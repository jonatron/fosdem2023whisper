{"text": " Hello, everyone. It's good to be back. It's been a while. This is my first time giving a talk here. I'm really pleased to be here. My name's Joe. I am a coder. I work in London for local government. I work a lot with geospatial data, and I am a Python programmer. Have we got any Python coders in today? Anyone using Jupyter? Cool. Right. So let's go. So in lockdown in 21, we had a census in England and Wales, and the data is coming now. Most of the data, all of the data, sorry, is spatial data. So we want to look at this on a map. Why? Most of the data is geospatial. In local government, everything that we do generally happens somewhere, whether it's collecting a bin, looking after young people, looking after old people, cleaning the streets. We always have to think about where this is happening. Apparently, 60% of all data is geospatial data. So I spent a lot of my time making maps in terms of data of this. Now, I'm going to be focusing on one part of the census data set today, and that's the east end of London in an area called Tower Hamlets. This may be familiar to some people if you've ever seen places like Columbia Road, Bethnal Green, Canary Wharf. These are all parts of the east end of London, and this is the main area I'm going to be talking about. So where is Tower Hamlets in London? So what you can see here is a very small area. It's 20 square kilometers, but this is quite a special area because in the whole of England and Wales, it has the highest population density. It has the most people packed into a small area. It also has the fastest growing population, so it's becoming more and more dense. So in terms of providing services for residents, we need to have a big think about where all the people are and how they fit in. Now, when we make maps, the first thing we usually do is we make a coropleth map. However, the data set for population density in our area, and I do apologize, I couldn't fit it all on screen. It doesn't appear very well as a coropleth. The reason is because the data set is not very evenly distributed. There is, as we will see, some areas with extremely high population density. So over here you've got Whitechapel. We have very high population density in Whitechapel. Over here we have a new development which used to be industrial land. Again, very, very high density developments, big, big towers full of people. And then we also have, just to the south of the financial sector, some areas of very high population density with a lot of people packed into a small place. But in terms of the data viz, this map doesn't really help very much. So the coropleth data viz didn't work for us. So we began to think, what else can we try? And we checked the data distribution, and sure enough, we've got some serious outliers. This is why the coropleth map didn't work very well for us. So what did we do next? We tried to log-transform the data. And yeah, you can see, you know, this area here. You can begin to see the density there. There's quite a few large developments with a lot of people squeezed in. Whitechapel, you don't see so much happening there. But you do see, just to the south of the financial sector, high density of population. The areas with low density, this is where all the banks are. So obviously, there's no people living in there. This is an old dock near to the Tower of London. There's no people living there. There's some very nice pubs, though. If you ever find yourself in that area, the Dickens Inn is excellent. I can recommend that to everybody. And then up here in the north, we have Victoria Park, which is where the East End borders with Hackney. And obviously, there's no people there, at least having their address registered there. Log-transform data looks better on a coropleth map. However, you can see the legend. You lose the data. So you can try to fix the legend. But we want to write as little code as we possibly can. We don't want to keep fixing legends and things like that. So we began to think about other ways to visualize our data set. So what did we do? I am a Python coder, but there's a really nice package in R called Cartogram. And this is a technique called a density equalization algorithm that basically turns your data set into a Voronoi first, and then it rescales the polygons from the Voronoi relative to an attribute of the data. This technique is quite popular. There's a wonderful geographer called Danny Dooling, who has an amazing website called World Mapper, which I strongly recommend you have a look at. And they do things like showing poverty, inequality, food pressure all around the world. And they size the geographies relative to the attributes of the geospatial data. So this is a great technique. There is one issue here, though, is that if you want to overlay different layers, then it becomes difficult. And also, the map does look a little bit unfamiliar as well. But it does show particularly where you have like clustering, where you have a number of census areas, and I'm going to say a little bit more about census areas, where you have a few together that have high data attribute value, then they all get bigger together. So what we can see here is just to the south of the financial sector, you can see there's a lot of worker bees all crammed into this place, and then it increases the volume on the map. So it's a nice data vis, but still we have a small challenge if we want to add more data over the top. And also, it's a bit unfamiliar for people that don't use cartograms. So this is a map made using Data Rapper. It's a very nice website, and they have something called a symbol plot. And what this does is it just basically shows little mountains, little peaks, that show the value of the data attribute that you're interested in at the place where that data is happening. And so again, we can see over here, you've got Whitechapel, lots of people packed in there. Just to the south of the financial sector, lots of people packed in there. The new developments here by the river in Blackwell, and here by the river in the old industrial zone. So this is quite interesting. It gives us some context, and it gives us the data. I really like this data vis, but it's Data Rapper, so it's not FOS, and it's not Python, and I like to use Python. So it was great, but it helped, but it didn't do everything that we needed it to do. The other thing that you will notice, and I'll try to explain this briefly, is that we have one really high value here. And there's a reason for this. It's an outlier, because actually it's this value here. It's an outlier, because, and the reason why it's an outlier is because the actual census area is really, really small. And the thing about the people who produce the census data is that they have to create census areas using roughly 100 to 600 people. Generally speaking, it's about 300 people, but they have to make it all fit together like a big jigsaw puzzle. So sometimes, you know, it's hard for them to make it work really well. So in this case, this census area with really high density is actually just one building. And so it's not a particularly big building, but everyone squeezed in there. So yes, so the data is quite hard to work with, but it is interesting. So when I was working with Data Rapper, I really liked it, and it did remind me of when I was young and I was reading Lord of the Rings books, I used to really like the map at the front of all these mountains, showing the misty mountains in those books. And so I was thinking, I could probably make a mountain with Python. How hard can it be? It turns out it's really easy. This is the essence of the library. It's just one function. You take a point on a map, you turn that point into a line. The line has a start point, which is just a couple of points of longitude, a tiny little bit of longitude to the west of your point. Then you convert your point to a latitude, which is kind of like a proxy for the height of the mountain, using some kind of algorithm that you choose. In my case, I'm just like using a range. So I take the minimum and maximum value of the input range, which is a separate function here. And range one is essentially the minimum population density and the maximum. And then I convert that to latitude values. And then the third point on the line is just a little bit of longitude to the east of my point. And then you use that to create a small triangle, really easy, really easy, and a lot of fun as well. So this is what I made with Python. And it's very similar to the data wrapper map, but I was going for like a kind of hand drawn kind of a look to make it look like something from Lord of the Rings. And, you know, it's the same thing. You've got Whitechapel here. You've got the financial sector here, and so on and so on. So that was fun. But, you know, population density, we were just talking about the reasons why it's a messy data set. There's one place in Chelsea, which has a population density of two million people per square kilometer. So this is a very difficult data set to represent using any tools available. So, you know, it's interesting. The other thing about Kensington and Chelsea is this is where Grenfell Tower is, if anybody knows about that story. This is where it happened. So let's try some other data sets to see if they're really messy. This is people that live in one bedroom homes. So this is tiny little flats, you know, filled with people. And so you can see all the worker bees for the financial sector. A lot of those are living in one bedroom flats. And actually, the new builds. This is a very new development here. And this is a very new development here. So it looks like people who are building homes now are building a lot of one bedroom homes. Two bedroom homes. Generally, everything is kind of the same. Nothing really jumps out here. Three bedroom homes. What you can start to see with three bedroom homes is that, yeah, it's generally even. But actually, in this area here, which is a bow, which is near the bow bow's church, which is used to decide if someone's a traditional East End cockney or not. That's kind of this area, really. So the cockneys seem to have three bedroom homes, generally. And then four or more. And what you see here is in the areas where the financial workers live, there's still quite a lot of four bedroom homes. But in some of these new build areas, there's very, very few relative to the rest of the area. So let's look at another slightly more famous area. This is Westminster in central London. And so you can see this is where Hyde Park is. There's no one living there. Again, this is the population density dataset. And then you've got an open street map based map just to help with orientation. And then in a future version of the module, I think I might do some more stuff with open street map. And then if you look at some of the outer London areas, and this is where I live, you can see like areas of urban density, but you can also see some very suburban areas where the population density is lower. This is like where most people are living in houses, basically. And you can also see green space. So we're nearly finished. I just want to give a massive shout to NB Dev. It's really good if you use Jupiter. Just check it out. Number one, if you're trying to do version control on Jupiter notebooks, it helps you with any clashes, any merge conflicts because it removes the metadata in the JSON that sometimes causes conflicts. If you have a team of people working on the same notebook, this is a real lifesaver. And also it just bakes in good practice. So it means that your code gets shared on GitHub really easily. It helps you or encourages you at least to write good documentation for your team and the community. It also encourages you to write good tests. And it enables you to publish modules. So big shout to them. I'd also like to thank Jarek, who has produced a wonderful PWA for FOSSTEM called Sejourner OX. Do check it out. It's a really good way of looking at the schedule for FOSSTEM and you can watch the videos with Sejourner OX. And also Ed, who's going to be giving a really cool talk on OSM and Wikidata. And finally, I'd like to thank all the council coders everywhere. Thanks for having me.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.08, "text": " Hello, everyone. It's good to be back. It's been a while. This is my first time giving", "tokens": [2425, 11, 1518, 13, 467, 311, 665, 281, 312, 646, 13, 467, 311, 668, 257, 1339, 13, 639, 307, 452, 700, 565, 2902], "temperature": 0.0, "avg_logprob": -0.1436790605870689, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.21701757609844208}, {"id": 1, "seek": 0, "start": 11.08, "end": 18.96, "text": " a talk here. I'm really pleased to be here. My name's Joe. I am a coder. I work in London", "tokens": [257, 751, 510, 13, 286, 478, 534, 10587, 281, 312, 510, 13, 1222, 1315, 311, 6807, 13, 286, 669, 257, 17656, 260, 13, 286, 589, 294, 7042], "temperature": 0.0, "avg_logprob": -0.1436790605870689, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.21701757609844208}, {"id": 2, "seek": 0, "start": 18.96, "end": 26.72, "text": " for local government. I work a lot with geospatial data, and I am a Python programmer. Have we", "tokens": [337, 2654, 2463, 13, 286, 589, 257, 688, 365, 1519, 2763, 267, 831, 1412, 11, 293, 286, 669, 257, 15329, 32116, 13, 3560, 321], "temperature": 0.0, "avg_logprob": -0.1436790605870689, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.21701757609844208}, {"id": 3, "seek": 2672, "start": 26.72, "end": 38.36, "text": " got any Python coders in today? Anyone using Jupyter? Cool. Right. So let's go. So in lockdown", "tokens": [658, 604, 15329, 17656, 433, 294, 965, 30, 14643, 1228, 22125, 88, 391, 30, 8561, 13, 1779, 13, 407, 718, 311, 352, 13, 407, 294, 17267], "temperature": 0.0, "avg_logprob": -0.12618418773972845, "compression_ratio": 1.436842105263158, "no_speech_prob": 0.00024415497318841517}, {"id": 4, "seek": 2672, "start": 38.36, "end": 46.72, "text": " in 21, we had a census in England and Wales, and the data is coming now. Most of the data,", "tokens": [294, 5080, 11, 321, 632, 257, 23725, 294, 8196, 293, 16495, 11, 293, 264, 1412, 307, 1348, 586, 13, 4534, 295, 264, 1412, 11], "temperature": 0.0, "avg_logprob": -0.12618418773972845, "compression_ratio": 1.436842105263158, "no_speech_prob": 0.00024415497318841517}, {"id": 5, "seek": 2672, "start": 46.72, "end": 52.96, "text": " all of the data, sorry, is spatial data. So we want to look at this on a map. Why? Most", "tokens": [439, 295, 264, 1412, 11, 2597, 11, 307, 23598, 1412, 13, 407, 321, 528, 281, 574, 412, 341, 322, 257, 4471, 13, 1545, 30, 4534], "temperature": 0.0, "avg_logprob": -0.12618418773972845, "compression_ratio": 1.436842105263158, "no_speech_prob": 0.00024415497318841517}, {"id": 6, "seek": 5296, "start": 52.96, "end": 58.96, "text": " of the data is geospatial. In local government, everything that we do generally happens somewhere,", "tokens": [295, 264, 1412, 307, 1519, 2763, 267, 831, 13, 682, 2654, 2463, 11, 1203, 300, 321, 360, 5101, 2314, 4079, 11], "temperature": 0.0, "avg_logprob": -0.11612731807834499, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.4510201253870036e-05}, {"id": 7, "seek": 5296, "start": 58.96, "end": 64.52, "text": " whether it's collecting a bin, looking after young people, looking after old people, cleaning", "tokens": [1968, 309, 311, 12510, 257, 5171, 11, 1237, 934, 2037, 561, 11, 1237, 934, 1331, 561, 11, 8924], "temperature": 0.0, "avg_logprob": -0.11612731807834499, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.4510201253870036e-05}, {"id": 8, "seek": 5296, "start": 64.52, "end": 71.48, "text": " the streets. We always have to think about where this is happening. Apparently, 60% of", "tokens": [264, 8481, 13, 492, 1009, 362, 281, 519, 466, 689, 341, 307, 2737, 13, 16755, 11, 4060, 4, 295], "temperature": 0.0, "avg_logprob": -0.11612731807834499, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.4510201253870036e-05}, {"id": 9, "seek": 5296, "start": 71.48, "end": 78.92, "text": " all data is geospatial data. So I spent a lot of my time making maps in terms of data", "tokens": [439, 1412, 307, 1519, 2763, 267, 831, 1412, 13, 407, 286, 4418, 257, 688, 295, 452, 565, 1455, 11317, 294, 2115, 295, 1412], "temperature": 0.0, "avg_logprob": -0.11612731807834499, "compression_ratio": 1.6367713004484306, "no_speech_prob": 1.4510201253870036e-05}, {"id": 10, "seek": 7892, "start": 78.92, "end": 86.24000000000001, "text": " of this. Now, I'm going to be focusing on one part of the census data set today, and", "tokens": [295, 341, 13, 823, 11, 286, 478, 516, 281, 312, 8416, 322, 472, 644, 295, 264, 23725, 1412, 992, 965, 11, 293], "temperature": 0.0, "avg_logprob": -0.13961694637934366, "compression_ratio": 1.5892857142857142, "no_speech_prob": 4.7235200327122584e-05}, {"id": 11, "seek": 7892, "start": 86.24000000000001, "end": 93.28, "text": " that's the east end of London in an area called Tower Hamlets. This may be familiar to some", "tokens": [300, 311, 264, 10648, 917, 295, 7042, 294, 364, 1859, 1219, 17877, 8234, 12541, 13, 639, 815, 312, 4963, 281, 512], "temperature": 0.0, "avg_logprob": -0.13961694637934366, "compression_ratio": 1.5892857142857142, "no_speech_prob": 4.7235200327122584e-05}, {"id": 12, "seek": 7892, "start": 93.28, "end": 103.32000000000001, "text": " people if you've ever seen places like Columbia Road, Bethnal Green, Canary Wharf. These are", "tokens": [561, 498, 291, 600, 1562, 1612, 3190, 411, 17339, 11507, 11, 14011, 4660, 6969, 11, 1664, 822, 506, 30224, 13, 1981, 366], "temperature": 0.0, "avg_logprob": -0.13961694637934366, "compression_ratio": 1.5892857142857142, "no_speech_prob": 4.7235200327122584e-05}, {"id": 13, "seek": 7892, "start": 103.32000000000001, "end": 107.88, "text": " all parts of the east end of London, and this is the main area I'm going to be talking", "tokens": [439, 3166, 295, 264, 10648, 917, 295, 7042, 11, 293, 341, 307, 264, 2135, 1859, 286, 478, 516, 281, 312, 1417], "temperature": 0.0, "avg_logprob": -0.13961694637934366, "compression_ratio": 1.5892857142857142, "no_speech_prob": 4.7235200327122584e-05}, {"id": 14, "seek": 10788, "start": 107.88, "end": 117.6, "text": " about. So where is Tower Hamlets in London? So what you can see here is a very small area.", "tokens": [466, 13, 407, 689, 307, 17877, 8234, 12541, 294, 7042, 30, 407, 437, 291, 393, 536, 510, 307, 257, 588, 1359, 1859, 13], "temperature": 0.0, "avg_logprob": -0.135474980532468, "compression_ratio": 1.5913043478260869, "no_speech_prob": 5.140014400240034e-05}, {"id": 15, "seek": 10788, "start": 117.6, "end": 124.03999999999999, "text": " It's 20 square kilometers, but this is quite a special area because in the whole of England", "tokens": [467, 311, 945, 3732, 13904, 11, 457, 341, 307, 1596, 257, 2121, 1859, 570, 294, 264, 1379, 295, 8196], "temperature": 0.0, "avg_logprob": -0.135474980532468, "compression_ratio": 1.5913043478260869, "no_speech_prob": 5.140014400240034e-05}, {"id": 16, "seek": 10788, "start": 124.03999999999999, "end": 130.04, "text": " and Wales, it has the highest population density. It has the most people packed into a small", "tokens": [293, 16495, 11, 309, 575, 264, 6343, 4415, 10305, 13, 467, 575, 264, 881, 561, 13265, 666, 257, 1359], "temperature": 0.0, "avg_logprob": -0.135474980532468, "compression_ratio": 1.5913043478260869, "no_speech_prob": 5.140014400240034e-05}, {"id": 17, "seek": 10788, "start": 130.04, "end": 136.88, "text": " area. It also has the fastest growing population, so it's becoming more and more dense. So", "tokens": [1859, 13, 467, 611, 575, 264, 14573, 4194, 4415, 11, 370, 309, 311, 5617, 544, 293, 544, 18011, 13, 407], "temperature": 0.0, "avg_logprob": -0.135474980532468, "compression_ratio": 1.5913043478260869, "no_speech_prob": 5.140014400240034e-05}, {"id": 18, "seek": 13688, "start": 136.88, "end": 143.35999999999999, "text": " in terms of providing services for residents, we need to have a big think about where all", "tokens": [294, 2115, 295, 6530, 3328, 337, 9630, 11, 321, 643, 281, 362, 257, 955, 519, 466, 689, 439], "temperature": 0.0, "avg_logprob": -0.1365788956763039, "compression_ratio": 1.5284090909090908, "no_speech_prob": 2.986528488690965e-05}, {"id": 19, "seek": 13688, "start": 143.35999999999999, "end": 151.12, "text": " the people are and how they fit in. Now, when we make maps, the first thing we usually do", "tokens": [264, 561, 366, 293, 577, 436, 3318, 294, 13, 823, 11, 562, 321, 652, 11317, 11, 264, 700, 551, 321, 2673, 360], "temperature": 0.0, "avg_logprob": -0.1365788956763039, "compression_ratio": 1.5284090909090908, "no_speech_prob": 2.986528488690965e-05}, {"id": 20, "seek": 13688, "start": 151.12, "end": 160.24, "text": " is we make a coropleth map. However, the data set for population density in our area, and", "tokens": [307, 321, 652, 257, 1181, 404, 2631, 71, 4471, 13, 2908, 11, 264, 1412, 992, 337, 4415, 10305, 294, 527, 1859, 11, 293], "temperature": 0.0, "avg_logprob": -0.1365788956763039, "compression_ratio": 1.5284090909090908, "no_speech_prob": 2.986528488690965e-05}, {"id": 21, "seek": 16024, "start": 160.24, "end": 167.44, "text": " I do apologize, I couldn't fit it all on screen. It doesn't appear very well as a coropleth.", "tokens": [286, 360, 12328, 11, 286, 2809, 380, 3318, 309, 439, 322, 2568, 13, 467, 1177, 380, 4204, 588, 731, 382, 257, 1181, 404, 2631, 71, 13], "temperature": 0.0, "avg_logprob": -0.09820717880406331, "compression_ratio": 1.6431718061674008, "no_speech_prob": 8.46470175019931e-06}, {"id": 22, "seek": 16024, "start": 167.44, "end": 173.36, "text": " The reason is because the data set is not very evenly distributed. There is, as we will", "tokens": [440, 1778, 307, 570, 264, 1412, 992, 307, 406, 588, 17658, 12631, 13, 821, 307, 11, 382, 321, 486], "temperature": 0.0, "avg_logprob": -0.09820717880406331, "compression_ratio": 1.6431718061674008, "no_speech_prob": 8.46470175019931e-06}, {"id": 23, "seek": 16024, "start": 173.36, "end": 182.12, "text": " see, some areas with extremely high population density. So over here you've got Whitechapel.", "tokens": [536, 11, 512, 3179, 365, 4664, 1090, 4415, 10305, 13, 407, 670, 510, 291, 600, 658, 5552, 339, 569, 338, 13], "temperature": 0.0, "avg_logprob": -0.09820717880406331, "compression_ratio": 1.6431718061674008, "no_speech_prob": 8.46470175019931e-06}, {"id": 24, "seek": 16024, "start": 182.12, "end": 187.84, "text": " We have very high population density in Whitechapel. Over here we have a new development which used", "tokens": [492, 362, 588, 1090, 4415, 10305, 294, 5552, 339, 569, 338, 13, 4886, 510, 321, 362, 257, 777, 3250, 597, 1143], "temperature": 0.0, "avg_logprob": -0.09820717880406331, "compression_ratio": 1.6431718061674008, "no_speech_prob": 8.46470175019931e-06}, {"id": 25, "seek": 18784, "start": 187.84, "end": 193.44, "text": " to be industrial land. Again, very, very high density developments, big, big towers full", "tokens": [281, 312, 9987, 2117, 13, 3764, 11, 588, 11, 588, 1090, 10305, 20862, 11, 955, 11, 955, 25045, 1577], "temperature": 0.0, "avg_logprob": -0.1146852542192508, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.9460508812917396e-05}, {"id": 26, "seek": 18784, "start": 193.44, "end": 199.68, "text": " of people. And then we also have, just to the south of the financial sector, some areas", "tokens": [295, 561, 13, 400, 550, 321, 611, 362, 11, 445, 281, 264, 7377, 295, 264, 4669, 6977, 11, 512, 3179], "temperature": 0.0, "avg_logprob": -0.1146852542192508, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.9460508812917396e-05}, {"id": 27, "seek": 18784, "start": 199.68, "end": 205.28, "text": " of very high population density with a lot of people packed into a small place. But in", "tokens": [295, 588, 1090, 4415, 10305, 365, 257, 688, 295, 561, 13265, 666, 257, 1359, 1081, 13, 583, 294], "temperature": 0.0, "avg_logprob": -0.1146852542192508, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.9460508812917396e-05}, {"id": 28, "seek": 18784, "start": 205.28, "end": 210.72, "text": " terms of the data viz, this map doesn't really help very much. So the coropleth data viz", "tokens": [2115, 295, 264, 1412, 371, 590, 11, 341, 4471, 1177, 380, 534, 854, 588, 709, 13, 407, 264, 1181, 404, 2631, 71, 1412, 371, 590], "temperature": 0.0, "avg_logprob": -0.1146852542192508, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.9460508812917396e-05}, {"id": 29, "seek": 18784, "start": 210.72, "end": 216.08, "text": " didn't work for us. So we began to think, what else can we try? And we checked the data", "tokens": [994, 380, 589, 337, 505, 13, 407, 321, 4283, 281, 519, 11, 437, 1646, 393, 321, 853, 30, 400, 321, 10033, 264, 1412], "temperature": 0.0, "avg_logprob": -0.1146852542192508, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.9460508812917396e-05}, {"id": 30, "seek": 21608, "start": 216.08, "end": 221.52, "text": " distribution, and sure enough, we've got some serious outliers. This is why the coropleth", "tokens": [7316, 11, 293, 988, 1547, 11, 321, 600, 658, 512, 3156, 484, 23646, 13, 639, 307, 983, 264, 1181, 404, 2631, 71], "temperature": 0.0, "avg_logprob": -0.1226797103881836, "compression_ratio": 1.4916666666666667, "no_speech_prob": 8.452068141195923e-05}, {"id": 31, "seek": 21608, "start": 221.52, "end": 228.24, "text": " map didn't work very well for us. So what did we do next? We tried to log-transform", "tokens": [4471, 994, 380, 589, 588, 731, 337, 505, 13, 407, 437, 630, 321, 360, 958, 30, 492, 3031, 281, 3565, 12, 24999, 837], "temperature": 0.0, "avg_logprob": -0.1226797103881836, "compression_ratio": 1.4916666666666667, "no_speech_prob": 8.452068141195923e-05}, {"id": 32, "seek": 21608, "start": 228.24, "end": 235.44, "text": " the data. And yeah, you can see, you know, this area here. You can begin to see the density", "tokens": [264, 1412, 13, 400, 1338, 11, 291, 393, 536, 11, 291, 458, 11, 341, 1859, 510, 13, 509, 393, 1841, 281, 536, 264, 10305], "temperature": 0.0, "avg_logprob": -0.1226797103881836, "compression_ratio": 1.4916666666666667, "no_speech_prob": 8.452068141195923e-05}, {"id": 33, "seek": 21608, "start": 235.44, "end": 241.32000000000002, "text": " there. There's quite a few large developments with a lot of people squeezed in. Whitechapel,", "tokens": [456, 13, 821, 311, 1596, 257, 1326, 2416, 20862, 365, 257, 688, 295, 561, 39470, 294, 13, 5552, 339, 569, 338, 11], "temperature": 0.0, "avg_logprob": -0.1226797103881836, "compression_ratio": 1.4916666666666667, "no_speech_prob": 8.452068141195923e-05}, {"id": 34, "seek": 24132, "start": 241.32, "end": 246.2, "text": " you don't see so much happening there. But you do see, just to the south of the financial", "tokens": [291, 500, 380, 536, 370, 709, 2737, 456, 13, 583, 291, 360, 536, 11, 445, 281, 264, 7377, 295, 264, 4669], "temperature": 0.0, "avg_logprob": -0.14176424414710662, "compression_ratio": 1.6884615384615385, "no_speech_prob": 1.4677488252345938e-05}, {"id": 35, "seek": 24132, "start": 246.2, "end": 253.28, "text": " sector, high density of population. The areas with low density, this is where all the banks", "tokens": [6977, 11, 1090, 10305, 295, 4415, 13, 440, 3179, 365, 2295, 10305, 11, 341, 307, 689, 439, 264, 10237], "temperature": 0.0, "avg_logprob": -0.14176424414710662, "compression_ratio": 1.6884615384615385, "no_speech_prob": 1.4677488252345938e-05}, {"id": 36, "seek": 24132, "start": 253.28, "end": 259.56, "text": " are. So obviously, there's no people living in there. This is an old dock near to the", "tokens": [366, 13, 407, 2745, 11, 456, 311, 572, 561, 2647, 294, 456, 13, 639, 307, 364, 1331, 20929, 2651, 281, 264], "temperature": 0.0, "avg_logprob": -0.14176424414710662, "compression_ratio": 1.6884615384615385, "no_speech_prob": 1.4677488252345938e-05}, {"id": 37, "seek": 24132, "start": 259.56, "end": 263.88, "text": " Tower of London. There's no people living there. There's some very nice pubs, though.", "tokens": [17877, 295, 7042, 13, 821, 311, 572, 561, 2647, 456, 13, 821, 311, 512, 588, 1481, 1535, 82, 11, 1673, 13], "temperature": 0.0, "avg_logprob": -0.14176424414710662, "compression_ratio": 1.6884615384615385, "no_speech_prob": 1.4677488252345938e-05}, {"id": 38, "seek": 24132, "start": 263.88, "end": 269.68, "text": " If you ever find yourself in that area, the Dickens Inn is excellent. I can recommend", "tokens": [759, 291, 1562, 915, 1803, 294, 300, 1859, 11, 264, 18754, 694, 34066, 307, 7103, 13, 286, 393, 2748], "temperature": 0.0, "avg_logprob": -0.14176424414710662, "compression_ratio": 1.6884615384615385, "no_speech_prob": 1.4677488252345938e-05}, {"id": 39, "seek": 26968, "start": 269.68, "end": 276.36, "text": " that to everybody. And then up here in the north, we have Victoria Park, which is where", "tokens": [300, 281, 2201, 13, 400, 550, 493, 510, 294, 264, 6830, 11, 321, 362, 16656, 4964, 11, 597, 307, 689], "temperature": 0.0, "avg_logprob": -0.10160875822368422, "compression_ratio": 1.5450643776824033, "no_speech_prob": 3.217615812900476e-05}, {"id": 40, "seek": 26968, "start": 276.36, "end": 283.2, "text": " the East End borders with Hackney. And obviously, there's no people there, at least having their", "tokens": [264, 6747, 6967, 16287, 365, 35170, 2397, 13, 400, 2745, 11, 456, 311, 572, 561, 456, 11, 412, 1935, 1419, 641], "temperature": 0.0, "avg_logprob": -0.10160875822368422, "compression_ratio": 1.5450643776824033, "no_speech_prob": 3.217615812900476e-05}, {"id": 41, "seek": 26968, "start": 283.2, "end": 291.08, "text": " address registered there. Log-transform data looks better on a coropleth map. However,", "tokens": [2985, 13968, 456, 13, 10824, 12, 24999, 837, 1412, 1542, 1101, 322, 257, 1181, 404, 2631, 71, 4471, 13, 2908, 11], "temperature": 0.0, "avg_logprob": -0.10160875822368422, "compression_ratio": 1.5450643776824033, "no_speech_prob": 3.217615812900476e-05}, {"id": 42, "seek": 26968, "start": 291.08, "end": 297.76, "text": " you can see the legend. You lose the data. So you can try to fix the legend. But we want", "tokens": [291, 393, 536, 264, 9451, 13, 509, 3624, 264, 1412, 13, 407, 291, 393, 853, 281, 3191, 264, 9451, 13, 583, 321, 528], "temperature": 0.0, "avg_logprob": -0.10160875822368422, "compression_ratio": 1.5450643776824033, "no_speech_prob": 3.217615812900476e-05}, {"id": 43, "seek": 29776, "start": 297.76, "end": 302.24, "text": " to write as little code as we possibly can. We don't want to keep fixing legends and things", "tokens": [281, 2464, 382, 707, 3089, 382, 321, 6264, 393, 13, 492, 500, 380, 528, 281, 1066, 19442, 27695, 293, 721], "temperature": 0.0, "avg_logprob": -0.11396775775485568, "compression_ratio": 1.5512820512820513, "no_speech_prob": 0.00015533898840658367}, {"id": 44, "seek": 29776, "start": 302.24, "end": 308.8, "text": " like that. So we began to think about other ways to visualize our data set. So what did", "tokens": [411, 300, 13, 407, 321, 4283, 281, 519, 466, 661, 2098, 281, 23273, 527, 1412, 992, 13, 407, 437, 630], "temperature": 0.0, "avg_logprob": -0.11396775775485568, "compression_ratio": 1.5512820512820513, "no_speech_prob": 0.00015533898840658367}, {"id": 45, "seek": 29776, "start": 308.8, "end": 317.44, "text": " we do? I am a Python coder, but there's a really nice package in R called Cartogram.", "tokens": [321, 360, 30, 286, 669, 257, 15329, 17656, 260, 11, 457, 456, 311, 257, 534, 1481, 7372, 294, 497, 1219, 22478, 12820, 13], "temperature": 0.0, "avg_logprob": -0.11396775775485568, "compression_ratio": 1.5512820512820513, "no_speech_prob": 0.00015533898840658367}, {"id": 46, "seek": 29776, "start": 317.44, "end": 327.24, "text": " And this is a technique called a density equalization algorithm that basically turns your data set", "tokens": [400, 341, 307, 257, 6532, 1219, 257, 10305, 2681, 2144, 9284, 300, 1936, 4523, 428, 1412, 992], "temperature": 0.0, "avg_logprob": -0.11396775775485568, "compression_ratio": 1.5512820512820513, "no_speech_prob": 0.00015533898840658367}, {"id": 47, "seek": 32724, "start": 327.24, "end": 335.24, "text": " into a Voronoi first, and then it rescales the polygons from the Voronoi relative to", "tokens": [666, 257, 12231, 266, 4869, 700, 11, 293, 550, 309, 9610, 4229, 264, 6754, 70, 892, 490, 264, 12231, 266, 4869, 4972, 281], "temperature": 0.0, "avg_logprob": -0.1805634705916695, "compression_ratio": 1.4414893617021276, "no_speech_prob": 4.812892075278796e-05}, {"id": 48, "seek": 32724, "start": 335.24, "end": 343.48, "text": " an attribute of the data. This technique is quite popular. There's a wonderful geographer", "tokens": [364, 19667, 295, 264, 1412, 13, 639, 6532, 307, 1596, 3743, 13, 821, 311, 257, 3715, 1519, 13624], "temperature": 0.0, "avg_logprob": -0.1805634705916695, "compression_ratio": 1.4414893617021276, "no_speech_prob": 4.812892075278796e-05}, {"id": 49, "seek": 32724, "start": 343.48, "end": 350.48, "text": " called Danny Dooling, who has an amazing website called World Mapper, which I strongly recommend", "tokens": [1219, 16682, 413, 1092, 278, 11, 567, 575, 364, 2243, 3144, 1219, 3937, 376, 34456, 11, 597, 286, 10613, 2748], "temperature": 0.0, "avg_logprob": -0.1805634705916695, "compression_ratio": 1.4414893617021276, "no_speech_prob": 4.812892075278796e-05}, {"id": 50, "seek": 35048, "start": 350.48, "end": 357.88, "text": " you have a look at. And they do things like showing poverty, inequality, food pressure", "tokens": [291, 362, 257, 574, 412, 13, 400, 436, 360, 721, 411, 4099, 10958, 11, 16970, 11, 1755, 3321], "temperature": 0.0, "avg_logprob": -0.09968063749116042, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6733274605940096e-05}, {"id": 51, "seek": 35048, "start": 357.88, "end": 364.40000000000003, "text": " all around the world. And they size the geographies relative to the attributes of the geospatial", "tokens": [439, 926, 264, 1002, 13, 400, 436, 2744, 264, 25435, 530, 4972, 281, 264, 17212, 295, 264, 1519, 2763, 267, 831], "temperature": 0.0, "avg_logprob": -0.09968063749116042, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6733274605940096e-05}, {"id": 52, "seek": 35048, "start": 364.40000000000003, "end": 370.72, "text": " data. So this is a great technique. There is one issue here, though, is that if you", "tokens": [1412, 13, 407, 341, 307, 257, 869, 6532, 13, 821, 307, 472, 2734, 510, 11, 1673, 11, 307, 300, 498, 291], "temperature": 0.0, "avg_logprob": -0.09968063749116042, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6733274605940096e-05}, {"id": 53, "seek": 35048, "start": 370.72, "end": 376.04, "text": " want to overlay different layers, then it becomes difficult. And also, the map does", "tokens": [528, 281, 31741, 819, 7914, 11, 550, 309, 3643, 2252, 13, 400, 611, 11, 264, 4471, 775], "temperature": 0.0, "avg_logprob": -0.09968063749116042, "compression_ratio": 1.588235294117647, "no_speech_prob": 1.6733274605940096e-05}, {"id": 54, "seek": 37604, "start": 376.04, "end": 382.12, "text": " look a little bit unfamiliar as well. But it does show particularly where you have like", "tokens": [574, 257, 707, 857, 29415, 382, 731, 13, 583, 309, 775, 855, 4098, 689, 291, 362, 411], "temperature": 0.0, "avg_logprob": -0.13809003501102843, "compression_ratio": 1.6962616822429906, "no_speech_prob": 5.70884658372961e-05}, {"id": 55, "seek": 37604, "start": 382.12, "end": 388.48, "text": " clustering, where you have a number of census areas, and I'm going to say a little bit more", "tokens": [596, 48673, 11, 689, 291, 362, 257, 1230, 295, 23725, 3179, 11, 293, 286, 478, 516, 281, 584, 257, 707, 857, 544], "temperature": 0.0, "avg_logprob": -0.13809003501102843, "compression_ratio": 1.6962616822429906, "no_speech_prob": 5.70884658372961e-05}, {"id": 56, "seek": 37604, "start": 388.48, "end": 395.32000000000005, "text": " about census areas, where you have a few together that have high data attribute value, then", "tokens": [466, 23725, 3179, 11, 689, 291, 362, 257, 1326, 1214, 300, 362, 1090, 1412, 19667, 2158, 11, 550], "temperature": 0.0, "avg_logprob": -0.13809003501102843, "compression_ratio": 1.6962616822429906, "no_speech_prob": 5.70884658372961e-05}, {"id": 57, "seek": 37604, "start": 395.32000000000005, "end": 401.04, "text": " they all get bigger together. So what we can see here is just to the south of the financial", "tokens": [436, 439, 483, 3801, 1214, 13, 407, 437, 321, 393, 536, 510, 307, 445, 281, 264, 7377, 295, 264, 4669], "temperature": 0.0, "avg_logprob": -0.13809003501102843, "compression_ratio": 1.6962616822429906, "no_speech_prob": 5.70884658372961e-05}, {"id": 58, "seek": 40104, "start": 401.04, "end": 406.28000000000003, "text": " sector, you can see there's a lot of worker bees all crammed into this place, and then", "tokens": [6977, 11, 291, 393, 536, 456, 311, 257, 688, 295, 11346, 17511, 439, 941, 19859, 666, 341, 1081, 11, 293, 550], "temperature": 0.0, "avg_logprob": -0.11361669034374003, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.285913696046919e-05}, {"id": 59, "seek": 40104, "start": 406.28000000000003, "end": 411.04, "text": " it increases the volume on the map. So it's a nice data vis, but still we have a small", "tokens": [309, 8637, 264, 5523, 322, 264, 4471, 13, 407, 309, 311, 257, 1481, 1412, 1452, 11, 457, 920, 321, 362, 257, 1359], "temperature": 0.0, "avg_logprob": -0.11361669034374003, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.285913696046919e-05}, {"id": 60, "seek": 40104, "start": 411.04, "end": 417.16, "text": " challenge if we want to add more data over the top. And also, it's a bit unfamiliar for", "tokens": [3430, 498, 321, 528, 281, 909, 544, 1412, 670, 264, 1192, 13, 400, 611, 11, 309, 311, 257, 857, 29415, 337], "temperature": 0.0, "avg_logprob": -0.11361669034374003, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.285913696046919e-05}, {"id": 61, "seek": 40104, "start": 417.16, "end": 427.16, "text": " people that don't use cartograms. So this is a map made using Data Rapper. It's a very", "tokens": [561, 300, 500, 380, 764, 5467, 12820, 82, 13, 407, 341, 307, 257, 4471, 1027, 1228, 11888, 497, 34456, 13, 467, 311, 257, 588], "temperature": 0.0, "avg_logprob": -0.11361669034374003, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.285913696046919e-05}, {"id": 62, "seek": 42716, "start": 427.16, "end": 434.32000000000005, "text": " nice website, and they have something called a symbol plot. And what this does is it just", "tokens": [1481, 3144, 11, 293, 436, 362, 746, 1219, 257, 5986, 7542, 13, 400, 437, 341, 775, 307, 309, 445], "temperature": 0.0, "avg_logprob": -0.10358502648093483, "compression_ratio": 1.5982142857142858, "no_speech_prob": 2.9957262086099945e-05}, {"id": 63, "seek": 42716, "start": 434.32000000000005, "end": 441.8, "text": " basically shows little mountains, little peaks, that show the value of the data attribute", "tokens": [1936, 3110, 707, 10233, 11, 707, 26897, 11, 300, 855, 264, 2158, 295, 264, 1412, 19667], "temperature": 0.0, "avg_logprob": -0.10358502648093483, "compression_ratio": 1.5982142857142858, "no_speech_prob": 2.9957262086099945e-05}, {"id": 64, "seek": 42716, "start": 441.8, "end": 448.12, "text": " that you're interested in at the place where that data is happening. And so again, we can", "tokens": [300, 291, 434, 3102, 294, 412, 264, 1081, 689, 300, 1412, 307, 2737, 13, 400, 370, 797, 11, 321, 393], "temperature": 0.0, "avg_logprob": -0.10358502648093483, "compression_ratio": 1.5982142857142858, "no_speech_prob": 2.9957262086099945e-05}, {"id": 65, "seek": 42716, "start": 448.12, "end": 455.24, "text": " see over here, you've got Whitechapel, lots of people packed in there. Just to the south", "tokens": [536, 670, 510, 11, 291, 600, 658, 5552, 339, 569, 338, 11, 3195, 295, 561, 13265, 294, 456, 13, 1449, 281, 264, 7377], "temperature": 0.0, "avg_logprob": -0.10358502648093483, "compression_ratio": 1.5982142857142858, "no_speech_prob": 2.9957262086099945e-05}, {"id": 66, "seek": 45524, "start": 455.24, "end": 461.56, "text": " of the financial sector, lots of people packed in there. The new developments here by the", "tokens": [295, 264, 4669, 6977, 11, 3195, 295, 561, 13265, 294, 456, 13, 440, 777, 20862, 510, 538, 264], "temperature": 0.0, "avg_logprob": -0.142614020514734, "compression_ratio": 1.6481481481481481, "no_speech_prob": 2.4371562176384032e-05}, {"id": 67, "seek": 45524, "start": 461.56, "end": 467.40000000000003, "text": " river in Blackwell, and here by the river in the old industrial zone. So this is quite", "tokens": [6810, 294, 4076, 6326, 11, 293, 510, 538, 264, 6810, 294, 264, 1331, 9987, 6668, 13, 407, 341, 307, 1596], "temperature": 0.0, "avg_logprob": -0.142614020514734, "compression_ratio": 1.6481481481481481, "no_speech_prob": 2.4371562176384032e-05}, {"id": 68, "seek": 45524, "start": 467.40000000000003, "end": 474.0, "text": " interesting. It gives us some context, and it gives us the data. I really like this data", "tokens": [1880, 13, 467, 2709, 505, 512, 4319, 11, 293, 309, 2709, 505, 264, 1412, 13, 286, 534, 411, 341, 1412], "temperature": 0.0, "avg_logprob": -0.142614020514734, "compression_ratio": 1.6481481481481481, "no_speech_prob": 2.4371562176384032e-05}, {"id": 69, "seek": 45524, "start": 474.0, "end": 481.88, "text": " vis, but it's Data Rapper, so it's not FOS, and it's not Python, and I like to use Python.", "tokens": [1452, 11, 457, 309, 311, 11888, 497, 34456, 11, 370, 309, 311, 406, 479, 4367, 11, 293, 309, 311, 406, 15329, 11, 293, 286, 411, 281, 764, 15329, 13], "temperature": 0.0, "avg_logprob": -0.142614020514734, "compression_ratio": 1.6481481481481481, "no_speech_prob": 2.4371562176384032e-05}, {"id": 70, "seek": 48188, "start": 481.88, "end": 490.2, "text": " So it was great, but it helped, but it didn't do everything that we needed it to do. The", "tokens": [407, 309, 390, 869, 11, 457, 309, 4254, 11, 457, 309, 994, 380, 360, 1203, 300, 321, 2978, 309, 281, 360, 13, 440], "temperature": 0.0, "avg_logprob": -0.11078831614280234, "compression_ratio": 1.76, "no_speech_prob": 1.4757179087609984e-05}, {"id": 71, "seek": 48188, "start": 490.2, "end": 495.8, "text": " other thing that you will notice, and I'll try to explain this briefly, is that we have", "tokens": [661, 551, 300, 291, 486, 3449, 11, 293, 286, 603, 853, 281, 2903, 341, 10515, 11, 307, 300, 321, 362], "temperature": 0.0, "avg_logprob": -0.11078831614280234, "compression_ratio": 1.76, "no_speech_prob": 1.4757179087609984e-05}, {"id": 72, "seek": 48188, "start": 495.8, "end": 502.36, "text": " one really high value here. And there's a reason for this. It's an outlier, because", "tokens": [472, 534, 1090, 2158, 510, 13, 400, 456, 311, 257, 1778, 337, 341, 13, 467, 311, 364, 484, 2753, 11, 570], "temperature": 0.0, "avg_logprob": -0.11078831614280234, "compression_ratio": 1.76, "no_speech_prob": 1.4757179087609984e-05}, {"id": 73, "seek": 48188, "start": 502.36, "end": 511.4, "text": " actually it's this value here. It's an outlier, because, and the reason why it's an outlier", "tokens": [767, 309, 311, 341, 2158, 510, 13, 467, 311, 364, 484, 2753, 11, 570, 11, 293, 264, 1778, 983, 309, 311, 364, 484, 2753], "temperature": 0.0, "avg_logprob": -0.11078831614280234, "compression_ratio": 1.76, "no_speech_prob": 1.4757179087609984e-05}, {"id": 74, "seek": 51140, "start": 511.4, "end": 517.4, "text": " is because the actual census area is really, really small. And the thing about the people", "tokens": [307, 570, 264, 3539, 23725, 1859, 307, 534, 11, 534, 1359, 13, 400, 264, 551, 466, 264, 561], "temperature": 0.0, "avg_logprob": -0.12632814160099737, "compression_ratio": 1.7658730158730158, "no_speech_prob": 6.887086783535779e-05}, {"id": 75, "seek": 51140, "start": 517.4, "end": 524.52, "text": " who produce the census data is that they have to create census areas using roughly 100 to", "tokens": [567, 5258, 264, 23725, 1412, 307, 300, 436, 362, 281, 1884, 23725, 3179, 1228, 9810, 2319, 281], "temperature": 0.0, "avg_logprob": -0.12632814160099737, "compression_ratio": 1.7658730158730158, "no_speech_prob": 6.887086783535779e-05}, {"id": 76, "seek": 51140, "start": 524.52, "end": 529.1999999999999, "text": " 600 people. Generally speaking, it's about 300 people, but they have to make it all fit", "tokens": [11849, 561, 13, 21082, 4124, 11, 309, 311, 466, 6641, 561, 11, 457, 436, 362, 281, 652, 309, 439, 3318], "temperature": 0.0, "avg_logprob": -0.12632814160099737, "compression_ratio": 1.7658730158730158, "no_speech_prob": 6.887086783535779e-05}, {"id": 77, "seek": 51140, "start": 529.1999999999999, "end": 534.6, "text": " together like a big jigsaw puzzle. So sometimes, you know, it's hard for them to make it work", "tokens": [1214, 411, 257, 955, 361, 17156, 1607, 12805, 13, 407, 2171, 11, 291, 458, 11, 309, 311, 1152, 337, 552, 281, 652, 309, 589], "temperature": 0.0, "avg_logprob": -0.12632814160099737, "compression_ratio": 1.7658730158730158, "no_speech_prob": 6.887086783535779e-05}, {"id": 78, "seek": 51140, "start": 534.6, "end": 541.04, "text": " really well. So in this case, this census area with really high density is actually", "tokens": [534, 731, 13, 407, 294, 341, 1389, 11, 341, 23725, 1859, 365, 534, 1090, 10305, 307, 767], "temperature": 0.0, "avg_logprob": -0.12632814160099737, "compression_ratio": 1.7658730158730158, "no_speech_prob": 6.887086783535779e-05}, {"id": 79, "seek": 54104, "start": 541.04, "end": 548.1999999999999, "text": " just one building. And so it's not a particularly big building, but everyone squeezed in there.", "tokens": [445, 472, 2390, 13, 400, 370, 309, 311, 406, 257, 4098, 955, 2390, 11, 457, 1518, 39470, 294, 456, 13], "temperature": 0.0, "avg_logprob": -0.12759856173866674, "compression_ratio": 1.617117117117117, "no_speech_prob": 9.099483577301726e-05}, {"id": 80, "seek": 54104, "start": 548.1999999999999, "end": 554.56, "text": " So yes, so the data is quite hard to work with, but it is interesting. So when I was", "tokens": [407, 2086, 11, 370, 264, 1412, 307, 1596, 1152, 281, 589, 365, 11, 457, 309, 307, 1880, 13, 407, 562, 286, 390], "temperature": 0.0, "avg_logprob": -0.12759856173866674, "compression_ratio": 1.617117117117117, "no_speech_prob": 9.099483577301726e-05}, {"id": 81, "seek": 54104, "start": 554.56, "end": 559.9599999999999, "text": " working with Data Rapper, I really liked it, and it did remind me of when I was young and", "tokens": [1364, 365, 11888, 497, 34456, 11, 286, 534, 4501, 309, 11, 293, 309, 630, 4160, 385, 295, 562, 286, 390, 2037, 293], "temperature": 0.0, "avg_logprob": -0.12759856173866674, "compression_ratio": 1.617117117117117, "no_speech_prob": 9.099483577301726e-05}, {"id": 82, "seek": 54104, "start": 559.9599999999999, "end": 564.64, "text": " I was reading Lord of the Rings books, I used to really like the map at the front of all", "tokens": [286, 390, 3760, 3257, 295, 264, 38543, 3642, 11, 286, 1143, 281, 534, 411, 264, 4471, 412, 264, 1868, 295, 439], "temperature": 0.0, "avg_logprob": -0.12759856173866674, "compression_ratio": 1.617117117117117, "no_speech_prob": 9.099483577301726e-05}, {"id": 83, "seek": 56464, "start": 564.64, "end": 575.24, "text": " these mountains, showing the misty mountains in those books. And so I was thinking, I could", "tokens": [613, 10233, 11, 4099, 264, 3544, 88, 10233, 294, 729, 3642, 13, 400, 370, 286, 390, 1953, 11, 286, 727], "temperature": 0.0, "avg_logprob": -0.11625262101491292, "compression_ratio": 1.4808743169398908, "no_speech_prob": 4.030755735584535e-05}, {"id": 84, "seek": 56464, "start": 575.24, "end": 582.48, "text": " probably make a mountain with Python. How hard can it be? It turns out it's really easy.", "tokens": [1391, 652, 257, 6937, 365, 15329, 13, 1012, 1152, 393, 309, 312, 30, 467, 4523, 484, 309, 311, 534, 1858, 13], "temperature": 0.0, "avg_logprob": -0.11625262101491292, "compression_ratio": 1.4808743169398908, "no_speech_prob": 4.030755735584535e-05}, {"id": 85, "seek": 56464, "start": 582.48, "end": 591.0, "text": " This is the essence of the library. It's just one function. You take a point on a map, you", "tokens": [639, 307, 264, 12801, 295, 264, 6405, 13, 467, 311, 445, 472, 2445, 13, 509, 747, 257, 935, 322, 257, 4471, 11, 291], "temperature": 0.0, "avg_logprob": -0.11625262101491292, "compression_ratio": 1.4808743169398908, "no_speech_prob": 4.030755735584535e-05}, {"id": 86, "seek": 59100, "start": 591.0, "end": 597.8, "text": " turn that point into a line. The line has a start point, which is just a couple of points", "tokens": [1261, 300, 935, 666, 257, 1622, 13, 440, 1622, 575, 257, 722, 935, 11, 597, 307, 445, 257, 1916, 295, 2793], "temperature": 0.0, "avg_logprob": -0.08343451581102737, "compression_ratio": 1.7281553398058251, "no_speech_prob": 1.1992595318588428e-05}, {"id": 87, "seek": 59100, "start": 597.8, "end": 604.0, "text": " of longitude, a tiny little bit of longitude to the west of your point. Then you convert", "tokens": [295, 938, 4377, 11, 257, 5870, 707, 857, 295, 938, 4377, 281, 264, 7009, 295, 428, 935, 13, 1396, 291, 7620], "temperature": 0.0, "avg_logprob": -0.08343451581102737, "compression_ratio": 1.7281553398058251, "no_speech_prob": 1.1992595318588428e-05}, {"id": 88, "seek": 59100, "start": 604.0, "end": 610.56, "text": " your point to a latitude, which is kind of like a proxy for the height of the mountain,", "tokens": [428, 935, 281, 257, 45436, 11, 597, 307, 733, 295, 411, 257, 29690, 337, 264, 6681, 295, 264, 6937, 11], "temperature": 0.0, "avg_logprob": -0.08343451581102737, "compression_ratio": 1.7281553398058251, "no_speech_prob": 1.1992595318588428e-05}, {"id": 89, "seek": 59100, "start": 610.56, "end": 619.4, "text": " using some kind of algorithm that you choose. In my case, I'm just like using a range. So", "tokens": [1228, 512, 733, 295, 9284, 300, 291, 2826, 13, 682, 452, 1389, 11, 286, 478, 445, 411, 1228, 257, 3613, 13, 407], "temperature": 0.0, "avg_logprob": -0.08343451581102737, "compression_ratio": 1.7281553398058251, "no_speech_prob": 1.1992595318588428e-05}, {"id": 90, "seek": 61940, "start": 619.4, "end": 625.84, "text": " I take the minimum and maximum value of the input range, which is a separate function", "tokens": [286, 747, 264, 7285, 293, 6674, 2158, 295, 264, 4846, 3613, 11, 597, 307, 257, 4994, 2445], "temperature": 0.0, "avg_logprob": -0.1265705333036535, "compression_ratio": 1.7378640776699028, "no_speech_prob": 1.6077687178039923e-05}, {"id": 91, "seek": 61940, "start": 625.84, "end": 633.3199999999999, "text": " here. And range one is essentially the minimum population density and the maximum. And then", "tokens": [510, 13, 400, 3613, 472, 307, 4476, 264, 7285, 4415, 10305, 293, 264, 6674, 13, 400, 550], "temperature": 0.0, "avg_logprob": -0.1265705333036535, "compression_ratio": 1.7378640776699028, "no_speech_prob": 1.6077687178039923e-05}, {"id": 92, "seek": 61940, "start": 633.3199999999999, "end": 640.9599999999999, "text": " I convert that to latitude values. And then the third point on the line is just a little", "tokens": [286, 7620, 300, 281, 45436, 4190, 13, 400, 550, 264, 2636, 935, 322, 264, 1622, 307, 445, 257, 707], "temperature": 0.0, "avg_logprob": -0.1265705333036535, "compression_ratio": 1.7378640776699028, "no_speech_prob": 1.6077687178039923e-05}, {"id": 93, "seek": 61940, "start": 640.9599999999999, "end": 648.04, "text": " bit of longitude to the east of my point. And then you use that to create a small triangle,", "tokens": [857, 295, 938, 4377, 281, 264, 10648, 295, 452, 935, 13, 400, 550, 291, 764, 300, 281, 1884, 257, 1359, 13369, 11], "temperature": 0.0, "avg_logprob": -0.1265705333036535, "compression_ratio": 1.7378640776699028, "no_speech_prob": 1.6077687178039923e-05}, {"id": 94, "seek": 64804, "start": 648.04, "end": 651.9599999999999, "text": " really easy, really easy, and a lot of fun as well.", "tokens": [534, 1858, 11, 534, 1858, 11, 293, 257, 688, 295, 1019, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.18701121571299795, "compression_ratio": 1.5217391304347827, "no_speech_prob": 2.0170493371551856e-05}, {"id": 95, "seek": 64804, "start": 651.9599999999999, "end": 659.8399999999999, "text": " So this is what I made with Python. And it's very similar to the data wrapper map, but", "tokens": [407, 341, 307, 437, 286, 1027, 365, 15329, 13, 400, 309, 311, 588, 2531, 281, 264, 1412, 46906, 4471, 11, 457], "temperature": 0.0, "avg_logprob": -0.18701121571299795, "compression_ratio": 1.5217391304347827, "no_speech_prob": 2.0170493371551856e-05}, {"id": 96, "seek": 64804, "start": 659.8399999999999, "end": 665.04, "text": " I was going for like a kind of hand drawn kind of a look to make it look like something", "tokens": [286, 390, 516, 337, 411, 257, 733, 295, 1011, 10117, 733, 295, 257, 574, 281, 652, 309, 574, 411, 746], "temperature": 0.0, "avg_logprob": -0.18701121571299795, "compression_ratio": 1.5217391304347827, "no_speech_prob": 2.0170493371551856e-05}, {"id": 97, "seek": 64804, "start": 665.04, "end": 670.56, "text": " from Lord of the Rings. And, you know, it's the same thing. You've got Whitechapel here.", "tokens": [490, 3257, 295, 264, 38543, 13, 400, 11, 291, 458, 11, 309, 311, 264, 912, 551, 13, 509, 600, 658, 5552, 339, 569, 338, 510, 13], "temperature": 0.0, "avg_logprob": -0.18701121571299795, "compression_ratio": 1.5217391304347827, "no_speech_prob": 2.0170493371551856e-05}, {"id": 98, "seek": 67056, "start": 670.56, "end": 678.3599999999999, "text": " You've got the financial sector here, and so on and so on. So that was fun. But, you know,", "tokens": [509, 600, 658, 264, 4669, 6977, 510, 11, 293, 370, 322, 293, 370, 322, 13, 407, 300, 390, 1019, 13, 583, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.1464784822965923, "compression_ratio": 1.6111111111111112, "no_speech_prob": 8.42060489958385e-06}, {"id": 99, "seek": 67056, "start": 678.3599999999999, "end": 683.8, "text": " population density, we were just talking about the reasons why it's a messy data set. There's", "tokens": [4415, 10305, 11, 321, 645, 445, 1417, 466, 264, 4112, 983, 309, 311, 257, 16191, 1412, 992, 13, 821, 311], "temperature": 0.0, "avg_logprob": -0.1464784822965923, "compression_ratio": 1.6111111111111112, "no_speech_prob": 8.42060489958385e-06}, {"id": 100, "seek": 67056, "start": 683.8, "end": 691.28, "text": " one place in Chelsea, which has a population density of two million people per square kilometer.", "tokens": [472, 1081, 294, 26527, 11, 597, 575, 257, 4415, 10305, 295, 732, 2459, 561, 680, 3732, 33795, 13], "temperature": 0.0, "avg_logprob": -0.1464784822965923, "compression_ratio": 1.6111111111111112, "no_speech_prob": 8.42060489958385e-06}, {"id": 101, "seek": 67056, "start": 691.28, "end": 698.3199999999999, "text": " So this is a very difficult data set to represent using any tools available. So, you know, it's", "tokens": [407, 341, 307, 257, 588, 2252, 1412, 992, 281, 2906, 1228, 604, 3873, 2435, 13, 407, 11, 291, 458, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.1464784822965923, "compression_ratio": 1.6111111111111112, "no_speech_prob": 8.42060489958385e-06}, {"id": 102, "seek": 69832, "start": 698.32, "end": 703.72, "text": " interesting. The other thing about Kensington and Chelsea is this is where Grenfell Tower", "tokens": [1880, 13, 440, 661, 551, 466, 33265, 20251, 293, 26527, 307, 341, 307, 689, 24913, 69, 898, 17877], "temperature": 0.0, "avg_logprob": -0.09651916140601749, "compression_ratio": 1.6626984126984128, "no_speech_prob": 9.463003152632155e-06}, {"id": 103, "seek": 69832, "start": 703.72, "end": 711.6, "text": " is, if anybody knows about that story. This is where it happened.", "tokens": [307, 11, 498, 4472, 3255, 466, 300, 1657, 13, 639, 307, 689, 309, 2011, 13], "temperature": 0.0, "avg_logprob": -0.09651916140601749, "compression_ratio": 1.6626984126984128, "no_speech_prob": 9.463003152632155e-06}, {"id": 104, "seek": 69832, "start": 711.6, "end": 716.5600000000001, "text": " So let's try some other data sets to see if they're really messy. This is people that", "tokens": [407, 718, 311, 853, 512, 661, 1412, 6352, 281, 536, 498, 436, 434, 534, 16191, 13, 639, 307, 561, 300], "temperature": 0.0, "avg_logprob": -0.09651916140601749, "compression_ratio": 1.6626984126984128, "no_speech_prob": 9.463003152632155e-06}, {"id": 105, "seek": 69832, "start": 716.5600000000001, "end": 723.24, "text": " live in one bedroom homes. So this is tiny little flats, you know, filled with people.", "tokens": [1621, 294, 472, 11211, 7388, 13, 407, 341, 307, 5870, 707, 43075, 11, 291, 458, 11, 6412, 365, 561, 13], "temperature": 0.0, "avg_logprob": -0.09651916140601749, "compression_ratio": 1.6626984126984128, "no_speech_prob": 9.463003152632155e-06}, {"id": 106, "seek": 69832, "start": 723.24, "end": 727.2, "text": " And so you can see all the worker bees for the financial sector. A lot of those are living", "tokens": [400, 370, 291, 393, 536, 439, 264, 11346, 17511, 337, 264, 4669, 6977, 13, 316, 688, 295, 729, 366, 2647], "temperature": 0.0, "avg_logprob": -0.09651916140601749, "compression_ratio": 1.6626984126984128, "no_speech_prob": 9.463003152632155e-06}, {"id": 107, "seek": 72720, "start": 727.2, "end": 733.5600000000001, "text": " in one bedroom flats. And actually, the new builds. This is a very new development here.", "tokens": [294, 472, 11211, 43075, 13, 400, 767, 11, 264, 777, 15182, 13, 639, 307, 257, 588, 777, 3250, 510, 13], "temperature": 0.0, "avg_logprob": -0.10477960551226581, "compression_ratio": 1.9137931034482758, "no_speech_prob": 9.487672650720924e-05}, {"id": 108, "seek": 72720, "start": 733.5600000000001, "end": 737.44, "text": " And this is a very new development here. So it looks like people who are building homes", "tokens": [400, 341, 307, 257, 588, 777, 3250, 510, 13, 407, 309, 1542, 411, 561, 567, 366, 2390, 7388], "temperature": 0.0, "avg_logprob": -0.10477960551226581, "compression_ratio": 1.9137931034482758, "no_speech_prob": 9.487672650720924e-05}, {"id": 109, "seek": 72720, "start": 737.44, "end": 743.6, "text": " now are building a lot of one bedroom homes. Two bedroom homes. Generally, everything is", "tokens": [586, 366, 2390, 257, 688, 295, 472, 11211, 7388, 13, 4453, 11211, 7388, 13, 21082, 11, 1203, 307], "temperature": 0.0, "avg_logprob": -0.10477960551226581, "compression_ratio": 1.9137931034482758, "no_speech_prob": 9.487672650720924e-05}, {"id": 110, "seek": 72720, "start": 743.6, "end": 750.6800000000001, "text": " kind of the same. Nothing really jumps out here. Three bedroom homes. What you can start", "tokens": [733, 295, 264, 912, 13, 6693, 534, 16704, 484, 510, 13, 6244, 11211, 7388, 13, 708, 291, 393, 722], "temperature": 0.0, "avg_logprob": -0.10477960551226581, "compression_ratio": 1.9137931034482758, "no_speech_prob": 9.487672650720924e-05}, {"id": 111, "seek": 72720, "start": 750.6800000000001, "end": 756.5200000000001, "text": " to see with three bedroom homes is that, yeah, it's generally even. But actually, in this", "tokens": [281, 536, 365, 1045, 11211, 7388, 307, 300, 11, 1338, 11, 309, 311, 5101, 754, 13, 583, 767, 11, 294, 341], "temperature": 0.0, "avg_logprob": -0.10477960551226581, "compression_ratio": 1.9137931034482758, "no_speech_prob": 9.487672650720924e-05}, {"id": 112, "seek": 75652, "start": 756.52, "end": 764.16, "text": " area here, which is a bow, which is near the bow bow's church, which is used to decide", "tokens": [1859, 510, 11, 597, 307, 257, 4503, 11, 597, 307, 2651, 264, 4503, 4503, 311, 4128, 11, 597, 307, 1143, 281, 4536], "temperature": 0.0, "avg_logprob": -0.1640336220724541, "compression_ratio": 1.715415019762846, "no_speech_prob": 2.5652674594311975e-05}, {"id": 113, "seek": 75652, "start": 764.16, "end": 768.8, "text": " if someone's a traditional East End cockney or not. That's kind of this area, really.", "tokens": [498, 1580, 311, 257, 5164, 6747, 6967, 11241, 2397, 420, 406, 13, 663, 311, 733, 295, 341, 1859, 11, 534, 13], "temperature": 0.0, "avg_logprob": -0.1640336220724541, "compression_ratio": 1.715415019762846, "no_speech_prob": 2.5652674594311975e-05}, {"id": 114, "seek": 75652, "start": 768.8, "end": 774.88, "text": " So the cockneys seem to have three bedroom homes, generally. And then four or more. And", "tokens": [407, 264, 11241, 14859, 1643, 281, 362, 1045, 11211, 7388, 11, 5101, 13, 400, 550, 1451, 420, 544, 13, 400], "temperature": 0.0, "avg_logprob": -0.1640336220724541, "compression_ratio": 1.715415019762846, "no_speech_prob": 2.5652674594311975e-05}, {"id": 115, "seek": 75652, "start": 774.88, "end": 780.4, "text": " what you see here is in the areas where the financial workers live, there's still quite", "tokens": [437, 291, 536, 510, 307, 294, 264, 3179, 689, 264, 4669, 5600, 1621, 11, 456, 311, 920, 1596], "temperature": 0.0, "avg_logprob": -0.1640336220724541, "compression_ratio": 1.715415019762846, "no_speech_prob": 2.5652674594311975e-05}, {"id": 116, "seek": 75652, "start": 780.4, "end": 785.3199999999999, "text": " a lot of four bedroom homes. But in some of these new build areas, there's very, very", "tokens": [257, 688, 295, 1451, 11211, 7388, 13, 583, 294, 512, 295, 613, 777, 1322, 3179, 11, 456, 311, 588, 11, 588], "temperature": 0.0, "avg_logprob": -0.1640336220724541, "compression_ratio": 1.715415019762846, "no_speech_prob": 2.5652674594311975e-05}, {"id": 117, "seek": 78532, "start": 785.32, "end": 792.5600000000001, "text": " few relative to the rest of the area. So let's look at another slightly more famous area.", "tokens": [1326, 4972, 281, 264, 1472, 295, 264, 1859, 13, 407, 718, 311, 574, 412, 1071, 4748, 544, 4618, 1859, 13], "temperature": 0.0, "avg_logprob": -0.11729045396440485, "compression_ratio": 1.5584415584415585, "no_speech_prob": 2.5349507268401794e-05}, {"id": 118, "seek": 78532, "start": 792.5600000000001, "end": 800.08, "text": " This is Westminster in central London. And so you can see this is where Hyde Park is.", "tokens": [639, 307, 49714, 294, 5777, 7042, 13, 400, 370, 291, 393, 536, 341, 307, 689, 5701, 1479, 4964, 307, 13], "temperature": 0.0, "avg_logprob": -0.11729045396440485, "compression_ratio": 1.5584415584415585, "no_speech_prob": 2.5349507268401794e-05}, {"id": 119, "seek": 78532, "start": 800.08, "end": 806.48, "text": " There's no one living there. Again, this is the population density dataset. And then you've", "tokens": [821, 311, 572, 472, 2647, 456, 13, 3764, 11, 341, 307, 264, 4415, 10305, 28872, 13, 400, 550, 291, 600], "temperature": 0.0, "avg_logprob": -0.11729045396440485, "compression_ratio": 1.5584415584415585, "no_speech_prob": 2.5349507268401794e-05}, {"id": 120, "seek": 78532, "start": 806.48, "end": 813.8800000000001, "text": " got an open street map based map just to help with orientation. And then in a future version", "tokens": [658, 364, 1269, 4838, 4471, 2361, 4471, 445, 281, 854, 365, 14764, 13, 400, 550, 294, 257, 2027, 3037], "temperature": 0.0, "avg_logprob": -0.11729045396440485, "compression_ratio": 1.5584415584415585, "no_speech_prob": 2.5349507268401794e-05}, {"id": 121, "seek": 81388, "start": 813.88, "end": 820.64, "text": " of the module, I think I might do some more stuff with open street map. And then if you", "tokens": [295, 264, 10088, 11, 286, 519, 286, 1062, 360, 512, 544, 1507, 365, 1269, 4838, 4471, 13, 400, 550, 498, 291], "temperature": 0.0, "avg_logprob": -0.11354742157325316, "compression_ratio": 1.6822429906542056, "no_speech_prob": 9.767441042640712e-06}, {"id": 122, "seek": 81388, "start": 820.64, "end": 827.48, "text": " look at some of the outer London areas, and this is where I live, you can see like areas", "tokens": [574, 412, 512, 295, 264, 10847, 7042, 3179, 11, 293, 341, 307, 689, 286, 1621, 11, 291, 393, 536, 411, 3179], "temperature": 0.0, "avg_logprob": -0.11354742157325316, "compression_ratio": 1.6822429906542056, "no_speech_prob": 9.767441042640712e-06}, {"id": 123, "seek": 81388, "start": 827.48, "end": 833.52, "text": " of urban density, but you can also see some very suburban areas where the population density", "tokens": [295, 9681, 10305, 11, 457, 291, 393, 611, 536, 512, 588, 40138, 3179, 689, 264, 4415, 10305], "temperature": 0.0, "avg_logprob": -0.11354742157325316, "compression_ratio": 1.6822429906542056, "no_speech_prob": 9.767441042640712e-06}, {"id": 124, "seek": 81388, "start": 833.52, "end": 838.24, "text": " is lower. This is like where most people are living in houses, basically. And you can also", "tokens": [307, 3126, 13, 639, 307, 411, 689, 881, 561, 366, 2647, 294, 8078, 11, 1936, 13, 400, 291, 393, 611], "temperature": 0.0, "avg_logprob": -0.11354742157325316, "compression_ratio": 1.6822429906542056, "no_speech_prob": 9.767441042640712e-06}, {"id": 125, "seek": 83824, "start": 838.24, "end": 844.08, "text": " see green space. So we're nearly finished. I just want to give a massive shout to NB", "tokens": [536, 3092, 1901, 13, 407, 321, 434, 6217, 4335, 13, 286, 445, 528, 281, 976, 257, 5994, 8043, 281, 426, 33], "temperature": 0.0, "avg_logprob": -0.10595450240574526, "compression_ratio": 1.536480686695279, "no_speech_prob": 2.8502141503849998e-05}, {"id": 126, "seek": 83824, "start": 844.08, "end": 852.36, "text": " Dev. It's really good if you use Jupiter. Just check it out. Number one, if you're trying", "tokens": [9096, 13, 467, 311, 534, 665, 498, 291, 764, 24567, 13, 1449, 1520, 309, 484, 13, 5118, 472, 11, 498, 291, 434, 1382], "temperature": 0.0, "avg_logprob": -0.10595450240574526, "compression_ratio": 1.536480686695279, "no_speech_prob": 2.8502141503849998e-05}, {"id": 127, "seek": 83824, "start": 852.36, "end": 859.6, "text": " to do version control on Jupiter notebooks, it helps you with any clashes, any merge conflicts", "tokens": [281, 360, 3037, 1969, 322, 24567, 43782, 11, 309, 3665, 291, 365, 604, 596, 12808, 11, 604, 22183, 19807], "temperature": 0.0, "avg_logprob": -0.10595450240574526, "compression_ratio": 1.536480686695279, "no_speech_prob": 2.8502141503849998e-05}, {"id": 128, "seek": 83824, "start": 859.6, "end": 864.8, "text": " because it removes the metadata in the JSON that sometimes causes conflicts. If you have", "tokens": [570, 309, 30445, 264, 26603, 294, 264, 31828, 300, 2171, 7700, 19807, 13, 759, 291, 362], "temperature": 0.0, "avg_logprob": -0.10595450240574526, "compression_ratio": 1.536480686695279, "no_speech_prob": 2.8502141503849998e-05}, {"id": 129, "seek": 86480, "start": 864.8, "end": 870.0, "text": " a team of people working on the same notebook, this is a real lifesaver. And also it just", "tokens": [257, 1469, 295, 561, 1364, 322, 264, 912, 21060, 11, 341, 307, 257, 957, 4545, 13708, 331, 13, 400, 611, 309, 445], "temperature": 0.0, "avg_logprob": -0.11498839434455423, "compression_ratio": 1.6525821596244132, "no_speech_prob": 5.6997279898496345e-05}, {"id": 130, "seek": 86480, "start": 870.0, "end": 876.9599999999999, "text": " bakes in good practice. So it means that your code gets shared on GitHub really easily.", "tokens": [272, 3419, 294, 665, 3124, 13, 407, 309, 1355, 300, 428, 3089, 2170, 5507, 322, 23331, 534, 3612, 13], "temperature": 0.0, "avg_logprob": -0.11498839434455423, "compression_ratio": 1.6525821596244132, "no_speech_prob": 5.6997279898496345e-05}, {"id": 131, "seek": 86480, "start": 876.9599999999999, "end": 882.5999999999999, "text": " It helps you or encourages you at least to write good documentation for your team and", "tokens": [467, 3665, 291, 420, 28071, 291, 412, 1935, 281, 2464, 665, 14333, 337, 428, 1469, 293], "temperature": 0.0, "avg_logprob": -0.11498839434455423, "compression_ratio": 1.6525821596244132, "no_speech_prob": 5.6997279898496345e-05}, {"id": 132, "seek": 86480, "start": 882.5999999999999, "end": 889.8, "text": " the community. It also encourages you to write good tests. And it enables you to publish", "tokens": [264, 1768, 13, 467, 611, 28071, 291, 281, 2464, 665, 6921, 13, 400, 309, 17077, 291, 281, 11374], "temperature": 0.0, "avg_logprob": -0.11498839434455423, "compression_ratio": 1.6525821596244132, "no_speech_prob": 5.6997279898496345e-05}, {"id": 133, "seek": 88980, "start": 889.8, "end": 899.68, "text": " modules. So big shout to them. I'd also like to thank Jarek, who has produced a wonderful", "tokens": [16679, 13, 407, 955, 8043, 281, 552, 13, 286, 1116, 611, 411, 281, 1309, 508, 543, 74, 11, 567, 575, 7126, 257, 3715], "temperature": 0.0, "avg_logprob": -0.2003705435936604, "compression_ratio": 1.5347826086956522, "no_speech_prob": 9.369073086418211e-05}, {"id": 134, "seek": 88980, "start": 899.68, "end": 906.24, "text": " PWA for FOSSTEM called Sejourner OX. Do check it out. It's a really good way of looking", "tokens": [430, 21449, 337, 479, 4367, 6840, 6683, 1219, 1100, 8696, 1193, 422, 55, 13, 1144, 1520, 309, 484, 13, 467, 311, 257, 534, 665, 636, 295, 1237], "temperature": 0.0, "avg_logprob": -0.2003705435936604, "compression_ratio": 1.5347826086956522, "no_speech_prob": 9.369073086418211e-05}, {"id": 135, "seek": 88980, "start": 906.24, "end": 912.8, "text": " at the schedule for FOSSTEM and you can watch the videos with Sejourner OX. And also Ed,", "tokens": [412, 264, 7567, 337, 479, 4367, 6840, 6683, 293, 291, 393, 1159, 264, 2145, 365, 1100, 8696, 1193, 422, 55, 13, 400, 611, 3977, 11], "temperature": 0.0, "avg_logprob": -0.2003705435936604, "compression_ratio": 1.5347826086956522, "no_speech_prob": 9.369073086418211e-05}, {"id": 136, "seek": 88980, "start": 912.8, "end": 919.16, "text": " who's going to be giving a really cool talk on OSM and Wikidata. And finally, I'd like", "tokens": [567, 311, 516, 281, 312, 2902, 257, 534, 1627, 751, 322, 12731, 44, 293, 23377, 327, 3274, 13, 400, 2721, 11, 286, 1116, 411], "temperature": 0.0, "avg_logprob": -0.2003705435936604, "compression_ratio": 1.5347826086956522, "no_speech_prob": 9.369073086418211e-05}, {"id": 137, "seek": 91916, "start": 919.16, "end": 924.36, "text": " to thank all the council coders everywhere. Thanks for having me.", "tokens": [50364, 281, 1309, 439, 264, 9209, 17656, 433, 5315, 13, 2561, 337, 1419, 385, 13, 50624], "temperature": 0.0, "avg_logprob": -0.28612428552964153, "compression_ratio": 0.9558823529411765, "no_speech_prob": 0.00013499009946826845}], "language": "en"}