{"text": " Let me start. This talk is partly about the same thing as the previous talk. So, repetition is the matter of invention or matter of what it's called. And here, so, as Balash mentioned, the problem that this is supposed to solve is that if you are editing some document in Kolobara online, and, for instance, on your laptop and then the connection breaks because you are going into a tunnel or something else happens, and then you can just seamlessly eventually it will start using the local voice instead in the browser and the same document that has been downloaded without you knowing into the browser's memory, not to your file system. Yeah, so the solution is that. And, of course, implementing this actually will be quite a problem or quite hard, but we are already working on it and I assume it will be successful. And then when the connection comes up again, you can, or the document will be uploaded to the Kolobara online server and the editing will continue then using the online server. And I'm using the name Kobosm for this or actually it was Thorsten who invented that name, I think. And what we don't think is a solution at least for some customers is to install Kolobara office locally because there are situations where you are not allowed to install third party software very easily and if you did that and wanted to be prepared for this connection in Kolobara online, you would have to keep downloading the document yourself anyway all the time and then start Kolobara office locally separately. And what is WebAssembly? Well, this is what Balazs already told you. One thing that I guess could be mentioned is that this WebAssembly runs in the same sandbox as a web page and it has access to the same things that JavaScript has access to or more importantly doesn't have access to anything that JavaScript doesn't have access to. So it's quite safe, it can't read any random files on your disk and so on. And WebAssembly doesn't even have access to the direct access to the DOM to the HTML page but it can easily run on JavaScript anyway that has access so that's not that important. There are also some environments that are not in the browser. I don't remember but it's called if there's something, well at least one such exists. And WebAssembly is supported in most current browsers, Firefox, Chrome, Safari, Edge. Are there any others? M-scripten tool chain is this clan-based tool chain and I'm not sure if the C and C++ library are like, are they considered part of M-scripten or not? Probably yes. And this C library contains much of normal Linux or POSIX functionality. Also, threading using p-threads and they receive an in-memory file system that you can use to pass files from building the most application into the application at runtime. Some of these very traditional Unix functionalities with oddly implemented, which can be surprising for instance, pipes, which are like 50 years old and have always worked the same way in Unix. In Boston they suddenly are non-blocking, which was a surprise to us. And we use a very specific version of M-scripten. Currently, we could try to upgrade to a newer one. I think it will work also. But selecting what version of M-scripten to use and what tool chain options to use has been quite complicated. There are so many different versions to choose from and they all have slightly different issues or functionality differences. So once you have something that works, you tend to stick to it. And the Kovac application, it contains all the relevant C++ code of LibreOffice code itself and also all the external libraries that LibreOffice uses, plus then the C++ code of LibreOffice, I mean Collabora Online. And then the same JavaScript code as in Collabora Online is also used, of course, and that is what provides the UI. And compared to the typical M-scripten examples, you see if you start reading about M-scripten, in this case, the Bosman code doesn't do any UI itself, but all UI is handled by this JavaScript layer. And the application structure is quite similar to the iOS and Android apps. They are built in quite a similar way, constructed in a similar way. And just like in these apps, instead of having several processes, there is just one process and multiple threads. And here you can see how the Collabora Online is constructed and then comparing. Then they communicate using web sockets. And in Kovac, instead of several processes, we have multiple threads and as such, the message passing between them is more or less the same as in the web-based Collabora Online server. And this is actually something that should be eventually improved. As you see, instead of all this message passing, we could just simply call the function directly that will handle the message eventually. So that should be faster and easier or, let's say, simpler on the system. Here are some pointers how to build this thing. You first compile LibreFix score and then the online dependencies and then online. And if you need to run this through a web server because you can't use these shared array buffers if you load a page from a file URL. And here is a sample screenshot where I actually then disconnected the internet and it's still continued working. And that's it. And thanks to Allotropia for doing this initial work and making LibreFix work as a Wasm application. I'm not sure why I put this thing on this page, but yeah, it was Allotropia who figured out what versions work and so on. So that's all.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.120000000000001, "text": " Let me start. This talk is partly about the same thing as the previous talk. So, repetition", "tokens": [50364, 961, 385, 722, 13, 639, 751, 307, 17031, 466, 264, 912, 551, 382, 264, 3894, 751, 13, 407, 11, 30432, 51020], "temperature": 0.0, "avg_logprob": -0.33163062893614476, "compression_ratio": 1.362962962962963, "no_speech_prob": 0.10537681728601456}, {"id": 1, "seek": 0, "start": 13.120000000000001, "end": 25.32, "text": " is the matter of invention or matter of what it's called. And here, so, as Balash mentioned,", "tokens": [51020, 307, 264, 1871, 295, 22265, 420, 1871, 295, 437, 309, 311, 1219, 13, 400, 510, 11, 370, 11, 382, 13140, 1299, 2835, 11, 51630], "temperature": 0.0, "avg_logprob": -0.33163062893614476, "compression_ratio": 1.362962962962963, "no_speech_prob": 0.10537681728601456}, {"id": 2, "seek": 2532, "start": 25.32, "end": 29.8, "text": " the problem that this is supposed to solve is that if you are editing some document", "tokens": [50364, 264, 1154, 300, 341, 307, 3442, 281, 5039, 307, 300, 498, 291, 366, 10000, 512, 4166, 50588], "temperature": 0.0, "avg_logprob": -0.21756324285193335, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.009203348308801651}, {"id": 3, "seek": 2532, "start": 29.8, "end": 37.08, "text": " in Kolobara online, and, for instance, on your laptop and then the connection breaks", "tokens": [50588, 294, 26137, 996, 2419, 2950, 11, 293, 11, 337, 5197, 11, 322, 428, 10732, 293, 550, 264, 4984, 9857, 50952], "temperature": 0.0, "avg_logprob": -0.21756324285193335, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.009203348308801651}, {"id": 4, "seek": 2532, "start": 37.08, "end": 47.72, "text": " because you are going into a tunnel or something else happens, and then you can just seamlessly", "tokens": [50952, 570, 291, 366, 516, 666, 257, 13186, 420, 746, 1646, 2314, 11, 293, 550, 291, 393, 445, 38083, 51484], "temperature": 0.0, "avg_logprob": -0.21756324285193335, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.009203348308801651}, {"id": 5, "seek": 2532, "start": 47.72, "end": 55.120000000000005, "text": " eventually it will start using the local voice instead in the browser and the same document", "tokens": [51484, 4728, 309, 486, 722, 1228, 264, 2654, 3177, 2602, 294, 264, 11185, 293, 264, 912, 4166, 51854], "temperature": 0.0, "avg_logprob": -0.21756324285193335, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.009203348308801651}, {"id": 6, "seek": 5512, "start": 55.12, "end": 61.239999999999995, "text": " that has been downloaded without you knowing into the browser's memory, not to your file", "tokens": [50364, 300, 575, 668, 21748, 1553, 291, 5276, 666, 264, 11185, 311, 4675, 11, 406, 281, 428, 3991, 50670], "temperature": 0.0, "avg_logprob": -0.2645923069545201, "compression_ratio": 1.3157894736842106, "no_speech_prob": 0.00277177756652236}, {"id": 7, "seek": 5512, "start": 61.239999999999995, "end": 80.4, "text": " system. Yeah, so the solution is that. And, of course, implementing this actually will", "tokens": [50670, 1185, 13, 865, 11, 370, 264, 3827, 307, 300, 13, 400, 11, 295, 1164, 11, 18114, 341, 767, 486, 51628], "temperature": 0.0, "avg_logprob": -0.2645923069545201, "compression_ratio": 1.3157894736842106, "no_speech_prob": 0.00277177756652236}, {"id": 8, "seek": 8040, "start": 80.4, "end": 90.04, "text": " be quite a problem or quite hard, but we are already working on it and I assume it will", "tokens": [50364, 312, 1596, 257, 1154, 420, 1596, 1152, 11, 457, 321, 366, 1217, 1364, 322, 309, 293, 286, 6552, 309, 486, 50846], "temperature": 0.0, "avg_logprob": -0.18062782287597656, "compression_ratio": 1.5260115606936415, "no_speech_prob": 0.014889344573020935}, {"id": 9, "seek": 8040, "start": 90.04, "end": 100.68, "text": " be successful. And then when the connection comes up again, you can, or the document will", "tokens": [50846, 312, 4406, 13, 400, 550, 562, 264, 4984, 1487, 493, 797, 11, 291, 393, 11, 420, 264, 4166, 486, 51378], "temperature": 0.0, "avg_logprob": -0.18062782287597656, "compression_ratio": 1.5260115606936415, "no_speech_prob": 0.014889344573020935}, {"id": 10, "seek": 8040, "start": 100.68, "end": 108.88000000000001, "text": " be uploaded to the Kolobara online server and the editing will continue then using the", "tokens": [51378, 312, 17135, 281, 264, 26137, 996, 2419, 2950, 7154, 293, 264, 10000, 486, 2354, 550, 1228, 264, 51788], "temperature": 0.0, "avg_logprob": -0.18062782287597656, "compression_ratio": 1.5260115606936415, "no_speech_prob": 0.014889344573020935}, {"id": 11, "seek": 10888, "start": 108.88, "end": 116.56, "text": " online server. And I'm using the name Kobosm for this or actually it was Thorsten who invented", "tokens": [50364, 2950, 7154, 13, 400, 286, 478, 1228, 264, 1315, 46353, 329, 76, 337, 341, 420, 767, 309, 390, 17777, 6266, 567, 14479, 50748], "temperature": 0.0, "avg_logprob": -0.23266686966170125, "compression_ratio": 1.5, "no_speech_prob": 0.0070335641503334045}, {"id": 12, "seek": 10888, "start": 116.56, "end": 127.88, "text": " that name, I think. And what we don't think is a solution at least for some customers", "tokens": [50748, 300, 1315, 11, 286, 519, 13, 400, 437, 321, 500, 380, 519, 307, 257, 3827, 412, 1935, 337, 512, 4581, 51314], "temperature": 0.0, "avg_logprob": -0.23266686966170125, "compression_ratio": 1.5, "no_speech_prob": 0.0070335641503334045}, {"id": 13, "seek": 10888, "start": 127.88, "end": 135.84, "text": " is to install Kolobara office locally because there are situations where you are not allowed", "tokens": [51314, 307, 281, 3625, 26137, 996, 2419, 3398, 16143, 570, 456, 366, 6851, 689, 291, 366, 406, 4350, 51712], "temperature": 0.0, "avg_logprob": -0.23266686966170125, "compression_ratio": 1.5, "no_speech_prob": 0.0070335641503334045}, {"id": 14, "seek": 13584, "start": 135.84, "end": 143.84, "text": " to install third party software very easily and if you did that and wanted to be prepared", "tokens": [50364, 281, 3625, 2636, 3595, 4722, 588, 3612, 293, 498, 291, 630, 300, 293, 1415, 281, 312, 4927, 50764], "temperature": 0.0, "avg_logprob": -0.17430025844250696, "compression_ratio": 1.52, "no_speech_prob": 0.010765357874333858}, {"id": 15, "seek": 13584, "start": 143.84, "end": 150.96, "text": " for this connection in Kolobara online, you would have to keep downloading the document", "tokens": [50764, 337, 341, 4984, 294, 26137, 996, 2419, 2950, 11, 291, 576, 362, 281, 1066, 32529, 264, 4166, 51120], "temperature": 0.0, "avg_logprob": -0.17430025844250696, "compression_ratio": 1.52, "no_speech_prob": 0.010765357874333858}, {"id": 16, "seek": 13584, "start": 150.96, "end": 160.4, "text": " yourself anyway all the time and then start Kolobara office locally separately. And what", "tokens": [51120, 1803, 4033, 439, 264, 565, 293, 550, 722, 26137, 996, 2419, 3398, 16143, 14759, 13, 400, 437, 51592], "temperature": 0.0, "avg_logprob": -0.17430025844250696, "compression_ratio": 1.52, "no_speech_prob": 0.010765357874333858}, {"id": 17, "seek": 16040, "start": 160.4, "end": 171.96, "text": " is WebAssembly? Well, this is what Balazs already told you. One thing that I guess could be", "tokens": [50364, 307, 9573, 10884, 19160, 30, 1042, 11, 341, 307, 437, 13140, 921, 82, 1217, 1907, 291, 13, 1485, 551, 300, 286, 2041, 727, 312, 50942], "temperature": 0.0, "avg_logprob": -0.1678487272823558, "compression_ratio": 1.536723163841808, "no_speech_prob": 0.016904223710298538}, {"id": 18, "seek": 16040, "start": 171.96, "end": 181.92000000000002, "text": " mentioned is that this WebAssembly runs in the same sandbox as a web page and it has access", "tokens": [50942, 2835, 307, 300, 341, 9573, 10884, 19160, 6676, 294, 264, 912, 42115, 382, 257, 3670, 3028, 293, 309, 575, 2105, 51440], "temperature": 0.0, "avg_logprob": -0.1678487272823558, "compression_ratio": 1.536723163841808, "no_speech_prob": 0.016904223710298538}, {"id": 19, "seek": 16040, "start": 181.92000000000002, "end": 188.32, "text": " to the same things that JavaScript has access to or more importantly doesn't have access", "tokens": [51440, 281, 264, 912, 721, 300, 15778, 575, 2105, 281, 420, 544, 8906, 1177, 380, 362, 2105, 51760], "temperature": 0.0, "avg_logprob": -0.1678487272823558, "compression_ratio": 1.536723163841808, "no_speech_prob": 0.016904223710298538}, {"id": 20, "seek": 18832, "start": 188.35999999999999, "end": 196.56, "text": " to anything that JavaScript doesn't have access to. So it's quite safe, it can't read any random", "tokens": [50366, 281, 1340, 300, 15778, 1177, 380, 362, 2105, 281, 13, 407, 309, 311, 1596, 3273, 11, 309, 393, 380, 1401, 604, 4974, 50776], "temperature": 0.0, "avg_logprob": -0.23368981766374144, "compression_ratio": 1.5879120879120878, "no_speech_prob": 0.00025376290432177484}, {"id": 21, "seek": 18832, "start": 196.56, "end": 204.48, "text": " files on your disk and so on. And WebAssembly doesn't even have access to the direct access to the", "tokens": [50776, 7098, 322, 428, 12355, 293, 370, 322, 13, 400, 9573, 10884, 19160, 1177, 380, 754, 362, 2105, 281, 264, 2047, 2105, 281, 264, 51172], "temperature": 0.0, "avg_logprob": -0.23368981766374144, "compression_ratio": 1.5879120879120878, "no_speech_prob": 0.00025376290432177484}, {"id": 22, "seek": 18832, "start": 204.48, "end": 213.92, "text": " DOM to the HTML page but it can easily run on JavaScript anyway that has access so that's not", "tokens": [51172, 35727, 281, 264, 17995, 3028, 457, 309, 393, 3612, 1190, 322, 15778, 4033, 300, 575, 2105, 370, 300, 311, 406, 51644], "temperature": 0.0, "avg_logprob": -0.23368981766374144, "compression_ratio": 1.5879120879120878, "no_speech_prob": 0.00025376290432177484}, {"id": 23, "seek": 21392, "start": 213.92, "end": 222.88, "text": " that important. There are also some environments that are not in the browser. I don't remember", "tokens": [50364, 300, 1021, 13, 821, 366, 611, 512, 12388, 300, 366, 406, 294, 264, 11185, 13, 286, 500, 380, 1604, 50812], "temperature": 0.0, "avg_logprob": -0.2253593603769938, "compression_ratio": 1.3541666666666667, "no_speech_prob": 0.0009017881820909679}, {"id": 24, "seek": 21392, "start": 222.88, "end": 231.2, "text": " but it's called if there's something, well at least one such exists. And WebAssembly is supported in", "tokens": [50812, 457, 309, 311, 1219, 498, 456, 311, 746, 11, 731, 412, 1935, 472, 1270, 8198, 13, 400, 9573, 10884, 19160, 307, 8104, 294, 51228], "temperature": 0.0, "avg_logprob": -0.2253593603769938, "compression_ratio": 1.3541666666666667, "no_speech_prob": 0.0009017881820909679}, {"id": 25, "seek": 23120, "start": 231.2, "end": 249.76, "text": " most current browsers, Firefox, Chrome, Safari, Edge. Are there any others? M-scripten tool chain", "tokens": [50364, 881, 2190, 36069, 11, 46613, 11, 15327, 11, 43820, 11, 19328, 13, 2014, 456, 604, 2357, 30, 376, 12, 82, 5944, 268, 2290, 5021, 51292], "temperature": 0.0, "avg_logprob": -0.30082976601340555, "compression_ratio": 1.3006535947712419, "no_speech_prob": 0.009055541828274727}, {"id": 26, "seek": 23120, "start": 249.76, "end": 258.52, "text": " is this clan-based tool chain and I'm not sure if the C and C++ library are like, are they considered", "tokens": [51292, 307, 341, 25887, 12, 6032, 2290, 5021, 293, 286, 478, 406, 988, 498, 264, 383, 293, 383, 25472, 6405, 366, 411, 11, 366, 436, 4888, 51730], "temperature": 0.0, "avg_logprob": -0.30082976601340555, "compression_ratio": 1.3006535947712419, "no_speech_prob": 0.009055541828274727}, {"id": 27, "seek": 25852, "start": 258.56, "end": 268.08, "text": " part of M-scripten or not? Probably yes. And this C library contains much of normal Linux or", "tokens": [50366, 644, 295, 376, 12, 82, 5944, 268, 420, 406, 30, 9210, 2086, 13, 400, 341, 383, 6405, 8306, 709, 295, 2710, 18734, 420, 50842], "temperature": 0.0, "avg_logprob": -0.25456998966358324, "compression_ratio": 1.2635135135135136, "no_speech_prob": 0.0024501464795321226}, {"id": 28, "seek": 25852, "start": 268.08, "end": 278.71999999999997, "text": " POSIX functionality. Also, threading using p-threads and they receive an in-memory file system", "tokens": [50842, 430, 4367, 21124, 14980, 13, 2743, 11, 7207, 278, 1228, 280, 12, 392, 2538, 82, 293, 436, 4774, 364, 294, 12, 17886, 827, 3991, 1185, 51374], "temperature": 0.0, "avg_logprob": -0.25456998966358324, "compression_ratio": 1.2635135135135136, "no_speech_prob": 0.0024501464795321226}, {"id": 29, "seek": 27872, "start": 279.64000000000004, "end": 289.44000000000005, "text": " that you can use to pass files from building the most application into the application at runtime.", "tokens": [50410, 300, 291, 393, 764, 281, 1320, 7098, 490, 2390, 264, 881, 3861, 666, 264, 3861, 412, 34474, 13, 50900], "temperature": 0.0, "avg_logprob": -0.3354366814217916, "compression_ratio": 1.4142857142857144, "no_speech_prob": 0.011034496128559113}, {"id": 30, "seek": 27872, "start": 289.44000000000005, "end": 303.20000000000005, "text": " Some of these very traditional Unix functionalities with oddly implemented, which can be surprising", "tokens": [50900, 2188, 295, 613, 588, 5164, 1156, 970, 11745, 1088, 365, 46083, 12270, 11, 597, 393, 312, 8830, 51588], "temperature": 0.0, "avg_logprob": -0.3354366814217916, "compression_ratio": 1.4142857142857144, "no_speech_prob": 0.011034496128559113}, {"id": 31, "seek": 30320, "start": 303.32, "end": 310.15999999999997, "text": " for instance, pipes, which are like 50 years old and have always worked the same way in Unix. In", "tokens": [50370, 337, 5197, 11, 21882, 11, 597, 366, 411, 2625, 924, 1331, 293, 362, 1009, 2732, 264, 912, 636, 294, 1156, 970, 13, 682, 50712], "temperature": 0.0, "avg_logprob": -0.2257556915283203, "compression_ratio": 1.4264705882352942, "no_speech_prob": 0.0034945188090205193}, {"id": 32, "seek": 30320, "start": 310.15999999999997, "end": 318.44, "text": " Boston they suddenly are non-blocking, which was a surprise to us. And we use a very specific", "tokens": [50712, 12333, 436, 5800, 366, 2107, 12, 28830, 278, 11, 597, 390, 257, 6365, 281, 505, 13, 400, 321, 764, 257, 588, 2685, 51126], "temperature": 0.0, "avg_logprob": -0.2257556915283203, "compression_ratio": 1.4264705882352942, "no_speech_prob": 0.0034945188090205193}, {"id": 33, "seek": 30320, "start": 318.44, "end": 327.59999999999997, "text": " version of M-scripten. Currently, we could try to upgrade to a newer one. I think it will work also.", "tokens": [51126, 3037, 295, 376, 12, 82, 5944, 268, 13, 19964, 11, 321, 727, 853, 281, 11484, 281, 257, 17628, 472, 13, 286, 519, 309, 486, 589, 611, 13, 51584], "temperature": 0.0, "avg_logprob": -0.2257556915283203, "compression_ratio": 1.4264705882352942, "no_speech_prob": 0.0034945188090205193}, {"id": 34, "seek": 32760, "start": 328.56, "end": 337.64000000000004, "text": " But selecting what version of M-scripten to use and what tool chain options to use has been quite", "tokens": [50412, 583, 18182, 437, 3037, 295, 376, 12, 82, 5944, 268, 281, 764, 293, 437, 2290, 5021, 3956, 281, 764, 575, 668, 1596, 50866], "temperature": 0.0, "avg_logprob": -0.2089358647664388, "compression_ratio": 1.4420289855072463, "no_speech_prob": 0.0025967368856072426}, {"id": 35, "seek": 32760, "start": 337.64000000000004, "end": 346.28000000000003, "text": " complicated. There are so many different versions to choose from and they all have slightly different", "tokens": [50866, 6179, 13, 821, 366, 370, 867, 819, 9606, 281, 2826, 490, 293, 436, 439, 362, 4748, 819, 51298], "temperature": 0.0, "avg_logprob": -0.2089358647664388, "compression_ratio": 1.4420289855072463, "no_speech_prob": 0.0025967368856072426}, {"id": 36, "seek": 34628, "start": 347.08, "end": 357.84, "text": " issues or functionality differences. So once you have something that works, you tend to stick to it.", "tokens": [50404, 2663, 420, 14980, 7300, 13, 407, 1564, 291, 362, 746, 300, 1985, 11, 291, 3928, 281, 2897, 281, 309, 13, 50942], "temperature": 0.0, "avg_logprob": -0.3815253448486328, "compression_ratio": 1.348993288590604, "no_speech_prob": 0.0024492847733199596}, {"id": 37, "seek": 34628, "start": 357.84, "end": 374.03999999999996, "text": " And the Kovac application, it contains all the relevant C++ code of LibreOffice code itself and also", "tokens": [50942, 400, 264, 591, 5179, 326, 3861, 11, 309, 8306, 439, 264, 7340, 383, 25472, 3089, 295, 15834, 265, 29745, 573, 3089, 2564, 293, 611, 51752], "temperature": 0.0, "avg_logprob": -0.3815253448486328, "compression_ratio": 1.348993288590604, "no_speech_prob": 0.0024492847733199596}, {"id": 38, "seek": 37404, "start": 374.8, "end": 383.52000000000004, "text": " all the external libraries that LibreOffice uses, plus then the C++ code of LibreOffice, I mean", "tokens": [50402, 439, 264, 8320, 15148, 300, 15834, 265, 29745, 573, 4960, 11, 1804, 550, 264, 383, 25472, 3089, 295, 15834, 265, 29745, 573, 11, 286, 914, 50838], "temperature": 0.0, "avg_logprob": -0.29502067565917967, "compression_ratio": 1.455223880597015, "no_speech_prob": 0.004537587985396385}, {"id": 39, "seek": 37404, "start": 383.52000000000004, "end": 395.84000000000003, "text": " Collabora Online. And then the same JavaScript code as in Collabora Online is also used, of course,", "tokens": [50838, 4586, 455, 3252, 16930, 13, 400, 550, 264, 912, 15778, 3089, 382, 294, 4586, 455, 3252, 16930, 307, 611, 1143, 11, 295, 1164, 11, 51454], "temperature": 0.0, "avg_logprob": -0.29502067565917967, "compression_ratio": 1.455223880597015, "no_speech_prob": 0.004537587985396385}, {"id": 40, "seek": 39584, "start": 396.64, "end": 410.12, "text": " and that is what provides the UI. And compared to the typical M-scripten examples, you see if you", "tokens": [50404, 293, 300, 307, 437, 6417, 264, 15682, 13, 400, 5347, 281, 264, 7476, 376, 12, 82, 5944, 268, 5110, 11, 291, 536, 498, 291, 51078], "temperature": 0.0, "avg_logprob": -0.24498488686301492, "compression_ratio": 1.35, "no_speech_prob": 0.0029116838704794645}, {"id": 41, "seek": 39584, "start": 410.12, "end": 419.67999999999995, "text": " start reading about M-scripten, in this case, the Bosman code doesn't do any UI itself, but", "tokens": [51078, 722, 3760, 466, 376, 12, 82, 5944, 268, 11, 294, 341, 1389, 11, 264, 22264, 1601, 3089, 1177, 380, 360, 604, 15682, 2564, 11, 457, 51556], "temperature": 0.0, "avg_logprob": -0.24498488686301492, "compression_ratio": 1.35, "no_speech_prob": 0.0029116838704794645}, {"id": 42, "seek": 41968, "start": 419.68, "end": 433.04, "text": " all UI is handled by this JavaScript layer. And the application structure is quite similar to the", "tokens": [50364, 439, 15682, 307, 18033, 538, 341, 15778, 4583, 13, 400, 264, 3861, 3877, 307, 1596, 2531, 281, 264, 51032], "temperature": 0.0, "avg_logprob": -0.16203675486824728, "compression_ratio": 1.3925925925925926, "no_speech_prob": 0.004872994031757116}, {"id": 43, "seek": 41968, "start": 433.04, "end": 441.92, "text": " iOS and Android apps. They are built in quite a similar way, constructed in a similar way.", "tokens": [51032, 17430, 293, 8853, 7733, 13, 814, 366, 3094, 294, 1596, 257, 2531, 636, 11, 17083, 294, 257, 2531, 636, 13, 51476], "temperature": 0.0, "avg_logprob": -0.16203675486824728, "compression_ratio": 1.3925925925925926, "no_speech_prob": 0.004872994031757116}, {"id": 44, "seek": 44192, "start": 441.92, "end": 450.64000000000004, "text": " And just like in these apps, instead of having several processes, there is just one process and", "tokens": [50364, 400, 445, 411, 294, 613, 7733, 11, 2602, 295, 1419, 2940, 7555, 11, 456, 307, 445, 472, 1399, 293, 50800], "temperature": 0.0, "avg_logprob": -0.1876452689947084, "compression_ratio": 1.3969465648854962, "no_speech_prob": 0.006469960790127516}, {"id": 45, "seek": 44192, "start": 450.64000000000004, "end": 465.12, "text": " multiple threads. And here you can see how the Collabora Online is constructed and then", "tokens": [50800, 3866, 19314, 13, 400, 510, 291, 393, 536, 577, 264, 4586, 455, 3252, 16930, 307, 17083, 293, 550, 51524], "temperature": 0.0, "avg_logprob": -0.1876452689947084, "compression_ratio": 1.3969465648854962, "no_speech_prob": 0.006469960790127516}, {"id": 46, "seek": 46512, "start": 465.12, "end": 477.8, "text": " comparing. Then they communicate using web sockets. And in Kovac, instead of several processes, we have", "tokens": [50364, 15763, 13, 1396, 436, 7890, 1228, 3670, 370, 11984, 13, 400, 294, 591, 5179, 326, 11, 2602, 295, 2940, 7555, 11, 321, 362, 50998], "temperature": 0.0, "avg_logprob": -0.2610539416877591, "compression_ratio": 1.3862068965517242, "no_speech_prob": 0.0031075472943484783}, {"id": 47, "seek": 46512, "start": 477.8, "end": 486.36, "text": " multiple threads and as such, the message passing between them is more or less the same as in the", "tokens": [50998, 3866, 19314, 293, 382, 1270, 11, 264, 3636, 8437, 1296, 552, 307, 544, 420, 1570, 264, 912, 382, 294, 264, 51426], "temperature": 0.0, "avg_logprob": -0.2610539416877591, "compression_ratio": 1.3862068965517242, "no_speech_prob": 0.0031075472943484783}, {"id": 48, "seek": 48636, "start": 487.32, "end": 502.44, "text": " web-based Collabora Online server. And this is actually something that should be eventually improved. As you", "tokens": [50412, 3670, 12, 6032, 4586, 455, 3252, 16930, 7154, 13, 400, 341, 307, 767, 746, 300, 820, 312, 4728, 9689, 13, 1018, 291, 51168], "temperature": 0.0, "avg_logprob": -0.2510308623313904, "compression_ratio": 1.423841059602649, "no_speech_prob": 0.010318471118807793}, {"id": 49, "seek": 48636, "start": 502.44, "end": 509.24, "text": " see, instead of all this message passing, we could just simply call the function directly that will handle", "tokens": [51168, 536, 11, 2602, 295, 439, 341, 3636, 8437, 11, 321, 727, 445, 2935, 818, 264, 2445, 3838, 300, 486, 4813, 51508], "temperature": 0.0, "avg_logprob": -0.2510308623313904, "compression_ratio": 1.423841059602649, "no_speech_prob": 0.010318471118807793}, {"id": 50, "seek": 50924, "start": 509.24, "end": 518.8, "text": " the message eventually. So that should be faster and easier or, let's say, simpler on the system.", "tokens": [50364, 264, 3636, 4728, 13, 407, 300, 820, 312, 4663, 293, 3571, 420, 11, 718, 311, 584, 11, 18587, 322, 264, 1185, 13, 50842], "temperature": 0.0, "avg_logprob": -0.327586784362793, "compression_ratio": 1.337837837837838, "no_speech_prob": 0.010735404677689075}, {"id": 51, "seek": 50924, "start": 525.8, "end": 534.72, "text": " Here are some pointers how to build this thing. You first compile LibreFix score and then the online", "tokens": [51192, 1692, 366, 512, 44548, 577, 281, 1322, 341, 551, 13, 509, 700, 31413, 15834, 265, 37, 970, 6175, 293, 550, 264, 2950, 51638], "temperature": 0.0, "avg_logprob": -0.327586784362793, "compression_ratio": 1.337837837837838, "no_speech_prob": 0.010735404677689075}, {"id": 52, "seek": 53472, "start": 534.72, "end": 548.28, "text": " dependencies and then online. And if you need to run this through a web server because you can't use these", "tokens": [50364, 36606, 293, 550, 2950, 13, 400, 498, 291, 643, 281, 1190, 341, 807, 257, 3670, 7154, 570, 291, 393, 380, 764, 613, 51042], "temperature": 0.0, "avg_logprob": -0.23877495410395602, "compression_ratio": 1.394736842105263, "no_speech_prob": 0.00391582353040576}, {"id": 53, "seek": 53472, "start": 548.28, "end": 560.84, "text": " shared array buffers if you load a page from a file URL. And here is a sample screenshot where I actually", "tokens": [51042, 5507, 10225, 9204, 433, 498, 291, 3677, 257, 3028, 490, 257, 3991, 12905, 13, 400, 510, 307, 257, 6889, 27712, 689, 286, 767, 51670], "temperature": 0.0, "avg_logprob": -0.23877495410395602, "compression_ratio": 1.394736842105263, "no_speech_prob": 0.00391582353040576}, {"id": 54, "seek": 56084, "start": 560.84, "end": 574.4, "text": " then disconnected the internet and it's still continued working. And that's it. And thanks to", "tokens": [50364, 550, 29426, 264, 4705, 293, 309, 311, 920, 7014, 1364, 13, 400, 300, 311, 309, 13, 400, 3231, 281, 51042], "temperature": 0.0, "avg_logprob": -0.27225903597745027, "compression_ratio": 1.4149659863945578, "no_speech_prob": 0.0048753647133708}, {"id": 55, "seek": 56084, "start": 574.4, "end": 585.1600000000001, "text": " Allotropia for doing this initial work and making LibreFix work as a Wasm application. I'm not sure why I put this", "tokens": [51042, 1057, 310, 1513, 654, 337, 884, 341, 5883, 589, 293, 1455, 15834, 265, 37, 970, 589, 382, 257, 3027, 76, 3861, 13, 286, 478, 406, 988, 983, 286, 829, 341, 51580], "temperature": 0.0, "avg_logprob": -0.27225903597745027, "compression_ratio": 1.4149659863945578, "no_speech_prob": 0.0048753647133708}, {"id": 56, "seek": 58516, "start": 585.16, "end": 595.4399999999999, "text": " thing on this page, but yeah, it was Allotropia who figured out what versions work and so on. So that's all.", "tokens": [50364, 551, 322, 341, 3028, 11, 457, 1338, 11, 309, 390, 1057, 310, 1513, 654, 567, 8932, 484, 437, 9606, 589, 293, 370, 322, 13, 407, 300, 311, 439, 13, 50878], "temperature": 0.0, "avg_logprob": -0.28336581587791443, "compression_ratio": 1.1368421052631579, "no_speech_prob": 0.019225865602493286}], "language": "en"}