{"text": " Okay, so good morning and welcome. It is great to be here in person. Now, what I'm obviously going to talk about is the idea of why is Java as a platform and as a programming language still so popular even after nearly 30 years? Can you believe it's going to be 28 years in May since Java was first released? The first thing that we need to kind of think about when we're talking in this respect is what do we mean by popularity? Because there's many different ways of measuring popularity. If you think about something like music, you know, you can say Ed Sheeran, for example, is popular. And you can measure that popularity by saying he sells so many albums, he sells so many downloads, he can fill seats at stadiums when he plays live. So that's an easy way to measure popularity of something like that. But when it comes to programming languages, when it comes to platforms, how do you measure their popularity? Well, one way is at conferences like this. If you want to do a presentation on a particular platform, how many people are going to turn up to listen to you talk? But from a wider perspective, there are people who do surveys. And there's a couple that we look at on a fairly regular basis. So who's heard of the Tiobi Index? Okay, yeah, a lot of people have heard of the Tiobi Index. Now, this is kind of a weird one because Tiobi actually stands for the importance of being earnest. Why? I mean, why does that have anything to do with programming languages? But for some reason, that's what they call it. So the Tiobi Index is one that tracks how popular programming languages are by looking at things in terms of metrics, like the number of job opportunities that are being advertised, the number of GitHub projects, the number of questions that are posed on Stack Overflow, things like that. And what we've seen with Java is it has maintained a very consistent level of popularity. It's literally been in the top three for the last probably 10 or so years until January. This year, it dropped to fourth place, which is a bit of a surprise. But I don't think that that is really a trend that we're going to see continuing. It's not going to be slipping further and further down. Two reasons for that. First is if you look at the numbers that were in that survey, firstly, Java actually went up in terms of popularity. So even though it dropped in terms of its overall ranking, its popularity actually went up. And the second thing is that the one below it is actually seen sharp, and that has less than half the popularity level that Java does. So I think we're some way away from seeing Java losing its popularity. So let's talk about why Java is so popular. First thing we need to look at is why or what made Java popular in the first place. And if we go right back to 1995, I'm going to ask, anybody here remember the launch of Java? Anybody here? Okay, good, because there's a few old people in the audience. Excellent. And this was what really made Java something that people got excited about. This little dancing duke here, because essentially what you had before Java was web browsing that was static. So there was no way of including interesting functionality in a web page. I mean, again, I'm old enough to remember Mosaic. Anybody remember Mosaic? Oh, good. Okay, yes. Mosaic is a web browser. Now that was purely text. Even if you wanted to show an image, you had to fire up an external application to render the image. That's how basic it was. So when Netscape came along and they included Java into their browser, suddenly there was this wonderful way of programming things and including applets. So that really fired up Java. People got excited about the idea of right once, run anywhere. You could move your application from one platform to another without having to change the code, without having to recompile it. Now, to continue that popularity, one of the things that was a bit of a drawback, if you like, was that it was controlled by one company. It was Sun Microsystems and they sort of wanted to maintain control over Java because it was something they'd invested in and they wanted to try and make money from it, very logically. But people were sort of pushed for an open standard. People really wanted more openness around the whole idea of Java. So in 1999, we got the Java community process. Now, rather than having, like, ANSI or ECMA, drive the standard of Java, there was an open standard, but it was one that Sun still maintained a level of control over. But this was good because it maintained that popularity. And then the next thing in 1999 was also a shift in terms of how people use Java. Rather than applets, rather than desktop applications, which had been very exciting at the beginning, it turned out that wasn't really the best place to use Java. And what we've seen is the shift of Java onto the server side. That's where Java really hits its sweet spot. Server side applications, the ability to scale to internet workloads, the ability to deliver on those types of things. And we got Java EE, enterprise edition. We got serverless. We got EJBs, all those good things. And again, that sort of morphed as well. So we now see things like Spring, who here uses Spring? Okay, yeah, lots of people use Spring. So it's very, very popular as a framework for developing enterprise applications. And again, we've seen that sort of migration away from the JCP to the Eclipse Foundation for Java Enterprise Edition. And now we've got Jakarta EE. And then moving forward again, in terms of making and continuing to deliver on the popularity of Java, the thing that Sun did then was to say, okay, we'll actually open source the whole platform. This was really a push because Apache had the Harmony Project. There was IBM, who were very heavily involved in that. And they wanted to create an open source version of Java. Sun resisted the push to do that for quite a long time. But eventually they said, okay, there is going to be an open source Java. At some point, it might as well be ours. And they created open JDK. Now, initially in 2006, that was just the hotspot virtual machine and the Java compiler. There was a lot of due diligence needed to be done in order to actually ensure that they had the rights to open source all of the code that was included in the JDK. Because there was lots of stuff that had been contributed by other companies. So it wasn't till 2007. And in fact, it was JDK7 built with 31, which was the first that you could actually build completely from the open source in the open JDK. And what that's led to is a huge growth in terms of contributions from the community. This is the wonderful thing about this as a project. It hasn't just been Sun and then obviously Oracle once they acquired Sun Microsystems back in 2010. We've seen lots of companies contributing all sorts of engineering, all sorts of work to the open JDK project. And I've listed, you know, not all of the contributors here. This is just, you know, some of the bigger ones who add not just bug fixes, but new features as well. You know, we've seen things like Shenandoah from Red Hat. We've seen all sorts of different projects being added to the JDK, not just from Oracle. So this is really what's helped to drive that popularity is it's been open standard, it's been open source, and it's very popular on the server side. So what makes, what makes Java so popular today? Why are we still seeing Java's popularity? One of those things, and Hilton sort of mentioned this at the beginning, is the fact that we're now seeing Java evolving much more quickly. It used to be that we had two, three, even four years between releases of Java. And now, since JDK 9 back in 2017, we have two releases a year. That's really quite significant. So there's a lot more progress in terms of delivering on the new features that programmers want, developers want. In order to keep that language fresh, keep it appealing to developers so that they can continue to do the things that they want to do. And as the architectures shift, you know, to things like microservices, and that type of approach, the language needs to adapt to that. And we've seen that. We've seen over several releases a number of new features being added to the Java platform, to the Java language, which is keeping it fresh, and therefore driving its popularity even further, keeping it at that level. Obviously, JDK 8 introduced the idea of lambdas and streams, which gave us a way of doing functional programming in Java. And I think lots of people here would agree that JDK 8 was a big release. It was one where suddenly people went, oh, this is great. Now I can do all these cool things with streams and lambdas and stuff like that. JDK 9 introduced modularity, a bit of a divisive one in terms of a feature. Lots of people didn't really see the benefit of it directly. But what we have seen now that we are moving to microservices and we want to put things into containers, the ability to use modules, the ability to use JLink to create a runtime which is tailored specifically to your application is very powerful. It means we can reduce from sort of 300 megabytes as a Java runtime down to maybe 40 or 50 megabytes by only including modules that we need for our service. So that's a very powerful thing, even though it's not a language level thing. JDK 10, local variable type inference. So, you know, Java script's got it. It must be good. Let's add it to Java. Again, you know, it's one of those sort of minor features, but still something that people liked. Then in JDK 14, we got records. That's another big thing, I think, where people suddenly had the ability to create data types and rather than having lots of boilerplate code for all of the classes that just wrapped a few values, suddenly you could use a single line and define a record with a set of values that you want to store in there. Seal classes in JDK 15. Many people look at it and go, I don't get why I need seal classes, but when you start getting into pattern matching and the idea of switch using pattern matching and having exhaustiveness in that switch, then seal types do make a lot of sense. And pattern matching is really the kind of big thing that we've seen over the last few releases. Pattern matching, for instance, of pattern matching for switch, pattern matching for records, all of which is taking that sort of some of the rough edges off the language and just making it a little easier for developers and then maintaining that popularity. And in terms of some of the bigger features as well, OpenJDK is driving those projects. We've got things like AMBA, which is the whole idea of the small language features like records, like pattern matching and so on. But then there are other ones like Lume, that came in JDK 19 initially. We've seen some more stuff coming in JDK 20. That's another very exciting thing from the point of view of scalability of Java applications. If you have a server-side application that has lots of connections coming in simultaneously, but those connections are IO bound, meaning you have to wait a long time for something to happen in terms of IO, using virtual threads through Project Lume is going to increase the scalability of that application by orders of magnitude and make it much more performant. Project Panama, replacement for JNI. So now we have foreign function interfaces, foreign memory interfaces. Anybody here use JNI? A few people. I remember talking to one of the people who initially designed JNI and I said, it's always a little bit complicated to use that. You've got to do this like header files and then you've got to find the right libraries and stuff like that. He said, yes, we designed it that way. And I thought that's not really the idea, is it? You don't want to design something to be difficult to use. But that was their guiding principle. So Panama is about making that much easier. Valhalla, we haven't really seen much of that yet, but that's a bigger thing in terms of how to create a different way of doing things in the Java language from the point of view of storage. Things like value types and the ability to store a collection of primitives, rather than having an array list of ints where you have to use auto-boxing and unboxing to use the wrapper class and create specific object instances, what we'll now be able to do is have an array list of ints and actually store those primitives without boxing them. So that's again helping to deliver on performance and solving some of those small problems. And then we've got things around the idea of startup time for the JVM because of the fact you're using byte codes, you have to convert them into native instructions. That's always been a bit of an issue for the way the applications start. So we've got Java on crack, the idea of coordinated restore at checkpoints. You can freeze an application and then restart it. We've got Project Leiden, which is again looking at the startup time of Java applications, more related to some of the work that's happened in the Growl VM, where you have a native image and you compile for a specific platform rather than the right one that's run anywhere idea. Freedom to choose. Again, Hilton mentioned this at the beginning. This is one of the really powerful things about Java is that you have so many options, not just in terms of versions, but in terms of distributions. Open JDK gives you the source code and then lots of people have taken that, they built it and then they can provide that to you as a distribution. You can install it and then if you need support, if you need maintenance around that, you have lots of different options for that. So it's very important having that freedom. Last thing then, why will Java remain popular in the next 20 years, let's say? And I think there's several reasons for this. Java is open. The fact that we have an open standard, people can contribute to that, people can join the JCP, they can join the open JDK, open source. Java's continuing to evolve. It's not static. It's not stationary. We're seeing lots of different things happening to Java, which address the needs of developers and keeping it fresh, allowing people to suggest things in terms of new features and so on. Java performs. We have this idea of the virtual machine. We've seen how things like JIP compilation could improve performance over statically compiled code. And we're looking at how to take that even further, using different ways of doing static compilation, different ways of doing dynamic compilation and so on. Java gives you choice. As we saw on the previous slide, the fact that you have so many distributions to choose from, you have so many versions that you can choose from, gives you that choice. Java's community, the fact that we have so many people here on a Sunday, that always blows me away that I get to talk to people and they come in their time off to listen to things about Java. So the fact that there is this huge community around Java, interest in sharing people's experiences. And the last thing, Java gives you freedom. The freedom to choose, the freedom to do what you want to do. And so that's it. That's my 20 minutes of presentation. I think I just about managed to get it in there. So thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.44, "text": " Okay, so good morning and welcome. It is great to be here in person. Now, what I'm obviously", "tokens": [50364, 1033, 11, 370, 665, 2446, 293, 2928, 13, 467, 307, 869, 281, 312, 510, 294, 954, 13, 823, 11, 437, 286, 478, 2745, 50986], "temperature": 0.0, "avg_logprob": -0.16493328757908032, "compression_ratio": 1.3989637305699483, "no_speech_prob": 0.21114341914653778}, {"id": 1, "seek": 0, "start": 12.44, "end": 19.68, "text": " going to talk about is the idea of why is Java as a platform and as a programming language", "tokens": [50986, 516, 281, 751, 466, 307, 264, 1558, 295, 983, 307, 10745, 382, 257, 3663, 293, 382, 257, 9410, 2856, 51348], "temperature": 0.0, "avg_logprob": -0.16493328757908032, "compression_ratio": 1.3989637305699483, "no_speech_prob": 0.21114341914653778}, {"id": 2, "seek": 0, "start": 19.68, "end": 26.080000000000002, "text": " still so popular even after nearly 30 years? Can you believe it's going to be 28 years", "tokens": [51348, 920, 370, 3743, 754, 934, 6217, 2217, 924, 30, 1664, 291, 1697, 309, 311, 516, 281, 312, 7562, 924, 51668], "temperature": 0.0, "avg_logprob": -0.16493328757908032, "compression_ratio": 1.3989637305699483, "no_speech_prob": 0.21114341914653778}, {"id": 3, "seek": 2608, "start": 26.08, "end": 31.64, "text": " in May since Java was first released? The first thing that we need to kind of think", "tokens": [50364, 294, 1891, 1670, 10745, 390, 700, 4736, 30, 440, 700, 551, 300, 321, 643, 281, 733, 295, 519, 50642], "temperature": 0.0, "avg_logprob": -0.13277276357014975, "compression_ratio": 1.7099236641221374, "no_speech_prob": 0.0987645834684372}, {"id": 4, "seek": 2608, "start": 31.64, "end": 36.879999999999995, "text": " about when we're talking in this respect is what do we mean by popularity? Because there's", "tokens": [50642, 466, 562, 321, 434, 1417, 294, 341, 3104, 307, 437, 360, 321, 914, 538, 19301, 30, 1436, 456, 311, 50904], "temperature": 0.0, "avg_logprob": -0.13277276357014975, "compression_ratio": 1.7099236641221374, "no_speech_prob": 0.0987645834684372}, {"id": 5, "seek": 2608, "start": 36.879999999999995, "end": 41.48, "text": " many different ways of measuring popularity. If you think about something like music, you", "tokens": [50904, 867, 819, 2098, 295, 13389, 19301, 13, 759, 291, 519, 466, 746, 411, 1318, 11, 291, 51134], "temperature": 0.0, "avg_logprob": -0.13277276357014975, "compression_ratio": 1.7099236641221374, "no_speech_prob": 0.0987645834684372}, {"id": 6, "seek": 2608, "start": 41.48, "end": 46.519999999999996, "text": " know, you can say Ed Sheeran, for example, is popular. And you can measure that popularity", "tokens": [51134, 458, 11, 291, 393, 584, 3977, 1240, 260, 282, 11, 337, 1365, 11, 307, 3743, 13, 400, 291, 393, 3481, 300, 19301, 51386], "temperature": 0.0, "avg_logprob": -0.13277276357014975, "compression_ratio": 1.7099236641221374, "no_speech_prob": 0.0987645834684372}, {"id": 7, "seek": 2608, "start": 46.519999999999996, "end": 52.68, "text": " by saying he sells so many albums, he sells so many downloads, he can fill seats at stadiums", "tokens": [51386, 538, 1566, 415, 20897, 370, 867, 24795, 11, 415, 20897, 370, 867, 36553, 11, 415, 393, 2836, 11069, 412, 18585, 82, 51694], "temperature": 0.0, "avg_logprob": -0.13277276357014975, "compression_ratio": 1.7099236641221374, "no_speech_prob": 0.0987645834684372}, {"id": 8, "seek": 5268, "start": 52.68, "end": 58.12, "text": " when he plays live. So that's an easy way to measure popularity of something like that.", "tokens": [50364, 562, 415, 5749, 1621, 13, 407, 300, 311, 364, 1858, 636, 281, 3481, 19301, 295, 746, 411, 300, 13, 50636], "temperature": 0.0, "avg_logprob": -0.09506823637775172, "compression_ratio": 1.7126436781609196, "no_speech_prob": 0.05330408364534378}, {"id": 9, "seek": 5268, "start": 58.12, "end": 63.4, "text": " But when it comes to programming languages, when it comes to platforms, how do you measure", "tokens": [50636, 583, 562, 309, 1487, 281, 9410, 8650, 11, 562, 309, 1487, 281, 9473, 11, 577, 360, 291, 3481, 50900], "temperature": 0.0, "avg_logprob": -0.09506823637775172, "compression_ratio": 1.7126436781609196, "no_speech_prob": 0.05330408364534378}, {"id": 10, "seek": 5268, "start": 63.4, "end": 69.36, "text": " their popularity? Well, one way is at conferences like this. If you want to do a presentation", "tokens": [50900, 641, 19301, 30, 1042, 11, 472, 636, 307, 412, 22032, 411, 341, 13, 759, 291, 528, 281, 360, 257, 5860, 51198], "temperature": 0.0, "avg_logprob": -0.09506823637775172, "compression_ratio": 1.7126436781609196, "no_speech_prob": 0.05330408364534378}, {"id": 11, "seek": 5268, "start": 69.36, "end": 74.52, "text": " on a particular platform, how many people are going to turn up to listen to you talk?", "tokens": [51198, 322, 257, 1729, 3663, 11, 577, 867, 561, 366, 516, 281, 1261, 493, 281, 2140, 281, 291, 751, 30, 51456], "temperature": 0.0, "avg_logprob": -0.09506823637775172, "compression_ratio": 1.7126436781609196, "no_speech_prob": 0.05330408364534378}, {"id": 12, "seek": 5268, "start": 74.52, "end": 80.28, "text": " But from a wider perspective, there are people who do surveys. And there's a couple that", "tokens": [51456, 583, 490, 257, 11842, 4585, 11, 456, 366, 561, 567, 360, 22711, 13, 400, 456, 311, 257, 1916, 300, 51744], "temperature": 0.0, "avg_logprob": -0.09506823637775172, "compression_ratio": 1.7126436781609196, "no_speech_prob": 0.05330408364534378}, {"id": 13, "seek": 8028, "start": 80.32000000000001, "end": 87.16, "text": " we look at on a fairly regular basis. So who's heard of the Tiobi Index? Okay, yeah, a lot", "tokens": [50366, 321, 574, 412, 322, 257, 6457, 3890, 5143, 13, 407, 567, 311, 2198, 295, 264, 20456, 19293, 33552, 30, 1033, 11, 1338, 11, 257, 688, 50708], "temperature": 0.0, "avg_logprob": -0.13594412385371693, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.05972813814878464}, {"id": 14, "seek": 8028, "start": 87.16, "end": 90.52, "text": " of people have heard of the Tiobi Index. Now, this is kind of a weird one because Tiobi", "tokens": [50708, 295, 561, 362, 2198, 295, 264, 20456, 19293, 33552, 13, 823, 11, 341, 307, 733, 295, 257, 3657, 472, 570, 20456, 19293, 50876], "temperature": 0.0, "avg_logprob": -0.13594412385371693, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.05972813814878464}, {"id": 15, "seek": 8028, "start": 90.52, "end": 96.44, "text": " actually stands for the importance of being earnest. Why? I mean, why does that have anything", "tokens": [50876, 767, 7382, 337, 264, 7379, 295, 885, 48171, 13, 1545, 30, 286, 914, 11, 983, 775, 300, 362, 1340, 51172], "temperature": 0.0, "avg_logprob": -0.13594412385371693, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.05972813814878464}, {"id": 16, "seek": 8028, "start": 96.44, "end": 101.36, "text": " to do with programming languages? But for some reason, that's what they call it. So the", "tokens": [51172, 281, 360, 365, 9410, 8650, 30, 583, 337, 512, 1778, 11, 300, 311, 437, 436, 818, 309, 13, 407, 264, 51418], "temperature": 0.0, "avg_logprob": -0.13594412385371693, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.05972813814878464}, {"id": 17, "seek": 8028, "start": 101.36, "end": 107.0, "text": " Tiobi Index is one that tracks how popular programming languages are by looking at things", "tokens": [51418, 20456, 19293, 33552, 307, 472, 300, 10218, 577, 3743, 9410, 8650, 366, 538, 1237, 412, 721, 51700], "temperature": 0.0, "avg_logprob": -0.13594412385371693, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.05972813814878464}, {"id": 18, "seek": 10700, "start": 107.04, "end": 112.2, "text": " in terms of metrics, like the number of job opportunities that are being advertised, the", "tokens": [50366, 294, 2115, 295, 16367, 11, 411, 264, 1230, 295, 1691, 4786, 300, 366, 885, 42310, 11, 264, 50624], "temperature": 0.0, "avg_logprob": -0.1467101489796358, "compression_ratio": 1.5677966101694916, "no_speech_prob": 0.04686898738145828}, {"id": 19, "seek": 10700, "start": 112.2, "end": 118.36, "text": " number of GitHub projects, the number of questions that are posed on Stack Overflow, things like", "tokens": [50624, 1230, 295, 23331, 4455, 11, 264, 1230, 295, 1651, 300, 366, 31399, 322, 37649, 4886, 10565, 11, 721, 411, 50932], "temperature": 0.0, "avg_logprob": -0.1467101489796358, "compression_ratio": 1.5677966101694916, "no_speech_prob": 0.04686898738145828}, {"id": 20, "seek": 10700, "start": 118.36, "end": 124.48, "text": " that. And what we've seen with Java is it has maintained a very consistent level of popularity.", "tokens": [50932, 300, 13, 400, 437, 321, 600, 1612, 365, 10745, 307, 309, 575, 17578, 257, 588, 8398, 1496, 295, 19301, 13, 51238], "temperature": 0.0, "avg_logprob": -0.1467101489796358, "compression_ratio": 1.5677966101694916, "no_speech_prob": 0.04686898738145828}, {"id": 21, "seek": 10700, "start": 124.48, "end": 132.68, "text": " It's literally been in the top three for the last probably 10 or so years until January.", "tokens": [51238, 467, 311, 3736, 668, 294, 264, 1192, 1045, 337, 264, 1036, 1391, 1266, 420, 370, 924, 1826, 7061, 13, 51648], "temperature": 0.0, "avg_logprob": -0.1467101489796358, "compression_ratio": 1.5677966101694916, "no_speech_prob": 0.04686898738145828}, {"id": 22, "seek": 13268, "start": 132.68, "end": 137.52, "text": " This year, it dropped to fourth place, which is a bit of a surprise. But I don't think", "tokens": [50364, 639, 1064, 11, 309, 8119, 281, 6409, 1081, 11, 597, 307, 257, 857, 295, 257, 6365, 13, 583, 286, 500, 380, 519, 50606], "temperature": 0.0, "avg_logprob": -0.10096761342641469, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.23112808167934418}, {"id": 23, "seek": 13268, "start": 137.52, "end": 141.6, "text": " that that is really a trend that we're going to see continuing. It's not going to be slipping", "tokens": [50606, 300, 300, 307, 534, 257, 6028, 300, 321, 434, 516, 281, 536, 9289, 13, 467, 311, 406, 516, 281, 312, 36779, 50810], "temperature": 0.0, "avg_logprob": -0.10096761342641469, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.23112808167934418}, {"id": 24, "seek": 13268, "start": 141.6, "end": 146.20000000000002, "text": " further and further down. Two reasons for that. First is if you look at the numbers", "tokens": [50810, 3052, 293, 3052, 760, 13, 4453, 4112, 337, 300, 13, 2386, 307, 498, 291, 574, 412, 264, 3547, 51040], "temperature": 0.0, "avg_logprob": -0.10096761342641469, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.23112808167934418}, {"id": 25, "seek": 13268, "start": 146.20000000000002, "end": 152.0, "text": " that were in that survey, firstly, Java actually went up in terms of popularity. So even though", "tokens": [51040, 300, 645, 294, 300, 8984, 11, 27376, 11, 10745, 767, 1437, 493, 294, 2115, 295, 19301, 13, 407, 754, 1673, 51330], "temperature": 0.0, "avg_logprob": -0.10096761342641469, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.23112808167934418}, {"id": 26, "seek": 13268, "start": 152.0, "end": 157.16, "text": " it dropped in terms of its overall ranking, its popularity actually went up. And the second", "tokens": [51330, 309, 8119, 294, 2115, 295, 1080, 4787, 17833, 11, 1080, 19301, 767, 1437, 493, 13, 400, 264, 1150, 51588], "temperature": 0.0, "avg_logprob": -0.10096761342641469, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.23112808167934418}, {"id": 27, "seek": 15716, "start": 157.2, "end": 163.4, "text": " thing is that the one below it is actually seen sharp, and that has less than half the", "tokens": [50366, 551, 307, 300, 264, 472, 2507, 309, 307, 767, 1612, 8199, 11, 293, 300, 575, 1570, 813, 1922, 264, 50676], "temperature": 0.0, "avg_logprob": -0.12981840197959643, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.023553980514407158}, {"id": 28, "seek": 15716, "start": 163.4, "end": 168.16, "text": " popularity level that Java does. So I think we're some way away from seeing Java losing", "tokens": [50676, 19301, 1496, 300, 10745, 775, 13, 407, 286, 519, 321, 434, 512, 636, 1314, 490, 2577, 10745, 7027, 50914], "temperature": 0.0, "avg_logprob": -0.12981840197959643, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.023553980514407158}, {"id": 29, "seek": 15716, "start": 168.16, "end": 175.0, "text": " its popularity. So let's talk about why Java is so popular. First thing we need to look", "tokens": [50914, 1080, 19301, 13, 407, 718, 311, 751, 466, 983, 10745, 307, 370, 3743, 13, 2386, 551, 321, 643, 281, 574, 51256], "temperature": 0.0, "avg_logprob": -0.12981840197959643, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.023553980514407158}, {"id": 30, "seek": 15716, "start": 175.0, "end": 184.0, "text": " at is why or what made Java popular in the first place. And if we go right back to 1995,", "tokens": [51256, 412, 307, 983, 420, 437, 1027, 10745, 3743, 294, 264, 700, 1081, 13, 400, 498, 321, 352, 558, 646, 281, 22601, 11, 51706], "temperature": 0.0, "avg_logprob": -0.12981840197959643, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.023553980514407158}, {"id": 31, "seek": 18400, "start": 184.68, "end": 190.68, "text": " I'm going to ask, anybody here remember the launch of Java? Anybody here? Okay, good,", "tokens": [50398, 286, 478, 516, 281, 1029, 11, 4472, 510, 1604, 264, 4025, 295, 10745, 30, 19082, 510, 30, 1033, 11, 665, 11, 50698], "temperature": 0.0, "avg_logprob": -0.20080386760622956, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.0032143823336809874}, {"id": 32, "seek": 18400, "start": 190.68, "end": 196.8, "text": " because there's a few old people in the audience. Excellent. And this was what really made Java", "tokens": [50698, 570, 456, 311, 257, 1326, 1331, 561, 294, 264, 4034, 13, 16723, 13, 400, 341, 390, 437, 534, 1027, 10745, 51004], "temperature": 0.0, "avg_logprob": -0.20080386760622956, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.0032143823336809874}, {"id": 33, "seek": 18400, "start": 196.8, "end": 202.0, "text": " something that people got excited about. This little dancing duke here, because essentially", "tokens": [51004, 746, 300, 561, 658, 2919, 466, 13, 639, 707, 8898, 1581, 330, 510, 11, 570, 4476, 51264], "temperature": 0.0, "avg_logprob": -0.20080386760622956, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.0032143823336809874}, {"id": 34, "seek": 18400, "start": 202.0, "end": 209.0, "text": " what you had before Java was web browsing that was static. So there was no way of including", "tokens": [51264, 437, 291, 632, 949, 10745, 390, 3670, 38602, 300, 390, 13437, 13, 407, 456, 390, 572, 636, 295, 3009, 51614], "temperature": 0.0, "avg_logprob": -0.20080386760622956, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.0032143823336809874}, {"id": 35, "seek": 20900, "start": 209.72, "end": 215.24, "text": " interesting functionality in a web page. I mean, again, I'm old enough to remember", "tokens": [50400, 1880, 14980, 294, 257, 3670, 3028, 13, 286, 914, 11, 797, 11, 286, 478, 1331, 1547, 281, 1604, 50676], "temperature": 0.0, "avg_logprob": -0.17640335495407516, "compression_ratio": 1.5663082437275986, "no_speech_prob": 0.022739505395293236}, {"id": 36, "seek": 20900, "start": 215.24, "end": 220.92, "text": " Mosaic. Anybody remember Mosaic? Oh, good. Okay, yes. Mosaic is a web browser. Now that", "tokens": [50676, 376, 42261, 13, 19082, 1604, 376, 42261, 30, 876, 11, 665, 13, 1033, 11, 2086, 13, 376, 42261, 307, 257, 3670, 11185, 13, 823, 300, 50960], "temperature": 0.0, "avg_logprob": -0.17640335495407516, "compression_ratio": 1.5663082437275986, "no_speech_prob": 0.022739505395293236}, {"id": 37, "seek": 20900, "start": 220.92, "end": 227.42000000000002, "text": " was purely text. Even if you wanted to show an image, you had to fire up an external application", "tokens": [50960, 390, 17491, 2487, 13, 2754, 498, 291, 1415, 281, 855, 364, 3256, 11, 291, 632, 281, 2610, 493, 364, 8320, 3861, 51285], "temperature": 0.0, "avg_logprob": -0.17640335495407516, "compression_ratio": 1.5663082437275986, "no_speech_prob": 0.022739505395293236}, {"id": 38, "seek": 20900, "start": 227.42000000000002, "end": 233.24, "text": " to render the image. That's how basic it was. So when Netscape came along and they", "tokens": [51285, 281, 15529, 264, 3256, 13, 663, 311, 577, 3875, 309, 390, 13, 407, 562, 426, 1385, 4747, 1361, 2051, 293, 436, 51576], "temperature": 0.0, "avg_logprob": -0.17640335495407516, "compression_ratio": 1.5663082437275986, "no_speech_prob": 0.022739505395293236}, {"id": 39, "seek": 20900, "start": 233.24, "end": 238.84, "text": " included Java into their browser, suddenly there was this wonderful way of programming", "tokens": [51576, 5556, 10745, 666, 641, 11185, 11, 5800, 456, 390, 341, 3715, 636, 295, 9410, 51856], "temperature": 0.0, "avg_logprob": -0.17640335495407516, "compression_ratio": 1.5663082437275986, "no_speech_prob": 0.022739505395293236}, {"id": 40, "seek": 23884, "start": 238.88, "end": 244.56, "text": " things and including applets. So that really fired up Java. People got excited about the", "tokens": [50366, 721, 293, 3009, 4988, 1385, 13, 407, 300, 534, 11777, 493, 10745, 13, 3432, 658, 2919, 466, 264, 50650], "temperature": 0.0, "avg_logprob": -0.12777226470237554, "compression_ratio": 1.5874439461883407, "no_speech_prob": 0.0013515560422092676}, {"id": 41, "seek": 23884, "start": 244.56, "end": 250.72, "text": " idea of right once, run anywhere. You could move your application from one platform to", "tokens": [50650, 1558, 295, 558, 1564, 11, 1190, 4992, 13, 509, 727, 1286, 428, 3861, 490, 472, 3663, 281, 50958], "temperature": 0.0, "avg_logprob": -0.12777226470237554, "compression_ratio": 1.5874439461883407, "no_speech_prob": 0.0013515560422092676}, {"id": 42, "seek": 23884, "start": 250.72, "end": 257.72, "text": " another without having to change the code, without having to recompile it. Now, to continue", "tokens": [50958, 1071, 1553, 1419, 281, 1319, 264, 3089, 11, 1553, 1419, 281, 48000, 794, 309, 13, 823, 11, 281, 2354, 51308], "temperature": 0.0, "avg_logprob": -0.12777226470237554, "compression_ratio": 1.5874439461883407, "no_speech_prob": 0.0013515560422092676}, {"id": 43, "seek": 23884, "start": 257.84000000000003, "end": 263.28000000000003, "text": " that popularity, one of the things that was a bit of a drawback, if you like, was that", "tokens": [51314, 300, 19301, 11, 472, 295, 264, 721, 300, 390, 257, 857, 295, 257, 2642, 3207, 11, 498, 291, 411, 11, 390, 300, 51586], "temperature": 0.0, "avg_logprob": -0.12777226470237554, "compression_ratio": 1.5874439461883407, "no_speech_prob": 0.0013515560422092676}, {"id": 44, "seek": 26328, "start": 263.32, "end": 269.67999999999995, "text": " it was controlled by one company. It was Sun Microsystems and they sort of wanted to maintain", "tokens": [50366, 309, 390, 10164, 538, 472, 2237, 13, 467, 390, 6163, 5818, 2635, 9321, 82, 293, 436, 1333, 295, 1415, 281, 6909, 50684], "temperature": 0.0, "avg_logprob": -0.15310766556683708, "compression_ratio": 1.5892857142857142, "no_speech_prob": 0.0032200191635638475}, {"id": 45, "seek": 26328, "start": 269.67999999999995, "end": 273.64, "text": " control over Java because it was something they'd invested in and they wanted to try", "tokens": [50684, 1969, 670, 10745, 570, 309, 390, 746, 436, 1116, 13104, 294, 293, 436, 1415, 281, 853, 50882], "temperature": 0.0, "avg_logprob": -0.15310766556683708, "compression_ratio": 1.5892857142857142, "no_speech_prob": 0.0032200191635638475}, {"id": 46, "seek": 26328, "start": 273.64, "end": 279.4, "text": " and make money from it, very logically. But people were sort of pushed for an open standard.", "tokens": [50882, 293, 652, 1460, 490, 309, 11, 588, 38887, 13, 583, 561, 645, 1333, 295, 9152, 337, 364, 1269, 3832, 13, 51170], "temperature": 0.0, "avg_logprob": -0.15310766556683708, "compression_ratio": 1.5892857142857142, "no_speech_prob": 0.0032200191635638475}, {"id": 47, "seek": 26328, "start": 279.4, "end": 286.4, "text": " People really wanted more openness around the whole idea of Java. So in 1999, we got", "tokens": [51170, 3432, 534, 1415, 544, 36200, 926, 264, 1379, 1558, 295, 10745, 13, 407, 294, 19952, 11, 321, 658, 51520], "temperature": 0.0, "avg_logprob": -0.15310766556683708, "compression_ratio": 1.5892857142857142, "no_speech_prob": 0.0032200191635638475}, {"id": 48, "seek": 28640, "start": 286.52, "end": 293.52, "text": " the Java community process. Now, rather than having, like, ANSI or ECMA, drive the standard", "tokens": [50370, 264, 10745, 1768, 1399, 13, 823, 11, 2831, 813, 1419, 11, 411, 11, 5252, 20262, 420, 19081, 9998, 11, 3332, 264, 3832, 50720], "temperature": 0.0, "avg_logprob": -0.1633943932078709, "compression_ratio": 1.6123188405797102, "no_speech_prob": 0.0026525254361331463}, {"id": 49, "seek": 28640, "start": 294.28, "end": 299.28, "text": " of Java, there was an open standard, but it was one that Sun still maintained a level", "tokens": [50758, 295, 10745, 11, 456, 390, 364, 1269, 3832, 11, 457, 309, 390, 472, 300, 6163, 920, 17578, 257, 1496, 51008], "temperature": 0.0, "avg_logprob": -0.1633943932078709, "compression_ratio": 1.6123188405797102, "no_speech_prob": 0.0026525254361331463}, {"id": 50, "seek": 28640, "start": 299.28, "end": 304.0, "text": " of control over. But this was good because it maintained that popularity. And then the", "tokens": [51008, 295, 1969, 670, 13, 583, 341, 390, 665, 570, 309, 17578, 300, 19301, 13, 400, 550, 264, 51244], "temperature": 0.0, "avg_logprob": -0.1633943932078709, "compression_ratio": 1.6123188405797102, "no_speech_prob": 0.0026525254361331463}, {"id": 51, "seek": 28640, "start": 304.0, "end": 311.0, "text": " next thing in 1999 was also a shift in terms of how people use Java. Rather than applets,", "tokens": [51244, 958, 551, 294, 19952, 390, 611, 257, 5513, 294, 2115, 295, 577, 561, 764, 10745, 13, 16571, 813, 4988, 1385, 11, 51594], "temperature": 0.0, "avg_logprob": -0.1633943932078709, "compression_ratio": 1.6123188405797102, "no_speech_prob": 0.0026525254361331463}, {"id": 52, "seek": 28640, "start": 311.52, "end": 316.26, "text": " rather than desktop applications, which had been very exciting at the beginning, it turned", "tokens": [51620, 2831, 813, 14502, 5821, 11, 597, 632, 668, 588, 4670, 412, 264, 2863, 11, 309, 3574, 51857], "temperature": 0.0, "avg_logprob": -0.1633943932078709, "compression_ratio": 1.6123188405797102, "no_speech_prob": 0.0026525254361331463}, {"id": 53, "seek": 31626, "start": 316.28, "end": 321.82, "text": " out that wasn't really the best place to use Java. And what we've seen is the shift of", "tokens": [50365, 484, 300, 2067, 380, 534, 264, 1151, 1081, 281, 764, 10745, 13, 400, 437, 321, 600, 1612, 307, 264, 5513, 295, 50642], "temperature": 0.0, "avg_logprob": -0.16722672617333567, "compression_ratio": 1.751937984496124, "no_speech_prob": 0.002120600314810872}, {"id": 54, "seek": 31626, "start": 321.82, "end": 328.34, "text": " Java onto the server side. That's where Java really hits its sweet spot. Server side applications,", "tokens": [50642, 10745, 3911, 264, 7154, 1252, 13, 663, 311, 689, 10745, 534, 8664, 1080, 3844, 4008, 13, 25684, 1252, 5821, 11, 50968], "temperature": 0.0, "avg_logprob": -0.16722672617333567, "compression_ratio": 1.751937984496124, "no_speech_prob": 0.002120600314810872}, {"id": 55, "seek": 31626, "start": 328.34, "end": 334.18, "text": " the ability to scale to internet workloads, the ability to deliver on those types of things.", "tokens": [50968, 264, 3485, 281, 4373, 281, 4705, 32452, 11, 264, 3485, 281, 4239, 322, 729, 3467, 295, 721, 13, 51260], "temperature": 0.0, "avg_logprob": -0.16722672617333567, "compression_ratio": 1.751937984496124, "no_speech_prob": 0.002120600314810872}, {"id": 56, "seek": 31626, "start": 334.18, "end": 339.53999999999996, "text": " And we got Java EE, enterprise edition. We got serverless. We got EJBs, all those good", "tokens": [51260, 400, 321, 658, 10745, 33685, 11, 14132, 11377, 13, 492, 658, 7154, 1832, 13, 492, 658, 462, 41, 33, 82, 11, 439, 729, 665, 51528], "temperature": 0.0, "avg_logprob": -0.16722672617333567, "compression_ratio": 1.751937984496124, "no_speech_prob": 0.002120600314810872}, {"id": 57, "seek": 31626, "start": 339.53999999999996, "end": 345.82, "text": " things. And again, that sort of morphed as well. So we now see things like Spring, who", "tokens": [51528, 721, 13, 400, 797, 11, 300, 1333, 295, 25778, 292, 382, 731, 13, 407, 321, 586, 536, 721, 411, 14013, 11, 567, 51842], "temperature": 0.0, "avg_logprob": -0.16722672617333567, "compression_ratio": 1.751937984496124, "no_speech_prob": 0.002120600314810872}, {"id": 58, "seek": 34582, "start": 345.86, "end": 350.26, "text": " here uses Spring? Okay, yeah, lots of people use Spring. So it's very, very popular as", "tokens": [50366, 510, 4960, 14013, 30, 1033, 11, 1338, 11, 3195, 295, 561, 764, 14013, 13, 407, 309, 311, 588, 11, 588, 3743, 382, 50586], "temperature": 0.0, "avg_logprob": -0.14776521441580234, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.0008371520671062171}, {"id": 59, "seek": 34582, "start": 350.26, "end": 355.98, "text": " a framework for developing enterprise applications. And again, we've seen that sort of migration", "tokens": [50586, 257, 8388, 337, 6416, 14132, 5821, 13, 400, 797, 11, 321, 600, 1612, 300, 1333, 295, 17011, 50872], "temperature": 0.0, "avg_logprob": -0.14776521441580234, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.0008371520671062171}, {"id": 60, "seek": 34582, "start": 355.98, "end": 362.98, "text": " away from the JCP to the Eclipse Foundation for Java Enterprise Edition. And now we've", "tokens": [50872, 1314, 490, 264, 508, 20049, 281, 264, 462, 27197, 10335, 337, 10745, 26696, 25301, 13, 400, 586, 321, 600, 51222], "temperature": 0.0, "avg_logprob": -0.14776521441580234, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.0008371520671062171}, {"id": 61, "seek": 34582, "start": 363.53999999999996, "end": 370.53999999999996, "text": " got Jakarta EE. And then moving forward again, in terms of making and continuing to deliver", "tokens": [51250, 658, 15029, 19061, 33685, 13, 400, 550, 2684, 2128, 797, 11, 294, 2115, 295, 1455, 293, 9289, 281, 4239, 51600], "temperature": 0.0, "avg_logprob": -0.14776521441580234, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.0008371520671062171}, {"id": 62, "seek": 37054, "start": 371.18, "end": 378.18, "text": " on the popularity of Java, the thing that Sun did then was to say, okay, we'll actually", "tokens": [50396, 322, 264, 19301, 295, 10745, 11, 264, 551, 300, 6163, 630, 550, 390, 281, 584, 11, 1392, 11, 321, 603, 767, 50746], "temperature": 0.0, "avg_logprob": -0.17207767698499893, "compression_ratio": 1.564102564102564, "no_speech_prob": 0.011099009774625301}, {"id": 63, "seek": 37054, "start": 378.18, "end": 385.18, "text": " open source the whole platform. This was really a push because Apache had the Harmony Project.", "tokens": [50746, 1269, 4009, 264, 1379, 3663, 13, 639, 390, 534, 257, 2944, 570, 46597, 632, 264, 43523, 2526, 9849, 13, 51096], "temperature": 0.0, "avg_logprob": -0.17207767698499893, "compression_ratio": 1.564102564102564, "no_speech_prob": 0.011099009774625301}, {"id": 64, "seek": 37054, "start": 385.18, "end": 390.3, "text": " There was IBM, who were very heavily involved in that. And they wanted to create an open", "tokens": [51096, 821, 390, 23487, 11, 567, 645, 588, 10950, 3288, 294, 300, 13, 400, 436, 1415, 281, 1884, 364, 1269, 51352], "temperature": 0.0, "avg_logprob": -0.17207767698499893, "compression_ratio": 1.564102564102564, "no_speech_prob": 0.011099009774625301}, {"id": 65, "seek": 37054, "start": 390.3, "end": 397.02000000000004, "text": " source version of Java. Sun resisted the push to do that for quite a long time. But eventually", "tokens": [51352, 4009, 3037, 295, 10745, 13, 6163, 4597, 292, 264, 2944, 281, 360, 300, 337, 1596, 257, 938, 565, 13, 583, 4728, 51688], "temperature": 0.0, "avg_logprob": -0.17207767698499893, "compression_ratio": 1.564102564102564, "no_speech_prob": 0.011099009774625301}, {"id": 66, "seek": 39702, "start": 397.03999999999996, "end": 401.94, "text": " they said, okay, there is going to be an open source Java. At some point, it might as well", "tokens": [50365, 436, 848, 11, 1392, 11, 456, 307, 516, 281, 312, 364, 1269, 4009, 10745, 13, 1711, 512, 935, 11, 309, 1062, 382, 731, 50610], "temperature": 0.0, "avg_logprob": -0.12714296633058841, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.002668187953531742}, {"id": 67, "seek": 39702, "start": 401.94, "end": 408.65999999999997, "text": " be ours. And they created open JDK. Now, initially in 2006, that was just the hotspot virtual", "tokens": [50610, 312, 11896, 13, 400, 436, 2942, 1269, 37082, 42, 13, 823, 11, 9105, 294, 14062, 11, 300, 390, 445, 264, 36121, 17698, 6374, 50946], "temperature": 0.0, "avg_logprob": -0.12714296633058841, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.002668187953531742}, {"id": 68, "seek": 39702, "start": 408.65999999999997, "end": 413.38, "text": " machine and the Java compiler. There was a lot of due diligence needed to be done in", "tokens": [50946, 3479, 293, 264, 10745, 31958, 13, 821, 390, 257, 688, 295, 3462, 40046, 2978, 281, 312, 1096, 294, 51182], "temperature": 0.0, "avg_logprob": -0.12714296633058841, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.002668187953531742}, {"id": 69, "seek": 39702, "start": 413.38, "end": 418.21999999999997, "text": " order to actually ensure that they had the rights to open source all of the code that", "tokens": [51182, 1668, 281, 767, 5586, 300, 436, 632, 264, 4601, 281, 1269, 4009, 439, 295, 264, 3089, 300, 51424], "temperature": 0.0, "avg_logprob": -0.12714296633058841, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.002668187953531742}, {"id": 70, "seek": 39702, "start": 418.21999999999997, "end": 422.38, "text": " was included in the JDK. Because there was lots of stuff that had been contributed by", "tokens": [51424, 390, 5556, 294, 264, 37082, 42, 13, 1436, 456, 390, 3195, 295, 1507, 300, 632, 668, 18434, 538, 51632], "temperature": 0.0, "avg_logprob": -0.12714296633058841, "compression_ratio": 1.6455223880597014, "no_speech_prob": 0.002668187953531742}, {"id": 71, "seek": 42238, "start": 422.42, "end": 429.42, "text": " other companies. So it wasn't till 2007. And in fact, it was JDK7 built with 31, which", "tokens": [50366, 661, 3431, 13, 407, 309, 2067, 380, 4288, 12656, 13, 400, 294, 1186, 11, 309, 390, 37082, 42, 22, 3094, 365, 10353, 11, 597, 50716], "temperature": 0.0, "avg_logprob": -0.19280372195773654, "compression_ratio": 1.5194805194805194, "no_speech_prob": 0.0025743485894054174}, {"id": 72, "seek": 42238, "start": 432.26, "end": 437.18, "text": " was the first that you could actually build completely from the open source in the open", "tokens": [50858, 390, 264, 700, 300, 291, 727, 767, 1322, 2584, 490, 264, 1269, 4009, 294, 264, 1269, 51104], "temperature": 0.0, "avg_logprob": -0.19280372195773654, "compression_ratio": 1.5194805194805194, "no_speech_prob": 0.0025743485894054174}, {"id": 73, "seek": 42238, "start": 437.18, "end": 444.18, "text": " JDK. And what that's led to is a huge growth in terms of contributions from the community.", "tokens": [51104, 37082, 42, 13, 400, 437, 300, 311, 4684, 281, 307, 257, 2603, 4599, 294, 2115, 295, 15725, 490, 264, 1768, 13, 51454], "temperature": 0.0, "avg_logprob": -0.19280372195773654, "compression_ratio": 1.5194805194805194, "no_speech_prob": 0.0025743485894054174}, {"id": 74, "seek": 42238, "start": 446.86, "end": 451.38, "text": " This is the wonderful thing about this as a project. It hasn't just been Sun and then", "tokens": [51588, 639, 307, 264, 3715, 551, 466, 341, 382, 257, 1716, 13, 467, 6132, 380, 445, 668, 6163, 293, 550, 51814], "temperature": 0.0, "avg_logprob": -0.19280372195773654, "compression_ratio": 1.5194805194805194, "no_speech_prob": 0.0025743485894054174}, {"id": 75, "seek": 45138, "start": 451.38, "end": 457.7, "text": " obviously Oracle once they acquired Sun Microsystems back in 2010. We've seen lots of companies", "tokens": [50364, 2745, 25654, 1564, 436, 17554, 6163, 5818, 2635, 9321, 82, 646, 294, 9657, 13, 492, 600, 1612, 3195, 295, 3431, 50680], "temperature": 0.0, "avg_logprob": -0.13135726050992982, "compression_ratio": 1.6137184115523466, "no_speech_prob": 0.0044678435660898685}, {"id": 76, "seek": 45138, "start": 457.7, "end": 463.54, "text": " contributing all sorts of engineering, all sorts of work to the open JDK project. And", "tokens": [50680, 19270, 439, 7527, 295, 7043, 11, 439, 7527, 295, 589, 281, 264, 1269, 37082, 42, 1716, 13, 400, 50972], "temperature": 0.0, "avg_logprob": -0.13135726050992982, "compression_ratio": 1.6137184115523466, "no_speech_prob": 0.0044678435660898685}, {"id": 77, "seek": 45138, "start": 463.54, "end": 467.1, "text": " I've listed, you know, not all of the contributors here. This is just, you know, some of the", "tokens": [50972, 286, 600, 10052, 11, 291, 458, 11, 406, 439, 295, 264, 45627, 510, 13, 639, 307, 445, 11, 291, 458, 11, 512, 295, 264, 51150], "temperature": 0.0, "avg_logprob": -0.13135726050992982, "compression_ratio": 1.6137184115523466, "no_speech_prob": 0.0044678435660898685}, {"id": 78, "seek": 45138, "start": 467.1, "end": 472.82, "text": " bigger ones who add not just bug fixes, but new features as well. You know, we've seen", "tokens": [51150, 3801, 2306, 567, 909, 406, 445, 7426, 32539, 11, 457, 777, 4122, 382, 731, 13, 509, 458, 11, 321, 600, 1612, 51436], "temperature": 0.0, "avg_logprob": -0.13135726050992982, "compression_ratio": 1.6137184115523466, "no_speech_prob": 0.0044678435660898685}, {"id": 79, "seek": 45138, "start": 472.82, "end": 479.58, "text": " things like Shenandoah from Red Hat. We've seen all sorts of different projects being", "tokens": [51436, 721, 411, 22636, 1806, 545, 490, 4477, 15867, 13, 492, 600, 1612, 439, 7527, 295, 819, 4455, 885, 51774], "temperature": 0.0, "avg_logprob": -0.13135726050992982, "compression_ratio": 1.6137184115523466, "no_speech_prob": 0.0044678435660898685}, {"id": 80, "seek": 47958, "start": 479.62, "end": 485.3, "text": " added to the JDK, not just from Oracle. So this is really what's helped to drive that", "tokens": [50366, 3869, 281, 264, 37082, 42, 11, 406, 445, 490, 25654, 13, 407, 341, 307, 534, 437, 311, 4254, 281, 3332, 300, 50650], "temperature": 0.0, "avg_logprob": -0.1911893572126116, "compression_ratio": 1.6164383561643836, "no_speech_prob": 0.0011758370092138648}, {"id": 81, "seek": 47958, "start": 485.3, "end": 491.09999999999997, "text": " popularity is it's been open standard, it's been open source, and it's very popular on", "tokens": [50650, 19301, 307, 309, 311, 668, 1269, 3832, 11, 309, 311, 668, 1269, 4009, 11, 293, 309, 311, 588, 3743, 322, 50940], "temperature": 0.0, "avg_logprob": -0.1911893572126116, "compression_ratio": 1.6164383561643836, "no_speech_prob": 0.0011758370092138648}, {"id": 82, "seek": 47958, "start": 491.09999999999997, "end": 498.09999999999997, "text": " the server side. So what makes, what makes Java so popular today? Why are we still seeing", "tokens": [50940, 264, 7154, 1252, 13, 407, 437, 1669, 11, 437, 1669, 10745, 370, 3743, 965, 30, 1545, 366, 321, 920, 2577, 51290], "temperature": 0.0, "avg_logprob": -0.1911893572126116, "compression_ratio": 1.6164383561643836, "no_speech_prob": 0.0011758370092138648}, {"id": 83, "seek": 47958, "start": 498.74, "end": 505.02, "text": " Java's popularity? One of those things, and Hilton sort of mentioned this at the beginning,", "tokens": [51322, 10745, 311, 19301, 30, 1485, 295, 729, 721, 11, 293, 389, 15200, 1333, 295, 2835, 341, 412, 264, 2863, 11, 51636], "temperature": 0.0, "avg_logprob": -0.1911893572126116, "compression_ratio": 1.6164383561643836, "no_speech_prob": 0.0011758370092138648}, {"id": 84, "seek": 50502, "start": 505.06, "end": 511.06, "text": " is the fact that we're now seeing Java evolving much more quickly. It used to be that we had", "tokens": [50366, 307, 264, 1186, 300, 321, 434, 586, 2577, 10745, 21085, 709, 544, 2661, 13, 467, 1143, 281, 312, 300, 321, 632, 50666], "temperature": 0.0, "avg_logprob": -0.12287953256190508, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.014355474151670933}, {"id": 85, "seek": 50502, "start": 511.06, "end": 518.06, "text": " two, three, even four years between releases of Java. And now, since JDK 9 back in 2017,", "tokens": [50666, 732, 11, 1045, 11, 754, 1451, 924, 1296, 16952, 295, 10745, 13, 400, 586, 11, 1670, 37082, 42, 1722, 646, 294, 6591, 11, 51016], "temperature": 0.0, "avg_logprob": -0.12287953256190508, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.014355474151670933}, {"id": 86, "seek": 50502, "start": 519.66, "end": 524.18, "text": " we have two releases a year. That's really quite significant. So there's a lot more", "tokens": [51096, 321, 362, 732, 16952, 257, 1064, 13, 663, 311, 534, 1596, 4776, 13, 407, 456, 311, 257, 688, 544, 51322], "temperature": 0.0, "avg_logprob": -0.12287953256190508, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.014355474151670933}, {"id": 87, "seek": 50502, "start": 524.18, "end": 529.42, "text": " progress in terms of delivering on the new features that programmers want, developers", "tokens": [51322, 4205, 294, 2115, 295, 14666, 322, 264, 777, 4122, 300, 41504, 528, 11, 8849, 51584], "temperature": 0.0, "avg_logprob": -0.12287953256190508, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.014355474151670933}, {"id": 88, "seek": 52942, "start": 529.4599999999999, "end": 534.8199999999999, "text": " want. In order to keep that language fresh, keep it appealing to developers so that they", "tokens": [50366, 528, 13, 682, 1668, 281, 1066, 300, 2856, 4451, 11, 1066, 309, 23842, 281, 8849, 370, 300, 436, 50634], "temperature": 0.0, "avg_logprob": -0.15343835813189866, "compression_ratio": 1.779527559055118, "no_speech_prob": 0.023010775446891785}, {"id": 89, "seek": 52942, "start": 534.8199999999999, "end": 539.62, "text": " can continue to do the things that they want to do. And as the architectures shift, you", "tokens": [50634, 393, 2354, 281, 360, 264, 721, 300, 436, 528, 281, 360, 13, 400, 382, 264, 6331, 1303, 5513, 11, 291, 50874], "temperature": 0.0, "avg_logprob": -0.15343835813189866, "compression_ratio": 1.779527559055118, "no_speech_prob": 0.023010775446891785}, {"id": 90, "seek": 52942, "start": 539.62, "end": 544.5799999999999, "text": " know, to things like microservices, and that type of approach, the language needs to adapt", "tokens": [50874, 458, 11, 281, 721, 411, 15547, 47480, 11, 293, 300, 2010, 295, 3109, 11, 264, 2856, 2203, 281, 6231, 51122], "temperature": 0.0, "avg_logprob": -0.15343835813189866, "compression_ratio": 1.779527559055118, "no_speech_prob": 0.023010775446891785}, {"id": 91, "seek": 52942, "start": 544.5799999999999, "end": 551.9399999999999, "text": " to that. And we've seen that. We've seen over several releases a number of new features", "tokens": [51122, 281, 300, 13, 400, 321, 600, 1612, 300, 13, 492, 600, 1612, 670, 2940, 16952, 257, 1230, 295, 777, 4122, 51490], "temperature": 0.0, "avg_logprob": -0.15343835813189866, "compression_ratio": 1.779527559055118, "no_speech_prob": 0.023010775446891785}, {"id": 92, "seek": 52942, "start": 551.9399999999999, "end": 557.78, "text": " being added to the Java platform, to the Java language, which is keeping it fresh, and therefore", "tokens": [51490, 885, 3869, 281, 264, 10745, 3663, 11, 281, 264, 10745, 2856, 11, 597, 307, 5145, 309, 4451, 11, 293, 4412, 51782], "temperature": 0.0, "avg_logprob": -0.15343835813189866, "compression_ratio": 1.779527559055118, "no_speech_prob": 0.023010775446891785}, {"id": 93, "seek": 55778, "start": 557.8, "end": 564.3, "text": " driving its popularity even further, keeping it at that level. Obviously, JDK 8 introduced", "tokens": [50365, 4840, 1080, 19301, 754, 3052, 11, 5145, 309, 412, 300, 1496, 13, 7580, 11, 37082, 42, 1649, 7268, 50690], "temperature": 0.0, "avg_logprob": -0.1384761101376694, "compression_ratio": 1.6277372262773722, "no_speech_prob": 0.0011393232271075249}, {"id": 94, "seek": 55778, "start": 564.3, "end": 569.66, "text": " the idea of lambdas and streams, which gave us a way of doing functional programming in", "tokens": [50690, 264, 1558, 295, 10097, 27476, 293, 15842, 11, 597, 2729, 505, 257, 636, 295, 884, 11745, 9410, 294, 50958], "temperature": 0.0, "avg_logprob": -0.1384761101376694, "compression_ratio": 1.6277372262773722, "no_speech_prob": 0.0011393232271075249}, {"id": 95, "seek": 55778, "start": 569.66, "end": 575.66, "text": " Java. And I think lots of people here would agree that JDK 8 was a big release. It was", "tokens": [50958, 10745, 13, 400, 286, 519, 3195, 295, 561, 510, 576, 3986, 300, 37082, 42, 1649, 390, 257, 955, 4374, 13, 467, 390, 51258], "temperature": 0.0, "avg_logprob": -0.1384761101376694, "compression_ratio": 1.6277372262773722, "no_speech_prob": 0.0011393232271075249}, {"id": 96, "seek": 55778, "start": 575.66, "end": 579.18, "text": " one where suddenly people went, oh, this is great. Now I can do all these cool things", "tokens": [51258, 472, 689, 5800, 561, 1437, 11, 1954, 11, 341, 307, 869, 13, 823, 286, 393, 360, 439, 613, 1627, 721, 51434], "temperature": 0.0, "avg_logprob": -0.1384761101376694, "compression_ratio": 1.6277372262773722, "no_speech_prob": 0.0011393232271075249}, {"id": 97, "seek": 55778, "start": 579.18, "end": 586.18, "text": " with streams and lambdas and stuff like that. JDK 9 introduced modularity, a bit of a divisive", "tokens": [51434, 365, 15842, 293, 10097, 27476, 293, 1507, 411, 300, 13, 37082, 42, 1722, 7268, 31111, 507, 11, 257, 857, 295, 257, 25974, 488, 51784], "temperature": 0.0, "avg_logprob": -0.1384761101376694, "compression_ratio": 1.6277372262773722, "no_speech_prob": 0.0011393232271075249}, {"id": 98, "seek": 58618, "start": 586.5799999999999, "end": 593.5799999999999, "text": " one in terms of a feature. Lots of people didn't really see the benefit of it directly.", "tokens": [50384, 472, 294, 2115, 295, 257, 4111, 13, 15908, 295, 561, 994, 380, 534, 536, 264, 5121, 295, 309, 3838, 13, 50734], "temperature": 0.0, "avg_logprob": -0.14778396382051356, "compression_ratio": 1.6088888888888888, "no_speech_prob": 0.007287133019417524}, {"id": 99, "seek": 58618, "start": 593.62, "end": 597.9399999999999, "text": " But what we have seen now that we are moving to microservices and we want to put things", "tokens": [50736, 583, 437, 321, 362, 1612, 586, 300, 321, 366, 2684, 281, 15547, 47480, 293, 321, 528, 281, 829, 721, 50952], "temperature": 0.0, "avg_logprob": -0.14778396382051356, "compression_ratio": 1.6088888888888888, "no_speech_prob": 0.007287133019417524}, {"id": 100, "seek": 58618, "start": 597.9399999999999, "end": 604.14, "text": " into containers, the ability to use modules, the ability to use JLink to create a runtime", "tokens": [50952, 666, 17089, 11, 264, 3485, 281, 764, 16679, 11, 264, 3485, 281, 764, 508, 26822, 281, 1884, 257, 34474, 51262], "temperature": 0.0, "avg_logprob": -0.14778396382051356, "compression_ratio": 1.6088888888888888, "no_speech_prob": 0.007287133019417524}, {"id": 101, "seek": 58618, "start": 604.14, "end": 610.6999999999999, "text": " which is tailored specifically to your application is very powerful. It means we can reduce from", "tokens": [51262, 597, 307, 34858, 4682, 281, 428, 3861, 307, 588, 4005, 13, 467, 1355, 321, 393, 5407, 490, 51590], "temperature": 0.0, "avg_logprob": -0.14778396382051356, "compression_ratio": 1.6088888888888888, "no_speech_prob": 0.007287133019417524}, {"id": 102, "seek": 61070, "start": 610.74, "end": 617.0200000000001, "text": " sort of 300 megabytes as a Java runtime down to maybe 40 or 50 megabytes by only including", "tokens": [50366, 1333, 295, 6641, 10816, 24538, 382, 257, 10745, 34474, 760, 281, 1310, 3356, 420, 2625, 10816, 24538, 538, 787, 3009, 50680], "temperature": 0.0, "avg_logprob": -0.14012232134419103, "compression_ratio": 1.597902097902098, "no_speech_prob": 0.006576824467629194}, {"id": 103, "seek": 61070, "start": 617.0200000000001, "end": 622.1, "text": " modules that we need for our service. So that's a very powerful thing, even though it's not", "tokens": [50680, 16679, 300, 321, 643, 337, 527, 2643, 13, 407, 300, 311, 257, 588, 4005, 551, 11, 754, 1673, 309, 311, 406, 50934], "temperature": 0.0, "avg_logprob": -0.14012232134419103, "compression_ratio": 1.597902097902098, "no_speech_prob": 0.006576824467629194}, {"id": 104, "seek": 61070, "start": 622.1, "end": 628.82, "text": " a language level thing. JDK 10, local variable type inference. So, you know, Java script's", "tokens": [50934, 257, 2856, 1496, 551, 13, 37082, 42, 1266, 11, 2654, 7006, 2010, 38253, 13, 407, 11, 291, 458, 11, 10745, 5755, 311, 51270], "temperature": 0.0, "avg_logprob": -0.14012232134419103, "compression_ratio": 1.597902097902098, "no_speech_prob": 0.006576824467629194}, {"id": 105, "seek": 61070, "start": 628.82, "end": 633.3000000000001, "text": " got it. It must be good. Let's add it to Java. Again, you know, it's one of those sort of", "tokens": [51270, 658, 309, 13, 467, 1633, 312, 665, 13, 961, 311, 909, 309, 281, 10745, 13, 3764, 11, 291, 458, 11, 309, 311, 472, 295, 729, 1333, 295, 51494], "temperature": 0.0, "avg_logprob": -0.14012232134419103, "compression_ratio": 1.597902097902098, "no_speech_prob": 0.006576824467629194}, {"id": 106, "seek": 61070, "start": 633.3000000000001, "end": 640.3000000000001, "text": " minor features, but still something that people liked. Then in JDK 14, we got records. That's", "tokens": [51494, 6696, 4122, 11, 457, 920, 746, 300, 561, 4501, 13, 1396, 294, 37082, 42, 3499, 11, 321, 658, 7724, 13, 663, 311, 51844], "temperature": 0.0, "avg_logprob": -0.14012232134419103, "compression_ratio": 1.597902097902098, "no_speech_prob": 0.006576824467629194}, {"id": 107, "seek": 64030, "start": 640.38, "end": 646.38, "text": " another big thing, I think, where people suddenly had the ability to create data types and rather", "tokens": [50368, 1071, 955, 551, 11, 286, 519, 11, 689, 561, 5800, 632, 264, 3485, 281, 1884, 1412, 3467, 293, 2831, 50668], "temperature": 0.0, "avg_logprob": -0.1371000289916992, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.0007454977021552622}, {"id": 108, "seek": 64030, "start": 646.38, "end": 651.8199999999999, "text": " than having lots of boilerplate code for all of the classes that just wrapped a few values,", "tokens": [50668, 813, 1419, 3195, 295, 39228, 37008, 3089, 337, 439, 295, 264, 5359, 300, 445, 14226, 257, 1326, 4190, 11, 50940], "temperature": 0.0, "avg_logprob": -0.1371000289916992, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.0007454977021552622}, {"id": 109, "seek": 64030, "start": 651.8199999999999, "end": 656.54, "text": " suddenly you could use a single line and define a record with a set of values that you want", "tokens": [50940, 5800, 291, 727, 764, 257, 2167, 1622, 293, 6964, 257, 2136, 365, 257, 992, 295, 4190, 300, 291, 528, 51176], "temperature": 0.0, "avg_logprob": -0.1371000289916992, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.0007454977021552622}, {"id": 110, "seek": 64030, "start": 656.54, "end": 662.62, "text": " to store in there. Seal classes in JDK 15. Many people look at it and go, I don't get", "tokens": [51176, 281, 3531, 294, 456, 13, 46207, 5359, 294, 37082, 42, 2119, 13, 5126, 561, 574, 412, 309, 293, 352, 11, 286, 500, 380, 483, 51480], "temperature": 0.0, "avg_logprob": -0.1371000289916992, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.0007454977021552622}, {"id": 111, "seek": 64030, "start": 662.62, "end": 668.14, "text": " why I need seal classes, but when you start getting into pattern matching and the idea", "tokens": [51480, 983, 286, 643, 12185, 5359, 11, 457, 562, 291, 722, 1242, 666, 5102, 14324, 293, 264, 1558, 51756], "temperature": 0.0, "avg_logprob": -0.1371000289916992, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.0007454977021552622}, {"id": 112, "seek": 66814, "start": 668.18, "end": 674.78, "text": " of switch using pattern matching and having exhaustiveness in that switch, then seal types", "tokens": [50366, 295, 3679, 1228, 5102, 14324, 293, 1419, 14687, 8477, 294, 300, 3679, 11, 550, 12185, 3467, 50696], "temperature": 0.0, "avg_logprob": -0.1231330644966352, "compression_ratio": 1.8489795918367347, "no_speech_prob": 0.0012820729753002524}, {"id": 113, "seek": 66814, "start": 674.78, "end": 679.06, "text": " do make a lot of sense. And pattern matching is really the kind of big thing that we've", "tokens": [50696, 360, 652, 257, 688, 295, 2020, 13, 400, 5102, 14324, 307, 534, 264, 733, 295, 955, 551, 300, 321, 600, 50910], "temperature": 0.0, "avg_logprob": -0.1231330644966352, "compression_ratio": 1.8489795918367347, "no_speech_prob": 0.0012820729753002524}, {"id": 114, "seek": 66814, "start": 679.06, "end": 683.66, "text": " seen over the last few releases. Pattern matching, for instance, of pattern matching for switch,", "tokens": [50910, 1612, 670, 264, 1036, 1326, 16952, 13, 34367, 77, 14324, 11, 337, 5197, 11, 295, 5102, 14324, 337, 3679, 11, 51140], "temperature": 0.0, "avg_logprob": -0.1231330644966352, "compression_ratio": 1.8489795918367347, "no_speech_prob": 0.0012820729753002524}, {"id": 115, "seek": 66814, "start": 683.66, "end": 688.3, "text": " pattern matching for records, all of which is taking that sort of some of the rough edges", "tokens": [51140, 5102, 14324, 337, 7724, 11, 439, 295, 597, 307, 1940, 300, 1333, 295, 512, 295, 264, 5903, 8819, 51372], "temperature": 0.0, "avg_logprob": -0.1231330644966352, "compression_ratio": 1.8489795918367347, "no_speech_prob": 0.0012820729753002524}, {"id": 116, "seek": 66814, "start": 688.3, "end": 692.86, "text": " off the language and just making it a little easier for developers and then maintaining", "tokens": [51372, 766, 264, 2856, 293, 445, 1455, 309, 257, 707, 3571, 337, 8849, 293, 550, 14916, 51600], "temperature": 0.0, "avg_logprob": -0.1231330644966352, "compression_ratio": 1.8489795918367347, "no_speech_prob": 0.0012820729753002524}, {"id": 117, "seek": 69286, "start": 692.86, "end": 699.86, "text": " that popularity. And in terms of some of the bigger features as well, OpenJDK is driving", "tokens": [50364, 300, 19301, 13, 400, 294, 2115, 295, 512, 295, 264, 3801, 4122, 382, 731, 11, 7238, 41, 35, 42, 307, 4840, 50714], "temperature": 0.0, "avg_logprob": -0.16861609195141083, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.0029736782889813185}, {"id": 118, "seek": 69286, "start": 701.62, "end": 707.46, "text": " those projects. We've got things like AMBA, which is the whole idea of the small language", "tokens": [50802, 729, 4455, 13, 492, 600, 658, 721, 411, 6475, 9295, 11, 597, 307, 264, 1379, 1558, 295, 264, 1359, 2856, 51094], "temperature": 0.0, "avg_logprob": -0.16861609195141083, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.0029736782889813185}, {"id": 119, "seek": 69286, "start": 707.46, "end": 711.94, "text": " features like records, like pattern matching and so on. But then there are other ones like", "tokens": [51094, 4122, 411, 7724, 11, 411, 5102, 14324, 293, 370, 322, 13, 583, 550, 456, 366, 661, 2306, 411, 51318], "temperature": 0.0, "avg_logprob": -0.16861609195141083, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.0029736782889813185}, {"id": 120, "seek": 69286, "start": 711.94, "end": 718.1800000000001, "text": " Lume, that came in JDK 19 initially. We've seen some more stuff coming in JDK 20. That's", "tokens": [51318, 441, 2540, 11, 300, 1361, 294, 37082, 42, 1294, 9105, 13, 492, 600, 1612, 512, 544, 1507, 1348, 294, 37082, 42, 945, 13, 663, 311, 51630], "temperature": 0.0, "avg_logprob": -0.16861609195141083, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.0029736782889813185}, {"id": 121, "seek": 71818, "start": 718.2199999999999, "end": 724.5, "text": " another very exciting thing from the point of view of scalability of Java applications.", "tokens": [50366, 1071, 588, 4670, 551, 490, 264, 935, 295, 1910, 295, 15664, 2310, 295, 10745, 5821, 13, 50680], "temperature": 0.0, "avg_logprob": -0.10498829477841091, "compression_ratio": 1.7110266159695817, "no_speech_prob": 0.0015397029928863049}, {"id": 122, "seek": 71818, "start": 724.5, "end": 730.5799999999999, "text": " If you have a server-side application that has lots of connections coming in simultaneously,", "tokens": [50680, 759, 291, 362, 257, 7154, 12, 1812, 3861, 300, 575, 3195, 295, 9271, 1348, 294, 16561, 11, 50984], "temperature": 0.0, "avg_logprob": -0.10498829477841091, "compression_ratio": 1.7110266159695817, "no_speech_prob": 0.0015397029928863049}, {"id": 123, "seek": 71818, "start": 730.5799999999999, "end": 735.38, "text": " but those connections are IO bound, meaning you have to wait a long time for something", "tokens": [50984, 457, 729, 9271, 366, 39839, 5472, 11, 3620, 291, 362, 281, 1699, 257, 938, 565, 337, 746, 51224], "temperature": 0.0, "avg_logprob": -0.10498829477841091, "compression_ratio": 1.7110266159695817, "no_speech_prob": 0.0015397029928863049}, {"id": 124, "seek": 71818, "start": 735.38, "end": 740.6999999999999, "text": " to happen in terms of IO, using virtual threads through Project Lume is going to increase", "tokens": [51224, 281, 1051, 294, 2115, 295, 39839, 11, 1228, 6374, 19314, 807, 9849, 441, 2540, 307, 516, 281, 3488, 51490], "temperature": 0.0, "avg_logprob": -0.10498829477841091, "compression_ratio": 1.7110266159695817, "no_speech_prob": 0.0015397029928863049}, {"id": 125, "seek": 71818, "start": 740.6999999999999, "end": 747.6999999999999, "text": " the scalability of that application by orders of magnitude and make it much more performant.", "tokens": [51490, 264, 15664, 2310, 295, 300, 3861, 538, 9470, 295, 15668, 293, 652, 309, 709, 544, 2042, 394, 13, 51840], "temperature": 0.0, "avg_logprob": -0.10498829477841091, "compression_ratio": 1.7110266159695817, "no_speech_prob": 0.0015397029928863049}, {"id": 126, "seek": 74818, "start": 748.9399999999999, "end": 753.9399999999999, "text": " Project Panama, replacement for JNI. So now we have foreign function interfaces, foreign", "tokens": [50402, 9849, 41202, 11, 14419, 337, 508, 42496, 13, 407, 586, 321, 362, 5329, 2445, 28416, 11, 5329, 50652], "temperature": 0.0, "avg_logprob": -0.16222093338356877, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0004907432594336569}, {"id": 127, "seek": 74818, "start": 753.9399999999999, "end": 759.62, "text": " memory interfaces. Anybody here use JNI? A few people. I remember talking to one of", "tokens": [50652, 4675, 28416, 13, 19082, 510, 764, 508, 42496, 30, 316, 1326, 561, 13, 286, 1604, 1417, 281, 472, 295, 50936], "temperature": 0.0, "avg_logprob": -0.16222093338356877, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0004907432594336569}, {"id": 128, "seek": 74818, "start": 759.62, "end": 763.7399999999999, "text": " the people who initially designed JNI and I said, it's always a little bit complicated", "tokens": [50936, 264, 561, 567, 9105, 4761, 508, 42496, 293, 286, 848, 11, 309, 311, 1009, 257, 707, 857, 6179, 51142], "temperature": 0.0, "avg_logprob": -0.16222093338356877, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0004907432594336569}, {"id": 129, "seek": 74818, "start": 763.7399999999999, "end": 768.2199999999999, "text": " to use that. You've got to do this like header files and then you've got to find the right", "tokens": [51142, 281, 764, 300, 13, 509, 600, 658, 281, 360, 341, 411, 23117, 7098, 293, 550, 291, 600, 658, 281, 915, 264, 558, 51366], "temperature": 0.0, "avg_logprob": -0.16222093338356877, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0004907432594336569}, {"id": 130, "seek": 74818, "start": 768.2199999999999, "end": 772.5799999999999, "text": " libraries and stuff like that. He said, yes, we designed it that way. And I thought that's", "tokens": [51366, 15148, 293, 1507, 411, 300, 13, 634, 848, 11, 2086, 11, 321, 4761, 309, 300, 636, 13, 400, 286, 1194, 300, 311, 51584], "temperature": 0.0, "avg_logprob": -0.16222093338356877, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0004907432594336569}, {"id": 131, "seek": 74818, "start": 772.5799999999999, "end": 776.9399999999999, "text": " not really the idea, is it? You don't want to design something to be difficult to use.", "tokens": [51584, 406, 534, 264, 1558, 11, 307, 309, 30, 509, 500, 380, 528, 281, 1715, 746, 281, 312, 2252, 281, 764, 13, 51802], "temperature": 0.0, "avg_logprob": -0.16222093338356877, "compression_ratio": 1.7087378640776698, "no_speech_prob": 0.0004907432594336569}, {"id": 132, "seek": 77694, "start": 776.94, "end": 783.7, "text": " But that was their guiding principle. So Panama is about making that much easier. Valhalla,", "tokens": [50364, 583, 300, 390, 641, 25061, 8665, 13, 407, 41202, 307, 466, 1455, 300, 709, 3571, 13, 7188, 71, 10352, 11, 50702], "temperature": 0.0, "avg_logprob": -0.13412735440315457, "compression_ratio": 1.6592592592592592, "no_speech_prob": 0.04701622948050499}, {"id": 133, "seek": 77694, "start": 783.7, "end": 789.94, "text": " we haven't really seen much of that yet, but that's a bigger thing in terms of how to create", "tokens": [50702, 321, 2378, 380, 534, 1612, 709, 295, 300, 1939, 11, 457, 300, 311, 257, 3801, 551, 294, 2115, 295, 577, 281, 1884, 51014], "temperature": 0.0, "avg_logprob": -0.13412735440315457, "compression_ratio": 1.6592592592592592, "no_speech_prob": 0.04701622948050499}, {"id": 134, "seek": 77694, "start": 789.94, "end": 794.22, "text": " a different way of doing things in the Java language from the point of view of storage.", "tokens": [51014, 257, 819, 636, 295, 884, 721, 294, 264, 10745, 2856, 490, 264, 935, 295, 1910, 295, 6725, 13, 51228], "temperature": 0.0, "avg_logprob": -0.13412735440315457, "compression_ratio": 1.6592592592592592, "no_speech_prob": 0.04701622948050499}, {"id": 135, "seek": 77694, "start": 794.22, "end": 800.5400000000001, "text": " Things like value types and the ability to store a collection of primitives, rather than", "tokens": [51228, 9514, 411, 2158, 3467, 293, 264, 3485, 281, 3531, 257, 5765, 295, 2886, 38970, 11, 2831, 813, 51544], "temperature": 0.0, "avg_logprob": -0.13412735440315457, "compression_ratio": 1.6592592592592592, "no_speech_prob": 0.04701622948050499}, {"id": 136, "seek": 77694, "start": 800.5400000000001, "end": 806.82, "text": " having an array list of ints where you have to use auto-boxing and unboxing to use the", "tokens": [51544, 1419, 364, 10225, 1329, 295, 560, 82, 689, 291, 362, 281, 764, 8399, 12, 45047, 293, 26266, 281, 764, 264, 51858], "temperature": 0.0, "avg_logprob": -0.13412735440315457, "compression_ratio": 1.6592592592592592, "no_speech_prob": 0.04701622948050499}, {"id": 137, "seek": 80682, "start": 806.86, "end": 812.1800000000001, "text": " wrapper class and create specific object instances, what we'll now be able to do is have an array", "tokens": [50366, 46906, 1508, 293, 1884, 2685, 2657, 14519, 11, 437, 321, 603, 586, 312, 1075, 281, 360, 307, 362, 364, 10225, 50632], "temperature": 0.0, "avg_logprob": -0.13232396683602962, "compression_ratio": 1.6236559139784945, "no_speech_prob": 0.0012501085875555873}, {"id": 138, "seek": 80682, "start": 812.1800000000001, "end": 818.1400000000001, "text": " list of ints and actually store those primitives without boxing them. So that's again helping", "tokens": [50632, 1329, 295, 560, 82, 293, 767, 3531, 729, 2886, 38970, 1553, 24424, 552, 13, 407, 300, 311, 797, 4315, 50930], "temperature": 0.0, "avg_logprob": -0.13232396683602962, "compression_ratio": 1.6236559139784945, "no_speech_prob": 0.0012501085875555873}, {"id": 139, "seek": 80682, "start": 818.1400000000001, "end": 823.58, "text": " to deliver on performance and solving some of those small problems. And then we've got", "tokens": [50930, 281, 4239, 322, 3389, 293, 12606, 512, 295, 729, 1359, 2740, 13, 400, 550, 321, 600, 658, 51202], "temperature": 0.0, "avg_logprob": -0.13232396683602962, "compression_ratio": 1.6236559139784945, "no_speech_prob": 0.0012501085875555873}, {"id": 140, "seek": 80682, "start": 823.58, "end": 828.1800000000001, "text": " things around the idea of startup time for the JVM because of the fact you're using", "tokens": [51202, 721, 926, 264, 1558, 295, 18578, 565, 337, 264, 508, 53, 44, 570, 295, 264, 1186, 291, 434, 1228, 51432], "temperature": 0.0, "avg_logprob": -0.13232396683602962, "compression_ratio": 1.6236559139784945, "no_speech_prob": 0.0012501085875555873}, {"id": 141, "seek": 80682, "start": 828.1800000000001, "end": 832.46, "text": " byte codes, you have to convert them into native instructions. That's always been a bit of", "tokens": [51432, 40846, 14211, 11, 291, 362, 281, 7620, 552, 666, 8470, 9415, 13, 663, 311, 1009, 668, 257, 857, 295, 51646], "temperature": 0.0, "avg_logprob": -0.13232396683602962, "compression_ratio": 1.6236559139784945, "no_speech_prob": 0.0012501085875555873}, {"id": 142, "seek": 83246, "start": 832.46, "end": 838.4200000000001, "text": " an issue for the way the applications start. So we've got Java on crack, the idea of coordinated", "tokens": [50364, 364, 2734, 337, 264, 636, 264, 5821, 722, 13, 407, 321, 600, 658, 10745, 322, 6226, 11, 264, 1558, 295, 29591, 50662], "temperature": 0.0, "avg_logprob": -0.2192806425548735, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.021097885444760323}, {"id": 143, "seek": 83246, "start": 838.4200000000001, "end": 843.22, "text": " restore at checkpoints. You can freeze an application and then restart it. We've got", "tokens": [50662, 15227, 412, 1520, 20552, 13, 509, 393, 15959, 364, 3861, 293, 550, 21022, 309, 13, 492, 600, 658, 50902], "temperature": 0.0, "avg_logprob": -0.2192806425548735, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.021097885444760323}, {"id": 144, "seek": 83246, "start": 843.22, "end": 848.38, "text": " Project Leiden, which is again looking at the startup time of Java applications, more", "tokens": [50902, 9849, 1456, 4380, 11, 597, 307, 797, 1237, 412, 264, 18578, 565, 295, 10745, 5821, 11, 544, 51160], "temperature": 0.0, "avg_logprob": -0.2192806425548735, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.021097885444760323}, {"id": 145, "seek": 83246, "start": 848.38, "end": 853.4200000000001, "text": " related to some of the work that's happened in the Growl VM, where you have a native", "tokens": [51160, 4077, 281, 512, 295, 264, 589, 300, 311, 2011, 294, 264, 18476, 75, 18038, 11, 689, 291, 362, 257, 8470, 51412], "temperature": 0.0, "avg_logprob": -0.2192806425548735, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.021097885444760323}, {"id": 146, "seek": 83246, "start": 853.4200000000001, "end": 859.0600000000001, "text": " image and you compile for a specific platform rather than the right one that's run anywhere", "tokens": [51412, 3256, 293, 291, 31413, 337, 257, 2685, 3663, 2831, 813, 264, 558, 472, 300, 311, 1190, 4992, 51694], "temperature": 0.0, "avg_logprob": -0.2192806425548735, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.021097885444760323}, {"id": 147, "seek": 85906, "start": 859.14, "end": 865.7399999999999, "text": " idea. Freedom to choose. Again, Hilton mentioned this at the beginning. This is one of the", "tokens": [50368, 1558, 13, 22208, 281, 2826, 13, 3764, 11, 389, 15200, 2835, 341, 412, 264, 2863, 13, 639, 307, 472, 295, 264, 50698], "temperature": 0.0, "avg_logprob": -0.16371152985770748, "compression_ratio": 1.7054263565891472, "no_speech_prob": 0.015008777379989624}, {"id": 148, "seek": 85906, "start": 865.7399999999999, "end": 871.06, "text": " really powerful things about Java is that you have so many options, not just in terms", "tokens": [50698, 534, 4005, 721, 466, 10745, 307, 300, 291, 362, 370, 867, 3956, 11, 406, 445, 294, 2115, 50964], "temperature": 0.0, "avg_logprob": -0.16371152985770748, "compression_ratio": 1.7054263565891472, "no_speech_prob": 0.015008777379989624}, {"id": 149, "seek": 85906, "start": 871.06, "end": 877.2199999999999, "text": " of versions, but in terms of distributions. Open JDK gives you the source code and then", "tokens": [50964, 295, 9606, 11, 457, 294, 2115, 295, 37870, 13, 7238, 37082, 42, 2709, 291, 264, 4009, 3089, 293, 550, 51272], "temperature": 0.0, "avg_logprob": -0.16371152985770748, "compression_ratio": 1.7054263565891472, "no_speech_prob": 0.015008777379989624}, {"id": 150, "seek": 85906, "start": 877.2199999999999, "end": 881.7399999999999, "text": " lots of people have taken that, they built it and then they can provide that to you as", "tokens": [51272, 3195, 295, 561, 362, 2726, 300, 11, 436, 3094, 309, 293, 550, 436, 393, 2893, 300, 281, 291, 382, 51498], "temperature": 0.0, "avg_logprob": -0.16371152985770748, "compression_ratio": 1.7054263565891472, "no_speech_prob": 0.015008777379989624}, {"id": 151, "seek": 85906, "start": 881.7399999999999, "end": 886.7399999999999, "text": " a distribution. You can install it and then if you need support, if you need maintenance", "tokens": [51498, 257, 7316, 13, 509, 393, 3625, 309, 293, 550, 498, 291, 643, 1406, 11, 498, 291, 643, 11258, 51748], "temperature": 0.0, "avg_logprob": -0.16371152985770748, "compression_ratio": 1.7054263565891472, "no_speech_prob": 0.015008777379989624}, {"id": 152, "seek": 88674, "start": 886.78, "end": 890.74, "text": " around that, you have lots of different options for that. So it's very important having that", "tokens": [50366, 926, 300, 11, 291, 362, 3195, 295, 819, 3956, 337, 300, 13, 407, 309, 311, 588, 1021, 1419, 300, 50564], "temperature": 0.0, "avg_logprob": -0.17592693897003822, "compression_ratio": 1.5895196506550218, "no_speech_prob": 0.0022905522491782904}, {"id": 153, "seek": 88674, "start": 890.74, "end": 897.74, "text": " freedom. Last thing then, why will Java remain popular in the next 20 years, let's say? And", "tokens": [50564, 5645, 13, 5264, 551, 550, 11, 983, 486, 10745, 6222, 3743, 294, 264, 958, 945, 924, 11, 718, 311, 584, 30, 400, 50914], "temperature": 0.0, "avg_logprob": -0.17592693897003822, "compression_ratio": 1.5895196506550218, "no_speech_prob": 0.0022905522491782904}, {"id": 154, "seek": 88674, "start": 900.22, "end": 904.9, "text": " I think there's several reasons for this. Java is open. The fact that we have an open", "tokens": [51038, 286, 519, 456, 311, 2940, 4112, 337, 341, 13, 10745, 307, 1269, 13, 440, 1186, 300, 321, 362, 364, 1269, 51272], "temperature": 0.0, "avg_logprob": -0.17592693897003822, "compression_ratio": 1.5895196506550218, "no_speech_prob": 0.0022905522491782904}, {"id": 155, "seek": 88674, "start": 904.9, "end": 911.9, "text": " standard, people can contribute to that, people can join the JCP, they can join the open JDK,", "tokens": [51272, 3832, 11, 561, 393, 10586, 281, 300, 11, 561, 393, 3917, 264, 508, 20049, 11, 436, 393, 3917, 264, 1269, 37082, 42, 11, 51622], "temperature": 0.0, "avg_logprob": -0.17592693897003822, "compression_ratio": 1.5895196506550218, "no_speech_prob": 0.0022905522491782904}, {"id": 156, "seek": 91190, "start": 911.9, "end": 917.98, "text": " open source. Java's continuing to evolve. It's not static. It's not stationary. We're", "tokens": [50364, 1269, 4009, 13, 10745, 311, 9289, 281, 16693, 13, 467, 311, 406, 13437, 13, 467, 311, 406, 30452, 13, 492, 434, 50668], "temperature": 0.0, "avg_logprob": -0.18659122173602766, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.010810920037329197}, {"id": 157, "seek": 91190, "start": 917.98, "end": 922.86, "text": " seeing lots of different things happening to Java, which address the needs of developers", "tokens": [50668, 2577, 3195, 295, 819, 721, 2737, 281, 10745, 11, 597, 2985, 264, 2203, 295, 8849, 50912], "temperature": 0.0, "avg_logprob": -0.18659122173602766, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.010810920037329197}, {"id": 158, "seek": 91190, "start": 922.86, "end": 928.86, "text": " and keeping it fresh, allowing people to suggest things in terms of new features and so on.", "tokens": [50912, 293, 5145, 309, 4451, 11, 8293, 561, 281, 3402, 721, 294, 2115, 295, 777, 4122, 293, 370, 322, 13, 51212], "temperature": 0.0, "avg_logprob": -0.18659122173602766, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.010810920037329197}, {"id": 159, "seek": 91190, "start": 928.86, "end": 935.86, "text": " Java performs. We have this idea of the virtual machine. We've seen how things like JIP compilation", "tokens": [51212, 10745, 26213, 13, 492, 362, 341, 1558, 295, 264, 6374, 3479, 13, 492, 600, 1612, 577, 721, 411, 508, 9139, 40261, 51562], "temperature": 0.0, "avg_logprob": -0.18659122173602766, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.010810920037329197}, {"id": 160, "seek": 91190, "start": 936.5799999999999, "end": 941.14, "text": " could improve performance over statically compiled code. And we're looking at how to", "tokens": [51598, 727, 3470, 3389, 670, 2219, 984, 36548, 3089, 13, 400, 321, 434, 1237, 412, 577, 281, 51826], "temperature": 0.0, "avg_logprob": -0.18659122173602766, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.010810920037329197}, {"id": 161, "seek": 94114, "start": 941.18, "end": 945.3, "text": " take that even further, using different ways of doing static compilation, different ways", "tokens": [50366, 747, 300, 754, 3052, 11, 1228, 819, 2098, 295, 884, 13437, 40261, 11, 819, 2098, 50572], "temperature": 0.0, "avg_logprob": -0.13651695251464843, "compression_ratio": 1.9227467811158798, "no_speech_prob": 0.002151830354705453}, {"id": 162, "seek": 94114, "start": 945.3, "end": 951.58, "text": " of doing dynamic compilation and so on. Java gives you choice. As we saw on the previous", "tokens": [50572, 295, 884, 8546, 40261, 293, 370, 322, 13, 10745, 2709, 291, 3922, 13, 1018, 321, 1866, 322, 264, 3894, 50886], "temperature": 0.0, "avg_logprob": -0.13651695251464843, "compression_ratio": 1.9227467811158798, "no_speech_prob": 0.002151830354705453}, {"id": 163, "seek": 94114, "start": 951.58, "end": 955.78, "text": " slide, the fact that you have so many distributions to choose from, you have so many versions", "tokens": [50886, 4137, 11, 264, 1186, 300, 291, 362, 370, 867, 37870, 281, 2826, 490, 11, 291, 362, 370, 867, 9606, 51096], "temperature": 0.0, "avg_logprob": -0.13651695251464843, "compression_ratio": 1.9227467811158798, "no_speech_prob": 0.002151830354705453}, {"id": 164, "seek": 94114, "start": 955.78, "end": 961.66, "text": " that you can choose from, gives you that choice. Java's community, the fact that we have so", "tokens": [51096, 300, 291, 393, 2826, 490, 11, 2709, 291, 300, 3922, 13, 10745, 311, 1768, 11, 264, 1186, 300, 321, 362, 370, 51390], "temperature": 0.0, "avg_logprob": -0.13651695251464843, "compression_ratio": 1.9227467811158798, "no_speech_prob": 0.002151830354705453}, {"id": 165, "seek": 94114, "start": 961.66, "end": 966.5, "text": " many people here on a Sunday, that always blows me away that I get to talk to people", "tokens": [51390, 867, 561, 510, 322, 257, 7776, 11, 300, 1009, 18458, 385, 1314, 300, 286, 483, 281, 751, 281, 561, 51632], "temperature": 0.0, "avg_logprob": -0.13651695251464843, "compression_ratio": 1.9227467811158798, "no_speech_prob": 0.002151830354705453}, {"id": 166, "seek": 96650, "start": 966.5, "end": 972.18, "text": " and they come in their time off to listen to things about Java. So the fact that there", "tokens": [50364, 293, 436, 808, 294, 641, 565, 766, 281, 2140, 281, 721, 466, 10745, 13, 407, 264, 1186, 300, 456, 50648], "temperature": 0.0, "avg_logprob": -0.18983779290709832, "compression_ratio": 1.6483050847457628, "no_speech_prob": 0.01194088812917471}, {"id": 167, "seek": 96650, "start": 972.18, "end": 978.98, "text": " is this huge community around Java, interest in sharing people's experiences. And the last", "tokens": [50648, 307, 341, 2603, 1768, 926, 10745, 11, 1179, 294, 5414, 561, 311, 5235, 13, 400, 264, 1036, 50988], "temperature": 0.0, "avg_logprob": -0.18983779290709832, "compression_ratio": 1.6483050847457628, "no_speech_prob": 0.01194088812917471}, {"id": 168, "seek": 96650, "start": 978.98, "end": 983.5, "text": " thing, Java gives you freedom. The freedom to choose, the freedom to do what you want", "tokens": [50988, 551, 11, 10745, 2709, 291, 5645, 13, 440, 5645, 281, 2826, 11, 264, 5645, 281, 360, 437, 291, 528, 51214], "temperature": 0.0, "avg_logprob": -0.18983779290709832, "compression_ratio": 1.6483050847457628, "no_speech_prob": 0.01194088812917471}, {"id": 169, "seek": 96650, "start": 983.5, "end": 988.66, "text": " to do. And so that's it. That's my 20 minutes of presentation. I think I just about managed", "tokens": [51214, 281, 360, 13, 400, 370, 300, 311, 309, 13, 663, 311, 452, 945, 2077, 295, 5860, 13, 286, 519, 286, 445, 466, 6453, 51472], "temperature": 0.0, "avg_logprob": -0.18983779290709832, "compression_ratio": 1.6483050847457628, "no_speech_prob": 0.01194088812917471}, {"id": 170, "seek": 96650, "start": 988.66, "end": 989.58, "text": " to get it in there. So thank you.", "tokens": [51472, 281, 483, 309, 294, 456, 13, 407, 1309, 291, 13, 51518], "temperature": 0.0, "avg_logprob": -0.18983779290709832, "compression_ratio": 1.6483050847457628, "no_speech_prob": 0.01194088812917471}], "language": "en"}