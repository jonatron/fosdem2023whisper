{"text": " Next presenter. Who is Theo? Yes. So, talking about cryptpads. Yes, the floor is yours. Thank you. Yeah, whom do you trust? I think this question is really a serious question, especially for privacy and collaboration in today's Internet. Well, yeah, let's directly start with this question or with what collaboration is. Collaborative editing is that multiple people work on the same document at the same time and they want that their changes are transmitted in near real time. So here in this example you see that one person writes there, the update is propagated to the server and the server further forwards the message to all other users. Here you see that in this generic example that the server can see all messages. The server has a local copy of the document and updates as soon as it gets a message from a user. And already here we should say we're like, hmm, okay, so whom do we need to trust? We obviously need to trust the server in this example because the server can see the documents. So this leads me to the second part, to the privacy that we want. And here I give you some informal definition and we say that no untrusted entity can infer personal information, document content, or who the collaborators are. So for an untrusted party, the document should look like this, just like snippets. And this untrusted party should not infer any information. Here the key point is that it's an untrusted entity. Because this does not hold for everyone. For example, the collaborators, they should be able to read the document. So the question is whom we trust? And I'll start with the solution that's probably the most used today. And yeah, why not trust Google and Co. And there may be many reasons. I just want to give you one example. And it's the case of Desha Rawi. Here, Naomi Klein, a famous environmental activist writes that India targets climate activists with the help of Big Tech. Tech shines like Google and Facebook appear to be abating and abetting a vicious government campaign against Indian climate activists. So what happened here, there was, cannot go too far to the side, was climate activist Desha Rawi who founded the Indian, was co-founder of the Indian chapter of Fridays for Future. And they worked on my Google Docs where they discussed how to help Indian farmer protests. And there was stuff like use this tweet or you can write a letter to your government. This document was leaked publicly on Twitter, I think. And then the Indian government thought of this is a conspiracy theory and wanted to track down who actually wrote this document. So they asked Google and Google helped them and said it's this and this and this person. And then Desha Rawi was arrested for a few days. She was later on, she was against freedom and there was no sentence against her in the end. But nevertheless this shows that we cannot really trust Google to host sensitive documents. So what can we do against? Or what is an alternative solution? And I think one of the most obvious answers, especially at a conference like here, is to say that we need to control the software. We need to have the server and the client's open source. Because if this is the case, then we can host the software on our own instance, on our own server. And we can decide whom we want to give the data. And yeah. So this would be a first approach. So we could say, yeah, it's freedom of software, we are safe. And this is exactly a quotation here from Jitsi Mead. And they say that the possibility to run your own instance completely removes the need to trust a third party provider and therefore eliminates the need for end-to-end encryption. So they say exactly this, you can run it your own. You don't need any other pre-consciousness. No, this is fine because it's open source. Jitsi Mead is a video conferencing platform you may be familiar with. So this is a bit different. I will come to it later. And also interestingly, also interesting is that they remove the statement from their website only a bit after I started to prepare my talk. So this is from December 2022. But are we really safe? And to answer these questions or some more questions, can really everybody run their own instance? I mean, yes, probably most of you have the technical capabilities. But do other people have this capability? Do they have the infrastructure? Do they have the money to run this? No, probably not. And the second question is, do you really want to trust a system administrator to see all your documents? So imagine you're in a company and you are working in a collaborative system and you have the salary sheets online. Do you want the system administrator to read that? No, probably not. Even if you trust it in the first place. And then, and this is where the difference is to video conferencing, is that documents are not ephemeral. So a video stream you can safely delete after the conference has ended. But a document must be stored in the server because you want to access it later. And this means you do not only need to protect your documents currently, but also in the long term. So that if the server is under attack or an attacker gets access to it, they should not have access to the documents. Okay, so if you see this, then you probably think we need end-to-end encryption. And end-to-end encryption is in principle that you have one party, let's say Alice, and Alice encrypts a document, they send it to Bob and Bob decrypts it. And in the middle, the data is not readable. So this is the encrypted ciphertext. And you see here, it's exactly the snippets we want. So this technically looks good, and we could say, okay, we apply this, and we can say it's end-to-end encrypted, we are safe. And here's a statement of Google, and they say that with Google Workspace, client-side encryption, content encryption is handled in the client's browser before any data is transmitted. So here first note that client-side encryption is not the same as end-to-end encryption. It's different, especially in the question who holds the key. And client-side encryption, it's not you as a user who holds the key, but the keys are stored on a third-party server. So there comes again this question of trust, if you trust this third-party server. Okay, so we could say it's end-to-end encrypted, we are safe. Well, really. First, there are the metadata. And metadata is all about who connects to the server, at which time, from which IP address, who collaborates, which people are accessing the document at the same time. And all these metadata, they are still there, even if the content is encrypted. So, yeah, still a problem. And second, we have Kirchhoff's principle from cryptography, which says that a cryptosystem should be secure, even if everything about the system accepts the key is public knowledge. So you should be able to release all the code, and all information accepts the key, and it should still be secure. And for me, it's really urgent for open source. And, yeah, that's why I think it's urgent for open source. So we see that we need both of them. And here, I want to present you CripPad. CripPad is an online collaborative editing tool. There are multiple parts of it. There is a whiteboard. There is code marked on. There are slides, like these ones, and documents. It's open source software from the client code is open source, as well as the server code. So you can host your own instance. And there are about 200 maintained instances. We at the CripPad team, we host a flagship instance, which has about 200,000 registered users. And how does CripPad encrypt? So in CripPad, we have this end-to-end encryption. We have that an update is propagated in encryption form, encrypted form, and the server only has an encrypted state of the document. So the server cannot infer the actual content of the document. And how do we share the keys? In the most basic way, we share the keys over the fragment identifier of the URLs. That means we put the keys after the hashtag of the URL. Like this, you can easily share a document. What do we trust? As I saw, as I said, you still have the metadata. So you still need some trust. In CripPad, you have to trust that the server is not an active attacker. That means that you expect that you trust that the server acts according to the protocol. It runs the correct code, and it does not deliver any malicious things. Or it does not repeat stuff, and so on. It does not reorder stuff like this. And why do we have this trust requirement? There are two reasons. The first one is a practical. We have a web application where you get the client source code from the server. So if the server would deliver bogus client code, well, then every security guarantee is lost. And then there is the second one, which is more theoretical. Namely that the server can always delete files. Even if they are encrypted, the server can delete them without problem. Okay. So you see that you need some trust. But the cool thing about CripPad is that there are other stuff which you don't have to trust. Namely, the server could be an honest but curious attacker. That means that even if the server watches you, you're still safe. You don't have to trust the server that it does not watch you. No, it's explicitly allowed. And why do we have that? Well, the server may become corrupt. Even if you trust it to be not actively malicious, it's still maybe at some point in time, it may be corrupt. And this was especially the case here in last summer where there was the CripPad instance hosted by Germany's private party. And on this instance, some sensitive documents about the G7 summit were leaked. And then the police asked the pirate party to hand out their data. Otherwise, they would seize the server. So the police got access to this data. And now the police could not read anything. They could not read the documents. Namely, because everything was entered into encryption. So this shows that even if you trust it in the first place, we still cannot be sure that it's trustworthy forever. And this setting, yeah, and as I said, this setting is exactly covered in this honest but curious attacker, which we allow. There's also another point of view to look at this. We could all say that we protect the server from its users. So for example, the server administrator of the CripPad of Germany's pirate party was not consulting. How could they know what documents were published on their server because it's encrypted? So this shows that such encryption is also nice for you in terms of system administrator because it allows you to offer the service without taking too much risk to you. So, yeah, as a take home message, I really want to say that we need both. We need open source and end-to-end encryption for good trust assumption. And with this, I'm at the end of my presentation. Shout out to my team. It's David is there somewhere. Wolfgang is here. And Ludo is also there. I am Theo. And CripPad is developed at Xwiki in France by this small team. We have a stand here in the K building. Yeah, come by. Drop by. We have stickers. Thank you. So are there any questions? Would a peer-to-peer version be possible to reduce risks with the server and would it help? Yeah, it would be possible, theoretically. The main point why we have a server is that we want that the documents are accessible all the time. So in a peer-to-peer setting, you will firstly have the requirement that always one party must be online. And we don't want that. Yeah. So another question. Thank you very much. You say we need open source and E2E for good trust assumptions. I would suggest you might need a slightly stronger statement. The code on the server has to be open source as well. So potentially you need something like the Afaro GPL. And in terms of the E2E, you need post-quantum resistance. Yeah. If you have those two things, then maybe you have good trust assumptions. Yeah, good point. TripPad is licensed under the ATPL. So this point is easily answerable. And on the second point we are working on, we are looking on how to make TripPad secure in a post-quantum resistance. Thank you very much. You mentioned that it's problematic to have the metadata still. So what is TripPad doing against that or how can we make sure that the server is not collecting metadata? Yeah, two answers to this. One is that there's always some metadata which will be there. For example, the IP address or the browser agent. This one we have to live with. And this is also the case why it's important that you can host it on your own instance. And then the second part is that TripPad collects as few information about you as possible. So for example, we don't have a list of users, of user names. There's even no list of hashed user names. So we just hash the user. The user name and the password locally on the client side and generate from this all the keys. So this is just as an illustration how we try to ensure to have as few metadata as possible. Good afternoon. And that's the first question you answered that you don't use peer-to-peer because you want the server to be online all the time. Does the server have to be unique or can you have multiple servers just in case one gets in the hands of the police or gets out for some reason? Are you speaking of federation? Yes. Okay. Possibly there, currently there is no possibility for federation. No, sadly not. Yeah, you mentioned the case where a server was raided by police. So they have the server. Is it not enough then to have that server and also have somebody's browser history with the key in the URL and then that conversation is open? So if I got your answer, if you got your question correctly, it was if an attacker has access to the server and to the URL, then they have full knowledge. Yeah, that's the case because the URL leaks the full URL including the part after the hash, which is not sent to the server. If the attacker has this, yeah, then they have the key to the server and add the key to the document and can decrypt it. Yeah, connected it. So yes. How does editing collaborators adding removing work do like re-encrypt the file of different keys every time or how do you handle that? So we have, we only send updates. So it's not the entire file every time and it's symmetrically encrypted. And in order, there are two ways you can access a document in a read-only mode. There you have the keys for decryption and to prove that you're able to update the document, you need to sign it with a sign-in key. But the keys are static for a document. But if a user gets removed from read access, they would still be able to read the file after it's being modified, wouldn't they? Yes, exactly. Yeah. Yeah, they'll still be able to read it. There is, there are access lists which we have which can defend against this scenario. But yeah, there's also something we're working on. And maybe if I can just mention something which with more goes into these detailed questions. We just published a white paper. You can go to our website on kruppad.org and check it out. So if there are no other questions.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 17.0, "text": " Next presenter. Who is Theo? Yes. So, talking about cryptpads. Yes, the floor is yours.", "tokens": [3087, 35594, 13, 2102, 307, 42519, 30, 1079, 13, 407, 11, 1417, 466, 9844, 79, 5834, 13, 1079, 11, 264, 4123, 307, 6342, 13], "temperature": 0.0, "avg_logprob": -0.49583412170410157, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.3776977062225342}, {"id": 1, "seek": 0, "start": 17.0, "end": 24.0, "text": " Thank you. Yeah, whom do you trust? I think this question is really a serious question,", "tokens": [1044, 291, 13, 865, 11, 7101, 360, 291, 3361, 30, 286, 519, 341, 1168, 307, 534, 257, 3156, 1168, 11], "temperature": 0.0, "avg_logprob": -0.49583412170410157, "compression_ratio": 1.3059701492537314, "no_speech_prob": 0.3776977062225342}, {"id": 2, "seek": 2400, "start": 24.0, "end": 33.0, "text": " especially for privacy and collaboration in today's Internet. Well, yeah, let's directly start", "tokens": [2318, 337, 11427, 293, 9363, 294, 965, 311, 7703, 13, 1042, 11, 1338, 11, 718, 311, 3838, 722], "temperature": 0.0, "avg_logprob": -0.1312592878180035, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00020033112377859652}, {"id": 3, "seek": 2400, "start": 33.0, "end": 42.0, "text": " with this question or with what collaboration is. Collaborative editing is that multiple people", "tokens": [365, 341, 1168, 420, 365, 437, 9363, 307, 13, 44483, 1166, 10000, 307, 300, 3866, 561], "temperature": 0.0, "avg_logprob": -0.1312592878180035, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00020033112377859652}, {"id": 4, "seek": 2400, "start": 42.0, "end": 49.0, "text": " work on the same document at the same time and they want that their changes are transmitted", "tokens": [589, 322, 264, 912, 4166, 412, 264, 912, 565, 293, 436, 528, 300, 641, 2962, 366, 25355], "temperature": 0.0, "avg_logprob": -0.1312592878180035, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.00020033112377859652}, {"id": 5, "seek": 4900, "start": 49.0, "end": 56.0, "text": " in near real time. So here in this example you see that one person writes there, the update is", "tokens": [294, 2651, 957, 565, 13, 407, 510, 294, 341, 1365, 291, 536, 300, 472, 954, 13657, 456, 11, 264, 5623, 307], "temperature": 0.0, "avg_logprob": -0.1024762623345674, "compression_ratio": 1.7333333333333334, "no_speech_prob": 7.671728235436603e-05}, {"id": 6, "seek": 4900, "start": 56.0, "end": 63.0, "text": " propagated to the server and the server further forwards the message to all other users. Here", "tokens": [12425, 770, 281, 264, 7154, 293, 264, 7154, 3052, 30126, 264, 3636, 281, 439, 661, 5022, 13, 1692], "temperature": 0.0, "avg_logprob": -0.1024762623345674, "compression_ratio": 1.7333333333333334, "no_speech_prob": 7.671728235436603e-05}, {"id": 7, "seek": 4900, "start": 63.0, "end": 71.0, "text": " you see that in this generic example that the server can see all messages. The server has a local", "tokens": [291, 536, 300, 294, 341, 19577, 1365, 300, 264, 7154, 393, 536, 439, 7897, 13, 440, 7154, 575, 257, 2654], "temperature": 0.0, "avg_logprob": -0.1024762623345674, "compression_ratio": 1.7333333333333334, "no_speech_prob": 7.671728235436603e-05}, {"id": 8, "seek": 7100, "start": 71.0, "end": 80.0, "text": " copy of the document and updates as soon as it gets a message from a user. And already here we", "tokens": [5055, 295, 264, 4166, 293, 9205, 382, 2321, 382, 309, 2170, 257, 3636, 490, 257, 4195, 13, 400, 1217, 510, 321], "temperature": 0.0, "avg_logprob": -0.11711920632256402, "compression_ratio": 1.569060773480663, "no_speech_prob": 2.1333880795282312e-05}, {"id": 9, "seek": 7100, "start": 80.0, "end": 87.0, "text": " should say we're like, hmm, okay, so whom do we need to trust? We obviously need to trust the", "tokens": [820, 584, 321, 434, 411, 11, 16478, 11, 1392, 11, 370, 7101, 360, 321, 643, 281, 3361, 30, 492, 2745, 643, 281, 3361, 264], "temperature": 0.0, "avg_logprob": -0.11711920632256402, "compression_ratio": 1.569060773480663, "no_speech_prob": 2.1333880795282312e-05}, {"id": 10, "seek": 7100, "start": 87.0, "end": 97.0, "text": " server in this example because the server can see the documents. So this leads me to the second", "tokens": [7154, 294, 341, 1365, 570, 264, 7154, 393, 536, 264, 8512, 13, 407, 341, 6689, 385, 281, 264, 1150], "temperature": 0.0, "avg_logprob": -0.11711920632256402, "compression_ratio": 1.569060773480663, "no_speech_prob": 2.1333880795282312e-05}, {"id": 11, "seek": 9700, "start": 97.0, "end": 103.0, "text": " part, to the privacy that we want. And here I give you some informal definition and we say that no", "tokens": [644, 11, 281, 264, 11427, 300, 321, 528, 13, 400, 510, 286, 976, 291, 512, 24342, 7123, 293, 321, 584, 300, 572], "temperature": 0.0, "avg_logprob": -0.11187952756881714, "compression_ratio": 1.7567567567567568, "no_speech_prob": 1.8596063455333933e-05}, {"id": 12, "seek": 9700, "start": 103.0, "end": 112.0, "text": " untrusted entity can infer personal information, document content, or who the collaborators are.", "tokens": [1701, 81, 6589, 13977, 393, 13596, 2973, 1589, 11, 4166, 2701, 11, 420, 567, 264, 39789, 366, 13], "temperature": 0.0, "avg_logprob": -0.11187952756881714, "compression_ratio": 1.7567567567567568, "no_speech_prob": 1.8596063455333933e-05}, {"id": 13, "seek": 9700, "start": 112.0, "end": 119.0, "text": " So for an untrusted party, the document should look like this, just like snippets. And this", "tokens": [407, 337, 364, 1701, 81, 6589, 3595, 11, 264, 4166, 820, 574, 411, 341, 11, 445, 411, 35623, 1385, 13, 400, 341], "temperature": 0.0, "avg_logprob": -0.11187952756881714, "compression_ratio": 1.7567567567567568, "no_speech_prob": 1.8596063455333933e-05}, {"id": 14, "seek": 9700, "start": 119.0, "end": 126.0, "text": " untrusted party should not infer any information. Here the key point is that it's an untrusted entity.", "tokens": [1701, 81, 6589, 3595, 820, 406, 13596, 604, 1589, 13, 1692, 264, 2141, 935, 307, 300, 309, 311, 364, 1701, 81, 6589, 13977, 13], "temperature": 0.0, "avg_logprob": -0.11187952756881714, "compression_ratio": 1.7567567567567568, "no_speech_prob": 1.8596063455333933e-05}, {"id": 15, "seek": 12600, "start": 126.0, "end": 132.0, "text": " Because this does not hold for everyone. For example, the collaborators, they should be able to read the", "tokens": [1436, 341, 775, 406, 1797, 337, 1518, 13, 1171, 1365, 11, 264, 39789, 11, 436, 820, 312, 1075, 281, 1401, 264], "temperature": 0.0, "avg_logprob": -0.13290363863894814, "compression_ratio": 1.4879227053140096, "no_speech_prob": 3.627241312642582e-05}, {"id": 16, "seek": 12600, "start": 132.0, "end": 144.0, "text": " document. So the question is whom we trust? And I'll start with the solution that's probably the most", "tokens": [4166, 13, 407, 264, 1168, 307, 7101, 321, 3361, 30, 400, 286, 603, 722, 365, 264, 3827, 300, 311, 1391, 264, 881], "temperature": 0.0, "avg_logprob": -0.13290363863894814, "compression_ratio": 1.4879227053140096, "no_speech_prob": 3.627241312642582e-05}, {"id": 17, "seek": 12600, "start": 144.0, "end": 152.0, "text": " used today. And yeah, why not trust Google and Co. And there may be many reasons. I just want to give", "tokens": [1143, 965, 13, 400, 1338, 11, 983, 406, 3361, 3329, 293, 3066, 13, 400, 456, 815, 312, 867, 4112, 13, 286, 445, 528, 281, 976], "temperature": 0.0, "avg_logprob": -0.13290363863894814, "compression_ratio": 1.4879227053140096, "no_speech_prob": 3.627241312642582e-05}, {"id": 18, "seek": 15200, "start": 152.0, "end": 159.0, "text": " you one example. And it's the case of Desha Rawi. Here, Naomi Klein, a famous environmental", "tokens": [291, 472, 1365, 13, 400, 309, 311, 264, 1389, 295, 3885, 1641, 497, 38402, 13, 1692, 11, 35369, 33327, 11, 257, 4618, 8303], "temperature": 0.0, "avg_logprob": -0.2697611882136418, "compression_ratio": 1.407035175879397, "no_speech_prob": 4.059821003465913e-05}, {"id": 19, "seek": 15200, "start": 159.0, "end": 167.0, "text": " activist writes that India targets climate activists with the help of Big Tech. Tech shines like", "tokens": [24836, 13657, 300, 5282, 12911, 5659, 23042, 365, 264, 854, 295, 5429, 13795, 13, 13795, 28056, 411], "temperature": 0.0, "avg_logprob": -0.2697611882136418, "compression_ratio": 1.407035175879397, "no_speech_prob": 4.059821003465913e-05}, {"id": 20, "seek": 15200, "start": 167.0, "end": 173.0, "text": " Google and Facebook appear to be abating and abetting a vicious government campaign against", "tokens": [3329, 293, 4384, 4204, 281, 312, 410, 990, 293, 410, 302, 783, 257, 30093, 2463, 5129, 1970], "temperature": 0.0, "avg_logprob": -0.2697611882136418, "compression_ratio": 1.407035175879397, "no_speech_prob": 4.059821003465913e-05}, {"id": 21, "seek": 17300, "start": 173.0, "end": 185.0, "text": " Indian climate activists. So what happened here, there was, cannot go too far to the side, was", "tokens": [6427, 5659, 23042, 13, 407, 437, 2011, 510, 11, 456, 390, 11, 2644, 352, 886, 1400, 281, 264, 1252, 11, 390], "temperature": 0.0, "avg_logprob": -0.19879592166227453, "compression_ratio": 1.5730337078651686, "no_speech_prob": 2.3118005628930405e-05}, {"id": 22, "seek": 17300, "start": 185.0, "end": 192.0, "text": " climate activist Desha Rawi who founded the Indian, was co-founder of the Indian chapter of", "tokens": [5659, 24836, 3885, 1641, 497, 38402, 567, 13234, 264, 6427, 11, 390, 598, 12, 33348, 295, 264, 6427, 7187, 295], "temperature": 0.0, "avg_logprob": -0.19879592166227453, "compression_ratio": 1.5730337078651686, "no_speech_prob": 2.3118005628930405e-05}, {"id": 23, "seek": 17300, "start": 192.0, "end": 199.0, "text": " Fridays for Future. And they worked on my Google Docs where they discussed how to help Indian", "tokens": [46306, 337, 20805, 13, 400, 436, 2732, 322, 452, 3329, 16024, 82, 689, 436, 7152, 577, 281, 854, 6427], "temperature": 0.0, "avg_logprob": -0.19879592166227453, "compression_ratio": 1.5730337078651686, "no_speech_prob": 2.3118005628930405e-05}, {"id": 24, "seek": 19900, "start": 199.0, "end": 205.0, "text": " farmer protests. And there was stuff like use this tweet or you can write a letter to your", "tokens": [17891, 20174, 13, 400, 456, 390, 1507, 411, 764, 341, 15258, 420, 291, 393, 2464, 257, 5063, 281, 428], "temperature": 0.0, "avg_logprob": -0.12485455709790426, "compression_ratio": 1.545945945945946, "no_speech_prob": 8.828610589262098e-05}, {"id": 25, "seek": 19900, "start": 205.0, "end": 213.0, "text": " government. This document was leaked publicly on Twitter, I think. And then the Indian government", "tokens": [2463, 13, 639, 4166, 390, 31779, 14843, 322, 5794, 11, 286, 519, 13, 400, 550, 264, 6427, 2463], "temperature": 0.0, "avg_logprob": -0.12485455709790426, "compression_ratio": 1.545945945945946, "no_speech_prob": 8.828610589262098e-05}, {"id": 26, "seek": 19900, "start": 213.0, "end": 224.0, "text": " thought of this is a conspiracy theory and wanted to track down who actually wrote this document.", "tokens": [1194, 295, 341, 307, 257, 20439, 5261, 293, 1415, 281, 2837, 760, 567, 767, 4114, 341, 4166, 13], "temperature": 0.0, "avg_logprob": -0.12485455709790426, "compression_ratio": 1.545945945945946, "no_speech_prob": 8.828610589262098e-05}, {"id": 27, "seek": 22400, "start": 224.0, "end": 232.0, "text": " So they asked Google and Google helped them and said it's this and this and this person. And then", "tokens": [407, 436, 2351, 3329, 293, 3329, 4254, 552, 293, 848, 309, 311, 341, 293, 341, 293, 341, 954, 13, 400, 550], "temperature": 0.0, "avg_logprob": -0.14663715638976166, "compression_ratio": 1.6285714285714286, "no_speech_prob": 0.00012694855104200542}, {"id": 28, "seek": 22400, "start": 232.0, "end": 243.0, "text": " Desha Rawi was arrested for a few days. She was later on, she was against freedom and there was", "tokens": [3885, 1641, 497, 38402, 390, 12469, 337, 257, 1326, 1708, 13, 1240, 390, 1780, 322, 11, 750, 390, 1970, 5645, 293, 456, 390], "temperature": 0.0, "avg_logprob": -0.14663715638976166, "compression_ratio": 1.6285714285714286, "no_speech_prob": 0.00012694855104200542}, {"id": 29, "seek": 22400, "start": 243.0, "end": 249.0, "text": " no sentence against her in the end. But nevertheless this shows that we cannot really trust", "tokens": [572, 8174, 1970, 720, 294, 264, 917, 13, 583, 26924, 341, 3110, 300, 321, 2644, 534, 3361], "temperature": 0.0, "avg_logprob": -0.14663715638976166, "compression_ratio": 1.6285714285714286, "no_speech_prob": 0.00012694855104200542}, {"id": 30, "seek": 24900, "start": 249.0, "end": 256.0, "text": " Google to host sensitive documents. So what can we do against? Or what is an alternative", "tokens": [3329, 281, 3975, 9477, 8512, 13, 407, 437, 393, 321, 360, 1970, 30, 1610, 437, 307, 364, 8535], "temperature": 0.0, "avg_logprob": -0.13550310549528702, "compression_ratio": 1.4895833333333333, "no_speech_prob": 4.4550153688760474e-05}, {"id": 31, "seek": 24900, "start": 256.0, "end": 264.0, "text": " solution? And I think one of the most obvious answers, especially at a conference like here, is to", "tokens": [3827, 30, 400, 286, 519, 472, 295, 264, 881, 6322, 6338, 11, 2318, 412, 257, 7586, 411, 510, 11, 307, 281], "temperature": 0.0, "avg_logprob": -0.13550310549528702, "compression_ratio": 1.4895833333333333, "no_speech_prob": 4.4550153688760474e-05}, {"id": 32, "seek": 24900, "start": 264.0, "end": 270.0, "text": " say that we need to control the software. We need to have the server and the client's open source.", "tokens": [584, 300, 321, 643, 281, 1969, 264, 4722, 13, 492, 643, 281, 362, 264, 7154, 293, 264, 6423, 311, 1269, 4009, 13], "temperature": 0.0, "avg_logprob": -0.13550310549528702, "compression_ratio": 1.4895833333333333, "no_speech_prob": 4.4550153688760474e-05}, {"id": 33, "seek": 27000, "start": 270.0, "end": 279.0, "text": " Because if this is the case, then we can host the software on our own instance, on our own server. And", "tokens": [1436, 498, 341, 307, 264, 1389, 11, 550, 321, 393, 3975, 264, 4722, 322, 527, 1065, 5197, 11, 322, 527, 1065, 7154, 13, 400], "temperature": 0.0, "avg_logprob": -0.13642231422134593, "compression_ratio": 1.608695652173913, "no_speech_prob": 5.449164018500596e-05}, {"id": 34, "seek": 27000, "start": 279.0, "end": 290.0, "text": " we can decide whom we want to give the data. And yeah. So this would be a first approach. So we", "tokens": [321, 393, 4536, 7101, 321, 528, 281, 976, 264, 1412, 13, 400, 1338, 13, 407, 341, 576, 312, 257, 700, 3109, 13, 407, 321], "temperature": 0.0, "avg_logprob": -0.13642231422134593, "compression_ratio": 1.608695652173913, "no_speech_prob": 5.449164018500596e-05}, {"id": 35, "seek": 27000, "start": 290.0, "end": 298.0, "text": " could say, yeah, it's freedom of software, we are safe. And this is exactly a quotation here from", "tokens": [727, 584, 11, 1338, 11, 309, 311, 5645, 295, 4722, 11, 321, 366, 3273, 13, 400, 341, 307, 2293, 257, 47312, 510, 490], "temperature": 0.0, "avg_logprob": -0.13642231422134593, "compression_ratio": 1.608695652173913, "no_speech_prob": 5.449164018500596e-05}, {"id": 36, "seek": 29800, "start": 298.0, "end": 305.0, "text": " Jitsi Mead. And they say that the possibility to run your own instance completely removes the need to", "tokens": [508, 1208, 72, 1923, 345, 13, 400, 436, 584, 300, 264, 7959, 281, 1190, 428, 1065, 5197, 2584, 30445, 264, 643, 281], "temperature": 0.0, "avg_logprob": -0.20041652778526406, "compression_ratio": 1.5459183673469388, "no_speech_prob": 5.291345951263793e-05}, {"id": 37, "seek": 29800, "start": 305.0, "end": 313.0, "text": " trust a third party provider and therefore eliminates the need for end-to-end encryption. So they say", "tokens": [3361, 257, 2636, 3595, 12398, 293, 4412, 49893, 264, 643, 337, 917, 12, 1353, 12, 521, 29575, 13, 407, 436, 584], "temperature": 0.0, "avg_logprob": -0.20041652778526406, "compression_ratio": 1.5459183673469388, "no_speech_prob": 5.291345951263793e-05}, {"id": 38, "seek": 29800, "start": 313.0, "end": 320.0, "text": " exactly this, you can run it your own. You don't need any other pre-consciousness. No, this is fine", "tokens": [2293, 341, 11, 291, 393, 1190, 309, 428, 1065, 13, 509, 500, 380, 643, 604, 661, 659, 12, 19877, 1287, 13, 883, 11, 341, 307, 2489], "temperature": 0.0, "avg_logprob": -0.20041652778526406, "compression_ratio": 1.5459183673469388, "no_speech_prob": 5.291345951263793e-05}, {"id": 39, "seek": 32000, "start": 320.0, "end": 328.0, "text": " because it's open source. Jitsi Mead is a video conferencing platform you may be familiar with. So this", "tokens": [570, 309, 311, 1269, 4009, 13, 508, 1208, 72, 1923, 345, 307, 257, 960, 13765, 13644, 3663, 291, 815, 312, 4963, 365, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.11515832591701199, "compression_ratio": 1.5384615384615385, "no_speech_prob": 6.75234041409567e-05}, {"id": 40, "seek": 32000, "start": 328.0, "end": 335.0, "text": " is a bit different. I will come to it later. And also interestingly, also interesting is that they", "tokens": [307, 257, 857, 819, 13, 286, 486, 808, 281, 309, 1780, 13, 400, 611, 25873, 11, 611, 1880, 307, 300, 436], "temperature": 0.0, "avg_logprob": -0.11515832591701199, "compression_ratio": 1.5384615384615385, "no_speech_prob": 6.75234041409567e-05}, {"id": 41, "seek": 32000, "start": 335.0, "end": 342.0, "text": " remove the statement from their website only a bit after I started to prepare my talk. So this is", "tokens": [4159, 264, 5629, 490, 641, 3144, 787, 257, 857, 934, 286, 1409, 281, 5940, 452, 751, 13, 407, 341, 307], "temperature": 0.0, "avg_logprob": -0.11515832591701199, "compression_ratio": 1.5384615384615385, "no_speech_prob": 6.75234041409567e-05}, {"id": 42, "seek": 34200, "start": 342.0, "end": 352.0, "text": " from December 2022. But are we really safe? And to answer these questions or some more questions, can", "tokens": [490, 7687, 20229, 13, 583, 366, 321, 534, 3273, 30, 400, 281, 1867, 613, 1651, 420, 512, 544, 1651, 11, 393], "temperature": 0.0, "avg_logprob": -0.11699893980315237, "compression_ratio": 1.5698924731182795, "no_speech_prob": 3.3753178286133334e-05}, {"id": 43, "seek": 34200, "start": 352.0, "end": 360.0, "text": " really everybody run their own instance? I mean, yes, probably most of you have the technical", "tokens": [534, 2201, 1190, 641, 1065, 5197, 30, 286, 914, 11, 2086, 11, 1391, 881, 295, 291, 362, 264, 6191], "temperature": 0.0, "avg_logprob": -0.11699893980315237, "compression_ratio": 1.5698924731182795, "no_speech_prob": 3.3753178286133334e-05}, {"id": 44, "seek": 34200, "start": 360.0, "end": 366.0, "text": " capabilities. But do other people have this capability? Do they have the infrastructure? Do they", "tokens": [10862, 13, 583, 360, 661, 561, 362, 341, 13759, 30, 1144, 436, 362, 264, 6896, 30, 1144, 436], "temperature": 0.0, "avg_logprob": -0.11699893980315237, "compression_ratio": 1.5698924731182795, "no_speech_prob": 3.3753178286133334e-05}, {"id": 45, "seek": 36600, "start": 366.0, "end": 374.0, "text": " have the money to run this? No, probably not. And the second question is, do you really want to", "tokens": [362, 264, 1460, 281, 1190, 341, 30, 883, 11, 1391, 406, 13, 400, 264, 1150, 1168, 307, 11, 360, 291, 534, 528, 281], "temperature": 0.0, "avg_logprob": -0.11395232232062372, "compression_ratio": 1.721461187214612, "no_speech_prob": 1.978770160349086e-05}, {"id": 46, "seek": 36600, "start": 374.0, "end": 380.0, "text": " trust a system administrator to see all your documents? So imagine you're in a company and you", "tokens": [3361, 257, 1185, 25529, 281, 536, 439, 428, 8512, 30, 407, 3811, 291, 434, 294, 257, 2237, 293, 291], "temperature": 0.0, "avg_logprob": -0.11395232232062372, "compression_ratio": 1.721461187214612, "no_speech_prob": 1.978770160349086e-05}, {"id": 47, "seek": 36600, "start": 380.0, "end": 387.0, "text": " are working in a collaborative system and you have the salary sheets online. Do you want the system", "tokens": [366, 1364, 294, 257, 16555, 1185, 293, 291, 362, 264, 15360, 15421, 2950, 13, 1144, 291, 528, 264, 1185], "temperature": 0.0, "avg_logprob": -0.11395232232062372, "compression_ratio": 1.721461187214612, "no_speech_prob": 1.978770160349086e-05}, {"id": 48, "seek": 36600, "start": 387.0, "end": 395.0, "text": " administrator to read that? No, probably not. Even if you trust it in the first place.", "tokens": [25529, 281, 1401, 300, 30, 883, 11, 1391, 406, 13, 2754, 498, 291, 3361, 309, 294, 264, 700, 1081, 13], "temperature": 0.0, "avg_logprob": -0.11395232232062372, "compression_ratio": 1.721461187214612, "no_speech_prob": 1.978770160349086e-05}, {"id": 49, "seek": 39500, "start": 395.0, "end": 401.0, "text": " And then, and this is where the difference is to video conferencing, is that documents are not", "tokens": [400, 550, 11, 293, 341, 307, 689, 264, 2649, 307, 281, 960, 13765, 13644, 11, 307, 300, 8512, 366, 406], "temperature": 0.0, "avg_logprob": -0.12865086223768152, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0001755685661919415}, {"id": 50, "seek": 39500, "start": 401.0, "end": 408.0, "text": " ephemeral. So a video stream you can safely delete after the conference has ended. But a document", "tokens": [308, 41245, 2790, 13, 407, 257, 960, 4309, 291, 393, 11750, 12097, 934, 264, 7586, 575, 4590, 13, 583, 257, 4166], "temperature": 0.0, "avg_logprob": -0.12865086223768152, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0001755685661919415}, {"id": 51, "seek": 39500, "start": 408.0, "end": 415.0, "text": " must be stored in the server because you want to access it later. And this means you do not only", "tokens": [1633, 312, 12187, 294, 264, 7154, 570, 291, 528, 281, 2105, 309, 1780, 13, 400, 341, 1355, 291, 360, 406, 787], "temperature": 0.0, "avg_logprob": -0.12865086223768152, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0001755685661919415}, {"id": 52, "seek": 39500, "start": 415.0, "end": 423.0, "text": " need to protect your documents currently, but also in the long term. So that if the server is", "tokens": [643, 281, 2371, 428, 8512, 4362, 11, 457, 611, 294, 264, 938, 1433, 13, 407, 300, 498, 264, 7154, 307], "temperature": 0.0, "avg_logprob": -0.12865086223768152, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0001755685661919415}, {"id": 53, "seek": 42300, "start": 423.0, "end": 431.0, "text": " under attack or an attacker gets access to it, they should not have access to the documents.", "tokens": [833, 2690, 420, 364, 35871, 2170, 2105, 281, 309, 11, 436, 820, 406, 362, 2105, 281, 264, 8512, 13], "temperature": 0.0, "avg_logprob": -0.10775499086122255, "compression_ratio": 1.6352941176470588, "no_speech_prob": 3.051211024285294e-05}, {"id": 54, "seek": 42300, "start": 431.0, "end": 439.0, "text": " Okay, so if you see this, then you probably think we need end-to-end encryption. And end-to-end", "tokens": [1033, 11, 370, 498, 291, 536, 341, 11, 550, 291, 1391, 519, 321, 643, 917, 12, 1353, 12, 521, 29575, 13, 400, 917, 12, 1353, 12, 521], "temperature": 0.0, "avg_logprob": -0.10775499086122255, "compression_ratio": 1.6352941176470588, "no_speech_prob": 3.051211024285294e-05}, {"id": 55, "seek": 42300, "start": 439.0, "end": 446.0, "text": " encryption is in principle that you have one party, let's say Alice, and Alice encrypts a", "tokens": [29575, 307, 294, 8665, 300, 291, 362, 472, 3595, 11, 718, 311, 584, 16004, 11, 293, 16004, 17972, 39280, 257], "temperature": 0.0, "avg_logprob": -0.10775499086122255, "compression_ratio": 1.6352941176470588, "no_speech_prob": 3.051211024285294e-05}, {"id": 56, "seek": 44600, "start": 446.0, "end": 457.0, "text": " document, they send it to Bob and Bob decrypts it. And in the middle, the data is not readable.", "tokens": [4166, 11, 436, 2845, 309, 281, 6085, 293, 6085, 979, 627, 39280, 309, 13, 400, 294, 264, 2808, 11, 264, 1412, 307, 406, 49857, 13], "temperature": 0.0, "avg_logprob": -0.145607637804608, "compression_ratio": 1.6195652173913044, "no_speech_prob": 2.0764256987604313e-05}, {"id": 57, "seek": 44600, "start": 457.0, "end": 467.0, "text": " So this is the encrypted ciphertext. And you see here, it's exactly the snippets we want. So this", "tokens": [407, 341, 307, 264, 36663, 269, 21240, 25111, 13, 400, 291, 536, 510, 11, 309, 311, 2293, 264, 35623, 1385, 321, 528, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.145607637804608, "compression_ratio": 1.6195652173913044, "no_speech_prob": 2.0764256987604313e-05}, {"id": 58, "seek": 44600, "start": 467.0, "end": 474.0, "text": " technically looks good, and we could say, okay, we apply this, and we can say it's end-to-end encrypted,", "tokens": [12120, 1542, 665, 11, 293, 321, 727, 584, 11, 1392, 11, 321, 3079, 341, 11, 293, 321, 393, 584, 309, 311, 917, 12, 1353, 12, 521, 36663, 11], "temperature": 0.0, "avg_logprob": -0.145607637804608, "compression_ratio": 1.6195652173913044, "no_speech_prob": 2.0764256987604313e-05}, {"id": 59, "seek": 47400, "start": 474.0, "end": 480.0, "text": " we are safe. And here's a statement of Google, and they say that with Google Workspace, client-side", "tokens": [321, 366, 3273, 13, 400, 510, 311, 257, 5629, 295, 3329, 11, 293, 436, 584, 300, 365, 3329, 6603, 24824, 11, 6423, 12, 1812], "temperature": 0.0, "avg_logprob": -0.10705317447060032, "compression_ratio": 1.760180995475113, "no_speech_prob": 8.933960089052562e-06}, {"id": 60, "seek": 47400, "start": 480.0, "end": 488.0, "text": " encryption, content encryption is handled in the client's browser before any data is transmitted.", "tokens": [29575, 11, 2701, 29575, 307, 18033, 294, 264, 6423, 311, 11185, 949, 604, 1412, 307, 25355, 13], "temperature": 0.0, "avg_logprob": -0.10705317447060032, "compression_ratio": 1.760180995475113, "no_speech_prob": 8.933960089052562e-06}, {"id": 61, "seek": 47400, "start": 488.0, "end": 494.0, "text": " So here first note that client-side encryption is not the same as end-to-end encryption. It's", "tokens": [407, 510, 700, 3637, 300, 6423, 12, 1812, 29575, 307, 406, 264, 912, 382, 917, 12, 1353, 12, 521, 29575, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.10705317447060032, "compression_ratio": 1.760180995475113, "no_speech_prob": 8.933960089052562e-06}, {"id": 62, "seek": 47400, "start": 494.0, "end": 502.0, "text": " different, especially in the question who holds the key. And client-side encryption, it's not you", "tokens": [819, 11, 2318, 294, 264, 1168, 567, 9190, 264, 2141, 13, 400, 6423, 12, 1812, 29575, 11, 309, 311, 406, 291], "temperature": 0.0, "avg_logprob": -0.10705317447060032, "compression_ratio": 1.760180995475113, "no_speech_prob": 8.933960089052562e-06}, {"id": 63, "seek": 50200, "start": 502.0, "end": 510.0, "text": " as a user who holds the key, but the keys are stored on a third-party server. So there comes", "tokens": [382, 257, 4195, 567, 9190, 264, 2141, 11, 457, 264, 9317, 366, 12187, 322, 257, 2636, 12, 23409, 7154, 13, 407, 456, 1487], "temperature": 0.0, "avg_logprob": -0.15791529643384716, "compression_ratio": 1.5635359116022098, "no_speech_prob": 8.382598934986163e-06}, {"id": 64, "seek": 50200, "start": 510.0, "end": 518.0, "text": " again this question of trust, if you trust this third-party server. Okay, so we could say it's", "tokens": [797, 341, 1168, 295, 3361, 11, 498, 291, 3361, 341, 2636, 12, 23409, 7154, 13, 1033, 11, 370, 321, 727, 584, 309, 311], "temperature": 0.0, "avg_logprob": -0.15791529643384716, "compression_ratio": 1.5635359116022098, "no_speech_prob": 8.382598934986163e-06}, {"id": 65, "seek": 50200, "start": 518.0, "end": 526.0, "text": " end-to-end encrypted, we are safe. Well, really. First, there are the metadata. And metadata is", "tokens": [917, 12, 1353, 12, 521, 36663, 11, 321, 366, 3273, 13, 1042, 11, 534, 13, 2386, 11, 456, 366, 264, 26603, 13, 400, 26603, 307], "temperature": 0.0, "avg_logprob": -0.15791529643384716, "compression_ratio": 1.5635359116022098, "no_speech_prob": 8.382598934986163e-06}, {"id": 66, "seek": 52600, "start": 526.0, "end": 534.0, "text": " all about who connects to the server, at which time, from which IP address, who collaborates, which", "tokens": [439, 466, 567, 16967, 281, 264, 7154, 11, 412, 597, 565, 11, 490, 597, 8671, 2985, 11, 567, 5091, 1024, 11, 597], "temperature": 0.0, "avg_logprob": -0.1044871966044108, "compression_ratio": 1.5263157894736843, "no_speech_prob": 3.254824332543649e-05}, {"id": 67, "seek": 52600, "start": 534.0, "end": 541.0, "text": " people are accessing the document at the same time. And all these metadata, they are still there,", "tokens": [561, 366, 26440, 264, 4166, 412, 264, 912, 565, 13, 400, 439, 613, 26603, 11, 436, 366, 920, 456, 11], "temperature": 0.0, "avg_logprob": -0.1044871966044108, "compression_ratio": 1.5263157894736843, "no_speech_prob": 3.254824332543649e-05}, {"id": 68, "seek": 52600, "start": 541.0, "end": 550.0, "text": " even if the content is encrypted. So, yeah, still a problem. And second, we have Kirchhoff's", "tokens": [754, 498, 264, 2701, 307, 36663, 13, 407, 11, 1338, 11, 920, 257, 1154, 13, 400, 1150, 11, 321, 362, 11305, 339, 1289, 602, 311], "temperature": 0.0, "avg_logprob": -0.1044871966044108, "compression_ratio": 1.5263157894736843, "no_speech_prob": 3.254824332543649e-05}, {"id": 69, "seek": 55000, "start": 550.0, "end": 558.0, "text": " principle from cryptography, which says that a cryptosystem should be secure, even if everything", "tokens": [8665, 490, 9844, 5820, 11, 597, 1619, 300, 257, 9844, 329, 9321, 820, 312, 7144, 11, 754, 498, 1203], "temperature": 0.0, "avg_logprob": -0.13848148567089136, "compression_ratio": 1.6145251396648044, "no_speech_prob": 2.9174074370530434e-05}, {"id": 70, "seek": 55000, "start": 558.0, "end": 565.0, "text": " about the system accepts the key is public knowledge. So you should be able to release all the", "tokens": [466, 264, 1185, 33538, 264, 2141, 307, 1908, 3601, 13, 407, 291, 820, 312, 1075, 281, 4374, 439, 264], "temperature": 0.0, "avg_logprob": -0.13848148567089136, "compression_ratio": 1.6145251396648044, "no_speech_prob": 2.9174074370530434e-05}, {"id": 71, "seek": 55000, "start": 565.0, "end": 572.0, "text": " code, and all information accepts the key, and it should still be secure. And for me, it's really", "tokens": [3089, 11, 293, 439, 1589, 33538, 264, 2141, 11, 293, 309, 820, 920, 312, 7144, 13, 400, 337, 385, 11, 309, 311, 534], "temperature": 0.0, "avg_logprob": -0.13848148567089136, "compression_ratio": 1.6145251396648044, "no_speech_prob": 2.9174074370530434e-05}, {"id": 72, "seek": 57200, "start": 572.0, "end": 582.0, "text": " urgent for open source. And, yeah, that's why I think it's urgent for open source. So we see that", "tokens": [19022, 337, 1269, 4009, 13, 400, 11, 1338, 11, 300, 311, 983, 286, 519, 309, 311, 19022, 337, 1269, 4009, 13, 407, 321, 536, 300], "temperature": 0.0, "avg_logprob": -0.18030238762879983, "compression_ratio": 1.5573770491803278, "no_speech_prob": 7.288212509592995e-05}, {"id": 73, "seek": 57200, "start": 582.0, "end": 590.0, "text": " we need both of them. And here, I want to present you CripPad. CripPad is an online collaborative", "tokens": [321, 643, 1293, 295, 552, 13, 400, 510, 11, 286, 528, 281, 1974, 291, 383, 8400, 50112, 13, 383, 8400, 50112, 307, 364, 2950, 16555], "temperature": 0.0, "avg_logprob": -0.18030238762879983, "compression_ratio": 1.5573770491803278, "no_speech_prob": 7.288212509592995e-05}, {"id": 74, "seek": 57200, "start": 590.0, "end": 598.0, "text": " editing tool. There are multiple parts of it. There is a whiteboard. There is code marked", "tokens": [10000, 2290, 13, 821, 366, 3866, 3166, 295, 309, 13, 821, 307, 257, 2418, 3787, 13, 821, 307, 3089, 12658], "temperature": 0.0, "avg_logprob": -0.18030238762879983, "compression_ratio": 1.5573770491803278, "no_speech_prob": 7.288212509592995e-05}, {"id": 75, "seek": 59800, "start": 598.0, "end": 608.0, "text": " on. There are slides, like these ones, and documents. It's open source software from the", "tokens": [322, 13, 821, 366, 9788, 11, 411, 613, 2306, 11, 293, 8512, 13, 467, 311, 1269, 4009, 4722, 490, 264], "temperature": 0.0, "avg_logprob": -0.1803342846856601, "compression_ratio": 1.4806629834254144, "no_speech_prob": 8.946006346377544e-06}, {"id": 76, "seek": 59800, "start": 608.0, "end": 617.0, "text": " client code is open source, as well as the server code. So you can host your own instance.", "tokens": [6423, 3089, 307, 1269, 4009, 11, 382, 731, 382, 264, 7154, 3089, 13, 407, 291, 393, 3975, 428, 1065, 5197, 13], "temperature": 0.0, "avg_logprob": -0.1803342846856601, "compression_ratio": 1.4806629834254144, "no_speech_prob": 8.946006346377544e-06}, {"id": 77, "seek": 59800, "start": 617.0, "end": 624.0, "text": " And there are about 200 maintained instances. We at the CripPad team, we host a flagship", "tokens": [400, 456, 366, 466, 2331, 17578, 14519, 13, 492, 412, 264, 383, 8400, 50112, 1469, 11, 321, 3975, 257, 30400], "temperature": 0.0, "avg_logprob": -0.1803342846856601, "compression_ratio": 1.4806629834254144, "no_speech_prob": 8.946006346377544e-06}, {"id": 78, "seek": 62400, "start": 624.0, "end": 633.0, "text": " instance, which has about 200,000 registered users. And how does CripPad encrypt? So in", "tokens": [5197, 11, 597, 575, 466, 2331, 11, 1360, 13968, 5022, 13, 400, 577, 775, 383, 8400, 50112, 17972, 662, 30, 407, 294], "temperature": 0.0, "avg_logprob": -0.1341835570661989, "compression_ratio": 1.5542857142857143, "no_speech_prob": 4.8543838602199685e-06}, {"id": 79, "seek": 62400, "start": 633.0, "end": 639.0, "text": " CripPad, we have this end-to-end encryption. We have that an update is propagated in encryption", "tokens": [383, 8400, 50112, 11, 321, 362, 341, 917, 12, 1353, 12, 521, 29575, 13, 492, 362, 300, 364, 5623, 307, 12425, 770, 294, 29575], "temperature": 0.0, "avg_logprob": -0.1341835570661989, "compression_ratio": 1.5542857142857143, "no_speech_prob": 4.8543838602199685e-06}, {"id": 80, "seek": 62400, "start": 639.0, "end": 647.0, "text": " form, encrypted form, and the server only has an encrypted state of the document. So the", "tokens": [1254, 11, 36663, 1254, 11, 293, 264, 7154, 787, 575, 364, 36663, 1785, 295, 264, 4166, 13, 407, 264], "temperature": 0.0, "avg_logprob": -0.1341835570661989, "compression_ratio": 1.5542857142857143, "no_speech_prob": 4.8543838602199685e-06}, {"id": 81, "seek": 64700, "start": 647.0, "end": 655.0, "text": " server cannot infer the actual content of the document. And how do we share the keys? In the", "tokens": [7154, 2644, 13596, 264, 3539, 2701, 295, 264, 4166, 13, 400, 577, 360, 321, 2073, 264, 9317, 30, 682, 264], "temperature": 0.0, "avg_logprob": -0.08053378377641951, "compression_ratio": 1.6470588235294117, "no_speech_prob": 3.136734676445485e-06}, {"id": 82, "seek": 64700, "start": 655.0, "end": 662.0, "text": " most basic way, we share the keys over the fragment identifier of the URLs. That means we put the", "tokens": [881, 3875, 636, 11, 321, 2073, 264, 9317, 670, 264, 26424, 45690, 295, 264, 43267, 13, 663, 1355, 321, 829, 264], "temperature": 0.0, "avg_logprob": -0.08053378377641951, "compression_ratio": 1.6470588235294117, "no_speech_prob": 3.136734676445485e-06}, {"id": 83, "seek": 64700, "start": 662.0, "end": 672.0, "text": " keys after the hashtag of the URL. Like this, you can easily share a document. What do we", "tokens": [9317, 934, 264, 20379, 295, 264, 12905, 13, 1743, 341, 11, 291, 393, 3612, 2073, 257, 4166, 13, 708, 360, 321], "temperature": 0.0, "avg_logprob": -0.08053378377641951, "compression_ratio": 1.6470588235294117, "no_speech_prob": 3.136734676445485e-06}, {"id": 84, "seek": 67200, "start": 672.0, "end": 679.0, "text": " trust? As I saw, as I said, you still have the metadata. So you still need some trust. In", "tokens": [3361, 30, 1018, 286, 1866, 11, 382, 286, 848, 11, 291, 920, 362, 264, 26603, 13, 407, 291, 920, 643, 512, 3361, 13, 682], "temperature": 0.0, "avg_logprob": -0.10693052540654721, "compression_ratio": 1.7246376811594204, "no_speech_prob": 7.92836999607971e-06}, {"id": 85, "seek": 67200, "start": 679.0, "end": 687.0, "text": " CripPad, you have to trust that the server is not an active attacker. That means that you", "tokens": [383, 8400, 50112, 11, 291, 362, 281, 3361, 300, 264, 7154, 307, 406, 364, 4967, 35871, 13, 663, 1355, 300, 291], "temperature": 0.0, "avg_logprob": -0.10693052540654721, "compression_ratio": 1.7246376811594204, "no_speech_prob": 7.92836999607971e-06}, {"id": 86, "seek": 67200, "start": 687.0, "end": 692.0, "text": " expect that you trust that the server acts according to the protocol. It runs the correct", "tokens": [2066, 300, 291, 3361, 300, 264, 7154, 10672, 4650, 281, 264, 10336, 13, 467, 6676, 264, 3006], "temperature": 0.0, "avg_logprob": -0.10693052540654721, "compression_ratio": 1.7246376811594204, "no_speech_prob": 7.92836999607971e-06}, {"id": 87, "seek": 67200, "start": 692.0, "end": 700.0, "text": " code, and it does not deliver any malicious things. Or it does not repeat stuff, and so", "tokens": [3089, 11, 293, 309, 775, 406, 4239, 604, 33496, 721, 13, 1610, 309, 775, 406, 7149, 1507, 11, 293, 370], "temperature": 0.0, "avg_logprob": -0.10693052540654721, "compression_ratio": 1.7246376811594204, "no_speech_prob": 7.92836999607971e-06}, {"id": 88, "seek": 70000, "start": 700.0, "end": 708.0, "text": " on. It does not reorder stuff like this. And why do we have this trust requirement? There are", "tokens": [322, 13, 467, 775, 406, 319, 4687, 1507, 411, 341, 13, 400, 983, 360, 321, 362, 341, 3361, 11695, 30, 821, 366], "temperature": 0.0, "avg_logprob": -0.12732994556427002, "compression_ratio": 1.5803571428571428, "no_speech_prob": 1.063591207639547e-05}, {"id": 89, "seek": 70000, "start": 708.0, "end": 714.0, "text": " two reasons. The first one is a practical. We have a web application where you get the", "tokens": [732, 4112, 13, 440, 700, 472, 307, 257, 8496, 13, 492, 362, 257, 3670, 3861, 689, 291, 483, 264], "temperature": 0.0, "avg_logprob": -0.12732994556427002, "compression_ratio": 1.5803571428571428, "no_speech_prob": 1.063591207639547e-05}, {"id": 90, "seek": 70000, "start": 714.0, "end": 721.0, "text": " client source code from the server. So if the server would deliver bogus client code,", "tokens": [6423, 4009, 3089, 490, 264, 7154, 13, 407, 498, 264, 7154, 576, 4239, 26132, 301, 6423, 3089, 11], "temperature": 0.0, "avg_logprob": -0.12732994556427002, "compression_ratio": 1.5803571428571428, "no_speech_prob": 1.063591207639547e-05}, {"id": 91, "seek": 70000, "start": 721.0, "end": 728.0, "text": " well, then every security guarantee is lost. And then there is the second one, which is", "tokens": [731, 11, 550, 633, 3825, 10815, 307, 2731, 13, 400, 550, 456, 307, 264, 1150, 472, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.12732994556427002, "compression_ratio": 1.5803571428571428, "no_speech_prob": 1.063591207639547e-05}, {"id": 92, "seek": 72800, "start": 728.0, "end": 734.0, "text": " more theoretical. Namely that the server can always delete files. Even if they are encrypted,", "tokens": [544, 20864, 13, 10684, 736, 300, 264, 7154, 393, 1009, 12097, 7098, 13, 2754, 498, 436, 366, 36663, 11], "temperature": 0.0, "avg_logprob": -0.09383425551853823, "compression_ratio": 1.6529680365296804, "no_speech_prob": 3.2869434107851703e-06}, {"id": 93, "seek": 72800, "start": 734.0, "end": 742.0, "text": " the server can delete them without problem. Okay. So you see that you need some trust. But", "tokens": [264, 7154, 393, 12097, 552, 1553, 1154, 13, 1033, 13, 407, 291, 536, 300, 291, 643, 512, 3361, 13, 583], "temperature": 0.0, "avg_logprob": -0.09383425551853823, "compression_ratio": 1.6529680365296804, "no_speech_prob": 3.2869434107851703e-06}, {"id": 94, "seek": 72800, "start": 742.0, "end": 748.0, "text": " the cool thing about CripPad is that there are other stuff which you don't have to trust.", "tokens": [264, 1627, 551, 466, 383, 8400, 50112, 307, 300, 456, 366, 661, 1507, 597, 291, 500, 380, 362, 281, 3361, 13], "temperature": 0.0, "avg_logprob": -0.09383425551853823, "compression_ratio": 1.6529680365296804, "no_speech_prob": 3.2869434107851703e-06}, {"id": 95, "seek": 72800, "start": 748.0, "end": 755.0, "text": " Namely, the server could be an honest but curious attacker. That means that even if the", "tokens": [10684, 736, 11, 264, 7154, 727, 312, 364, 3245, 457, 6369, 35871, 13, 663, 1355, 300, 754, 498, 264], "temperature": 0.0, "avg_logprob": -0.09383425551853823, "compression_ratio": 1.6529680365296804, "no_speech_prob": 3.2869434107851703e-06}, {"id": 96, "seek": 75500, "start": 755.0, "end": 762.0, "text": " server watches you, you're still safe. You don't have to trust the server that it does", "tokens": [7154, 17062, 291, 11, 291, 434, 920, 3273, 13, 509, 500, 380, 362, 281, 3361, 264, 7154, 300, 309, 775], "temperature": 0.0, "avg_logprob": -0.10213585460887235, "compression_ratio": 1.4853801169590644, "no_speech_prob": 2.9673430617549457e-05}, {"id": 97, "seek": 75500, "start": 762.0, "end": 771.0, "text": " not watch you. No, it's explicitly allowed. And why do we have that? Well, the server", "tokens": [406, 1159, 291, 13, 883, 11, 309, 311, 20803, 4350, 13, 400, 983, 360, 321, 362, 300, 30, 1042, 11, 264, 7154], "temperature": 0.0, "avg_logprob": -0.10213585460887235, "compression_ratio": 1.4853801169590644, "no_speech_prob": 2.9673430617549457e-05}, {"id": 98, "seek": 75500, "start": 771.0, "end": 779.0, "text": " may become corrupt. Even if you trust it to be not actively malicious, it's still", "tokens": [815, 1813, 17366, 13, 2754, 498, 291, 3361, 309, 281, 312, 406, 13022, 33496, 11, 309, 311, 920], "temperature": 0.0, "avg_logprob": -0.10213585460887235, "compression_ratio": 1.4853801169590644, "no_speech_prob": 2.9673430617549457e-05}, {"id": 99, "seek": 77900, "start": 779.0, "end": 787.0, "text": " maybe at some point in time, it may be corrupt. And this was especially the case here in", "tokens": [1310, 412, 512, 935, 294, 565, 11, 309, 815, 312, 17366, 13, 400, 341, 390, 2318, 264, 1389, 510, 294], "temperature": 0.0, "avg_logprob": -0.11885199435921602, "compression_ratio": 1.6017699115044248, "no_speech_prob": 3.247548738727346e-05}, {"id": 100, "seek": 77900, "start": 787.0, "end": 794.0, "text": " last summer where there was the CripPad instance hosted by Germany's private party. And on", "tokens": [1036, 4266, 689, 456, 390, 264, 383, 8400, 50112, 5197, 19204, 538, 7244, 311, 4551, 3595, 13, 400, 322], "temperature": 0.0, "avg_logprob": -0.11885199435921602, "compression_ratio": 1.6017699115044248, "no_speech_prob": 3.247548738727346e-05}, {"id": 101, "seek": 77900, "start": 794.0, "end": 801.0, "text": " this instance, some sensitive documents about the G7 summit were leaked. And then the police", "tokens": [341, 5197, 11, 512, 9477, 8512, 466, 264, 460, 22, 21564, 645, 31779, 13, 400, 550, 264, 3804], "temperature": 0.0, "avg_logprob": -0.11885199435921602, "compression_ratio": 1.6017699115044248, "no_speech_prob": 3.247548738727346e-05}, {"id": 102, "seek": 77900, "start": 801.0, "end": 807.0, "text": " asked the pirate party to hand out their data. Otherwise, they would seize the server. So", "tokens": [2351, 264, 27424, 3595, 281, 1011, 484, 641, 1412, 13, 10328, 11, 436, 576, 33413, 264, 7154, 13, 407], "temperature": 0.0, "avg_logprob": -0.11885199435921602, "compression_ratio": 1.6017699115044248, "no_speech_prob": 3.247548738727346e-05}, {"id": 103, "seek": 80700, "start": 807.0, "end": 813.0, "text": " the police got access to this data. And now the police could not read anything. They", "tokens": [264, 3804, 658, 2105, 281, 341, 1412, 13, 400, 586, 264, 3804, 727, 406, 1401, 1340, 13, 814], "temperature": 0.0, "avg_logprob": -0.07984466779799688, "compression_ratio": 1.6261682242990654, "no_speech_prob": 1.094391063816147e-05}, {"id": 104, "seek": 80700, "start": 813.0, "end": 819.0, "text": " could not read the documents. Namely, because everything was entered into encryption. So", "tokens": [727, 406, 1401, 264, 8512, 13, 10684, 736, 11, 570, 1203, 390, 9065, 666, 29575, 13, 407], "temperature": 0.0, "avg_logprob": -0.07984466779799688, "compression_ratio": 1.6261682242990654, "no_speech_prob": 1.094391063816147e-05}, {"id": 105, "seek": 80700, "start": 819.0, "end": 825.0, "text": " this shows that even if you trust it in the first place, we still cannot be sure that", "tokens": [341, 3110, 300, 754, 498, 291, 3361, 309, 294, 264, 700, 1081, 11, 321, 920, 2644, 312, 988, 300], "temperature": 0.0, "avg_logprob": -0.07984466779799688, "compression_ratio": 1.6261682242990654, "no_speech_prob": 1.094391063816147e-05}, {"id": 106, "seek": 80700, "start": 825.0, "end": 832.0, "text": " it's trustworthy forever. And this setting, yeah, and as I said, this setting is exactly", "tokens": [309, 311, 39714, 5680, 13, 400, 341, 3287, 11, 1338, 11, 293, 382, 286, 848, 11, 341, 3287, 307, 2293], "temperature": 0.0, "avg_logprob": -0.07984466779799688, "compression_ratio": 1.6261682242990654, "no_speech_prob": 1.094391063816147e-05}, {"id": 107, "seek": 83200, "start": 832.0, "end": 840.0, "text": " covered in this honest but curious attacker, which we allow. There's also another point", "tokens": [5343, 294, 341, 3245, 457, 6369, 35871, 11, 597, 321, 2089, 13, 821, 311, 611, 1071, 935], "temperature": 0.0, "avg_logprob": -0.14089694619178772, "compression_ratio": 1.4475138121546962, "no_speech_prob": 1.0429764188302215e-05}, {"id": 108, "seek": 83200, "start": 840.0, "end": 847.0, "text": " of view to look at this. We could all say that we protect the server from its users. So", "tokens": [295, 1910, 281, 574, 412, 341, 13, 492, 727, 439, 584, 300, 321, 2371, 264, 7154, 490, 1080, 5022, 13, 407], "temperature": 0.0, "avg_logprob": -0.14089694619178772, "compression_ratio": 1.4475138121546962, "no_speech_prob": 1.0429764188302215e-05}, {"id": 109, "seek": 83200, "start": 847.0, "end": 856.0, "text": " for example, the server administrator of the CripPad of Germany's pirate party was not", "tokens": [337, 1365, 11, 264, 7154, 25529, 295, 264, 383, 8400, 50112, 295, 7244, 311, 27424, 3595, 390, 406], "temperature": 0.0, "avg_logprob": -0.14089694619178772, "compression_ratio": 1.4475138121546962, "no_speech_prob": 1.0429764188302215e-05}, {"id": 110, "seek": 85600, "start": 856.0, "end": 862.0, "text": " consulting. How could they know what documents were published on their server because it's", "tokens": [23682, 13, 1012, 727, 436, 458, 437, 8512, 645, 6572, 322, 641, 7154, 570, 309, 311], "temperature": 0.0, "avg_logprob": -0.12097453219549996, "compression_ratio": 1.4887640449438202, "no_speech_prob": 3.519273013807833e-05}, {"id": 111, "seek": 85600, "start": 862.0, "end": 870.0, "text": " encrypted? So this shows that such encryption is also nice for you in terms of system", "tokens": [36663, 30, 407, 341, 3110, 300, 1270, 29575, 307, 611, 1481, 337, 291, 294, 2115, 295, 1185], "temperature": 0.0, "avg_logprob": -0.12097453219549996, "compression_ratio": 1.4887640449438202, "no_speech_prob": 3.519273013807833e-05}, {"id": 112, "seek": 85600, "start": 870.0, "end": 876.0, "text": " administrator because it allows you to offer the service without taking too much risk to", "tokens": [25529, 570, 309, 4045, 291, 281, 2626, 264, 2643, 1553, 1940, 886, 709, 3148, 281], "temperature": 0.0, "avg_logprob": -0.12097453219549996, "compression_ratio": 1.4887640449438202, "no_speech_prob": 3.519273013807833e-05}, {"id": 113, "seek": 87600, "start": 876.0, "end": 887.0, "text": " you. So, yeah, as a take home message, I really want to say that we need both. We need", "tokens": [291, 13, 407, 11, 1338, 11, 382, 257, 747, 1280, 3636, 11, 286, 534, 528, 281, 584, 300, 321, 643, 1293, 13, 492, 643], "temperature": 0.0, "avg_logprob": -0.12140244406622809, "compression_ratio": 1.4216216216216215, "no_speech_prob": 4.3781299609690905e-05}, {"id": 114, "seek": 87600, "start": 887.0, "end": 894.0, "text": " open source and end-to-end encryption for good trust assumption. And with this, I'm at", "tokens": [1269, 4009, 293, 917, 12, 1353, 12, 521, 29575, 337, 665, 3361, 15302, 13, 400, 365, 341, 11, 286, 478, 412], "temperature": 0.0, "avg_logprob": -0.12140244406622809, "compression_ratio": 1.4216216216216215, "no_speech_prob": 4.3781299609690905e-05}, {"id": 115, "seek": 87600, "start": 894.0, "end": 901.0, "text": " the end of my presentation. Shout out to my team. It's David is there somewhere. Wolfgang", "tokens": [264, 917, 295, 452, 5860, 13, 32749, 484, 281, 452, 1469, 13, 467, 311, 4389, 307, 456, 4079, 13, 16634, 19619], "temperature": 0.0, "avg_logprob": -0.12140244406622809, "compression_ratio": 1.4216216216216215, "no_speech_prob": 4.3781299609690905e-05}, {"id": 116, "seek": 90100, "start": 901.0, "end": 909.0, "text": " is here. And Ludo is also there. I am Theo. And CripPad is developed at Xwiki in France", "tokens": [307, 510, 13, 400, 441, 6207, 307, 611, 456, 13, 286, 669, 42519, 13, 400, 383, 8400, 50112, 307, 4743, 412, 1783, 86, 9850, 294, 6190], "temperature": 0.0, "avg_logprob": -0.23037804663181305, "compression_ratio": 1.3157894736842106, "no_speech_prob": 0.0003110325487796217}, {"id": 117, "seek": 90100, "start": 909.0, "end": 916.0, "text": " by this small team. We have a stand here in the K building. Yeah, come by. Drop by. We", "tokens": [538, 341, 1359, 1469, 13, 492, 362, 257, 1463, 510, 294, 264, 591, 2390, 13, 865, 11, 808, 538, 13, 17675, 538, 13, 492], "temperature": 0.0, "avg_logprob": -0.23037804663181305, "compression_ratio": 1.3157894736842106, "no_speech_prob": 0.0003110325487796217}, {"id": 118, "seek": 90100, "start": 916.0, "end": 918.0, "text": " have stickers. Thank you.", "tokens": [362, 21019, 13, 1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.23037804663181305, "compression_ratio": 1.3157894736842106, "no_speech_prob": 0.0003110325487796217}, {"id": 119, "seek": 91800, "start": 918.0, "end": 945.0, "text": " So are there any questions?", "tokens": [407, 366, 456, 604, 1651, 30], "temperature": 0.0, "avg_logprob": -0.2914227724075317, "compression_ratio": 0.8181818181818182, "no_speech_prob": 0.0016609927406534553}, {"id": 120, "seek": 94500, "start": 945.0, "end": 950.0, "text": " Would a peer-to-peer version be possible to reduce risks with the server and would it", "tokens": [6068, 257, 15108, 12, 1353, 12, 494, 260, 3037, 312, 1944, 281, 5407, 10888, 365, 264, 7154, 293, 576, 309], "temperature": 0.0, "avg_logprob": -0.13925012651380603, "compression_ratio": 1.6267281105990783, "no_speech_prob": 0.0009407213656231761}, {"id": 121, "seek": 94500, "start": 950.0, "end": 957.0, "text": " help? Yeah, it would be possible, theoretically. The main point why we have a server is that", "tokens": [854, 30, 865, 11, 309, 576, 312, 1944, 11, 29400, 13, 440, 2135, 935, 983, 321, 362, 257, 7154, 307, 300], "temperature": 0.0, "avg_logprob": -0.13925012651380603, "compression_ratio": 1.6267281105990783, "no_speech_prob": 0.0009407213656231761}, {"id": 122, "seek": 94500, "start": 957.0, "end": 964.0, "text": " we want that the documents are accessible all the time. So in a peer-to-peer setting,", "tokens": [321, 528, 300, 264, 8512, 366, 9515, 439, 264, 565, 13, 407, 294, 257, 15108, 12, 1353, 12, 494, 260, 3287, 11], "temperature": 0.0, "avg_logprob": -0.13925012651380603, "compression_ratio": 1.6267281105990783, "no_speech_prob": 0.0009407213656231761}, {"id": 123, "seek": 94500, "start": 964.0, "end": 971.0, "text": " you will firstly have the requirement that always one party must be online. And we don't", "tokens": [291, 486, 27376, 362, 264, 11695, 300, 1009, 472, 3595, 1633, 312, 2950, 13, 400, 321, 500, 380], "temperature": 0.0, "avg_logprob": -0.13925012651380603, "compression_ratio": 1.6267281105990783, "no_speech_prob": 0.0009407213656231761}, {"id": 124, "seek": 97100, "start": 971.0, "end": 975.0, "text": " want that. Yeah.", "tokens": [528, 300, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.14912590980529786, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.0012574429856613278}, {"id": 125, "seek": 97100, "start": 975.0, "end": 978.0, "text": " So another question.", "tokens": [407, 1071, 1168, 13], "temperature": 0.0, "avg_logprob": -0.14912590980529786, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.0012574429856613278}, {"id": 126, "seek": 97100, "start": 978.0, "end": 984.0, "text": " Thank you very much. You say we need open source and E2E for good trust assumptions. I would", "tokens": [1044, 291, 588, 709, 13, 509, 584, 321, 643, 1269, 4009, 293, 462, 17, 36, 337, 665, 3361, 17695, 13, 286, 576], "temperature": 0.0, "avg_logprob": -0.14912590980529786, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.0012574429856613278}, {"id": 127, "seek": 97100, "start": 984.0, "end": 992.0, "text": " suggest you might need a slightly stronger statement. The code on the server has to be", "tokens": [3402, 291, 1062, 643, 257, 4748, 7249, 5629, 13, 440, 3089, 322, 264, 7154, 575, 281, 312], "temperature": 0.0, "avg_logprob": -0.14912590980529786, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.0012574429856613278}, {"id": 128, "seek": 97100, "start": 992.0, "end": 1000.0, "text": " open source as well. So potentially you need something like the Afaro GPL. And in terms", "tokens": [1269, 4009, 382, 731, 13, 407, 7263, 291, 643, 746, 411, 264, 3325, 9708, 460, 21593, 13, 400, 294, 2115], "temperature": 0.0, "avg_logprob": -0.14912590980529786, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.0012574429856613278}, {"id": 129, "seek": 100000, "start": 1000.0, "end": 1006.0, "text": " of the E2E, you need post-quantum resistance. Yeah.", "tokens": [295, 264, 462, 17, 36, 11, 291, 643, 2183, 12, 358, 394, 449, 7335, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.15552863445910778, "compression_ratio": 1.5432692307692308, "no_speech_prob": 3.809210465988144e-05}, {"id": 130, "seek": 100000, "start": 1006.0, "end": 1014.0, "text": " If you have those two things, then maybe you have good trust assumptions. Yeah, good point.", "tokens": [759, 291, 362, 729, 732, 721, 11, 550, 1310, 291, 362, 665, 3361, 17695, 13, 865, 11, 665, 935, 13], "temperature": 0.0, "avg_logprob": -0.15552863445910778, "compression_ratio": 1.5432692307692308, "no_speech_prob": 3.809210465988144e-05}, {"id": 131, "seek": 100000, "start": 1014.0, "end": 1020.0, "text": " TripPad is licensed under the ATPL. So this point is easily answerable. And on the second", "tokens": [33141, 50112, 307, 25225, 833, 264, 8872, 21593, 13, 407, 341, 935, 307, 3612, 1867, 712, 13, 400, 322, 264, 1150], "temperature": 0.0, "avg_logprob": -0.15552863445910778, "compression_ratio": 1.5432692307692308, "no_speech_prob": 3.809210465988144e-05}, {"id": 132, "seek": 100000, "start": 1020.0, "end": 1025.0, "text": " point we are working on, we are looking on how to make TripPad secure in a post-quantum", "tokens": [935, 321, 366, 1364, 322, 11, 321, 366, 1237, 322, 577, 281, 652, 33141, 50112, 7144, 294, 257, 2183, 12, 358, 394, 449], "temperature": 0.0, "avg_logprob": -0.15552863445910778, "compression_ratio": 1.5432692307692308, "no_speech_prob": 3.809210465988144e-05}, {"id": 133, "seek": 102500, "start": 1025.0, "end": 1035.0, "text": " resistance. Thank you very much. You mentioned that it's problematic to have the metadata", "tokens": [7335, 13, 1044, 291, 588, 709, 13, 509, 2835, 300, 309, 311, 19011, 281, 362, 264, 26603], "temperature": 0.0, "avg_logprob": -0.14451882952735537, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.00010129511792911217}, {"id": 134, "seek": 102500, "start": 1035.0, "end": 1041.0, "text": " still. So what is TripPad doing against that or how can we make sure that the server is", "tokens": [920, 13, 407, 437, 307, 33141, 50112, 884, 1970, 300, 420, 577, 393, 321, 652, 988, 300, 264, 7154, 307], "temperature": 0.0, "avg_logprob": -0.14451882952735537, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.00010129511792911217}, {"id": 135, "seek": 102500, "start": 1041.0, "end": 1049.0, "text": " not collecting metadata? Yeah, two answers to this. One is that there's always some", "tokens": [406, 12510, 26603, 30, 865, 11, 732, 6338, 281, 341, 13, 1485, 307, 300, 456, 311, 1009, 512], "temperature": 0.0, "avg_logprob": -0.14451882952735537, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.00010129511792911217}, {"id": 136, "seek": 102500, "start": 1049.0, "end": 1054.0, "text": " metadata which will be there. For example, the IP address or the browser agent. This one", "tokens": [26603, 597, 486, 312, 456, 13, 1171, 1365, 11, 264, 8671, 2985, 420, 264, 11185, 9461, 13, 639, 472], "temperature": 0.0, "avg_logprob": -0.14451882952735537, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.00010129511792911217}, {"id": 137, "seek": 105400, "start": 1054.0, "end": 1059.0, "text": " we have to live with. And this is also the case why it's important that you can host it", "tokens": [321, 362, 281, 1621, 365, 13, 400, 341, 307, 611, 264, 1389, 983, 309, 311, 1021, 300, 291, 393, 3975, 309], "temperature": 0.0, "avg_logprob": -0.08985956253543977, "compression_ratio": 1.650943396226415, "no_speech_prob": 4.311609154683538e-05}, {"id": 138, "seek": 105400, "start": 1059.0, "end": 1067.0, "text": " on your own instance. And then the second part is that TripPad collects as few information", "tokens": [322, 428, 1065, 5197, 13, 400, 550, 264, 1150, 644, 307, 300, 33141, 50112, 39897, 382, 1326, 1589], "temperature": 0.0, "avg_logprob": -0.08985956253543977, "compression_ratio": 1.650943396226415, "no_speech_prob": 4.311609154683538e-05}, {"id": 139, "seek": 105400, "start": 1067.0, "end": 1074.0, "text": " about you as possible. So for example, we don't have a list of users, of user names.", "tokens": [466, 291, 382, 1944, 13, 407, 337, 1365, 11, 321, 500, 380, 362, 257, 1329, 295, 5022, 11, 295, 4195, 5288, 13], "temperature": 0.0, "avg_logprob": -0.08985956253543977, "compression_ratio": 1.650943396226415, "no_speech_prob": 4.311609154683538e-05}, {"id": 140, "seek": 105400, "start": 1074.0, "end": 1081.0, "text": " There's even no list of hashed user names. So we just hash the user. The user name and", "tokens": [821, 311, 754, 572, 1329, 295, 22019, 292, 4195, 5288, 13, 407, 321, 445, 22019, 264, 4195, 13, 440, 4195, 1315, 293], "temperature": 0.0, "avg_logprob": -0.08985956253543977, "compression_ratio": 1.650943396226415, "no_speech_prob": 4.311609154683538e-05}, {"id": 141, "seek": 108100, "start": 1081.0, "end": 1088.0, "text": " the password locally on the client side and generate from this all the keys. So this", "tokens": [264, 11524, 16143, 322, 264, 6423, 1252, 293, 8460, 490, 341, 439, 264, 9317, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.12407735336658567, "compression_ratio": 1.5863636363636364, "no_speech_prob": 0.00021455749811138958}, {"id": 142, "seek": 108100, "start": 1088.0, "end": 1098.0, "text": " is just as an illustration how we try to ensure to have as few metadata as possible.", "tokens": [307, 445, 382, 364, 22645, 577, 321, 853, 281, 5586, 281, 362, 382, 1326, 26603, 382, 1944, 13], "temperature": 0.0, "avg_logprob": -0.12407735336658567, "compression_ratio": 1.5863636363636364, "no_speech_prob": 0.00021455749811138958}, {"id": 143, "seek": 108100, "start": 1098.0, "end": 1102.0, "text": " Good afternoon. And that's the first question you answered that you don't use peer-to-peer", "tokens": [2205, 6499, 13, 400, 300, 311, 264, 700, 1168, 291, 10103, 300, 291, 500, 380, 764, 15108, 12, 1353, 12, 494, 260], "temperature": 0.0, "avg_logprob": -0.12407735336658567, "compression_ratio": 1.5863636363636364, "no_speech_prob": 0.00021455749811138958}, {"id": 144, "seek": 108100, "start": 1102.0, "end": 1106.0, "text": " because you want the server to be online all the time. Does the server have to be unique", "tokens": [570, 291, 528, 264, 7154, 281, 312, 2950, 439, 264, 565, 13, 4402, 264, 7154, 362, 281, 312, 3845], "temperature": 0.0, "avg_logprob": -0.12407735336658567, "compression_ratio": 1.5863636363636364, "no_speech_prob": 0.00021455749811138958}, {"id": 145, "seek": 110600, "start": 1106.0, "end": 1111.0, "text": " or can you have multiple servers just in case one gets in the hands of the police or gets", "tokens": [420, 393, 291, 362, 3866, 15909, 445, 294, 1389, 472, 2170, 294, 264, 2377, 295, 264, 3804, 420, 2170], "temperature": 0.0, "avg_logprob": -0.15722706006920856, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0004940273356623948}, {"id": 146, "seek": 110600, "start": 1111.0, "end": 1118.0, "text": " out for some reason? Are you speaking of federation? Yes. Okay. Possibly there, currently there", "tokens": [484, 337, 512, 1778, 30, 2014, 291, 4124, 295, 4636, 5053, 30, 1079, 13, 1033, 13, 33112, 3545, 456, 11, 4362, 456], "temperature": 0.0, "avg_logprob": -0.15722706006920856, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0004940273356623948}, {"id": 147, "seek": 110600, "start": 1118.0, "end": 1131.0, "text": " is no possibility for federation. No, sadly not. Yeah, you mentioned the case where a", "tokens": [307, 572, 7959, 337, 4636, 5053, 13, 883, 11, 22023, 406, 13, 865, 11, 291, 2835, 264, 1389, 689, 257], "temperature": 0.0, "avg_logprob": -0.15722706006920856, "compression_ratio": 1.5139664804469273, "no_speech_prob": 0.0004940273356623948}, {"id": 148, "seek": 113100, "start": 1131.0, "end": 1137.0, "text": " server was raided by police. So they have the server. Is it not enough then to have that", "tokens": [7154, 390, 3342, 2112, 538, 3804, 13, 407, 436, 362, 264, 7154, 13, 1119, 309, 406, 1547, 550, 281, 362, 300], "temperature": 0.0, "avg_logprob": -0.13679544476495273, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.0001575877977302298}, {"id": 149, "seek": 113100, "start": 1137.0, "end": 1142.0, "text": " server and also have somebody's browser history with the key in the URL and then that conversation", "tokens": [7154, 293, 611, 362, 2618, 311, 11185, 2503, 365, 264, 2141, 294, 264, 12905, 293, 550, 300, 3761], "temperature": 0.0, "avg_logprob": -0.13679544476495273, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.0001575877977302298}, {"id": 150, "seek": 113100, "start": 1142.0, "end": 1153.0, "text": " is open? So if I got your answer, if you got your question correctly, it was if an attacker", "tokens": [307, 1269, 30, 407, 498, 286, 658, 428, 1867, 11, 498, 291, 658, 428, 1168, 8944, 11, 309, 390, 498, 364, 35871], "temperature": 0.0, "avg_logprob": -0.13679544476495273, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.0001575877977302298}, {"id": 151, "seek": 115300, "start": 1153.0, "end": 1161.0, "text": " has access to the server and to the URL, then they have full knowledge. Yeah, that's the", "tokens": [575, 2105, 281, 264, 7154, 293, 281, 264, 12905, 11, 550, 436, 362, 1577, 3601, 13, 865, 11, 300, 311, 264], "temperature": 0.0, "avg_logprob": -0.1523721422467913, "compression_ratio": 1.6646341463414633, "no_speech_prob": 8.05728996056132e-05}, {"id": 152, "seek": 115300, "start": 1161.0, "end": 1168.0, "text": " case because the URL leaks the full URL including the part after the hash, which is not sent", "tokens": [1389, 570, 264, 12905, 28885, 264, 1577, 12905, 3009, 264, 644, 934, 264, 22019, 11, 597, 307, 406, 2279], "temperature": 0.0, "avg_logprob": -0.1523721422467913, "compression_ratio": 1.6646341463414633, "no_speech_prob": 8.05728996056132e-05}, {"id": 153, "seek": 115300, "start": 1168.0, "end": 1174.0, "text": " to the server. If the attacker has this, yeah, then they have the key to the server and add", "tokens": [281, 264, 7154, 13, 759, 264, 35871, 575, 341, 11, 1338, 11, 550, 436, 362, 264, 2141, 281, 264, 7154, 293, 909], "temperature": 0.0, "avg_logprob": -0.1523721422467913, "compression_ratio": 1.6646341463414633, "no_speech_prob": 8.05728996056132e-05}, {"id": 154, "seek": 117400, "start": 1174.0, "end": 1184.0, "text": " the key to the document and can decrypt it. Yeah, connected it. So yes. How does editing", "tokens": [264, 2141, 281, 264, 4166, 293, 393, 979, 627, 662, 309, 13, 865, 11, 4582, 309, 13, 407, 2086, 13, 1012, 775, 10000], "temperature": 0.0, "avg_logprob": -0.18940448760986328, "compression_ratio": 1.4585635359116023, "no_speech_prob": 2.3089289243216626e-05}, {"id": 155, "seek": 117400, "start": 1184.0, "end": 1191.0, "text": " collaborators adding removing work do like re-encrypt the file of different keys every", "tokens": [39789, 5127, 12720, 589, 360, 411, 319, 12, 22660, 627, 662, 264, 3991, 295, 819, 9317, 633], "temperature": 0.0, "avg_logprob": -0.18940448760986328, "compression_ratio": 1.4585635359116023, "no_speech_prob": 2.3089289243216626e-05}, {"id": 156, "seek": 117400, "start": 1191.0, "end": 1198.0, "text": " time or how do you handle that? So we have, we only send updates. So it's not the entire", "tokens": [565, 420, 577, 360, 291, 4813, 300, 30, 407, 321, 362, 11, 321, 787, 2845, 9205, 13, 407, 309, 311, 406, 264, 2302], "temperature": 0.0, "avg_logprob": -0.18940448760986328, "compression_ratio": 1.4585635359116023, "no_speech_prob": 2.3089289243216626e-05}, {"id": 157, "seek": 119800, "start": 1198.0, "end": 1206.0, "text": " file every time and it's symmetrically encrypted. And in order, there are two ways you can", "tokens": [3991, 633, 565, 293, 309, 311, 14232, 27965, 984, 36663, 13, 400, 294, 1668, 11, 456, 366, 732, 2098, 291, 393], "temperature": 0.0, "avg_logprob": -0.10518919292249178, "compression_ratio": 1.6497695852534562, "no_speech_prob": 2.6527723093749955e-05}, {"id": 158, "seek": 119800, "start": 1206.0, "end": 1212.0, "text": " access a document in a read-only mode. There you have the keys for decryption and to prove", "tokens": [2105, 257, 4166, 294, 257, 1401, 12, 25202, 4391, 13, 821, 291, 362, 264, 9317, 337, 979, 627, 1695, 293, 281, 7081], "temperature": 0.0, "avg_logprob": -0.10518919292249178, "compression_ratio": 1.6497695852534562, "no_speech_prob": 2.6527723093749955e-05}, {"id": 159, "seek": 119800, "start": 1212.0, "end": 1220.0, "text": " that you're able to update the document, you need to sign it with a sign-in key. But the", "tokens": [300, 291, 434, 1075, 281, 5623, 264, 4166, 11, 291, 643, 281, 1465, 309, 365, 257, 1465, 12, 259, 2141, 13, 583, 264], "temperature": 0.0, "avg_logprob": -0.10518919292249178, "compression_ratio": 1.6497695852534562, "no_speech_prob": 2.6527723093749955e-05}, {"id": 160, "seek": 119800, "start": 1220.0, "end": 1227.0, "text": " keys are static for a document. But if a user gets removed from read access, they would", "tokens": [9317, 366, 13437, 337, 257, 4166, 13, 583, 498, 257, 4195, 2170, 7261, 490, 1401, 2105, 11, 436, 576], "temperature": 0.0, "avg_logprob": -0.10518919292249178, "compression_ratio": 1.6497695852534562, "no_speech_prob": 2.6527723093749955e-05}, {"id": 161, "seek": 122700, "start": 1227.0, "end": 1232.0, "text": " still be able to read the file after it's being modified, wouldn't they?", "tokens": [920, 312, 1075, 281, 1401, 264, 3991, 934, 309, 311, 885, 15873, 11, 2759, 380, 436, 30], "temperature": 0.0, "avg_logprob": -0.1275190729083437, "compression_ratio": 1.5272727272727273, "no_speech_prob": 4.955886470270343e-05}, {"id": 162, "seek": 122700, "start": 1232.0, "end": 1248.0, "text": " Yes, exactly. Yeah. Yeah, they'll still be able to read it. There is, there are access lists", "tokens": [1079, 11, 2293, 13, 865, 13, 865, 11, 436, 603, 920, 312, 1075, 281, 1401, 309, 13, 821, 307, 11, 456, 366, 2105, 14511], "temperature": 0.0, "avg_logprob": -0.1275190729083437, "compression_ratio": 1.5272727272727273, "no_speech_prob": 4.955886470270343e-05}, {"id": 163, "seek": 122700, "start": 1248.0, "end": 1253.0, "text": " which we have which can defend against this scenario. But yeah, there's also something", "tokens": [597, 321, 362, 597, 393, 8602, 1970, 341, 9005, 13, 583, 1338, 11, 456, 311, 611, 746], "temperature": 0.0, "avg_logprob": -0.1275190729083437, "compression_ratio": 1.5272727272727273, "no_speech_prob": 4.955886470270343e-05}, {"id": 164, "seek": 125300, "start": 1253.0, "end": 1261.0, "text": " we're working on. And maybe if I can just mention something which with more goes into", "tokens": [321, 434, 1364, 322, 13, 400, 1310, 498, 286, 393, 445, 2152, 746, 597, 365, 544, 1709, 666], "temperature": 0.0, "avg_logprob": -0.1851020994640532, "compression_ratio": 1.3206106870229009, "no_speech_prob": 0.00028233876219019294}, {"id": 165, "seek": 125300, "start": 1261.0, "end": 1267.0, "text": " these detailed questions. We just published a white paper. You can go to our website on", "tokens": [613, 9942, 1651, 13, 492, 445, 6572, 257, 2418, 3035, 13, 509, 393, 352, 281, 527, 3144, 322], "temperature": 0.0, "avg_logprob": -0.1851020994640532, "compression_ratio": 1.3206106870229009, "no_speech_prob": 0.00028233876219019294}, {"id": 166, "seek": 126700, "start": 1267.0, "end": 1284.0, "text": " kruppad.org and check it out. So if there are no other questions.", "tokens": [50364, 350, 894, 427, 345, 13, 4646, 293, 1520, 309, 484, 13, 407, 498, 456, 366, 572, 661, 1651, 13, 51214], "temperature": 0.0, "avg_logprob": -0.279477444562045, "compression_ratio": 0.9848484848484849, "no_speech_prob": 0.0018944813637062907}], "language": "en"}