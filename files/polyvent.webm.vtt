WEBVTT

00:00.000 --> 00:08.680
Okay, thank you everybody for being here.

00:08.680 --> 00:12.520
I know it's the end of the day, it's been a long day.

00:12.520 --> 00:13.520
So thank you.

00:13.520 --> 00:18.360
I'd like to talk about the Polyvent Free Libre Open Source ventilator.

00:18.360 --> 00:22.080
This is hardware in a little different sense than is used in this room.

00:22.080 --> 00:26.120
Normally when you say hardware at this conference, you mean chips and VLSI stuff, but this is

00:26.120 --> 00:29.440
an electromechanical hardware device.

00:29.440 --> 00:32.680
This talk is co-authored with Dr. Victor Sutrin.

00:32.680 --> 00:34.360
Victor, can you raise your hand?

00:34.360 --> 00:40.560
And Antal Zeiderwick is our chief mechanical engineer for the chassis part.

00:40.560 --> 00:44.360
If you meet us after the talk, we'll be happy to answer questions for you.

00:44.360 --> 00:48.760
And we are trying to recruit software engineers and electrical and mechanical engineers to

00:48.760 --> 00:52.520
work on the project as well.

00:52.520 --> 00:54.560
So I am Robert Reed.

00:54.560 --> 00:59.200
I'm the founder of Public Invention, which is a US 501C3 public charity.

00:59.200 --> 01:02.280
Our motto is to invent in the public for the public.

01:02.280 --> 01:06.520
I think this conference will appreciate that we're trying to take the principles of open

01:06.520 --> 01:12.080
source software development and apply it not only to chip design, but to actual hardware

01:12.080 --> 01:14.920
inventions.

01:14.920 --> 01:21.720
So I'd like to create a setting in the spring of 2020 in the United States.

01:21.720 --> 01:27.520
So many people had died of COVID-19 so quickly in New York that they had to use refrigerated

01:27.520 --> 01:32.440
trucks as temporary morts for that purpose.

01:32.440 --> 01:38.280
At that time, there was a genuine belief that the Western world might need a million mechanical

01:38.280 --> 01:41.100
ventilators to try to keep people alive.

01:41.100 --> 01:46.560
That turned out not to be true, but it wasn't erroneous at the time based on what we knew

01:46.560 --> 01:49.760
from the disease progression in northern Italy.

01:49.760 --> 01:55.920
What we didn't know at the time was that social distancing and lockdowns would work,

01:55.920 --> 02:01.680
and also doctors decided they didn't need to ventilate paper people as early with COVID

02:01.680 --> 02:03.920
as they had previously thought.

02:03.920 --> 02:09.880
Nonetheless, a very large number of humanitarian engineering teams all over the world attempted

02:09.880 --> 02:13.760
to make emergency ventilators to solve this problem.

02:13.760 --> 02:21.800
It was kind of a global effort, and Victor and a young man who was 16 at the time started

02:21.800 --> 02:26.480
working on their own ventilator in the same effort.

02:26.480 --> 02:31.600
Now they started with a bellows-based design, we're going to talk about that.

02:31.600 --> 02:38.160
The thing they designed, the polyvent, was specifically designed to talk about fragile

02:38.160 --> 02:39.240
supply chains.

02:39.240 --> 02:44.040
So it was designed to be constructable within a low and middle income country, and that's

02:44.040 --> 02:47.520
one reason they went with bellows in the initial design.

02:47.520 --> 02:53.760
Originally, they weren't necessarily embracing open-source licensing because they didn't know

02:53.760 --> 02:58.640
that much about it, and everyone sort of believed, well, we're going to need large firms to

02:58.640 --> 03:03.000
make a lot of money, and if you have an open-source license on it, they won't want to use your

03:03.000 --> 03:04.000
product.

03:04.000 --> 03:08.560
Now, how do we know that 100 humanitarian engineering teams started?

03:08.560 --> 03:11.480
Because public invention evaluated all of them.

03:11.480 --> 03:16.720
So we made a spreadsheet which evaluated all of the open-source ventilators along a wide

03:16.720 --> 03:21.680
variety of dimensions here.

03:21.680 --> 03:27.240
Now at the time, and still today, what we're trying to do is to create open-source medical

03:27.240 --> 03:28.720
devices.

03:28.720 --> 03:34.440
That is harder than making open-source hardware, which is harder than making open-source software,

03:34.440 --> 03:39.560
which is harder than copywriting text, both from a legal point of view and from an intellectual

03:39.560 --> 03:40.560
point of view.

03:40.560 --> 03:45.280
The cost of development for medical things goes up because you're attempting to produce

03:45.280 --> 03:47.120
regulated devices.

03:47.120 --> 03:54.080
Now originally, the Polyvent team was attempting to do that, but at that time in the United

03:54.080 --> 03:57.320
States, there was an emergency youth authorization.

03:57.320 --> 04:03.040
So there was a belief that we might not need to do all the things that the FDA would normally

04:03.040 --> 04:07.080
require.

04:07.080 --> 04:12.880
So while this was going on, public invention published the Open Medical Technology Manifesto,

04:12.880 --> 04:18.560
which is that open, shareable, repairable medical technology will make us all healthier.

04:18.560 --> 04:25.200
The Polyvent ventilator is aligned with that, and I invite you all to find this and sign

04:25.200 --> 04:28.320
it if you agree with it.

04:28.320 --> 04:36.320
So the Polyvent team began working on a ventilator, and they had some success in Lens, and they

04:36.320 --> 04:41.200
designed a very extensible system that we're going to talk about.

04:41.200 --> 04:47.240
But the global pandemic urgency was dissipating by about six months from that spring.

04:47.240 --> 04:53.360
So by October of that first year, people were no longer excited about the idea.

04:53.360 --> 04:57.600
So the thing that I'm most proud of perhaps of this team is that they just kept going

04:57.600 --> 05:01.680
and continued to develop the ventilator.

05:01.680 --> 05:07.160
So at that time, they joined public invention basically in exchange for making it fully

05:07.160 --> 05:12.800
open source, public invention began to start paying for parts and manual labor to support

05:12.800 --> 05:15.400
the development of the ventilator.

05:15.400 --> 05:21.080
It's also the case that I'm mostly a software guy, another non-profit helpful engineering

05:21.080 --> 05:25.440
had the VentOS software, which we're going to talk about, and the existing team didn't

05:25.440 --> 05:26.640
have any software.

05:26.640 --> 05:29.160
So it was a nice alliance.

05:29.160 --> 05:30.640
This is their original system.

05:30.640 --> 05:32.680
This is a fully functional ventilator.

05:32.680 --> 05:36.240
It uses dual bellows here.

05:36.240 --> 05:38.240
Bellows can be manufactured with 3D printers.

05:38.240 --> 05:42.360
So they can presumably be made in any country was the idea.

05:42.360 --> 05:44.040
However, there were some problems.

05:44.040 --> 05:49.120
The bearings to drive the bellows up and down tended to wear out.

05:49.120 --> 05:52.120
And there were some other improvements possible.

05:52.120 --> 05:54.440
We started to make those improvements.

05:54.440 --> 06:00.080
The big switch we made was to switch to a proportional valve based system that used pressurized air

06:00.080 --> 06:03.280
and pressurized oxygen.

06:03.280 --> 06:08.000
This was inspired by Smith College in the United States, which is probably the premier

06:08.000 --> 06:10.600
of women's college in the United States.

06:10.600 --> 06:13.840
They had made an award-winning ventilator called the Smith Vent.

06:13.840 --> 06:14.840
They stopped.

06:14.840 --> 06:22.040
I don't know why, but we continued and have used the same basic technology.

06:22.040 --> 06:27.360
Now we already had a spirometer, the VentMon, which was made by public invention.

06:27.360 --> 06:39.120
We used that as part of our system, and eventually we started to redesign for education.

06:39.120 --> 06:45.200
We started with the proportional valve on the left, which is a Birket proportional valve.

06:45.200 --> 06:49.480
It was really kind of an engineering mistake because it was larger than what we needed

06:49.480 --> 06:52.840
and the airflow was not as precise as what we needed.

06:52.840 --> 06:57.520
The valve on the right is difficult to source, it's made in the United States by IQ valve.

06:57.520 --> 07:02.520
It's a very precisely controlled proportional valve.

07:02.520 --> 07:05.560
Like all projects, we learned as we went along.

07:05.560 --> 07:11.080
This was what we called the Polyvent One, even though it's after the Velo's module.

07:11.080 --> 07:13.360
This was, again, fully functional.

07:13.360 --> 07:20.040
We performed some tests with professors of education in biomedical engineering.

07:20.040 --> 07:28.960
This system worked, but we decided to redesign it for education.

07:28.960 --> 07:33.720
So while this was going on, the COVID pandemic continues.

07:33.720 --> 07:38.800
In India, around this time, there was a terrible, terrible spike of death.

07:38.800 --> 07:42.000
Now this was not due to a lack of ventilators.

07:42.000 --> 07:46.080
People say it was due to a lack of oxygen.

07:46.080 --> 07:49.640
We have also, public invention have also worked on an oxygen concentrate.

07:49.640 --> 07:56.080
The reason I bring it up is that what we're attempting to do and what many of you are

07:56.080 --> 07:59.320
attempting to do in the software that you produce is to make the world better for a

07:59.320 --> 08:00.840
lot of people.

08:00.840 --> 08:07.520
Making open source medical devices is a new way, a new avenue for open source philosophy

08:07.520 --> 08:10.960
to make the world better for a very large number of people.

08:10.960 --> 08:15.240
It's quite a technical challenge, but that's why we're doing it.

08:15.240 --> 08:21.000
So based on educator feedback, we made a lighter single deck design.

08:21.000 --> 08:22.640
We made a transparent case.

08:22.640 --> 08:28.080
We made the inside spacious and modular so that students could look at it and you could

08:28.080 --> 08:29.680
also repair it more easily.

08:29.680 --> 08:32.320
You didn't have to take the whole thing apart.

08:32.320 --> 08:37.880
That is very different than the way professionally designed medical equipment is made.

08:37.880 --> 08:39.800
It's not made to be easy to repair.

08:39.800 --> 08:41.920
It's not made to be easy to understand.

08:41.920 --> 08:53.360
So it's quite a departure from what you would see in a normal for profit sort of made device.

08:53.360 --> 09:00.360
We also, Nathaniel did a really good job designing a modular card based electronic control system.

09:00.360 --> 09:05.840
And this actually paid off when a second public invention team created a card that we were

09:05.840 --> 09:10.640
able to put into the device to control a general purpose alarm device, which we're working

09:10.640 --> 09:11.640
on.

09:11.640 --> 09:18.080
So that team did that with no interaction with Victor's team just based on the documentation

09:18.080 --> 09:19.720
that we have.

09:19.720 --> 09:26.360
So this is the timeline and we've been getting better and better as we go along like most

09:26.360 --> 09:27.520
projects.

09:27.520 --> 09:32.160
In October, we did a classroom evaluation with 12 biomedical engineering students at

09:32.160 --> 09:36.320
Rice University in Houston, Texas in the United States.

09:36.320 --> 09:38.760
This is the device as it stands today.

09:38.760 --> 09:40.240
This is the Polyvent 2.

09:40.240 --> 09:43.680
That's what the students looked used.

09:43.680 --> 09:50.000
As you can see, it actually uses an acrylic case so you can see all of the components.

09:50.000 --> 09:54.760
And I don't have a good layout diagram, but it's laid out in a way where it's physically

09:54.760 --> 09:59.040
modular as well as being electronically modular.

09:59.040 --> 10:03.240
The software is too, of course, because we learned a lot from the open source software

10:03.240 --> 10:05.320
community on how to do this.

10:05.320 --> 10:11.920
So it's now our intention with the Polyvent to continue to eventually make a design basis

10:11.920 --> 10:15.240
that can be used for a medical ventilator.

10:15.240 --> 10:22.840
But we believe that by sort of infiltrating the research and education community, we have

10:22.840 --> 10:25.320
a better shot of eventually accomplishing that.

10:25.320 --> 10:31.680
So the Polyvent platform right now is for medical and veterinary doctors, but really

10:31.680 --> 10:36.560
it's for biomedical engineering students, even you can teach business school classes

10:36.560 --> 10:38.200
on it.

10:38.200 --> 10:42.200
You can certainly do mechanical electrical engineering software engineering.

10:42.200 --> 10:50.200
And we consider ourselves firmly part of the emerging discipline of humanitarian engineering.

10:50.200 --> 10:55.880
So what we did to make the classroom instructor, I am not a teacher.

10:55.880 --> 11:01.440
I'm mostly a computer programmer, is we made fake broken parts and we asked the students

11:01.440 --> 11:06.200
to turn their backs and we would install a fake broken part and then they would attempt

11:06.200 --> 11:07.360
to find it.

11:07.360 --> 11:11.800
Now this class they were taking is in fact a troubleshooting class.

11:11.800 --> 11:19.000
So it worked rather well and of the 12 students who were there, they really strongly believe

11:19.000 --> 11:21.720
that this would be useful in other universities.

11:21.720 --> 11:28.960
So it's our hope to sort of sell this at cost, even though it's completely open source.

11:28.960 --> 11:32.800
We could make it if they wanted to, all the physical designs, all the software designs

11:32.800 --> 11:39.480
are completely open, but making things like this in hardware requires, as one of the gentlemen

11:39.480 --> 11:42.360
in the previous talk, a certain amount of tooling and so forth.

11:42.360 --> 11:47.720
So people like a graduate school may find it easier to pay us $5,000 for one of these,

11:47.720 --> 11:54.080
which is sort of the hardware costs are about $2,000 and it takes some labor to put it together.

11:54.080 --> 11:57.920
It's kind of the cost for us to make it rather than build one themselves.

11:57.920 --> 12:03.840
But they could, they can build it and modify it themselves based on licenses that I'm

12:03.840 --> 12:06.520
sure you're all familiar with.

12:06.520 --> 12:11.840
So this is kind of a schematic of the design that you saw there physically and the thing

12:11.840 --> 12:16.800
that's most important is Nathaniel did a really good job designing an electronic extensible

12:16.800 --> 12:18.000
card system.

12:18.000 --> 12:23.320
And this is based on an IEEE standard I'm not familiar with, but basically you plug

12:23.320 --> 12:27.880
slots into it and it exposes pins of the ESP32.

12:27.880 --> 12:34.200
So if you have a device that you would like to add to the ventilator, like a humidifier,

12:34.200 --> 12:41.920
a nebulizer, a heater, an additional set of instrumentation, you can just design a card

12:41.920 --> 12:43.640
and stick it in there.

12:43.640 --> 12:48.120
And that's what the general purpose alarm device team of public convention did.

12:48.120 --> 12:53.120
This is a physical photograph of how those things slide in there.

12:53.120 --> 12:59.480
This card right here is a card with a bunch of power transistors which control the solenoid

12:59.480 --> 13:02.640
valves which are in the system.

13:02.640 --> 13:05.680
Because obviously it takes 24 volts to do that.

13:05.680 --> 13:09.760
So now I'd like to talk about software.

13:09.760 --> 13:13.200
The software system is called Vint OS.

13:13.200 --> 13:16.840
I didn't name it, really it's not an operating system.

13:16.840 --> 13:19.160
But we kind of think of it that way.

13:19.160 --> 13:24.600
It runs on an ESP32 and it was created by a different non-profit, which I'm a board

13:24.600 --> 13:30.320
member, helpful at engineering, and some other people worked on it, in particular Ben Coons.

13:30.320 --> 13:35.640
Now interestingly, this was forked to make an oxygen concentrator, which we have since

13:35.640 --> 13:37.920
quit working on, called the AUX.

13:37.920 --> 13:46.560
But that was forked to be used by me for NASA, the U.S. National Aeronautics and Space Administration,

13:46.560 --> 13:50.200
to make a control system for a high-tech ceramic oxygen generator.

13:50.200 --> 13:56.440
So a lot of times, as I'm sure you guys understand, open source code lives even if its initial

13:56.440 --> 13:58.400
purpose is not met.

13:58.400 --> 14:02.800
If you write good code that's documented with a good license, you can use it for some

14:02.800 --> 14:05.600
other purpose and we're trying to do that.

14:05.600 --> 14:10.240
In fact, Ben made a number of improvements that really need to come back into Vint OS

14:10.240 --> 14:15.160
and I kind of need a volunteer to help me do that because there's always more software

14:15.160 --> 14:16.800
work to be done.

14:16.800 --> 14:21.200
So the Vint OS architecture, and this is where we're really talking about an embedded system

14:21.200 --> 14:27.400
that you guys will understand, is a simple Arduino platform compiled with PlatformIO.

14:27.400 --> 14:31.480
Configuration modes in PlatformIO set pre-processed with compile time switches, which give us

14:31.480 --> 14:37.160
a wide variety of hardware architectures we can compile into, although the PolyVent is

14:37.160 --> 14:43.760
effectively the only machine on which it really runs today, but we could support other architectures.

14:43.760 --> 14:48.200
It almost doesn't run on an Arduino Uno because it's too big, but technically it will run

14:48.200 --> 14:49.880
on an Uno.

14:49.880 --> 14:51.760
We use an ESP32.

14:51.760 --> 14:54.320
We have a pretty good hardware abstraction layer.

14:54.320 --> 14:59.240
The basic architecture is what's called a superloop or simple loop architecture and

14:59.240 --> 15:08.600
we believe that's appropriate for a life-critical medical device like the one that we're designing.

15:08.600 --> 15:16.840
So Vint OS claims to be a operating system that is universal.

15:16.840 --> 15:21.600
It's a universal platform for mechanical human ventilation.

15:21.600 --> 15:23.880
How is that possible?

15:23.880 --> 15:28.840
Well it's possible because all ventilators do almost exactly the same thing.

15:28.840 --> 15:31.320
They're relatively straightforward.

15:31.320 --> 15:33.800
They're simple devices.

15:33.800 --> 15:37.960
Simple doesn't mean easy because if you do something wrong the patient dies, but they

15:37.960 --> 15:40.880
are still relatively simple devices.

15:40.880 --> 15:42.760
Thank you.

15:42.760 --> 15:48.600
In particular, doctors normally want to vary the breasts per minute.

15:48.600 --> 15:51.720
As you become sicker you require more breasts per minute.

15:51.720 --> 15:53.520
You hope that doesn't happen.

15:53.520 --> 16:00.880
The inhalation time and the exhalation time ratio is varied for the comfort of the patient.

16:00.880 --> 16:05.840
If you are approaching death they may have to make that what would be very uncomfortable

16:05.840 --> 16:10.960
for a healthy person to try to keep you alive.

16:10.960 --> 16:15.240
Pressure control ventilation keeps constant pressure through the inhalation.

16:15.240 --> 16:21.280
You want that pressure to be low because high pressure can cause damage to your lungs.

16:21.280 --> 16:26.160
But as you approach death that pressure may have to go up to try to keep you alive.

16:26.160 --> 16:32.280
Doctors, I'm not a medical doctor, Victor is a physiologist, not a medical doctor.

16:32.280 --> 16:34.240
Clinicians know how to balance these things.

16:34.240 --> 16:38.680
It's our desire to give them the power to do that.

16:38.680 --> 16:45.280
Basically you just blow air into the patient's lungs and then you stop and the lungs deflate

16:45.280 --> 16:46.280
on their own.

16:46.280 --> 16:49.320
That's the way positive pressure ventilation works.

16:49.320 --> 16:59.600
It's simple but you have to control all these things.

16:59.600 --> 17:03.800
This is sort of a diagram of a universal ventilator.

17:03.800 --> 17:06.920
All ventilators are sort of the same in this sense.

17:06.920 --> 17:12.760
There's an air drive which produces air in one way or another and that's the most mechanical

17:12.760 --> 17:14.280
system that's part of it.

17:14.280 --> 17:19.400
There's a sense module and ours is completely separated in the sense that we use the Ventmon

17:19.400 --> 17:24.120
which is a separate device that we would like to productize.

17:24.120 --> 17:29.840
We gave a bunch away because we had a grant to give them away but it's basically a spirometer.

17:29.840 --> 17:33.840
It measures everything about human breath and if you connect it to the ventilator it

17:33.840 --> 17:36.920
allows you to see what the ventilator is doing.

17:36.920 --> 17:41.280
A controller is what this room would think of as the embedded system.

17:41.280 --> 17:43.680
That's where VentOS runs.

17:43.680 --> 17:51.640
Our interface is we use a Internet of Things based public data cloud and we're still working

17:51.640 --> 17:58.440
on aspects of the clinical interface.

17:58.440 --> 18:03.200
If we think about philosophy, the Unix way, and of course I didn't write this, this is

18:03.200 --> 18:08.520
on Wikipedia you can find us, is to write programs that do one thing and do it well,

18:08.520 --> 18:13.240
write programs to work together, and write programs to handle text streams because they're

18:13.240 --> 18:14.600
a universal interface.

18:14.600 --> 18:16.080
This is from the 70s.

18:16.080 --> 18:23.040
This is very old philosophy which has served the world in good stead because Linux and

18:23.040 --> 18:26.360
open source software is eating the world.

18:26.360 --> 18:31.200
How do you apply the same things to the kinds of electromechanical devices that we're building?

18:31.200 --> 18:32.480
There aren't even chips.

18:32.480 --> 18:34.320
They're moving air around.

18:34.320 --> 18:37.440
Well, you attempt to do the same thing.

18:37.440 --> 18:40.600
You build machines that do one thing and do it well.

18:40.600 --> 18:43.960
That is not the way Johnson and Johnson would build a ventilator.

18:43.960 --> 18:49.440
They would put everything in the same case but we're not Johnson to Johnson, right?

18:49.440 --> 18:50.920
We can do something different.

18:50.920 --> 18:57.680
We make a physically separated device where physical components handle one component at

18:57.680 --> 19:01.440
a time and then they're integrated in a soft way.

19:01.440 --> 19:08.360
By using digital control, we make them all roboticizable or controllable by a controller

19:08.360 --> 19:12.280
so that we can use them and they can be reused in that way.

19:12.280 --> 19:16.080
In my experience, instead of handling text streams, the modern way to do this is you

19:16.080 --> 19:21.600
handle JSON objects that are communicated either via SPI or I squared C and that's kind

19:21.600 --> 19:27.720
of a universal control language that's easy for both programmers and the hardware devices

19:27.720 --> 19:31.080
to understand.

19:31.080 --> 19:33.280
How realistic is this?

19:33.280 --> 19:38.880
That's debatable because we're nowhere close to having an FDA-based ventilator at the moment.

19:38.880 --> 19:42.360
However, we have done a lot with very little money.

19:42.360 --> 19:49.040
We built the Ventmon which is kind of our most realized device because it's much easier

19:49.040 --> 19:50.920
than a ventilator, right?

19:50.920 --> 19:56.160
VentOS is an existing operating system, Polyvent is a ventilator.

19:56.160 --> 20:01.240
I'm very proud that we've defined two data standards based on JSON, the public invention

20:01.240 --> 20:05.600
respiratory data standard and the public invention respiratory control standard.

20:05.600 --> 20:10.520
Now, as you guys, I'm going to come back to this but as you guys know, progress is often

20:10.520 --> 20:12.640
made through defining standards.

20:12.640 --> 20:17.240
It's often not very glamorous to do so but the work of defining the standards is really

20:17.240 --> 20:22.360
what allows other people to take your work and utilize it in a standard way.

20:22.360 --> 20:25.840
In this case, we've done work that has not been recognized.

20:25.840 --> 20:30.120
No one else is using these standards yet but I hope that will change.

20:30.120 --> 20:32.440
We tried to build an oxygen concentrator.

20:32.440 --> 20:34.840
We sort of stopped working on that.

20:34.840 --> 20:41.560
We also have vent display which gives a complete dynamic display of breath plots and the things

20:41.560 --> 20:44.520
that clinicians need to do.

20:44.520 --> 20:50.400
So if we map that to our diagram here, what we find is that the device that we're calling

20:50.400 --> 20:54.160
the ventilator really could be thought of as an air drive.

20:54.160 --> 20:56.400
It's the part that makes the air.

20:56.400 --> 21:01.200
We have a separate device, the Ventmon, which can be used as a sense module and we have

21:01.200 --> 21:08.600
a separate set of programs which happens to be an IoT defined public lake and some JavaScript

21:08.600 --> 21:17.840
that runs in a browser to do the clinical GUI aspects of the system.

21:17.840 --> 21:24.120
We're also designing a general purpose alarm device as I'm sure you understand in any

21:24.120 --> 21:31.180
intensive care unit, thank you, situation you have to produce alarms when the patient

21:31.180 --> 21:32.180
needs care.

21:32.180 --> 21:37.680
Now, that can occur because your machine has broken or the battery has failed or you've

21:37.680 --> 21:43.800
run out of power or someone has tripped over a hose but then that happens a lot but it

21:43.800 --> 21:49.640
also can occur simply because the patient's condition is deteriorating.

21:49.640 --> 21:54.880
In any case, you have to be able to produce a device which can generically alert people

21:54.880 --> 21:57.560
to the fact that something has to be done.

21:57.560 --> 22:03.160
While following the UNIX way adopted the hardware, our idea is to make a separately packageable

22:03.160 --> 22:09.120
device that could be used for a cap door or a burglar alarm or all kinds of other devices

22:09.120 --> 22:14.120
in hopes that we can build a community of practice using that which will strengthen

22:14.120 --> 22:35.480
the use for medical alerts.

22:35.480 --> 22:38.200
This is the software that I was talking about.

22:38.200 --> 22:40.920
This runs in a browser.

22:40.920 --> 22:43.320
This is what is produced by the Ventmon.

22:43.320 --> 22:47.400
I probably should be showing a video but this is actually dynamic as the machine breeze

22:47.400 --> 22:53.520
or the patient breeze, you're seeing the pressure flow and various events like the measurement

22:53.520 --> 22:58.480
of the humidity and temperature, the end of the breath, the beginning of the breath.

22:58.480 --> 23:03.200
What you have on the right here is what a doctor in an ICU would typically compute about

23:03.200 --> 23:05.360
the breath traces.

23:05.360 --> 23:10.400
This is not super sophisticated but the thing that I really like about it is it runs in

23:10.400 --> 23:16.920
a browser so it's distributed generally and then secondly the software functionality

23:16.920 --> 23:20.960
of doing all those computations completely separated from the ventilator.

23:20.960 --> 23:25.280
In most devices this is built into the panel of the ventilator and cannot be reused in

23:25.280 --> 23:36.480
any other way.

23:36.480 --> 23:41.520
Lots of the things we've been talking about, VentOS can claim to be a universal system

23:41.520 --> 23:48.840
because it implements a hardware abstraction layer that lets you interface to turbines,

23:48.840 --> 23:58.480
fans, in our case proportional valves, bellows, other ways of producing gas.

23:58.480 --> 24:03.440
Following the open source methodology, it's not so much a machine as an ecosystem.

24:03.440 --> 24:09.240
We're trying to build a respiration ecosystem.

24:09.240 --> 24:15.320
As we've said, we've already seen that one piece of functionality has been added as a

24:15.320 --> 24:22.040
PCB that's put into the control module and that is an SPI interface to the general purpose

24:22.040 --> 24:29.240
alarm device which I mentioned previously.

24:29.240 --> 24:33.960
You might say, well why on earth would we ever have a respiration ecosystem?

24:33.960 --> 24:39.120
Well, there's a good reason from kind of a patient point of view which is all of these

24:39.120 --> 24:47.040
devices which accomplish various medical purposes, a ventilator, an O2 concentrator, a by level

24:47.040 --> 24:53.200
positive pressure air wave machine, a CPAP machine, a PAPR, a bag valve mass monitor,

24:53.200 --> 24:59.160
all of those essentially need standards of respiration data exchange which we have developed

24:59.160 --> 25:04.360
but nobody else has used and many of them need the same sense module that we've been

25:04.360 --> 25:06.480
talking about in the Vintmont.

25:06.480 --> 25:13.240
In that sense, if you think of the way open source software has made components that work

25:13.240 --> 25:19.680
together really effectively, what we're trying to do is to create hardware and software components

25:19.680 --> 25:27.160
integrated which work together as effectively in the realm of human respiration.

25:27.160 --> 25:32.440
In a sense, we're trying to democratize the field of medical respiration and education

25:32.440 --> 25:34.720
around it.

25:34.720 --> 25:37.040
Open source software has already shown us the way.

25:37.040 --> 25:40.320
We're just taking things that were developed by open source software and attempting to

25:40.320 --> 25:42.480
apply them to hardware.

25:42.480 --> 25:48.080
In particular, as I'm sure you guys know, the development of standards like HTTP, HTML,

25:48.080 --> 25:55.200
JSON, etc. are absolutely critical to the progress and interaction of multiple components

25:55.200 --> 26:00.320
in the embedded architecture world but open source software more generally.

26:00.320 --> 26:08.920
We're trying to accomplish the same thing by producing respiration standards.

26:08.920 --> 26:11.320
These of course exist in GitHub repos.

26:11.320 --> 26:12.960
Thank you very much.

26:12.960 --> 26:18.120
In short, we built the most open, extensible ecosystem for a classroom.

26:18.120 --> 26:21.160
It's the most open, best documented system.

26:21.160 --> 26:24.560
I can claim that because I evaluated all of the other ones.

26:24.560 --> 26:29.440
There are other open source ventilators but you cannot find their designs online.

26:29.440 --> 26:30.800
They're not really open.

26:30.800 --> 26:34.400
They're just thinking about being open.

26:34.400 --> 26:35.760
That concludes my talk.

26:35.760 --> 26:36.760
Thank you very much.

26:36.760 --> 26:54.960
Thank you very much.
