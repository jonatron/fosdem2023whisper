[00:00.000 --> 00:13.200]  Thank you for being here and thank you for the invitation.
[00:13.200 --> 00:20.560]  I'm going to speak maybe in a less technical way, in a more reflexive way of the thing
[00:20.560 --> 00:23.680]  I am trying to do for the last year.
[00:23.680 --> 00:28.920]  I'm Emilien Schultz, I'm a post-doctoral researcher in Sociology of Science and Health
[00:28.920 --> 00:34.320]  in France, both in Mediarab and in the system in Marseille.
[00:34.320 --> 00:40.320]  And I'm going to say something about the way we are doing scientific programming in
[00:40.320 --> 00:43.320]  Python in social sciences and the way we can improve it.
[00:43.320 --> 00:52.680]  And I gave this presentation a kind of provocative title that is a way to speak about what are
[00:52.680 --> 00:58.200]  the specificities of social sciences and how can we improve all this kind of environment
[00:58.200 --> 01:04.000]  to make computing and data analysis in relation directly to open science.
[01:04.000 --> 01:07.120]  So yes, it's kind of humble presentation.
[01:07.120 --> 01:13.800]  If I want to summarize it in one sentence, my point is to say that social sciences need
[01:13.800 --> 01:15.240]  more scientific programming.
[01:15.240 --> 01:21.520]  And it is three points for that scientific programming as I think the right flexibility
[01:21.520 --> 01:25.480]  to equip the very diverse practices that exist right now in social sciences.
[01:25.480 --> 01:32.160]  For the moment, we have a landscape, especially in France, with main based on air, language,
[01:32.160 --> 01:37.000]  and Python could benefit of some impulse, and I think it needs it.
[01:37.000 --> 01:42.840]  And the gateway will be to develop very specific disciplinary packages that are still missing
[01:42.840 --> 01:48.960]  for Python in social sciences, which I can call a disciplinary API for the language and
[01:48.960 --> 01:52.560]  to move beyond on open source treatment.
[01:52.560 --> 01:57.960]  So just a quick disclosure, I've been trained in physics, but I moved in sociology and now
[01:57.960 --> 02:00.720]  I'm speaking as a sociologist or a social scientist here.
[02:00.720 --> 02:05.720]  I'm trying to give some feedback of what we are using in our community and try to answer
[02:05.720 --> 02:13.360]  two questions in one, which are not very well-delinated, which is first, how to improve Python in social
[02:13.360 --> 02:18.240]  sciences and in more general way, what are the different uses of central programming right
[02:18.240 --> 02:23.040]  now because we don't have a very clear look of what's going on in all the different way
[02:23.040 --> 02:24.960]  we can use the scientific programming.
[02:24.960 --> 02:31.200]  So it's a work in progress, so it may need to make an exchange with you.
[02:31.200 --> 02:35.560]  To be clear about my title, I'm not saying that we are under-equipped in a pejorative
[02:35.560 --> 02:37.200]  way.
[02:37.200 --> 02:41.320]  Social sciences have a well-established open source software platform, and some of them
[02:41.320 --> 02:45.800]  are going to be presented today, and usually give a warm welcome to new strategies for
[02:45.800 --> 02:50.880]  data analysis, and its own fieldwork are expanding to numeric and software data.
[02:50.880 --> 02:58.600]  So we are using and studying all those software tools and open source tools.
[02:58.600 --> 03:02.040]  But it is a general point of view from a sociologist.
[03:02.040 --> 03:09.680]  We have, in general, a low-tech practice, and we are using software applications, programming
[03:09.680 --> 03:16.440]  for very discreet, meaning punctual or unseen operations, and if you want to have a look,
[03:16.440 --> 03:21.120]  there is a very nice article from Caroline Mueller and Frédéric Laveur about how Easter
[03:21.120 --> 03:26.120] ians are changing the practices and putting some more numerical analysis inside their
[03:26.120 --> 03:30.240]  work, but still conserving the global way of doing their work.
[03:30.240 --> 03:36.240]  And so we need flexibility to adapt to individualized practices or topics, which are very personal
[03:36.240 --> 03:37.840]  to researchers.
[03:37.840 --> 03:41.920]  So I need to say a word about the specificity of social sciences, because I don't think
[03:41.920 --> 03:44.440]  we have very numerous today.
[03:44.440 --> 03:50.480]  There are a variety of disciplines with very different ways of dealing with data and analyzing
[03:50.480 --> 03:59.560]  archives and interviews, and within each discipline, there is a huge variety of methodologies,
[03:59.560 --> 04:04.520]  school of thoughts, theoretical approaches, and from an organizational point of view, there
[04:04.520 --> 04:10.520]  is a very weak functional dependency between all the researchers in our different fields.
[04:10.520 --> 04:14.520]  And moreover, there are very important national specificities.
[04:14.520 --> 04:22.880]  And moreover, each research trend is very conceptually laden, meaning that there is very important
[04:22.880 --> 04:29.280]  given to the friends that each researcher is using to collect data and to analyze it.
[04:29.280 --> 04:32.240]  There are no global rules of how to do it.
[04:32.240 --> 04:39.840]  So there is a very huge limit of one size fits all instruments in our disciplines.
[04:39.840 --> 04:46.400]  And besides, there are very harsh critics against standardization and normalization because
[04:46.400 --> 04:52.720]  it is seen as a way to erase priority, which is some kind of base of what our social sciences.
[04:52.720 --> 04:58.240]  So there is a huge fight between individualization and standardization of practices.
[04:58.240 --> 05:04.200]  Nevertheless, shared instruments are important, especially software instruments.
[05:04.200 --> 05:09.520]  And science studies, which is a field of sociology and anthropology of science, has shown the
[05:09.520 --> 05:13.640]  crucial role of instruments for the functioning of scientific communities.
[05:13.640 --> 05:18.800]  It is very important for conceptually changes because it allows us to look at all the stuff
[05:18.800 --> 05:22.840]  at different scales, at different topologies, like the microscopes change the way we are
[05:22.840 --> 05:23.840]  doing biology.
[05:23.840 --> 05:28.960]  They are very important for disciplinary identity, the way we present ourselves in our research
[05:28.960 --> 05:31.840]  communities and how we define our activity.
[05:31.840 --> 05:37.120]  And they are very important for coordination between specialties and standardization of
[05:37.120 --> 05:45.520]  practices beyond a small group of researchers and to transfer theoretical agencies and methodological
[05:45.520 --> 05:46.520]  changes.
[05:46.520 --> 05:51.280]  And there is a lot of studies about how electronic microscopes change biophysics has to put
[05:51.280 --> 05:55.200]  a second cell for changing medicines and the way we are doing dealing with data.
[05:55.200 --> 06:01.600]  But there is very few studies on the way software is changing and standardizing practices, especially
[06:01.600 --> 06:03.600]  for social sciences.
[06:03.600 --> 06:09.120]  But as I told you, social sciences are kind of divided regarding standardization, especially
[06:09.120 --> 06:13.880]  in post-standardization, because it usually reflects some kind of polar relationship or
[06:13.880 --> 06:18.920]  one specific scale of thought which tries to impose its way of doing things against
[06:18.920 --> 06:22.560]  others, especially in sociology or political sciences.
[06:22.560 --> 06:28.640]  So there is a goal of to define what is the good scale of creating software instruments
[06:28.640 --> 06:30.640]  for social sciences.
[06:30.640 --> 06:36.520]  Scientific programming is what I want to say today, it's a solution which both favor
[06:36.520 --> 06:41.960]  new, there are no new scientific instruments from within the specialties and to improve
[06:41.960 --> 06:48.480]  some kind of second hard generalization by using the same way of doing scientific programming.
[06:48.480 --> 06:53.520]  And it's a good entry point for new open source practices which are not existing or very little
[06:53.520 --> 07:01.400]  existing within social sciences, like those linked to, as we've just seen, open science
[07:01.400 --> 07:08.920]  or reproducibility and collaboration beyond the different disciplines which compose social
[07:08.920 --> 07:14.440]  sciences and to import new stuff like coming from the computer science, high-stuff and
[07:14.440 --> 07:15.440]  machine learning.
[07:15.440 --> 07:22.680]  Nevertheless, for the moment, scientific programming as a global frame is not very common in social
[07:22.680 --> 07:23.680]  sciences.
[07:23.680 --> 07:30.120]  Of course, there are always cool kids, so there are people doing it and computational
[07:30.120 --> 07:36.480]  social sciences are a thing and expand very quickly in our field fields, but for the common
[07:36.480 --> 07:39.120]  people it is not very developed.
[07:39.120 --> 07:44.600]  And we have a lot of users of AIR which has an intermediate status between programming
[07:44.600 --> 07:49.640]  language and a statistical language, which kind of do a status.
[07:49.640 --> 07:54.840]  What I mean as scientific programming is very quick, but it's a diversity of practices.
[07:54.840 --> 08:01.560]  They have come on the fact that it's interactivity, exploratory and based on packages, and the
[08:01.560 --> 08:06.760]  priority is given to usefulness for researchers to explore certain questions they want to address.
[08:06.760 --> 08:13.040]  And all the questions just we have seen are not the primary aim of the researchers who
[08:13.040 --> 08:17.920]  are using scientific programming, so stability, design and also very important question of
[08:17.920 --> 08:24.040]  software development are not what is in the first front of the users of scientific programming.
[08:24.040 --> 08:28.760]  But when you're looking at what researchers are doing, they're doing one of the steps
[08:28.760 --> 08:35.600]  of the different scale and they're not all of them developing and creating new packages.
[08:35.600 --> 08:40.320]  So the diversity of practices is very existing.
[08:40.320 --> 08:48.640]  If you look on what are currently the software uses for researchers in social sciences, it's
[08:48.640 --> 08:56.760]  a kind of an exploratory mapping because it comes from a non-representative survey conducted
[08:56.760 --> 09:02.600]  by Maier-Niglou Baichek in France in a study called State of Open Science Practices in
[09:02.600 --> 09:03.600]  France.
[09:03.600 --> 09:08.560]  And we ask for researchers in different fields what kind of tools are using their research
[09:08.560 --> 09:14.080]  and they can answer different for producing data, analyzing data, so just a small network
[09:14.080 --> 09:21.120]  of all the tools that researchers are using for social sciences and humanities also.
[09:21.120 --> 09:28.760]  And if you look to this huge diversity, what the main result are, there is a diversity
[09:28.760 --> 09:33.360]  of software and profile of researchers, nothing new about that.
[09:33.360 --> 09:44.800]  You will find the centrality of standard office software like Word, Calc, LibreFace, etc.
[09:44.800 --> 09:51.800]  And the main scientific programming language used is AIR with 20% of users that are using
[09:51.800 --> 09:59.240]  it and then a geographical software QGIS, 10% for SPSS, which is a statistical software
[09:59.240 --> 10:06.040]  and only 6% using Python in this broad field of social science community.
[10:06.040 --> 10:10.440]  And if you look just to the quotation, the reality of the work is usually just using
[10:10.440 --> 10:19.200]  at some point some software and there is no global glue of open source tools in the workflow
[10:19.200 --> 10:20.920]  of the researchers.
[10:20.920 --> 10:27.520]  So even when you look at the small part of the social scientist who are doing quantitative
[10:27.520 --> 10:34.520]  analysis, so it's a subpart of it, there are also a huge diversity, diverse tools division.
[10:34.520 --> 10:43.000]  So we are looking to a very, very fragmented communities and there is a need to create
[10:43.000 --> 10:47.120]  some glue between them.
[10:47.120 --> 10:53.200]  What you can say that 20% of researchers on a survey said they are using AIR as a statistical
[10:53.200 --> 10:58.640]  and scientific programming language and the observation is important because AIR developed
[10:58.640 --> 11:01.120]  for good reason for social sciences.
[11:01.120 --> 11:05.280]  It developed because there is an afflicted affinity between the diversity of practices
[11:05.280 --> 11:09.960]  existing and the flexibility of the tools that AIR allows, that allows to develop very
[11:09.960 --> 11:17.320]  specific packages which can continue the work of small communities.
[11:17.320 --> 11:21.840]  You probably all know about AIR, it's a script identity language.
[11:21.840 --> 11:27.960]  You can build very quickly small packages with data about a specific research project
[11:27.960 --> 11:33.320]  and there is a lot of support from the French community, there is a lot of package in French
[11:33.320 --> 11:34.640]  for instance.
[11:34.640 --> 11:41.840]  But this lead to limits, it creates a huge diversity of types of package.
[11:41.840 --> 11:47.640]  Some of them are not very easy to understand, some of them are not very well documented
[11:47.640 --> 11:53.200]  and there are functions that exist only in AIR which create some kind of increase the
[11:53.200 --> 11:57.320]  diversity of tools social sciences community are using.
[11:57.320 --> 12:02.360]  Depending on what packages you look like, there is a very low documentation and very
[12:02.360 --> 12:06.360]  low standardization of the code and there is still this ambiguity between what is the
[12:06.360 --> 12:11.320]  statistical languages and what is the programming languages.
[12:11.320 --> 12:17.400]  For the main topic of what I want to say, what is the state of the Python uses in social
[12:17.400 --> 12:18.400]  sciences?
[12:18.400 --> 12:23.240]  Let's say there are not a lot of people using it, there are more and more young researchers
[12:23.240 --> 12:27.640]  interested to leverage machine learning in their research so they are coming to Python
[12:27.640 --> 12:32.840]  to try to understand how they can use it in their research but for the moment it's difficult
[12:32.840 --> 12:40.040]  to get to realize the basic steps for social sciences work in Python so it means all the
[12:40.040 --> 12:45.680]  tools that we are using on a daily basis like making a logistic regression with a clear
[12:45.680 --> 12:54.200]  presentation of the results and we need, and what I want to say, dedicated community packages
[12:54.200 --> 12:59.640]  as a middle ground for researchers to access financial programming and then being progressively
[12:59.640 --> 13:05.320]  aware of all the open source and open science practices they can add in their research.
[13:05.320 --> 13:11.200]  So for that there is a need to go beyond application development itself and beyond one specific
[13:11.200 --> 13:16.040]  package is it's a whole process to implement.
[13:16.040 --> 13:22.560]  Just what are the expected positive benefits of Python broad adoption, just a small snippet,
[13:22.560 --> 13:28.920]  it will enhance science free programming practices especially with the importation of the whole
[13:28.920 --> 13:35.080]  ecosystem of Python, especially notebooks, have the potential flexibility and they will
[13:35.080 --> 13:41.760]  allow to create a common language with other communities especially computer sciences.
[13:41.760 --> 13:47.960]  The question is still, we in the social sciences have already heard of the main language, what's
[13:47.960 --> 13:54.960]  the future of the collaboration between those two languages, reject the idea to develop Python,
[13:54.960 --> 14:01.480]  to advocate the polyglotism or share a rivalry between Python or start a transition with Python
[14:01.480 --> 14:07.760]  and in France we are, for the moment, we decided, school decided to teach Python as a first
[14:07.760 --> 14:13.760]  language for students in high school so maybe there is a change going on on what kind of
[14:13.760 --> 14:20.040]  languages students are going to practice in the future so it creates a shared language.
[14:20.040 --> 14:26.400]  It's a leap of faith to decide what kind of tools we will need, mine here is the Python
[14:26.400 --> 14:32.200]  but I'm here to speak about the place of central programming so both of them are going
[14:32.200 --> 14:34.720]  to be together.
[14:34.720 --> 14:39.280]  Just want to say a word about what I'm trying to do in France for social sciences especially
[14:39.280 --> 14:46.360]  in sociology to enable this practice of Python and this kind of bio-social humanities, social
[14:46.360 --> 14:51.880]  and humanities science package and I want, I need to achieve a double constraint first
[14:51.880 --> 14:56.680]  to achieve some standardization because we need some shared tools to be able to work together
[14:56.680 --> 15:03.680]  especially to train students and to create collaboration projects but we can't sacrifice
[15:03.680 --> 15:09.680]  our disciplinary and sub-disciplinary specificities so we need to find the good level of flexibility.
[15:09.680 --> 15:16.120]  It's a four-step process, nothing very new and it's very common I guess in every development
[15:16.120 --> 15:22.600]  of packages and tools, the first one is to identify what kind of practices can be called
[15:22.600 --> 15:27.560]  quasi-standard even if they are not completely standard, the second step is to build easy
[15:27.560 --> 15:32.640]  to use packages that can find place in a specific workflow, the third one is to prove it can
[15:32.640 --> 15:38.520]  be useful because there is no way to create something, there is no proof that it makes
[15:38.520 --> 15:43.560]  some positive advantage in research processes and then the fourth step is to train colleagues
[15:43.560 --> 15:45.720]  and develop practices.
[15:45.720 --> 15:52.040]  Step one, to uncover standard practices and we need to, and I'm speaking about social
[15:52.040 --> 15:58.080]  science to understand better what is the common sense for daily job, for instance not all
[15:58.080 --> 16:04.600]  social scientists are doing machine learning or statistics but a lot of them still do it
[16:04.600 --> 16:08.320]  a bit especially basic statistics.
[16:08.320 --> 16:13.720]  So there are some quasi-standard operations, for instance for survey, analyzing surveys
[16:13.720 --> 16:20.440]  with questionnaires and samples, so we need more like R stats as descriptive statistics
[16:20.440 --> 16:29.640]  for survey, different tools for transformation of file formats to generate and modify tables
[16:29.640 --> 16:37.240]  to create intermediate documents and to produce visualizations the way we use it in our work,
[16:37.240 --> 16:43.960]  for instance in France we are using a lot of work from Bourdieu, Pierre Bourdieu, Sociology
[16:43.960 --> 16:48.800]  and he has a very specific way to present the result of factorial analysis and you can
[16:48.800 --> 16:52.040]  find it in the Python universe.
[16:52.040 --> 16:58.280]  So you need to start to work with those existing workflow to build more adoption.
[16:58.280 --> 17:04.600]  The second step is to facilitate the disciplinary use and might try the small package which
[17:04.600 --> 17:09.560]  is in French and it's the choice to be able to be close to students and researchers who
[17:09.560 --> 17:14.800]  don't usually use Python to be a one-liner which is the first step to use some kind of
[17:14.800 --> 17:23.560]  easy route tools to move quicker through results, close to the common sense in the way tables
[17:23.560 --> 17:29.800]  are organized and based to facilitate the complete workflow from the data to some results
[17:29.800 --> 17:33.320]  that can be published or presented to students.
[17:33.320 --> 17:37.640]  And it's based on the basic packages of the Python communities like Pandas so it allows
[17:37.640 --> 17:45.280]  to move swiftly from one specific disciplinary package to the more general practices.
[17:45.280 --> 17:50.760]  The third step is to show the usefulness of both Python and this specific package and
[17:50.760 --> 17:53.920]  for that there is a need of public demonstration in context.
[17:53.920 --> 17:59.320]  No research tools can be used, will be used if it's not direct advantage to use it for
[17:59.320 --> 18:01.360]  research and doing stuff.
[18:01.360 --> 18:10.760]  So notebooks are kind of perfect vector to prove and display some, I can see the figures
[18:10.760 --> 18:19.280]  in this, yes it can be prioritizing but it's a good way to present a complete step for
[18:19.280 --> 18:25.400]  research and we developed with the collaboration between Humanum which is a platform for software
[18:25.400 --> 18:31.760]  and data analysis in French and a cooperative detectivist, five notebooks for machine learning
[18:31.760 --> 18:36.000]  as a starting point to show how Python can be used like from the beginning to the end
[18:36.000 --> 18:41.280]  to analyze a survey and the survey we just discussed before about the state of practice
[18:41.280 --> 18:45.240]  of open source science in France.
[18:45.240 --> 18:49.360]  And the fourth step, it's a very important step is to train colleagues and students so
[18:49.360 --> 18:53.760]  you just can put something out there in the world so the tools need to find a place in
[18:53.760 --> 18:59.600]  research workflow so there is some kind of transition to the tools, to the practices
[18:59.600 --> 19:06.360]  and we are doing it in different steps, writing books and academic examples to stabilize a
[19:06.360 --> 19:12.960]  shared practice in France and I'm intervening laboratories to show how useful it is to use
[19:12.960 --> 19:19.800]  some Python even if you don't, my colleagues don't usually do a central programming to
[19:19.800 --> 19:28.320]  train more new students especially PhD candidates to those new approaches and all the world
[19:28.320 --> 19:43.120]  around Python like Git and using GitLab and creating spaces to discuss our specific practices
[19:43.120 --> 19:47.440]  which for the moment doesn't exist.
[19:47.440 --> 19:54.040]  I will conclude just from very quick concrete ideas.
[19:54.040 --> 19:59.040]  My point today is to say that a scientific programming especially in Python that's not
[19:59.040 --> 20:05.040]  specific in Python is a survey that between the use of application which is the daily
[20:05.040 --> 20:11.920]  basis of a lot of social sciences especially in sociology and not using at all code which
[20:11.920 --> 20:20.800]  also has the daily basis of a lot of quantitative researches in social sciences.
[20:20.800 --> 20:25.080]  Scientific programming will allow to promote the particularity and open source practices
[20:25.080 --> 20:33.440]  because it is the gate to all the practices from the open source communities and we promote
[20:33.440 --> 20:38.920]  interdisciplinarity collaboration with colleagues outside the scope of sociology for instance.
[20:38.920 --> 20:45.680]  Nevertheless there is a need for facilitators, this was my whole point, we need to excavate
[20:45.680 --> 20:50.320]  and make this reflexive process of understanding what are our standard practices that can be
[20:50.320 --> 20:56.440]  standardized at some point to find early users and creating core developers that can come
[20:56.440 --> 21:03.520]  along with this work of reflexivity and to demonstrate more the concrete efficiency of
[21:03.520 --> 21:11.160]  those tools, the limits are, this focus on disciplinary specificities is also as also
[21:11.160 --> 21:15.800]  drawbacks because it can increase the dispersion from the laboratories and it's something which
[21:15.800 --> 21:22.120]  is real and maybe there are better languages to promote than Python or I have to do that
[21:22.120 --> 21:34.320]  but I started with Python. So thank you for listening to me and it's my message.
[21:34.320 --> 21:53.000]  Thank you. If you could take questions, please do repeat and formulate for the stream. Thanks.
[21:53.000 --> 22:06.080]  So in computer science we have also the problem of reproducibility, most of the time we write
[22:06.080 --> 22:07.080]  papers and sometimes the results in the papers don't get the software. So in the recent years
[22:07.080 --> 22:14.080]  we have a lot of conferences that have one special transport tools and one is to request
[22:14.080 --> 22:19.080]  all kind of a stamp on the paper that the paper is reusable. So it comes with a software
[22:19.080 --> 22:26.080]  that you can really run the experiments. Do you think that there will be some helpful
[22:26.080 --> 22:30.080]  also to propose these social science? The question is that there is a lot of problems
[22:30.080 --> 22:35.600]  in similar problems in computer sciences, I'm repeating for the audience, but I think
[22:35.600 --> 22:41.400]  that you are way behind what is going on in social sciences and even the possibility to
[22:41.400 --> 22:47.360]  make a reproducible paper is not here right now in the social science communities because
[22:47.360 --> 22:54.640]  the logic of programming, the logic of automatizing steps and not using directly Excel to make
[22:54.640 --> 23:01.720]  that analysis is not yet here in the basic practices of our communities. Some of my colleagues
[23:01.720 --> 23:07.920]  are doing it but they are very few, usually kind of the youngest one. So what I'm saying
[23:07.920 --> 23:14.360]  but it's not so clear in what I said is we need to use more what has been developed from
[23:14.360 --> 23:20.080]  computer sciences and to try to find a way, a gate to import them at some point in our
[23:20.080 --> 23:25.760]  practices. So to understand what is going on in computer science we need also a better
[23:25.760 --> 23:44.760]  culture of what's part of all those tools and it's still not here. Thanks. This is my
[23:44.760 --> 24:02.560]  question. The question is that there is a division between people who wants to train
[24:02.560 --> 24:06.920]  to those tools and those who doesn't want to. The fact is we are more and more working
[24:06.920 --> 24:12.000]  projects in the basic culture of what's going on, what's possible to do is something we
[24:12.000 --> 24:18.320]  need to share to everyone. Otherwise, there are huge divisions which are going to exist
[24:18.320 --> 24:25.680]  and to produce. So I'm quite sure that that's why I have put this kind of very small diagram
[24:25.680 --> 24:31.640]  first. Science programming can start with reading a script, understanding a language,
[24:31.640 --> 24:36.320]  not producing it by yourself. And it is those steps that I think are useful for everyone.
[24:36.320 --> 24:44.920]  So global computer literacy for social scientists, even if they don't want to move to other more
[24:44.920 --> 24:49.800]  advanced tools. But this one is, for instance, working on a project with statisticians and
[24:49.800 --> 24:55.280]  people who are scrapping for data to know what is possible to do. So thanks.
[24:55.280 --> 25:07.080]  I have a point, maybe a suggestion, if it's not in place already. We have an institution
[25:07.080 --> 25:14.080]  named the Carpentries. They teach professional skills and data science for researchers. And
[25:14.080 --> 25:21.080]  it would be wonderful to see a workshop, including Python and your library in the workshops
[25:21.080 --> 25:27.080]  available there. Because once we have a workshop there, we gain the potential to have more
[25:27.080 --> 25:36.080]  than 3,000 official instructors around the world to teach this content. It would be amazing.
[25:36.080 --> 25:52.080]  So you speak about the software Carpentries, yes?
[25:52.080 --> 26:07.080]  Yes.
[26:07.080 --> 26:32.080]  Of course, for the question it is, there are already very important initiatives existing
[26:32.080 --> 26:38.080]  in the Carpentries, especially in different disciplines. For what I know in France, they
[26:38.080 --> 26:45.080]  are very little visible in social sciences. So I use the content they are creating. But
[26:45.080 --> 26:51.080]  for what I can see, very far from the daily questions social scientists are having in
[26:51.080 --> 26:58.080]  the daily analysis. And there is still, you know, a transition to make. And I can, I agree
[26:58.080 --> 27:04.080]  completely with what you said. There is a need to make this a jointer. But it's a working
[27:04.080 --> 27:10.080]  process and I will try to contact, find someone who wants to do it with me at some point. But
[27:10.080 --> 27:15.080]  I have been trained at some point as a software Carpentry, but I never completed my training.
[27:15.080 --> 27:38.080]  But yes, I am aware of that. Thank you. Anyway, thanks.
[27:38.080 --> 27:47.080]  I have no data about why. Sorry for the question. The question is, how much do we know why people
[27:47.080 --> 27:54.080]  are using specific software tools in social sciences? My answer is, and it's with my heart
[27:54.080 --> 28:02.080]  of social scientists interested in science, is that I know very little work studying how
[28:02.080 --> 28:09.080]  researchers are using software and tools. There are some work starting to be developed,
[28:09.080 --> 28:15.080]  but I have no answer. For instance, for AIR, AIR exists because statisticians use it a lot
[28:15.080 --> 28:21.080]  and so it has been teached in a sociology course. And then students became researchers
[28:21.080 --> 28:26.080]  and now they are using it in France. So there is a historical path dependency on the specific
[28:26.080 --> 28:34.080]  kind of user. But I quite sure it's a huge avenue for research. Thank you.
[28:34.080 --> 29:03.080]  I am quite sure you are right. The question is,
[29:03.080 --> 29:10.080]  how people change from one software to another and this is an unresolved question. So thank you.
[29:10.080 --> 29:38.080]  Thanks.
[29:38.080 --> 30:05.080]  Thank you.
[30:08.080 --> 30:18.080]  Thank you.
