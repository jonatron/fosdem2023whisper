{"text": " Welcome to the first talk in the network dev room, peer-to-peer browser connectivity. We're going to talk a bunch about what we see and the new shiny web transport protocol and in general how to get the browser connected to a larger network. First off, before we start, very grateful to be here, thanks to all the organizers, thanks to all the volunteers making this event possible. That's wonderful. Yeah, and then thanks for all of you to be here and listen in. Cool. Just quick introduction about myself. I'm Max. I'm a software engineer at ProtocolApps. I'm stewarding the Lippie-to-peee project. I'll do a brief introduction of what Lippie-to-peee is, so don't worry too much about that. I'm maintaining the rest implementation of the library. In the past life, you might know me from my Prometheus time. I worked a bunch on Prometheus and its integration into Kubernetes is still a little bit active in that community. Yeah. You find me anywhere on the web with Mxenden and then on the website you find emails in case you want to get in touch. All right. So what is Lippie-to-peee? Just a small disclaimer. The talk does mention Lippie-to-peee from time to time. It is not particularly important, so in a sense if you want to build your own Lippie-to-peee application, all the content here is applicable for you as well. But if you want to have this pre-built, you can leverage Lippie-to-peee. So what is Lippie-to-peee? Lippie-to-peee, as you can infer from the name, I'm guessing, is a peer-to-peee networking library. It has one specification, and then that specification is implemented in many, many different languages. Like, for example, Go, JS, Rust, Nim, C++, Java, but a couple others as well. The goal of Lippie-to-peee is provide low-level features like encryption, authentication, hole-punching, and things like that. And then on top of that, leverage those features to then also provide higher-level protocols. Like, for example, DHT, distributed hash table, or gossiping protocols, or things like that. And my big slogan always is Lippie-to-peee is all you need to build peer-to-peee applications on the internet. Okay, wonderful. One small disclaimer that's important later on is that I want to highlight here is Lippie-to-peee always encrypts and always authenticates, and we'll go into that later on, what that means. But that's very important for me. We don't ship any traffic over the internet that is ever unencrypted or not authenticated, and in terms of authentication, I'm talking about mutual authentication. Okay, that's enough introduction for today, and now to the actual topic. What I want to convey today is how we can get from here, from the left side to the right side. So my great motivation is for browsers to be first-class citizens in networked applications. Now on the very left side, you see the typical internet application today. So you have a browser. I'm using the Firefox logo here, but you can use any browser, really. That tries to interact with a network deprecation somewhere in the internet. Instead of interacting with the nodes directly, it acts through a server, and that server acts on behalf of the browser, right? The browser pretty much never interacts with the whole network. And to put this with an example, if you, for example, have a file sharing, you want to share a file. So for example, from my laptop here, I want to share a file with all of you. I would usually upload that to the server, and then all of you would download it from that server. We would never interact directly. Now there are many reasons for that to be a good architecture, right? Browsers usually move a lot. They might be in the living room, then in a cafe, and then at a conference in FOSDEM. And they are usually low power, but what's the most hurt argument for this kind of architecture in terms of that, in comparison to the right architecture, is that you cannot connect to browsers, and that browsers cannot connect to other nodes. That's oftentimes hurt, right? And what I want to kind of convey here today is that you can actually nicely connect a browser to a whole network, and that the browser actually has a lot of connectivity options out there, and I want to go through these. And the next time you design a network deprecation, maybe you want to consider the architecture on the right versus the architecture on the left. All right, cool. When it comes to connectivity for a browser, I want to differentiate this in two dimensions, and the first dimension is whether my node, whatever, for example, my computer here, is public or private. So can it be reachable directly, or is it behind an app or firewall, and or firewall? In public, you would usually refer to it as a server, and in private, you would, for example, refer to my laptop or the browser running on my laptop. Cool. Then the other dimension, when we talk about connectivity, I want to differentiate in two platforms, which is browser and non-browser. Why is this relevant? Well, there are a lot more platforms, I know, but usually it's the non-browser, which is very unrestricted, in terms of, for example, I have access to a UDP or a TCP socket, and then I have the browser, which is very restricted, where sometimes I can't make a connection without, for example, a valid TLS certificate. Wonderful. Okay. So, and my goal today is kind of, we fill this matrix now with the different options that we have, and this way I kind of convey the fact that actually browsers can be first class citizens in network applications. All right. So let's talk about public non-browser to public non-browser. I'm in the network dev room, like this is the easiest one, I'm not going to explain this much. Reachability, they're both nodes are public. We can just reach out them directly over IP and TCP, or then UDP and the shiny new quick. We don't have firewalls and that on either side, and the platform, which is non-browser, so for example, an application running on my laptop has direct access to the TCP and UDP socket. Cool. So we have that. Then private non-browser to public non-browser, again, really easy. You do this every day by any application on your laptop going to a server. We don't have any firewalls, and we're not at the receiver side, so on the server side, the left side is private, but we don't really care as we have the direction from the left to the right. And then the platform, again, we're not running in the browser, so we're pretty unrestricted. We probably have access to a TCP or UDP socket. Wonderful. To make this a little bit more complex, what if I'm a public non-browser connecting to a private non-browser? So does that mean, for example, on the left that could be a server, and then on the right that could be some application running on my laptop right now? What we can do here is something called connection reversal, simply where my laptop connects to some public node, then whoever wants to reach out to me reaches out to that public node as well, relayes a message to me, my laptop, and then my laptop dials whoever wanted to dial me initially. This is depicted here, so B connects to the relay R, and then A relays a network over R to B, and then B can actually connect to A, which is commonly referred to as connection reversal. In terms of platform, again, we're a non-browser, so access to TCP and UDP socket, so we're all good. Cool. And then the last one I want to fill before it becomes complicated, namely before we introduce a browser, is private non-browser to private non-browser. You see this depicted down there as A and B. Reachability really sucks. Both are probably behind gnats or firewalls, so not much luck either. So what we need to employ here is a technique called hole punching. I don't have much time today in this talk, but we have another talk later on. So if you want to learn all about hole punching or what success rate we have across different, protocols or IP stacks, join the talk. I think it's at 11.45. So we'll go a bunch into that. Just short, brief one, A and B want to connect. Both are behind firewalls. Both connect to a relay R, that R is public. They coordinate a hole punch over that relay, and then execute that hole punch through both of their firewalls. Cool. In terms of platforms, again, we're not on the browser yet. So we have access to the TCP and UDP socket. All good. Life is pretty easy. Wonderful. All right. Now comes complexity, which is the browser world. And what we can, what I want to talk about first is what if I'm a private browser. Now private browser is somewhat of a weird term. Usually you're not at Faustum and you don't have a public IPv4 or IPv6 address. So browsers are usually always private, which I'm not suggesting to change. Definitely not. There are many security considerations to keep it that way. But what if I want to connect from a private browser to a public non-browser? So what if I, for example, want to connect from my laptop within my browser to some server? Now this, again, sounds pretty easy to everyone, except one small disclaimer. Again, we don't have a firewall or NAT at the receiver side, right? A server is public, depending on the firewall rules, obviously, but we can easily reach out to them. In terms of platform, we are on the browser, so we're quite restricted in the sense of what we can do. Eventually, I want to end up with a byte stream between the two endpoints. So what I'm restricted to is either web sockets. Everyone knows that. So TCP, TLS, HTTP, then an upgrade, and then I have web socket. The problem with that is I need a valid TLS certificate, so I need the remote server to either have a signed IP certificate or based on a domain. So that's a bummer. What I can do as an alternative in the browser is use the shiny new web transport, which is basically, I'm simplifying a lot here, but basically web sockets on top of Quick or HTTP3. Web transport actually allows us to handle self-signed certificates. And then as a last alternative, we can use WebRTC to get a byte stream, WebRTC gives us data channels, so in the end, we can run on IP, UDP, then SCTP, and then use data channels from WebRTC. Now before you scream, this is insecure. The small disclaimer that I did at the beginning is in case you built this yourself, you still need to figure out proper authentication, right? Best would be mutual authentication, because self-signed certificates, you're not part of the authority trust chain, but otherwise, yeah, these are your options. So web socket, web transport, and WebRTC. Cool. So what if I want to connect from a public non-browser to a private browser? We had this in the past, a couple of slides back. In terms of reachability, my left side is reachable, my right side is not reachable, so what I can do, I don't need to do fancy hole punching, I can just do connection reversal right over the relay, where A asks B basically to dial it back over the relay. In terms of platform, we don't have direct access to the TCP or UDP socket, given that on the right side, we have a browser in the whole stack, so that's a bummer. We can do web sockets in case we have a valid TLS certificate signed by some authority. If not, we can do web transport and WebRTC. Cool. And now comes the very hard part, or not very hard part, but a little bit more difficult part, which is private browser to private browser, or what is basically the same is, was it private non-browser to private browser, or private browser to private non-browser, all the red boxes down there. In terms of reachability, we need to leverage hole punching at this point. Both end points are behind the firewall and are not. So again, we'll go more into details on how hole punching works. Probably a lot of you are really familiar with that. In terms of platforms, at least one of our two sides are behind our browsers. So that means we don't have access to TCP or UDP socket directly. Why am I always saying no access to TCP and UDP? That's relevant because you don't control the ports, and this way you don't have the capability of hole punching yourself. But what the browser gives us is WebRTC. WebRTC has hole punching built in, so what we can do is leverage WebRTC and some signaling server R in the middle to then do the actual hole punch. WebSockets doesn't work because we can't hole punch with WebSockets and WebTransport doesn't work either because we can't hole punch with WebTransport either. Okay, wonderful. And that concludes the whole matrix, and what I'm pretty much showing here is you can connect the browser to everyone out there that runs on IP, and that means your application can actually make the browser a first-class citizen within your network. Cool. That's all from my end. Yeah, I'll be around the venue for quite a bit. If you want to learn more about LiPi2P in general, which makes all this nicely packaged for you, you can visit docs.lippi2p.io. If you want to see all the nitty-gritty details about the different transports and what that means for, I don't know, for example, you sign TLS certificate or where you can hole punch, that would be on connectivity.lippi2p.io. There are various forums, there's a specification online, and then all the implementations are open source, so you can just check that out on github.com slash lippi2p. Cool. That's all from my end. Thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.92, "text": " Welcome to the first talk in the network dev room, peer-to-peer browser connectivity.", "tokens": [4027, 281, 264, 700, 751, 294, 264, 3209, 1905, 1808, 11, 15108, 12, 1353, 12, 494, 260, 11185, 21095, 13], "temperature": 0.0, "avg_logprob": -0.30141369501749676, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.08787558972835541}, {"id": 1, "seek": 0, "start": 10.92, "end": 17.84, "text": " We're going to talk a bunch about what we see and the new shiny web transport protocol", "tokens": [492, 434, 516, 281, 751, 257, 3840, 466, 437, 321, 536, 293, 264, 777, 16997, 3670, 5495, 10336], "temperature": 0.0, "avg_logprob": -0.30141369501749676, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.08787558972835541}, {"id": 2, "seek": 0, "start": 17.84, "end": 24.92, "text": " and in general how to get the browser connected to a larger network.", "tokens": [293, 294, 2674, 577, 281, 483, 264, 11185, 4582, 281, 257, 4833, 3209, 13], "temperature": 0.0, "avg_logprob": -0.30141369501749676, "compression_ratio": 1.544871794871795, "no_speech_prob": 0.08787558972835541}, {"id": 3, "seek": 2492, "start": 24.92, "end": 30.32, "text": " First off, before we start, very grateful to be here, thanks to all the organizers, thanks", "tokens": [2386, 766, 11, 949, 321, 722, 11, 588, 7941, 281, 312, 510, 11, 3231, 281, 439, 264, 35071, 11, 3231], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 4, "seek": 2492, "start": 30.32, "end": 33.28, "text": " to all the volunteers making this event possible.", "tokens": [281, 439, 264, 14352, 1455, 341, 2280, 1944, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 5, "seek": 2492, "start": 33.28, "end": 34.28, "text": " That's wonderful.", "tokens": [663, 311, 3715, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 6, "seek": 2492, "start": 34.28, "end": 38.84, "text": " Yeah, and then thanks for all of you to be here and listen in.", "tokens": [865, 11, 293, 550, 3231, 337, 439, 295, 291, 281, 312, 510, 293, 2140, 294, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 7, "seek": 2492, "start": 38.84, "end": 41.040000000000006, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 8, "seek": 2492, "start": 41.040000000000006, "end": 43.2, "text": " Just quick introduction about myself.", "tokens": [1449, 1702, 9339, 466, 2059, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 9, "seek": 2492, "start": 43.2, "end": 44.2, "text": " I'm Max.", "tokens": [286, 478, 7402, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 10, "seek": 2492, "start": 44.2, "end": 46.52, "text": " I'm a software engineer at ProtocolApps.", "tokens": [286, 478, 257, 4722, 11403, 412, 48753, 9132, 82, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 11, "seek": 2492, "start": 46.52, "end": 48.72, "text": " I'm stewarding the Lippie-to-peee project.", "tokens": [286, 478, 2126, 1007, 278, 264, 441, 2488, 414, 12, 1353, 12, 494, 1653, 1716, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 12, "seek": 2492, "start": 48.72, "end": 53.0, "text": " I'll do a brief introduction of what Lippie-to-peee is, so don't worry too much about that.", "tokens": [286, 603, 360, 257, 5353, 9339, 295, 437, 441, 2488, 414, 12, 1353, 12, 494, 1653, 307, 11, 370, 500, 380, 3292, 886, 709, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.2910934616537655, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.000168966842466034}, {"id": 13, "seek": 5300, "start": 53.0, "end": 56.52, "text": " I'm maintaining the rest implementation of the library.", "tokens": [286, 478, 14916, 264, 1472, 11420, 295, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 14, "seek": 5300, "start": 56.52, "end": 59.28, "text": " In the past life, you might know me from my Prometheus time.", "tokens": [682, 264, 1791, 993, 11, 291, 1062, 458, 385, 490, 452, 2114, 649, 42209, 565, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 15, "seek": 5300, "start": 59.28, "end": 63.6, "text": " I worked a bunch on Prometheus and its integration into Kubernetes is still a little bit active", "tokens": [286, 2732, 257, 3840, 322, 2114, 649, 42209, 293, 1080, 10980, 666, 23145, 307, 920, 257, 707, 857, 4967], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 16, "seek": 5300, "start": 63.6, "end": 64.6, "text": " in that community.", "tokens": [294, 300, 1768, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 17, "seek": 5300, "start": 64.6, "end": 65.6, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 18, "seek": 5300, "start": 65.6, "end": 70.68, "text": " You find me anywhere on the web with Mxenden and then on the website you find emails in", "tokens": [509, 915, 385, 4992, 322, 264, 3670, 365, 376, 87, 8896, 293, 550, 322, 264, 3144, 291, 915, 12524, 294], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 19, "seek": 5300, "start": 70.68, "end": 73.56, "text": " case you want to get in touch.", "tokens": [1389, 291, 528, 281, 483, 294, 2557, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 20, "seek": 5300, "start": 73.56, "end": 75.36, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 21, "seek": 5300, "start": 75.36, "end": 77.8, "text": " So what is Lippie-to-peee?", "tokens": [407, 437, 307, 441, 2488, 414, 12, 1353, 12, 494, 1653, 30], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 22, "seek": 5300, "start": 77.8, "end": 79.28, "text": " Just a small disclaimer.", "tokens": [1449, 257, 1359, 40896, 13], "temperature": 0.0, "avg_logprob": -0.2321471379808158, "compression_ratio": 1.5751879699248121, "no_speech_prob": 3.6739817005582154e-05}, {"id": 23, "seek": 7928, "start": 79.28, "end": 84.08, "text": " The talk does mention Lippie-to-peee from time to time.", "tokens": [440, 751, 775, 2152, 441, 2488, 414, 12, 1353, 12, 494, 1653, 490, 565, 281, 565, 13], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 24, "seek": 7928, "start": 84.08, "end": 87.68, "text": " It is not particularly important, so in a sense if you want to build your own Lippie-to-peee", "tokens": [467, 307, 406, 4098, 1021, 11, 370, 294, 257, 2020, 498, 291, 528, 281, 1322, 428, 1065, 441, 2488, 414, 12, 1353, 12, 494, 1653], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 25, "seek": 7928, "start": 87.68, "end": 91.6, "text": " application, all the content here is applicable for you as well.", "tokens": [3861, 11, 439, 264, 2701, 510, 307, 21142, 337, 291, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 26, "seek": 7928, "start": 91.6, "end": 97.08, "text": " But if you want to have this pre-built, you can leverage Lippie-to-peee.", "tokens": [583, 498, 291, 528, 281, 362, 341, 659, 12, 23018, 11, 291, 393, 13982, 441, 2488, 414, 12, 1353, 12, 494, 1653, 13], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 27, "seek": 7928, "start": 97.08, "end": 98.08, "text": " So what is Lippie-to-peee?", "tokens": [407, 437, 307, 441, 2488, 414, 12, 1353, 12, 494, 1653, 30], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 28, "seek": 7928, "start": 98.08, "end": 103.32, "text": " Lippie-to-peee, as you can infer from the name, I'm guessing, is a peer-to-peee networking", "tokens": [441, 2488, 414, 12, 1353, 12, 494, 1653, 11, 382, 291, 393, 13596, 490, 264, 1315, 11, 286, 478, 17939, 11, 307, 257, 15108, 12, 1353, 12, 494, 1653, 17985], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 29, "seek": 7928, "start": 103.32, "end": 104.32, "text": " library.", "tokens": [6405, 13], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 30, "seek": 7928, "start": 104.32, "end": 109.24000000000001, "text": " It has one specification, and then that specification is implemented in many, many different languages.", "tokens": [467, 575, 472, 31256, 11, 293, 550, 300, 31256, 307, 12270, 294, 867, 11, 867, 819, 8650, 13], "temperature": 0.0, "avg_logprob": -0.15431486202191702, "compression_ratio": 1.8268551236749118, "no_speech_prob": 2.4653236323501915e-05}, {"id": 31, "seek": 10924, "start": 109.24, "end": 116.19999999999999, "text": " Like, for example, Go, JS, Rust, Nim, C++, Java, but a couple others as well.", "tokens": [1743, 11, 337, 1365, 11, 1037, 11, 33063, 11, 34952, 11, 45251, 11, 383, 25472, 11, 10745, 11, 457, 257, 1916, 2357, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.197216366612634, "compression_ratio": 1.49, "no_speech_prob": 6.193831359269097e-05}, {"id": 32, "seek": 10924, "start": 116.19999999999999, "end": 123.19999999999999, "text": " The goal of Lippie-to-peee is provide low-level features like encryption, authentication,", "tokens": [440, 3387, 295, 441, 2488, 414, 12, 1353, 12, 494, 1653, 307, 2893, 2295, 12, 12418, 4122, 411, 29575, 11, 26643, 11], "temperature": 0.0, "avg_logprob": -0.197216366612634, "compression_ratio": 1.49, "no_speech_prob": 6.193831359269097e-05}, {"id": 33, "seek": 10924, "start": 123.19999999999999, "end": 125.16, "text": " hole-punching, and things like that.", "tokens": [5458, 12, 79, 46079, 11, 293, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.197216366612634, "compression_ratio": 1.49, "no_speech_prob": 6.193831359269097e-05}, {"id": 34, "seek": 10924, "start": 125.16, "end": 131.64, "text": " And then on top of that, leverage those features to then also provide higher-level protocols.", "tokens": [400, 550, 322, 1192, 295, 300, 11, 13982, 729, 4122, 281, 550, 611, 2893, 2946, 12, 12418, 20618, 13], "temperature": 0.0, "avg_logprob": -0.197216366612634, "compression_ratio": 1.49, "no_speech_prob": 6.193831359269097e-05}, {"id": 35, "seek": 13164, "start": 131.64, "end": 139.55999999999997, "text": " Like, for example, DHT, distributed hash table, or gossiping protocols, or things like that.", "tokens": [1743, 11, 337, 1365, 11, 28606, 51, 11, 12631, 22019, 3199, 11, 420, 31788, 278, 20618, 11, 420, 721, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.19618206639443675, "compression_ratio": 1.4929577464788732, "no_speech_prob": 8.37897096062079e-06}, {"id": 36, "seek": 13164, "start": 139.55999999999997, "end": 146.27999999999997, "text": " And my big slogan always is Lippie-to-peee is all you need to build peer-to-peee applications", "tokens": [400, 452, 955, 33052, 1009, 307, 441, 2488, 414, 12, 1353, 12, 494, 1653, 307, 439, 291, 643, 281, 1322, 15108, 12, 1353, 12, 494, 1653, 5821], "temperature": 0.0, "avg_logprob": -0.19618206639443675, "compression_ratio": 1.4929577464788732, "no_speech_prob": 8.37897096062079e-06}, {"id": 37, "seek": 13164, "start": 146.27999999999997, "end": 147.76, "text": " on the internet.", "tokens": [322, 264, 4705, 13], "temperature": 0.0, "avg_logprob": -0.19618206639443675, "compression_ratio": 1.4929577464788732, "no_speech_prob": 8.37897096062079e-06}, {"id": 38, "seek": 13164, "start": 147.76, "end": 151.27999999999997, "text": " Okay, wonderful.", "tokens": [1033, 11, 3715, 13], "temperature": 0.0, "avg_logprob": -0.19618206639443675, "compression_ratio": 1.4929577464788732, "no_speech_prob": 8.37897096062079e-06}, {"id": 39, "seek": 13164, "start": 151.27999999999997, "end": 158.2, "text": " One small disclaimer that's important later on is that I want to highlight here is Lippie-to-peee", "tokens": [1485, 1359, 40896, 300, 311, 1021, 1780, 322, 307, 300, 286, 528, 281, 5078, 510, 307, 441, 2488, 414, 12, 1353, 12, 494, 1653], "temperature": 0.0, "avg_logprob": -0.19618206639443675, "compression_ratio": 1.4929577464788732, "no_speech_prob": 8.37897096062079e-06}, {"id": 40, "seek": 15820, "start": 158.2, "end": 162.76, "text": " always encrypts and always authenticates, and we'll go into that later on, what that", "tokens": [1009, 17972, 39280, 293, 1009, 12466, 1024, 11, 293, 321, 603, 352, 666, 300, 1780, 322, 11, 437, 300], "temperature": 0.0, "avg_logprob": -0.17450777689615884, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.9263857868500054e-05}, {"id": 41, "seek": 15820, "start": 162.76, "end": 163.76, "text": " means.", "tokens": [1355, 13], "temperature": 0.0, "avg_logprob": -0.17450777689615884, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.9263857868500054e-05}, {"id": 42, "seek": 15820, "start": 163.76, "end": 165.48, "text": " But that's very important for me.", "tokens": [583, 300, 311, 588, 1021, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.17450777689615884, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.9263857868500054e-05}, {"id": 43, "seek": 15820, "start": 165.48, "end": 170.72, "text": " We don't ship any traffic over the internet that is ever unencrypted or not authenticated,", "tokens": [492, 500, 380, 5374, 604, 6419, 670, 264, 4705, 300, 307, 1562, 517, 22660, 627, 25383, 420, 406, 9214, 3587, 11], "temperature": 0.0, "avg_logprob": -0.17450777689615884, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.9263857868500054e-05}, {"id": 44, "seek": 15820, "start": 170.72, "end": 174.79999999999998, "text": " and in terms of authentication, I'm talking about mutual authentication.", "tokens": [293, 294, 2115, 295, 26643, 11, 286, 478, 1417, 466, 16917, 26643, 13], "temperature": 0.0, "avg_logprob": -0.17450777689615884, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.9263857868500054e-05}, {"id": 45, "seek": 15820, "start": 174.79999999999998, "end": 183.2, "text": " Okay, that's enough introduction for today, and now to the actual topic.", "tokens": [1033, 11, 300, 311, 1547, 9339, 337, 965, 11, 293, 586, 281, 264, 3539, 4829, 13], "temperature": 0.0, "avg_logprob": -0.17450777689615884, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.9263857868500054e-05}, {"id": 46, "seek": 18320, "start": 183.2, "end": 189.04, "text": " What I want to convey today is how we can get from here, from the left side to the right", "tokens": [708, 286, 528, 281, 16965, 965, 307, 577, 321, 393, 483, 490, 510, 11, 490, 264, 1411, 1252, 281, 264, 558], "temperature": 0.0, "avg_logprob": -0.12768306527086484, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.5184299627435394e-05}, {"id": 47, "seek": 18320, "start": 189.04, "end": 190.54, "text": " side.", "tokens": [1252, 13], "temperature": 0.0, "avg_logprob": -0.12768306527086484, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.5184299627435394e-05}, {"id": 48, "seek": 18320, "start": 190.54, "end": 198.23999999999998, "text": " So my great motivation is for browsers to be first-class citizens in networked applications.", "tokens": [407, 452, 869, 12335, 307, 337, 36069, 281, 312, 700, 12, 11665, 7180, 294, 3209, 292, 5821, 13], "temperature": 0.0, "avg_logprob": -0.12768306527086484, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.5184299627435394e-05}, {"id": 49, "seek": 18320, "start": 198.23999999999998, "end": 205.12, "text": " Now on the very left side, you see the typical internet application today.", "tokens": [823, 322, 264, 588, 1411, 1252, 11, 291, 536, 264, 7476, 4705, 3861, 965, 13], "temperature": 0.0, "avg_logprob": -0.12768306527086484, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.5184299627435394e-05}, {"id": 50, "seek": 18320, "start": 205.12, "end": 206.72, "text": " So you have a browser.", "tokens": [407, 291, 362, 257, 11185, 13], "temperature": 0.0, "avg_logprob": -0.12768306527086484, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.5184299627435394e-05}, {"id": 51, "seek": 18320, "start": 206.72, "end": 211.79999999999998, "text": " I'm using the Firefox logo here, but you can use any browser, really.", "tokens": [286, 478, 1228, 264, 46613, 9699, 510, 11, 457, 291, 393, 764, 604, 11185, 11, 534, 13], "temperature": 0.0, "avg_logprob": -0.12768306527086484, "compression_ratio": 1.6063348416289593, "no_speech_prob": 1.5184299627435394e-05}, {"id": 52, "seek": 21180, "start": 211.8, "end": 217.12, "text": " That tries to interact with a network deprecation somewhere in the internet.", "tokens": [663, 9898, 281, 4648, 365, 257, 3209, 1367, 13867, 399, 4079, 294, 264, 4705, 13], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 53, "seek": 21180, "start": 217.12, "end": 221.96, "text": " Instead of interacting with the nodes directly, it acts through a server, and that server", "tokens": [7156, 295, 18017, 365, 264, 13891, 3838, 11, 309, 10672, 807, 257, 7154, 11, 293, 300, 7154], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 54, "seek": 21180, "start": 221.96, "end": 225.72, "text": " acts on behalf of the browser, right?", "tokens": [10672, 322, 9490, 295, 264, 11185, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 55, "seek": 21180, "start": 225.72, "end": 229.44, "text": " The browser pretty much never interacts with the whole network.", "tokens": [440, 11185, 1238, 709, 1128, 43582, 365, 264, 1379, 3209, 13], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 56, "seek": 21180, "start": 229.44, "end": 234.32000000000002, "text": " And to put this with an example, if you, for example, have a file sharing, you want to", "tokens": [400, 281, 829, 341, 365, 364, 1365, 11, 498, 291, 11, 337, 1365, 11, 362, 257, 3991, 5414, 11, 291, 528, 281], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 57, "seek": 21180, "start": 234.32000000000002, "end": 235.32000000000002, "text": " share a file.", "tokens": [2073, 257, 3991, 13], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 58, "seek": 21180, "start": 235.32000000000002, "end": 238.8, "text": " So for example, from my laptop here, I want to share a file with all of you.", "tokens": [407, 337, 1365, 11, 490, 452, 10732, 510, 11, 286, 528, 281, 2073, 257, 3991, 365, 439, 295, 291, 13], "temperature": 0.0, "avg_logprob": -0.1379450245907432, "compression_ratio": 1.8278688524590163, "no_speech_prob": 2.7957827114732936e-05}, {"id": 59, "seek": 23880, "start": 238.8, "end": 242.68, "text": " I would usually upload that to the server, and then all of you would download it from", "tokens": [286, 576, 2673, 6580, 300, 281, 264, 7154, 11, 293, 550, 439, 295, 291, 576, 5484, 309, 490], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 60, "seek": 23880, "start": 242.68, "end": 244.28, "text": " that server.", "tokens": [300, 7154, 13], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 61, "seek": 23880, "start": 244.28, "end": 247.8, "text": " We would never interact directly.", "tokens": [492, 576, 1128, 4648, 3838, 13], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 62, "seek": 23880, "start": 247.8, "end": 252.32000000000002, "text": " Now there are many reasons for that to be a good architecture, right?", "tokens": [823, 456, 366, 867, 4112, 337, 300, 281, 312, 257, 665, 9482, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 63, "seek": 23880, "start": 252.32000000000002, "end": 253.88000000000002, "text": " Browsers usually move a lot.", "tokens": [1603, 1509, 433, 2673, 1286, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 64, "seek": 23880, "start": 253.88000000000002, "end": 260.32, "text": " They might be in the living room, then in a cafe, and then at a conference in FOSDEM.", "tokens": [814, 1062, 312, 294, 264, 2647, 1808, 11, 550, 294, 257, 17773, 11, 293, 550, 412, 257, 7586, 294, 479, 4367, 35, 6683, 13], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 65, "seek": 23880, "start": 260.32, "end": 266.8, "text": " And they are usually low power, but what's the most hurt argument for this kind of architecture", "tokens": [400, 436, 366, 2673, 2295, 1347, 11, 457, 437, 311, 264, 881, 4607, 6770, 337, 341, 733, 295, 9482], "temperature": 0.0, "avg_logprob": -0.16739416559901807, "compression_ratio": 1.6586345381526104, "no_speech_prob": 1.591179534443654e-05}, {"id": 66, "seek": 26680, "start": 266.8, "end": 272.0, "text": " in terms of that, in comparison to the right architecture, is that you cannot connect to", "tokens": [294, 2115, 295, 300, 11, 294, 9660, 281, 264, 558, 9482, 11, 307, 300, 291, 2644, 1745, 281], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 67, "seek": 26680, "start": 272.0, "end": 275.92, "text": " browsers, and that browsers cannot connect to other nodes.", "tokens": [36069, 11, 293, 300, 36069, 2644, 1745, 281, 661, 13891, 13], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 68, "seek": 26680, "start": 275.92, "end": 278.28000000000003, "text": " That's oftentimes hurt, right?", "tokens": [663, 311, 18349, 4607, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 69, "seek": 26680, "start": 278.28000000000003, "end": 283.0, "text": " And what I want to kind of convey here today is that you can actually nicely connect a", "tokens": [400, 437, 286, 528, 281, 733, 295, 16965, 510, 965, 307, 300, 291, 393, 767, 9594, 1745, 257], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 70, "seek": 26680, "start": 283.0, "end": 287.2, "text": " browser to a whole network, and that the browser actually has a lot of connectivity options", "tokens": [11185, 281, 257, 1379, 3209, 11, 293, 300, 264, 11185, 767, 575, 257, 688, 295, 21095, 3956], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 71, "seek": 26680, "start": 287.2, "end": 289.8, "text": " out there, and I want to go through these.", "tokens": [484, 456, 11, 293, 286, 528, 281, 352, 807, 613, 13], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 72, "seek": 26680, "start": 289.8, "end": 295.0, "text": " And the next time you design a network deprecation, maybe you want to consider the architecture", "tokens": [400, 264, 958, 565, 291, 1715, 257, 3209, 1367, 13867, 399, 11, 1310, 291, 528, 281, 1949, 264, 9482], "temperature": 0.0, "avg_logprob": -0.11893375918396518, "compression_ratio": 1.9003831417624522, "no_speech_prob": 2.466524892952293e-05}, {"id": 73, "seek": 29500, "start": 295.0, "end": 299.16, "text": " on the right versus the architecture on the left.", "tokens": [322, 264, 558, 5717, 264, 9482, 322, 264, 1411, 13], "temperature": 0.0, "avg_logprob": -0.18647344819792025, "compression_ratio": 1.6, "no_speech_prob": 2.8391314117470756e-05}, {"id": 74, "seek": 29500, "start": 299.16, "end": 302.28, "text": " All right, cool.", "tokens": [1057, 558, 11, 1627, 13], "temperature": 0.0, "avg_logprob": -0.18647344819792025, "compression_ratio": 1.6, "no_speech_prob": 2.8391314117470756e-05}, {"id": 75, "seek": 29500, "start": 302.28, "end": 307.52, "text": " When it comes to connectivity for a browser, I want to differentiate this in two dimensions,", "tokens": [1133, 309, 1487, 281, 21095, 337, 257, 11185, 11, 286, 528, 281, 23203, 341, 294, 732, 12819, 11], "temperature": 0.0, "avg_logprob": -0.18647344819792025, "compression_ratio": 1.6, "no_speech_prob": 2.8391314117470756e-05}, {"id": 76, "seek": 29500, "start": 307.52, "end": 314.28, "text": " and the first dimension is whether my node, whatever, for example, my computer here, is", "tokens": [293, 264, 700, 10139, 307, 1968, 452, 9984, 11, 2035, 11, 337, 1365, 11, 452, 3820, 510, 11, 307], "temperature": 0.0, "avg_logprob": -0.18647344819792025, "compression_ratio": 1.6, "no_speech_prob": 2.8391314117470756e-05}, {"id": 77, "seek": 29500, "start": 314.28, "end": 315.44, "text": " public or private.", "tokens": [1908, 420, 4551, 13], "temperature": 0.0, "avg_logprob": -0.18647344819792025, "compression_ratio": 1.6, "no_speech_prob": 2.8391314117470756e-05}, {"id": 78, "seek": 29500, "start": 315.44, "end": 323.28, "text": " So can it be reachable directly, or is it behind an app or firewall, and or firewall?", "tokens": [407, 393, 309, 312, 2524, 712, 3838, 11, 420, 307, 309, 2261, 364, 724, 420, 36109, 11, 293, 420, 36109, 30], "temperature": 0.0, "avg_logprob": -0.18647344819792025, "compression_ratio": 1.6, "no_speech_prob": 2.8391314117470756e-05}, {"id": 79, "seek": 32328, "start": 323.28, "end": 327.47999999999996, "text": " In public, you would usually refer to it as a server, and in private, you would, for", "tokens": [682, 1908, 11, 291, 576, 2673, 2864, 281, 309, 382, 257, 7154, 11, 293, 294, 4551, 11, 291, 576, 11, 337], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 80, "seek": 32328, "start": 327.47999999999996, "end": 331.35999999999996, "text": " example, refer to my laptop or the browser running on my laptop.", "tokens": [1365, 11, 2864, 281, 452, 10732, 420, 264, 11185, 2614, 322, 452, 10732, 13], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 81, "seek": 32328, "start": 331.35999999999996, "end": 332.35999999999996, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 82, "seek": 32328, "start": 332.35999999999996, "end": 337.35999999999996, "text": " Then the other dimension, when we talk about connectivity, I want to differentiate in two", "tokens": [1396, 264, 661, 10139, 11, 562, 321, 751, 466, 21095, 11, 286, 528, 281, 23203, 294, 732], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 83, "seek": 32328, "start": 337.35999999999996, "end": 341.2, "text": " platforms, which is browser and non-browser.", "tokens": [9473, 11, 597, 307, 11185, 293, 2107, 12, 1443, 30947, 13], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 84, "seek": 32328, "start": 341.2, "end": 342.2, "text": " Why is this relevant?", "tokens": [1545, 307, 341, 7340, 30], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 85, "seek": 32328, "start": 342.2, "end": 346.64, "text": " Well, there are a lot more platforms, I know, but usually it's the non-browser, which is", "tokens": [1042, 11, 456, 366, 257, 688, 544, 9473, 11, 286, 458, 11, 457, 2673, 309, 311, 264, 2107, 12, 1443, 30947, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 86, "seek": 32328, "start": 346.64, "end": 352.23999999999995, "text": " very unrestricted, in terms of, for example, I have access to a UDP or a TCP socket, and", "tokens": [588, 35103, 3740, 292, 11, 294, 2115, 295, 11, 337, 1365, 11, 286, 362, 2105, 281, 257, 624, 11373, 420, 257, 48965, 19741, 11, 293], "temperature": 0.0, "avg_logprob": -0.16258218862714557, "compression_ratio": 1.7073170731707317, "no_speech_prob": 3.1864415177551564e-06}, {"id": 87, "seek": 35224, "start": 352.24, "end": 357.36, "text": " then I have the browser, which is very restricted, where sometimes I can't make a connection", "tokens": [550, 286, 362, 264, 11185, 11, 597, 307, 588, 20608, 11, 689, 2171, 286, 393, 380, 652, 257, 4984], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 88, "seek": 35224, "start": 357.36, "end": 360.08, "text": " without, for example, a valid TLS certificate.", "tokens": [1553, 11, 337, 1365, 11, 257, 7363, 314, 19198, 15953, 13], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 89, "seek": 35224, "start": 360.08, "end": 361.08, "text": " Wonderful.", "tokens": [22768, 13], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 90, "seek": 35224, "start": 361.08, "end": 362.08, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 91, "seek": 35224, "start": 362.08, "end": 368.92, "text": " So, and my goal today is kind of, we fill this matrix now with the different options", "tokens": [407, 11, 293, 452, 3387, 965, 307, 733, 295, 11, 321, 2836, 341, 8141, 586, 365, 264, 819, 3956], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 92, "seek": 35224, "start": 368.92, "end": 373.8, "text": " that we have, and this way I kind of convey the fact that actually browsers can be first", "tokens": [300, 321, 362, 11, 293, 341, 636, 286, 733, 295, 16965, 264, 1186, 300, 767, 36069, 393, 312, 700], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 93, "seek": 35224, "start": 373.8, "end": 376.04, "text": " class citizens in network applications.", "tokens": [1508, 7180, 294, 3209, 5821, 13], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 94, "seek": 35224, "start": 376.04, "end": 377.64, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.20659916810315065, "compression_ratio": 1.5301204819277108, "no_speech_prob": 5.656178927893052e-06}, {"id": 95, "seek": 37764, "start": 377.64, "end": 382.59999999999997, "text": " So let's talk about public non-browser to public non-browser.", "tokens": [407, 718, 311, 751, 466, 1908, 2107, 12, 1443, 30947, 281, 1908, 2107, 12, 1443, 30947, 13], "temperature": 0.0, "avg_logprob": -0.21303190751509232, "compression_ratio": 1.5637860082304527, "no_speech_prob": 3.233575398553512e-06}, {"id": 96, "seek": 37764, "start": 382.59999999999997, "end": 385.76, "text": " I'm in the network dev room, like this is the easiest one, I'm not going to explain", "tokens": [286, 478, 294, 264, 3209, 1905, 1808, 11, 411, 341, 307, 264, 12889, 472, 11, 286, 478, 406, 516, 281, 2903], "temperature": 0.0, "avg_logprob": -0.21303190751509232, "compression_ratio": 1.5637860082304527, "no_speech_prob": 3.233575398553512e-06}, {"id": 97, "seek": 37764, "start": 385.76, "end": 388.4, "text": " this much.", "tokens": [341, 709, 13], "temperature": 0.0, "avg_logprob": -0.21303190751509232, "compression_ratio": 1.5637860082304527, "no_speech_prob": 3.233575398553512e-06}, {"id": 98, "seek": 37764, "start": 388.4, "end": 391.56, "text": " Reachability, they're both nodes are public.", "tokens": [35904, 2310, 11, 436, 434, 1293, 13891, 366, 1908, 13], "temperature": 0.0, "avg_logprob": -0.21303190751509232, "compression_ratio": 1.5637860082304527, "no_speech_prob": 3.233575398553512e-06}, {"id": 99, "seek": 37764, "start": 391.56, "end": 399.52, "text": " We can just reach out them directly over IP and TCP, or then UDP and the shiny new quick.", "tokens": [492, 393, 445, 2524, 484, 552, 3838, 670, 8671, 293, 48965, 11, 420, 550, 624, 11373, 293, 264, 16997, 777, 1702, 13], "temperature": 0.0, "avg_logprob": -0.21303190751509232, "compression_ratio": 1.5637860082304527, "no_speech_prob": 3.233575398553512e-06}, {"id": 100, "seek": 37764, "start": 399.52, "end": 404.15999999999997, "text": " We don't have firewalls and that on either side, and the platform, which is non-browser,", "tokens": [492, 500, 380, 362, 36109, 82, 293, 300, 322, 2139, 1252, 11, 293, 264, 3663, 11, 597, 307, 2107, 12, 1443, 30947, 11], "temperature": 0.0, "avg_logprob": -0.21303190751509232, "compression_ratio": 1.5637860082304527, "no_speech_prob": 3.233575398553512e-06}, {"id": 101, "seek": 40416, "start": 404.16, "end": 409.48, "text": " so for example, an application running on my laptop has direct access to the TCP and", "tokens": [370, 337, 1365, 11, 364, 3861, 2614, 322, 452, 10732, 575, 2047, 2105, 281, 264, 48965, 293], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 102, "seek": 40416, "start": 409.48, "end": 412.0, "text": " UDP socket.", "tokens": [624, 11373, 19741, 13], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 103, "seek": 40416, "start": 412.0, "end": 413.36, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 104, "seek": 40416, "start": 413.36, "end": 414.84000000000003, "text": " So we have that.", "tokens": [407, 321, 362, 300, 13], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 105, "seek": 40416, "start": 414.84000000000003, "end": 420.16, "text": " Then private non-browser to public non-browser, again, really easy.", "tokens": [1396, 4551, 2107, 12, 1443, 30947, 281, 1908, 2107, 12, 1443, 30947, 11, 797, 11, 534, 1858, 13], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 106, "seek": 40416, "start": 420.16, "end": 426.68, "text": " You do this every day by any application on your laptop going to a server.", "tokens": [509, 360, 341, 633, 786, 538, 604, 3861, 322, 428, 10732, 516, 281, 257, 7154, 13], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 107, "seek": 40416, "start": 426.68, "end": 432.08000000000004, "text": " We don't have any firewalls, and we're not at the receiver side, so on the server side,", "tokens": [492, 500, 380, 362, 604, 36109, 82, 11, 293, 321, 434, 406, 412, 264, 20086, 1252, 11, 370, 322, 264, 7154, 1252, 11], "temperature": 0.0, "avg_logprob": -0.20988109324238088, "compression_ratio": 1.5486725663716814, "no_speech_prob": 1.75881621089502e-06}, {"id": 108, "seek": 43208, "start": 432.08, "end": 436.52, "text": " the left side is private, but we don't really care as we have the direction from the left", "tokens": [264, 1411, 1252, 307, 4551, 11, 457, 321, 500, 380, 534, 1127, 382, 321, 362, 264, 3513, 490, 264, 1411], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 109, "seek": 43208, "start": 436.52, "end": 437.76, "text": " to the right.", "tokens": [281, 264, 558, 13], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 110, "seek": 43208, "start": 437.76, "end": 443.2, "text": " And then the platform, again, we're not running in the browser, so we're pretty unrestricted.", "tokens": [400, 550, 264, 3663, 11, 797, 11, 321, 434, 406, 2614, 294, 264, 11185, 11, 370, 321, 434, 1238, 35103, 3740, 292, 13], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 111, "seek": 43208, "start": 443.2, "end": 447.71999999999997, "text": " We probably have access to a TCP or UDP socket.", "tokens": [492, 1391, 362, 2105, 281, 257, 48965, 420, 624, 11373, 19741, 13], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 112, "seek": 43208, "start": 447.71999999999997, "end": 450.08, "text": " Wonderful.", "tokens": [22768, 13], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 113, "seek": 43208, "start": 450.08, "end": 456.28, "text": " To make this a little bit more complex, what if I'm a public non-browser connecting to", "tokens": [1407, 652, 341, 257, 707, 857, 544, 3997, 11, 437, 498, 286, 478, 257, 1908, 2107, 12, 1443, 30947, 11015, 281], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 114, "seek": 43208, "start": 456.28, "end": 457.88, "text": " a private non-browser?", "tokens": [257, 4551, 2107, 12, 1443, 30947, 30], "temperature": 0.0, "avg_logprob": -0.13936664036342075, "compression_ratio": 1.5313807531380754, "no_speech_prob": 1.488062844146043e-05}, {"id": 115, "seek": 45788, "start": 457.88, "end": 462.71999999999997, "text": " So does that mean, for example, on the left that could be a server, and then on the right", "tokens": [407, 775, 300, 914, 11, 337, 1365, 11, 322, 264, 1411, 300, 727, 312, 257, 7154, 11, 293, 550, 322, 264, 558], "temperature": 0.0, "avg_logprob": -0.13845163747804975, "compression_ratio": 1.8851063829787233, "no_speech_prob": 5.490624971571378e-06}, {"id": 116, "seek": 45788, "start": 462.71999999999997, "end": 467.2, "text": " that could be some application running on my laptop right now?", "tokens": [300, 727, 312, 512, 3861, 2614, 322, 452, 10732, 558, 586, 30], "temperature": 0.0, "avg_logprob": -0.13845163747804975, "compression_ratio": 1.8851063829787233, "no_speech_prob": 5.490624971571378e-06}, {"id": 117, "seek": 45788, "start": 467.2, "end": 473.4, "text": " What we can do here is something called connection reversal, simply where my laptop connects", "tokens": [708, 321, 393, 360, 510, 307, 746, 1219, 4984, 42778, 11, 2935, 689, 452, 10732, 16967], "temperature": 0.0, "avg_logprob": -0.13845163747804975, "compression_ratio": 1.8851063829787233, "no_speech_prob": 5.490624971571378e-06}, {"id": 118, "seek": 45788, "start": 473.4, "end": 478.36, "text": " to some public node, then whoever wants to reach out to me reaches out to that public", "tokens": [281, 512, 1908, 9984, 11, 550, 11387, 2738, 281, 2524, 484, 281, 385, 14235, 484, 281, 300, 1908], "temperature": 0.0, "avg_logprob": -0.13845163747804975, "compression_ratio": 1.8851063829787233, "no_speech_prob": 5.490624971571378e-06}, {"id": 119, "seek": 45788, "start": 478.36, "end": 484.08, "text": " node as well, relayes a message to me, my laptop, and then my laptop dials whoever wanted", "tokens": [9984, 382, 731, 11, 24214, 279, 257, 3636, 281, 385, 11, 452, 10732, 11, 293, 550, 452, 10732, 5502, 82, 11387, 1415], "temperature": 0.0, "avg_logprob": -0.13845163747804975, "compression_ratio": 1.8851063829787233, "no_speech_prob": 5.490624971571378e-06}, {"id": 120, "seek": 45788, "start": 484.08, "end": 485.08, "text": " to dial me initially.", "tokens": [281, 5502, 385, 9105, 13], "temperature": 0.0, "avg_logprob": -0.13845163747804975, "compression_ratio": 1.8851063829787233, "no_speech_prob": 5.490624971571378e-06}, {"id": 121, "seek": 48508, "start": 485.08, "end": 491.68, "text": " This is depicted here, so B connects to the relay R, and then A relays a network over", "tokens": [639, 307, 30207, 510, 11, 370, 363, 16967, 281, 264, 24214, 497, 11, 293, 550, 316, 1039, 3772, 257, 3209, 670], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 122, "seek": 48508, "start": 491.68, "end": 497.44, "text": " R to B, and then B can actually connect to A, which is commonly referred to as connection", "tokens": [497, 281, 363, 11, 293, 550, 363, 393, 767, 1745, 281, 316, 11, 597, 307, 12719, 10839, 281, 382, 4984], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 123, "seek": 48508, "start": 497.44, "end": 498.76, "text": " reversal.", "tokens": [42778, 13], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 124, "seek": 48508, "start": 498.76, "end": 503.44, "text": " In terms of platform, again, we're a non-browser, so access to TCP and UDP socket, so we're", "tokens": [682, 2115, 295, 3663, 11, 797, 11, 321, 434, 257, 2107, 12, 1443, 30947, 11, 370, 2105, 281, 48965, 293, 624, 11373, 19741, 11, 370, 321, 434], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 125, "seek": 48508, "start": 503.44, "end": 504.96, "text": " all good.", "tokens": [439, 665, 13], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 126, "seek": 48508, "start": 504.96, "end": 506.64, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 127, "seek": 48508, "start": 506.64, "end": 512.64, "text": " And then the last one I want to fill before it becomes complicated, namely before we introduce", "tokens": [400, 550, 264, 1036, 472, 286, 528, 281, 2836, 949, 309, 3643, 6179, 11, 20926, 949, 321, 5366], "temperature": 0.0, "avg_logprob": -0.15879160329836225, "compression_ratio": 1.5901639344262295, "no_speech_prob": 1.5155470464378595e-05}, {"id": 128, "seek": 51264, "start": 512.64, "end": 517.4, "text": " a browser, is private non-browser to private non-browser.", "tokens": [257, 11185, 11, 307, 4551, 2107, 12, 1443, 30947, 281, 4551, 2107, 12, 1443, 30947, 13], "temperature": 0.0, "avg_logprob": -0.12128858398972896, "compression_ratio": 1.6541353383458646, "no_speech_prob": 2.1097066564834677e-05}, {"id": 129, "seek": 51264, "start": 517.4, "end": 522.72, "text": " You see this depicted down there as A and B. Reachability really sucks.", "tokens": [509, 536, 341, 30207, 760, 456, 382, 316, 293, 363, 13, 35904, 2310, 534, 15846, 13], "temperature": 0.0, "avg_logprob": -0.12128858398972896, "compression_ratio": 1.6541353383458646, "no_speech_prob": 2.1097066564834677e-05}, {"id": 130, "seek": 51264, "start": 522.72, "end": 527.8, "text": " Both are probably behind gnats or firewalls, so not much luck either.", "tokens": [6767, 366, 1391, 2261, 49819, 1720, 420, 36109, 82, 11, 370, 406, 709, 3668, 2139, 13], "temperature": 0.0, "avg_logprob": -0.12128858398972896, "compression_ratio": 1.6541353383458646, "no_speech_prob": 2.1097066564834677e-05}, {"id": 131, "seek": 51264, "start": 527.8, "end": 532.0, "text": " So what we need to employ here is a technique called hole punching.", "tokens": [407, 437, 321, 643, 281, 3188, 510, 307, 257, 6532, 1219, 5458, 34866, 13], "temperature": 0.0, "avg_logprob": -0.12128858398972896, "compression_ratio": 1.6541353383458646, "no_speech_prob": 2.1097066564834677e-05}, {"id": 132, "seek": 51264, "start": 532.0, "end": 536.1999999999999, "text": " I don't have much time today in this talk, but we have another talk later on.", "tokens": [286, 500, 380, 362, 709, 565, 965, 294, 341, 751, 11, 457, 321, 362, 1071, 751, 1780, 322, 13], "temperature": 0.0, "avg_logprob": -0.12128858398972896, "compression_ratio": 1.6541353383458646, "no_speech_prob": 2.1097066564834677e-05}, {"id": 133, "seek": 51264, "start": 536.1999999999999, "end": 542.48, "text": " So if you want to learn all about hole punching or what success rate we have across different,", "tokens": [407, 498, 291, 528, 281, 1466, 439, 466, 5458, 34866, 420, 437, 2245, 3314, 321, 362, 2108, 819, 11], "temperature": 0.0, "avg_logprob": -0.12128858398972896, "compression_ratio": 1.6541353383458646, "no_speech_prob": 2.1097066564834677e-05}, {"id": 134, "seek": 54248, "start": 542.48, "end": 546.0, "text": " protocols or IP stacks, join the talk.", "tokens": [20618, 420, 8671, 30792, 11, 3917, 264, 751, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 135, "seek": 54248, "start": 546.0, "end": 548.08, "text": " I think it's at 11.45.", "tokens": [286, 519, 309, 311, 412, 2975, 13, 8465, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 136, "seek": 54248, "start": 548.08, "end": 550.04, "text": " So we'll go a bunch into that.", "tokens": [407, 321, 603, 352, 257, 3840, 666, 300, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 137, "seek": 54248, "start": 550.04, "end": 554.0, "text": " Just short, brief one, A and B want to connect.", "tokens": [1449, 2099, 11, 5353, 472, 11, 316, 293, 363, 528, 281, 1745, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 138, "seek": 54248, "start": 554.0, "end": 555.6, "text": " Both are behind firewalls.", "tokens": [6767, 366, 2261, 36109, 82, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 139, "seek": 54248, "start": 555.6, "end": 559.32, "text": " Both connect to a relay R, that R is public.", "tokens": [6767, 1745, 281, 257, 24214, 497, 11, 300, 497, 307, 1908, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 140, "seek": 54248, "start": 559.32, "end": 565.9200000000001, "text": " They coordinate a hole punch over that relay, and then execute that hole punch through both", "tokens": [814, 15670, 257, 5458, 8135, 670, 300, 24214, 11, 293, 550, 14483, 300, 5458, 8135, 807, 1293], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 141, "seek": 54248, "start": 565.9200000000001, "end": 567.16, "text": " of their firewalls.", "tokens": [295, 641, 36109, 82, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 142, "seek": 54248, "start": 567.16, "end": 568.16, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 143, "seek": 54248, "start": 568.16, "end": 571.6, "text": " In terms of platforms, again, we're not on the browser yet.", "tokens": [682, 2115, 295, 9473, 11, 797, 11, 321, 434, 406, 322, 264, 11185, 1939, 13], "temperature": 0.0, "avg_logprob": -0.16929591202936253, "compression_ratio": 1.541501976284585, "no_speech_prob": 1.4911956895957701e-05}, {"id": 144, "seek": 57160, "start": 571.6, "end": 574.12, "text": " So we have access to the TCP and UDP socket.", "tokens": [407, 321, 362, 2105, 281, 264, 48965, 293, 624, 11373, 19741, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 145, "seek": 57160, "start": 574.12, "end": 575.12, "text": " All good.", "tokens": [1057, 665, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 146, "seek": 57160, "start": 575.12, "end": 576.12, "text": " Life is pretty easy.", "tokens": [7720, 307, 1238, 1858, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 147, "seek": 57160, "start": 576.12, "end": 577.12, "text": " Wonderful.", "tokens": [22768, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 148, "seek": 57160, "start": 577.12, "end": 579.12, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 149, "seek": 57160, "start": 579.12, "end": 584.9200000000001, "text": " Now comes complexity, which is the browser world.", "tokens": [823, 1487, 14024, 11, 597, 307, 264, 11185, 1002, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 150, "seek": 57160, "start": 584.9200000000001, "end": 591.4, "text": " And what we can, what I want to talk about first is what if I'm a private browser.", "tokens": [400, 437, 321, 393, 11, 437, 286, 528, 281, 751, 466, 700, 307, 437, 498, 286, 478, 257, 4551, 11185, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 151, "seek": 57160, "start": 591.4, "end": 594.48, "text": " Now private browser is somewhat of a weird term.", "tokens": [823, 4551, 11185, 307, 8344, 295, 257, 3657, 1433, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 152, "seek": 57160, "start": 594.48, "end": 599.08, "text": " Usually you're not at Faustum and you don't have a public IPv4 or IPv6 address.", "tokens": [11419, 291, 434, 406, 412, 12710, 381, 449, 293, 291, 500, 380, 362, 257, 1908, 8671, 85, 19, 420, 8671, 85, 21, 2985, 13], "temperature": 0.0, "avg_logprob": -0.2152037880637429, "compression_ratio": 1.4896265560165975, "no_speech_prob": 7.068359082040843e-06}, {"id": 153, "seek": 59908, "start": 599.08, "end": 606.8000000000001, "text": " So browsers are usually always private, which I'm not suggesting to change.", "tokens": [407, 36069, 366, 2673, 1009, 4551, 11, 597, 286, 478, 406, 18094, 281, 1319, 13], "temperature": 0.0, "avg_logprob": -0.1252522227740047, "compression_ratio": 1.6153846153846154, "no_speech_prob": 7.360364634223515e-06}, {"id": 154, "seek": 59908, "start": 606.8000000000001, "end": 607.8000000000001, "text": " Definitely not.", "tokens": [12151, 406, 13], "temperature": 0.0, "avg_logprob": -0.1252522227740047, "compression_ratio": 1.6153846153846154, "no_speech_prob": 7.360364634223515e-06}, {"id": 155, "seek": 59908, "start": 607.8000000000001, "end": 611.76, "text": " There are many security considerations to keep it that way.", "tokens": [821, 366, 867, 3825, 24070, 281, 1066, 309, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.1252522227740047, "compression_ratio": 1.6153846153846154, "no_speech_prob": 7.360364634223515e-06}, {"id": 156, "seek": 59908, "start": 611.76, "end": 616.4000000000001, "text": " But what if I want to connect from a private browser to a public non-browser?", "tokens": [583, 437, 498, 286, 528, 281, 1745, 490, 257, 4551, 11185, 281, 257, 1908, 2107, 12, 1443, 30947, 30], "temperature": 0.0, "avg_logprob": -0.1252522227740047, "compression_ratio": 1.6153846153846154, "no_speech_prob": 7.360364634223515e-06}, {"id": 157, "seek": 59908, "start": 616.4000000000001, "end": 622.9200000000001, "text": " So what if I, for example, want to connect from my laptop within my browser to some server?", "tokens": [407, 437, 498, 286, 11, 337, 1365, 11, 528, 281, 1745, 490, 452, 10732, 1951, 452, 11185, 281, 512, 7154, 30], "temperature": 0.0, "avg_logprob": -0.1252522227740047, "compression_ratio": 1.6153846153846154, "no_speech_prob": 7.360364634223515e-06}, {"id": 158, "seek": 59908, "start": 622.9200000000001, "end": 628.5600000000001, "text": " Now this, again, sounds pretty easy to everyone, except one small disclaimer.", "tokens": [823, 341, 11, 797, 11, 3263, 1238, 1858, 281, 1518, 11, 3993, 472, 1359, 40896, 13], "temperature": 0.0, "avg_logprob": -0.1252522227740047, "compression_ratio": 1.6153846153846154, "no_speech_prob": 7.360364634223515e-06}, {"id": 159, "seek": 62856, "start": 628.56, "end": 633.28, "text": " Again, we don't have a firewall or NAT at the receiver side, right?", "tokens": [3764, 11, 321, 500, 380, 362, 257, 36109, 420, 14500, 412, 264, 20086, 1252, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 160, "seek": 62856, "start": 633.28, "end": 638.88, "text": " A server is public, depending on the firewall rules, obviously, but we can easily reach", "tokens": [316, 7154, 307, 1908, 11, 5413, 322, 264, 36109, 4474, 11, 2745, 11, 457, 321, 393, 3612, 2524], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 161, "seek": 62856, "start": 638.88, "end": 639.88, "text": " out to them.", "tokens": [484, 281, 552, 13], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 162, "seek": 62856, "start": 639.88, "end": 645.28, "text": " In terms of platform, we are on the browser, so we're quite restricted in the sense of", "tokens": [682, 2115, 295, 3663, 11, 321, 366, 322, 264, 11185, 11, 370, 321, 434, 1596, 20608, 294, 264, 2020, 295], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 163, "seek": 62856, "start": 645.28, "end": 646.68, "text": " what we can do.", "tokens": [437, 321, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 164, "seek": 62856, "start": 646.68, "end": 650.68, "text": " Eventually, I want to end up with a byte stream between the two endpoints.", "tokens": [17586, 11, 286, 528, 281, 917, 493, 365, 257, 40846, 4309, 1296, 264, 732, 917, 20552, 13], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 165, "seek": 62856, "start": 650.68, "end": 654.1999999999999, "text": " So what I'm restricted to is either web sockets.", "tokens": [407, 437, 286, 478, 20608, 281, 307, 2139, 3670, 370, 11984, 13], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 166, "seek": 62856, "start": 654.1999999999999, "end": 655.1999999999999, "text": " Everyone knows that.", "tokens": [5198, 3255, 300, 13], "temperature": 0.0, "avg_logprob": -0.1686520120371943, "compression_ratio": 1.5877862595419847, "no_speech_prob": 2.705293991311919e-05}, {"id": 167, "seek": 65520, "start": 655.2, "end": 660.72, "text": " So TCP, TLS, HTTP, then an upgrade, and then I have web socket.", "tokens": [407, 48965, 11, 314, 19198, 11, 33283, 11, 550, 364, 11484, 11, 293, 550, 286, 362, 3670, 19741, 13], "temperature": 0.0, "avg_logprob": -0.13321673762690914, "compression_ratio": 1.576470588235294, "no_speech_prob": 1.9060016711591743e-05}, {"id": 168, "seek": 65520, "start": 660.72, "end": 665.36, "text": " The problem with that is I need a valid TLS certificate, so I need the remote server to", "tokens": [440, 1154, 365, 300, 307, 286, 643, 257, 7363, 314, 19198, 15953, 11, 370, 286, 643, 264, 8607, 7154, 281], "temperature": 0.0, "avg_logprob": -0.13321673762690914, "compression_ratio": 1.576470588235294, "no_speech_prob": 1.9060016711591743e-05}, {"id": 169, "seek": 65520, "start": 665.36, "end": 672.0400000000001, "text": " either have a signed IP certificate or based on a domain.", "tokens": [2139, 362, 257, 8175, 8671, 15953, 420, 2361, 322, 257, 9274, 13], "temperature": 0.0, "avg_logprob": -0.13321673762690914, "compression_ratio": 1.576470588235294, "no_speech_prob": 1.9060016711591743e-05}, {"id": 170, "seek": 65520, "start": 672.0400000000001, "end": 673.4000000000001, "text": " So that's a bummer.", "tokens": [407, 300, 311, 257, 13309, 936, 13], "temperature": 0.0, "avg_logprob": -0.13321673762690914, "compression_ratio": 1.576470588235294, "no_speech_prob": 1.9060016711591743e-05}, {"id": 171, "seek": 65520, "start": 673.4000000000001, "end": 677.96, "text": " What I can do as an alternative in the browser is use the shiny new web transport, which", "tokens": [708, 286, 393, 360, 382, 364, 8535, 294, 264, 11185, 307, 764, 264, 16997, 777, 3670, 5495, 11, 597], "temperature": 0.0, "avg_logprob": -0.13321673762690914, "compression_ratio": 1.576470588235294, "no_speech_prob": 1.9060016711591743e-05}, {"id": 172, "seek": 65520, "start": 677.96, "end": 682.9200000000001, "text": " is basically, I'm simplifying a lot here, but basically web sockets on top of Quick", "tokens": [307, 1936, 11, 286, 478, 6883, 5489, 257, 688, 510, 11, 457, 1936, 3670, 370, 11984, 322, 1192, 295, 12101], "temperature": 0.0, "avg_logprob": -0.13321673762690914, "compression_ratio": 1.576470588235294, "no_speech_prob": 1.9060016711591743e-05}, {"id": 173, "seek": 68292, "start": 682.92, "end": 686.36, "text": " or HTTP3.", "tokens": [420, 33283, 18, 13], "temperature": 0.0, "avg_logprob": -0.21503781770405017, "compression_ratio": 1.5097087378640777, "no_speech_prob": 1.2401871572365053e-05}, {"id": 174, "seek": 68292, "start": 686.36, "end": 691.04, "text": " Web transport actually allows us to handle self-signed certificates.", "tokens": [9573, 5495, 767, 4045, 505, 281, 4813, 2698, 12, 82, 16690, 32941, 13], "temperature": 0.0, "avg_logprob": -0.21503781770405017, "compression_ratio": 1.5097087378640777, "no_speech_prob": 1.2401871572365053e-05}, {"id": 175, "seek": 68292, "start": 691.04, "end": 696.64, "text": " And then as a last alternative, we can use WebRTC to get a byte stream, WebRTC gives", "tokens": [400, 550, 382, 257, 1036, 8535, 11, 321, 393, 764, 9573, 49, 18238, 281, 483, 257, 40846, 4309, 11, 9573, 49, 18238, 2709], "temperature": 0.0, "avg_logprob": -0.21503781770405017, "compression_ratio": 1.5097087378640777, "no_speech_prob": 1.2401871572365053e-05}, {"id": 176, "seek": 68292, "start": 696.64, "end": 704.0799999999999, "text": " us data channels, so in the end, we can run on IP, UDP, then SCTP, and then use data channels", "tokens": [505, 1412, 9235, 11, 370, 294, 264, 917, 11, 321, 393, 1190, 322, 8671, 11, 624, 11373, 11, 550, 9028, 16804, 11, 293, 550, 764, 1412, 9235], "temperature": 0.0, "avg_logprob": -0.21503781770405017, "compression_ratio": 1.5097087378640777, "no_speech_prob": 1.2401871572365053e-05}, {"id": 177, "seek": 68292, "start": 704.0799999999999, "end": 705.68, "text": " from WebRTC.", "tokens": [490, 9573, 49, 18238, 13], "temperature": 0.0, "avg_logprob": -0.21503781770405017, "compression_ratio": 1.5097087378640777, "no_speech_prob": 1.2401871572365053e-05}, {"id": 178, "seek": 68292, "start": 705.68, "end": 709.24, "text": " Now before you scream, this is insecure.", "tokens": [823, 949, 291, 7291, 11, 341, 307, 32215, 13], "temperature": 0.0, "avg_logprob": -0.21503781770405017, "compression_ratio": 1.5097087378640777, "no_speech_prob": 1.2401871572365053e-05}, {"id": 179, "seek": 70924, "start": 709.24, "end": 713.64, "text": " The small disclaimer that I did at the beginning is in case you built this yourself, you still", "tokens": [440, 1359, 40896, 300, 286, 630, 412, 264, 2863, 307, 294, 1389, 291, 3094, 341, 1803, 11, 291, 920], "temperature": 0.0, "avg_logprob": -0.21131116888496312, "compression_ratio": 1.5482456140350878, "no_speech_prob": 2.7498854251462035e-05}, {"id": 180, "seek": 70924, "start": 713.64, "end": 717.04, "text": " need to figure out proper authentication, right?", "tokens": [643, 281, 2573, 484, 2296, 26643, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21131116888496312, "compression_ratio": 1.5482456140350878, "no_speech_prob": 2.7498854251462035e-05}, {"id": 181, "seek": 70924, "start": 717.04, "end": 721.32, "text": " Best would be mutual authentication, because self-signed certificates, you're not part", "tokens": [9752, 576, 312, 16917, 26643, 11, 570, 2698, 12, 82, 16690, 32941, 11, 291, 434, 406, 644], "temperature": 0.0, "avg_logprob": -0.21131116888496312, "compression_ratio": 1.5482456140350878, "no_speech_prob": 2.7498854251462035e-05}, {"id": 182, "seek": 70924, "start": 721.32, "end": 728.12, "text": " of the authority trust chain, but otherwise, yeah, these are your options.", "tokens": [295, 264, 8281, 3361, 5021, 11, 457, 5911, 11, 1338, 11, 613, 366, 428, 3956, 13], "temperature": 0.0, "avg_logprob": -0.21131116888496312, "compression_ratio": 1.5482456140350878, "no_speech_prob": 2.7498854251462035e-05}, {"id": 183, "seek": 70924, "start": 728.12, "end": 732.72, "text": " So web socket, web transport, and WebRTC.", "tokens": [407, 3670, 19741, 11, 3670, 5495, 11, 293, 9573, 49, 18238, 13], "temperature": 0.0, "avg_logprob": -0.21131116888496312, "compression_ratio": 1.5482456140350878, "no_speech_prob": 2.7498854251462035e-05}, {"id": 184, "seek": 70924, "start": 732.72, "end": 734.52, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.21131116888496312, "compression_ratio": 1.5482456140350878, "no_speech_prob": 2.7498854251462035e-05}, {"id": 185, "seek": 73452, "start": 734.52, "end": 743.0, "text": " So what if I want to connect from a public non-browser to a private browser?", "tokens": [407, 437, 498, 286, 528, 281, 1745, 490, 257, 1908, 2107, 12, 1443, 30947, 281, 257, 4551, 11185, 30], "temperature": 0.0, "avg_logprob": -0.11206749507359096, "compression_ratio": 1.6536796536796536, "no_speech_prob": 5.478643288370222e-06}, {"id": 186, "seek": 73452, "start": 743.0, "end": 746.3199999999999, "text": " We had this in the past, a couple of slides back.", "tokens": [492, 632, 341, 294, 264, 1791, 11, 257, 1916, 295, 9788, 646, 13], "temperature": 0.0, "avg_logprob": -0.11206749507359096, "compression_ratio": 1.6536796536796536, "no_speech_prob": 5.478643288370222e-06}, {"id": 187, "seek": 73452, "start": 746.3199999999999, "end": 752.4, "text": " In terms of reachability, my left side is reachable, my right side is not reachable,", "tokens": [682, 2115, 295, 2524, 2310, 11, 452, 1411, 1252, 307, 2524, 712, 11, 452, 558, 1252, 307, 406, 2524, 712, 11], "temperature": 0.0, "avg_logprob": -0.11206749507359096, "compression_ratio": 1.6536796536796536, "no_speech_prob": 5.478643288370222e-06}, {"id": 188, "seek": 73452, "start": 752.4, "end": 756.88, "text": " so what I can do, I don't need to do fancy hole punching, I can just do connection reversal", "tokens": [370, 437, 286, 393, 360, 11, 286, 500, 380, 643, 281, 360, 10247, 5458, 34866, 11, 286, 393, 445, 360, 4984, 42778], "temperature": 0.0, "avg_logprob": -0.11206749507359096, "compression_ratio": 1.6536796536796536, "no_speech_prob": 5.478643288370222e-06}, {"id": 189, "seek": 73452, "start": 756.88, "end": 763.72, "text": " right over the relay, where A asks B basically to dial it back over the relay.", "tokens": [558, 670, 264, 24214, 11, 689, 316, 8962, 363, 1936, 281, 5502, 309, 646, 670, 264, 24214, 13], "temperature": 0.0, "avg_logprob": -0.11206749507359096, "compression_ratio": 1.6536796536796536, "no_speech_prob": 5.478643288370222e-06}, {"id": 190, "seek": 76372, "start": 763.72, "end": 768.64, "text": " In terms of platform, we don't have direct access to the TCP or UDP socket, given that", "tokens": [682, 2115, 295, 3663, 11, 321, 500, 380, 362, 2047, 2105, 281, 264, 48965, 420, 624, 11373, 19741, 11, 2212, 300], "temperature": 0.0, "avg_logprob": -0.1275254756480724, "compression_ratio": 1.5662650602409638, "no_speech_prob": 1.4890155398461502e-05}, {"id": 191, "seek": 76372, "start": 768.64, "end": 773.4, "text": " on the right side, we have a browser in the whole stack, so that's a bummer.", "tokens": [322, 264, 558, 1252, 11, 321, 362, 257, 11185, 294, 264, 1379, 8630, 11, 370, 300, 311, 257, 13309, 936, 13], "temperature": 0.0, "avg_logprob": -0.1275254756480724, "compression_ratio": 1.5662650602409638, "no_speech_prob": 1.4890155398461502e-05}, {"id": 192, "seek": 76372, "start": 773.4, "end": 779.44, "text": " We can do web sockets in case we have a valid TLS certificate signed by some authority.", "tokens": [492, 393, 360, 3670, 370, 11984, 294, 1389, 321, 362, 257, 7363, 314, 19198, 15953, 8175, 538, 512, 8281, 13], "temperature": 0.0, "avg_logprob": -0.1275254756480724, "compression_ratio": 1.5662650602409638, "no_speech_prob": 1.4890155398461502e-05}, {"id": 193, "seek": 76372, "start": 779.44, "end": 783.36, "text": " If not, we can do web transport and WebRTC.", "tokens": [759, 406, 11, 321, 393, 360, 3670, 5495, 293, 9573, 49, 18238, 13], "temperature": 0.0, "avg_logprob": -0.1275254756480724, "compression_ratio": 1.5662650602409638, "no_speech_prob": 1.4890155398461502e-05}, {"id": 194, "seek": 76372, "start": 783.36, "end": 785.88, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.1275254756480724, "compression_ratio": 1.5662650602409638, "no_speech_prob": 1.4890155398461502e-05}, {"id": 195, "seek": 76372, "start": 785.88, "end": 791.08, "text": " And now comes the very hard part, or not very hard part, but a little bit more difficult", "tokens": [400, 586, 1487, 264, 588, 1152, 644, 11, 420, 406, 588, 1152, 644, 11, 457, 257, 707, 857, 544, 2252], "temperature": 0.0, "avg_logprob": -0.1275254756480724, "compression_ratio": 1.5662650602409638, "no_speech_prob": 1.4890155398461502e-05}, {"id": 196, "seek": 79108, "start": 791.08, "end": 799.0, "text": " part, which is private browser to private browser, or what is basically the same is,", "tokens": [644, 11, 597, 307, 4551, 11185, 281, 4551, 11185, 11, 420, 437, 307, 1936, 264, 912, 307, 11], "temperature": 0.0, "avg_logprob": -0.1751630334293141, "compression_ratio": 1.8651685393258426, "no_speech_prob": 4.677828474086709e-05}, {"id": 197, "seek": 79108, "start": 799.0, "end": 805.4000000000001, "text": " was it private non-browser to private browser, or private browser to private non-browser,", "tokens": [390, 309, 4551, 2107, 12, 1443, 30947, 281, 4551, 11185, 11, 420, 4551, 11185, 281, 4551, 2107, 12, 1443, 30947, 11], "temperature": 0.0, "avg_logprob": -0.1751630334293141, "compression_ratio": 1.8651685393258426, "no_speech_prob": 4.677828474086709e-05}, {"id": 198, "seek": 79108, "start": 805.4000000000001, "end": 809.12, "text": " all the red boxes down there.", "tokens": [439, 264, 2182, 9002, 760, 456, 13], "temperature": 0.0, "avg_logprob": -0.1751630334293141, "compression_ratio": 1.8651685393258426, "no_speech_prob": 4.677828474086709e-05}, {"id": 199, "seek": 79108, "start": 809.12, "end": 815.2, "text": " In terms of reachability, we need to leverage hole punching at this point.", "tokens": [682, 2115, 295, 2524, 2310, 11, 321, 643, 281, 13982, 5458, 34866, 412, 341, 935, 13], "temperature": 0.0, "avg_logprob": -0.1751630334293141, "compression_ratio": 1.8651685393258426, "no_speech_prob": 4.677828474086709e-05}, {"id": 200, "seek": 79108, "start": 815.2, "end": 818.88, "text": " Both end points are behind the firewall and are not.", "tokens": [6767, 917, 2793, 366, 2261, 264, 36109, 293, 366, 406, 13], "temperature": 0.0, "avg_logprob": -0.1751630334293141, "compression_ratio": 1.8651685393258426, "no_speech_prob": 4.677828474086709e-05}, {"id": 201, "seek": 81888, "start": 818.88, "end": 823.4399999999999, "text": " So again, we'll go more into details on how hole punching works.", "tokens": [407, 797, 11, 321, 603, 352, 544, 666, 4365, 322, 577, 5458, 34866, 1985, 13], "temperature": 0.0, "avg_logprob": -0.1174974623180571, "compression_ratio": 1.5490196078431373, "no_speech_prob": 7.637117050762754e-06}, {"id": 202, "seek": 81888, "start": 823.4399999999999, "end": 826.16, "text": " Probably a lot of you are really familiar with that.", "tokens": [9210, 257, 688, 295, 291, 366, 534, 4963, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.1174974623180571, "compression_ratio": 1.5490196078431373, "no_speech_prob": 7.637117050762754e-06}, {"id": 203, "seek": 81888, "start": 826.16, "end": 832.74, "text": " In terms of platforms, at least one of our two sides are behind our browsers.", "tokens": [682, 2115, 295, 9473, 11, 412, 1935, 472, 295, 527, 732, 4881, 366, 2261, 527, 36069, 13], "temperature": 0.0, "avg_logprob": -0.1174974623180571, "compression_ratio": 1.5490196078431373, "no_speech_prob": 7.637117050762754e-06}, {"id": 204, "seek": 81888, "start": 832.74, "end": 837.56, "text": " So that means we don't have access to TCP or UDP socket directly.", "tokens": [407, 300, 1355, 321, 500, 380, 362, 2105, 281, 48965, 420, 624, 11373, 19741, 3838, 13], "temperature": 0.0, "avg_logprob": -0.1174974623180571, "compression_ratio": 1.5490196078431373, "no_speech_prob": 7.637117050762754e-06}, {"id": 205, "seek": 81888, "start": 837.56, "end": 841.32, "text": " Why am I always saying no access to TCP and UDP?", "tokens": [1545, 669, 286, 1009, 1566, 572, 2105, 281, 48965, 293, 624, 11373, 30], "temperature": 0.0, "avg_logprob": -0.1174974623180571, "compression_ratio": 1.5490196078431373, "no_speech_prob": 7.637117050762754e-06}, {"id": 206, "seek": 81888, "start": 841.32, "end": 847.0, "text": " That's relevant because you don't control the ports, and this way you don't have the", "tokens": [663, 311, 7340, 570, 291, 500, 380, 1969, 264, 18160, 11, 293, 341, 636, 291, 500, 380, 362, 264], "temperature": 0.0, "avg_logprob": -0.1174974623180571, "compression_ratio": 1.5490196078431373, "no_speech_prob": 7.637117050762754e-06}, {"id": 207, "seek": 84700, "start": 847.0, "end": 849.6, "text": " capability of hole punching yourself.", "tokens": [13759, 295, 5458, 34866, 1803, 13], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 208, "seek": 84700, "start": 849.6, "end": 852.92, "text": " But what the browser gives us is WebRTC.", "tokens": [583, 437, 264, 11185, 2709, 505, 307, 9573, 49, 18238, 13], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 209, "seek": 84700, "start": 852.92, "end": 858.96, "text": " WebRTC has hole punching built in, so what we can do is leverage WebRTC and some signaling", "tokens": [9573, 49, 18238, 575, 5458, 34866, 3094, 294, 11, 370, 437, 321, 393, 360, 307, 13982, 9573, 49, 18238, 293, 512, 38639], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 210, "seek": 84700, "start": 858.96, "end": 864.6, "text": " server R in the middle to then do the actual hole punch.", "tokens": [7154, 497, 294, 264, 2808, 281, 550, 360, 264, 3539, 5458, 8135, 13], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 211, "seek": 84700, "start": 864.6, "end": 868.68, "text": " WebSockets doesn't work because we can't hole punch with WebSockets and WebTransport", "tokens": [9573, 50, 1560, 1385, 1177, 380, 589, 570, 321, 393, 380, 5458, 8135, 365, 9573, 50, 1560, 1385, 293, 9573, 33339, 2707], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 212, "seek": 84700, "start": 868.68, "end": 873.24, "text": " doesn't work either because we can't hole punch with WebTransport either.", "tokens": [1177, 380, 589, 2139, 570, 321, 393, 380, 5458, 8135, 365, 9573, 33339, 2707, 2139, 13], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 213, "seek": 84700, "start": 873.24, "end": 875.96, "text": " Okay, wonderful.", "tokens": [1033, 11, 3715, 13], "temperature": 0.0, "avg_logprob": -0.17259550961581144, "compression_ratio": 1.8525345622119815, "no_speech_prob": 2.2098551198723726e-05}, {"id": 214, "seek": 87596, "start": 875.96, "end": 882.6800000000001, "text": " And that concludes the whole matrix, and what I'm pretty much showing here is you can connect", "tokens": [400, 300, 24643, 264, 1379, 8141, 11, 293, 437, 286, 478, 1238, 709, 4099, 510, 307, 291, 393, 1745], "temperature": 0.0, "avg_logprob": -0.21768298429601332, "compression_ratio": 1.5138888888888888, "no_speech_prob": 2.245757423224859e-05}, {"id": 215, "seek": 87596, "start": 882.6800000000001, "end": 888.72, "text": " the browser to everyone out there that runs on IP, and that means your application can", "tokens": [264, 11185, 281, 1518, 484, 456, 300, 6676, 322, 8671, 11, 293, 300, 1355, 428, 3861, 393], "temperature": 0.0, "avg_logprob": -0.21768298429601332, "compression_ratio": 1.5138888888888888, "no_speech_prob": 2.245757423224859e-05}, {"id": 216, "seek": 87596, "start": 888.72, "end": 893.0400000000001, "text": " actually make the browser a first-class citizen within your network.", "tokens": [767, 652, 264, 11185, 257, 700, 12, 11665, 13326, 1951, 428, 3209, 13], "temperature": 0.0, "avg_logprob": -0.21768298429601332, "compression_ratio": 1.5138888888888888, "no_speech_prob": 2.245757423224859e-05}, {"id": 217, "seek": 87596, "start": 893.0400000000001, "end": 894.72, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.21768298429601332, "compression_ratio": 1.5138888888888888, "no_speech_prob": 2.245757423224859e-05}, {"id": 218, "seek": 87596, "start": 894.72, "end": 896.52, "text": " That's all from my end.", "tokens": [663, 311, 439, 490, 452, 917, 13], "temperature": 0.0, "avg_logprob": -0.21768298429601332, "compression_ratio": 1.5138888888888888, "no_speech_prob": 2.245757423224859e-05}, {"id": 219, "seek": 87596, "start": 896.52, "end": 902.36, "text": " Yeah, I'll be around the venue for quite a bit.", "tokens": [865, 11, 286, 603, 312, 926, 264, 21645, 337, 1596, 257, 857, 13], "temperature": 0.0, "avg_logprob": -0.21768298429601332, "compression_ratio": 1.5138888888888888, "no_speech_prob": 2.245757423224859e-05}, {"id": 220, "seek": 90236, "start": 902.36, "end": 907.64, "text": " If you want to learn more about LiPi2P in general, which makes all this nicely packaged", "tokens": [759, 291, 528, 281, 1466, 544, 466, 8349, 47, 72, 17, 47, 294, 2674, 11, 597, 1669, 439, 341, 9594, 38162], "temperature": 0.0, "avg_logprob": -0.20976240803876262, "compression_ratio": 1.6568265682656826, "no_speech_prob": 5.877357398276217e-05}, {"id": 221, "seek": 90236, "start": 907.64, "end": 911.16, "text": " for you, you can visit docs.lippi2p.io.", "tokens": [337, 291, 11, 291, 393, 3441, 45623, 13, 2081, 427, 72, 17, 79, 13, 1004, 13], "temperature": 0.0, "avg_logprob": -0.20976240803876262, "compression_ratio": 1.6568265682656826, "no_speech_prob": 5.877357398276217e-05}, {"id": 222, "seek": 90236, "start": 911.16, "end": 915.64, "text": " If you want to see all the nitty-gritty details about the different transports and what that", "tokens": [759, 291, 528, 281, 536, 439, 264, 297, 10016, 12, 861, 10016, 4365, 466, 264, 819, 5495, 82, 293, 437, 300], "temperature": 0.0, "avg_logprob": -0.20976240803876262, "compression_ratio": 1.6568265682656826, "no_speech_prob": 5.877357398276217e-05}, {"id": 223, "seek": 90236, "start": 915.64, "end": 921.72, "text": " means for, I don't know, for example, you sign TLS certificate or where you can hole punch,", "tokens": [1355, 337, 11, 286, 500, 380, 458, 11, 337, 1365, 11, 291, 1465, 314, 19198, 15953, 420, 689, 291, 393, 5458, 8135, 11], "temperature": 0.0, "avg_logprob": -0.20976240803876262, "compression_ratio": 1.6568265682656826, "no_speech_prob": 5.877357398276217e-05}, {"id": 224, "seek": 90236, "start": 921.72, "end": 924.72, "text": " that would be on connectivity.lippi2p.io.", "tokens": [300, 576, 312, 322, 21095, 13, 2081, 427, 72, 17, 79, 13, 1004, 13], "temperature": 0.0, "avg_logprob": -0.20976240803876262, "compression_ratio": 1.6568265682656826, "no_speech_prob": 5.877357398276217e-05}, {"id": 225, "seek": 90236, "start": 924.72, "end": 930.0, "text": " There are various forums, there's a specification online, and then all the implementations are", "tokens": [821, 366, 3683, 26998, 11, 456, 311, 257, 31256, 2950, 11, 293, 550, 439, 264, 4445, 763, 366], "temperature": 0.0, "avg_logprob": -0.20976240803876262, "compression_ratio": 1.6568265682656826, "no_speech_prob": 5.877357398276217e-05}, {"id": 226, "seek": 93000, "start": 930.0, "end": 935.6, "text": " open source, so you can just check that out on github.com slash lippi2p.", "tokens": [1269, 4009, 11, 370, 291, 393, 445, 1520, 300, 484, 322, 290, 355, 836, 13, 1112, 17330, 375, 427, 72, 17, 79, 13], "temperature": 0.0, "avg_logprob": -0.2759946118230405, "compression_ratio": 1.1495327102803738, "no_speech_prob": 5.814268297399394e-05}, {"id": 227, "seek": 93000, "start": 935.6, "end": 936.6, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.2759946118230405, "compression_ratio": 1.1495327102803738, "no_speech_prob": 5.814268297399394e-05}, {"id": 228, "seek": 93000, "start": 936.6, "end": 937.6, "text": " That's all from my end.", "tokens": [663, 311, 439, 490, 452, 917, 13], "temperature": 0.0, "avg_logprob": -0.2759946118230405, "compression_ratio": 1.1495327102803738, "no_speech_prob": 5.814268297399394e-05}, {"id": 229, "seek": 93760, "start": 937.6, "end": 963.12, "text": " Thank you very much.", "tokens": [50364, 1044, 291, 588, 709, 13, 51640], "temperature": 0.0, "avg_logprob": -0.5465297102928162, "compression_ratio": 0.7142857142857143, "no_speech_prob": 7.722809095866978e-05}], "language": "en"}