{"text": " Hello everyone, I'm Dylan Fiverr and I'm a research engineer at CERF Technique, a research center in Mons in Belgium. Today I will present you the software Muffin, which is a graphical tool for modeling and simulating multi-physics systems. So the project started with a research project. It is a collaboration with Thales-Alenia Space, so it's a research project funded by the Wallonia, so a public fund of Belgium. And the goal of the project is the development of a simulation method to assist in the design of mechatronic chains with a complete multi-physics model. So in other terms, what are the goals of the project? It exists different kinds of multi-physics simulations of Tuer, the global variable simulation type like OpenModelica, which simulates a system by item like a motor etc. Then we have a local variable simulation like Finite Element Simulation for a multi-physics system. And both types of simulations are not compatible with each other, so the research project tried to find another way to simulate a multi-physics model with using electrical analogous modeling. So the method we want to develop is a simulation in three points. So the first step is to convert physical system to electrical analogous system. The second step is to convert those electrical analogous model to numerical model. And the last step is reducing numerical model with evaluating the influence of each part of the system to the rest of the system. Then a second point, a more important point for our research is the Times Square Adaptive Model Reduction. So how to explain that? In a system we have a low inertia part in the system and high inertia, so low inertia part of the system are a part of the system that evolve quickly in the time and high inertia evolve slowly with the time. So when we simulate each one, we don't require the same step size, sorry. When we make a simulation, a physical simulation, we have to find an optimal step size. If we have a too large step size, the accuracy will decrease. And if we have a smaller step size, we will have a sufficient accuracy. But if the step size is too much small, the time to execute the simulation will be increased for a little gain of accuracy. So we have a multiple inertia part in a multi-physics system and we want to find a way to optimize the simulation by using different Times Square in the system. So for the project, we have some requirements when we will choose the simulation software. We need a multi-physics simulation software. This one must be adaptable so it must be able to adapt the model as a function of the condition of simulation, like the time, et cetera. And last but not least, the application must be user-friendly. So we have a simulink with MATLAB or XCOS with SILAB that would be a very, very good application for the project. That simulink is expensive, is a closed source software and not exactly adapted to our requirement. And it's a closed source software so we couldn't modify MATLAB like we wanted. And for XCOS, it's not user-friendly and like MATLAB, it doesn't exactly fit with the project requirement. So we decided to develop our own software that leverages existing powerful Python libraries. Here is an overview of our application. It is being used in a regulation system and here we have an example of results for this regulation system. So the software, it's a graphical tool for modeling and simulating multi-physics system. Here is a quick demonstration of how to use the application. So to build the simulation graph, it's just a drag-and-drop from a box library to a scheme drawing and then once the simulation graph is done, you can easily launch the simulation. We can use multiple project at the same time, save and load, project, etc. So what is the application? The application is a simulation graph builder. We have provided some default libraries to use the application if you install it on your computer but you can easily add your own process boxes and can solve all the simulations you've been building in the application. We have implemented some default simulation solvers but you can also add your custom simulation solvers. So we have here is a list of default boxes in the application. We have a math application like addition, multiplication, derivative, etc., signal processing with transfer function, etc., sources, and other like a graph displayer and also open modeling simulation embedder, etc. So if you want to install the application on your PC and want to create your own library of boxes. If we want to create our own box, we have to know that a box is defined by two files. The first one is a description file written in YAML. The second one is a code file written in Python. And there is one condition to make it as a box. It's that both files must share the same base file name. So how to create a box? I will take an example. I will create a box that displays a graphic data in a graph. The goal of the box is to display data in a two-axis plot in X-axis the time and the Y-axis the value. The box must be able to display data from one or more sources. And the graph must be displayed at the end of the simulation. There is how the box must behave during the simulation and at the end of the simulation. So how to create the box? The first step is to define the metadata of the box with the box name, the library name, version, author, and creation date, just a metadata of the box. Then we will define the characteristic of the box. What I mean by characteristic is all the inputs, all the outputs of the box and the parameters. So for the box, for the graphical box, we need three parameters, the title, the label for Y-axis and the label for X-axis. We must define the type of the parameter and we can define a default value. For the outputs, the box doesn't require any outputs. And for the inputs, we have three conditions. The first one, we have defined a default count of inputs to one. So the box, by default, will have one input. The number of inputs must be unlimited. So we must write the parameter is infinite to true. And the number of inputs must be not limited. This means we can define a range of number of inputs. So we can limit, for example, the number of inputs from one to five, for example. But in this case, we won't define any limit. The next step is to define a behavior. So to define the behavior of the box, we write a Python file. We write a Python file. When we write a Python file, we can use all of the available Python libraries. We have to define three functions. The first one, an init function. In our case, this function will init the plot. The second one is during the simulation, what will the box do? What is the process inside the box during the simulation? In our case, it's saving data. And what will the box will do after the simulation? And in our case, it's plot the data. Then the next step is to connect the description file and the code file, the Python file, to connect both. We will only have to write the name of the associated function. Then we have created a box. Now we want to add it in a library. So a library is just a collection of boxes. And in practical, a library is just a folder containing YAML file and Python file. So now a library is a folder that doesn't accept subdirectories. We can't, at the time, we can't put our file in subdirectories. It won't be recognized. So we have our folder. We add our first box with our two files, a second one, et cetera, and it's all we make a library. Another feature we added to Muffin is an IPython interaction. So Muffin can be run in an IPython session. Which means that Muffin can access to all the IPython variables, all variables declared in the IPython environment. We can use all these variables as simulation parameters. And the access to variable is dynamic. It means that if we can launch the application at the beginning of the session, declare variables in the IPython and use it dynamically. So if I launch a first simulation with some parameters, I update it after one simulation. If I launch a second simulation, the second simulation will take the new value into account for the new simulation. How to use it in an IPython session? The first step is to load the Muffin extension with the command load text. And then just run the Muffin command. Here is a demonstration of how it works. So we have firstly declared our parameter in a notebook. We will create a simulation with two assigned signals. And then we will configure all the parameters. We have implemented some information for the user. When he writes a wrong variable name, the application will give the information to the user. So here we have all of both signals, the first one at 10 hertz with an amplitude of 10. And the second one at 5 hertz with an amplitude of 7. I will launch the demonstration. Then we will update the value of the second signal, the amplitude of the second signal only, and we have a signal with the new values. We have implemented all those control features like saving and loading projects, working with multiple projects at the same time, copy and past boxes and cut also, delete in box, then cancel action, etc. So in conclusion, we have developed our own multi-physics simulation software. The advantage of this application is that the application is entirely coded in Python. So we have access to many powerful libraries like NumPy, SciPy, etc., for the application and for the custom processing boxes and simulation solvers. The application is very adaptive. What I mean by that is that you can easily implement your own custom boxes and custom simulation solvers. And the application can be associated to an IPython environment. So Mephine offers a Python alternative to Matlab plus Simulink. These advantages of the application, it's written in a scripting language. So we have a higher solving times. It's a young application at the time, so we need more time to offer a lot of features and we need more users to improve the experience. So what's next? We will have to work on compatibility. We want to make the transition from PyQt5 to PyQt6 and we want to add more interactivity with the user to improve the user friendliness of the application. Here is a list of the contributors of the project and here is the links of the project. If you want to read all the source code, you have a link to the GitLab and if you want to try the application, we have a package available on PyP. If you want to try to install it directly in your Python, you can use PIP install Mephine. So thank you for your attention. If you have some questions. You said you go through electrical analogies to make the calculation, you use the electrical equation, right? Sorry? Can you repeat? I will repeat after you. At the beginning of the presentation, you said you come from physical? Yes, we want to make a Mechatronics simulation and we want to convert all the parts of the system to electrical analogies. We don't use any, at the time we don't use any software like, sorry, I'm a bit stressed. Electrical simulation, I don't remember the name, but the cons with those software is that the model is not dynamic. We can't try a lot of sets easily, but the game of our application is to, with the time, make a box to create an interface to other multiphysics applications. We don't want to replace those applications, we just want to create an interface to those applications to use it in our research project. If I can rebound on that, because in part of the project, the idea is a lot of process can be simulated with impedance like printing, like thermistors, mechanical stuff. You have already an analog between the physical aspect and the electrical impedance stuff. My question was, do you use electrical equations because they are simpler to solve than physical equations? Sorry guys, there is a stream, if you can't hear you, you have to go through the mic. Maybe you can go instead and use the mic if you want to answer that question. Oh, you can repeat. Yeah, that would be great. If you could at least summarize. The goal of the project is to use electrical equations. The goal of the application is to improve the comprehension of the system. Do you plan to make it very untimely, or accelerate the trial process? Sorry, I don't have heard the... Can we in the future make value in the entrance, like the boxes, and change directly the value and see the code directly with its play button? Sorry, I don't have heard the question. I'm a bit... Can you do a real-time simulation? No, the simulation... Can we do a real-time simulation? For now, it's not possible. We want to implement that in the future. For now, the application, we just run the initialization function, then run the simulation and the ending function. And all the functions are run in one time. So at the time, we don't have implemented a real-time overview of the simulation. But we plan in the future to add this feature. In the beginning, you talked about the slow pass and the high inertia and lower inertia pass of your simulations. And you said that your software was designed to deal with local viable solutions and verbal viable simulations. How does that translate into what you've shown us? Where is the global viable part? So I repeat the question. I've said that we have in the system low inertia part and high inertia part. And also local viable simulation software and global viable software. And how does this translate into what you've shown us? Or does it implement it in the application? Yeah, where is it in the application? How does this concept translate into the application in showness? At the time, it's not implemented. It's the background of the project. But it leads to scheduler problems. So the idea is we want to have two schedulers. And since then at this time, you might forget all those things. Discussion can go on in the course. It's a great part of the first day. So go on with the discussion. We should switch speakers now. Thank you. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.44, "text": " Hello everyone, I'm Dylan Fiverr and I'm a research engineer at CERF Technique, a research", "tokens": [50364, 2425, 1518, 11, 286, 478, 28160, 479, 1837, 81, 293, 286, 478, 257, 2132, 11403, 412, 383, 1598, 37, 8337, 1925, 11, 257, 2132, 50986], "temperature": 0.0, "avg_logprob": -0.33866629881017346, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.06198861449956894}, {"id": 1, "seek": 0, "start": 12.44, "end": 15.44, "text": " center in Mons in Belgium.", "tokens": [50986, 3056, 294, 376, 892, 294, 28094, 13, 51136], "temperature": 0.0, "avg_logprob": -0.33866629881017346, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.06198861449956894}, {"id": 2, "seek": 0, "start": 15.44, "end": 20.72, "text": " Today I will present you the software Muffin, which is a graphical tool for modeling and", "tokens": [51136, 2692, 286, 486, 1974, 291, 264, 4722, 376, 1245, 259, 11, 597, 307, 257, 35942, 2290, 337, 15983, 293, 51400], "temperature": 0.0, "avg_logprob": -0.33866629881017346, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.06198861449956894}, {"id": 3, "seek": 0, "start": 20.72, "end": 25.400000000000002, "text": " simulating multi-physics systems.", "tokens": [51400, 1034, 12162, 4825, 12, 950, 41732, 3652, 13, 51634], "temperature": 0.0, "avg_logprob": -0.33866629881017346, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.06198861449956894}, {"id": 4, "seek": 2540, "start": 25.4, "end": 31.159999999999997, "text": " So the project started with a research project.", "tokens": [50364, 407, 264, 1716, 1409, 365, 257, 2132, 1716, 13, 50652], "temperature": 0.0, "avg_logprob": -0.2461700439453125, "compression_ratio": 1.5549132947976878, "no_speech_prob": 0.004923586267977953}, {"id": 5, "seek": 2540, "start": 31.159999999999997, "end": 40.44, "text": " It is a collaboration with Thales-Alenia Space, so it's a research project funded by the Wallonia,", "tokens": [50652, 467, 307, 257, 9363, 365, 334, 4229, 12, 32, 6698, 654, 8705, 11, 370, 309, 311, 257, 2132, 1716, 14385, 538, 264, 9551, 16999, 11, 51116], "temperature": 0.0, "avg_logprob": -0.2461700439453125, "compression_ratio": 1.5549132947976878, "no_speech_prob": 0.004923586267977953}, {"id": 6, "seek": 2540, "start": 40.44, "end": 45.4, "text": " so a public fund of Belgium.", "tokens": [51116, 370, 257, 1908, 2374, 295, 28094, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2461700439453125, "compression_ratio": 1.5549132947976878, "no_speech_prob": 0.004923586267977953}, {"id": 7, "seek": 2540, "start": 45.4, "end": 51.44, "text": " And the goal of the project is the development of a simulation method to assist in the design", "tokens": [51364, 400, 264, 3387, 295, 264, 1716, 307, 264, 3250, 295, 257, 16575, 3170, 281, 4255, 294, 264, 1715, 51666], "temperature": 0.0, "avg_logprob": -0.2461700439453125, "compression_ratio": 1.5549132947976878, "no_speech_prob": 0.004923586267977953}, {"id": 8, "seek": 5144, "start": 51.44, "end": 56.76, "text": " of mechatronic chains with a complete multi-physics model.", "tokens": [50364, 295, 385, 20057, 10011, 12626, 365, 257, 3566, 4825, 12, 950, 41732, 2316, 13, 50630], "temperature": 0.0, "avg_logprob": -0.25538990948651286, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.01713193766772747}, {"id": 9, "seek": 5144, "start": 56.76, "end": 62.959999999999994, "text": " So in other terms, what are the goals of the project?", "tokens": [50630, 407, 294, 661, 2115, 11, 437, 366, 264, 5493, 295, 264, 1716, 30, 50940], "temperature": 0.0, "avg_logprob": -0.25538990948651286, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.01713193766772747}, {"id": 10, "seek": 5144, "start": 62.959999999999994, "end": 69.6, "text": " It exists different kinds of multi-physics simulations of Tuer, the global variable simulation", "tokens": [50940, 467, 8198, 819, 3685, 295, 4825, 12, 950, 41732, 35138, 295, 314, 5486, 11, 264, 4338, 7006, 16575, 51272], "temperature": 0.0, "avg_logprob": -0.25538990948651286, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.01713193766772747}, {"id": 11, "seek": 5144, "start": 69.6, "end": 79.24, "text": " type like OpenModelica, which simulates a system by item like a motor etc.", "tokens": [51272, 2010, 411, 7238, 44, 41147, 2262, 11, 597, 1034, 26192, 257, 1185, 538, 3174, 411, 257, 5932, 5183, 13, 51754], "temperature": 0.0, "avg_logprob": -0.25538990948651286, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.01713193766772747}, {"id": 12, "seek": 7924, "start": 79.24, "end": 88.52, "text": " Then we have a local variable simulation like Finite Element Simulation for a multi-physics", "tokens": [50364, 1396, 321, 362, 257, 2654, 7006, 16575, 411, 3773, 642, 20900, 3998, 2776, 337, 257, 4825, 12, 950, 41732, 50828], "temperature": 0.0, "avg_logprob": -0.26568557905114215, "compression_ratio": 1.4233576642335766, "no_speech_prob": 0.0009193542646244168}, {"id": 13, "seek": 7924, "start": 88.52, "end": 90.39999999999999, "text": " system.", "tokens": [50828, 1185, 13, 50922], "temperature": 0.0, "avg_logprob": -0.26568557905114215, "compression_ratio": 1.4233576642335766, "no_speech_prob": 0.0009193542646244168}, {"id": 14, "seek": 7924, "start": 90.39999999999999, "end": 98.88, "text": " And both types of simulations are not compatible with each other, so the research project tried", "tokens": [50922, 400, 1293, 3467, 295, 35138, 366, 406, 18218, 365, 1184, 661, 11, 370, 264, 2132, 1716, 3031, 51346], "temperature": 0.0, "avg_logprob": -0.26568557905114215, "compression_ratio": 1.4233576642335766, "no_speech_prob": 0.0009193542646244168}, {"id": 15, "seek": 9888, "start": 98.88, "end": 114.88, "text": " to find another way to simulate a multi-physics model with using electrical analogous modeling.", "tokens": [50364, 281, 915, 1071, 636, 281, 27817, 257, 4825, 12, 950, 41732, 2316, 365, 1228, 12147, 16660, 563, 15983, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1207992604800633, "compression_ratio": 1.6283783783783783, "no_speech_prob": 0.015163082629442215}, {"id": 16, "seek": 9888, "start": 114.88, "end": 119.84, "text": " So the method we want to develop is a simulation in three points.", "tokens": [51164, 407, 264, 3170, 321, 528, 281, 1499, 307, 257, 16575, 294, 1045, 2793, 13, 51412], "temperature": 0.0, "avg_logprob": -0.1207992604800633, "compression_ratio": 1.6283783783783783, "no_speech_prob": 0.015163082629442215}, {"id": 17, "seek": 9888, "start": 119.84, "end": 126.67999999999999, "text": " So the first step is to convert physical system to electrical analogous system.", "tokens": [51412, 407, 264, 700, 1823, 307, 281, 7620, 4001, 1185, 281, 12147, 16660, 563, 1185, 13, 51754], "temperature": 0.0, "avg_logprob": -0.1207992604800633, "compression_ratio": 1.6283783783783783, "no_speech_prob": 0.015163082629442215}, {"id": 18, "seek": 12668, "start": 126.68, "end": 133.64000000000001, "text": " The second step is to convert those electrical analogous model to numerical model.", "tokens": [50364, 440, 1150, 1823, 307, 281, 7620, 729, 12147, 16660, 563, 2316, 281, 29054, 2316, 13, 50712], "temperature": 0.0, "avg_logprob": -0.1770614186922709, "compression_ratio": 1.593984962406015, "no_speech_prob": 0.018660619854927063}, {"id": 19, "seek": 12668, "start": 133.64000000000001, "end": 141.84, "text": " And the last step is reducing numerical model with evaluating the influence of each part", "tokens": [50712, 400, 264, 1036, 1823, 307, 12245, 29054, 2316, 365, 27479, 264, 6503, 295, 1184, 644, 51122], "temperature": 0.0, "avg_logprob": -0.1770614186922709, "compression_ratio": 1.593984962406015, "no_speech_prob": 0.018660619854927063}, {"id": 20, "seek": 12668, "start": 141.84, "end": 147.28, "text": " of the system to the rest of the system.", "tokens": [51122, 295, 264, 1185, 281, 264, 1472, 295, 264, 1185, 13, 51394], "temperature": 0.0, "avg_logprob": -0.1770614186922709, "compression_ratio": 1.593984962406015, "no_speech_prob": 0.018660619854927063}, {"id": 21, "seek": 14728, "start": 147.28, "end": 156.2, "text": " Then a second point, a more important point for our research is the Times Square Adaptive", "tokens": [50364, 1396, 257, 1150, 935, 11, 257, 544, 1021, 935, 337, 527, 2132, 307, 264, 11366, 16463, 49643, 488, 50810], "temperature": 0.0, "avg_logprob": -0.3104651267068428, "compression_ratio": 1.4496644295302012, "no_speech_prob": 0.50179123878479}, {"id": 22, "seek": 14728, "start": 156.2, "end": 157.92000000000002, "text": " Model Reduction.", "tokens": [50810, 17105, 4477, 27549, 13, 50896], "temperature": 0.0, "avg_logprob": -0.3104651267068428, "compression_ratio": 1.4496644295302012, "no_speech_prob": 0.50179123878479}, {"id": 23, "seek": 14728, "start": 157.92000000000002, "end": 159.96, "text": " So how to explain that?", "tokens": [50896, 407, 577, 281, 2903, 300, 30, 50998], "temperature": 0.0, "avg_logprob": -0.3104651267068428, "compression_ratio": 1.4496644295302012, "no_speech_prob": 0.50179123878479}, {"id": 24, "seek": 14728, "start": 159.96, "end": 169.52, "text": " In a system we have a low inertia part in the system and high inertia, so low inertia", "tokens": [50998, 682, 257, 1185, 321, 362, 257, 2295, 37234, 644, 294, 264, 1185, 293, 1090, 37234, 11, 370, 2295, 37234, 51476], "temperature": 0.0, "avg_logprob": -0.3104651267068428, "compression_ratio": 1.4496644295302012, "no_speech_prob": 0.50179123878479}, {"id": 25, "seek": 16952, "start": 169.52, "end": 179.4, "text": " part of the system are a part of the system that evolve quickly in the time and high inertia", "tokens": [50364, 644, 295, 264, 1185, 366, 257, 644, 295, 264, 1185, 300, 16693, 2661, 294, 264, 565, 293, 1090, 37234, 50858], "temperature": 0.0, "avg_logprob": -0.2718190772860658, "compression_ratio": 1.4885496183206106, "no_speech_prob": 0.15610001981258392}, {"id": 26, "seek": 16952, "start": 179.4, "end": 183.24, "text": " evolve slowly with the time.", "tokens": [50858, 16693, 5692, 365, 264, 565, 13, 51050], "temperature": 0.0, "avg_logprob": -0.2718190772860658, "compression_ratio": 1.4885496183206106, "no_speech_prob": 0.15610001981258392}, {"id": 27, "seek": 16952, "start": 183.24, "end": 198.0, "text": " So when we simulate each one, we don't require the same step size, sorry.", "tokens": [51050, 407, 562, 321, 27817, 1184, 472, 11, 321, 500, 380, 3651, 264, 912, 1823, 2744, 11, 2597, 13, 51788], "temperature": 0.0, "avg_logprob": -0.2718190772860658, "compression_ratio": 1.4885496183206106, "no_speech_prob": 0.15610001981258392}, {"id": 28, "seek": 19800, "start": 198.0, "end": 205.12, "text": " When we make a simulation, a physical simulation, we have to find an optimal step size.", "tokens": [50364, 1133, 321, 652, 257, 16575, 11, 257, 4001, 16575, 11, 321, 362, 281, 915, 364, 16252, 1823, 2744, 13, 50720], "temperature": 0.0, "avg_logprob": -0.1663223413320688, "compression_ratio": 1.8150289017341041, "no_speech_prob": 0.21479880809783936}, {"id": 29, "seek": 19800, "start": 205.12, "end": 211.36, "text": " If we have a too large step size, the accuracy will decrease.", "tokens": [50720, 759, 321, 362, 257, 886, 2416, 1823, 2744, 11, 264, 14170, 486, 11514, 13, 51032], "temperature": 0.0, "avg_logprob": -0.1663223413320688, "compression_ratio": 1.8150289017341041, "no_speech_prob": 0.21479880809783936}, {"id": 30, "seek": 19800, "start": 211.36, "end": 216.72, "text": " And if we have a smaller step size, we will have a sufficient accuracy.", "tokens": [51032, 400, 498, 321, 362, 257, 4356, 1823, 2744, 11, 321, 486, 362, 257, 11563, 14170, 13, 51300], "temperature": 0.0, "avg_logprob": -0.1663223413320688, "compression_ratio": 1.8150289017341041, "no_speech_prob": 0.21479880809783936}, {"id": 31, "seek": 19800, "start": 216.72, "end": 227.72, "text": " But if the step size is too much small, the time to execute the simulation will be increased", "tokens": [51300, 583, 498, 264, 1823, 2744, 307, 886, 709, 1359, 11, 264, 565, 281, 14483, 264, 16575, 486, 312, 6505, 51850], "temperature": 0.0, "avg_logprob": -0.1663223413320688, "compression_ratio": 1.8150289017341041, "no_speech_prob": 0.21479880809783936}, {"id": 32, "seek": 22772, "start": 227.72, "end": 231.96, "text": " for a little gain of accuracy.", "tokens": [50364, 337, 257, 707, 6052, 295, 14170, 13, 50576], "temperature": 0.0, "avg_logprob": -0.2083259310041155, "compression_ratio": 1.4044117647058822, "no_speech_prob": 0.00760838994756341}, {"id": 33, "seek": 22772, "start": 231.96, "end": 242.84, "text": " So we have a multiple inertia part in a multi-physics system and we want to find a way to optimize", "tokens": [50576, 407, 321, 362, 257, 3866, 37234, 644, 294, 257, 4825, 12, 950, 41732, 1185, 293, 321, 528, 281, 915, 257, 636, 281, 19719, 51120], "temperature": 0.0, "avg_logprob": -0.2083259310041155, "compression_ratio": 1.4044117647058822, "no_speech_prob": 0.00760838994756341}, {"id": 34, "seek": 22772, "start": 242.84, "end": 250.4, "text": " the simulation by using different Times Square in the system.", "tokens": [51120, 264, 16575, 538, 1228, 819, 11366, 16463, 294, 264, 1185, 13, 51498], "temperature": 0.0, "avg_logprob": -0.2083259310041155, "compression_ratio": 1.4044117647058822, "no_speech_prob": 0.00760838994756341}, {"id": 35, "seek": 25040, "start": 250.4, "end": 262.96, "text": " So for the project, we have some requirements when we will choose the simulation software.", "tokens": [50364, 407, 337, 264, 1716, 11, 321, 362, 512, 7728, 562, 321, 486, 2826, 264, 16575, 4722, 13, 50992], "temperature": 0.0, "avg_logprob": -0.21025345542214133, "compression_ratio": 1.5673758865248226, "no_speech_prob": 0.0047057028859853745}, {"id": 36, "seek": 25040, "start": 262.96, "end": 266.76, "text": " We need a multi-physics simulation software.", "tokens": [50992, 492, 643, 257, 4825, 12, 950, 41732, 16575, 4722, 13, 51182], "temperature": 0.0, "avg_logprob": -0.21025345542214133, "compression_ratio": 1.5673758865248226, "no_speech_prob": 0.0047057028859853745}, {"id": 37, "seek": 25040, "start": 266.76, "end": 280.28000000000003, "text": " This one must be adaptable so it must be able to adapt the model as a function of the", "tokens": [51182, 639, 472, 1633, 312, 6231, 712, 370, 309, 1633, 312, 1075, 281, 6231, 264, 2316, 382, 257, 2445, 295, 264, 51858], "temperature": 0.0, "avg_logprob": -0.21025345542214133, "compression_ratio": 1.5673758865248226, "no_speech_prob": 0.0047057028859853745}, {"id": 38, "seek": 28028, "start": 280.88, "end": 285.71999999999997, "text": " condition of simulation, like the time, et cetera.", "tokens": [50394, 4188, 295, 16575, 11, 411, 264, 565, 11, 1030, 11458, 13, 50636], "temperature": 0.0, "avg_logprob": -0.32093867970936335, "compression_ratio": 1.3841463414634145, "no_speech_prob": 0.009870784357190132}, {"id": 39, "seek": 28028, "start": 285.71999999999997, "end": 291.91999999999996, "text": " And last but not least, the application must be user-friendly.", "tokens": [50636, 400, 1036, 457, 406, 1935, 11, 264, 3861, 1633, 312, 4195, 12, 22864, 13, 50946], "temperature": 0.0, "avg_logprob": -0.32093867970936335, "compression_ratio": 1.3841463414634145, "no_speech_prob": 0.009870784357190132}, {"id": 40, "seek": 28028, "start": 291.91999999999996, "end": 301.08, "text": " So we have a simulink with MATLAB or XCOS with SILAB that would be a very, very good", "tokens": [50946, 407, 321, 362, 257, 1034, 425, 475, 365, 5904, 11435, 33, 420, 1783, 34, 4367, 365, 318, 4620, 13868, 300, 576, 312, 257, 588, 11, 588, 665, 51404], "temperature": 0.0, "avg_logprob": -0.32093867970936335, "compression_ratio": 1.3841463414634145, "no_speech_prob": 0.009870784357190132}, {"id": 41, "seek": 28028, "start": 301.08, "end": 307.23999999999995, "text": " application for the project.", "tokens": [51404, 3861, 337, 264, 1716, 13, 51712], "temperature": 0.0, "avg_logprob": -0.32093867970936335, "compression_ratio": 1.3841463414634145, "no_speech_prob": 0.009870784357190132}, {"id": 42, "seek": 30724, "start": 307.24, "end": 319.36, "text": " That simulink is expensive, is a closed source software and not exactly adapted to our requirement.", "tokens": [50364, 663, 1034, 425, 475, 307, 5124, 11, 307, 257, 5395, 4009, 4722, 293, 406, 2293, 20871, 281, 527, 11695, 13, 50970], "temperature": 0.0, "avg_logprob": -0.23708019008884182, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.04824555665254593}, {"id": 43, "seek": 30724, "start": 319.36, "end": 328.52, "text": " And it's a closed source software so we couldn't modify MATLAB like we wanted.", "tokens": [50970, 400, 309, 311, 257, 5395, 4009, 4722, 370, 321, 2809, 380, 16927, 5904, 11435, 33, 411, 321, 1415, 13, 51428], "temperature": 0.0, "avg_logprob": -0.23708019008884182, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.04824555665254593}, {"id": 44, "seek": 30724, "start": 328.52, "end": 335.08, "text": " And for XCOS, it's not user-friendly and like MATLAB, it doesn't exactly fit with the", "tokens": [51428, 400, 337, 1783, 34, 4367, 11, 309, 311, 406, 4195, 12, 22864, 293, 411, 5904, 11435, 33, 11, 309, 1177, 380, 2293, 3318, 365, 264, 51756], "temperature": 0.0, "avg_logprob": -0.23708019008884182, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.04824555665254593}, {"id": 45, "seek": 30724, "start": 335.08, "end": 336.64, "text": " project requirement.", "tokens": [51756, 1716, 11695, 13, 51834], "temperature": 0.0, "avg_logprob": -0.23708019008884182, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.04824555665254593}, {"id": 46, "seek": 33664, "start": 336.64, "end": 346.59999999999997, "text": " So we decided to develop our own software that leverages existing powerful Python libraries.", "tokens": [50364, 407, 321, 3047, 281, 1499, 527, 1065, 4722, 300, 12451, 1660, 6741, 4005, 15329, 15148, 13, 50862], "temperature": 0.0, "avg_logprob": -0.24006614685058594, "compression_ratio": 1.484472049689441, "no_speech_prob": 0.0019578002393245697}, {"id": 47, "seek": 33664, "start": 346.59999999999997, "end": 350.88, "text": " Here is an overview of our application.", "tokens": [50862, 1692, 307, 364, 12492, 295, 527, 3861, 13, 51076], "temperature": 0.0, "avg_logprob": -0.24006614685058594, "compression_ratio": 1.484472049689441, "no_speech_prob": 0.0019578002393245697}, {"id": 48, "seek": 33664, "start": 350.88, "end": 358.91999999999996, "text": " It is being used in a regulation system and here we have an example of results for this", "tokens": [51076, 467, 307, 885, 1143, 294, 257, 15062, 1185, 293, 510, 321, 362, 364, 1365, 295, 3542, 337, 341, 51478], "temperature": 0.0, "avg_logprob": -0.24006614685058594, "compression_ratio": 1.484472049689441, "no_speech_prob": 0.0019578002393245697}, {"id": 49, "seek": 33664, "start": 358.91999999999996, "end": 361.91999999999996, "text": " regulation system.", "tokens": [51478, 15062, 1185, 13, 51628], "temperature": 0.0, "avg_logprob": -0.24006614685058594, "compression_ratio": 1.484472049689441, "no_speech_prob": 0.0019578002393245697}, {"id": 50, "seek": 36192, "start": 361.92, "end": 370.44, "text": " So the software, it's a graphical tool for modeling and simulating multi-physics system.", "tokens": [50364, 407, 264, 4722, 11, 309, 311, 257, 35942, 2290, 337, 15983, 293, 1034, 12162, 4825, 12, 950, 41732, 1185, 13, 50790], "temperature": 0.0, "avg_logprob": -0.20979275779118614, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0032514671329408884}, {"id": 51, "seek": 36192, "start": 370.44, "end": 377.84000000000003, "text": " Here is a quick demonstration of how to use the application.", "tokens": [50790, 1692, 307, 257, 1702, 16520, 295, 577, 281, 764, 264, 3861, 13, 51160], "temperature": 0.0, "avg_logprob": -0.20979275779118614, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0032514671329408884}, {"id": 52, "seek": 36192, "start": 377.84000000000003, "end": 386.8, "text": " So to build the simulation graph, it's just a drag-and-drop from a box library to a scheme", "tokens": [51160, 407, 281, 1322, 264, 16575, 4295, 11, 309, 311, 445, 257, 5286, 12, 474, 12, 23332, 490, 257, 2424, 6405, 281, 257, 12232, 51608], "temperature": 0.0, "avg_logprob": -0.20979275779118614, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0032514671329408884}, {"id": 53, "seek": 38680, "start": 386.8, "end": 397.16, "text": " drawing and then once the simulation graph is done, you can easily launch the simulation.", "tokens": [50364, 6316, 293, 550, 1564, 264, 16575, 4295, 307, 1096, 11, 291, 393, 3612, 4025, 264, 16575, 13, 50882], "temperature": 0.0, "avg_logprob": -0.1877393075975321, "compression_ratio": 1.614864864864865, "no_speech_prob": 0.015045499429106712}, {"id": 54, "seek": 38680, "start": 397.16, "end": 406.44, "text": " We can use multiple project at the same time, save and load, project, etc.", "tokens": [50882, 492, 393, 764, 3866, 1716, 412, 264, 912, 565, 11, 3155, 293, 3677, 11, 1716, 11, 5183, 13, 51346], "temperature": 0.0, "avg_logprob": -0.1877393075975321, "compression_ratio": 1.614864864864865, "no_speech_prob": 0.015045499429106712}, {"id": 55, "seek": 38680, "start": 406.44, "end": 409.12, "text": " So what is the application?", "tokens": [51346, 407, 437, 307, 264, 3861, 30, 51480], "temperature": 0.0, "avg_logprob": -0.1877393075975321, "compression_ratio": 1.614864864864865, "no_speech_prob": 0.015045499429106712}, {"id": 56, "seek": 38680, "start": 409.12, "end": 412.56, "text": " The application is a simulation graph builder.", "tokens": [51480, 440, 3861, 307, 257, 16575, 4295, 27377, 13, 51652], "temperature": 0.0, "avg_logprob": -0.1877393075975321, "compression_ratio": 1.614864864864865, "no_speech_prob": 0.015045499429106712}, {"id": 57, "seek": 41256, "start": 412.56, "end": 423.16, "text": " We have provided some default libraries to use the application if you install it on your", "tokens": [50364, 492, 362, 5649, 512, 7576, 15148, 281, 764, 264, 3861, 498, 291, 3625, 309, 322, 428, 50894], "temperature": 0.0, "avg_logprob": -0.17200207710266113, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.021162496879696846}, {"id": 58, "seek": 41256, "start": 423.16, "end": 438.52, "text": " computer but you can easily add your own process boxes and can solve all the simulations you've", "tokens": [50894, 3820, 457, 291, 393, 3612, 909, 428, 1065, 1399, 9002, 293, 393, 5039, 439, 264, 35138, 291, 600, 51662], "temperature": 0.0, "avg_logprob": -0.17200207710266113, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.021162496879696846}, {"id": 59, "seek": 41256, "start": 438.52, "end": 441.22, "text": " been building in the application.", "tokens": [51662, 668, 2390, 294, 264, 3861, 13, 51797], "temperature": 0.0, "avg_logprob": -0.17200207710266113, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.021162496879696846}, {"id": 60, "seek": 44122, "start": 441.22, "end": 448.18, "text": " We have implemented some default simulation solvers but you can also add your custom simulation", "tokens": [50364, 492, 362, 12270, 512, 7576, 16575, 1404, 840, 457, 291, 393, 611, 909, 428, 2375, 16575, 50712], "temperature": 0.0, "avg_logprob": -0.24209998825849113, "compression_ratio": 1.6211180124223603, "no_speech_prob": 0.008090456016361713}, {"id": 61, "seek": 44122, "start": 448.18, "end": 452.46000000000004, "text": " solvers.", "tokens": [50712, 1404, 840, 13, 50926], "temperature": 0.0, "avg_logprob": -0.24209998825849113, "compression_ratio": 1.6211180124223603, "no_speech_prob": 0.008090456016361713}, {"id": 62, "seek": 44122, "start": 452.46000000000004, "end": 460.38000000000005, "text": " So we have here is a list of default boxes in the application.", "tokens": [50926, 407, 321, 362, 510, 307, 257, 1329, 295, 7576, 9002, 294, 264, 3861, 13, 51322], "temperature": 0.0, "avg_logprob": -0.24209998825849113, "compression_ratio": 1.6211180124223603, "no_speech_prob": 0.008090456016361713}, {"id": 63, "seek": 44122, "start": 460.38000000000005, "end": 466.5, "text": " We have a math application like addition, multiplication, derivative, etc., signal processing", "tokens": [51322, 492, 362, 257, 5221, 3861, 411, 4500, 11, 27290, 11, 13760, 11, 5183, 7933, 6358, 9007, 51628], "temperature": 0.0, "avg_logprob": -0.24209998825849113, "compression_ratio": 1.6211180124223603, "no_speech_prob": 0.008090456016361713}, {"id": 64, "seek": 46650, "start": 466.5, "end": 475.62, "text": " with transfer function, etc., sources, and other like a graph displayer and also open", "tokens": [50364, 365, 5003, 2445, 11, 5183, 7933, 7139, 11, 293, 661, 411, 257, 4295, 4674, 260, 293, 611, 1269, 50820], "temperature": 0.0, "avg_logprob": -0.274010385785784, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.011493206955492496}, {"id": 65, "seek": 46650, "start": 475.62, "end": 481.14, "text": " modeling simulation embedder, etc.", "tokens": [50820, 15983, 16575, 12240, 1068, 11, 5183, 13, 51096], "temperature": 0.0, "avg_logprob": -0.274010385785784, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.011493206955492496}, {"id": 66, "seek": 46650, "start": 481.14, "end": 487.7, "text": " So if you want to install the application on your PC and want to create your own library", "tokens": [51096, 407, 498, 291, 528, 281, 3625, 264, 3861, 322, 428, 6465, 293, 528, 281, 1884, 428, 1065, 6405, 51424], "temperature": 0.0, "avg_logprob": -0.274010385785784, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.011493206955492496}, {"id": 67, "seek": 46650, "start": 487.7, "end": 493.1, "text": " of boxes.", "tokens": [51424, 295, 9002, 13, 51694], "temperature": 0.0, "avg_logprob": -0.274010385785784, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.011493206955492496}, {"id": 68, "seek": 49310, "start": 493.1, "end": 504.66, "text": " If we want to create our own box, we have to know that a box is defined by two files.", "tokens": [50364, 759, 321, 528, 281, 1884, 527, 1065, 2424, 11, 321, 362, 281, 458, 300, 257, 2424, 307, 7642, 538, 732, 7098, 13, 50942], "temperature": 0.0, "avg_logprob": -0.171906078563017, "compression_ratio": 1.525974025974026, "no_speech_prob": 0.09981126338243484}, {"id": 69, "seek": 49310, "start": 504.66, "end": 509.58000000000004, "text": " The first one is a description file written in YAML.", "tokens": [50942, 440, 700, 472, 307, 257, 3855, 3991, 3720, 294, 398, 2865, 43, 13, 51188], "temperature": 0.0, "avg_logprob": -0.171906078563017, "compression_ratio": 1.525974025974026, "no_speech_prob": 0.09981126338243484}, {"id": 70, "seek": 49310, "start": 509.58000000000004, "end": 515.4200000000001, "text": " The second one is a code file written in Python.", "tokens": [51188, 440, 1150, 472, 307, 257, 3089, 3991, 3720, 294, 15329, 13, 51480], "temperature": 0.0, "avg_logprob": -0.171906078563017, "compression_ratio": 1.525974025974026, "no_speech_prob": 0.09981126338243484}, {"id": 71, "seek": 49310, "start": 515.4200000000001, "end": 521.38, "text": " And there is one condition to make it as a box.", "tokens": [51480, 400, 456, 307, 472, 4188, 281, 652, 309, 382, 257, 2424, 13, 51778], "temperature": 0.0, "avg_logprob": -0.171906078563017, "compression_ratio": 1.525974025974026, "no_speech_prob": 0.09981126338243484}, {"id": 72, "seek": 52138, "start": 521.38, "end": 528.22, "text": " It's that both files must share the same base file name.", "tokens": [50364, 467, 311, 300, 1293, 7098, 1633, 2073, 264, 912, 3096, 3991, 1315, 13, 50706], "temperature": 0.0, "avg_logprob": -0.2683201026916504, "compression_ratio": 1.3983050847457628, "no_speech_prob": 0.10436920076608658}, {"id": 73, "seek": 52138, "start": 528.22, "end": 530.22, "text": " So how to create a box?", "tokens": [50706, 407, 577, 281, 1884, 257, 2424, 30, 50806], "temperature": 0.0, "avg_logprob": -0.2683201026916504, "compression_ratio": 1.3983050847457628, "no_speech_prob": 0.10436920076608658}, {"id": 74, "seek": 52138, "start": 530.22, "end": 531.46, "text": " I will take an example.", "tokens": [50806, 286, 486, 747, 364, 1365, 13, 50868], "temperature": 0.0, "avg_logprob": -0.2683201026916504, "compression_ratio": 1.3983050847457628, "no_speech_prob": 0.10436920076608658}, {"id": 75, "seek": 52138, "start": 531.46, "end": 541.86, "text": " I will create a box that displays a graphic data in a graph.", "tokens": [50868, 286, 486, 1884, 257, 2424, 300, 20119, 257, 14089, 1412, 294, 257, 4295, 13, 51388], "temperature": 0.0, "avg_logprob": -0.2683201026916504, "compression_ratio": 1.3983050847457628, "no_speech_prob": 0.10436920076608658}, {"id": 76, "seek": 54186, "start": 541.86, "end": 552.38, "text": " The goal of the box is to display data in a two-axis plot in X-axis the time and the", "tokens": [50364, 440, 3387, 295, 264, 2424, 307, 281, 4674, 1412, 294, 257, 732, 12, 24633, 7542, 294, 1783, 12, 24633, 264, 565, 293, 264, 50890], "temperature": 0.0, "avg_logprob": -0.21354760545672793, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.3710833191871643}, {"id": 77, "seek": 54186, "start": 552.38, "end": 555.62, "text": " Y-axis the value.", "tokens": [50890, 398, 12, 24633, 264, 2158, 13, 51052], "temperature": 0.0, "avg_logprob": -0.21354760545672793, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.3710833191871643}, {"id": 78, "seek": 54186, "start": 555.62, "end": 562.42, "text": " The box must be able to display data from one or more sources.", "tokens": [51052, 440, 2424, 1633, 312, 1075, 281, 4674, 1412, 490, 472, 420, 544, 7139, 13, 51392], "temperature": 0.0, "avg_logprob": -0.21354760545672793, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.3710833191871643}, {"id": 79, "seek": 54186, "start": 562.42, "end": 569.38, "text": " And the graph must be displayed at the end of the simulation.", "tokens": [51392, 400, 264, 4295, 1633, 312, 16372, 412, 264, 917, 295, 264, 16575, 13, 51740], "temperature": 0.0, "avg_logprob": -0.21354760545672793, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.3710833191871643}, {"id": 80, "seek": 56938, "start": 569.38, "end": 577.7, "text": " There is how the box must behave during the simulation and at the end of the simulation.", "tokens": [50364, 821, 307, 577, 264, 2424, 1633, 15158, 1830, 264, 16575, 293, 412, 264, 917, 295, 264, 16575, 13, 50780], "temperature": 0.0, "avg_logprob": -0.20417547225952148, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.12969167530536652}, {"id": 81, "seek": 56938, "start": 577.7, "end": 579.62, "text": " So how to create the box?", "tokens": [50780, 407, 577, 281, 1884, 264, 2424, 30, 50876], "temperature": 0.0, "avg_logprob": -0.20417547225952148, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.12969167530536652}, {"id": 82, "seek": 56938, "start": 579.62, "end": 586.7, "text": " The first step is to define the metadata of the box with the box name, the library name,", "tokens": [50876, 440, 700, 1823, 307, 281, 6964, 264, 26603, 295, 264, 2424, 365, 264, 2424, 1315, 11, 264, 6405, 1315, 11, 51230], "temperature": 0.0, "avg_logprob": -0.20417547225952148, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.12969167530536652}, {"id": 83, "seek": 56938, "start": 586.7, "end": 594.38, "text": " version, author, and creation date, just a metadata of the box.", "tokens": [51230, 3037, 11, 3793, 11, 293, 8016, 4002, 11, 445, 257, 26603, 295, 264, 2424, 13, 51614], "temperature": 0.0, "avg_logprob": -0.20417547225952148, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.12969167530536652}, {"id": 84, "seek": 59438, "start": 594.38, "end": 599.38, "text": " Then we will define the characteristic of the box.", "tokens": [50364, 1396, 321, 486, 6964, 264, 16282, 295, 264, 2424, 13, 50614], "temperature": 0.0, "avg_logprob": -0.14616506629519993, "compression_ratio": 1.7467532467532467, "no_speech_prob": 0.32447025179862976}, {"id": 85, "seek": 59438, "start": 599.38, "end": 606.78, "text": " What I mean by characteristic is all the inputs, all the outputs of the box and the parameters.", "tokens": [50614, 708, 286, 914, 538, 16282, 307, 439, 264, 15743, 11, 439, 264, 23930, 295, 264, 2424, 293, 264, 9834, 13, 50984], "temperature": 0.0, "avg_logprob": -0.14616506629519993, "compression_ratio": 1.7467532467532467, "no_speech_prob": 0.32447025179862976}, {"id": 86, "seek": 59438, "start": 606.78, "end": 615.22, "text": " So for the box, for the graphical box, we need three parameters, the title, the label", "tokens": [50984, 407, 337, 264, 2424, 11, 337, 264, 35942, 2424, 11, 321, 643, 1045, 9834, 11, 264, 4876, 11, 264, 7645, 51406], "temperature": 0.0, "avg_logprob": -0.14616506629519993, "compression_ratio": 1.7467532467532467, "no_speech_prob": 0.32447025179862976}, {"id": 87, "seek": 59438, "start": 615.22, "end": 620.3, "text": " for Y-axis and the label for X-axis.", "tokens": [51406, 337, 398, 12, 24633, 293, 264, 7645, 337, 1783, 12, 24633, 13, 51660], "temperature": 0.0, "avg_logprob": -0.14616506629519993, "compression_ratio": 1.7467532467532467, "no_speech_prob": 0.32447025179862976}, {"id": 88, "seek": 62030, "start": 620.3, "end": 630.18, "text": " We must define the type of the parameter and we can define a default value.", "tokens": [50364, 492, 1633, 6964, 264, 2010, 295, 264, 13075, 293, 321, 393, 6964, 257, 7576, 2158, 13, 50858], "temperature": 0.0, "avg_logprob": -0.1469039311484685, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.04057471826672554}, {"id": 89, "seek": 62030, "start": 630.18, "end": 634.54, "text": " For the outputs, the box doesn't require any outputs.", "tokens": [50858, 1171, 264, 23930, 11, 264, 2424, 1177, 380, 3651, 604, 23930, 13, 51076], "temperature": 0.0, "avg_logprob": -0.1469039311484685, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.04057471826672554}, {"id": 90, "seek": 62030, "start": 634.54, "end": 638.42, "text": " And for the inputs, we have three conditions.", "tokens": [51076, 400, 337, 264, 15743, 11, 321, 362, 1045, 4487, 13, 51270], "temperature": 0.0, "avg_logprob": -0.1469039311484685, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.04057471826672554}, {"id": 91, "seek": 62030, "start": 638.42, "end": 644.4599999999999, "text": " The first one, we have defined a default count of inputs to one.", "tokens": [51270, 440, 700, 472, 11, 321, 362, 7642, 257, 7576, 1207, 295, 15743, 281, 472, 13, 51572], "temperature": 0.0, "avg_logprob": -0.1469039311484685, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.04057471826672554}, {"id": 92, "seek": 64446, "start": 644.46, "end": 651.38, "text": " So the box, by default, will have one input.", "tokens": [50364, 407, 264, 2424, 11, 538, 7576, 11, 486, 362, 472, 4846, 13, 50710], "temperature": 0.0, "avg_logprob": -0.19761235106225108, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.05684828385710716}, {"id": 93, "seek": 64446, "start": 651.38, "end": 654.5, "text": " The number of inputs must be unlimited.", "tokens": [50710, 440, 1230, 295, 15743, 1633, 312, 21950, 13, 50866], "temperature": 0.0, "avg_logprob": -0.19761235106225108, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.05684828385710716}, {"id": 94, "seek": 64446, "start": 654.5, "end": 662.46, "text": " So we must write the parameter is infinite to true.", "tokens": [50866, 407, 321, 1633, 2464, 264, 13075, 307, 13785, 281, 2074, 13, 51264], "temperature": 0.0, "avg_logprob": -0.19761235106225108, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.05684828385710716}, {"id": 95, "seek": 64446, "start": 662.46, "end": 667.82, "text": " And the number of inputs must be not limited.", "tokens": [51264, 400, 264, 1230, 295, 15743, 1633, 312, 406, 5567, 13, 51532], "temperature": 0.0, "avg_logprob": -0.19761235106225108, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.05684828385710716}, {"id": 96, "seek": 66782, "start": 667.82, "end": 672.9000000000001, "text": " This means we can define a range of number of inputs.", "tokens": [50364, 639, 1355, 321, 393, 6964, 257, 3613, 295, 1230, 295, 15743, 13, 50618], "temperature": 0.0, "avg_logprob": -0.15389060974121094, "compression_ratio": 1.6927710843373494, "no_speech_prob": 0.006036257371306419}, {"id": 97, "seek": 66782, "start": 672.9000000000001, "end": 679.5400000000001, "text": " So we can limit, for example, the number of inputs from one to five, for example.", "tokens": [50618, 407, 321, 393, 4948, 11, 337, 1365, 11, 264, 1230, 295, 15743, 490, 472, 281, 1732, 11, 337, 1365, 13, 50950], "temperature": 0.0, "avg_logprob": -0.15389060974121094, "compression_ratio": 1.6927710843373494, "no_speech_prob": 0.006036257371306419}, {"id": 98, "seek": 66782, "start": 679.5400000000001, "end": 684.7, "text": " But in this case, we won't define any limit.", "tokens": [50950, 583, 294, 341, 1389, 11, 321, 1582, 380, 6964, 604, 4948, 13, 51208], "temperature": 0.0, "avg_logprob": -0.15389060974121094, "compression_ratio": 1.6927710843373494, "no_speech_prob": 0.006036257371306419}, {"id": 99, "seek": 66782, "start": 684.7, "end": 689.5400000000001, "text": " The next step is to define a behavior.", "tokens": [51208, 440, 958, 1823, 307, 281, 6964, 257, 5223, 13, 51450], "temperature": 0.0, "avg_logprob": -0.15389060974121094, "compression_ratio": 1.6927710843373494, "no_speech_prob": 0.006036257371306419}, {"id": 100, "seek": 66782, "start": 689.5400000000001, "end": 696.46, "text": " So to define the behavior of the box, we write a Python file.", "tokens": [51450, 407, 281, 6964, 264, 5223, 295, 264, 2424, 11, 321, 2464, 257, 15329, 3991, 13, 51796], "temperature": 0.0, "avg_logprob": -0.15389060974121094, "compression_ratio": 1.6927710843373494, "no_speech_prob": 0.006036257371306419}, {"id": 101, "seek": 69646, "start": 696.46, "end": 699.34, "text": " We write a Python file.", "tokens": [50364, 492, 2464, 257, 15329, 3991, 13, 50508], "temperature": 0.0, "avg_logprob": -0.24660507001374898, "compression_ratio": 1.37, "no_speech_prob": 0.00824679248034954}, {"id": 102, "seek": 69646, "start": 699.34, "end": 709.7, "text": " When we write a Python file, we can use all of the available Python libraries.", "tokens": [50508, 1133, 321, 2464, 257, 15329, 3991, 11, 321, 393, 764, 439, 295, 264, 2435, 15329, 15148, 13, 51026], "temperature": 0.0, "avg_logprob": -0.24660507001374898, "compression_ratio": 1.37, "no_speech_prob": 0.00824679248034954}, {"id": 103, "seek": 69646, "start": 709.7, "end": 712.6600000000001, "text": " We have to define three functions.", "tokens": [51026, 492, 362, 281, 6964, 1045, 6828, 13, 51174], "temperature": 0.0, "avg_logprob": -0.24660507001374898, "compression_ratio": 1.37, "no_speech_prob": 0.00824679248034954}, {"id": 104, "seek": 71266, "start": 712.66, "end": 728.62, "text": " The first one, an init function.", "tokens": [50364, 440, 700, 472, 11, 364, 3157, 2445, 13, 51162], "temperature": 0.0, "avg_logprob": -0.15986739264594185, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.13703028857707977}, {"id": 105, "seek": 71266, "start": 728.62, "end": 733.5799999999999, "text": " In our case, this function will init the plot.", "tokens": [51162, 682, 527, 1389, 11, 341, 2445, 486, 3157, 264, 7542, 13, 51410], "temperature": 0.0, "avg_logprob": -0.15986739264594185, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.13703028857707977}, {"id": 106, "seek": 71266, "start": 733.5799999999999, "end": 738.18, "text": " The second one is during the simulation, what will the box do?", "tokens": [51410, 440, 1150, 472, 307, 1830, 264, 16575, 11, 437, 486, 264, 2424, 360, 30, 51640], "temperature": 0.0, "avg_logprob": -0.15986739264594185, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.13703028857707977}, {"id": 107, "seek": 71266, "start": 738.18, "end": 741.8199999999999, "text": " What is the process inside the box during the simulation?", "tokens": [51640, 708, 307, 264, 1399, 1854, 264, 2424, 1830, 264, 16575, 30, 51822], "temperature": 0.0, "avg_logprob": -0.15986739264594185, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.13703028857707977}, {"id": 108, "seek": 74182, "start": 741.82, "end": 745.3000000000001, "text": " In our case, it's saving data.", "tokens": [50364, 682, 527, 1389, 11, 309, 311, 6816, 1412, 13, 50538], "temperature": 0.0, "avg_logprob": -0.21932968948826645, "compression_ratio": 1.5804195804195804, "no_speech_prob": 0.021934939548373222}, {"id": 109, "seek": 74182, "start": 745.3000000000001, "end": 750.0200000000001, "text": " And what will the box will do after the simulation?", "tokens": [50538, 400, 437, 486, 264, 2424, 486, 360, 934, 264, 16575, 30, 50774], "temperature": 0.0, "avg_logprob": -0.21932968948826645, "compression_ratio": 1.5804195804195804, "no_speech_prob": 0.021934939548373222}, {"id": 110, "seek": 74182, "start": 750.0200000000001, "end": 756.1800000000001, "text": " And in our case, it's plot the data.", "tokens": [50774, 400, 294, 527, 1389, 11, 309, 311, 7542, 264, 1412, 13, 51082], "temperature": 0.0, "avg_logprob": -0.21932968948826645, "compression_ratio": 1.5804195804195804, "no_speech_prob": 0.021934939548373222}, {"id": 111, "seek": 74182, "start": 756.1800000000001, "end": 763.94, "text": " Then the next step is to connect the description file and the code file, the Python file, to", "tokens": [51082, 1396, 264, 958, 1823, 307, 281, 1745, 264, 3855, 3991, 293, 264, 3089, 3991, 11, 264, 15329, 3991, 11, 281, 51470], "temperature": 0.0, "avg_logprob": -0.21932968948826645, "compression_ratio": 1.5804195804195804, "no_speech_prob": 0.021934939548373222}, {"id": 112, "seek": 74182, "start": 763.94, "end": 765.74, "text": " connect both.", "tokens": [51470, 1745, 1293, 13, 51560], "temperature": 0.0, "avg_logprob": -0.21932968948826645, "compression_ratio": 1.5804195804195804, "no_speech_prob": 0.021934939548373222}, {"id": 113, "seek": 76574, "start": 765.74, "end": 775.0600000000001, "text": " We will only have to write the name of the associated function.", "tokens": [50364, 492, 486, 787, 362, 281, 2464, 264, 1315, 295, 264, 6615, 2445, 13, 50830], "temperature": 0.0, "avg_logprob": -0.19530973300127916, "compression_ratio": 1.4941176470588236, "no_speech_prob": 0.00984010100364685}, {"id": 114, "seek": 76574, "start": 775.0600000000001, "end": 778.34, "text": " Then we have created a box.", "tokens": [50830, 1396, 321, 362, 2942, 257, 2424, 13, 50994], "temperature": 0.0, "avg_logprob": -0.19530973300127916, "compression_ratio": 1.4941176470588236, "no_speech_prob": 0.00984010100364685}, {"id": 115, "seek": 76574, "start": 778.34, "end": 781.34, "text": " Now we want to add it in a library.", "tokens": [50994, 823, 321, 528, 281, 909, 309, 294, 257, 6405, 13, 51144], "temperature": 0.0, "avg_logprob": -0.19530973300127916, "compression_ratio": 1.4941176470588236, "no_speech_prob": 0.00984010100364685}, {"id": 116, "seek": 76574, "start": 781.34, "end": 784.14, "text": " So a library is just a collection of boxes.", "tokens": [51144, 407, 257, 6405, 307, 445, 257, 5765, 295, 9002, 13, 51284], "temperature": 0.0, "avg_logprob": -0.19530973300127916, "compression_ratio": 1.4941176470588236, "no_speech_prob": 0.00984010100364685}, {"id": 117, "seek": 76574, "start": 784.14, "end": 791.62, "text": " And in practical, a library is just a folder containing YAML file and Python file.", "tokens": [51284, 400, 294, 8496, 11, 257, 6405, 307, 445, 257, 10820, 19273, 398, 2865, 43, 3991, 293, 15329, 3991, 13, 51658], "temperature": 0.0, "avg_logprob": -0.19530973300127916, "compression_ratio": 1.4941176470588236, "no_speech_prob": 0.00984010100364685}, {"id": 118, "seek": 79162, "start": 791.62, "end": 801.26, "text": " So now a library is a folder that doesn't accept subdirectories.", "tokens": [50364, 407, 586, 257, 6405, 307, 257, 10820, 300, 1177, 380, 3241, 1422, 18267, 1672, 530, 13, 50846], "temperature": 0.0, "avg_logprob": -0.20230602395945582, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.13567280769348145}, {"id": 119, "seek": 79162, "start": 801.26, "end": 810.66, "text": " We can't, at the time, we can't put our file in subdirectories.", "tokens": [50846, 492, 393, 380, 11, 412, 264, 565, 11, 321, 393, 380, 829, 527, 3991, 294, 1422, 18267, 1672, 530, 13, 51316], "temperature": 0.0, "avg_logprob": -0.20230602395945582, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.13567280769348145}, {"id": 120, "seek": 79162, "start": 810.66, "end": 813.38, "text": " It won't be recognized.", "tokens": [51316, 467, 1582, 380, 312, 9823, 13, 51452], "temperature": 0.0, "avg_logprob": -0.20230602395945582, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.13567280769348145}, {"id": 121, "seek": 79162, "start": 813.38, "end": 814.78, "text": " So we have our folder.", "tokens": [51452, 407, 321, 362, 527, 10820, 13, 51522], "temperature": 0.0, "avg_logprob": -0.20230602395945582, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.13567280769348145}, {"id": 122, "seek": 81478, "start": 814.78, "end": 827.9, "text": " We add our first box with our two files, a second one, et cetera, and it's all we make", "tokens": [50364, 492, 909, 527, 700, 2424, 365, 527, 732, 7098, 11, 257, 1150, 472, 11, 1030, 11458, 11, 293, 309, 311, 439, 321, 652, 51020], "temperature": 0.0, "avg_logprob": -0.2865329155555138, "compression_ratio": 1.4097222222222223, "no_speech_prob": 0.010670635849237442}, {"id": 123, "seek": 81478, "start": 827.9, "end": 830.9, "text": " a library.", "tokens": [51020, 257, 6405, 13, 51170], "temperature": 0.0, "avg_logprob": -0.2865329155555138, "compression_ratio": 1.4097222222222223, "no_speech_prob": 0.010670635849237442}, {"id": 124, "seek": 81478, "start": 830.9, "end": 839.6999999999999, "text": " Another feature we added to Muffin is an IPython interaction.", "tokens": [51170, 3996, 4111, 321, 3869, 281, 376, 1245, 259, 307, 364, 8671, 88, 11943, 9285, 13, 51610], "temperature": 0.0, "avg_logprob": -0.2865329155555138, "compression_ratio": 1.4097222222222223, "no_speech_prob": 0.010670635849237442}, {"id": 125, "seek": 81478, "start": 839.6999999999999, "end": 843.9399999999999, "text": " So Muffin can be run in an IPython session.", "tokens": [51610, 407, 376, 1245, 259, 393, 312, 1190, 294, 364, 8671, 88, 11943, 5481, 13, 51822], "temperature": 0.0, "avg_logprob": -0.2865329155555138, "compression_ratio": 1.4097222222222223, "no_speech_prob": 0.010670635849237442}, {"id": 126, "seek": 84394, "start": 843.94, "end": 851.5400000000001, "text": " Which means that Muffin can access to all the IPython variables, all variables declared", "tokens": [50364, 3013, 1355, 300, 376, 1245, 259, 393, 2105, 281, 439, 264, 8671, 88, 11943, 9102, 11, 439, 9102, 15489, 50744], "temperature": 0.0, "avg_logprob": -0.18677264672738533, "compression_ratio": 1.5401459854014599, "no_speech_prob": 0.004958998877555132}, {"id": 127, "seek": 84394, "start": 851.5400000000001, "end": 855.3000000000001, "text": " in the IPython environment.", "tokens": [50744, 294, 264, 8671, 88, 11943, 2823, 13, 50932], "temperature": 0.0, "avg_logprob": -0.18677264672738533, "compression_ratio": 1.5401459854014599, "no_speech_prob": 0.004958998877555132}, {"id": 128, "seek": 84394, "start": 855.3000000000001, "end": 861.3800000000001, "text": " We can use all these variables as simulation parameters.", "tokens": [50932, 492, 393, 764, 439, 613, 9102, 382, 16575, 9834, 13, 51236], "temperature": 0.0, "avg_logprob": -0.18677264672738533, "compression_ratio": 1.5401459854014599, "no_speech_prob": 0.004958998877555132}, {"id": 129, "seek": 84394, "start": 861.3800000000001, "end": 863.86, "text": " And the access to variable is dynamic.", "tokens": [51236, 400, 264, 2105, 281, 7006, 307, 8546, 13, 51360], "temperature": 0.0, "avg_logprob": -0.18677264672738533, "compression_ratio": 1.5401459854014599, "no_speech_prob": 0.004958998877555132}, {"id": 130, "seek": 86386, "start": 863.86, "end": 874.9, "text": " It means that if we can launch the application at the beginning of the session, declare variables", "tokens": [50364, 467, 1355, 300, 498, 321, 393, 4025, 264, 3861, 412, 264, 2863, 295, 264, 5481, 11, 19710, 9102, 50916], "temperature": 0.0, "avg_logprob": -0.12607651286655003, "compression_ratio": 1.477124183006536, "no_speech_prob": 0.08771932125091553}, {"id": 131, "seek": 86386, "start": 874.9, "end": 879.26, "text": " in the IPython and use it dynamically.", "tokens": [50916, 294, 264, 8671, 88, 11943, 293, 764, 309, 43492, 13, 51134], "temperature": 0.0, "avg_logprob": -0.12607651286655003, "compression_ratio": 1.477124183006536, "no_speech_prob": 0.08771932125091553}, {"id": 132, "seek": 86386, "start": 879.26, "end": 888.34, "text": " So if I launch a first simulation with some parameters, I update it after one simulation.", "tokens": [51134, 407, 498, 286, 4025, 257, 700, 16575, 365, 512, 9834, 11, 286, 5623, 309, 934, 472, 16575, 13, 51588], "temperature": 0.0, "avg_logprob": -0.12607651286655003, "compression_ratio": 1.477124183006536, "no_speech_prob": 0.08771932125091553}, {"id": 133, "seek": 88834, "start": 888.34, "end": 895.22, "text": " If I launch a second simulation, the second simulation will take the new value into account", "tokens": [50364, 759, 286, 4025, 257, 1150, 16575, 11, 264, 1150, 16575, 486, 747, 264, 777, 2158, 666, 2696, 50708], "temperature": 0.0, "avg_logprob": -0.2121253940794203, "compression_ratio": 1.6358024691358024, "no_speech_prob": 0.01814943738281727}, {"id": 134, "seek": 88834, "start": 895.22, "end": 899.1800000000001, "text": " for the new simulation.", "tokens": [50708, 337, 264, 777, 16575, 13, 50906], "temperature": 0.0, "avg_logprob": -0.2121253940794203, "compression_ratio": 1.6358024691358024, "no_speech_prob": 0.01814943738281727}, {"id": 135, "seek": 88834, "start": 899.1800000000001, "end": 904.34, "text": " How to use it in an IPython session?", "tokens": [50906, 1012, 281, 764, 309, 294, 364, 8671, 88, 11943, 5481, 30, 51164], "temperature": 0.0, "avg_logprob": -0.2121253940794203, "compression_ratio": 1.6358024691358024, "no_speech_prob": 0.01814943738281727}, {"id": 136, "seek": 88834, "start": 904.34, "end": 910.62, "text": " The first step is to load the Muffin extension with the command load text.", "tokens": [51164, 440, 700, 1823, 307, 281, 3677, 264, 376, 1245, 259, 10320, 365, 264, 5622, 3677, 2487, 13, 51478], "temperature": 0.0, "avg_logprob": -0.2121253940794203, "compression_ratio": 1.6358024691358024, "no_speech_prob": 0.01814943738281727}, {"id": 137, "seek": 88834, "start": 910.62, "end": 914.94, "text": " And then just run the Muffin command.", "tokens": [51478, 400, 550, 445, 1190, 264, 376, 1245, 259, 5622, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2121253940794203, "compression_ratio": 1.6358024691358024, "no_speech_prob": 0.01814943738281727}, {"id": 138, "seek": 91494, "start": 914.94, "end": 919.3800000000001, "text": " Here is a demonstration of how it works.", "tokens": [50364, 1692, 307, 257, 16520, 295, 577, 309, 1985, 13, 50586], "temperature": 0.0, "avg_logprob": -0.2908298592818411, "compression_ratio": 1.2773109243697478, "no_speech_prob": 0.04365777596831322}, {"id": 139, "seek": 91494, "start": 919.3800000000001, "end": 927.86, "text": " So we have firstly declared our parameter in a notebook.", "tokens": [50586, 407, 321, 362, 27376, 15489, 527, 13075, 294, 257, 21060, 13, 51010], "temperature": 0.0, "avg_logprob": -0.2908298592818411, "compression_ratio": 1.2773109243697478, "no_speech_prob": 0.04365777596831322}, {"id": 140, "seek": 91494, "start": 927.86, "end": 935.62, "text": " We will create a simulation with two assigned signals.", "tokens": [51010, 492, 486, 1884, 257, 16575, 365, 732, 13279, 12354, 13, 51398], "temperature": 0.0, "avg_logprob": -0.2908298592818411, "compression_ratio": 1.2773109243697478, "no_speech_prob": 0.04365777596831322}, {"id": 141, "seek": 93562, "start": 935.62, "end": 954.66, "text": " And then we will configure all the parameters.", "tokens": [50364, 400, 550, 321, 486, 22162, 439, 264, 9834, 13, 51316], "temperature": 0.0, "avg_logprob": -0.21448740592369667, "compression_ratio": 0.9019607843137255, "no_speech_prob": 0.059011850506067276}, {"id": 142, "seek": 95466, "start": 954.66, "end": 959.9399999999999, "text": " We have implemented some information for the user.", "tokens": [50364, 492, 362, 12270, 512, 1589, 337, 264, 4195, 13, 50628], "temperature": 0.0, "avg_logprob": -0.16846389481515595, "compression_ratio": 1.3883495145631068, "no_speech_prob": 0.09486500918865204}, {"id": 143, "seek": 95466, "start": 959.9399999999999, "end": 982.66, "text": " When he writes a wrong variable name, the application will give the information to the user.", "tokens": [50628, 1133, 415, 13657, 257, 2085, 7006, 1315, 11, 264, 3861, 486, 976, 264, 1589, 281, 264, 4195, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16846389481515595, "compression_ratio": 1.3883495145631068, "no_speech_prob": 0.09486500918865204}, {"id": 144, "seek": 98266, "start": 982.66, "end": 990.38, "text": " So here we have all of both signals, the first one at 10 hertz with an amplitude of 10.", "tokens": [50364, 407, 510, 321, 362, 439, 295, 1293, 12354, 11, 264, 700, 472, 412, 1266, 45830, 365, 364, 27433, 295, 1266, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2774594435051306, "compression_ratio": 1.728476821192053, "no_speech_prob": 0.4623046815395355}, {"id": 145, "seek": 98266, "start": 990.38, "end": 995.38, "text": " And the second one at 5 hertz with an amplitude of 7.", "tokens": [50750, 400, 264, 1150, 472, 412, 1025, 45830, 365, 364, 27433, 295, 1614, 13, 51000], "temperature": 0.0, "avg_logprob": -0.2774594435051306, "compression_ratio": 1.728476821192053, "no_speech_prob": 0.4623046815395355}, {"id": 146, "seek": 98266, "start": 995.38, "end": 999.6999999999999, "text": " I will launch the demonstration.", "tokens": [51000, 286, 486, 4025, 264, 16520, 13, 51216], "temperature": 0.0, "avg_logprob": -0.2774594435051306, "compression_ratio": 1.728476821192053, "no_speech_prob": 0.4623046815395355}, {"id": 147, "seek": 98266, "start": 999.6999999999999, "end": 1005.5799999999999, "text": " Then we will update the value of the second signal, the amplitude of the second signal", "tokens": [51216, 1396, 321, 486, 5623, 264, 2158, 295, 264, 1150, 6358, 11, 264, 27433, 295, 264, 1150, 6358, 51510], "temperature": 0.0, "avg_logprob": -0.2774594435051306, "compression_ratio": 1.728476821192053, "no_speech_prob": 0.4623046815395355}, {"id": 148, "seek": 100558, "start": 1005.58, "end": 1013.5, "text": " only, and we have a signal with the new values.", "tokens": [50364, 787, 11, 293, 321, 362, 257, 6358, 365, 264, 777, 4190, 13, 50760], "temperature": 0.0, "avg_logprob": -0.2519334687127007, "compression_ratio": 1.477124183006536, "no_speech_prob": 0.23917709290981293}, {"id": 149, "seek": 100558, "start": 1013.5, "end": 1019.94, "text": " We have implemented all those control features like saving and loading projects, working", "tokens": [50760, 492, 362, 12270, 439, 729, 1969, 4122, 411, 6816, 293, 15114, 4455, 11, 1364, 51082], "temperature": 0.0, "avg_logprob": -0.2519334687127007, "compression_ratio": 1.477124183006536, "no_speech_prob": 0.23917709290981293}, {"id": 150, "seek": 100558, "start": 1019.94, "end": 1031.8600000000001, "text": " with multiple projects at the same time, copy and past boxes and cut also, delete in box,", "tokens": [51082, 365, 3866, 4455, 412, 264, 912, 565, 11, 5055, 293, 1791, 9002, 293, 1723, 611, 11, 12097, 294, 2424, 11, 51678], "temperature": 0.0, "avg_logprob": -0.2519334687127007, "compression_ratio": 1.477124183006536, "no_speech_prob": 0.23917709290981293}, {"id": 151, "seek": 103186, "start": 1031.86, "end": 1036.5, "text": " then cancel action, etc.", "tokens": [50364, 550, 10373, 3069, 11, 5183, 13, 50596], "temperature": 0.0, "avg_logprob": -0.19267217848036025, "compression_ratio": 1.4074074074074074, "no_speech_prob": 0.10302478820085526}, {"id": 152, "seek": 103186, "start": 1036.5, "end": 1050.74, "text": " So in conclusion, we have developed our own multi-physics simulation software.", "tokens": [50596, 407, 294, 10063, 11, 321, 362, 4743, 527, 1065, 4825, 12, 950, 41732, 16575, 4722, 13, 51308], "temperature": 0.0, "avg_logprob": -0.19267217848036025, "compression_ratio": 1.4074074074074074, "no_speech_prob": 0.10302478820085526}, {"id": 153, "seek": 103186, "start": 1050.74, "end": 1057.54, "text": " The advantage of this application is that the application is entirely coded in Python.", "tokens": [51308, 440, 5002, 295, 341, 3861, 307, 300, 264, 3861, 307, 7696, 34874, 294, 15329, 13, 51648], "temperature": 0.0, "avg_logprob": -0.19267217848036025, "compression_ratio": 1.4074074074074074, "no_speech_prob": 0.10302478820085526}, {"id": 154, "seek": 105754, "start": 1057.54, "end": 1063.94, "text": " So we have access to many powerful libraries like NumPy, SciPy, etc., for the application", "tokens": [50364, 407, 321, 362, 2105, 281, 867, 4005, 15148, 411, 22592, 47, 88, 11, 16942, 47, 88, 11, 5183, 7933, 337, 264, 3861, 50684], "temperature": 0.0, "avg_logprob": -0.1843433380126953, "compression_ratio": 1.6145251396648044, "no_speech_prob": 0.16414010524749756}, {"id": 155, "seek": 105754, "start": 1063.94, "end": 1070.54, "text": " and for the custom processing boxes and simulation solvers.", "tokens": [50684, 293, 337, 264, 2375, 9007, 9002, 293, 16575, 1404, 840, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1843433380126953, "compression_ratio": 1.6145251396648044, "no_speech_prob": 0.16414010524749756}, {"id": 156, "seek": 105754, "start": 1070.54, "end": 1073.86, "text": " The application is very adaptive.", "tokens": [51014, 440, 3861, 307, 588, 27912, 13, 51180], "temperature": 0.0, "avg_logprob": -0.1843433380126953, "compression_ratio": 1.6145251396648044, "no_speech_prob": 0.16414010524749756}, {"id": 157, "seek": 105754, "start": 1073.86, "end": 1081.26, "text": " What I mean by that is that you can easily implement your own custom boxes and custom", "tokens": [51180, 708, 286, 914, 538, 300, 307, 300, 291, 393, 3612, 4445, 428, 1065, 2375, 9002, 293, 2375, 51550], "temperature": 0.0, "avg_logprob": -0.1843433380126953, "compression_ratio": 1.6145251396648044, "no_speech_prob": 0.16414010524749756}, {"id": 158, "seek": 105754, "start": 1081.26, "end": 1084.26, "text": " simulation solvers.", "tokens": [51550, 16575, 1404, 840, 13, 51700], "temperature": 0.0, "avg_logprob": -0.1843433380126953, "compression_ratio": 1.6145251396648044, "no_speech_prob": 0.16414010524749756}, {"id": 159, "seek": 108426, "start": 1084.26, "end": 1089.42, "text": " And the application can be associated to an IPython environment.", "tokens": [50364, 400, 264, 3861, 393, 312, 6615, 281, 364, 8671, 88, 11943, 2823, 13, 50622], "temperature": 0.0, "avg_logprob": -0.319656008765811, "compression_ratio": 1.4251497005988023, "no_speech_prob": 0.011612648144364357}, {"id": 160, "seek": 108426, "start": 1089.42, "end": 1101.14, "text": " So Mephine offers a Python alternative to Matlab plus Simulink.", "tokens": [50622, 407, 376, 595, 71, 533, 7736, 257, 15329, 8535, 281, 6789, 44990, 1804, 3998, 425, 475, 13, 51208], "temperature": 0.0, "avg_logprob": -0.319656008765811, "compression_ratio": 1.4251497005988023, "no_speech_prob": 0.011612648144364357}, {"id": 161, "seek": 108426, "start": 1101.14, "end": 1107.62, "text": " These advantages of the application, it's written in a scripting language.", "tokens": [51208, 1981, 14906, 295, 264, 3861, 11, 309, 311, 3720, 294, 257, 5755, 278, 2856, 13, 51532], "temperature": 0.0, "avg_logprob": -0.319656008765811, "compression_ratio": 1.4251497005988023, "no_speech_prob": 0.011612648144364357}, {"id": 162, "seek": 108426, "start": 1107.62, "end": 1112.66, "text": " So we have a higher solving times.", "tokens": [51532, 407, 321, 362, 257, 2946, 12606, 1413, 13, 51784], "temperature": 0.0, "avg_logprob": -0.319656008765811, "compression_ratio": 1.4251497005988023, "no_speech_prob": 0.011612648144364357}, {"id": 163, "seek": 111266, "start": 1112.66, "end": 1119.38, "text": " It's a young application at the time, so we need more time to offer a lot of features", "tokens": [50364, 467, 311, 257, 2037, 3861, 412, 264, 565, 11, 370, 321, 643, 544, 565, 281, 2626, 257, 688, 295, 4122, 50700], "temperature": 0.0, "avg_logprob": -0.16602411149423332, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.04889092594385147}, {"id": 164, "seek": 111266, "start": 1119.38, "end": 1125.18, "text": " and we need more users to improve the experience.", "tokens": [50700, 293, 321, 643, 544, 5022, 281, 3470, 264, 1752, 13, 50990], "temperature": 0.0, "avg_logprob": -0.16602411149423332, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.04889092594385147}, {"id": 165, "seek": 111266, "start": 1125.18, "end": 1126.98, "text": " So what's next?", "tokens": [50990, 407, 437, 311, 958, 30, 51080], "temperature": 0.0, "avg_logprob": -0.16602411149423332, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.04889092594385147}, {"id": 166, "seek": 111266, "start": 1126.98, "end": 1131.5800000000002, "text": " We will have to work on compatibility.", "tokens": [51080, 492, 486, 362, 281, 589, 322, 34237, 13, 51310], "temperature": 0.0, "avg_logprob": -0.16602411149423332, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.04889092594385147}, {"id": 167, "seek": 111266, "start": 1131.5800000000002, "end": 1139.3000000000002, "text": " We want to make the transition from PyQt5 to PyQt6 and we want to add more interactivity", "tokens": [51310, 492, 528, 281, 652, 264, 6034, 490, 9953, 48, 83, 20, 281, 9953, 48, 83, 21, 293, 321, 528, 281, 909, 544, 4648, 4253, 51696], "temperature": 0.0, "avg_logprob": -0.16602411149423332, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.04889092594385147}, {"id": 168, "seek": 113930, "start": 1139.3, "end": 1149.26, "text": " with the user to improve the user friendliness of the application.", "tokens": [50364, 365, 264, 4195, 281, 3470, 264, 4195, 1277, 32268, 295, 264, 3861, 13, 50862], "temperature": 0.0, "avg_logprob": -0.18195839851133286, "compression_ratio": 1.6620689655172414, "no_speech_prob": 0.021481169387698174}, {"id": 169, "seek": 113930, "start": 1149.26, "end": 1158.3, "text": " Here is a list of the contributors of the project and here is the links of the project.", "tokens": [50862, 1692, 307, 257, 1329, 295, 264, 45627, 295, 264, 1716, 293, 510, 307, 264, 6123, 295, 264, 1716, 13, 51314], "temperature": 0.0, "avg_logprob": -0.18195839851133286, "compression_ratio": 1.6620689655172414, "no_speech_prob": 0.021481169387698174}, {"id": 170, "seek": 113930, "start": 1158.3, "end": 1166.62, "text": " If you want to read all the source code, you have a link to the GitLab and if you want", "tokens": [51314, 759, 291, 528, 281, 1401, 439, 264, 4009, 3089, 11, 291, 362, 257, 2113, 281, 264, 16939, 37880, 293, 498, 291, 528, 51730], "temperature": 0.0, "avg_logprob": -0.18195839851133286, "compression_ratio": 1.6620689655172414, "no_speech_prob": 0.021481169387698174}, {"id": 171, "seek": 116662, "start": 1166.62, "end": 1174.5, "text": " to try the application, we have a package available on PyP.", "tokens": [50364, 281, 853, 264, 3861, 11, 321, 362, 257, 7372, 2435, 322, 9953, 47, 13, 50758], "temperature": 0.0, "avg_logprob": -0.24807989372397368, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0484524667263031}, {"id": 172, "seek": 116662, "start": 1174.5, "end": 1183.82, "text": " If you want to try to install it directly in your Python, you can use PIP install Mephine.", "tokens": [50758, 759, 291, 528, 281, 853, 281, 3625, 309, 3838, 294, 428, 15329, 11, 291, 393, 764, 430, 9139, 3625, 376, 595, 71, 533, 13, 51224], "temperature": 0.0, "avg_logprob": -0.24807989372397368, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0484524667263031}, {"id": 173, "seek": 116662, "start": 1183.82, "end": 1187.02, "text": " So thank you for your attention.", "tokens": [51224, 407, 1309, 291, 337, 428, 3202, 13, 51384], "temperature": 0.0, "avg_logprob": -0.24807989372397368, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0484524667263031}, {"id": 174, "seek": 118702, "start": 1187.02, "end": 1197.02, "text": " If you have some questions.", "tokens": [50364, 759, 291, 362, 512, 1651, 13, 50864], "temperature": 0.0, "avg_logprob": -0.8459478378295898, "compression_ratio": 0.7714285714285715, "no_speech_prob": 0.6682370901107788}, {"id": 175, "seek": 119702, "start": 1197.02, "end": 1215.02, "text": " You said you go through electrical analogies to make the calculation, you use the electrical", "tokens": [50364, 509, 848, 291, 352, 807, 12147, 16660, 530, 281, 652, 264, 17108, 11, 291, 764, 264, 12147, 51264], "temperature": 0.0, "avg_logprob": -0.5884555816650391, "compression_ratio": 1.353448275862069, "no_speech_prob": 0.17738261818885803}, {"id": 176, "seek": 119702, "start": 1215.02, "end": 1217.02, "text": " equation, right?", "tokens": [51264, 5367, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.5884555816650391, "compression_ratio": 1.353448275862069, "no_speech_prob": 0.17738261818885803}, {"id": 177, "seek": 119702, "start": 1217.02, "end": 1218.02, "text": " Sorry?", "tokens": [51364, 4919, 30, 51414], "temperature": 0.0, "avg_logprob": -0.5884555816650391, "compression_ratio": 1.353448275862069, "no_speech_prob": 0.17738261818885803}, {"id": 178, "seek": 119702, "start": 1218.02, "end": 1219.02, "text": " Can you repeat?", "tokens": [51414, 1664, 291, 7149, 30, 51464], "temperature": 0.0, "avg_logprob": -0.5884555816650391, "compression_ratio": 1.353448275862069, "no_speech_prob": 0.17738261818885803}, {"id": 179, "seek": 119702, "start": 1219.02, "end": 1220.02, "text": " I will repeat after you.", "tokens": [51464, 286, 486, 7149, 934, 291, 13, 51514], "temperature": 0.0, "avg_logprob": -0.5884555816650391, "compression_ratio": 1.353448275862069, "no_speech_prob": 0.17738261818885803}, {"id": 180, "seek": 122002, "start": 1220.02, "end": 1227.02, "text": " At the beginning of the presentation, you said you come from physical?", "tokens": [50364, 1711, 264, 2863, 295, 264, 5860, 11, 291, 848, 291, 808, 490, 4001, 30, 50714], "temperature": 0.0, "avg_logprob": -0.3059397327656649, "compression_ratio": 1.3985507246376812, "no_speech_prob": 0.2501574158668518}, {"id": 181, "seek": 122002, "start": 1227.02, "end": 1239.62, "text": " Yes, we want to make a Mechatronics simulation and we want to convert all the parts of the", "tokens": [50714, 1079, 11, 321, 528, 281, 652, 257, 1923, 20057, 37042, 16575, 293, 321, 528, 281, 7620, 439, 264, 3166, 295, 264, 51344], "temperature": 0.0, "avg_logprob": -0.3059397327656649, "compression_ratio": 1.3985507246376812, "no_speech_prob": 0.2501574158668518}, {"id": 182, "seek": 122002, "start": 1239.62, "end": 1248.82, "text": " system to electrical analogies.", "tokens": [51344, 1185, 281, 12147, 16660, 530, 13, 51804], "temperature": 0.0, "avg_logprob": -0.3059397327656649, "compression_ratio": 1.3985507246376812, "no_speech_prob": 0.2501574158668518}, {"id": 183, "seek": 124882, "start": 1248.82, "end": 1263.6599999999999, "text": " We don't use any, at the time we don't use any software like, sorry, I'm a bit stressed.", "tokens": [50364, 492, 500, 380, 764, 604, 11, 412, 264, 565, 321, 500, 380, 764, 604, 4722, 411, 11, 2597, 11, 286, 478, 257, 857, 14471, 13, 51106], "temperature": 0.0, "avg_logprob": -0.2831030281222596, "compression_ratio": 1.403225806451613, "no_speech_prob": 0.1995372772216797}, {"id": 184, "seek": 124882, "start": 1263.6599999999999, "end": 1272.4199999999998, "text": " Electrical simulation, I don't remember the name, but the cons with those software is", "tokens": [51106, 12575, 15888, 16575, 11, 286, 500, 380, 1604, 264, 1315, 11, 457, 264, 1014, 365, 729, 4722, 307, 51544], "temperature": 0.0, "avg_logprob": -0.2831030281222596, "compression_ratio": 1.403225806451613, "no_speech_prob": 0.1995372772216797}, {"id": 185, "seek": 127242, "start": 1272.42, "end": 1275.94, "text": " that the model is not dynamic.", "tokens": [50364, 300, 264, 2316, 307, 406, 8546, 13, 50540], "temperature": 0.0, "avg_logprob": -0.24989562564426, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.5939203500747681}, {"id": 186, "seek": 127242, "start": 1275.94, "end": 1287.74, "text": " We can't try a lot of sets easily, but the game of our application is to, with the time,", "tokens": [50540, 492, 393, 380, 853, 257, 688, 295, 6352, 3612, 11, 457, 264, 1216, 295, 527, 3861, 307, 281, 11, 365, 264, 565, 11, 51130], "temperature": 0.0, "avg_logprob": -0.24989562564426, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.5939203500747681}, {"id": 187, "seek": 127242, "start": 1287.74, "end": 1295.3400000000001, "text": " make a box to create an interface to other multiphysics applications.", "tokens": [51130, 652, 257, 2424, 281, 1884, 364, 9226, 281, 661, 3311, 71, 41732, 5821, 13, 51510], "temperature": 0.0, "avg_logprob": -0.24989562564426, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.5939203500747681}, {"id": 188, "seek": 127242, "start": 1295.3400000000001, "end": 1300.8600000000001, "text": " We don't want to replace those applications, we just want to create an interface to those", "tokens": [51510, 492, 500, 380, 528, 281, 7406, 729, 5821, 11, 321, 445, 528, 281, 1884, 364, 9226, 281, 729, 51786], "temperature": 0.0, "avg_logprob": -0.24989562564426, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.5939203500747681}, {"id": 189, "seek": 130086, "start": 1300.86, "end": 1303.86, "text": " applications to use it in our research project.", "tokens": [50364, 5821, 281, 764, 309, 294, 527, 2132, 1716, 13, 50514], "temperature": 0.0, "avg_logprob": -0.471129390171596, "compression_ratio": 1.612565445026178, "no_speech_prob": 0.5567336082458496}, {"id": 190, "seek": 130086, "start": 1303.86, "end": 1311.6599999999999, "text": " If I can rebound on that, because in part of the project, the idea is a lot of process", "tokens": [50514, 759, 286, 393, 31850, 322, 300, 11, 570, 294, 644, 295, 264, 1716, 11, 264, 1558, 307, 257, 688, 295, 1399, 50904], "temperature": 0.0, "avg_logprob": -0.471129390171596, "compression_ratio": 1.612565445026178, "no_speech_prob": 0.5567336082458496}, {"id": 191, "seek": 130086, "start": 1311.6599999999999, "end": 1318.26, "text": " can be simulated with impedance like printing, like thermistors, mechanical stuff.", "tokens": [50904, 393, 312, 41713, 365, 36264, 411, 14699, 11, 411, 8810, 46976, 11, 12070, 1507, 13, 51234], "temperature": 0.0, "avg_logprob": -0.471129390171596, "compression_ratio": 1.612565445026178, "no_speech_prob": 0.5567336082458496}, {"id": 192, "seek": 130086, "start": 1318.26, "end": 1326.6599999999999, "text": " You have already an analog between the physical aspect and the electrical impedance stuff.", "tokens": [51234, 509, 362, 1217, 364, 16660, 1296, 264, 4001, 4171, 293, 264, 12147, 36264, 1507, 13, 51654], "temperature": 0.0, "avg_logprob": -0.471129390171596, "compression_ratio": 1.612565445026178, "no_speech_prob": 0.5567336082458496}, {"id": 193, "seek": 132666, "start": 1326.66, "end": 1332.46, "text": " My question was, do you use electrical equations because they are simpler to solve than physical", "tokens": [50364, 1222, 1168, 390, 11, 360, 291, 764, 12147, 11787, 570, 436, 366, 18587, 281, 5039, 813, 4001, 50654], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 194, "seek": 132666, "start": 1332.46, "end": 1333.46, "text": " equations?", "tokens": [50654, 11787, 30, 50704], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 195, "seek": 132666, "start": 1333.46, "end": 1341.46, "text": " Sorry guys, there is a stream, if you can't hear you, you have to go through the mic.", "tokens": [50704, 4919, 1074, 11, 456, 307, 257, 4309, 11, 498, 291, 393, 380, 1568, 291, 11, 291, 362, 281, 352, 807, 264, 3123, 13, 51104], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 196, "seek": 132666, "start": 1341.46, "end": 1344.46, "text": " Maybe you can go instead and use the mic if you want to answer that question.", "tokens": [51104, 2704, 291, 393, 352, 2602, 293, 764, 264, 3123, 498, 291, 528, 281, 1867, 300, 1168, 13, 51254], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 197, "seek": 132666, "start": 1344.46, "end": 1345.46, "text": " Oh, you can repeat.", "tokens": [51254, 876, 11, 291, 393, 7149, 13, 51304], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 198, "seek": 132666, "start": 1345.46, "end": 1346.46, "text": " Yeah, that would be great.", "tokens": [51304, 865, 11, 300, 576, 312, 869, 13, 51354], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 199, "seek": 132666, "start": 1346.46, "end": 1347.46, "text": " If you could at least summarize.", "tokens": [51354, 759, 291, 727, 412, 1935, 20858, 13, 51404], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 200, "seek": 132666, "start": 1347.46, "end": 1356.46, "text": " The goal of the project is to use electrical equations.", "tokens": [51404, 440, 3387, 295, 264, 1716, 307, 281, 764, 12147, 11787, 13, 51854], "temperature": 0.0, "avg_logprob": -0.4685256039654767, "compression_ratio": 1.7245762711864407, "no_speech_prob": 0.8177103400230408}, {"id": 201, "seek": 135646, "start": 1357.26, "end": 1367.26, "text": " The goal of the application is to improve the comprehension of the system.", "tokens": [50404, 440, 3387, 295, 264, 3861, 307, 281, 3470, 264, 44991, 295, 264, 1185, 13, 50904], "temperature": 0.0, "avg_logprob": -0.4372478723526001, "compression_ratio": 1.328358208955224, "no_speech_prob": 0.074249267578125}, {"id": 202, "seek": 135646, "start": 1367.26, "end": 1374.26, "text": " Do you plan to make it very untimely, or accelerate the trial process?", "tokens": [50904, 1144, 291, 1393, 281, 652, 309, 588, 1701, 332, 736, 11, 420, 21341, 264, 7308, 1399, 30, 51254], "temperature": 0.0, "avg_logprob": -0.4372478723526001, "compression_ratio": 1.328358208955224, "no_speech_prob": 0.074249267578125}, {"id": 203, "seek": 135646, "start": 1374.26, "end": 1377.26, "text": " Sorry, I don't have heard the...", "tokens": [51254, 4919, 11, 286, 500, 380, 362, 2198, 264, 485, 51404], "temperature": 0.0, "avg_logprob": -0.4372478723526001, "compression_ratio": 1.328358208955224, "no_speech_prob": 0.074249267578125}, {"id": 204, "seek": 137726, "start": 1377.26, "end": 1389.06, "text": " Can we in the future make value in the entrance, like the boxes, and change directly the value", "tokens": [50364, 1664, 321, 294, 264, 2027, 652, 2158, 294, 264, 12014, 11, 411, 264, 9002, 11, 293, 1319, 3838, 264, 2158, 50954], "temperature": 0.0, "avg_logprob": -0.37067703406016034, "compression_ratio": 1.3893129770992367, "no_speech_prob": 0.37349551916122437}, {"id": 205, "seek": 137726, "start": 1389.06, "end": 1399.06, "text": " and see the code directly with its play button?", "tokens": [50954, 293, 536, 264, 3089, 3838, 365, 1080, 862, 2960, 30, 51454], "temperature": 0.0, "avg_logprob": -0.37067703406016034, "compression_ratio": 1.3893129770992367, "no_speech_prob": 0.37349551916122437}, {"id": 206, "seek": 137726, "start": 1399.06, "end": 1403.06, "text": " Sorry, I don't have heard the question.", "tokens": [51454, 4919, 11, 286, 500, 380, 362, 2198, 264, 1168, 13, 51654], "temperature": 0.0, "avg_logprob": -0.37067703406016034, "compression_ratio": 1.3893129770992367, "no_speech_prob": 0.37349551916122437}, {"id": 207, "seek": 140306, "start": 1403.86, "end": 1408.86, "text": " I'm a bit...", "tokens": [50404, 286, 478, 257, 857, 485, 50654], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 208, "seek": 140306, "start": 1408.86, "end": 1411.86, "text": " Can you do a real-time simulation?", "tokens": [50654, 1664, 291, 360, 257, 957, 12, 3766, 16575, 30, 50804], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 209, "seek": 140306, "start": 1411.86, "end": 1416.86, "text": " No, the simulation...", "tokens": [50804, 883, 11, 264, 16575, 485, 51054], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 210, "seek": 140306, "start": 1416.86, "end": 1419.86, "text": " Can we do a real-time simulation?", "tokens": [51054, 1664, 321, 360, 257, 957, 12, 3766, 16575, 30, 51204], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 211, "seek": 140306, "start": 1419.86, "end": 1421.86, "text": " For now, it's not possible.", "tokens": [51204, 1171, 586, 11, 309, 311, 406, 1944, 13, 51304], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 212, "seek": 140306, "start": 1421.86, "end": 1424.86, "text": " We want to implement that in the future.", "tokens": [51304, 492, 528, 281, 4445, 300, 294, 264, 2027, 13, 51454], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 213, "seek": 140306, "start": 1424.86, "end": 1430.86, "text": " For now, the application, we just run the initialization function, then run the simulation", "tokens": [51454, 1171, 586, 11, 264, 3861, 11, 321, 445, 1190, 264, 5883, 2144, 2445, 11, 550, 1190, 264, 16575, 51754], "temperature": 0.0, "avg_logprob": -0.17814677274679835, "compression_ratio": 1.7189542483660132, "no_speech_prob": 0.12217922508716583}, {"id": 214, "seek": 143086, "start": 1431.6599999999999, "end": 1434.6599999999999, "text": " and the ending function.", "tokens": [50404, 293, 264, 8121, 2445, 13, 50554], "temperature": 0.0, "avg_logprob": -0.15437403431645147, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.04658876359462738}, {"id": 215, "seek": 143086, "start": 1434.6599999999999, "end": 1439.6599999999999, "text": " And all the functions are run in one time.", "tokens": [50554, 400, 439, 264, 6828, 366, 1190, 294, 472, 565, 13, 50804], "temperature": 0.0, "avg_logprob": -0.15437403431645147, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.04658876359462738}, {"id": 216, "seek": 143086, "start": 1439.6599999999999, "end": 1447.6599999999999, "text": " So at the time, we don't have implemented a real-time overview of the simulation.", "tokens": [50804, 407, 412, 264, 565, 11, 321, 500, 380, 362, 12270, 257, 957, 12, 3766, 12492, 295, 264, 16575, 13, 51204], "temperature": 0.0, "avg_logprob": -0.15437403431645147, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.04658876359462738}, {"id": 217, "seek": 143086, "start": 1447.6599999999999, "end": 1452.6599999999999, "text": " But we plan in the future to add this feature.", "tokens": [51204, 583, 321, 1393, 294, 264, 2027, 281, 909, 341, 4111, 13, 51454], "temperature": 0.0, "avg_logprob": -0.15437403431645147, "compression_ratio": 1.451851851851852, "no_speech_prob": 0.04658876359462738}, {"id": 218, "seek": 146086, "start": 1461.6599999999999, "end": 1469.6599999999999, "text": " In the beginning, you talked about the slow pass and the high inertia and lower inertia", "tokens": [50404, 682, 264, 2863, 11, 291, 2825, 466, 264, 2964, 1320, 293, 264, 1090, 37234, 293, 3126, 37234, 50804], "temperature": 0.0, "avg_logprob": -0.2486722320318222, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.10396631062030792}, {"id": 219, "seek": 146086, "start": 1469.6599999999999, "end": 1471.6599999999999, "text": " pass of your simulations.", "tokens": [50804, 1320, 295, 428, 35138, 13, 50904], "temperature": 0.0, "avg_logprob": -0.2486722320318222, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.10396631062030792}, {"id": 220, "seek": 146086, "start": 1471.6599999999999, "end": 1480.6599999999999, "text": " And you said that your software was designed to deal with local viable solutions and verbal", "tokens": [50904, 400, 291, 848, 300, 428, 4722, 390, 4761, 281, 2028, 365, 2654, 22024, 6547, 293, 24781, 51354], "temperature": 0.0, "avg_logprob": -0.2486722320318222, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.10396631062030792}, {"id": 221, "seek": 146086, "start": 1480.6599999999999, "end": 1483.6599999999999, "text": " viable simulations.", "tokens": [51354, 22024, 35138, 13, 51504], "temperature": 0.0, "avg_logprob": -0.2486722320318222, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.10396631062030792}, {"id": 222, "seek": 146086, "start": 1483.6599999999999, "end": 1488.6599999999999, "text": " How does that translate into what you've shown us?", "tokens": [51504, 1012, 775, 300, 13799, 666, 437, 291, 600, 4898, 505, 30, 51754], "temperature": 0.0, "avg_logprob": -0.2486722320318222, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.10396631062030792}, {"id": 223, "seek": 148866, "start": 1488.66, "end": 1491.66, "text": " Where is the global viable part?", "tokens": [50364, 2305, 307, 264, 4338, 22024, 644, 30, 50514], "temperature": 0.0, "avg_logprob": -0.27089383051945615, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.12183274328708649}, {"id": 224, "seek": 148866, "start": 1491.66, "end": 1494.66, "text": " So I repeat the question.", "tokens": [50514, 407, 286, 7149, 264, 1168, 13, 50664], "temperature": 0.0, "avg_logprob": -0.27089383051945615, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.12183274328708649}, {"id": 225, "seek": 148866, "start": 1494.66, "end": 1502.66, "text": " I've said that we have in the system low inertia part and high inertia part.", "tokens": [50664, 286, 600, 848, 300, 321, 362, 294, 264, 1185, 2295, 37234, 644, 293, 1090, 37234, 644, 13, 51064], "temperature": 0.0, "avg_logprob": -0.27089383051945615, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.12183274328708649}, {"id": 226, "seek": 148866, "start": 1502.66, "end": 1511.66, "text": " And also local viable simulation software and global viable software.", "tokens": [51064, 400, 611, 2654, 22024, 16575, 4722, 293, 4338, 22024, 4722, 13, 51514], "temperature": 0.0, "avg_logprob": -0.27089383051945615, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.12183274328708649}, {"id": 227, "seek": 148866, "start": 1511.66, "end": 1517.66, "text": " And how does this translate into what you've shown us?", "tokens": [51514, 400, 577, 775, 341, 13799, 666, 437, 291, 600, 4898, 505, 30, 51814], "temperature": 0.0, "avg_logprob": -0.27089383051945615, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.12183274328708649}, {"id": 228, "seek": 151766, "start": 1518.66, "end": 1523.66, "text": " Or does it implement it in the application?", "tokens": [50414, 1610, 775, 309, 4445, 309, 294, 264, 3861, 30, 50664], "temperature": 0.0, "avg_logprob": -0.3232994079589844, "compression_ratio": 1.5683453237410072, "no_speech_prob": 0.10842622071504593}, {"id": 229, "seek": 151766, "start": 1523.66, "end": 1525.66, "text": " Yeah, where is it in the application?", "tokens": [50664, 865, 11, 689, 307, 309, 294, 264, 3861, 30, 50764], "temperature": 0.0, "avg_logprob": -0.3232994079589844, "compression_ratio": 1.5683453237410072, "no_speech_prob": 0.10842622071504593}, {"id": 230, "seek": 151766, "start": 1525.66, "end": 1529.66, "text": " How does this concept translate into the application in showness?", "tokens": [50764, 1012, 775, 341, 3410, 13799, 666, 264, 3861, 294, 855, 1287, 30, 50964], "temperature": 0.0, "avg_logprob": -0.3232994079589844, "compression_ratio": 1.5683453237410072, "no_speech_prob": 0.10842622071504593}, {"id": 231, "seek": 151766, "start": 1535.66, "end": 1538.66, "text": " At the time, it's not implemented.", "tokens": [51264, 1711, 264, 565, 11, 309, 311, 406, 12270, 13, 51414], "temperature": 0.0, "avg_logprob": -0.3232994079589844, "compression_ratio": 1.5683453237410072, "no_speech_prob": 0.10842622071504593}, {"id": 232, "seek": 151766, "start": 1538.66, "end": 1541.66, "text": " It's the background of the project.", "tokens": [51414, 467, 311, 264, 3678, 295, 264, 1716, 13, 51564], "temperature": 0.0, "avg_logprob": -0.3232994079589844, "compression_ratio": 1.5683453237410072, "no_speech_prob": 0.10842622071504593}, {"id": 233, "seek": 154166, "start": 1542.66, "end": 1547.66, "text": " But it leads to scheduler problems.", "tokens": [50414, 583, 309, 6689, 281, 12000, 260, 2740, 13, 50664], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 234, "seek": 154166, "start": 1547.66, "end": 1550.66, "text": " So the idea is we want to have two schedulers.", "tokens": [50664, 407, 264, 1558, 307, 321, 528, 281, 362, 732, 12000, 433, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 235, "seek": 154166, "start": 1550.66, "end": 1556.66, "text": " And since then at this time, you might forget all those things.", "tokens": [50814, 400, 1670, 550, 412, 341, 565, 11, 291, 1062, 2870, 439, 729, 721, 13, 51114], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 236, "seek": 154166, "start": 1558.66, "end": 1561.66, "text": " Discussion can go on in the course.", "tokens": [51214, 4208, 25049, 393, 352, 322, 294, 264, 1164, 13, 51364], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 237, "seek": 154166, "start": 1561.66, "end": 1563.66, "text": " It's a great part of the first day.", "tokens": [51364, 467, 311, 257, 869, 644, 295, 264, 700, 786, 13, 51464], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 238, "seek": 154166, "start": 1563.66, "end": 1565.66, "text": " So go on with the discussion.", "tokens": [51464, 407, 352, 322, 365, 264, 5017, 13, 51564], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 239, "seek": 154166, "start": 1565.66, "end": 1568.66, "text": " We should switch speakers now.", "tokens": [51564, 492, 820, 3679, 9518, 586, 13, 51714], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 240, "seek": 154166, "start": 1568.66, "end": 1570.66, "text": " Thank you.", "tokens": [51714, 1044, 291, 13, 51814], "temperature": 0.0, "avg_logprob": -0.3508887623631677, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.04294075071811676}, {"id": 241, "seek": 157166, "start": 1571.66, "end": 1574.66, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.4230053822199504, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.5413597822189331}], "language": "en"}