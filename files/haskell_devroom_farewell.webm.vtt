WEBVTT

00:00.000 --> 00:10.720
So, thank you everyone who has come today, those who are here and those who are not in

00:10.720 --> 00:14.800
the room and were earlier.

00:14.800 --> 00:23.680
I would like to thank our speakers, Julia, Methodis and Renaldo, Hecate, Ivan and David.

00:23.680 --> 00:28.480
Thank you very much for presenting at the first and hopefully not the last Haskell

00:28.480 --> 00:39.520
bedroom at Fozdem and let's give them all another round of applause.

00:39.520 --> 00:44.760
Thank you to David Antwells who have helped a lot with the organising of this event, selecting

00:44.760 --> 00:51.720
the program and for the swag which was donated by the Haskell Foundation.

00:51.720 --> 00:56.360
We have stickers here at the front, there's stickers on the table at the back as well.

00:56.360 --> 01:07.160
Feel free to grab a bunch as you leave and for the books, for the prize draw, Programming

01:07.160 --> 01:14.360
in Haskell by Graham Hutton, second edition, three copies donated by the Haskell Foundation

01:14.360 --> 01:16.920
to give away in the prize draw today.

01:16.920 --> 01:22.440
So, thank you very much David for organising that.

01:22.440 --> 01:28.760
Thank you to the Fozdem organisers and volunteers to make this possible and especially for all

01:28.760 --> 01:34.160
of the AV side of things which is a massive undertaking.

01:34.160 --> 01:42.760
So credit to them and if you see some volunteers please remember to thank them.

01:42.760 --> 01:48.160
Okay and now the prize draw.

01:48.160 --> 01:52.480
So I think the highest number ticket was 39, if you have a ticket with a higher number

01:52.480 --> 02:02.840
than that, jump up and yell so that I put the correct range in the random number generator.

02:02.840 --> 02:15.800
So let's import system.random, let's make a generator, a new stdgen, actually I'll do

02:15.800 --> 02:26.080
it in a, I'll use a monad, monad for this new stdgen bind and what do we need to do

02:26.080 --> 02:27.080
here?

02:27.080 --> 02:41.120
Random R, so random in a range from 1 to 39, it's inclusive, okay take my word for it,

02:41.120 --> 02:43.120
it'll be fast enough.

02:43.120 --> 02:56.120
Okay and we need to, we'll need to do a random RIO, is that a function, we'll use new stdgen.

02:56.120 --> 03:01.560
We have to use a monad and a bind here just because this is the Haskell dev room and we

03:01.560 --> 03:08.760
need to play up to those sayings that people have that we're all obsessed with monads

03:08.760 --> 03:13.960
in the Haskell community and that's all we ever talk about.

03:13.960 --> 03:24.200
Okay and we'll need to, let's see, pull out the first value, there we go, okay 35, who's

03:24.200 --> 03:27.360
got number 35?

03:27.360 --> 03:32.120
Not here, I'm just going to keep going then.

03:32.120 --> 03:43.240
Number 9, yes we have a winner, okay, I'll pass that back, thank you, okay I might actually

03:43.240 --> 03:59.960
hand these down and get someone else to do the running around, okay, number 26, okay

03:59.960 --> 04:15.400
number 29, yep here we go, 33, there we go, everyone's right at the front, okay and the

04:15.400 --> 04:28.840
grand prize, Australia's finest export, number 3, well done, okay, I'll bring up to you in

04:28.840 --> 04:33.960
a minute, okay so thank you everyone, that's a wrap, cheers.
