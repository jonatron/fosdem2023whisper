{"text": " Welcome everybody. It's amazing to be back. It's amazing to be back in Brussels in person and see that many people here looking for an answer to the question, can we do an open source chip design in 45 minutes? And to save you all the hassle of actually just listening through this talk. Yes, we can. Thanks. Let's be great and enjoy Brussels. Or if you want to know more about how that actually can work, stay here. So we're going to look at technology. Obviously, this is for them. We're going to look at tools and process how to build an open source chip. We'll be looking at community because this is for them. We want to talk about the people and communities behind all of these efforts. And we will predict the future. Let's see how that goes and we'll see some examples of where that potentially went wrong in the past. So standing in front of you today is Philip. I'm a hardware developer. I've been doing a fair amount of software. I've been involved in open source for a fair amount of time. I gave my first foster target just looked 11 years ago. You find some contact information there. And I'm currently working at this company here. I've been doing chip verification for high-end mainframe CPUs. So that brings all the new together, actually. And I'm also a maintainer of the open source Cocoa2B project. And we'll get into that in a second. Previously, I was working at Lawrisk and open Titan. Again, to buzzwords just for you to Google if you want to. So open Titan is a security chip fully open source that you actually can get involved just like any other software community. I'm here today representing the Fossi Foundation. And this is a foundation there to kind of steward and take care of the open source chip design movement. It's based on individuals. And it's a non-for-profit registered in the UK. Also has been around for quite a while. And was initially born out of the open risk movement that did a open source processor CPU core back, probably, I don't know how many years by now, 10, 15, something like that, before risk 5 was a thing. So that's it for the introduction. Let's go into the technology. How do we build a chip? There are two main things that we need. First, we need to think about. We have an idea. Obviously, that's where we start. But then at some point, we need to implement the functionality. We do that. It looks similar to a regular programming task. So this is the logic design part. And that one is pretty well understood these days. Also an open source. We'll see why that is the case and why that has been thriving for many, many years now. The second part is the back end or the physics or the real world. The thing that actually gets us closer to not having a description of what our hardware could do, but actually a real physical chip that we can then potentially hold in our hands. So this was the part that was tricky so far. And again, we'll get into more of the details of that. But these two things are the ones we need. We need the logic, the functionality, and we need the implementation to make this a real thing. As in so many cases, kind of there is the terms are overloaded and fuzzy and ambiguous. So for my purpose here, I'm going to use the term front-end for kind of the logic part design. And then there will be a back end as well. So if you're coming from the web world or the JavaScript world, that probably means something very different to you. So if you have a front-end designer in IBM, they're potentially doing JavaScript because that's what they do as well. Or they're potentially doing chips. You don't know. Has led to interesting conversations in the past, I must say. So the front-end, I kind of briefly alluded to that. It's just like programming. So there are different levels of programming languages and hierarchies. There is, for example, high-level synthesis starting at the top. Well, if you would buy such a high-level synthesis tool, that would probably tell you you start with an idea and then maybe an algorithm, something that is fancy, and then just run the tool and you get your chip out of it immediately, kind of done. Some of them will sell you tools that allow you to start with a, well, in marketing, it sounds like an arbitrarily complex C or C++ code base and just run that high-level synthesis tool and you get a chip design out of it. Nothing, no human involves, works perfectly. Now, anybody who has C and C or C++ code bases will kind of attest, this is probably not how reality works. And it doesn't. Beyond that, again, the boundary is slightly fuzzy. There are high-level languages that make it ideally more convenient to write a chip. And then at the lowest level almost, there's always system Veriloc or Veriloc and PHDL. Again, system Veriloc being kind of slightly misleading in terminology. So system Veriloc is the current standard for hardware description languages that was previously called Veriloc. Some others use it as system Veriloc being a verification language, well, Veriloc is the design language. Again, let's make it as confusing as possible. It's the language called system Veriloc these days. The alternative is VHDL. Again, just like the C and yeah, more or less the C or C++ of the hardware world. And below there, that's typically not a, that's not a programming language. It's just a typically Veriloc as well. Just a lower-level representation of the same thing. That is the net list, which is effectively a C of ands and ors, and then connected by wires. So that's representing your logic. So these are the kind of the programming languages that you would use, and we'll get into a couple examples in a second. And then obviously, there's all the other stuff. Test frameworks, build tools. You need to have a proper conversation about a build tool. Otherwise, it's not a real programming environment. I mean, who are we if we can't argue endlessly about build tools. There are developer productivity tools. It's actually one of the areas where open source really shines compared to some of the commercial offerings and simulators. And again, we'll get into those in a second. So let's have a look at a couple examples. We want to do open source after all. So hardware description language that we can choose from. And the list is quite long, even though it kind of narrows down quickly once you kind of look deeper. So there is system Veriloc and Veriloc. So this is an IEEE standard. You can download a standard just like the C standard. And this is effectively the most commonly used language to do hardware design. It's quite old, which is not to say much of a problem, but it has been continuously updated. The other problem about system Veriloc and Veriloc is kind of years come and go and programming concepts and ideas come and go as well. The problem is if your language stays around that long, you just add everything. So if you look at the system Veriloc standards, it's huge. From that, it's huge as the C++ standard. But it will have some interesting corner cases if you look at that. And that has interesting side effects, because now we have a fair amount of tools, and we'll get to that in a second, how many tools you actually need to evolve to get a hardware design working. So all of those need to understand ideally the same subset of system Veriloc. And it also kind of interpreted the same way. So that's not always the case. That's why hardware designers who are per se already quite conservative in the tools they're choosing, will end up with a very kind of old school subset of Veriloc that you, India, and allowed to use. VHDL is another option, same story there, just slightly different. The Veriloc community is much larger. And especially if you're looking at producing real ASIC chip designs, you're going to look at Veriloc mostly. But then, program names as said come and go. So there are some interesting new ones up there as well. There's BlueSpec. There are a fair amount of Python-based HDLs, and some of them are more low-level than ours. So there is MyGen, Amaranth, and MyHDL, and a couple others. So this list is, by the way, no. It doesn't need to be complete. And it isn't complete. And there are a number of hardware description languages or programming languages that are based on functional programming languages. Spinal HDL, Chisel, and Clash, for example. Chisel, for example, being quite, well, often used these days because, I don't know, who has heard about Risk 5? Let's maybe raise your hand. So Risk 5 is an open-source instruction set architecture. So, like, the x86 instruction set architecture or ARM, the 78 instruction set architecture. And then, kind of that was developed in Berkeley originally. And they also developed a hardware language called Chisel. So the initial Risk 5 core implementation, the Rocket core is implemented in Chisel. And since that's open source and widely used, kind of Chisel also spread more widely. So you'll see that. And then there is a, I'm not quite sure how new or old it is, the circuit LLVM effort that kind of tries to build a LLVM-based compiler infrastructure to then place hardware languages or other pieces of functionality on top of. I've actually not seen that many, kind of, useful tools coming out of that LLVM-based middle layer. So we'll see what the future brings in that regard. So we choose programming languages. And then the next thing you want to do if you actually want to build a chip is ideally not write everything from scratch. So you reuse, you integrate existing things, and they're typically always called IP cores in that world. So there are a couple of options that makes it easier to integrate. So there is no, unfortunately, central package manager or something like that, like a cargo or an MPM or something like that, that you would have in the new or new software world. So, but what you have instead to do is more or less Google for whatever you might need, and you might find an abandoned Git repository or a sit drop somewhere that contains what you're looking for. And often it comes without, this has been potentially taped out, so a chip has been produced out of that, and it's stable, so we're not going to touch it again. So many of these kind of IP cores are considered stable because as soon as you've used them once, you don't want to touch them again. So you rarely have a fancy community around those cores. It's just, it's there, you use it, and then you're on your own. So that was, and still is, this website called OpenCourse, which was kind of a directory for open source hardware blocks. It's been unmaintained for quite a while, but it's still there. So if you're looking for, of course, it might be a good option, but again, don't expect that much of an active community around these offerings. And yes, I guess the best, that's why the slide is quite empty, option is just Google, and you'll find something. So now that we have put together a logic design, we have written some stuff on our own, we choose in the programming languages nobody else has been using before, and we added some IP cores that nobody was maintaining. So now we want to see if it actually works. I mean, it feels unlikely if I phrase it like that, but the chances are it actually does. So we need to verify it somehow, better or not so good. We're potentially documented. Nah, let's not do that. We want to make it look pretty. I mean, that's what we spend most of our time, don't we? I mean, it's tabs or spaces or indent here or there. It needs to look pretty, even it doesn't work. So that's something we need to do. And that's something the open source community was always fantastic about. And that's clearly something we're bringing to the world of commercial chip design. We need to simulate it. Because at this point, we're just doing logic design. So we don't have anything, we don't have a chip yet. So we somehow need to see what it actually does. And we potentially can run it on FPG. And I'll get to that in a second. So let's have a look at a couple buzzwords here of what is possible these days in the open source chip design world. Simulators, we start with that one. There are kind of three main simulators. And you see that they're main simulators because they have a logo. There is a fourth simulator that's rarely used, NVC, and doesn't have a logo. So I think that indicates what's going on. You also see by the style of the logos, what are the older projects? At least it's slightly misleading, I must say. And so on the top right, we have Ecois VariLog, which is an event-based VariLog simulator. It has been around for quite a while. It's stable, and it works really well. It's widely used. But it doesn't support much of the more modern system VariLog features. And it's not that fast. It's sufficiently fast for smaller designs. And it's kind of the standard choice if you just want to get started. Ecois VariLog is here. If you're looking for a BHGL option, there is GHGL, I think the most actively maintained BHGL simulator these days. And there is VariLog later in the middle, which is slightly different because it simulates VariLog as well. The name gives it away, I would say. But it's a cycle accurate simulator. So without going into too much of the details here, if you have kind of a real chip design, you clock it. And then you get kind of one clock pass per clock. Well, that's ridiculous. But that's kind of the only times when VariLog kind of re-evaluates things that are going on. In an event-based simulator, you get a slightly different behavior. Either way, VariLog behaves pretty much like a real chip would do afterwards. And it's a very, very active community. And it's typically based around the synthesizable subset of VariLog. So because that's kind of what it targets. It targets only the logic that you then want to bring on a chip and not so much the system VariLog that you can use to actually write a test bench or verification framework around it. The verification frameworks, I just mentioned that. Who has heard of UVM, the one up here, couple ones? Okay. So UVM is an interesting one. It's a system VariLog verification methodology. And already with methodology you kind of breathe this air of being designed by a committee. And that's how it looks. It's effectively a class library, a framework of classes and instructions on how to use them and when to use them to actually verify a chip. So write a test bench, more or less. So that's your Google test of VariLog, if you wish to. And there are a couple other options. And I mentioned that I'm involved there. So I'm going to mention that prominently. There's CocoDB, which gives you a way to write a test bench in Python that is then testing your hardware logic. There is OSVVM for BHDL designs. And there is on the top, just one of the further options. Symbiosis, if you don't want to do simulation-based verification, but you want to do formal verification, so you want to prove that certain things are happening or not happening. So this is then effectively using a SAT solver behind the scenes to prove some things can be done or can't be done. So that's a very different verification approach and works very, very well for some problems, not for all of them. And so you typically, if you're kind of trying to gain confidence in your design, you definitely go for some simulation-based verification, so simulation-based testing. And then you maybe throw in some formal around some specific areas. And while I'm putting these here, so this is kind of the way to do verification not new, but what we see here is that we have a fair amount of options in open source that are very, very high quality and ready to be used. So that's great. Build systems, and I need to mention the first one first. Who has heard of Feustock? Oh, a couple ones. So there's this guy called Ola Chingren, quite active on Twitter as well, and he's always writing award-winning software. So he started that initially when he just saw a tool that apparently has gained an award, but he couldn't find the award that it was awarded. So from then on, every tool he's writing is award-winning, even though it has never won any awards. Actually, I think Feustock has won one or two awards by now. So I think that's something we only took copy. Just make sure that we always say our software is award-winning. And from down, it's just much better. So Feustock is a build system for hardware designs, and Idyllize is a build system backend to make kind of the hardware design put together and feed that to a variety of different tools that are involved. So just like driving your compiler. There was VUnit, a regression manager. Well, okay, another maybe interesting term I'm saying regression manager here. So a regression in the software world would be something was working, and then it would broke it somehow. So kind of functionality degraded in quality. A regression in the hardware world would be somebody just running a fair amount of tests. So effectively, Unite DCI would be a regression, just to add confusing terminology. And there are a fair amount of other options for build systems. Again, just Google them and then fight about it, obviously. We talked about white space before, and when you're done with your fighting about your build system, you obviously need to fight about your right style guide to use for your programming languages. So we have come accustomed in the software world to there being kind of clang format and other go format and other enforcing, or not so much enforcing, auto format is there. If you look at a very low code and VHDL code, you see there is no format. And you see often there is kind of no taste either. So it just looks awful. And if you look through code, then everything looks different, which isn't that much of a problem in the commercial chip development world, because you own something. It's kind of, it's John's core. So this is kind of the piece of code that John is working on. Only he needs to be able to touch it, which is then up to John, however, they want to kind of format their code. And I've done that for 20 or 30 or 40 years, so they just have their in-house style that you also see changing over time. And that's not something that we kind of find normal in kind of these days of software development. So there was an effort, and there still is an effort to bring formatting and linting and language server integration. So that gives you a visual studio code integration, or other kinds of integrations. And the variable is the tool to look for there. There is very later lint. Part of that, very later simulated, I've shown before. And it actually does more static analysis jobs as well. And there are a couple other options to choose from. And mostly mentioning that a very long part here, you'll find that, because that's what I'm most familiar with, but I'm very sure there is an equivalent BHTL kind of option for many of these things as well. And if you know them, by the way, just raise your hand and we'll just add it right away. So let's have a look at just one or two examples. So this is a don't need to read it in full. So this is a piece of very low-con-top assigning something based on a ternary statement. And think about very like it's statically, it's not statically typed, but it still is easy to assign for example, 32 bits to seven bits or the other way around. And very likely, well, most very log tools will be, well, very much equal end of that fact and just strip off some bits that are not used or padded in some way. So what you would expect from many languages where the compiler just tells you, well, this is just bullshit that you've written here. And very likely need some further tools to do that actually. And variator lint is one of the options here. Just random examples where you actually need insight into the variables and the constants that are being used. With variable, we now also can do something that we also know quite well from a software world. It's just have style lints and stuff like that running in CIN actually give you feedback right away. And for example here, I'm having a screenshot from a open-type repository, a pull request, where one of these bots actually gives you immediately feedback on, well, that's training space. That's kind of the most boring example. But also things like rules about naming certain constructs. We don't need to go into the details of what's happening here. And I think I've seen some people from Antmicro here before. So if you have questions about variable, I think that people up there are to blame and to ask questions. But I've done a great job. So let's keep it at that for the moment. Frontend, we're doing great in terms of chip design. So we have all the tools. We've seen that the slides only always had a subset of tools that we can use. So Frontend is doing great and has been for ages. I mean, one thing I would love to see is that we just stop reinventing Verilog parsing. It's a huge language and we have so many tools that all think they can parse Verilog and they just can't. They just really can't. I mean, everybody thinks they just strip at that part of the standard and somebody uses it and you get these weird pipelines that just don't work anymore. So maybe a unified frontend at some point in time. And I know there have been a couple of attempts to actually do that. And it just leads to that situation that you now have one more frontend to care about, as always. Okay. We have our logic design. We can run it on an FPGA. Sure. And in the FPGA world, there are kind of two main manufacturers of FPGAs and there is something else. So who does, well, who does not know what an FPGA is? Okay. Very small number. So it's a field programmable gate array. So it's effectively a chip that you can reprogram. Let's put it like that in very simple terms. And normally you would use the tool that the vendor provides you that would be in, how do I name this thing? So it would be Vivado for Xilinx, now some other company, or Quartus for Altera, now Intel. Whatever. Just get bored. Come on. Stop it. Or if you don't want to use those closed tools, you can use symbiosis or formally Simpliflow or now for FPGA. And it gives you a reverse engineered way to actually target Xilinx 7-series FPGA. So these are the most common FPGAs. And actually do full designs, full open source using only open source tools and get them run on an FPGA. The problem there always was that kind of the programming instructions, the way how to kind of structure a program to put it in an FPGA wasn't known. That's what they reverse engineered and then put together kind of a various open source tools that then allow you to actually target FPGAs. So there is FPGAs are pretty much like if you're trying to build a phone, but the only thing you can do is actually build that. It's like it's nice, it's functionality, it's kind of similar, but it's pixely, you know. It's just it's not a right thing. And I mean I actually outsourced that work to my niece and nephew. So it's just well that's what we want, don't we? We want kind of open source silicon. We want a real chip. We want this thingy, not that. So how can we do that? We need the back end, we need the physical implementation. That adds a whole lot of new complexity, of course. And that's where things become interesting. And what we want is we want to go from RTL, so that's your registered transfer layer, a level, layer, level, I don't know. So that's your very lock to GDS2. That's a very old data format that you then send to a company that produces your chips. So that's a fact. So we want a RTL to GDS2 flow. And I have an example of one here. So we start with our very lock on the top. We do synthesis. And I'm not going to explain them all in detail here, because otherwise we're going to be here for a long time. But just to demystify some of the acronyms in here. So we do our synthesis that gives us a net list. We do a static timing analysis. So to see if we have put potentially too much logic after each other, so that you can't clock it anymore, that you only can clock the two kilohertz or something like that. That's what the static timing analysis does in the first one. So there's DFT designed for tests. If you have that chip, you're going to have a hard time looking inside it. So you want some test structures inside your chip that allow you to observe what's going on. So these are typically scan chains, something that JTEC was and still is used for, apart from the many other things that JTEC is being used for. But that's what DFT does. And these scans are automatically inserted normally for all or most registers. And then you have that. You still have a very long description. And then you do floor planning, placement, clock tree synthesis optimization, and global routing. So in the end you get a number of transistors and that you connect them somehow and you optimize them in a way that kind of minimizes or maximizes power or performance or area, depending on what you're looking for. And kind of all the things that we've skipped over so far that are now relevant in the physical world. For example, if you have that clock that goes to your chip, you always need to make sure, obviously also need to make sure that actually gets distributed across the chip. So you just have a single pin potentially where it comes in, but it needs to be everywhere. So you have that clock tree that you need to insert somehow. Something we don't need to worry about, for example, or not that much worry about if you're doing an FPGA design or a simulation, because that's something FPGA vendor has already done for us. So we're able to kind of ignore many of these things when we're just doing kind of FPGAs before. And then since we're back in the physical world, you need to manufacture them. We have antenna diodes that we need to insert. And after we've done that much processing, we're not quite sure what we got. So what we want to make sure is at this point that we actually know that still the original design is what we did. So we do a logic equivalence check that's the LEC here. And then we do detailed routing, RC extraction, another timing analysis. And finally, we're at GDS2 streaming. So that's when we do the file writing. And there we got our GDS2. Easy, isn't it? So just need to kind of hook those tools up together. Done. Beautiful. Why didn't we do that ages ago? I guess we were too lazy to just do that. Well, the reason is a different one. I just skipped out one part of the picture. And that's one input up here. That's the PDK, the process design kit. And this is something you get from a fab. And if you don't get it, you don't get it. You're not going to do any of that. And I was standing here in 2016, a couple years ago. These were some of the slides, style change as well. So we have the process design kit. We are getting their standard cell libraries. We get a fair amount of design rules. Like if you have ever done kind of PCB manufacturing, printed circuit boards, you also get a number of rules that you need to obey so that they can actually manufacture it. It's typically not that long that list. And if you want to fab a chip, the list is significantly longer. Electrical parameters. So you get it from the foundry. And you need to sign an NDA for that. That's where we stopped in 2016. That's where we stopped in 2017. And that's why we said back then, you can't do it as a hobbyist. So just there's no way of doing that. There were some companies who did it. And low risk was one of them. If you are kind of big enough, they still allow you to sign that NDA. But that's where we stopped. And then there was this talk. This was two years ago now. Tim Ansel, what? It's 2013. So 2020, I think. So that's even more. Yeah, let's say two years plus, minus. And where Tim Ansel, working at Google, was presenting the SkyWater PDK. So this is for the first time ever that, well, at least in the last 20 years, let's put it this way, a process design kit. So the rules from Foundry were open source. And they are available on GitHub right there. So let's think and switch over here. Can I? No, I can't. Let's keep it up there. So, yes, you can download them from GitHub. So now you solve that one problem. You actually can now manufacture a fully open source chip because you do have these rules. The downside here is this is a 130 nanometer PDK. If you're looking at current 3, 5 nanometer chips in your mobile phone potentially. So when was 130? 130 was this time. So these are Pentium 4's that were 130 nanometer roughly. So that's a net burst architecture. AMD roughly at the same time. So that's around 2002 where that technology was first introduced. Maybe you still have some of those PCs actually around. But nonetheless, these chips, well, this process is still being manufactured. Otherwise, Foundry wouldn't be able to produce something out of that. So they still have processing lines that actually use that flow. So the other thing that was happening is that Google said not only we talked at Foundry and they gave us this PDK away, we're also funding a shuttle. So that is effectively a cost effective way to produce chips together with others on a single wafer. And I said we're doing a couple of those every year. And if you submit an open source design, you get that manufactured for free, really kind of free as in no cost at all using only open source tools. So free as in real free as well. So that for the first time made it possible for everybody who only has internet access and doesn't need any cash at all to get a chip manufactured. So these are obviously not volume chips. So these are kind of experimental chips for you to actually give it a try. But you can for the first time ever you can. So this was a old article found that from these 130 nanometer chips, you know, kind of in a couple years they said that was in 2000, we should be able to reach 8 to 10 gigahertz on slightly better nodes. So I think that was around 70 nanometers. So if they said that would be possible, I mean, we are only like 18 years behind that prediction now. Let's see what we in the open source actually can do and probably not going to reach those eight gigahertz. But there's a fair amount of room in those old process nodes still to be optimized and still to be explored. So let's do some exploring actually. We've seen that picture before of that flow. You can get that flow very easily. You do a git clone of the open lane repository. You CD into it. You run make, make test and make mount and that gives you a docker container. And that docker container is something I have open right here. So this is the open lane docker container. And since we are recently short on time, I'm not going to run it in full. So I did run the flow. So this is a trivial design. So that's a SPM, a serial parallel multiplier. So this is a very small piece of very low code that we will then turn into a chip design. It's part of the standard demo, so I guess you can give that a try as well. So let's have a look. The flow, the processor runs through in a minute or after two minutes for that trivial design. For a larger design, it takes an hour for an AES core and a full SOC taking a couple 10, 20 hours depending on how you're doing. It's still not the end of the world. So that was a boring summary, isn't it? Let's have a look at the output right away. So it comes with a GDS view. So GDS is the output format, as we said. And just starting from that very log and using only open source components, you get the full GDS. And that is confusing because physics are confusing. So let's see if we can get rid of some things here or just have a look at the left side first. So we see the different cells that are being used. So the Sky Water Foundry provides us with a number of ands and ores and knots and other things optimized for different process callers. And they get chosen and then inserted into that design. So let's get rid of a bit of the stuff that we actually need for physics. So decaps, who needs those, fillers, nobody is there either. So that already gives us a slightly better picture. Maybe we can get rid of some of those metal layers, the connectivity. I mean, who needs that? And we see we can get closer to the actual interesting parts. So that is effectively your file that you sent to the Foundry. And you can do that as set free of cost using the shuttle program. Or if you don't want to use that, you can also pay a company called eFabulous to then fab that for you. As I said, using only the open source tools. Since we are really short on time, here are the things that you can have a look and play with. You're also, if you don't want to install anything locally, you can have a look at that link that gives you a Jupyter notebook, an online way to just actually play around. And just in your browser, write some VHDL or Verilog, actually in that case, and synthesizes and have a look at the GDS2 in the end. Only in your browser, nothing else needed. There is a project called Tiny Tapeout, where you can get a very, very small chip manufactured and learn how to do it. And they have a very, very nice GitHub action set up. And I need to show that because it's just fantastic. So apart from kind of you have your Verilog and then in the end, your GDS, you also get a built-in 3D GDS viewer that allows you to zoom through your design and see the metal layers, see everything in there. And let's get rid of some of the, oops, there was a wrong button. Oh, how can I help you? Some of the layers, so that was remove the fields and the decaps, and then remove the cell geometry as well. So that's your standard cells now. And we can actually look at them and see what they are and also look at the different layers. So that's really cool. And that shows if you have now all the open source tools, you can do all that. You can do that in a GitHub action where before when you actually had licenses and license servers and all that crap that comes with software that you need to buy for a lot of money, it's not just expensive, it's also a pain to use, and stuff like that wouldn't just be possible. So open source is here with that stuff, and it's staying, I'm telling you. So we got that one. And again, the link is there. So let's have a look at who's actually doing that. So I had a look at some GitHub stats. So yours is the synthesis tool and actually quite old tool. So that's 10 people. Again, it's a random month. It's at last month roughly. So 10 people working there. So that's a healthy community of people adding things. It's not a huge community. And this is a thing we'll see repeating. Very late at the simulation tool, 20 people in the last month pushing and doing stuff. CocoaDB, not that many people, but still. The SkyWater PDK, that's the manual, effectively, of your PDK. And that doesn't see that many changes. And I think that's one of the areas where more people could get involved. And actually, where we have as a community, more to figure out because that description that PDK is not complete and not error free, like in any document that you write, there are probably going to be errors. So we're still looking for more ways how to get people involved and fix those kind of even small errors. So open lane, we've seen that flow, reasonably active as well. We've come open road, which is within open lane, they always make it sound similar. But open road is kind of the majority of those physical design tools and bundling them together. What open road has an idea, it was funded by DARPA. And the idea is to be able to go from an RTL to a GDS 2 and 24 hours with no human in the loop, which is something very different from the normal hardware world, where you always have tools that are... Well, you can put it in two ways. You can say the tools are too crappy, so you need to go manually in and fix some stuff in the way. Or you say the tools are good enough and you just need that human to actually give it that special touch because hardware is just so difficult. It feels like at times when you set up compiler, isn't exactly good enough to actually really compile my software. So at times I just go in and just do a bit of hand assembly editing because there's corners around memory access. So they just need a bit of manual work. So that's how hardware design works. And that's what they want to change is just make it completely automated. Just for comparison, this is how things on a Linux kernel would look. So the hardware community is significantly smaller than the software community. And that's why Ruby, for example, is funding some of these things, is finding hardware engineers is quite tricky. And there is just tons of software engineers and tons of good ideas that have been explored and tried in the software world. So we want to bring that to hardware as well and make it accessible there. We'll look at it very later. And we also see more and more chip designs being submitted to OpenMPW. So that's the free as in cost shuttle program where you can just submit your designs. So whenever somebody learns typically by themselves how to do a chip design and then submit it, it kind of shows up in that graph. So there have been eight free of those manufacturing runs now. And there is more to come. The first chips are back. So the MPW1 chips. You see this is a fair amount of lead time. It takes typically at least two and a half months roughly to get chips back from FAB. But then you want to test them and you want to actually potentially fix errors and these OpenMPW ones. Since all the tooling is new, that's still a fair amount of problems in them. So bringing them up is not quite trivial and they don't fully work. But that's what we're learning. And that's why we kind of do that repeatedly and again and again. So we don't need to be fully correct the first time. We just have a couple more tries. So looking at the future, always hard. We're going to see innovation. We're going to see change that nobody predicted. And that's the good thing about making this open source. So somebody who has an idea can actually give it a try and just see if they can do it. Pretty much before, if you wanted to do chip design, you had to be within a large company that did it the way they always did. So you had to do their product end of story. So there is no that much unpredictable innovation. Tools getting more accessible. We can actually get access to them. And finally, we can actually revolutionize learning about hardware. Before, when I was taking a university course, it was kind of very boring theoretical. So you had kind of course materials from 10 years ago from somebody who has never seen a chip being made in their life because they just actually used the course material that they got 20 years ago. And that's just how teaching evolves. And that's kind of the teaching we see in very many universities about hardware design. So they might have a VHDL, a very low course, but it's so far from reality. It's kind of not even funny. So we can actually now learn how to do it the real way. There are some news. I'll let the links up there. And finally, if you actually want to take a paid for learning course, with all those open source tools, there is the zero to AC course from Matt Van. So he helped me actually preparing some slides to have a look at that stuff. If you're looking for in person events, there is a lecture coming up in the US, a open source hardware conference that the Fosse Foundation has been organizing for a number of years. And there is all kind of coming back after COVID, the main open source hardware conference in Munich this year. I think we haven't announced that very widely at September 15 and 16. And just stay for the October fest. Just take your hotel room a couple more days. And this is going to be a great experience. We end with a quote that I found, an atmosphere of excitement and anticipation pervades this field. Workers from many backgrounds, computer scientists, electrical engineers, physics, physicists are collaborating on a common problem area, which has not yet become classical. This territory is vast and largely unexplored. The rewards for those who simply press forward are great. So this was written in 1978. And with there again, with the open source world, let's make this open source chip design a reality. We have all the necessary ingredients. We have all the necessary tools. Let's make it happen. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.64, "text": " Welcome everybody. It's amazing to be back. It's amazing to be back in Brussels in person", "tokens": [4027, 2201, 13, 467, 311, 2243, 281, 312, 646, 13, 467, 311, 2243, 281, 312, 646, 294, 38717, 294, 954], "temperature": 0.0, "avg_logprob": -0.23033319619985726, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.5696744918823242}, {"id": 1, "seek": 0, "start": 11.64, "end": 18.96, "text": " and see that many people here looking for an answer to the question, can we do an open", "tokens": [293, 536, 300, 867, 561, 510, 1237, 337, 364, 1867, 281, 264, 1168, 11, 393, 321, 360, 364, 1269], "temperature": 0.0, "avg_logprob": -0.23033319619985726, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.5696744918823242}, {"id": 2, "seek": 0, "start": 18.96, "end": 27.32, "text": " source chip design in 45 minutes? And to save you all the hassle of actually just listening", "tokens": [4009, 11409, 1715, 294, 6905, 2077, 30, 400, 281, 3155, 291, 439, 264, 39526, 295, 767, 445, 4764], "temperature": 0.0, "avg_logprob": -0.23033319619985726, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.5696744918823242}, {"id": 3, "seek": 2732, "start": 27.32, "end": 41.76, "text": " through this talk. Yes, we can. Thanks. Let's be great and enjoy Brussels. Or if you want", "tokens": [807, 341, 751, 13, 1079, 11, 321, 393, 13, 2561, 13, 961, 311, 312, 869, 293, 2103, 38717, 13, 1610, 498, 291, 528], "temperature": 0.0, "avg_logprob": -0.24866253055938303, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0004096024204045534}, {"id": 4, "seek": 2732, "start": 41.76, "end": 51.16, "text": " to know more about how that actually can work, stay here. So we're going to look at technology.", "tokens": [281, 458, 544, 466, 577, 300, 767, 393, 589, 11, 1754, 510, 13, 407, 321, 434, 516, 281, 574, 412, 2899, 13], "temperature": 0.0, "avg_logprob": -0.24866253055938303, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0004096024204045534}, {"id": 5, "seek": 2732, "start": 51.16, "end": 56.24, "text": " Obviously, this is for them. We're going to look at tools and process how to build an", "tokens": [7580, 11, 341, 307, 337, 552, 13, 492, 434, 516, 281, 574, 412, 3873, 293, 1399, 577, 281, 1322, 364], "temperature": 0.0, "avg_logprob": -0.24866253055938303, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.0004096024204045534}, {"id": 6, "seek": 5624, "start": 56.24, "end": 63.32, "text": " open source chip. We'll be looking at community because this is for them. We want to talk about", "tokens": [1269, 4009, 11409, 13, 492, 603, 312, 1237, 412, 1768, 570, 341, 307, 337, 552, 13, 492, 528, 281, 751, 466], "temperature": 0.0, "avg_logprob": -0.13810227898990407, "compression_ratio": 1.5159574468085106, "no_speech_prob": 0.0005376320914365351}, {"id": 7, "seek": 5624, "start": 63.32, "end": 70.76, "text": " the people and communities behind all of these efforts. And we will predict the future. Let's", "tokens": [264, 561, 293, 4456, 2261, 439, 295, 613, 6484, 13, 400, 321, 486, 6069, 264, 2027, 13, 961, 311], "temperature": 0.0, "avg_logprob": -0.13810227898990407, "compression_ratio": 1.5159574468085106, "no_speech_prob": 0.0005376320914365351}, {"id": 8, "seek": 5624, "start": 70.76, "end": 75.8, "text": " see how that goes and we'll see some examples of where that potentially went wrong in the past.", "tokens": [536, 577, 300, 1709, 293, 321, 603, 536, 512, 5110, 295, 689, 300, 7263, 1437, 2085, 294, 264, 1791, 13], "temperature": 0.0, "avg_logprob": -0.13810227898990407, "compression_ratio": 1.5159574468085106, "no_speech_prob": 0.0005376320914365351}, {"id": 9, "seek": 7580, "start": 75.8, "end": 87.44, "text": " So standing in front of you today is Philip. I'm a hardware developer. I've been doing a fair", "tokens": [407, 4877, 294, 1868, 295, 291, 965, 307, 21144, 13, 286, 478, 257, 8837, 10754, 13, 286, 600, 668, 884, 257, 3143], "temperature": 0.0, "avg_logprob": -0.22330983927552128, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.0016319251153618097}, {"id": 10, "seek": 7580, "start": 87.44, "end": 92.32, "text": " amount of software. I've been involved in open source for a fair amount of time. I gave my first", "tokens": [2372, 295, 4722, 13, 286, 600, 668, 3288, 294, 1269, 4009, 337, 257, 3143, 2372, 295, 565, 13, 286, 2729, 452, 700], "temperature": 0.0, "avg_logprob": -0.22330983927552128, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.0016319251153618097}, {"id": 11, "seek": 7580, "start": 92.32, "end": 99.12, "text": " foster target just looked 11 years ago. You find some contact information there. And I'm currently", "tokens": [17114, 3779, 445, 2956, 2975, 924, 2057, 13, 509, 915, 512, 3385, 1589, 456, 13, 400, 286, 478, 4362], "temperature": 0.0, "avg_logprob": -0.22330983927552128, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.0016319251153618097}, {"id": 12, "seek": 9912, "start": 99.12, "end": 109.68, "text": " working at this company here. I've been doing chip verification for high-end mainframe CPUs. So", "tokens": [1364, 412, 341, 2237, 510, 13, 286, 600, 668, 884, 11409, 30206, 337, 1090, 12, 521, 2135, 17265, 13199, 82, 13, 407], "temperature": 0.0, "avg_logprob": -0.2877687072753906, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001963863178389147}, {"id": 13, "seek": 9912, "start": 109.68, "end": 116.12, "text": " that brings all the new together, actually. And I'm also a maintainer of the open source", "tokens": [300, 5607, 439, 264, 777, 1214, 11, 767, 13, 400, 286, 478, 611, 257, 6909, 260, 295, 264, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.2877687072753906, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001963863178389147}, {"id": 14, "seek": 9912, "start": 116.12, "end": 122.16, "text": " Cocoa2B project. And we'll get into that in a second. Previously, I was working at Lawrisk and", "tokens": [29787, 64, 17, 33, 1716, 13, 400, 321, 603, 483, 666, 300, 294, 257, 1150, 13, 33606, 11, 286, 390, 1364, 412, 7744, 33263, 293], "temperature": 0.0, "avg_logprob": -0.2877687072753906, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001963863178389147}, {"id": 15, "seek": 9912, "start": 122.16, "end": 128.44, "text": " open Titan. Again, to buzzwords just for you to Google if you want to. So open Titan is a", "tokens": [1269, 17731, 13, 3764, 11, 281, 13036, 13832, 445, 337, 291, 281, 3329, 498, 291, 528, 281, 13, 407, 1269, 17731, 307, 257], "temperature": 0.0, "avg_logprob": -0.2877687072753906, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001963863178389147}, {"id": 16, "seek": 12844, "start": 128.44, "end": 134.6, "text": " security chip fully open source that you actually can get involved just like any other software", "tokens": [3825, 11409, 4498, 1269, 4009, 300, 291, 767, 393, 483, 3288, 445, 411, 604, 661, 4722], "temperature": 0.0, "avg_logprob": -0.161732932795649, "compression_ratio": 1.5673469387755101, "no_speech_prob": 0.00023544229043181986}, {"id": 17, "seek": 12844, "start": 134.6, "end": 143.92, "text": " community. I'm here today representing the Fossi Foundation. And this is a foundation there to", "tokens": [1768, 13, 286, 478, 510, 965, 13460, 264, 479, 772, 72, 10335, 13, 400, 341, 307, 257, 7030, 456, 281], "temperature": 0.0, "avg_logprob": -0.161732932795649, "compression_ratio": 1.5673469387755101, "no_speech_prob": 0.00023544229043181986}, {"id": 18, "seek": 12844, "start": 143.92, "end": 152.04, "text": " kind of steward and take care of the open source chip design movement. It's based on individuals.", "tokens": [733, 295, 2126, 1007, 293, 747, 1127, 295, 264, 1269, 4009, 11409, 1715, 3963, 13, 467, 311, 2361, 322, 5346, 13], "temperature": 0.0, "avg_logprob": -0.161732932795649, "compression_ratio": 1.5673469387755101, "no_speech_prob": 0.00023544229043181986}, {"id": 19, "seek": 12844, "start": 152.04, "end": 157.56, "text": " And it's a non-for-profit registered in the UK. Also has been around for quite a while. And was", "tokens": [400, 309, 311, 257, 2107, 12, 2994, 12, 14583, 13968, 294, 264, 7051, 13, 2743, 575, 668, 926, 337, 1596, 257, 1339, 13, 400, 390], "temperature": 0.0, "avg_logprob": -0.161732932795649, "compression_ratio": 1.5673469387755101, "no_speech_prob": 0.00023544229043181986}, {"id": 20, "seek": 15756, "start": 157.56, "end": 164.84, "text": " initially born out of the open risk movement that did a open source processor CPU core back,", "tokens": [9105, 4232, 484, 295, 264, 1269, 3148, 3963, 300, 630, 257, 1269, 4009, 15321, 13199, 4965, 646, 11], "temperature": 0.0, "avg_logprob": -0.21325132798175422, "compression_ratio": 1.289655172413793, "no_speech_prob": 8.709077519597486e-05}, {"id": 21, "seek": 15756, "start": 164.84, "end": 173.4, "text": " probably, I don't know how many years by now, 10, 15, something like that, before risk 5 was a", "tokens": [1391, 11, 286, 500, 380, 458, 577, 867, 924, 538, 586, 11, 1266, 11, 2119, 11, 746, 411, 300, 11, 949, 3148, 1025, 390, 257], "temperature": 0.0, "avg_logprob": -0.21325132798175422, "compression_ratio": 1.289655172413793, "no_speech_prob": 8.709077519597486e-05}, {"id": 22, "seek": 17340, "start": 173.4, "end": 189.84, "text": " thing. So that's it for the introduction. Let's go into the technology. How do we build a chip? There", "tokens": [551, 13, 407, 300, 311, 309, 337, 264, 9339, 13, 961, 311, 352, 666, 264, 2899, 13, 1012, 360, 321, 1322, 257, 11409, 30, 821], "temperature": 0.0, "avg_logprob": -0.14875305473030387, "compression_ratio": 1.4793814432989691, "no_speech_prob": 4.930387149215676e-05}, {"id": 23, "seek": 17340, "start": 189.84, "end": 196.6, "text": " are two main things that we need. First, we need to think about. We have an idea. Obviously,", "tokens": [366, 732, 2135, 721, 300, 321, 643, 13, 2386, 11, 321, 643, 281, 519, 466, 13, 492, 362, 364, 1558, 13, 7580, 11], "temperature": 0.0, "avg_logprob": -0.14875305473030387, "compression_ratio": 1.4793814432989691, "no_speech_prob": 4.930387149215676e-05}, {"id": 24, "seek": 17340, "start": 196.6, "end": 202.68, "text": " that's where we start. But then at some point, we need to implement the functionality. We do", "tokens": [300, 311, 689, 321, 722, 13, 583, 550, 412, 512, 935, 11, 321, 643, 281, 4445, 264, 14980, 13, 492, 360], "temperature": 0.0, "avg_logprob": -0.14875305473030387, "compression_ratio": 1.4793814432989691, "no_speech_prob": 4.930387149215676e-05}, {"id": 25, "seek": 20268, "start": 202.68, "end": 213.8, "text": " that. It looks similar to a regular programming task. So this is the logic design part. And that", "tokens": [300, 13, 467, 1542, 2531, 281, 257, 3890, 9410, 5633, 13, 407, 341, 307, 264, 9952, 1715, 644, 13, 400, 300], "temperature": 0.0, "avg_logprob": -0.13658769163366866, "compression_ratio": 1.5076923076923077, "no_speech_prob": 3.949911842937581e-05}, {"id": 26, "seek": 20268, "start": 213.8, "end": 220.32, "text": " one is pretty well understood these days. Also an open source. We'll see why that is the case and", "tokens": [472, 307, 1238, 731, 7320, 613, 1708, 13, 2743, 364, 1269, 4009, 13, 492, 603, 536, 983, 300, 307, 264, 1389, 293], "temperature": 0.0, "avg_logprob": -0.13658769163366866, "compression_ratio": 1.5076923076923077, "no_speech_prob": 3.949911842937581e-05}, {"id": 27, "seek": 20268, "start": 220.32, "end": 230.12, "text": " why that has been thriving for many, many years now. The second part is the back end or the physics", "tokens": [983, 300, 575, 668, 30643, 337, 867, 11, 867, 924, 586, 13, 440, 1150, 644, 307, 264, 646, 917, 420, 264, 10649], "temperature": 0.0, "avg_logprob": -0.13658769163366866, "compression_ratio": 1.5076923076923077, "no_speech_prob": 3.949911842937581e-05}, {"id": 28, "seek": 23012, "start": 230.12, "end": 237.36, "text": " or the real world. The thing that actually gets us closer to not having a description of what our", "tokens": [420, 264, 957, 1002, 13, 440, 551, 300, 767, 2170, 505, 4966, 281, 406, 1419, 257, 3855, 295, 437, 527], "temperature": 0.0, "avg_logprob": -0.10892356069464433, "compression_ratio": 1.6355932203389831, "no_speech_prob": 6.62756065139547e-05}, {"id": 29, "seek": 23012, "start": 237.36, "end": 243.20000000000002, "text": " hardware could do, but actually a real physical chip that we can then potentially hold in our", "tokens": [8837, 727, 360, 11, 457, 767, 257, 957, 4001, 11409, 300, 321, 393, 550, 7263, 1797, 294, 527], "temperature": 0.0, "avg_logprob": -0.10892356069464433, "compression_ratio": 1.6355932203389831, "no_speech_prob": 6.62756065139547e-05}, {"id": 30, "seek": 23012, "start": 243.20000000000002, "end": 251.44, "text": " hands. So this was the part that was tricky so far. And again, we'll get into more of the details", "tokens": [2377, 13, 407, 341, 390, 264, 644, 300, 390, 12414, 370, 1400, 13, 400, 797, 11, 321, 603, 483, 666, 544, 295, 264, 4365], "temperature": 0.0, "avg_logprob": -0.10892356069464433, "compression_ratio": 1.6355932203389831, "no_speech_prob": 6.62756065139547e-05}, {"id": 31, "seek": 23012, "start": 251.44, "end": 257.56, "text": " of that. But these two things are the ones we need. We need the logic, the functionality, and we", "tokens": [295, 300, 13, 583, 613, 732, 721, 366, 264, 2306, 321, 643, 13, 492, 643, 264, 9952, 11, 264, 14980, 11, 293, 321], "temperature": 0.0, "avg_logprob": -0.10892356069464433, "compression_ratio": 1.6355932203389831, "no_speech_prob": 6.62756065139547e-05}, {"id": 32, "seek": 25756, "start": 257.56, "end": 269.8, "text": " need the implementation to make this a real thing. As in so many cases, kind of there is the terms", "tokens": [643, 264, 11420, 281, 652, 341, 257, 957, 551, 13, 1018, 294, 370, 867, 3331, 11, 733, 295, 456, 307, 264, 2115], "temperature": 0.0, "avg_logprob": -0.15099516781893643, "compression_ratio": 1.513089005235602, "no_speech_prob": 6.831159407738596e-05}, {"id": 33, "seek": 25756, "start": 269.8, "end": 277.88, "text": " are overloaded and fuzzy and ambiguous. So for my purpose here, I'm going to use the term front-end", "tokens": [366, 28777, 292, 293, 34710, 293, 39465, 13, 407, 337, 452, 4334, 510, 11, 286, 478, 516, 281, 764, 264, 1433, 1868, 12, 521], "temperature": 0.0, "avg_logprob": -0.15099516781893643, "compression_ratio": 1.513089005235602, "no_speech_prob": 6.831159407738596e-05}, {"id": 34, "seek": 25756, "start": 277.88, "end": 284.12, "text": " for kind of the logic part design. And then there will be a back end as well. So if you're", "tokens": [337, 733, 295, 264, 9952, 644, 1715, 13, 400, 550, 456, 486, 312, 257, 646, 917, 382, 731, 13, 407, 498, 291, 434], "temperature": 0.0, "avg_logprob": -0.15099516781893643, "compression_ratio": 1.513089005235602, "no_speech_prob": 6.831159407738596e-05}, {"id": 35, "seek": 28412, "start": 284.12, "end": 288.2, "text": " coming from the web world or the JavaScript world, that probably means something very different to", "tokens": [1348, 490, 264, 3670, 1002, 420, 264, 15778, 1002, 11, 300, 1391, 1355, 746, 588, 819, 281], "temperature": 0.0, "avg_logprob": -0.16715825872218354, "compression_ratio": 1.6166666666666667, "no_speech_prob": 8.231084939325228e-05}, {"id": 36, "seek": 28412, "start": 288.2, "end": 296.88, "text": " you. So if you have a front-end designer in IBM, they're potentially doing JavaScript because", "tokens": [291, 13, 407, 498, 291, 362, 257, 1868, 12, 521, 11795, 294, 23487, 11, 436, 434, 7263, 884, 15778, 570], "temperature": 0.0, "avg_logprob": -0.16715825872218354, "compression_ratio": 1.6166666666666667, "no_speech_prob": 8.231084939325228e-05}, {"id": 37, "seek": 28412, "start": 296.88, "end": 302.4, "text": " that's what they do as well. Or they're potentially doing chips. You don't know. Has led to interesting", "tokens": [300, 311, 437, 436, 360, 382, 731, 13, 1610, 436, 434, 7263, 884, 11583, 13, 509, 500, 380, 458, 13, 8646, 4684, 281, 1880], "temperature": 0.0, "avg_logprob": -0.16715825872218354, "compression_ratio": 1.6166666666666667, "no_speech_prob": 8.231084939325228e-05}, {"id": 38, "seek": 28412, "start": 302.4, "end": 312.12, "text": " conversations in the past, I must say. So the front-end, I kind of briefly alluded to that.", "tokens": [7315, 294, 264, 1791, 11, 286, 1633, 584, 13, 407, 264, 1868, 12, 521, 11, 286, 733, 295, 10515, 33919, 281, 300, 13], "temperature": 0.0, "avg_logprob": -0.16715825872218354, "compression_ratio": 1.6166666666666667, "no_speech_prob": 8.231084939325228e-05}, {"id": 39, "seek": 31212, "start": 312.12, "end": 323.12, "text": " It's just like programming. So there are different levels of programming languages and", "tokens": [467, 311, 445, 411, 9410, 13, 407, 456, 366, 819, 4358, 295, 9410, 8650, 293], "temperature": 0.0, "avg_logprob": -0.1920045359750812, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.0001718407147563994}, {"id": 40, "seek": 31212, "start": 323.12, "end": 331.32, "text": " hierarchies. There is, for example, high-level synthesis starting at the top. Well, if you would", "tokens": [35250, 530, 13, 821, 307, 11, 337, 1365, 11, 1090, 12, 12418, 30252, 2891, 412, 264, 1192, 13, 1042, 11, 498, 291, 576], "temperature": 0.0, "avg_logprob": -0.1920045359750812, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.0001718407147563994}, {"id": 41, "seek": 31212, "start": 331.32, "end": 335.4, "text": " buy such a high-level synthesis tool, that would probably tell you you start with an idea and", "tokens": [2256, 1270, 257, 1090, 12, 12418, 30252, 2290, 11, 300, 576, 1391, 980, 291, 291, 722, 365, 364, 1558, 293], "temperature": 0.0, "avg_logprob": -0.1920045359750812, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.0001718407147563994}, {"id": 42, "seek": 31212, "start": 335.4, "end": 340.28000000000003, "text": " then maybe an algorithm, something that is fancy, and then just run the tool and you get your chip", "tokens": [550, 1310, 364, 9284, 11, 746, 300, 307, 10247, 11, 293, 550, 445, 1190, 264, 2290, 293, 291, 483, 428, 11409], "temperature": 0.0, "avg_logprob": -0.1920045359750812, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.0001718407147563994}, {"id": 43, "seek": 34028, "start": 340.28, "end": 347.59999999999997, "text": " out of it immediately, kind of done. Some of them will sell you tools that allow you to start with a,", "tokens": [484, 295, 309, 4258, 11, 733, 295, 1096, 13, 2188, 295, 552, 486, 3607, 291, 3873, 300, 2089, 291, 281, 722, 365, 257, 11], "temperature": 0.0, "avg_logprob": -0.1760645007142926, "compression_ratio": 1.6101694915254237, "no_speech_prob": 4.340674786362797e-05}, {"id": 44, "seek": 34028, "start": 347.59999999999997, "end": 354.15999999999997, "text": " well, in marketing, it sounds like an arbitrarily complex C or C++ code base and just run that", "tokens": [731, 11, 294, 6370, 11, 309, 3263, 411, 364, 19071, 3289, 3997, 383, 420, 383, 25472, 3089, 3096, 293, 445, 1190, 300], "temperature": 0.0, "avg_logprob": -0.1760645007142926, "compression_ratio": 1.6101694915254237, "no_speech_prob": 4.340674786362797e-05}, {"id": 45, "seek": 34028, "start": 354.15999999999997, "end": 358.88, "text": " high-level synthesis tool and you get a chip design out of it. Nothing, no human involves,", "tokens": [1090, 12, 12418, 30252, 2290, 293, 291, 483, 257, 11409, 1715, 484, 295, 309, 13, 6693, 11, 572, 1952, 11626, 11], "temperature": 0.0, "avg_logprob": -0.1760645007142926, "compression_ratio": 1.6101694915254237, "no_speech_prob": 4.340674786362797e-05}, {"id": 46, "seek": 34028, "start": 358.88, "end": 366.0, "text": " works perfectly. Now, anybody who has C and C or C++ code bases will kind of attest, this is", "tokens": [1985, 6239, 13, 823, 11, 4472, 567, 575, 383, 293, 383, 420, 383, 25472, 3089, 17949, 486, 733, 295, 951, 377, 11, 341, 307], "temperature": 0.0, "avg_logprob": -0.1760645007142926, "compression_ratio": 1.6101694915254237, "no_speech_prob": 4.340674786362797e-05}, {"id": 47, "seek": 36600, "start": 366.0, "end": 376.44, "text": " probably not how reality works. And it doesn't. Beyond that, again, the boundary is slightly", "tokens": [1391, 406, 577, 4103, 1985, 13, 400, 309, 1177, 380, 13, 19707, 300, 11, 797, 11, 264, 12866, 307, 4748], "temperature": 0.0, "avg_logprob": -0.21798183493418236, "compression_ratio": 1.4090909090909092, "no_speech_prob": 4.44973811681848e-05}, {"id": 48, "seek": 36600, "start": 376.44, "end": 383.52, "text": " fuzzy. There are high-level languages that make it ideally more convenient to write a chip. And then", "tokens": [34710, 13, 821, 366, 1090, 12, 12418, 8650, 300, 652, 309, 22915, 544, 10851, 281, 2464, 257, 11409, 13, 400, 550], "temperature": 0.0, "avg_logprob": -0.21798183493418236, "compression_ratio": 1.4090909090909092, "no_speech_prob": 4.44973811681848e-05}, {"id": 49, "seek": 36600, "start": 383.52, "end": 392.48, "text": " at the lowest level almost, there's always system Veriloc or Veriloc and PHDL. Again,", "tokens": [412, 264, 12437, 1496, 1920, 11, 456, 311, 1009, 1185, 4281, 388, 905, 420, 4281, 388, 905, 293, 16530, 35, 43, 13, 3764, 11], "temperature": 0.0, "avg_logprob": -0.21798183493418236, "compression_ratio": 1.4090909090909092, "no_speech_prob": 4.44973811681848e-05}, {"id": 50, "seek": 39248, "start": 392.48, "end": 399.24, "text": " system Veriloc being kind of slightly misleading in terminology. So system Veriloc is the current", "tokens": [1185, 4281, 388, 905, 885, 733, 295, 4748, 36429, 294, 27575, 13, 407, 1185, 4281, 388, 905, 307, 264, 2190], "temperature": 0.0, "avg_logprob": -0.12869698660714285, "compression_ratio": 1.812206572769953, "no_speech_prob": 9.496741404291242e-05}, {"id": 51, "seek": 39248, "start": 399.24, "end": 405.48, "text": " standard for hardware description languages that was previously called Veriloc. Some others use", "tokens": [3832, 337, 8837, 3855, 8650, 300, 390, 8046, 1219, 4281, 388, 905, 13, 2188, 2357, 764], "temperature": 0.0, "avg_logprob": -0.12869698660714285, "compression_ratio": 1.812206572769953, "no_speech_prob": 9.496741404291242e-05}, {"id": 52, "seek": 39248, "start": 405.48, "end": 411.68, "text": " it as system Veriloc being a verification language, well, Veriloc is the design language. Again,", "tokens": [309, 382, 1185, 4281, 388, 905, 885, 257, 30206, 2856, 11, 731, 11, 4281, 388, 905, 307, 264, 1715, 2856, 13, 3764, 11], "temperature": 0.0, "avg_logprob": -0.12869698660714285, "compression_ratio": 1.812206572769953, "no_speech_prob": 9.496741404291242e-05}, {"id": 53, "seek": 39248, "start": 411.68, "end": 416.64000000000004, "text": " let's make it as confusing as possible. It's the language called system Veriloc these days. The", "tokens": [718, 311, 652, 309, 382, 13181, 382, 1944, 13, 467, 311, 264, 2856, 1219, 1185, 4281, 388, 905, 613, 1708, 13, 440], "temperature": 0.0, "avg_logprob": -0.12869698660714285, "compression_ratio": 1.812206572769953, "no_speech_prob": 9.496741404291242e-05}, {"id": 54, "seek": 41664, "start": 416.64, "end": 424.15999999999997, "text": " alternative is VHDL. Again, just like the C and yeah, more or less the C or C++ of the hardware", "tokens": [8535, 307, 691, 22859, 43, 13, 3764, 11, 445, 411, 264, 383, 293, 1338, 11, 544, 420, 1570, 264, 383, 420, 383, 25472, 295, 264, 8837], "temperature": 0.0, "avg_logprob": -0.18796764275966546, "compression_ratio": 1.4764397905759161, "no_speech_prob": 5.237457298790105e-05}, {"id": 55, "seek": 41664, "start": 424.15999999999997, "end": 431.08, "text": " world. And below there, that's typically not a, that's not a programming language. It's just", "tokens": [1002, 13, 400, 2507, 456, 11, 300, 311, 5850, 406, 257, 11, 300, 311, 406, 257, 9410, 2856, 13, 467, 311, 445], "temperature": 0.0, "avg_logprob": -0.18796764275966546, "compression_ratio": 1.4764397905759161, "no_speech_prob": 5.237457298790105e-05}, {"id": 56, "seek": 41664, "start": 431.08, "end": 437.96, "text": " a typically Veriloc as well. Just a lower-level representation of the same thing. That is the", "tokens": [257, 5850, 4281, 388, 905, 382, 731, 13, 1449, 257, 3126, 12, 12418, 10290, 295, 264, 912, 551, 13, 663, 307, 264], "temperature": 0.0, "avg_logprob": -0.18796764275966546, "compression_ratio": 1.4764397905759161, "no_speech_prob": 5.237457298790105e-05}, {"id": 57, "seek": 43796, "start": 437.96, "end": 446.56, "text": " net list, which is effectively a C of ands and ors, and then connected by wires. So that's", "tokens": [2533, 1329, 11, 597, 307, 8659, 257, 383, 295, 293, 82, 293, 420, 82, 11, 293, 550, 4582, 538, 15537, 13, 407, 300, 311], "temperature": 0.0, "avg_logprob": -0.1816347592497525, "compression_ratio": 1.5, "no_speech_prob": 1.5221145076793619e-05}, {"id": 58, "seek": 43796, "start": 446.56, "end": 452.84, "text": " representing your logic. So these are the kind of the programming languages that you would use,", "tokens": [13460, 428, 9952, 13, 407, 613, 366, 264, 733, 295, 264, 9410, 8650, 300, 291, 576, 764, 11], "temperature": 0.0, "avg_logprob": -0.1816347592497525, "compression_ratio": 1.5, "no_speech_prob": 1.5221145076793619e-05}, {"id": 59, "seek": 43796, "start": 452.84, "end": 461.91999999999996, "text": " and we'll get into a couple examples in a second. And then obviously, there's all the other stuff.", "tokens": [293, 321, 603, 483, 666, 257, 1916, 5110, 294, 257, 1150, 13, 400, 550, 2745, 11, 456, 311, 439, 264, 661, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1816347592497525, "compression_ratio": 1.5, "no_speech_prob": 1.5221145076793619e-05}, {"id": 60, "seek": 46192, "start": 461.92, "end": 469.12, "text": " Test frameworks, build tools. You need to have a proper conversation about a build tool. Otherwise,", "tokens": [9279, 29834, 11, 1322, 3873, 13, 509, 643, 281, 362, 257, 2296, 3761, 466, 257, 1322, 2290, 13, 10328, 11], "temperature": 0.0, "avg_logprob": -0.1407541452452194, "compression_ratio": 1.594142259414226, "no_speech_prob": 0.00010895406740019098}, {"id": 61, "seek": 46192, "start": 469.12, "end": 475.48, "text": " it's not a real programming environment. I mean, who are we if we can't argue endlessly about", "tokens": [309, 311, 406, 257, 957, 9410, 2823, 13, 286, 914, 11, 567, 366, 321, 498, 321, 393, 380, 9695, 44920, 466], "temperature": 0.0, "avg_logprob": -0.1407541452452194, "compression_ratio": 1.594142259414226, "no_speech_prob": 0.00010895406740019098}, {"id": 62, "seek": 46192, "start": 475.48, "end": 483.0, "text": " build tools. There are developer productivity tools. It's actually one of the areas where open", "tokens": [1322, 3873, 13, 821, 366, 10754, 15604, 3873, 13, 467, 311, 767, 472, 295, 264, 3179, 689, 1269], "temperature": 0.0, "avg_logprob": -0.1407541452452194, "compression_ratio": 1.594142259414226, "no_speech_prob": 0.00010895406740019098}, {"id": 63, "seek": 46192, "start": 483.0, "end": 491.20000000000005, "text": " source really shines compared to some of the commercial offerings and simulators. And again,", "tokens": [4009, 534, 28056, 5347, 281, 512, 295, 264, 6841, 25898, 293, 1034, 39265, 13, 400, 797, 11], "temperature": 0.0, "avg_logprob": -0.1407541452452194, "compression_ratio": 1.594142259414226, "no_speech_prob": 0.00010895406740019098}, {"id": 64, "seek": 49120, "start": 491.2, "end": 495.96, "text": " we'll get into those in a second. So let's have a look at a couple examples. We want to do open", "tokens": [321, 603, 483, 666, 729, 294, 257, 1150, 13, 407, 718, 311, 362, 257, 574, 412, 257, 1916, 5110, 13, 492, 528, 281, 360, 1269], "temperature": 0.0, "avg_logprob": -0.14376933901917702, "compression_ratio": 1.544, "no_speech_prob": 4.889037518296391e-05}, {"id": 65, "seek": 49120, "start": 495.96, "end": 501.71999999999997, "text": " source after all. So hardware description language that we can choose from. And the list is quite", "tokens": [4009, 934, 439, 13, 407, 8837, 3855, 2856, 300, 321, 393, 2826, 490, 13, 400, 264, 1329, 307, 1596], "temperature": 0.0, "avg_logprob": -0.14376933901917702, "compression_ratio": 1.544, "no_speech_prob": 4.889037518296391e-05}, {"id": 66, "seek": 49120, "start": 501.71999999999997, "end": 510.71999999999997, "text": " long, even though it kind of narrows down quickly once you kind of look deeper. So there is system", "tokens": [938, 11, 754, 1673, 309, 733, 295, 6397, 1509, 760, 2661, 1564, 291, 733, 295, 574, 7731, 13, 407, 456, 307, 1185], "temperature": 0.0, "avg_logprob": -0.14376933901917702, "compression_ratio": 1.544, "no_speech_prob": 4.889037518296391e-05}, {"id": 67, "seek": 49120, "start": 510.71999999999997, "end": 515.08, "text": " Veriloc and Veriloc. So this is an IEEE standard. You can download a standard just like the C", "tokens": [4281, 388, 905, 293, 4281, 388, 905, 13, 407, 341, 307, 364, 286, 7258, 36, 3832, 13, 509, 393, 5484, 257, 3832, 445, 411, 264, 383], "temperature": 0.0, "avg_logprob": -0.14376933901917702, "compression_ratio": 1.544, "no_speech_prob": 4.889037518296391e-05}, {"id": 68, "seek": 51508, "start": 515.08, "end": 523.4000000000001, "text": " standard. And this is effectively the most commonly used language to do hardware design. It's quite", "tokens": [3832, 13, 400, 341, 307, 8659, 264, 881, 12719, 1143, 2856, 281, 360, 8837, 1715, 13, 467, 311, 1596], "temperature": 0.0, "avg_logprob": -0.1118138666903035, "compression_ratio": 1.6217391304347826, "no_speech_prob": 6.522829062305391e-05}, {"id": 69, "seek": 51508, "start": 523.4000000000001, "end": 529.8000000000001, "text": " old, which is not to say much of a problem, but it has been continuously updated. The other", "tokens": [1331, 11, 597, 307, 406, 281, 584, 709, 295, 257, 1154, 11, 457, 309, 575, 668, 15684, 10588, 13, 440, 661], "temperature": 0.0, "avg_logprob": -0.1118138666903035, "compression_ratio": 1.6217391304347826, "no_speech_prob": 6.522829062305391e-05}, {"id": 70, "seek": 51508, "start": 529.8000000000001, "end": 536.88, "text": " problem about system Veriloc and Veriloc is kind of years come and go and programming concepts", "tokens": [1154, 466, 1185, 4281, 388, 905, 293, 4281, 388, 905, 307, 733, 295, 924, 808, 293, 352, 293, 9410, 10392], "temperature": 0.0, "avg_logprob": -0.1118138666903035, "compression_ratio": 1.6217391304347826, "no_speech_prob": 6.522829062305391e-05}, {"id": 71, "seek": 51508, "start": 536.88, "end": 541.8000000000001, "text": " and ideas come and go as well. The problem is if your language stays around that long,", "tokens": [293, 3487, 808, 293, 352, 382, 731, 13, 440, 1154, 307, 498, 428, 2856, 10834, 926, 300, 938, 11], "temperature": 0.0, "avg_logprob": -0.1118138666903035, "compression_ratio": 1.6217391304347826, "no_speech_prob": 6.522829062305391e-05}, {"id": 72, "seek": 54180, "start": 541.8, "end": 548.5999999999999, "text": " you just add everything. So if you look at the system Veriloc standards, it's huge. From that,", "tokens": [291, 445, 909, 1203, 13, 407, 498, 291, 574, 412, 264, 1185, 4281, 388, 905, 7787, 11, 309, 311, 2603, 13, 3358, 300, 11], "temperature": 0.0, "avg_logprob": -0.15233659262609, "compression_ratio": 1.6371308016877637, "no_speech_prob": 3.1520132324658334e-05}, {"id": 73, "seek": 54180, "start": 548.5999999999999, "end": 555.8399999999999, "text": " it's huge as the C++ standard. But it will have some interesting corner cases if you look at that.", "tokens": [309, 311, 2603, 382, 264, 383, 25472, 3832, 13, 583, 309, 486, 362, 512, 1880, 4538, 3331, 498, 291, 574, 412, 300, 13], "temperature": 0.0, "avg_logprob": -0.15233659262609, "compression_ratio": 1.6371308016877637, "no_speech_prob": 3.1520132324658334e-05}, {"id": 74, "seek": 54180, "start": 555.8399999999999, "end": 564.7199999999999, "text": " And that has interesting side effects, because now we have a fair amount of tools, and we'll get", "tokens": [400, 300, 575, 1880, 1252, 5065, 11, 570, 586, 321, 362, 257, 3143, 2372, 295, 3873, 11, 293, 321, 603, 483], "temperature": 0.0, "avg_logprob": -0.15233659262609, "compression_ratio": 1.6371308016877637, "no_speech_prob": 3.1520132324658334e-05}, {"id": 75, "seek": 54180, "start": 564.7199999999999, "end": 570.0799999999999, "text": " to that in a second, how many tools you actually need to evolve to get a hardware design working.", "tokens": [281, 300, 294, 257, 1150, 11, 577, 867, 3873, 291, 767, 643, 281, 16693, 281, 483, 257, 8837, 1715, 1364, 13], "temperature": 0.0, "avg_logprob": -0.15233659262609, "compression_ratio": 1.6371308016877637, "no_speech_prob": 3.1520132324658334e-05}, {"id": 76, "seek": 57008, "start": 570.08, "end": 576.5200000000001, "text": " So all of those need to understand ideally the same subset of system Veriloc. And it also", "tokens": [407, 439, 295, 729, 643, 281, 1223, 22915, 264, 912, 25993, 295, 1185, 4281, 388, 905, 13, 400, 309, 611], "temperature": 0.0, "avg_logprob": -0.19713946183522543, "compression_ratio": 1.5857740585774058, "no_speech_prob": 7.218490645755082e-05}, {"id": 77, "seek": 57008, "start": 576.5200000000001, "end": 583.0400000000001, "text": " kind of interpreted the same way. So that's not always the case. That's why hardware designers", "tokens": [733, 295, 26749, 264, 912, 636, 13, 407, 300, 311, 406, 1009, 264, 1389, 13, 663, 311, 983, 8837, 16196], "temperature": 0.0, "avg_logprob": -0.19713946183522543, "compression_ratio": 1.5857740585774058, "no_speech_prob": 7.218490645755082e-05}, {"id": 78, "seek": 57008, "start": 583.0400000000001, "end": 589.5600000000001, "text": " who are per se already quite conservative in the tools they're choosing, will end up with a very", "tokens": [567, 366, 680, 369, 1217, 1596, 13780, 294, 264, 3873, 436, 434, 10875, 11, 486, 917, 493, 365, 257, 588], "temperature": 0.0, "avg_logprob": -0.19713946183522543, "compression_ratio": 1.5857740585774058, "no_speech_prob": 7.218490645755082e-05}, {"id": 79, "seek": 57008, "start": 589.5600000000001, "end": 597.24, "text": " kind of old school subset of Veriloc that you, India, and allowed to use. VHDL is another option,", "tokens": [733, 295, 1331, 1395, 25993, 295, 4281, 388, 905, 300, 291, 11, 5282, 11, 293, 4350, 281, 764, 13, 691, 22859, 43, 307, 1071, 3614, 11], "temperature": 0.0, "avg_logprob": -0.19713946183522543, "compression_ratio": 1.5857740585774058, "no_speech_prob": 7.218490645755082e-05}, {"id": 80, "seek": 59724, "start": 597.24, "end": 604.2, "text": " same story there, just slightly different. The Veriloc community is much larger. And especially", "tokens": [912, 1657, 456, 11, 445, 4748, 819, 13, 440, 4281, 388, 905, 1768, 307, 709, 4833, 13, 400, 2318], "temperature": 0.0, "avg_logprob": -0.1889263153076172, "compression_ratio": 1.5403225806451613, "no_speech_prob": 6.439947173930705e-05}, {"id": 81, "seek": 59724, "start": 604.2, "end": 610.8, "text": " if you're looking at producing real ASIC chip designs, you're going to look at Veriloc mostly.", "tokens": [498, 291, 434, 1237, 412, 10501, 957, 7469, 2532, 11409, 11347, 11, 291, 434, 516, 281, 574, 412, 4281, 388, 905, 5240, 13], "temperature": 0.0, "avg_logprob": -0.1889263153076172, "compression_ratio": 1.5403225806451613, "no_speech_prob": 6.439947173930705e-05}, {"id": 82, "seek": 59724, "start": 610.8, "end": 617.44, "text": " But then, program names as said come and go. So there are some interesting new ones up there as", "tokens": [583, 550, 11, 1461, 5288, 382, 848, 808, 293, 352, 13, 407, 456, 366, 512, 1880, 777, 2306, 493, 456, 382], "temperature": 0.0, "avg_logprob": -0.1889263153076172, "compression_ratio": 1.5403225806451613, "no_speech_prob": 6.439947173930705e-05}, {"id": 83, "seek": 59724, "start": 617.44, "end": 624.16, "text": " well. There's BlueSpec. There are a fair amount of Python-based HDLs, and some of them are more", "tokens": [731, 13, 821, 311, 8510, 19588, 66, 13, 821, 366, 257, 3143, 2372, 295, 15329, 12, 6032, 12149, 43, 82, 11, 293, 512, 295, 552, 366, 544], "temperature": 0.0, "avg_logprob": -0.1889263153076172, "compression_ratio": 1.5403225806451613, "no_speech_prob": 6.439947173930705e-05}, {"id": 84, "seek": 62416, "start": 624.16, "end": 630.8399999999999, "text": " low-level than ours. So there is MyGen, Amaranth, and MyHDL, and a couple others. So this list is,", "tokens": [2295, 12, 12418, 813, 11896, 13, 407, 456, 307, 1222, 26647, 11, 2012, 17142, 392, 11, 293, 1222, 22859, 43, 11, 293, 257, 1916, 2357, 13, 407, 341, 1329, 307, 11], "temperature": 0.0, "avg_logprob": -0.19100021647515697, "compression_ratio": 1.6753246753246753, "no_speech_prob": 0.00021743911202065647}, {"id": 85, "seek": 62416, "start": 630.8399999999999, "end": 637.92, "text": " by the way, no. It doesn't need to be complete. And it isn't complete. And there are a number of", "tokens": [538, 264, 636, 11, 572, 13, 467, 1177, 380, 643, 281, 312, 3566, 13, 400, 309, 1943, 380, 3566, 13, 400, 456, 366, 257, 1230, 295], "temperature": 0.0, "avg_logprob": -0.19100021647515697, "compression_ratio": 1.6753246753246753, "no_speech_prob": 0.00021743911202065647}, {"id": 86, "seek": 62416, "start": 637.92, "end": 642.8399999999999, "text": " hardware description languages or programming languages that are based on functional programming", "tokens": [8837, 3855, 8650, 420, 9410, 8650, 300, 366, 2361, 322, 11745, 9410], "temperature": 0.0, "avg_logprob": -0.19100021647515697, "compression_ratio": 1.6753246753246753, "no_speech_prob": 0.00021743911202065647}, {"id": 87, "seek": 62416, "start": 642.8399999999999, "end": 651.8399999999999, "text": " languages. Spinal HDL, Chisel, and Clash, for example. Chisel, for example, being quite, well,", "tokens": [8650, 13, 1738, 2071, 12149, 43, 11, 761, 39711, 11, 293, 2033, 1299, 11, 337, 1365, 13, 761, 39711, 11, 337, 1365, 11, 885, 1596, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.19100021647515697, "compression_ratio": 1.6753246753246753, "no_speech_prob": 0.00021743911202065647}, {"id": 88, "seek": 65184, "start": 651.84, "end": 659.2800000000001, "text": " often used these days because, I don't know, who has heard about Risk 5? Let's maybe raise your", "tokens": [2049, 1143, 613, 1708, 570, 11, 286, 500, 380, 458, 11, 567, 575, 2198, 466, 45892, 1025, 30, 961, 311, 1310, 5300, 428], "temperature": 0.0, "avg_logprob": -0.3802074326409234, "compression_ratio": 1.6089385474860336, "no_speech_prob": 8.858931687427685e-05}, {"id": 89, "seek": 65184, "start": 659.2800000000001, "end": 670.2800000000001, "text": " hand. So Risk 5 is an open-source instruction set architecture. So, like, the x86 instruction set", "tokens": [1011, 13, 407, 45892, 1025, 307, 364, 1269, 12, 41676, 10951, 992, 9482, 13, 407, 11, 411, 11, 264, 2031, 22193, 10951, 992], "temperature": 0.0, "avg_logprob": -0.3802074326409234, "compression_ratio": 1.6089385474860336, "no_speech_prob": 8.858931687427685e-05}, {"id": 90, "seek": 65184, "start": 670.2800000000001, "end": 679.0, "text": " architecture or ARM, the 78 instruction set architecture. And then, kind of that was developed", "tokens": [9482, 420, 45209, 11, 264, 26369, 10951, 992, 9482, 13, 400, 550, 11, 733, 295, 300, 390, 4743], "temperature": 0.0, "avg_logprob": -0.3802074326409234, "compression_ratio": 1.6089385474860336, "no_speech_prob": 8.858931687427685e-05}, {"id": 91, "seek": 67900, "start": 679.0, "end": 686.04, "text": " in Berkeley originally. And they also developed a hardware language called Chisel. So the initial", "tokens": [294, 23684, 7993, 13, 400, 436, 611, 4743, 257, 8837, 2856, 1219, 761, 39711, 13, 407, 264, 5883], "temperature": 0.0, "avg_logprob": -0.15641992116711803, "compression_ratio": 1.6212765957446809, "no_speech_prob": 7.126190030248836e-05}, {"id": 92, "seek": 67900, "start": 686.04, "end": 690.96, "text": " Risk 5 core implementation, the Rocket core is implemented in Chisel. And since that's open", "tokens": [45892, 1025, 4965, 11420, 11, 264, 29651, 4965, 307, 12270, 294, 761, 39711, 13, 400, 1670, 300, 311, 1269], "temperature": 0.0, "avg_logprob": -0.15641992116711803, "compression_ratio": 1.6212765957446809, "no_speech_prob": 7.126190030248836e-05}, {"id": 93, "seek": 67900, "start": 690.96, "end": 698.36, "text": " source and widely used, kind of Chisel also spread more widely. So you'll see that. And then there", "tokens": [4009, 293, 13371, 1143, 11, 733, 295, 761, 39711, 611, 3974, 544, 13371, 13, 407, 291, 603, 536, 300, 13, 400, 550, 456], "temperature": 0.0, "avg_logprob": -0.15641992116711803, "compression_ratio": 1.6212765957446809, "no_speech_prob": 7.126190030248836e-05}, {"id": 94, "seek": 67900, "start": 698.36, "end": 705.64, "text": " is a, I'm not quite sure how new or old it is, the circuit LLVM effort that kind of tries to", "tokens": [307, 257, 11, 286, 478, 406, 1596, 988, 577, 777, 420, 1331, 309, 307, 11, 264, 9048, 441, 43, 53, 44, 4630, 300, 733, 295, 9898, 281], "temperature": 0.0, "avg_logprob": -0.15641992116711803, "compression_ratio": 1.6212765957446809, "no_speech_prob": 7.126190030248836e-05}, {"id": 95, "seek": 70564, "start": 705.64, "end": 714.28, "text": " build a LLVM-based compiler infrastructure to then place hardware languages or other pieces of", "tokens": [1322, 257, 441, 43, 53, 44, 12, 6032, 31958, 6896, 281, 550, 1081, 8837, 8650, 420, 661, 3755, 295], "temperature": 0.0, "avg_logprob": -0.10494801116316285, "compression_ratio": 1.471502590673575, "no_speech_prob": 1.7442576790926978e-05}, {"id": 96, "seek": 70564, "start": 714.28, "end": 722.1999999999999, "text": " functionality on top of. I've actually not seen that many, kind of, useful tools coming out of", "tokens": [14980, 322, 1192, 295, 13, 286, 600, 767, 406, 1612, 300, 867, 11, 733, 295, 11, 4420, 3873, 1348, 484, 295], "temperature": 0.0, "avg_logprob": -0.10494801116316285, "compression_ratio": 1.471502590673575, "no_speech_prob": 1.7442576790926978e-05}, {"id": 97, "seek": 70564, "start": 722.1999999999999, "end": 731.12, "text": " that LLVM-based middle layer. So we'll see what the future brings in that regard. So we choose", "tokens": [300, 441, 43, 53, 44, 12, 6032, 2808, 4583, 13, 407, 321, 603, 536, 437, 264, 2027, 5607, 294, 300, 3843, 13, 407, 321, 2826], "temperature": 0.0, "avg_logprob": -0.10494801116316285, "compression_ratio": 1.471502590673575, "no_speech_prob": 1.7442576790926978e-05}, {"id": 98, "seek": 73112, "start": 731.12, "end": 736.4, "text": " programming languages. And then the next thing you want to do if you actually want to build a", "tokens": [9410, 8650, 13, 400, 550, 264, 958, 551, 291, 528, 281, 360, 498, 291, 767, 528, 281, 1322, 257], "temperature": 0.0, "avg_logprob": -0.19505632573908024, "compression_ratio": 1.7536764705882353, "no_speech_prob": 2.2443553461926058e-05}, {"id": 99, "seek": 73112, "start": 736.4, "end": 744.88, "text": " chip is ideally not write everything from scratch. So you reuse, you integrate existing things,", "tokens": [11409, 307, 22915, 406, 2464, 1203, 490, 8459, 13, 407, 291, 26225, 11, 291, 13365, 6741, 721, 11], "temperature": 0.0, "avg_logprob": -0.19505632573908024, "compression_ratio": 1.7536764705882353, "no_speech_prob": 2.2443553461926058e-05}, {"id": 100, "seek": 73112, "start": 744.88, "end": 750.36, "text": " and they're typically always called IP cores in that world. So there are a couple of options that", "tokens": [293, 436, 434, 5850, 1009, 1219, 8671, 24826, 294, 300, 1002, 13, 407, 456, 366, 257, 1916, 295, 3956, 300], "temperature": 0.0, "avg_logprob": -0.19505632573908024, "compression_ratio": 1.7536764705882353, "no_speech_prob": 2.2443553461926058e-05}, {"id": 101, "seek": 73112, "start": 750.36, "end": 755.2, "text": " makes it easier to integrate. So there is no, unfortunately, central package manager or something", "tokens": [1669, 309, 3571, 281, 13365, 13, 407, 456, 307, 572, 11, 7015, 11, 5777, 7372, 6598, 420, 746], "temperature": 0.0, "avg_logprob": -0.19505632573908024, "compression_ratio": 1.7536764705882353, "no_speech_prob": 2.2443553461926058e-05}, {"id": 102, "seek": 73112, "start": 755.2, "end": 760.5600000000001, "text": " like that, like a cargo or an MPM or something like that, that you would have in the new or", "tokens": [411, 300, 11, 411, 257, 19449, 420, 364, 14146, 44, 420, 746, 411, 300, 11, 300, 291, 576, 362, 294, 264, 777, 420], "temperature": 0.0, "avg_logprob": -0.19505632573908024, "compression_ratio": 1.7536764705882353, "no_speech_prob": 2.2443553461926058e-05}, {"id": 103, "seek": 76056, "start": 760.56, "end": 769.0, "text": " new software world. So, but what you have instead to do is more or less Google for whatever you", "tokens": [777, 4722, 1002, 13, 407, 11, 457, 437, 291, 362, 2602, 281, 360, 307, 544, 420, 1570, 3329, 337, 2035, 291], "temperature": 0.0, "avg_logprob": -0.2025866407029172, "compression_ratio": 1.6282051282051282, "no_speech_prob": 6.653051241301e-05}, {"id": 104, "seek": 76056, "start": 769.0, "end": 776.1999999999999, "text": " might need, and you might find an abandoned Git repository or a sit drop somewhere that contains", "tokens": [1062, 643, 11, 293, 291, 1062, 915, 364, 13732, 16939, 25841, 420, 257, 1394, 3270, 4079, 300, 8306], "temperature": 0.0, "avg_logprob": -0.2025866407029172, "compression_ratio": 1.6282051282051282, "no_speech_prob": 6.653051241301e-05}, {"id": 105, "seek": 76056, "start": 776.1999999999999, "end": 781.16, "text": " what you're looking for. And often it comes without, this has been potentially taped out,", "tokens": [437, 291, 434, 1237, 337, 13, 400, 2049, 309, 1487, 1553, 11, 341, 575, 668, 7263, 45673, 484, 11], "temperature": 0.0, "avg_logprob": -0.2025866407029172, "compression_ratio": 1.6282051282051282, "no_speech_prob": 6.653051241301e-05}, {"id": 106, "seek": 76056, "start": 781.16, "end": 785.4799999999999, "text": " so a chip has been produced out of that, and it's stable, so we're not going to touch it again. So", "tokens": [370, 257, 11409, 575, 668, 7126, 484, 295, 300, 11, 293, 309, 311, 8351, 11, 370, 321, 434, 406, 516, 281, 2557, 309, 797, 13, 407], "temperature": 0.0, "avg_logprob": -0.2025866407029172, "compression_ratio": 1.6282051282051282, "no_speech_prob": 6.653051241301e-05}, {"id": 107, "seek": 78548, "start": 785.48, "end": 791.08, "text": " many of these kind of IP cores are considered stable because as soon as you've used them once,", "tokens": [867, 295, 613, 733, 295, 8671, 24826, 366, 4888, 8351, 570, 382, 2321, 382, 291, 600, 1143, 552, 1564, 11], "temperature": 0.0, "avg_logprob": -0.13007647514343262, "compression_ratio": 1.6092436974789917, "no_speech_prob": 4.867272582487203e-05}, {"id": 108, "seek": 78548, "start": 791.08, "end": 797.5600000000001, "text": " you don't want to touch them again. So you rarely have a fancy community around those cores. It's", "tokens": [291, 500, 380, 528, 281, 2557, 552, 797, 13, 407, 291, 13752, 362, 257, 10247, 1768, 926, 729, 24826, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.13007647514343262, "compression_ratio": 1.6092436974789917, "no_speech_prob": 4.867272582487203e-05}, {"id": 109, "seek": 78548, "start": 797.5600000000001, "end": 803.96, "text": " just, it's there, you use it, and then you're on your own. So that was, and still is, this website", "tokens": [445, 11, 309, 311, 456, 11, 291, 764, 309, 11, 293, 550, 291, 434, 322, 428, 1065, 13, 407, 300, 390, 11, 293, 920, 307, 11, 341, 3144], "temperature": 0.0, "avg_logprob": -0.13007647514343262, "compression_ratio": 1.6092436974789917, "no_speech_prob": 4.867272582487203e-05}, {"id": 110, "seek": 78548, "start": 803.96, "end": 810.16, "text": " called OpenCourse, which was kind of a directory for open source hardware blocks. It's been", "tokens": [1219, 7238, 34, 13656, 11, 597, 390, 733, 295, 257, 21120, 337, 1269, 4009, 8837, 8474, 13, 467, 311, 668], "temperature": 0.0, "avg_logprob": -0.13007647514343262, "compression_ratio": 1.6092436974789917, "no_speech_prob": 4.867272582487203e-05}, {"id": 111, "seek": 81016, "start": 810.16, "end": 815.48, "text": " unmaintained for quite a while, but it's still there. So if you're looking for, of course, it", "tokens": [19334, 5114, 3563, 337, 1596, 257, 1339, 11, 457, 309, 311, 920, 456, 13, 407, 498, 291, 434, 1237, 337, 11, 295, 1164, 11, 309], "temperature": 0.0, "avg_logprob": -0.1463976224263509, "compression_ratio": 1.6122448979591837, "no_speech_prob": 4.0952112613013014e-05}, {"id": 112, "seek": 81016, "start": 815.48, "end": 819.9599999999999, "text": " might be a good option, but again, don't expect that much of an active community around these", "tokens": [1062, 312, 257, 665, 3614, 11, 457, 797, 11, 500, 380, 2066, 300, 709, 295, 364, 4967, 1768, 926, 613], "temperature": 0.0, "avg_logprob": -0.1463976224263509, "compression_ratio": 1.6122448979591837, "no_speech_prob": 4.0952112613013014e-05}, {"id": 113, "seek": 81016, "start": 819.9599999999999, "end": 828.56, "text": " offerings. And yes, I guess the best, that's why the slide is quite empty, option is just Google,", "tokens": [25898, 13, 400, 2086, 11, 286, 2041, 264, 1151, 11, 300, 311, 983, 264, 4137, 307, 1596, 6707, 11, 3614, 307, 445, 3329, 11], "temperature": 0.0, "avg_logprob": -0.1463976224263509, "compression_ratio": 1.6122448979591837, "no_speech_prob": 4.0952112613013014e-05}, {"id": 114, "seek": 81016, "start": 828.56, "end": 834.52, "text": " and you'll find something. So now that we have put together a logic design, we have written some", "tokens": [293, 291, 603, 915, 746, 13, 407, 586, 300, 321, 362, 829, 1214, 257, 9952, 1715, 11, 321, 362, 3720, 512], "temperature": 0.0, "avg_logprob": -0.1463976224263509, "compression_ratio": 1.6122448979591837, "no_speech_prob": 4.0952112613013014e-05}, {"id": 115, "seek": 81016, "start": 834.52, "end": 838.48, "text": " stuff on our own, we choose in the programming languages nobody else has been using before,", "tokens": [1507, 322, 527, 1065, 11, 321, 2826, 294, 264, 9410, 8650, 5079, 1646, 575, 668, 1228, 949, 11], "temperature": 0.0, "avg_logprob": -0.1463976224263509, "compression_ratio": 1.6122448979591837, "no_speech_prob": 4.0952112613013014e-05}, {"id": 116, "seek": 83848, "start": 838.48, "end": 845.72, "text": " and we added some IP cores that nobody was maintaining. So now we want to see if it actually", "tokens": [293, 321, 3869, 512, 8671, 24826, 300, 5079, 390, 14916, 13, 407, 586, 321, 528, 281, 536, 498, 309, 767], "temperature": 0.0, "avg_logprob": -0.16623566882445082, "compression_ratio": 1.6085106382978724, "no_speech_prob": 6.582937203347683e-05}, {"id": 117, "seek": 83848, "start": 845.72, "end": 851.0, "text": " works. I mean, it feels unlikely if I phrase it like that, but the chances are it actually does.", "tokens": [1985, 13, 286, 914, 11, 309, 3417, 17518, 498, 286, 9535, 309, 411, 300, 11, 457, 264, 10486, 366, 309, 767, 775, 13], "temperature": 0.0, "avg_logprob": -0.16623566882445082, "compression_ratio": 1.6085106382978724, "no_speech_prob": 6.582937203347683e-05}, {"id": 118, "seek": 83848, "start": 851.0, "end": 858.8000000000001, "text": " So we need to verify it somehow, better or not so good. We're potentially documented. Nah,", "tokens": [407, 321, 643, 281, 16888, 309, 6063, 11, 1101, 420, 406, 370, 665, 13, 492, 434, 7263, 23007, 13, 13933, 11], "temperature": 0.0, "avg_logprob": -0.16623566882445082, "compression_ratio": 1.6085106382978724, "no_speech_prob": 6.582937203347683e-05}, {"id": 119, "seek": 83848, "start": 858.8000000000001, "end": 864.8000000000001, "text": " let's not do that. We want to make it look pretty. I mean, that's what we spend most of our time,", "tokens": [718, 311, 406, 360, 300, 13, 492, 528, 281, 652, 309, 574, 1238, 13, 286, 914, 11, 300, 311, 437, 321, 3496, 881, 295, 527, 565, 11], "temperature": 0.0, "avg_logprob": -0.16623566882445082, "compression_ratio": 1.6085106382978724, "no_speech_prob": 6.582937203347683e-05}, {"id": 120, "seek": 86480, "start": 864.8, "end": 870.3199999999999, "text": " don't we? I mean, it's tabs or spaces or indent here or there. It needs to look pretty, even", "tokens": [500, 380, 321, 30, 286, 914, 11, 309, 311, 20743, 420, 7673, 420, 44494, 510, 420, 456, 13, 467, 2203, 281, 574, 1238, 11, 754], "temperature": 0.0, "avg_logprob": -0.14915076957261267, "compression_ratio": 1.786259541984733, "no_speech_prob": 4.5317879994399846e-05}, {"id": 121, "seek": 86480, "start": 870.3199999999999, "end": 873.92, "text": " it doesn't work. So that's something we need to do. And that's something the open source", "tokens": [309, 1177, 380, 589, 13, 407, 300, 311, 746, 321, 643, 281, 360, 13, 400, 300, 311, 746, 264, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.14915076957261267, "compression_ratio": 1.786259541984733, "no_speech_prob": 4.5317879994399846e-05}, {"id": 122, "seek": 86480, "start": 873.92, "end": 879.3199999999999, "text": " community was always fantastic about. And that's clearly something we're bringing to the world of", "tokens": [1768, 390, 1009, 5456, 466, 13, 400, 300, 311, 4448, 746, 321, 434, 5062, 281, 264, 1002, 295], "temperature": 0.0, "avg_logprob": -0.14915076957261267, "compression_ratio": 1.786259541984733, "no_speech_prob": 4.5317879994399846e-05}, {"id": 123, "seek": 86480, "start": 879.3199999999999, "end": 887.3199999999999, "text": " commercial chip design. We need to simulate it. Because at this point, we're just doing logic", "tokens": [6841, 11409, 1715, 13, 492, 643, 281, 27817, 309, 13, 1436, 412, 341, 935, 11, 321, 434, 445, 884, 9952], "temperature": 0.0, "avg_logprob": -0.14915076957261267, "compression_ratio": 1.786259541984733, "no_speech_prob": 4.5317879994399846e-05}, {"id": 124, "seek": 86480, "start": 887.3199999999999, "end": 893.5999999999999, "text": " design. So we don't have anything, we don't have a chip yet. So we somehow need to see what it", "tokens": [1715, 13, 407, 321, 500, 380, 362, 1340, 11, 321, 500, 380, 362, 257, 11409, 1939, 13, 407, 321, 6063, 643, 281, 536, 437, 309], "temperature": 0.0, "avg_logprob": -0.14915076957261267, "compression_ratio": 1.786259541984733, "no_speech_prob": 4.5317879994399846e-05}, {"id": 125, "seek": 89360, "start": 893.6, "end": 901.12, "text": " actually does. And we potentially can run it on FPG. And I'll get to that in a second. So let's", "tokens": [767, 775, 13, 400, 321, 7263, 393, 1190, 309, 322, 36655, 38, 13, 400, 286, 603, 483, 281, 300, 294, 257, 1150, 13, 407, 718, 311], "temperature": 0.0, "avg_logprob": -0.13177429546009412, "compression_ratio": 1.646551724137931, "no_speech_prob": 7.22731783753261e-05}, {"id": 126, "seek": 89360, "start": 901.12, "end": 907.6800000000001, "text": " have a look at a couple buzzwords here of what is possible these days in the open source chip", "tokens": [362, 257, 574, 412, 257, 1916, 13036, 13832, 510, 295, 437, 307, 1944, 613, 1708, 294, 264, 1269, 4009, 11409], "temperature": 0.0, "avg_logprob": -0.13177429546009412, "compression_ratio": 1.646551724137931, "no_speech_prob": 7.22731783753261e-05}, {"id": 127, "seek": 89360, "start": 907.6800000000001, "end": 915.36, "text": " design world. Simulators, we start with that one. There are kind of three main simulators. And you", "tokens": [1715, 1002, 13, 3998, 39265, 11, 321, 722, 365, 300, 472, 13, 821, 366, 733, 295, 1045, 2135, 1034, 39265, 13, 400, 291], "temperature": 0.0, "avg_logprob": -0.13177429546009412, "compression_ratio": 1.646551724137931, "no_speech_prob": 7.22731783753261e-05}, {"id": 128, "seek": 89360, "start": 915.36, "end": 920.96, "text": " see that they're main simulators because they have a logo. There is a fourth simulator that's", "tokens": [536, 300, 436, 434, 2135, 1034, 39265, 570, 436, 362, 257, 9699, 13, 821, 307, 257, 6409, 32974, 300, 311], "temperature": 0.0, "avg_logprob": -0.13177429546009412, "compression_ratio": 1.646551724137931, "no_speech_prob": 7.22731783753261e-05}, {"id": 129, "seek": 92096, "start": 920.96, "end": 926.96, "text": " rarely used, NVC, and doesn't have a logo. So I think that indicates what's going on. You also", "tokens": [13752, 1143, 11, 46512, 34, 11, 293, 1177, 380, 362, 257, 9699, 13, 407, 286, 519, 300, 16203, 437, 311, 516, 322, 13, 509, 611], "temperature": 0.0, "avg_logprob": -0.21258814089766173, "compression_ratio": 1.502008032128514, "no_speech_prob": 6.994942668825388e-05}, {"id": 130, "seek": 92096, "start": 926.96, "end": 933.96, "text": " see by the style of the logos, what are the older projects? At least it's slightly misleading, I", "tokens": [536, 538, 264, 3758, 295, 264, 40654, 11, 437, 366, 264, 4906, 4455, 30, 1711, 1935, 309, 311, 4748, 36429, 11, 286], "temperature": 0.0, "avg_logprob": -0.21258814089766173, "compression_ratio": 1.502008032128514, "no_speech_prob": 6.994942668825388e-05}, {"id": 131, "seek": 92096, "start": 933.96, "end": 940.32, "text": " must say. And so on the top right, we have Ecois VariLog, which is an event-based VariLog", "tokens": [1633, 584, 13, 400, 370, 322, 264, 1192, 558, 11, 321, 362, 40263, 271, 32511, 43, 664, 11, 597, 307, 364, 2280, 12, 6032, 32511, 43, 664], "temperature": 0.0, "avg_logprob": -0.21258814089766173, "compression_ratio": 1.502008032128514, "no_speech_prob": 6.994942668825388e-05}, {"id": 132, "seek": 92096, "start": 940.32, "end": 946.1600000000001, "text": " simulator. It has been around for quite a while. It's stable, and it works really well. It's", "tokens": [32974, 13, 467, 575, 668, 926, 337, 1596, 257, 1339, 13, 467, 311, 8351, 11, 293, 309, 1985, 534, 731, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.21258814089766173, "compression_ratio": 1.502008032128514, "no_speech_prob": 6.994942668825388e-05}, {"id": 133, "seek": 94616, "start": 946.16, "end": 954.7199999999999, "text": " widely used. But it doesn't support much of the more modern system VariLog features. And it's", "tokens": [13371, 1143, 13, 583, 309, 1177, 380, 1406, 709, 295, 264, 544, 4363, 1185, 32511, 43, 664, 4122, 13, 400, 309, 311], "temperature": 0.0, "avg_logprob": -0.12287150896512546, "compression_ratio": 1.4771573604060915, "no_speech_prob": 2.936470991699025e-05}, {"id": 134, "seek": 94616, "start": 954.7199999999999, "end": 960.9599999999999, "text": " not that fast. It's sufficiently fast for smaller designs. And it's kind of the standard choice if", "tokens": [406, 300, 2370, 13, 467, 311, 31868, 2370, 337, 4356, 11347, 13, 400, 309, 311, 733, 295, 264, 3832, 3922, 498], "temperature": 0.0, "avg_logprob": -0.12287150896512546, "compression_ratio": 1.4771573604060915, "no_speech_prob": 2.936470991699025e-05}, {"id": 135, "seek": 94616, "start": 960.9599999999999, "end": 967.36, "text": " you just want to get started. Ecois VariLog is here. If you're looking for a BHGL option, there is", "tokens": [291, 445, 528, 281, 483, 1409, 13, 40263, 271, 32511, 43, 664, 307, 510, 13, 759, 291, 434, 1237, 337, 257, 40342, 19440, 3614, 11, 456, 307], "temperature": 0.0, "avg_logprob": -0.12287150896512546, "compression_ratio": 1.4771573604060915, "no_speech_prob": 2.936470991699025e-05}, {"id": 136, "seek": 96736, "start": 967.36, "end": 977.36, "text": " GHGL, I think the most actively maintained BHGL simulator these days. And there is VariLog later", "tokens": [40690, 19440, 11, 286, 519, 264, 881, 13022, 17578, 40342, 19440, 32974, 613, 1708, 13, 400, 456, 307, 32511, 43, 664, 1780], "temperature": 0.0, "avg_logprob": -0.1636600752134581, "compression_ratio": 1.467005076142132, "no_speech_prob": 2.6307025109417737e-05}, {"id": 137, "seek": 96736, "start": 977.36, "end": 985.2, "text": " in the middle, which is slightly different because it simulates VariLog as well. The name gives it", "tokens": [294, 264, 2808, 11, 597, 307, 4748, 819, 570, 309, 1034, 26192, 32511, 43, 664, 382, 731, 13, 440, 1315, 2709, 309], "temperature": 0.0, "avg_logprob": -0.1636600752134581, "compression_ratio": 1.467005076142132, "no_speech_prob": 2.6307025109417737e-05}, {"id": 138, "seek": 96736, "start": 985.2, "end": 991.36, "text": " away, I would say. But it's a cycle accurate simulator. So without going into too much of the", "tokens": [1314, 11, 286, 576, 584, 13, 583, 309, 311, 257, 6586, 8559, 32974, 13, 407, 1553, 516, 666, 886, 709, 295, 264], "temperature": 0.0, "avg_logprob": -0.1636600752134581, "compression_ratio": 1.467005076142132, "no_speech_prob": 2.6307025109417737e-05}, {"id": 139, "seek": 99136, "start": 991.36, "end": 1001.2, "text": " details here, if you have kind of a real chip design, you clock it. And then you get kind of", "tokens": [4365, 510, 11, 498, 291, 362, 733, 295, 257, 957, 11409, 1715, 11, 291, 7830, 309, 13, 400, 550, 291, 483, 733, 295], "temperature": 0.0, "avg_logprob": -0.18852202499969095, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.00011004137923009694}, {"id": 140, "seek": 99136, "start": 1001.2, "end": 1011.6, "text": " one clock pass per clock. Well, that's ridiculous. But that's kind of the only times when VariLog", "tokens": [472, 7830, 1320, 680, 7830, 13, 1042, 11, 300, 311, 11083, 13, 583, 300, 311, 733, 295, 264, 787, 1413, 562, 32511, 43, 664], "temperature": 0.0, "avg_logprob": -0.18852202499969095, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.00011004137923009694}, {"id": 141, "seek": 99136, "start": 1011.6, "end": 1017.12, "text": " kind of re-evaluates things that are going on. In an event-based simulator, you get a slightly", "tokens": [733, 295, 319, 12, 68, 3337, 27710, 721, 300, 366, 516, 322, 13, 682, 364, 2280, 12, 6032, 32974, 11, 291, 483, 257, 4748], "temperature": 0.0, "avg_logprob": -0.18852202499969095, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.00011004137923009694}, {"id": 142, "seek": 101712, "start": 1017.12, "end": 1023.68, "text": " different behavior. Either way, VariLog behaves pretty much like a real chip would do afterwards.", "tokens": [819, 5223, 13, 13746, 636, 11, 32511, 43, 664, 36896, 1238, 709, 411, 257, 957, 11409, 576, 360, 10543, 13], "temperature": 0.0, "avg_logprob": -0.08632405944492506, "compression_ratio": 1.5869565217391304, "no_speech_prob": 7.291099609574303e-05}, {"id": 143, "seek": 101712, "start": 1025.44, "end": 1030.16, "text": " And it's a very, very active community. And it's typically based around the", "tokens": [400, 309, 311, 257, 588, 11, 588, 4967, 1768, 13, 400, 309, 311, 5850, 2361, 926, 264], "temperature": 0.0, "avg_logprob": -0.08632405944492506, "compression_ratio": 1.5869565217391304, "no_speech_prob": 7.291099609574303e-05}, {"id": 144, "seek": 101712, "start": 1030.88, "end": 1036.72, "text": " synthesizable subset of VariLog. So because that's kind of what it targets. It targets only the", "tokens": [26617, 22395, 25993, 295, 32511, 43, 664, 13, 407, 570, 300, 311, 733, 295, 437, 309, 12911, 13, 467, 12911, 787, 264], "temperature": 0.0, "avg_logprob": -0.08632405944492506, "compression_ratio": 1.5869565217391304, "no_speech_prob": 7.291099609574303e-05}, {"id": 145, "seek": 101712, "start": 1036.72, "end": 1041.52, "text": " logic that you then want to bring on a chip and not so much the system VariLog that you can use", "tokens": [9952, 300, 291, 550, 528, 281, 1565, 322, 257, 11409, 293, 406, 370, 709, 264, 1185, 32511, 43, 664, 300, 291, 393, 764], "temperature": 0.0, "avg_logprob": -0.08632405944492506, "compression_ratio": 1.5869565217391304, "no_speech_prob": 7.291099609574303e-05}, {"id": 146, "seek": 104152, "start": 1041.52, "end": 1048.56, "text": " to actually write a test bench or verification framework around it. The verification frameworks,", "tokens": [281, 767, 2464, 257, 1500, 10638, 420, 30206, 8388, 926, 309, 13, 440, 30206, 29834, 11], "temperature": 0.0, "avg_logprob": -0.166437698447186, "compression_ratio": 1.6180257510729614, "no_speech_prob": 1.4053892300580628e-05}, {"id": 147, "seek": 104152, "start": 1048.56, "end": 1058.4, "text": " I just mentioned that. Who has heard of UVM, the one up here, couple ones? Okay. So UVM is", "tokens": [286, 445, 2835, 300, 13, 2102, 575, 2198, 295, 17887, 44, 11, 264, 472, 493, 510, 11, 1916, 2306, 30, 1033, 13, 407, 17887, 44, 307], "temperature": 0.0, "avg_logprob": -0.166437698447186, "compression_ratio": 1.6180257510729614, "no_speech_prob": 1.4053892300580628e-05}, {"id": 148, "seek": 104152, "start": 1058.4, "end": 1064.8, "text": " an interesting one. It's a system VariLog verification methodology. And already with methodology", "tokens": [364, 1880, 472, 13, 467, 311, 257, 1185, 32511, 43, 664, 30206, 24850, 13, 400, 1217, 365, 24850], "temperature": 0.0, "avg_logprob": -0.166437698447186, "compression_ratio": 1.6180257510729614, "no_speech_prob": 1.4053892300580628e-05}, {"id": 149, "seek": 104152, "start": 1064.8, "end": 1070.72, "text": " you kind of breathe this air of being designed by a committee. And that's how it looks. It's", "tokens": [291, 733, 295, 10192, 341, 1988, 295, 885, 4761, 538, 257, 7482, 13, 400, 300, 311, 577, 309, 1542, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.166437698447186, "compression_ratio": 1.6180257510729614, "no_speech_prob": 1.4053892300580628e-05}, {"id": 150, "seek": 107072, "start": 1070.72, "end": 1076.32, "text": " effectively a class library, a framework of classes and instructions on how to use them", "tokens": [8659, 257, 1508, 6405, 11, 257, 8388, 295, 5359, 293, 9415, 322, 577, 281, 764, 552], "temperature": 0.0, "avg_logprob": -0.1523215876216382, "compression_ratio": 1.6754716981132076, "no_speech_prob": 2.3843862436478958e-05}, {"id": 151, "seek": 107072, "start": 1076.32, "end": 1080.64, "text": " and when to use them to actually verify a chip. So write a test bench, more or less.", "tokens": [293, 562, 281, 764, 552, 281, 767, 16888, 257, 11409, 13, 407, 2464, 257, 1500, 10638, 11, 544, 420, 1570, 13], "temperature": 0.0, "avg_logprob": -0.1523215876216382, "compression_ratio": 1.6754716981132076, "no_speech_prob": 2.3843862436478958e-05}, {"id": 152, "seek": 107072, "start": 1082.48, "end": 1089.92, "text": " So that's your Google test of VariLog, if you wish to. And there are a couple other options.", "tokens": [407, 300, 311, 428, 3329, 1500, 295, 32511, 43, 664, 11, 498, 291, 3172, 281, 13, 400, 456, 366, 257, 1916, 661, 3956, 13], "temperature": 0.0, "avg_logprob": -0.1523215876216382, "compression_ratio": 1.6754716981132076, "no_speech_prob": 2.3843862436478958e-05}, {"id": 153, "seek": 107072, "start": 1091.2, "end": 1094.48, "text": " And I mentioned that I'm involved there. So I'm going to mention that prominently.", "tokens": [400, 286, 2835, 300, 286, 478, 3288, 456, 13, 407, 286, 478, 516, 281, 2152, 300, 39225, 2276, 13], "temperature": 0.0, "avg_logprob": -0.1523215876216382, "compression_ratio": 1.6754716981132076, "no_speech_prob": 2.3843862436478958e-05}, {"id": 154, "seek": 109448, "start": 1094.48, "end": 1100.64, "text": " There's CocoDB, which gives you a way to write a test bench in Python that is then testing your", "tokens": [821, 311, 29787, 27735, 11, 597, 2709, 291, 257, 636, 281, 2464, 257, 1500, 10638, 294, 15329, 300, 307, 550, 4997, 428], "temperature": 0.0, "avg_logprob": -0.17510385224313446, "compression_ratio": 1.6008403361344539, "no_speech_prob": 6.450706860050559e-05}, {"id": 155, "seek": 109448, "start": 1100.64, "end": 1110.0, "text": " hardware logic. There is OSVVM for BHDL designs. And there is on the top, just one of the further", "tokens": [8837, 9952, 13, 821, 307, 12731, 53, 53, 44, 337, 40342, 35, 43, 11347, 13, 400, 456, 307, 322, 264, 1192, 11, 445, 472, 295, 264, 3052], "temperature": 0.0, "avg_logprob": -0.17510385224313446, "compression_ratio": 1.6008403361344539, "no_speech_prob": 6.450706860050559e-05}, {"id": 156, "seek": 109448, "start": 1110.0, "end": 1114.88, "text": " options. Symbiosis, if you don't want to do simulation-based verification, but you want", "tokens": [3956, 13, 3902, 2504, 48783, 11, 498, 291, 500, 380, 528, 281, 360, 16575, 12, 6032, 30206, 11, 457, 291, 528], "temperature": 0.0, "avg_logprob": -0.17510385224313446, "compression_ratio": 1.6008403361344539, "no_speech_prob": 6.450706860050559e-05}, {"id": 157, "seek": 109448, "start": 1114.88, "end": 1120.72, "text": " to do formal verification, so you want to prove that certain things are happening or not happening.", "tokens": [281, 360, 9860, 30206, 11, 370, 291, 528, 281, 7081, 300, 1629, 721, 366, 2737, 420, 406, 2737, 13], "temperature": 0.0, "avg_logprob": -0.17510385224313446, "compression_ratio": 1.6008403361344539, "no_speech_prob": 6.450706860050559e-05}, {"id": 158, "seek": 112072, "start": 1120.72, "end": 1126.48, "text": " So this is then effectively using a SAT solver behind the scenes to prove some things can be", "tokens": [407, 341, 307, 550, 8659, 1228, 257, 31536, 1404, 331, 2261, 264, 8026, 281, 7081, 512, 721, 393, 312], "temperature": 0.0, "avg_logprob": -0.11526303972516741, "compression_ratio": 1.702290076335878, "no_speech_prob": 5.1815484766848385e-05}, {"id": 159, "seek": 112072, "start": 1126.48, "end": 1131.92, "text": " done or can't be done. So that's a very different verification approach and works very,", "tokens": [1096, 420, 393, 380, 312, 1096, 13, 407, 300, 311, 257, 588, 819, 30206, 3109, 293, 1985, 588, 11], "temperature": 0.0, "avg_logprob": -0.11526303972516741, "compression_ratio": 1.702290076335878, "no_speech_prob": 5.1815484766848385e-05}, {"id": 160, "seek": 112072, "start": 1131.92, "end": 1139.92, "text": " very well for some problems, not for all of them. And so you typically, if you're kind of trying", "tokens": [588, 731, 337, 512, 2740, 11, 406, 337, 439, 295, 552, 13, 400, 370, 291, 5850, 11, 498, 291, 434, 733, 295, 1382], "temperature": 0.0, "avg_logprob": -0.11526303972516741, "compression_ratio": 1.702290076335878, "no_speech_prob": 5.1815484766848385e-05}, {"id": 161, "seek": 112072, "start": 1139.92, "end": 1144.0, "text": " to gain confidence in your design, you definitely go for some simulation-based", "tokens": [281, 6052, 6687, 294, 428, 1715, 11, 291, 2138, 352, 337, 512, 16575, 12, 6032], "temperature": 0.0, "avg_logprob": -0.11526303972516741, "compression_ratio": 1.702290076335878, "no_speech_prob": 5.1815484766848385e-05}, {"id": 162, "seek": 112072, "start": 1144.0, "end": 1149.28, "text": " verification, so simulation-based testing. And then you maybe throw in some formal around", "tokens": [30206, 11, 370, 16575, 12, 6032, 4997, 13, 400, 550, 291, 1310, 3507, 294, 512, 9860, 926], "temperature": 0.0, "avg_logprob": -0.11526303972516741, "compression_ratio": 1.702290076335878, "no_speech_prob": 5.1815484766848385e-05}, {"id": 163, "seek": 114928, "start": 1149.28, "end": 1156.8, "text": " some specific areas. And while I'm putting these here, so this is kind of the way to do", "tokens": [512, 2685, 3179, 13, 400, 1339, 286, 478, 3372, 613, 510, 11, 370, 341, 307, 733, 295, 264, 636, 281, 360], "temperature": 0.0, "avg_logprob": -0.1958794874303481, "compression_ratio": 1.4742857142857142, "no_speech_prob": 8.553611405659467e-05}, {"id": 164, "seek": 114928, "start": 1156.8, "end": 1161.44, "text": " verification not new, but what we see here is that we have a fair amount of options in open", "tokens": [30206, 406, 777, 11, 457, 437, 321, 536, 510, 307, 300, 321, 362, 257, 3143, 2372, 295, 3956, 294, 1269], "temperature": 0.0, "avg_logprob": -0.1958794874303481, "compression_ratio": 1.4742857142857142, "no_speech_prob": 8.553611405659467e-05}, {"id": 165, "seek": 114928, "start": 1161.44, "end": 1169.76, "text": " source that are very, very high quality and ready to be used. So that's great.", "tokens": [4009, 300, 366, 588, 11, 588, 1090, 3125, 293, 1919, 281, 312, 1143, 13, 407, 300, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.1958794874303481, "compression_ratio": 1.4742857142857142, "no_speech_prob": 8.553611405659467e-05}, {"id": 166, "seek": 116976, "start": 1169.76, "end": 1178.72, "text": " Build systems, and I need to mention the first one first. Who has heard of Feustock? Oh, a couple ones.", "tokens": [11875, 3652, 11, 293, 286, 643, 281, 2152, 264, 700, 472, 700, 13, 2102, 575, 2198, 295, 3697, 381, 1560, 30, 876, 11, 257, 1916, 2306, 13], "temperature": 0.0, "avg_logprob": -0.21874741946949677, "compression_ratio": 1.5674603174603174, "no_speech_prob": 0.0003824124578386545}, {"id": 167, "seek": 116976, "start": 1178.72, "end": 1183.92, "text": " So there's this guy called Ola Chingren, quite active on Twitter as well, and he's always writing", "tokens": [407, 456, 311, 341, 2146, 1219, 422, 875, 47818, 1095, 11, 1596, 4967, 322, 5794, 382, 731, 11, 293, 415, 311, 1009, 3579], "temperature": 0.0, "avg_logprob": -0.21874741946949677, "compression_ratio": 1.5674603174603174, "no_speech_prob": 0.0003824124578386545}, {"id": 168, "seek": 116976, "start": 1183.92, "end": 1191.28, "text": " award-winning software. So he started that initially when he just saw a tool that apparently has", "tokens": [7130, 12, 32960, 4722, 13, 407, 415, 1409, 300, 9105, 562, 415, 445, 1866, 257, 2290, 300, 7970, 575], "temperature": 0.0, "avg_logprob": -0.21874741946949677, "compression_ratio": 1.5674603174603174, "no_speech_prob": 0.0003824124578386545}, {"id": 169, "seek": 116976, "start": 1191.28, "end": 1196.56, "text": " gained an award, but he couldn't find the award that it was awarded. So from then on, every tool", "tokens": [12634, 364, 7130, 11, 457, 415, 2809, 380, 915, 264, 7130, 300, 309, 390, 19100, 13, 407, 490, 550, 322, 11, 633, 2290], "temperature": 0.0, "avg_logprob": -0.21874741946949677, "compression_ratio": 1.5674603174603174, "no_speech_prob": 0.0003824124578386545}, {"id": 170, "seek": 119656, "start": 1196.56, "end": 1200.8, "text": " he's writing is award-winning, even though it has never won any awards. Actually, I think Feustock", "tokens": [415, 311, 3579, 307, 7130, 12, 32960, 11, 754, 1673, 309, 575, 1128, 1582, 604, 15193, 13, 5135, 11, 286, 519, 3697, 381, 1560], "temperature": 0.0, "avg_logprob": -0.1562968235389859, "compression_ratio": 1.6637554585152838, "no_speech_prob": 6.264038529479876e-05}, {"id": 171, "seek": 119656, "start": 1200.8, "end": 1205.6799999999998, "text": " has won one or two awards by now. So I think that's something we only took copy. Just make sure that", "tokens": [575, 1582, 472, 420, 732, 15193, 538, 586, 13, 407, 286, 519, 300, 311, 746, 321, 787, 1890, 5055, 13, 1449, 652, 988, 300], "temperature": 0.0, "avg_logprob": -0.1562968235389859, "compression_ratio": 1.6637554585152838, "no_speech_prob": 6.264038529479876e-05}, {"id": 172, "seek": 119656, "start": 1205.6799999999998, "end": 1210.8, "text": " we always say our software is award-winning. And from down, it's just much better.", "tokens": [321, 1009, 584, 527, 4722, 307, 7130, 12, 32960, 13, 400, 490, 760, 11, 309, 311, 445, 709, 1101, 13], "temperature": 0.0, "avg_logprob": -0.1562968235389859, "compression_ratio": 1.6637554585152838, "no_speech_prob": 6.264038529479876e-05}, {"id": 173, "seek": 119656, "start": 1211.9199999999998, "end": 1220.08, "text": " So Feustock is a build system for hardware designs, and Idyllize is a build system backend to make", "tokens": [407, 3697, 381, 1560, 307, 257, 1322, 1185, 337, 8837, 11347, 11, 293, 286, 3173, 285, 1125, 307, 257, 1322, 1185, 38087, 281, 652], "temperature": 0.0, "avg_logprob": -0.1562968235389859, "compression_ratio": 1.6637554585152838, "no_speech_prob": 6.264038529479876e-05}, {"id": 174, "seek": 122008, "start": 1220.08, "end": 1226.8, "text": " kind of the hardware design put together and feed that to a variety of different tools that are", "tokens": [733, 295, 264, 8837, 1715, 829, 1214, 293, 3154, 300, 281, 257, 5673, 295, 819, 3873, 300, 366], "temperature": 0.0, "avg_logprob": -0.15775062924339658, "compression_ratio": 1.6576576576576576, "no_speech_prob": 3.895998088410124e-05}, {"id": 175, "seek": 122008, "start": 1226.8, "end": 1231.76, "text": " involved. So just like driving your compiler. There was VUnit, a regression manager.", "tokens": [3288, 13, 407, 445, 411, 4840, 428, 31958, 13, 821, 390, 691, 12405, 270, 11, 257, 24590, 6598, 13], "temperature": 0.0, "avg_logprob": -0.15775062924339658, "compression_ratio": 1.6576576576576576, "no_speech_prob": 3.895998088410124e-05}, {"id": 176, "seek": 122008, "start": 1234.08, "end": 1239.1999999999998, "text": " Well, okay, another maybe interesting term I'm saying regression manager here. So a regression", "tokens": [1042, 11, 1392, 11, 1071, 1310, 1880, 1433, 286, 478, 1566, 24590, 6598, 510, 13, 407, 257, 24590], "temperature": 0.0, "avg_logprob": -0.15775062924339658, "compression_ratio": 1.6576576576576576, "no_speech_prob": 3.895998088410124e-05}, {"id": 177, "seek": 122008, "start": 1239.1999999999998, "end": 1246.48, "text": " in the software world would be something was working, and then it would broke it somehow. So", "tokens": [294, 264, 4722, 1002, 576, 312, 746, 390, 1364, 11, 293, 550, 309, 576, 6902, 309, 6063, 13, 407], "temperature": 0.0, "avg_logprob": -0.15775062924339658, "compression_ratio": 1.6576576576576576, "no_speech_prob": 3.895998088410124e-05}, {"id": 178, "seek": 124648, "start": 1246.48, "end": 1252.56, "text": " kind of functionality degraded in quality. A regression in the hardware world would be somebody", "tokens": [733, 295, 14980, 24740, 292, 294, 3125, 13, 316, 24590, 294, 264, 8837, 1002, 576, 312, 2618], "temperature": 0.0, "avg_logprob": -0.16983837305113328, "compression_ratio": 1.6, "no_speech_prob": 3.085710704908706e-05}, {"id": 179, "seek": 124648, "start": 1252.56, "end": 1257.84, "text": " just running a fair amount of tests. So effectively, Unite DCI would be a regression,", "tokens": [445, 2614, 257, 3143, 2372, 295, 6921, 13, 407, 8659, 11, 1156, 642, 9114, 40, 576, 312, 257, 24590, 11], "temperature": 0.0, "avg_logprob": -0.16983837305113328, "compression_ratio": 1.6, "no_speech_prob": 3.085710704908706e-05}, {"id": 180, "seek": 124648, "start": 1259.3600000000001, "end": 1264.96, "text": " just to add confusing terminology. And there are a fair amount of other options for build systems.", "tokens": [445, 281, 909, 13181, 27575, 13, 400, 456, 366, 257, 3143, 2372, 295, 661, 3956, 337, 1322, 3652, 13], "temperature": 0.0, "avg_logprob": -0.16983837305113328, "compression_ratio": 1.6, "no_speech_prob": 3.085710704908706e-05}, {"id": 181, "seek": 124648, "start": 1264.96, "end": 1272.96, "text": " Again, just Google them and then fight about it, obviously. We talked about white space before,", "tokens": [3764, 11, 445, 3329, 552, 293, 550, 2092, 466, 309, 11, 2745, 13, 492, 2825, 466, 2418, 1901, 949, 11], "temperature": 0.0, "avg_logprob": -0.16983837305113328, "compression_ratio": 1.6, "no_speech_prob": 3.085710704908706e-05}, {"id": 182, "seek": 127296, "start": 1272.96, "end": 1279.44, "text": " and when you're done with your fighting about your build system, you obviously need to fight", "tokens": [293, 562, 291, 434, 1096, 365, 428, 5237, 466, 428, 1322, 1185, 11, 291, 2745, 643, 281, 2092], "temperature": 0.0, "avg_logprob": -0.1637861536837172, "compression_ratio": 1.6816143497757847, "no_speech_prob": 1.6376572602894157e-05}, {"id": 183, "seek": 127296, "start": 1279.44, "end": 1286.4, "text": " about your right style guide to use for your programming languages. So we have come accustomed", "tokens": [466, 428, 558, 3758, 5934, 281, 764, 337, 428, 9410, 8650, 13, 407, 321, 362, 808, 35980], "temperature": 0.0, "avg_logprob": -0.1637861536837172, "compression_ratio": 1.6816143497757847, "no_speech_prob": 1.6376572602894157e-05}, {"id": 184, "seek": 127296, "start": 1286.4, "end": 1293.1200000000001, "text": " in the software world to there being kind of clang format and other go format and other", "tokens": [294, 264, 4722, 1002, 281, 456, 885, 733, 295, 596, 656, 7877, 293, 661, 352, 7877, 293, 661], "temperature": 0.0, "avg_logprob": -0.1637861536837172, "compression_ratio": 1.6816143497757847, "no_speech_prob": 1.6376572602894157e-05}, {"id": 185, "seek": 129312, "start": 1293.12, "end": 1302.1599999999999, "text": " enforcing, or not so much enforcing, auto format is there. If you look at a very low code and VHDL", "tokens": [25495, 2175, 11, 420, 406, 370, 709, 25495, 2175, 11, 8399, 7877, 307, 456, 13, 759, 291, 574, 412, 257, 588, 2295, 3089, 293, 691, 22859, 43], "temperature": 0.0, "avg_logprob": -0.20846792856852214, "compression_ratio": 1.6294117647058823, "no_speech_prob": 4.033632285427302e-05}, {"id": 186, "seek": 129312, "start": 1302.1599999999999, "end": 1310.6399999999999, "text": " code, you see there is no format. And you see often there is kind of no taste either. So", "tokens": [3089, 11, 291, 536, 456, 307, 572, 7877, 13, 400, 291, 536, 2049, 456, 307, 733, 295, 572, 3939, 2139, 13, 407], "temperature": 0.0, "avg_logprob": -0.20846792856852214, "compression_ratio": 1.6294117647058823, "no_speech_prob": 4.033632285427302e-05}, {"id": 187, "seek": 129312, "start": 1312.2399999999998, "end": 1318.1599999999999, "text": " it just looks awful. And if you look through code, then everything looks different, which", "tokens": [309, 445, 1542, 11232, 13, 400, 498, 291, 574, 807, 3089, 11, 550, 1203, 1542, 819, 11, 597], "temperature": 0.0, "avg_logprob": -0.20846792856852214, "compression_ratio": 1.6294117647058823, "no_speech_prob": 4.033632285427302e-05}, {"id": 188, "seek": 131816, "start": 1318.16, "end": 1324.64, "text": " isn't that much of a problem in the commercial chip development world, because you own something.", "tokens": [1943, 380, 300, 709, 295, 257, 1154, 294, 264, 6841, 11409, 3250, 1002, 11, 570, 291, 1065, 746, 13], "temperature": 0.0, "avg_logprob": -0.11957485364831012, "compression_ratio": 1.6075471698113208, "no_speech_prob": 5.144629903952591e-05}, {"id": 189, "seek": 131816, "start": 1324.64, "end": 1328.96, "text": " It's kind of, it's John's core. So this is kind of the piece of code that John is working on.", "tokens": [467, 311, 733, 295, 11, 309, 311, 2619, 311, 4965, 13, 407, 341, 307, 733, 295, 264, 2522, 295, 3089, 300, 2619, 307, 1364, 322, 13], "temperature": 0.0, "avg_logprob": -0.11957485364831012, "compression_ratio": 1.6075471698113208, "no_speech_prob": 5.144629903952591e-05}, {"id": 190, "seek": 131816, "start": 1328.96, "end": 1334.0800000000002, "text": " Only he needs to be able to touch it, which is then up to John, however, they want to", "tokens": [5686, 415, 2203, 281, 312, 1075, 281, 2557, 309, 11, 597, 307, 550, 493, 281, 2619, 11, 4461, 11, 436, 528, 281], "temperature": 0.0, "avg_logprob": -0.11957485364831012, "compression_ratio": 1.6075471698113208, "no_speech_prob": 5.144629903952591e-05}, {"id": 191, "seek": 131816, "start": 1335.76, "end": 1339.6000000000001, "text": " kind of format their code. And I've done that for 20 or 30 or 40 years, so they just", "tokens": [733, 295, 7877, 641, 3089, 13, 400, 286, 600, 1096, 300, 337, 945, 420, 2217, 420, 3356, 924, 11, 370, 436, 445], "temperature": 0.0, "avg_logprob": -0.11957485364831012, "compression_ratio": 1.6075471698113208, "no_speech_prob": 5.144629903952591e-05}, {"id": 192, "seek": 131816, "start": 1340.16, "end": 1343.0400000000002, "text": " have their in-house style that you also see changing over time.", "tokens": [362, 641, 294, 12, 6410, 3758, 300, 291, 611, 536, 4473, 670, 565, 13], "temperature": 0.0, "avg_logprob": -0.11957485364831012, "compression_ratio": 1.6075471698113208, "no_speech_prob": 5.144629903952591e-05}, {"id": 193, "seek": 134304, "start": 1343.04, "end": 1353.44, "text": " And that's not something that we kind of find normal in kind of these days of software development.", "tokens": [400, 300, 311, 406, 746, 300, 321, 733, 295, 915, 2710, 294, 733, 295, 613, 1708, 295, 4722, 3250, 13], "temperature": 0.0, "avg_logprob": -0.1786212107030357, "compression_ratio": 1.736318407960199, "no_speech_prob": 2.0867990315309726e-05}, {"id": 194, "seek": 134304, "start": 1353.44, "end": 1359.84, "text": " So there was an effort, and there still is an effort to bring formatting and linting", "tokens": [407, 456, 390, 364, 4630, 11, 293, 456, 920, 307, 364, 4630, 281, 1565, 39366, 293, 287, 686, 278], "temperature": 0.0, "avg_logprob": -0.1786212107030357, "compression_ratio": 1.736318407960199, "no_speech_prob": 2.0867990315309726e-05}, {"id": 195, "seek": 134304, "start": 1360.48, "end": 1365.44, "text": " and language server integration. So that gives you a visual studio code integration,", "tokens": [293, 2856, 7154, 10980, 13, 407, 300, 2709, 291, 257, 5056, 6811, 3089, 10980, 11], "temperature": 0.0, "avg_logprob": -0.1786212107030357, "compression_ratio": 1.736318407960199, "no_speech_prob": 2.0867990315309726e-05}, {"id": 196, "seek": 134304, "start": 1365.44, "end": 1370.24, "text": " or other kinds of integrations. And the variable is the tool to look for there.", "tokens": [420, 661, 3685, 295, 3572, 763, 13, 400, 264, 7006, 307, 264, 2290, 281, 574, 337, 456, 13], "temperature": 0.0, "avg_logprob": -0.1786212107030357, "compression_ratio": 1.736318407960199, "no_speech_prob": 2.0867990315309726e-05}, {"id": 197, "seek": 137024, "start": 1370.24, "end": 1377.52, "text": " There is very later lint. Part of that, very later simulated, I've shown before. And it actually", "tokens": [821, 307, 588, 1780, 287, 686, 13, 4100, 295, 300, 11, 588, 1780, 41713, 11, 286, 600, 4898, 949, 13, 400, 309, 767], "temperature": 0.0, "avg_logprob": -0.18380471070607504, "compression_ratio": 1.5899581589958158, "no_speech_prob": 6.140468758530915e-05}, {"id": 198, "seek": 137024, "start": 1377.52, "end": 1384.72, "text": " does more static analysis jobs as well. And there are a couple other options to choose from.", "tokens": [775, 544, 13437, 5215, 4782, 382, 731, 13, 400, 456, 366, 257, 1916, 661, 3956, 281, 2826, 490, 13], "temperature": 0.0, "avg_logprob": -0.18380471070607504, "compression_ratio": 1.5899581589958158, "no_speech_prob": 6.140468758530915e-05}, {"id": 199, "seek": 137024, "start": 1384.72, "end": 1389.36, "text": " And mostly mentioning that a very long part here, you'll find that, because that's what I'm most", "tokens": [400, 5240, 18315, 300, 257, 588, 938, 644, 510, 11, 291, 603, 915, 300, 11, 570, 300, 311, 437, 286, 478, 881], "temperature": 0.0, "avg_logprob": -0.18380471070607504, "compression_ratio": 1.5899581589958158, "no_speech_prob": 6.140468758530915e-05}, {"id": 200, "seek": 137024, "start": 1389.36, "end": 1397.44, "text": " familiar with, but I'm very sure there is an equivalent BHTL kind of option for many of these", "tokens": [4963, 365, 11, 457, 286, 478, 588, 988, 456, 307, 364, 10344, 40342, 51, 43, 733, 295, 3614, 337, 867, 295, 613], "temperature": 0.0, "avg_logprob": -0.18380471070607504, "compression_ratio": 1.5899581589958158, "no_speech_prob": 6.140468758530915e-05}, {"id": 201, "seek": 139744, "start": 1397.44, "end": 1401.68, "text": " things as well. And if you know them, by the way, just raise your hand and we'll just add it right away.", "tokens": [721, 382, 731, 13, 400, 498, 291, 458, 552, 11, 538, 264, 636, 11, 445, 5300, 428, 1011, 293, 321, 603, 445, 909, 309, 558, 1314, 13], "temperature": 0.0, "avg_logprob": -0.1735339208480415, "compression_ratio": 1.6440677966101696, "no_speech_prob": 6.359460530802608e-05}, {"id": 202, "seek": 139744, "start": 1404.56, "end": 1410.3200000000002, "text": " So let's have a look at just one or two examples. So this is a don't need to read it in full. So", "tokens": [407, 718, 311, 362, 257, 574, 412, 445, 472, 420, 732, 5110, 13, 407, 341, 307, 257, 500, 380, 643, 281, 1401, 309, 294, 1577, 13, 407], "temperature": 0.0, "avg_logprob": -0.1735339208480415, "compression_ratio": 1.6440677966101696, "no_speech_prob": 6.359460530802608e-05}, {"id": 203, "seek": 139744, "start": 1410.3200000000002, "end": 1418.24, "text": " this is a piece of very low-con-top assigning something based on a ternary statement. And", "tokens": [341, 307, 257, 2522, 295, 588, 2295, 12, 1671, 12, 19337, 49602, 746, 2361, 322, 257, 256, 1248, 822, 5629, 13, 400], "temperature": 0.0, "avg_logprob": -0.1735339208480415, "compression_ratio": 1.6440677966101696, "no_speech_prob": 6.359460530802608e-05}, {"id": 204, "seek": 139744, "start": 1419.3600000000001, "end": 1427.2, "text": " think about very like it's statically, it's not statically typed, but it still is easy to assign", "tokens": [519, 466, 588, 411, 309, 311, 2219, 984, 11, 309, 311, 406, 2219, 984, 33941, 11, 457, 309, 920, 307, 1858, 281, 6269], "temperature": 0.0, "avg_logprob": -0.1735339208480415, "compression_ratio": 1.6440677966101696, "no_speech_prob": 6.359460530802608e-05}, {"id": 205, "seek": 142720, "start": 1427.2, "end": 1433.76, "text": " for example, 32 bits to seven bits or the other way around. And very likely, well, most very", "tokens": [337, 1365, 11, 8858, 9239, 281, 3407, 9239, 420, 264, 661, 636, 926, 13, 400, 588, 3700, 11, 731, 11, 881, 588], "temperature": 0.0, "avg_logprob": -0.20034713745117189, "compression_ratio": 1.6309012875536482, "no_speech_prob": 9.984718053601682e-05}, {"id": 206, "seek": 142720, "start": 1433.76, "end": 1441.76, "text": " log tools will be, well, very much equal end of that fact and just strip off some bits that are", "tokens": [3565, 3873, 486, 312, 11, 731, 11, 588, 709, 2681, 917, 295, 300, 1186, 293, 445, 12828, 766, 512, 9239, 300, 366], "temperature": 0.0, "avg_logprob": -0.20034713745117189, "compression_ratio": 1.6309012875536482, "no_speech_prob": 9.984718053601682e-05}, {"id": 207, "seek": 142720, "start": 1441.76, "end": 1448.4, "text": " not used or padded in some way. So what you would expect from many languages where the compiler", "tokens": [406, 1143, 420, 6887, 9207, 294, 512, 636, 13, 407, 437, 291, 576, 2066, 490, 867, 8650, 689, 264, 31958], "temperature": 0.0, "avg_logprob": -0.20034713745117189, "compression_ratio": 1.6309012875536482, "no_speech_prob": 9.984718053601682e-05}, {"id": 208, "seek": 142720, "start": 1448.4, "end": 1454.0, "text": " just tells you, well, this is just bullshit that you've written here. And very likely need some", "tokens": [445, 5112, 291, 11, 731, 11, 341, 307, 445, 22676, 300, 291, 600, 3720, 510, 13, 400, 588, 3700, 643, 512], "temperature": 0.0, "avg_logprob": -0.20034713745117189, "compression_ratio": 1.6309012875536482, "no_speech_prob": 9.984718053601682e-05}, {"id": 209, "seek": 145400, "start": 1454.0, "end": 1461.76, "text": " further tools to do that actually. And variator lint is one of the options here. Just random", "tokens": [3052, 3873, 281, 360, 300, 767, 13, 400, 3034, 1639, 287, 686, 307, 472, 295, 264, 3956, 510, 13, 1449, 4974], "temperature": 0.0, "avg_logprob": -0.14963063326748935, "compression_ratio": 1.6118143459915613, "no_speech_prob": 5.0809972890419886e-05}, {"id": 210, "seek": 145400, "start": 1461.76, "end": 1466.96, "text": " examples where you actually need insight into the variables and the constants that are being used.", "tokens": [5110, 689, 291, 767, 643, 11269, 666, 264, 9102, 293, 264, 35870, 300, 366, 885, 1143, 13], "temperature": 0.0, "avg_logprob": -0.14963063326748935, "compression_ratio": 1.6118143459915613, "no_speech_prob": 5.0809972890419886e-05}, {"id": 211, "seek": 145400, "start": 1469.52, "end": 1476.4, "text": " With variable, we now also can do something that we also know quite well from a software world.", "tokens": [2022, 7006, 11, 321, 586, 611, 393, 360, 746, 300, 321, 611, 458, 1596, 731, 490, 257, 4722, 1002, 13], "temperature": 0.0, "avg_logprob": -0.14963063326748935, "compression_ratio": 1.6118143459915613, "no_speech_prob": 5.0809972890419886e-05}, {"id": 212, "seek": 145400, "start": 1476.4, "end": 1482.0, "text": " It's just have style lints and stuff like that running in CIN actually give you feedback right", "tokens": [467, 311, 445, 362, 3758, 287, 8654, 293, 1507, 411, 300, 2614, 294, 383, 1464, 767, 976, 291, 5824, 558], "temperature": 0.0, "avg_logprob": -0.14963063326748935, "compression_ratio": 1.6118143459915613, "no_speech_prob": 5.0809972890419886e-05}, {"id": 213, "seek": 148200, "start": 1482.0, "end": 1491.2, "text": " away. And for example here, I'm having a screenshot from a open-type repository, a pull request,", "tokens": [1314, 13, 400, 337, 1365, 510, 11, 286, 478, 1419, 257, 27712, 490, 257, 1269, 12, 20467, 25841, 11, 257, 2235, 5308, 11], "temperature": 0.0, "avg_logprob": -0.14169438680013022, "compression_ratio": 1.5333333333333334, "no_speech_prob": 4.152681867708452e-05}, {"id": 214, "seek": 148200, "start": 1491.2, "end": 1495.36, "text": " where one of these bots actually gives you immediately feedback on, well, that's", "tokens": [689, 472, 295, 613, 35410, 767, 2709, 291, 4258, 5824, 322, 11, 731, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.14169438680013022, "compression_ratio": 1.5333333333333334, "no_speech_prob": 4.152681867708452e-05}, {"id": 215, "seek": 148200, "start": 1495.36, "end": 1505.04, "text": " training space. That's kind of the most boring example. But also things like rules about naming", "tokens": [3097, 1901, 13, 663, 311, 733, 295, 264, 881, 9989, 1365, 13, 583, 611, 721, 411, 4474, 466, 25290], "temperature": 0.0, "avg_logprob": -0.14169438680013022, "compression_ratio": 1.5333333333333334, "no_speech_prob": 4.152681867708452e-05}, {"id": 216, "seek": 148200, "start": 1505.04, "end": 1509.04, "text": " certain constructs. We don't need to go into the details of what's happening here. And I think", "tokens": [1629, 7690, 82, 13, 492, 500, 380, 643, 281, 352, 666, 264, 4365, 295, 437, 311, 2737, 510, 13, 400, 286, 519], "temperature": 0.0, "avg_logprob": -0.14169438680013022, "compression_ratio": 1.5333333333333334, "no_speech_prob": 4.152681867708452e-05}, {"id": 217, "seek": 150904, "start": 1509.04, "end": 1516.96, "text": " I've seen some people from Antmicro here before. So if you have questions about variable, I think", "tokens": [286, 600, 1612, 512, 561, 490, 5130, 13195, 340, 510, 949, 13, 407, 498, 291, 362, 1651, 466, 7006, 11, 286, 519], "temperature": 0.0, "avg_logprob": -0.1709781837463379, "compression_ratio": 1.588235294117647, "no_speech_prob": 7.017263123998418e-05}, {"id": 218, "seek": 150904, "start": 1516.96, "end": 1522.48, "text": " that people up there are to blame and to ask questions. But I've done a great job.", "tokens": [300, 561, 493, 456, 366, 281, 10127, 293, 281, 1029, 1651, 13, 583, 286, 600, 1096, 257, 869, 1691, 13], "temperature": 0.0, "avg_logprob": -0.1709781837463379, "compression_ratio": 1.588235294117647, "no_speech_prob": 7.017263123998418e-05}, {"id": 219, "seek": 150904, "start": 1525.76, "end": 1532.1599999999999, "text": " So let's keep it at that for the moment. Frontend, we're doing great in terms of chip design. So", "tokens": [407, 718, 311, 1066, 309, 412, 300, 337, 264, 1623, 13, 17348, 521, 11, 321, 434, 884, 869, 294, 2115, 295, 11409, 1715, 13, 407], "temperature": 0.0, "avg_logprob": -0.1709781837463379, "compression_ratio": 1.588235294117647, "no_speech_prob": 7.017263123998418e-05}, {"id": 220, "seek": 153216, "start": 1532.16, "end": 1538.5600000000002, "text": " we have all the tools. We've seen that the slides only always had a subset of tools that we can use.", "tokens": [321, 362, 439, 264, 3873, 13, 492, 600, 1612, 300, 264, 9788, 787, 1009, 632, 257, 25993, 295, 3873, 300, 321, 393, 764, 13], "temperature": 0.0, "avg_logprob": -0.11637639611717163, "compression_ratio": 1.7756653992395437, "no_speech_prob": 6.571726407855749e-05}, {"id": 221, "seek": 153216, "start": 1539.3600000000001, "end": 1545.2, "text": " So Frontend is doing great and has been for ages. I mean, one thing I would love to see", "tokens": [407, 17348, 521, 307, 884, 869, 293, 575, 668, 337, 12357, 13, 286, 914, 11, 472, 551, 286, 576, 959, 281, 536], "temperature": 0.0, "avg_logprob": -0.11637639611717163, "compression_ratio": 1.7756653992395437, "no_speech_prob": 6.571726407855749e-05}, {"id": 222, "seek": 153216, "start": 1545.2, "end": 1550.96, "text": " is that we just stop reinventing Verilog parsing. It's a huge language and we have so many tools", "tokens": [307, 300, 321, 445, 1590, 33477, 278, 4281, 388, 664, 21156, 278, 13, 467, 311, 257, 2603, 2856, 293, 321, 362, 370, 867, 3873], "temperature": 0.0, "avg_logprob": -0.11637639611717163, "compression_ratio": 1.7756653992395437, "no_speech_prob": 6.571726407855749e-05}, {"id": 223, "seek": 153216, "start": 1550.96, "end": 1556.0800000000002, "text": " that all think they can parse Verilog and they just can't. They just really can't. I mean,", "tokens": [300, 439, 519, 436, 393, 48377, 4281, 388, 664, 293, 436, 445, 393, 380, 13, 814, 445, 534, 393, 380, 13, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.11637639611717163, "compression_ratio": 1.7756653992395437, "no_speech_prob": 6.571726407855749e-05}, {"id": 224, "seek": 153216, "start": 1556.0800000000002, "end": 1560.3200000000002, "text": " everybody thinks they just strip at that part of the standard and somebody uses it and you", "tokens": [2201, 7309, 436, 445, 12828, 412, 300, 644, 295, 264, 3832, 293, 2618, 4960, 309, 293, 291], "temperature": 0.0, "avg_logprob": -0.11637639611717163, "compression_ratio": 1.7756653992395437, "no_speech_prob": 6.571726407855749e-05}, {"id": 225, "seek": 156032, "start": 1560.32, "end": 1565.28, "text": " get these weird pipelines that just don't work anymore. So maybe a unified frontend at some", "tokens": [483, 613, 3657, 40168, 300, 445, 500, 380, 589, 3602, 13, 407, 1310, 257, 26787, 1868, 521, 412, 512], "temperature": 0.0, "avg_logprob": -0.16651006305918975, "compression_ratio": 1.5166666666666666, "no_speech_prob": 6.080686944187619e-05}, {"id": 226, "seek": 156032, "start": 1565.28, "end": 1570.32, "text": " point in time. And I know there have been a couple of attempts to actually do that.", "tokens": [935, 294, 565, 13, 400, 286, 458, 456, 362, 668, 257, 1916, 295, 15257, 281, 767, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.16651006305918975, "compression_ratio": 1.5166666666666666, "no_speech_prob": 6.080686944187619e-05}, {"id": 227, "seek": 156032, "start": 1570.32, "end": 1574.8799999999999, "text": " And it just leads to that situation that you now have one more frontend to care about, as always.", "tokens": [400, 309, 445, 6689, 281, 300, 2590, 300, 291, 586, 362, 472, 544, 1868, 521, 281, 1127, 466, 11, 382, 1009, 13], "temperature": 0.0, "avg_logprob": -0.16651006305918975, "compression_ratio": 1.5166666666666666, "no_speech_prob": 6.080686944187619e-05}, {"id": 228, "seek": 157488, "start": 1574.88, "end": 1590.96, "text": " Okay. We have our logic design. We can run it on an FPGA. Sure. And in the FPGA world,", "tokens": [1033, 13, 492, 362, 527, 9952, 1715, 13, 492, 393, 1190, 309, 322, 364, 36655, 12570, 13, 4894, 13, 400, 294, 264, 36655, 12570, 1002, 11], "temperature": 0.0, "avg_logprob": -0.14496524517352766, "compression_ratio": 1.4444444444444444, "no_speech_prob": 6.820182898081839e-05}, {"id": 229, "seek": 157488, "start": 1590.96, "end": 1595.5200000000002, "text": " there are kind of two main manufacturers of FPGAs and there is something else. So who does,", "tokens": [456, 366, 733, 295, 732, 2135, 18455, 295, 36655, 38, 10884, 293, 456, 307, 746, 1646, 13, 407, 567, 775, 11], "temperature": 0.0, "avg_logprob": -0.14496524517352766, "compression_ratio": 1.4444444444444444, "no_speech_prob": 6.820182898081839e-05}, {"id": 230, "seek": 157488, "start": 1595.5200000000002, "end": 1602.0800000000002, "text": " well, who does not know what an FPGA is? Okay. Very small number. So it's a field", "tokens": [731, 11, 567, 775, 406, 458, 437, 364, 36655, 12570, 307, 30, 1033, 13, 4372, 1359, 1230, 13, 407, 309, 311, 257, 2519], "temperature": 0.0, "avg_logprob": -0.14496524517352766, "compression_ratio": 1.4444444444444444, "no_speech_prob": 6.820182898081839e-05}, {"id": 231, "seek": 160208, "start": 1602.08, "end": 1607.84, "text": " programmable gate array. So it's effectively a chip that you can reprogram. Let's put it like that", "tokens": [37648, 712, 8539, 10225, 13, 407, 309, 311, 8659, 257, 11409, 300, 291, 393, 35257, 1342, 13, 961, 311, 829, 309, 411, 300], "temperature": 0.0, "avg_logprob": -0.24367081778390068, "compression_ratio": 1.530612244897959, "no_speech_prob": 0.00014497476513497531}, {"id": 232, "seek": 160208, "start": 1607.84, "end": 1615.36, "text": " in very simple terms. And normally you would use the tool that the vendor provides you that would", "tokens": [294, 588, 2199, 2115, 13, 400, 5646, 291, 576, 764, 264, 2290, 300, 264, 24321, 6417, 291, 300, 576], "temperature": 0.0, "avg_logprob": -0.24367081778390068, "compression_ratio": 1.530612244897959, "no_speech_prob": 0.00014497476513497531}, {"id": 233, "seek": 160208, "start": 1615.36, "end": 1621.52, "text": " be in, how do I name this thing? So it would be Vivado for Xilinx, now some other company,", "tokens": [312, 294, 11, 577, 360, 286, 1315, 341, 551, 30, 407, 309, 576, 312, 28188, 1573, 337, 1783, 388, 259, 87, 11, 586, 512, 661, 2237, 11], "temperature": 0.0, "avg_logprob": -0.24367081778390068, "compression_ratio": 1.530612244897959, "no_speech_prob": 0.00014497476513497531}, {"id": 234, "seek": 160208, "start": 1621.52, "end": 1630.32, "text": " or Quartus for Altera, now Intel. Whatever. Just get bored. Come on. Stop it. Or if you", "tokens": [420, 2326, 446, 301, 337, 967, 23833, 11, 586, 19762, 13, 8541, 13, 1449, 483, 13521, 13, 2492, 322, 13, 5535, 309, 13, 1610, 498, 291], "temperature": 0.0, "avg_logprob": -0.24367081778390068, "compression_ratio": 1.530612244897959, "no_speech_prob": 0.00014497476513497531}, {"id": 235, "seek": 163032, "start": 1630.32, "end": 1638.24, "text": " don't want to use those closed tools, you can use symbiosis or formally Simpliflow or now for FPGA.", "tokens": [500, 380, 528, 281, 764, 729, 5395, 3873, 11, 291, 393, 764, 43700, 48783, 420, 25983, 3998, 564, 351, 14107, 420, 586, 337, 36655, 12570, 13], "temperature": 0.0, "avg_logprob": -0.21681353412097013, "compression_ratio": 1.4922279792746114, "no_speech_prob": 0.0001153049961430952}, {"id": 236, "seek": 163032, "start": 1638.96, "end": 1645.36, "text": " And it gives you a reverse engineered way to actually target Xilinx 7-series FPGA. So these", "tokens": [400, 309, 2709, 291, 257, 9943, 38648, 636, 281, 767, 3779, 1783, 388, 259, 87, 1614, 12, 12484, 530, 36655, 12570, 13, 407, 613], "temperature": 0.0, "avg_logprob": -0.21681353412097013, "compression_ratio": 1.4922279792746114, "no_speech_prob": 0.0001153049961430952}, {"id": 237, "seek": 163032, "start": 1645.36, "end": 1653.4399999999998, "text": " are the most common FPGAs. And actually do full designs, full open source using only open source", "tokens": [366, 264, 881, 2689, 36655, 38, 10884, 13, 400, 767, 360, 1577, 11347, 11, 1577, 1269, 4009, 1228, 787, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.21681353412097013, "compression_ratio": 1.4922279792746114, "no_speech_prob": 0.0001153049961430952}, {"id": 238, "seek": 165344, "start": 1653.44, "end": 1660.48, "text": " tools and get them run on an FPGA. The problem there always was that kind of the programming", "tokens": [3873, 293, 483, 552, 1190, 322, 364, 36655, 12570, 13, 440, 1154, 456, 1009, 390, 300, 733, 295, 264, 9410], "temperature": 0.0, "avg_logprob": -0.12589518229166666, "compression_ratio": 1.6504424778761062, "no_speech_prob": 5.736001912737265e-05}, {"id": 239, "seek": 165344, "start": 1660.48, "end": 1665.3600000000001, "text": " instructions, the way how to kind of structure a program to put it in an FPGA wasn't known.", "tokens": [9415, 11, 264, 636, 577, 281, 733, 295, 3877, 257, 1461, 281, 829, 309, 294, 364, 36655, 12570, 2067, 380, 2570, 13], "temperature": 0.0, "avg_logprob": -0.12589518229166666, "compression_ratio": 1.6504424778761062, "no_speech_prob": 5.736001912737265e-05}, {"id": 240, "seek": 165344, "start": 1665.3600000000001, "end": 1670.48, "text": " That's what they reverse engineered and then put together kind of a various open source tools", "tokens": [663, 311, 437, 436, 9943, 38648, 293, 550, 829, 1214, 733, 295, 257, 3683, 1269, 4009, 3873], "temperature": 0.0, "avg_logprob": -0.12589518229166666, "compression_ratio": 1.6504424778761062, "no_speech_prob": 5.736001912737265e-05}, {"id": 241, "seek": 165344, "start": 1670.48, "end": 1680.24, "text": " that then allow you to actually target FPGAs. So there is FPGAs are pretty much like if you're", "tokens": [300, 550, 2089, 291, 281, 767, 3779, 36655, 38, 10884, 13, 407, 456, 307, 36655, 38, 10884, 366, 1238, 709, 411, 498, 291, 434], "temperature": 0.0, "avg_logprob": -0.12589518229166666, "compression_ratio": 1.6504424778761062, "no_speech_prob": 5.736001912737265e-05}, {"id": 242, "seek": 168024, "start": 1680.24, "end": 1689.04, "text": " trying to build a phone, but the only thing you can do is actually build that. It's like it's", "tokens": [1382, 281, 1322, 257, 2593, 11, 457, 264, 787, 551, 291, 393, 360, 307, 767, 1322, 300, 13, 467, 311, 411, 309, 311], "temperature": 0.0, "avg_logprob": -0.22116200516863568, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00013212002522777766}, {"id": 243, "seek": 168024, "start": 1689.04, "end": 1695.52, "text": " nice, it's functionality, it's kind of similar, but it's pixely, you know. It's just it's not a", "tokens": [1481, 11, 309, 311, 14980, 11, 309, 311, 733, 295, 2531, 11, 457, 309, 311, 11273, 736, 11, 291, 458, 13, 467, 311, 445, 309, 311, 406, 257], "temperature": 0.0, "avg_logprob": -0.22116200516863568, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00013212002522777766}, {"id": 244, "seek": 168024, "start": 1695.52, "end": 1705.52, "text": " right thing. And I mean I actually outsourced that work to my niece and nephew. So it's just", "tokens": [558, 551, 13, 400, 286, 914, 286, 767, 14758, 396, 1232, 300, 589, 281, 452, 39991, 293, 30799, 13, 407, 309, 311, 445], "temperature": 0.0, "avg_logprob": -0.22116200516863568, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00013212002522777766}, {"id": 245, "seek": 170552, "start": 1705.52, "end": 1710.32, "text": " well that's what we want, don't we? We want kind of open source silicon. We want a real chip.", "tokens": [731, 300, 311, 437, 321, 528, 11, 500, 380, 321, 30, 492, 528, 733, 295, 1269, 4009, 22848, 13, 492, 528, 257, 957, 11409, 13], "temperature": 0.0, "avg_logprob": -0.15767240524291992, "compression_ratio": 1.5842696629213484, "no_speech_prob": 2.909317845478654e-05}, {"id": 246, "seek": 170552, "start": 1711.12, "end": 1724.16, "text": " We want this thingy, not that. So how can we do that? We need the back end, we need the physical", "tokens": [492, 528, 341, 551, 88, 11, 406, 300, 13, 407, 577, 393, 321, 360, 300, 30, 492, 643, 264, 646, 917, 11, 321, 643, 264, 4001], "temperature": 0.0, "avg_logprob": -0.15767240524291992, "compression_ratio": 1.5842696629213484, "no_speech_prob": 2.909317845478654e-05}, {"id": 247, "seek": 170552, "start": 1724.16, "end": 1735.2, "text": " implementation. That adds a whole lot of new complexity, of course. And that's where things", "tokens": [11420, 13, 663, 10860, 257, 1379, 688, 295, 777, 14024, 11, 295, 1164, 13, 400, 300, 311, 689, 721], "temperature": 0.0, "avg_logprob": -0.15767240524291992, "compression_ratio": 1.5842696629213484, "no_speech_prob": 2.909317845478654e-05}, {"id": 248, "seek": 173520, "start": 1735.2, "end": 1741.92, "text": " become interesting. And what we want is we want to go from RTL, so that's your registered transfer", "tokens": [1813, 1880, 13, 400, 437, 321, 528, 307, 321, 528, 281, 352, 490, 21797, 43, 11, 370, 300, 311, 428, 13968, 5003], "temperature": 0.0, "avg_logprob": -0.1818123040375886, "compression_ratio": 1.6473214285714286, "no_speech_prob": 4.215267836116254e-05}, {"id": 249, "seek": 173520, "start": 1741.92, "end": 1748.72, "text": " layer, a level, layer, level, I don't know. So that's your very lock to GDS2. That's a very old", "tokens": [4583, 11, 257, 1496, 11, 4583, 11, 1496, 11, 286, 500, 380, 458, 13, 407, 300, 311, 428, 588, 4017, 281, 460, 11844, 17, 13, 663, 311, 257, 588, 1331], "temperature": 0.0, "avg_logprob": -0.1818123040375886, "compression_ratio": 1.6473214285714286, "no_speech_prob": 4.215267836116254e-05}, {"id": 250, "seek": 173520, "start": 1748.72, "end": 1753.8400000000001, "text": " data format that you then send to a company that produces your chips. So that's a fact.", "tokens": [1412, 7877, 300, 291, 550, 2845, 281, 257, 2237, 300, 14725, 428, 11583, 13, 407, 300, 311, 257, 1186, 13], "temperature": 0.0, "avg_logprob": -0.1818123040375886, "compression_ratio": 1.6473214285714286, "no_speech_prob": 4.215267836116254e-05}, {"id": 251, "seek": 173520, "start": 1755.44, "end": 1763.6000000000001, "text": " So we want a RTL to GDS2 flow. And I have an example of one here. So we start with our", "tokens": [407, 321, 528, 257, 21797, 43, 281, 460, 11844, 17, 3095, 13, 400, 286, 362, 364, 1365, 295, 472, 510, 13, 407, 321, 722, 365, 527], "temperature": 0.0, "avg_logprob": -0.1818123040375886, "compression_ratio": 1.6473214285714286, "no_speech_prob": 4.215267836116254e-05}, {"id": 252, "seek": 176360, "start": 1763.6, "end": 1770.0, "text": " very lock on the top. We do synthesis. And I'm not going to explain them all in detail here,", "tokens": [588, 4017, 322, 264, 1192, 13, 492, 360, 30252, 13, 400, 286, 478, 406, 516, 281, 2903, 552, 439, 294, 2607, 510, 11], "temperature": 0.0, "avg_logprob": -0.1316092421368855, "compression_ratio": 1.6619217081850535, "no_speech_prob": 0.0001216417585965246}, {"id": 253, "seek": 176360, "start": 1770.0, "end": 1776.1599999999999, "text": " because otherwise we're going to be here for a long time. But just to demystify some of the", "tokens": [570, 5911, 321, 434, 516, 281, 312, 510, 337, 257, 938, 565, 13, 583, 445, 281, 1371, 38593, 2505, 512, 295, 264], "temperature": 0.0, "avg_logprob": -0.1316092421368855, "compression_ratio": 1.6619217081850535, "no_speech_prob": 0.0001216417585965246}, {"id": 254, "seek": 176360, "start": 1776.1599999999999, "end": 1781.6, "text": " acronyms in here. So we do our synthesis that gives us a net list. We do a static timing analysis.", "tokens": [31713, 88, 2592, 294, 510, 13, 407, 321, 360, 527, 30252, 300, 2709, 505, 257, 2533, 1329, 13, 492, 360, 257, 13437, 10822, 5215, 13], "temperature": 0.0, "avg_logprob": -0.1316092421368855, "compression_ratio": 1.6619217081850535, "no_speech_prob": 0.0001216417585965246}, {"id": 255, "seek": 176360, "start": 1781.6, "end": 1788.08, "text": " So to see if we have put potentially too much logic after each other, so that you can't clock", "tokens": [407, 281, 536, 498, 321, 362, 829, 7263, 886, 709, 9952, 934, 1184, 661, 11, 370, 300, 291, 393, 380, 7830], "temperature": 0.0, "avg_logprob": -0.1316092421368855, "compression_ratio": 1.6619217081850535, "no_speech_prob": 0.0001216417585965246}, {"id": 256, "seek": 176360, "start": 1788.08, "end": 1791.84, "text": " it anymore, that you only can clock the two kilohertz or something like that. That's what", "tokens": [309, 3602, 11, 300, 291, 787, 393, 7830, 264, 732, 21112, 35655, 420, 746, 411, 300, 13, 663, 311, 437], "temperature": 0.0, "avg_logprob": -0.1316092421368855, "compression_ratio": 1.6619217081850535, "no_speech_prob": 0.0001216417585965246}, {"id": 257, "seek": 179184, "start": 1791.84, "end": 1798.1599999999999, "text": " the static timing analysis does in the first one. So there's DFT designed for tests. If you have", "tokens": [264, 13437, 10822, 5215, 775, 294, 264, 700, 472, 13, 407, 456, 311, 413, 25469, 4761, 337, 6921, 13, 759, 291, 362], "temperature": 0.0, "avg_logprob": -0.10212055303282656, "compression_ratio": 1.7168458781362008, "no_speech_prob": 4.871799683314748e-05}, {"id": 258, "seek": 179184, "start": 1798.1599999999999, "end": 1802.72, "text": " that chip, you're going to have a hard time looking inside it. So you want some test structures", "tokens": [300, 11409, 11, 291, 434, 516, 281, 362, 257, 1152, 565, 1237, 1854, 309, 13, 407, 291, 528, 512, 1500, 9227], "temperature": 0.0, "avg_logprob": -0.10212055303282656, "compression_ratio": 1.7168458781362008, "no_speech_prob": 4.871799683314748e-05}, {"id": 259, "seek": 179184, "start": 1802.72, "end": 1807.6, "text": " inside your chip that allow you to observe what's going on. So these are typically scan chains,", "tokens": [1854, 428, 11409, 300, 2089, 291, 281, 11441, 437, 311, 516, 322, 13, 407, 613, 366, 5850, 11049, 12626, 11], "temperature": 0.0, "avg_logprob": -0.10212055303282656, "compression_ratio": 1.7168458781362008, "no_speech_prob": 4.871799683314748e-05}, {"id": 260, "seek": 179184, "start": 1807.6, "end": 1813.28, "text": " something that JTEC was and still is used for, apart from the many other things that JTEC is", "tokens": [746, 300, 508, 51, 8140, 390, 293, 920, 307, 1143, 337, 11, 4936, 490, 264, 867, 661, 721, 300, 508, 51, 8140, 307], "temperature": 0.0, "avg_logprob": -0.10212055303282656, "compression_ratio": 1.7168458781362008, "no_speech_prob": 4.871799683314748e-05}, {"id": 261, "seek": 179184, "start": 1813.28, "end": 1819.84, "text": " being used for. But that's what DFT does. And these scans are automatically inserted normally for", "tokens": [885, 1143, 337, 13, 583, 300, 311, 437, 413, 25469, 775, 13, 400, 613, 35116, 366, 6772, 27992, 5646, 337], "temperature": 0.0, "avg_logprob": -0.10212055303282656, "compression_ratio": 1.7168458781362008, "no_speech_prob": 4.871799683314748e-05}, {"id": 262, "seek": 181984, "start": 1819.84, "end": 1829.36, "text": " all or most registers. And then you have that. You still have a very long description. And then you", "tokens": [439, 420, 881, 38351, 13, 400, 550, 291, 362, 300, 13, 509, 920, 362, 257, 588, 938, 3855, 13, 400, 550, 291], "temperature": 0.0, "avg_logprob": -0.13558752877371652, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.7839585022302344e-05}, {"id": 263, "seek": 181984, "start": 1829.36, "end": 1835.76, "text": " do floor planning, placement, clock tree synthesis optimization, and global routing. So in the end", "tokens": [360, 4123, 5038, 11, 17257, 11, 7830, 4230, 30252, 19618, 11, 293, 4338, 32722, 13, 407, 294, 264, 917], "temperature": 0.0, "avg_logprob": -0.13558752877371652, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.7839585022302344e-05}, {"id": 264, "seek": 181984, "start": 1835.76, "end": 1844.56, "text": " you get a number of transistors and that you connect them somehow and you optimize them in a way that", "tokens": [291, 483, 257, 1230, 295, 1145, 46976, 293, 300, 291, 1745, 552, 6063, 293, 291, 19719, 552, 294, 257, 636, 300], "temperature": 0.0, "avg_logprob": -0.13558752877371652, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.7839585022302344e-05}, {"id": 265, "seek": 184456, "start": 1844.56, "end": 1852.1599999999999, "text": " kind of minimizes or maximizes power or performance or area, depending on what you're looking for.", "tokens": [733, 295, 4464, 5660, 420, 5138, 5660, 1347, 420, 3389, 420, 1859, 11, 5413, 322, 437, 291, 434, 1237, 337, 13], "temperature": 0.0, "avg_logprob": -0.1168899787099738, "compression_ratio": 1.693661971830986, "no_speech_prob": 9.550590038998052e-05}, {"id": 266, "seek": 184456, "start": 1853.12, "end": 1857.36, "text": " And kind of all the things that we've skipped over so far that are now relevant in the physical", "tokens": [400, 733, 295, 439, 264, 721, 300, 321, 600, 30193, 670, 370, 1400, 300, 366, 586, 7340, 294, 264, 4001], "temperature": 0.0, "avg_logprob": -0.1168899787099738, "compression_ratio": 1.693661971830986, "no_speech_prob": 9.550590038998052e-05}, {"id": 267, "seek": 184456, "start": 1857.36, "end": 1862.72, "text": " world. For example, if you have that clock that goes to your chip, you always need to make sure,", "tokens": [1002, 13, 1171, 1365, 11, 498, 291, 362, 300, 7830, 300, 1709, 281, 428, 11409, 11, 291, 1009, 643, 281, 652, 988, 11], "temperature": 0.0, "avg_logprob": -0.1168899787099738, "compression_ratio": 1.693661971830986, "no_speech_prob": 9.550590038998052e-05}, {"id": 268, "seek": 184456, "start": 1862.72, "end": 1866.3999999999999, "text": " obviously also need to make sure that actually gets distributed across the chip. So you just", "tokens": [2745, 611, 643, 281, 652, 988, 300, 767, 2170, 12631, 2108, 264, 11409, 13, 407, 291, 445], "temperature": 0.0, "avg_logprob": -0.1168899787099738, "compression_ratio": 1.693661971830986, "no_speech_prob": 9.550590038998052e-05}, {"id": 269, "seek": 184456, "start": 1866.3999999999999, "end": 1871.28, "text": " have a single pin potentially where it comes in, but it needs to be everywhere. So you have that", "tokens": [362, 257, 2167, 5447, 7263, 689, 309, 1487, 294, 11, 457, 309, 2203, 281, 312, 5315, 13, 407, 291, 362, 300], "temperature": 0.0, "avg_logprob": -0.1168899787099738, "compression_ratio": 1.693661971830986, "no_speech_prob": 9.550590038998052e-05}, {"id": 270, "seek": 187128, "start": 1871.28, "end": 1876.48, "text": " clock tree that you need to insert somehow. Something we don't need to worry about, for example,", "tokens": [7830, 4230, 300, 291, 643, 281, 8969, 6063, 13, 6595, 321, 500, 380, 643, 281, 3292, 466, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.0940919319788615, "compression_ratio": 1.7362637362637363, "no_speech_prob": 5.8207177062286064e-05}, {"id": 271, "seek": 187128, "start": 1876.48, "end": 1881.36, "text": " or not that much worry about if you're doing an FPGA design or a simulation, because that's", "tokens": [420, 406, 300, 709, 3292, 466, 498, 291, 434, 884, 364, 36655, 12570, 1715, 420, 257, 16575, 11, 570, 300, 311], "temperature": 0.0, "avg_logprob": -0.0940919319788615, "compression_ratio": 1.7362637362637363, "no_speech_prob": 5.8207177062286064e-05}, {"id": 272, "seek": 187128, "start": 1881.36, "end": 1887.52, "text": " something FPGA vendor has already done for us. So we're able to kind of ignore many of these", "tokens": [746, 36655, 12570, 24321, 575, 1217, 1096, 337, 505, 13, 407, 321, 434, 1075, 281, 733, 295, 11200, 867, 295, 613], "temperature": 0.0, "avg_logprob": -0.0940919319788615, "compression_ratio": 1.7362637362637363, "no_speech_prob": 5.8207177062286064e-05}, {"id": 273, "seek": 187128, "start": 1887.52, "end": 1895.04, "text": " things when we're just doing kind of FPGAs before. And then since we're back in the physical world,", "tokens": [721, 562, 321, 434, 445, 884, 733, 295, 36655, 38, 10884, 949, 13, 400, 550, 1670, 321, 434, 646, 294, 264, 4001, 1002, 11], "temperature": 0.0, "avg_logprob": -0.0940919319788615, "compression_ratio": 1.7362637362637363, "no_speech_prob": 5.8207177062286064e-05}, {"id": 274, "seek": 187128, "start": 1895.04, "end": 1900.56, "text": " you need to manufacture them. We have antenna diodes that we need to insert. And after we've", "tokens": [291, 643, 281, 27400, 552, 13, 492, 362, 24573, 1026, 4789, 300, 321, 643, 281, 8969, 13, 400, 934, 321, 600], "temperature": 0.0, "avg_logprob": -0.0940919319788615, "compression_ratio": 1.7362637362637363, "no_speech_prob": 5.8207177062286064e-05}, {"id": 275, "seek": 190056, "start": 1900.56, "end": 1908.08, "text": " done that much processing, we're not quite sure what we got. So what we want to make sure is at", "tokens": [1096, 300, 709, 9007, 11, 321, 434, 406, 1596, 988, 437, 321, 658, 13, 407, 437, 321, 528, 281, 652, 988, 307, 412], "temperature": 0.0, "avg_logprob": -0.10641080682927911, "compression_ratio": 1.6422413793103448, "no_speech_prob": 6.99128622727585e-06}, {"id": 276, "seek": 190056, "start": 1908.08, "end": 1913.12, "text": " this point that we actually know that still the original design is what we did. So we do a logic", "tokens": [341, 935, 300, 321, 767, 458, 300, 920, 264, 3380, 1715, 307, 437, 321, 630, 13, 407, 321, 360, 257, 9952], "temperature": 0.0, "avg_logprob": -0.10641080682927911, "compression_ratio": 1.6422413793103448, "no_speech_prob": 6.99128622727585e-06}, {"id": 277, "seek": 190056, "start": 1913.12, "end": 1922.0, "text": " equivalence check that's the LEC here. And then we do detailed routing, RC extraction, another", "tokens": [9052, 655, 1520, 300, 311, 264, 441, 8140, 510, 13, 400, 550, 321, 360, 9942, 32722, 11, 28987, 30197, 11, 1071], "temperature": 0.0, "avg_logprob": -0.10641080682927911, "compression_ratio": 1.6422413793103448, "no_speech_prob": 6.99128622727585e-06}, {"id": 278, "seek": 190056, "start": 1922.0, "end": 1927.6799999999998, "text": " timing analysis. And finally, we're at GDS2 streaming. So that's when we do the file writing.", "tokens": [10822, 5215, 13, 400, 2721, 11, 321, 434, 412, 460, 11844, 17, 11791, 13, 407, 300, 311, 562, 321, 360, 264, 3991, 3579, 13], "temperature": 0.0, "avg_logprob": -0.10641080682927911, "compression_ratio": 1.6422413793103448, "no_speech_prob": 6.99128622727585e-06}, {"id": 279, "seek": 192768, "start": 1927.68, "end": 1934.0800000000002, "text": " And there we got our GDS2. Easy, isn't it? So just need to kind of hook those tools up together.", "tokens": [400, 456, 321, 658, 527, 460, 11844, 17, 13, 16002, 11, 1943, 380, 309, 30, 407, 445, 643, 281, 733, 295, 6328, 729, 3873, 493, 1214, 13], "temperature": 0.0, "avg_logprob": -0.1287455093569872, "compression_ratio": 1.4292929292929293, "no_speech_prob": 4.5008819142822176e-05}, {"id": 280, "seek": 192768, "start": 1934.72, "end": 1942.16, "text": " Done. Beautiful. Why didn't we do that ages ago? I guess we were too lazy to just do that.", "tokens": [18658, 13, 14724, 13, 1545, 994, 380, 321, 360, 300, 12357, 2057, 30, 286, 2041, 321, 645, 886, 14847, 281, 445, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.1287455093569872, "compression_ratio": 1.4292929292929293, "no_speech_prob": 4.5008819142822176e-05}, {"id": 281, "seek": 192768, "start": 1943.2, "end": 1949.76, "text": " Well, the reason is a different one. I just skipped out one part of the picture. And that's one", "tokens": [1042, 11, 264, 1778, 307, 257, 819, 472, 13, 286, 445, 30193, 484, 472, 644, 295, 264, 3036, 13, 400, 300, 311, 472], "temperature": 0.0, "avg_logprob": -0.1287455093569872, "compression_ratio": 1.4292929292929293, "no_speech_prob": 4.5008819142822176e-05}, {"id": 282, "seek": 194976, "start": 1949.76, "end": 1959.2, "text": " input up here. That's the PDK, the process design kit. And this is something you get", "tokens": [4846, 493, 510, 13, 663, 311, 264, 10464, 42, 11, 264, 1399, 1715, 8260, 13, 400, 341, 307, 746, 291, 483], "temperature": 0.0, "avg_logprob": -0.10146946721262746, "compression_ratio": 1.463276836158192, "no_speech_prob": 9.68609019764699e-05}, {"id": 283, "seek": 194976, "start": 1960.48, "end": 1965.04, "text": " from a fab. And if you don't get it, you don't get it. You're not going to do any of that.", "tokens": [490, 257, 5355, 13, 400, 498, 291, 500, 380, 483, 309, 11, 291, 500, 380, 483, 309, 13, 509, 434, 406, 516, 281, 360, 604, 295, 300, 13], "temperature": 0.0, "avg_logprob": -0.10146946721262746, "compression_ratio": 1.463276836158192, "no_speech_prob": 9.68609019764699e-05}, {"id": 284, "seek": 194976, "start": 1966.32, "end": 1975.6, "text": " And I was standing here in 2016, a couple years ago. These were some of the slides,", "tokens": [400, 286, 390, 4877, 510, 294, 6549, 11, 257, 1916, 924, 2057, 13, 1981, 645, 512, 295, 264, 9788, 11], "temperature": 0.0, "avg_logprob": -0.10146946721262746, "compression_ratio": 1.463276836158192, "no_speech_prob": 9.68609019764699e-05}, {"id": 285, "seek": 197560, "start": 1975.6, "end": 1983.6799999999998, "text": " style change as well. So we have the process design kit. We are getting their standard cell", "tokens": [3758, 1319, 382, 731, 13, 407, 321, 362, 264, 1399, 1715, 8260, 13, 492, 366, 1242, 641, 3832, 2815], "temperature": 0.0, "avg_logprob": -0.13828536901581154, "compression_ratio": 1.5897435897435896, "no_speech_prob": 5.877314106328413e-05}, {"id": 286, "seek": 197560, "start": 1983.6799999999998, "end": 1990.32, "text": " libraries. We get a fair amount of design rules. Like if you have ever done kind of PCB manufacturing,", "tokens": [15148, 13, 492, 483, 257, 3143, 2372, 295, 1715, 4474, 13, 1743, 498, 291, 362, 1562, 1096, 733, 295, 42065, 11096, 11], "temperature": 0.0, "avg_logprob": -0.13828536901581154, "compression_ratio": 1.5897435897435896, "no_speech_prob": 5.877314106328413e-05}, {"id": 287, "seek": 197560, "start": 1990.32, "end": 1994.32, "text": " printed circuit boards, you also get a number of rules that you need to obey so that they can", "tokens": [13567, 9048, 13293, 11, 291, 611, 483, 257, 1230, 295, 4474, 300, 291, 643, 281, 19297, 370, 300, 436, 393], "temperature": 0.0, "avg_logprob": -0.13828536901581154, "compression_ratio": 1.5897435897435896, "no_speech_prob": 5.877314106328413e-05}, {"id": 288, "seek": 197560, "start": 1994.32, "end": 1999.76, "text": " actually manufacture it. It's typically not that long that list. And if you want to", "tokens": [767, 27400, 309, 13, 467, 311, 5850, 406, 300, 938, 300, 1329, 13, 400, 498, 291, 528, 281], "temperature": 0.0, "avg_logprob": -0.13828536901581154, "compression_ratio": 1.5897435897435896, "no_speech_prob": 5.877314106328413e-05}, {"id": 289, "seek": 199976, "start": 1999.76, "end": 2006.0, "text": " fab a chip, the list is significantly longer. Electrical parameters. So you get it from the", "tokens": [5355, 257, 11409, 11, 264, 1329, 307, 10591, 2854, 13, 12575, 15888, 9834, 13, 407, 291, 483, 309, 490, 264], "temperature": 0.0, "avg_logprob": -0.1455264863513765, "compression_ratio": 1.6304347826086956, "no_speech_prob": 4.3181717046536505e-05}, {"id": 290, "seek": 199976, "start": 2006.0, "end": 2011.12, "text": " foundry. And you need to sign an NDA for that. That's where we stopped in 2016. That's where", "tokens": [1352, 627, 13, 400, 291, 643, 281, 1465, 364, 426, 7509, 337, 300, 13, 663, 311, 689, 321, 5936, 294, 6549, 13, 663, 311, 689], "temperature": 0.0, "avg_logprob": -0.1455264863513765, "compression_ratio": 1.6304347826086956, "no_speech_prob": 4.3181717046536505e-05}, {"id": 291, "seek": 199976, "start": 2011.12, "end": 2018.48, "text": " we stopped in 2017. And that's why we said back then, you can't do it as a hobbyist. So", "tokens": [321, 5936, 294, 6591, 13, 400, 300, 311, 983, 321, 848, 646, 550, 11, 291, 393, 380, 360, 309, 382, 257, 18240, 468, 13, 407], "temperature": 0.0, "avg_logprob": -0.1455264863513765, "compression_ratio": 1.6304347826086956, "no_speech_prob": 4.3181717046536505e-05}, {"id": 292, "seek": 199976, "start": 2018.48, "end": 2024.72, "text": " just there's no way of doing that. There were some companies who did it. And low risk was one of them.", "tokens": [445, 456, 311, 572, 636, 295, 884, 300, 13, 821, 645, 512, 3431, 567, 630, 309, 13, 400, 2295, 3148, 390, 472, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.1455264863513765, "compression_ratio": 1.6304347826086956, "no_speech_prob": 4.3181717046536505e-05}, {"id": 293, "seek": 202472, "start": 2024.72, "end": 2030.4, "text": " If you are kind of big enough, they still allow you to sign that NDA. But that's where we stopped.", "tokens": [759, 291, 366, 733, 295, 955, 1547, 11, 436, 920, 2089, 291, 281, 1465, 300, 426, 7509, 13, 583, 300, 311, 689, 321, 5936, 13], "temperature": 0.0, "avg_logprob": -0.21046974658966064, "compression_ratio": 1.4010695187165776, "no_speech_prob": 9.070250962395221e-05}, {"id": 294, "seek": 202472, "start": 2031.2, "end": 2038.64, "text": " And then there was this talk. This was two years ago now. Tim Ansel, what?", "tokens": [400, 550, 456, 390, 341, 751, 13, 639, 390, 732, 924, 2057, 586, 13, 7172, 1107, 790, 11, 437, 30], "temperature": 0.0, "avg_logprob": -0.21046974658966064, "compression_ratio": 1.4010695187165776, "no_speech_prob": 9.070250962395221e-05}, {"id": 295, "seek": 202472, "start": 2039.92, "end": 2046.48, "text": " It's 2013. So 2020, I think. So that's even more. Yeah, let's say two years plus, minus.", "tokens": [467, 311, 9012, 13, 407, 4808, 11, 286, 519, 13, 407, 300, 311, 754, 544, 13, 865, 11, 718, 311, 584, 732, 924, 1804, 11, 3175, 13], "temperature": 0.0, "avg_logprob": -0.21046974658966064, "compression_ratio": 1.4010695187165776, "no_speech_prob": 9.070250962395221e-05}, {"id": 296, "seek": 204648, "start": 2046.48, "end": 2054.8, "text": " And where Tim Ansel, working at Google, was presenting the SkyWater PDK. So this is", "tokens": [400, 689, 7172, 1107, 790, 11, 1364, 412, 3329, 11, 390, 15578, 264, 9879, 54, 771, 10464, 42, 13, 407, 341, 307], "temperature": 0.0, "avg_logprob": -0.1759479339808634, "compression_ratio": 1.3789473684210527, "no_speech_prob": 0.0003165126545354724}, {"id": 297, "seek": 204648, "start": 2055.68, "end": 2060.88, "text": " for the first time ever that, well, at least in the last 20 years, let's put it this way,", "tokens": [337, 264, 700, 565, 1562, 300, 11, 731, 11, 412, 1935, 294, 264, 1036, 945, 924, 11, 718, 311, 829, 309, 341, 636, 11], "temperature": 0.0, "avg_logprob": -0.1759479339808634, "compression_ratio": 1.3789473684210527, "no_speech_prob": 0.0003165126545354724}, {"id": 298, "seek": 204648, "start": 2061.52, "end": 2069.6, "text": " a process design kit. So the rules from Foundry were open source. And they are available", "tokens": [257, 1399, 1715, 8260, 13, 407, 264, 4474, 490, 8207, 627, 645, 1269, 4009, 13, 400, 436, 366, 2435], "temperature": 0.0, "avg_logprob": -0.1759479339808634, "compression_ratio": 1.3789473684210527, "no_speech_prob": 0.0003165126545354724}, {"id": 299, "seek": 206960, "start": 2069.6, "end": 2076.48, "text": " on GitHub right there. So let's think and switch over here. Can I? No, I can't.", "tokens": [322, 23331, 558, 456, 13, 407, 718, 311, 519, 293, 3679, 670, 510, 13, 1664, 286, 30, 883, 11, 286, 393, 380, 13], "temperature": 0.0, "avg_logprob": -0.13087529324470681, "compression_ratio": 1.4827586206896552, "no_speech_prob": 0.00014068152813706547}, {"id": 300, "seek": 206960, "start": 2078.16, "end": 2082.56, "text": " Let's keep it up there. So, yes, you can download them from GitHub. So now you solve", "tokens": [961, 311, 1066, 309, 493, 456, 13, 407, 11, 2086, 11, 291, 393, 5484, 552, 490, 23331, 13, 407, 586, 291, 5039], "temperature": 0.0, "avg_logprob": -0.13087529324470681, "compression_ratio": 1.4827586206896552, "no_speech_prob": 0.00014068152813706547}, {"id": 301, "seek": 206960, "start": 2082.56, "end": 2087.92, "text": " that one problem. You actually can now manufacture a fully open source chip because you do have", "tokens": [300, 472, 1154, 13, 509, 767, 393, 586, 27400, 257, 4498, 1269, 4009, 11409, 570, 291, 360, 362], "temperature": 0.0, "avg_logprob": -0.13087529324470681, "compression_ratio": 1.4827586206896552, "no_speech_prob": 0.00014068152813706547}, {"id": 302, "seek": 206960, "start": 2087.92, "end": 2097.04, "text": " these rules. The downside here is this is a 130 nanometer PDK. If you're looking at", "tokens": [613, 4474, 13, 440, 25060, 510, 307, 341, 307, 257, 19966, 14067, 13606, 10464, 42, 13, 759, 291, 434, 1237, 412], "temperature": 0.0, "avg_logprob": -0.13087529324470681, "compression_ratio": 1.4827586206896552, "no_speech_prob": 0.00014068152813706547}, {"id": 303, "seek": 209704, "start": 2097.04, "end": 2109.36, "text": " current 3, 5 nanometer chips in your mobile phone potentially. So when was 130? 130 was this time.", "tokens": [2190, 805, 11, 1025, 14067, 13606, 11583, 294, 428, 6013, 2593, 7263, 13, 407, 562, 390, 19966, 30, 19966, 390, 341, 565, 13], "temperature": 0.0, "avg_logprob": -0.20843355420609594, "compression_ratio": 1.5157894736842106, "no_speech_prob": 3.178044062224217e-05}, {"id": 304, "seek": 209704, "start": 2111.92, "end": 2117.2799999999997, "text": " So these are Pentium 4's that were 130 nanometer roughly. So that's a net burst architecture.", "tokens": [407, 613, 366, 20165, 2197, 1017, 311, 300, 645, 19966, 14067, 13606, 9810, 13, 407, 300, 311, 257, 2533, 12712, 9482, 13], "temperature": 0.0, "avg_logprob": -0.20843355420609594, "compression_ratio": 1.5157894736842106, "no_speech_prob": 3.178044062224217e-05}, {"id": 305, "seek": 211728, "start": 2117.28, "end": 2125.2000000000003, "text": " AMD roughly at the same time. So that's around 2002 where that technology was first introduced.", "tokens": [34808, 9810, 412, 264, 912, 565, 13, 407, 300, 311, 926, 17822, 689, 300, 2899, 390, 700, 7268, 13], "temperature": 0.0, "avg_logprob": -0.14649895091115692, "compression_ratio": 1.5555555555555556, "no_speech_prob": 3.547400046954863e-05}, {"id": 306, "seek": 211728, "start": 2127.1200000000003, "end": 2136.48, "text": " Maybe you still have some of those PCs actually around. But nonetheless, these chips, well,", "tokens": [2704, 291, 920, 362, 512, 295, 729, 46913, 767, 926, 13, 583, 26756, 11, 613, 11583, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.14649895091115692, "compression_ratio": 1.5555555555555556, "no_speech_prob": 3.547400046954863e-05}, {"id": 307, "seek": 211728, "start": 2136.48, "end": 2141.2000000000003, "text": " this process is still being manufactured. Otherwise, Foundry wouldn't be able to produce", "tokens": [341, 1399, 307, 920, 885, 25738, 13, 10328, 11, 8207, 627, 2759, 380, 312, 1075, 281, 5258], "temperature": 0.0, "avg_logprob": -0.14649895091115692, "compression_ratio": 1.5555555555555556, "no_speech_prob": 3.547400046954863e-05}, {"id": 308, "seek": 214120, "start": 2141.2, "end": 2149.68, "text": " something out of that. So they still have processing lines that actually use that flow. So the other", "tokens": [746, 484, 295, 300, 13, 407, 436, 920, 362, 9007, 3876, 300, 767, 764, 300, 3095, 13, 407, 264, 661], "temperature": 0.0, "avg_logprob": -0.11428906055206949, "compression_ratio": 1.6291666666666667, "no_speech_prob": 5.0357073632767424e-05}, {"id": 309, "seek": 214120, "start": 2149.68, "end": 2156.72, "text": " thing that was happening is that Google said not only we talked at Foundry and they gave us this", "tokens": [551, 300, 390, 2737, 307, 300, 3329, 848, 406, 787, 321, 2825, 412, 8207, 627, 293, 436, 2729, 505, 341], "temperature": 0.0, "avg_logprob": -0.11428906055206949, "compression_ratio": 1.6291666666666667, "no_speech_prob": 5.0357073632767424e-05}, {"id": 310, "seek": 214120, "start": 2156.72, "end": 2165.2, "text": " PDK away, we're also funding a shuttle. So that is effectively a cost effective way to produce", "tokens": [10464, 42, 1314, 11, 321, 434, 611, 6137, 257, 26728, 13, 407, 300, 307, 8659, 257, 2063, 4942, 636, 281, 5258], "temperature": 0.0, "avg_logprob": -0.11428906055206949, "compression_ratio": 1.6291666666666667, "no_speech_prob": 5.0357073632767424e-05}, {"id": 311, "seek": 214120, "start": 2165.2, "end": 2170.0, "text": " chips together with others on a single wafer. And I said we're doing a couple of those every year.", "tokens": [11583, 1214, 365, 2357, 322, 257, 2167, 5406, 612, 13, 400, 286, 848, 321, 434, 884, 257, 1916, 295, 729, 633, 1064, 13], "temperature": 0.0, "avg_logprob": -0.11428906055206949, "compression_ratio": 1.6291666666666667, "no_speech_prob": 5.0357073632767424e-05}, {"id": 312, "seek": 217000, "start": 2170.0, "end": 2175.44, "text": " And if you submit an open source design, you get that manufactured for free, really kind of free", "tokens": [400, 498, 291, 10315, 364, 1269, 4009, 1715, 11, 291, 483, 300, 25738, 337, 1737, 11, 534, 733, 295, 1737], "temperature": 0.0, "avg_logprob": -0.104340700002817, "compression_ratio": 1.8452830188679246, "no_speech_prob": 9.420290734851733e-05}, {"id": 313, "seek": 217000, "start": 2175.44, "end": 2182.72, "text": " as in no cost at all using only open source tools. So free as in real free as well. So that for the", "tokens": [382, 294, 572, 2063, 412, 439, 1228, 787, 1269, 4009, 3873, 13, 407, 1737, 382, 294, 957, 1737, 382, 731, 13, 407, 300, 337, 264], "temperature": 0.0, "avg_logprob": -0.104340700002817, "compression_ratio": 1.8452830188679246, "no_speech_prob": 9.420290734851733e-05}, {"id": 314, "seek": 217000, "start": 2182.72, "end": 2187.76, "text": " first time made it possible for everybody who only has internet access and doesn't need any cash at", "tokens": [700, 565, 1027, 309, 1944, 337, 2201, 567, 787, 575, 4705, 2105, 293, 1177, 380, 643, 604, 6388, 412], "temperature": 0.0, "avg_logprob": -0.104340700002817, "compression_ratio": 1.8452830188679246, "no_speech_prob": 9.420290734851733e-05}, {"id": 315, "seek": 217000, "start": 2187.76, "end": 2192.96, "text": " all to get a chip manufactured. So these are obviously not volume chips. So these are kind", "tokens": [439, 281, 483, 257, 11409, 25738, 13, 407, 613, 366, 2745, 406, 5523, 11583, 13, 407, 613, 366, 733], "temperature": 0.0, "avg_logprob": -0.104340700002817, "compression_ratio": 1.8452830188679246, "no_speech_prob": 9.420290734851733e-05}, {"id": 316, "seek": 219296, "start": 2192.96, "end": 2200.56, "text": " of experimental chips for you to actually give it a try. But you can for the first time ever you can.", "tokens": [295, 17069, 11583, 337, 291, 281, 767, 976, 309, 257, 853, 13, 583, 291, 393, 337, 264, 700, 565, 1562, 291, 393, 13], "temperature": 0.0, "avg_logprob": -0.16230325574998733, "compression_ratio": 1.4679802955665024, "no_speech_prob": 4.645390799851157e-05}, {"id": 317, "seek": 219296, "start": 2200.56, "end": 2211.04, "text": " So this was a old article found that from these 130 nanometer chips, you know, kind of in a couple", "tokens": [407, 341, 390, 257, 1331, 7222, 1352, 300, 490, 613, 19966, 14067, 13606, 11583, 11, 291, 458, 11, 733, 295, 294, 257, 1916], "temperature": 0.0, "avg_logprob": -0.16230325574998733, "compression_ratio": 1.4679802955665024, "no_speech_prob": 4.645390799851157e-05}, {"id": 318, "seek": 219296, "start": 2211.04, "end": 2217.92, "text": " years they said that was in 2000, we should be able to reach 8 to 10 gigahertz on slightly better", "tokens": [924, 436, 848, 300, 390, 294, 8132, 11, 321, 820, 312, 1075, 281, 2524, 1649, 281, 1266, 8741, 64, 35655, 322, 4748, 1101], "temperature": 0.0, "avg_logprob": -0.16230325574998733, "compression_ratio": 1.4679802955665024, "no_speech_prob": 4.645390799851157e-05}, {"id": 319, "seek": 221792, "start": 2217.92, "end": 2224.0, "text": " nodes. So I think that was around 70 nanometers. So if they said that would be possible, I mean,", "tokens": [13891, 13, 407, 286, 519, 300, 390, 926, 5285, 14067, 34675, 13, 407, 498, 436, 848, 300, 576, 312, 1944, 11, 286, 914, 11], "temperature": 0.0, "avg_logprob": -0.11298323714214822, "compression_ratio": 1.5485232067510548, "no_speech_prob": 3.532956907292828e-05}, {"id": 320, "seek": 221792, "start": 2224.0, "end": 2229.52, "text": " we are only like 18 years behind that prediction now. Let's see what we in the open source actually", "tokens": [321, 366, 787, 411, 2443, 924, 2261, 300, 17630, 586, 13, 961, 311, 536, 437, 321, 294, 264, 1269, 4009, 767], "temperature": 0.0, "avg_logprob": -0.11298323714214822, "compression_ratio": 1.5485232067510548, "no_speech_prob": 3.532956907292828e-05}, {"id": 321, "seek": 221792, "start": 2229.52, "end": 2235.12, "text": " can do and probably not going to reach those eight gigahertz. But there's a fair amount of room", "tokens": [393, 360, 293, 1391, 406, 516, 281, 2524, 729, 3180, 8741, 64, 35655, 13, 583, 456, 311, 257, 3143, 2372, 295, 1808], "temperature": 0.0, "avg_logprob": -0.11298323714214822, "compression_ratio": 1.5485232067510548, "no_speech_prob": 3.532956907292828e-05}, {"id": 322, "seek": 221792, "start": 2235.12, "end": 2240.96, "text": " in those old process nodes still to be optimized and still to be explored.", "tokens": [294, 729, 1331, 1399, 13891, 920, 281, 312, 26941, 293, 920, 281, 312, 24016, 13], "temperature": 0.0, "avg_logprob": -0.11298323714214822, "compression_ratio": 1.5485232067510548, "no_speech_prob": 3.532956907292828e-05}, {"id": 323, "seek": 224096, "start": 2240.96, "end": 2248.96, "text": " So let's do some exploring actually. We've seen that picture before of that flow. You can get", "tokens": [407, 718, 311, 360, 512, 12736, 767, 13, 492, 600, 1612, 300, 3036, 949, 295, 300, 3095, 13, 509, 393, 483], "temperature": 0.0, "avg_logprob": -0.15676875950134905, "compression_ratio": 1.7477064220183487, "no_speech_prob": 3.3041265851352364e-05}, {"id": 324, "seek": 224096, "start": 2248.96, "end": 2256.32, "text": " that flow very easily. You do a git clone of the open lane repository. You CD into it. You run make,", "tokens": [300, 3095, 588, 3612, 13, 509, 360, 257, 18331, 26506, 295, 264, 1269, 12705, 25841, 13, 509, 6743, 666, 309, 13, 509, 1190, 652, 11], "temperature": 0.0, "avg_logprob": -0.15676875950134905, "compression_ratio": 1.7477064220183487, "no_speech_prob": 3.3041265851352364e-05}, {"id": 325, "seek": 224096, "start": 2257.28, "end": 2263.04, "text": " make test and make mount and that gives you a docker container. And that docker container", "tokens": [652, 1500, 293, 652, 3746, 293, 300, 2709, 291, 257, 360, 9178, 10129, 13, 400, 300, 360, 9178, 10129], "temperature": 0.0, "avg_logprob": -0.15676875950134905, "compression_ratio": 1.7477064220183487, "no_speech_prob": 3.3041265851352364e-05}, {"id": 326, "seek": 224096, "start": 2263.04, "end": 2269.76, "text": " is something I have open right here. So this is the open lane docker container. And since we are", "tokens": [307, 746, 286, 362, 1269, 558, 510, 13, 407, 341, 307, 264, 1269, 12705, 360, 9178, 10129, 13, 400, 1670, 321, 366], "temperature": 0.0, "avg_logprob": -0.15676875950134905, "compression_ratio": 1.7477064220183487, "no_speech_prob": 3.3041265851352364e-05}, {"id": 327, "seek": 226976, "start": 2269.76, "end": 2280.7200000000003, "text": " recently short on time, I'm not going to run it in full. So I did run the flow. So this is a", "tokens": [3938, 2099, 322, 565, 11, 286, 478, 406, 516, 281, 1190, 309, 294, 1577, 13, 407, 286, 630, 1190, 264, 3095, 13, 407, 341, 307, 257], "temperature": 0.0, "avg_logprob": -0.16840178749778054, "compression_ratio": 1.3823529411764706, "no_speech_prob": 5.0441070925444365e-05}, {"id": 328, "seek": 226976, "start": 2280.7200000000003, "end": 2289.1200000000003, "text": " trivial design. So that's a SPM, a serial parallel multiplier. So this is a very small piece of", "tokens": [26703, 1715, 13, 407, 300, 311, 257, 8420, 44, 11, 257, 17436, 8952, 44106, 13, 407, 341, 307, 257, 588, 1359, 2522, 295], "temperature": 0.0, "avg_logprob": -0.16840178749778054, "compression_ratio": 1.3823529411764706, "no_speech_prob": 5.0441070925444365e-05}, {"id": 329, "seek": 228912, "start": 2289.12, "end": 2299.92, "text": " very low code that we will then turn into a chip design. It's part of the standard demo,", "tokens": [588, 2295, 3089, 300, 321, 486, 550, 1261, 666, 257, 11409, 1715, 13, 467, 311, 644, 295, 264, 3832, 10723, 11], "temperature": 0.0, "avg_logprob": -0.218228496722321, "compression_ratio": 1.4821428571428572, "no_speech_prob": 3.464943074504845e-05}, {"id": 330, "seek": 228912, "start": 2299.92, "end": 2305.04, "text": " so I guess you can give that a try as well. So let's have a look.", "tokens": [370, 286, 2041, 291, 393, 976, 300, 257, 853, 382, 731, 13, 407, 718, 311, 362, 257, 574, 13], "temperature": 0.0, "avg_logprob": -0.218228496722321, "compression_ratio": 1.4821428571428572, "no_speech_prob": 3.464943074504845e-05}, {"id": 331, "seek": 228912, "start": 2310.24, "end": 2316.24, "text": " The flow, the processor runs through in a minute or after two minutes for that trivial design.", "tokens": [440, 3095, 11, 264, 15321, 6676, 807, 294, 257, 3456, 420, 934, 732, 2077, 337, 300, 26703, 1715, 13], "temperature": 0.0, "avg_logprob": -0.218228496722321, "compression_ratio": 1.4821428571428572, "no_speech_prob": 3.464943074504845e-05}, {"id": 332, "seek": 231624, "start": 2316.24, "end": 2324.3999999999996, "text": " For a larger design, it takes an hour for an AES core and a full SOC taking a couple", "tokens": [1171, 257, 4833, 1715, 11, 309, 2516, 364, 1773, 337, 364, 316, 2358, 4965, 293, 257, 1577, 10621, 34, 1940, 257, 1916], "temperature": 0.0, "avg_logprob": -0.19199219942092896, "compression_ratio": 1.3743589743589744, "no_speech_prob": 3.088490120717324e-05}, {"id": 333, "seek": 231624, "start": 2325.4399999999996, "end": 2329.8399999999997, "text": " 10, 20 hours depending on how you're doing. It's still not the end of the world.", "tokens": [1266, 11, 945, 2496, 5413, 322, 577, 291, 434, 884, 13, 467, 311, 920, 406, 264, 917, 295, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.19199219942092896, "compression_ratio": 1.3743589743589744, "no_speech_prob": 3.088490120717324e-05}, {"id": 334, "seek": 231624, "start": 2332.0, "end": 2334.3999999999996, "text": " So that was a boring summary, isn't it?", "tokens": [407, 300, 390, 257, 9989, 12691, 11, 1943, 380, 309, 30], "temperature": 0.0, "avg_logprob": -0.19199219942092896, "compression_ratio": 1.3743589743589744, "no_speech_prob": 3.088490120717324e-05}, {"id": 335, "seek": 231624, "start": 2338.7999999999997, "end": 2342.7999999999997, "text": " Let's have a look at the output right away. So it comes with a", "tokens": [961, 311, 362, 257, 574, 412, 264, 5598, 558, 1314, 13, 407, 309, 1487, 365, 257], "temperature": 0.0, "avg_logprob": -0.19199219942092896, "compression_ratio": 1.3743589743589744, "no_speech_prob": 3.088490120717324e-05}, {"id": 336, "seek": 234280, "start": 2342.8, "end": 2357.28, "text": " GDS view. So GDS is the output format, as we said. And just starting from that very log", "tokens": [460, 11844, 1910, 13, 407, 460, 11844, 307, 264, 5598, 7877, 11, 382, 321, 848, 13, 400, 445, 2891, 490, 300, 588, 3565], "temperature": 0.0, "avg_logprob": -0.1708523904955065, "compression_ratio": 1.508108108108108, "no_speech_prob": 4.48183564003557e-05}, {"id": 337, "seek": 234280, "start": 2357.28, "end": 2364.8, "text": " and using only open source components, you get the full GDS. And that is confusing because", "tokens": [293, 1228, 787, 1269, 4009, 6677, 11, 291, 483, 264, 1577, 460, 11844, 13, 400, 300, 307, 13181, 570], "temperature": 0.0, "avg_logprob": -0.1708523904955065, "compression_ratio": 1.508108108108108, "no_speech_prob": 4.48183564003557e-05}, {"id": 338, "seek": 234280, "start": 2364.8, "end": 2371.44, "text": " physics are confusing. So let's see if we can get rid of some things here or just have a look at the", "tokens": [10649, 366, 13181, 13, 407, 718, 311, 536, 498, 321, 393, 483, 3973, 295, 512, 721, 510, 420, 445, 362, 257, 574, 412, 264], "temperature": 0.0, "avg_logprob": -0.1708523904955065, "compression_ratio": 1.508108108108108, "no_speech_prob": 4.48183564003557e-05}, {"id": 339, "seek": 237144, "start": 2371.44, "end": 2376.32, "text": " left side first. So we see the different cells that are being used. So the Sky Water Foundry", "tokens": [1411, 1252, 700, 13, 407, 321, 536, 264, 819, 5438, 300, 366, 885, 1143, 13, 407, 264, 9879, 8772, 8207, 627], "temperature": 0.0, "avg_logprob": -0.1396923868279708, "compression_ratio": 1.6017316017316017, "no_speech_prob": 4.4808613893110305e-05}, {"id": 340, "seek": 237144, "start": 2376.32, "end": 2383.12, "text": " provides us with a number of ands and ores and knots and other things optimized for different", "tokens": [6417, 505, 365, 257, 1230, 295, 293, 82, 293, 277, 495, 293, 27426, 293, 661, 721, 26941, 337, 819], "temperature": 0.0, "avg_logprob": -0.1396923868279708, "compression_ratio": 1.6017316017316017, "no_speech_prob": 4.4808613893110305e-05}, {"id": 341, "seek": 237144, "start": 2383.12, "end": 2390.32, "text": " process callers. And they get chosen and then inserted into that design. So let's get rid of", "tokens": [1399, 818, 433, 13, 400, 436, 483, 8614, 293, 550, 27992, 666, 300, 1715, 13, 407, 718, 311, 483, 3973, 295], "temperature": 0.0, "avg_logprob": -0.1396923868279708, "compression_ratio": 1.6017316017316017, "no_speech_prob": 4.4808613893110305e-05}, {"id": 342, "seek": 237144, "start": 2390.32, "end": 2395.92, "text": " a bit of the stuff that we actually need for physics. So decaps, who needs those, fillers,", "tokens": [257, 857, 295, 264, 1507, 300, 321, 767, 643, 337, 10649, 13, 407, 368, 496, 1878, 11, 567, 2203, 729, 11, 2836, 433, 11], "temperature": 0.0, "avg_logprob": -0.1396923868279708, "compression_ratio": 1.6017316017316017, "no_speech_prob": 4.4808613893110305e-05}, {"id": 343, "seek": 239592, "start": 2395.92, "end": 2402.56, "text": " nobody is there either. So that already gives us a slightly better picture. Maybe we can get rid", "tokens": [5079, 307, 456, 2139, 13, 407, 300, 1217, 2709, 505, 257, 4748, 1101, 3036, 13, 2704, 321, 393, 483, 3973], "temperature": 0.0, "avg_logprob": -0.11928615017213683, "compression_ratio": 1.5240641711229947, "no_speech_prob": 1.563115256431047e-05}, {"id": 344, "seek": 239592, "start": 2402.56, "end": 2411.36, "text": " of some of those metal layers, the connectivity. I mean, who needs that? And we see we can get", "tokens": [295, 512, 295, 729, 5760, 7914, 11, 264, 21095, 13, 286, 914, 11, 567, 2203, 300, 30, 400, 321, 536, 321, 393, 483], "temperature": 0.0, "avg_logprob": -0.11928615017213683, "compression_ratio": 1.5240641711229947, "no_speech_prob": 1.563115256431047e-05}, {"id": 345, "seek": 239592, "start": 2411.36, "end": 2425.04, "text": " closer to the actual interesting parts. So that is effectively your file that you sent to the", "tokens": [4966, 281, 264, 3539, 1880, 3166, 13, 407, 300, 307, 8659, 428, 3991, 300, 291, 2279, 281, 264], "temperature": 0.0, "avg_logprob": -0.11928615017213683, "compression_ratio": 1.5240641711229947, "no_speech_prob": 1.563115256431047e-05}, {"id": 346, "seek": 242504, "start": 2425.04, "end": 2430.8, "text": " Foundry. And you can do that as set free of cost using the shuttle program. Or if you don't want", "tokens": [8207, 627, 13, 400, 291, 393, 360, 300, 382, 992, 1737, 295, 2063, 1228, 264, 26728, 1461, 13, 1610, 498, 291, 500, 380, 528], "temperature": 0.0, "avg_logprob": -0.18131600537346404, "compression_ratio": 1.6336206896551724, "no_speech_prob": 8.434381743427366e-05}, {"id": 347, "seek": 242504, "start": 2430.8, "end": 2439.92, "text": " to use that, you can also pay a company called eFabulous to then fab that for you. As I said,", "tokens": [281, 764, 300, 11, 291, 393, 611, 1689, 257, 2237, 1219, 308, 37, 455, 6893, 281, 550, 5355, 300, 337, 291, 13, 1018, 286, 848, 11], "temperature": 0.0, "avg_logprob": -0.18131600537346404, "compression_ratio": 1.6336206896551724, "no_speech_prob": 8.434381743427366e-05}, {"id": 348, "seek": 242504, "start": 2439.92, "end": 2447.04, "text": " using only the open source tools. Since we are really short on time, here are the things that", "tokens": [1228, 787, 264, 1269, 4009, 3873, 13, 4162, 321, 366, 534, 2099, 322, 565, 11, 510, 366, 264, 721, 300], "temperature": 0.0, "avg_logprob": -0.18131600537346404, "compression_ratio": 1.6336206896551724, "no_speech_prob": 8.434381743427366e-05}, {"id": 349, "seek": 242504, "start": 2447.04, "end": 2453.04, "text": " you can have a look and play with. You're also, if you don't want to install anything locally,", "tokens": [291, 393, 362, 257, 574, 293, 862, 365, 13, 509, 434, 611, 11, 498, 291, 500, 380, 528, 281, 3625, 1340, 16143, 11], "temperature": 0.0, "avg_logprob": -0.18131600537346404, "compression_ratio": 1.6336206896551724, "no_speech_prob": 8.434381743427366e-05}, {"id": 350, "seek": 245304, "start": 2453.04, "end": 2459.68, "text": " you can have a look at that link that gives you a Jupyter notebook, an online way to just", "tokens": [291, 393, 362, 257, 574, 412, 300, 2113, 300, 2709, 291, 257, 22125, 88, 391, 21060, 11, 364, 2950, 636, 281, 445], "temperature": 0.0, "avg_logprob": -0.24639226876053155, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.00011286859808024019}, {"id": 351, "seek": 245304, "start": 2459.68, "end": 2466.08, "text": " actually play around. And just in your browser, write some VHDL or Verilog, actually in that case,", "tokens": [767, 862, 926, 13, 400, 445, 294, 428, 11185, 11, 2464, 512, 691, 22859, 43, 420, 4281, 388, 664, 11, 767, 294, 300, 1389, 11], "temperature": 0.0, "avg_logprob": -0.24639226876053155, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.00011286859808024019}, {"id": 352, "seek": 245304, "start": 2466.08, "end": 2472.56, "text": " and synthesizes and have a look at the GDS2 in the end. Only in your browser, nothing else needed.", "tokens": [293, 26617, 5660, 293, 362, 257, 574, 412, 264, 460, 11844, 17, 294, 264, 917, 13, 5686, 294, 428, 11185, 11, 1825, 1646, 2978, 13], "temperature": 0.0, "avg_logprob": -0.24639226876053155, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.00011286859808024019}, {"id": 353, "seek": 245304, "start": 2475.68, "end": 2480.32, "text": " There is a project called Tiny Tapeout, where you can get a very, very small chip", "tokens": [821, 307, 257, 1716, 1219, 39992, 6551, 494, 346, 11, 689, 291, 393, 483, 257, 588, 11, 588, 1359, 11409], "temperature": 0.0, "avg_logprob": -0.24639226876053155, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.00011286859808024019}, {"id": 354, "seek": 248032, "start": 2480.32, "end": 2486.6400000000003, "text": " manufactured and learn how to do it. And they have a very, very nice GitHub action set up.", "tokens": [25738, 293, 1466, 577, 281, 360, 309, 13, 400, 436, 362, 257, 588, 11, 588, 1481, 23331, 3069, 992, 493, 13], "temperature": 0.0, "avg_logprob": -0.17550041198730468, "compression_ratio": 1.441988950276243, "no_speech_prob": 8.352035365533084e-05}, {"id": 355, "seek": 248032, "start": 2487.28, "end": 2492.0800000000004, "text": " And I need to show that because it's just fantastic. So apart from kind of you have your", "tokens": [400, 286, 643, 281, 855, 300, 570, 309, 311, 445, 5456, 13, 407, 4936, 490, 733, 295, 291, 362, 428], "temperature": 0.0, "avg_logprob": -0.17550041198730468, "compression_ratio": 1.441988950276243, "no_speech_prob": 8.352035365533084e-05}, {"id": 356, "seek": 248032, "start": 2493.6800000000003, "end": 2504.0800000000004, "text": " Verilog and then in the end, your GDS, you also get a built-in 3D GDS viewer that", "tokens": [4281, 388, 664, 293, 550, 294, 264, 917, 11, 428, 460, 11844, 11, 291, 611, 483, 257, 3094, 12, 259, 805, 35, 460, 11844, 16767, 300], "temperature": 0.0, "avg_logprob": -0.17550041198730468, "compression_ratio": 1.441988950276243, "no_speech_prob": 8.352035365533084e-05}, {"id": 357, "seek": 250408, "start": 2504.08, "end": 2512.24, "text": " allows you to zoom through your design and see the metal layers, see everything in there.", "tokens": [4045, 291, 281, 8863, 807, 428, 1715, 293, 536, 264, 5760, 7914, 11, 536, 1203, 294, 456, 13], "temperature": 0.0, "avg_logprob": -0.15099761360570005, "compression_ratio": 1.6330275229357798, "no_speech_prob": 5.8771245676325634e-05}, {"id": 358, "seek": 250408, "start": 2512.88, "end": 2518.0, "text": " And let's get rid of some of the, oops, there was a wrong button. Oh, how can I help you?", "tokens": [400, 718, 311, 483, 3973, 295, 512, 295, 264, 11, 34166, 11, 456, 390, 257, 2085, 2960, 13, 876, 11, 577, 393, 286, 854, 291, 30], "temperature": 0.0, "avg_logprob": -0.15099761360570005, "compression_ratio": 1.6330275229357798, "no_speech_prob": 5.8771245676325634e-05}, {"id": 359, "seek": 250408, "start": 2519.6, "end": 2526.24, "text": " Some of the layers, so that was remove the fields and the decaps, and then remove the", "tokens": [2188, 295, 264, 7914, 11, 370, 300, 390, 4159, 264, 7909, 293, 264, 368, 496, 1878, 11, 293, 550, 4159, 264], "temperature": 0.0, "avg_logprob": -0.15099761360570005, "compression_ratio": 1.6330275229357798, "no_speech_prob": 5.8771245676325634e-05}, {"id": 360, "seek": 250408, "start": 2526.24, "end": 2531.44, "text": " cell geometry as well. So that's your standard cells now. And we can actually look at them", "tokens": [2815, 18426, 382, 731, 13, 407, 300, 311, 428, 3832, 5438, 586, 13, 400, 321, 393, 767, 574, 412, 552], "temperature": 0.0, "avg_logprob": -0.15099761360570005, "compression_ratio": 1.6330275229357798, "no_speech_prob": 5.8771245676325634e-05}, {"id": 361, "seek": 253144, "start": 2531.44, "end": 2536.7200000000003, "text": " and see what they are and also look at the different layers. So that's really cool. And that", "tokens": [293, 536, 437, 436, 366, 293, 611, 574, 412, 264, 819, 7914, 13, 407, 300, 311, 534, 1627, 13, 400, 300], "temperature": 0.0, "avg_logprob": -0.1547346923310878, "compression_ratio": 1.7527675276752768, "no_speech_prob": 7.325816113734618e-05}, {"id": 362, "seek": 253144, "start": 2536.7200000000003, "end": 2541.84, "text": " shows if you have now all the open source tools, you can do all that. You can do that in a GitHub", "tokens": [3110, 498, 291, 362, 586, 439, 264, 1269, 4009, 3873, 11, 291, 393, 360, 439, 300, 13, 509, 393, 360, 300, 294, 257, 23331], "temperature": 0.0, "avg_logprob": -0.1547346923310878, "compression_ratio": 1.7527675276752768, "no_speech_prob": 7.325816113734618e-05}, {"id": 363, "seek": 253144, "start": 2541.84, "end": 2547.84, "text": " action where before when you actually had licenses and license servers and all that crap that comes", "tokens": [3069, 689, 949, 562, 291, 767, 632, 32821, 293, 10476, 15909, 293, 439, 300, 12426, 300, 1487], "temperature": 0.0, "avg_logprob": -0.1547346923310878, "compression_ratio": 1.7527675276752768, "no_speech_prob": 7.325816113734618e-05}, {"id": 364, "seek": 253144, "start": 2547.84, "end": 2552.96, "text": " with software that you need to buy for a lot of money, it's not just expensive, it's also", "tokens": [365, 4722, 300, 291, 643, 281, 2256, 337, 257, 688, 295, 1460, 11, 309, 311, 406, 445, 5124, 11, 309, 311, 611], "temperature": 0.0, "avg_logprob": -0.1547346923310878, "compression_ratio": 1.7527675276752768, "no_speech_prob": 7.325816113734618e-05}, {"id": 365, "seek": 253144, "start": 2552.96, "end": 2558.88, "text": " a pain to use, and stuff like that wouldn't just be possible. So open source is here with that", "tokens": [257, 1822, 281, 764, 11, 293, 1507, 411, 300, 2759, 380, 445, 312, 1944, 13, 407, 1269, 4009, 307, 510, 365, 300], "temperature": 0.0, "avg_logprob": -0.1547346923310878, "compression_ratio": 1.7527675276752768, "no_speech_prob": 7.325816113734618e-05}, {"id": 366, "seek": 255888, "start": 2558.88, "end": 2568.96, "text": " stuff, and it's staying, I'm telling you. So we got that one. And again, the link is there.", "tokens": [1507, 11, 293, 309, 311, 7939, 11, 286, 478, 3585, 291, 13, 407, 321, 658, 300, 472, 13, 400, 797, 11, 264, 2113, 307, 456, 13], "temperature": 0.0, "avg_logprob": -0.23603882727684913, "compression_ratio": 1.558139534883721, "no_speech_prob": 7.326558989007026e-05}, {"id": 367, "seek": 255888, "start": 2569.52, "end": 2576.6400000000003, "text": " So let's have a look at who's actually doing that. So I had a look at some GitHub stats.", "tokens": [407, 718, 311, 362, 257, 574, 412, 567, 311, 767, 884, 300, 13, 407, 286, 632, 257, 574, 412, 512, 23331, 18152, 13], "temperature": 0.0, "avg_logprob": -0.23603882727684913, "compression_ratio": 1.558139534883721, "no_speech_prob": 7.326558989007026e-05}, {"id": 368, "seek": 255888, "start": 2577.76, "end": 2583.76, "text": " So yours is the synthesis tool and actually quite old tool. So that's 10 people. Again,", "tokens": [407, 6342, 307, 264, 30252, 2290, 293, 767, 1596, 1331, 2290, 13, 407, 300, 311, 1266, 561, 13, 3764, 11], "temperature": 0.0, "avg_logprob": -0.23603882727684913, "compression_ratio": 1.558139534883721, "no_speech_prob": 7.326558989007026e-05}, {"id": 369, "seek": 258376, "start": 2583.76, "end": 2590.1600000000003, "text": " it's a random month. It's at last month roughly. So 10 people working there. So that's a healthy", "tokens": [309, 311, 257, 4974, 1618, 13, 467, 311, 412, 1036, 1618, 9810, 13, 407, 1266, 561, 1364, 456, 13, 407, 300, 311, 257, 4627], "temperature": 0.0, "avg_logprob": -0.15065744478408605, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.406044561415911e-05}, {"id": 370, "seek": 258376, "start": 2590.1600000000003, "end": 2597.28, "text": " community of people adding things. It's not a huge community. And this is a thing we'll see", "tokens": [1768, 295, 561, 5127, 721, 13, 467, 311, 406, 257, 2603, 1768, 13, 400, 341, 307, 257, 551, 321, 603, 536], "temperature": 0.0, "avg_logprob": -0.15065744478408605, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.406044561415911e-05}, {"id": 371, "seek": 258376, "start": 2597.28, "end": 2605.84, "text": " repeating. Very late at the simulation tool, 20 people in the last month pushing and doing stuff.", "tokens": [18617, 13, 4372, 3469, 412, 264, 16575, 2290, 11, 945, 561, 294, 264, 1036, 1618, 7380, 293, 884, 1507, 13], "temperature": 0.0, "avg_logprob": -0.15065744478408605, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.406044561415911e-05}, {"id": 372, "seek": 260584, "start": 2605.84, "end": 2615.1200000000003, "text": " CocoaDB, not that many people, but still. The SkyWater PDK, that's the manual, effectively,", "tokens": [29787, 64, 27735, 11, 406, 300, 867, 561, 11, 457, 920, 13, 440, 9879, 54, 771, 10464, 42, 11, 300, 311, 264, 9688, 11, 8659, 11], "temperature": 0.0, "avg_logprob": -0.19082067693982804, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.00010500550706638023}, {"id": 373, "seek": 260584, "start": 2615.1200000000003, "end": 2620.96, "text": " of your PDK. And that doesn't see that many changes. And I think that's one of the areas where", "tokens": [295, 428, 10464, 42, 13, 400, 300, 1177, 380, 536, 300, 867, 2962, 13, 400, 286, 519, 300, 311, 472, 295, 264, 3179, 689], "temperature": 0.0, "avg_logprob": -0.19082067693982804, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.00010500550706638023}, {"id": 374, "seek": 260584, "start": 2621.6000000000004, "end": 2624.88, "text": " more people could get involved. And actually, where we have as a community,", "tokens": [544, 561, 727, 483, 3288, 13, 400, 767, 11, 689, 321, 362, 382, 257, 1768, 11], "temperature": 0.0, "avg_logprob": -0.19082067693982804, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.00010500550706638023}, {"id": 375, "seek": 260584, "start": 2624.88, "end": 2630.7200000000003, "text": " more to figure out because that description that PDK is not complete and not error free,", "tokens": [544, 281, 2573, 484, 570, 300, 3855, 300, 10464, 42, 307, 406, 3566, 293, 406, 6713, 1737, 11], "temperature": 0.0, "avg_logprob": -0.19082067693982804, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.00010500550706638023}, {"id": 376, "seek": 260584, "start": 2630.7200000000003, "end": 2633.28, "text": " like in any document that you write, there are probably going to be errors.", "tokens": [411, 294, 604, 4166, 300, 291, 2464, 11, 456, 366, 1391, 516, 281, 312, 13603, 13], "temperature": 0.0, "avg_logprob": -0.19082067693982804, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.00010500550706638023}, {"id": 377, "seek": 263328, "start": 2633.28, "end": 2640.7200000000003, "text": " So we're still looking for more ways how to get people involved and fix those kind of even small", "tokens": [407, 321, 434, 920, 1237, 337, 544, 2098, 577, 281, 483, 561, 3288, 293, 3191, 729, 733, 295, 754, 1359], "temperature": 0.0, "avg_logprob": -0.21943656257961108, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00017877358186524361}, {"id": 378, "seek": 263328, "start": 2640.7200000000003, "end": 2648.32, "text": " errors. So open lane, we've seen that flow, reasonably active as well. We've come open", "tokens": [13603, 13, 407, 1269, 12705, 11, 321, 600, 1612, 300, 3095, 11, 23551, 4967, 382, 731, 13, 492, 600, 808, 1269], "temperature": 0.0, "avg_logprob": -0.21943656257961108, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00017877358186524361}, {"id": 379, "seek": 263328, "start": 2648.32, "end": 2654.8, "text": " road, which is within open lane, they always make it sound similar. But open road is kind of the", "tokens": [3060, 11, 597, 307, 1951, 1269, 12705, 11, 436, 1009, 652, 309, 1626, 2531, 13, 583, 1269, 3060, 307, 733, 295, 264], "temperature": 0.0, "avg_logprob": -0.21943656257961108, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00017877358186524361}, {"id": 380, "seek": 263328, "start": 2654.8, "end": 2662.5600000000004, "text": " majority of those physical design tools and bundling them together. What open road has an idea,", "tokens": [6286, 295, 729, 4001, 1715, 3873, 293, 13882, 1688, 552, 1214, 13, 708, 1269, 3060, 575, 364, 1558, 11], "temperature": 0.0, "avg_logprob": -0.21943656257961108, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00017877358186524361}, {"id": 381, "seek": 266256, "start": 2662.56, "end": 2671.36, "text": " it was funded by DARPA. And the idea is to be able to go from an RTL to a GDS 2 and 24 hours", "tokens": [309, 390, 14385, 538, 49274, 10297, 13, 400, 264, 1558, 307, 281, 312, 1075, 281, 352, 490, 364, 21797, 43, 281, 257, 460, 11844, 568, 293, 4022, 2496], "temperature": 0.0, "avg_logprob": -0.10888217707149318, "compression_ratio": 1.6468531468531469, "no_speech_prob": 9.055736154550686e-05}, {"id": 382, "seek": 266256, "start": 2671.36, "end": 2676.24, "text": " with no human in the loop, which is something very different from the normal hardware world,", "tokens": [365, 572, 1952, 294, 264, 6367, 11, 597, 307, 746, 588, 819, 490, 264, 2710, 8837, 1002, 11], "temperature": 0.0, "avg_logprob": -0.10888217707149318, "compression_ratio": 1.6468531468531469, "no_speech_prob": 9.055736154550686e-05}, {"id": 383, "seek": 266256, "start": 2676.24, "end": 2680.96, "text": " where you always have tools that are... Well, you can put it in two ways. You can say the", "tokens": [689, 291, 1009, 362, 3873, 300, 366, 485, 1042, 11, 291, 393, 829, 309, 294, 732, 2098, 13, 509, 393, 584, 264], "temperature": 0.0, "avg_logprob": -0.10888217707149318, "compression_ratio": 1.6468531468531469, "no_speech_prob": 9.055736154550686e-05}, {"id": 384, "seek": 266256, "start": 2680.96, "end": 2685.7599999999998, "text": " tools are too crappy, so you need to go manually in and fix some stuff in the way. Or you say the", "tokens": [3873, 366, 886, 36531, 11, 370, 291, 643, 281, 352, 16945, 294, 293, 3191, 512, 1507, 294, 264, 636, 13, 1610, 291, 584, 264], "temperature": 0.0, "avg_logprob": -0.10888217707149318, "compression_ratio": 1.6468531468531469, "no_speech_prob": 9.055736154550686e-05}, {"id": 385, "seek": 266256, "start": 2685.7599999999998, "end": 2690.48, "text": " tools are good enough and you just need that human to actually give it that special touch because", "tokens": [3873, 366, 665, 1547, 293, 291, 445, 643, 300, 1952, 281, 767, 976, 309, 300, 2121, 2557, 570], "temperature": 0.0, "avg_logprob": -0.10888217707149318, "compression_ratio": 1.6468531468531469, "no_speech_prob": 9.055736154550686e-05}, {"id": 386, "seek": 269048, "start": 2690.48, "end": 2697.84, "text": " hardware is just so difficult. It feels like at times when you set up compiler, isn't exactly", "tokens": [8837, 307, 445, 370, 2252, 13, 467, 3417, 411, 412, 1413, 562, 291, 992, 493, 31958, 11, 1943, 380, 2293], "temperature": 0.0, "avg_logprob": -0.17612478007440982, "compression_ratio": 1.6594827586206897, "no_speech_prob": 8.652588439872488e-05}, {"id": 387, "seek": 269048, "start": 2697.84, "end": 2703.6, "text": " good enough to actually really compile my software. So at times I just go in and just do a bit of", "tokens": [665, 1547, 281, 767, 534, 31413, 452, 4722, 13, 407, 412, 1413, 286, 445, 352, 294, 293, 445, 360, 257, 857, 295], "temperature": 0.0, "avg_logprob": -0.17612478007440982, "compression_ratio": 1.6594827586206897, "no_speech_prob": 8.652588439872488e-05}, {"id": 388, "seek": 269048, "start": 2703.6, "end": 2709.84, "text": " hand assembly editing because there's corners around memory access. So they just need a bit of", "tokens": [1011, 12103, 10000, 570, 456, 311, 12413, 926, 4675, 2105, 13, 407, 436, 445, 643, 257, 857, 295], "temperature": 0.0, "avg_logprob": -0.17612478007440982, "compression_ratio": 1.6594827586206897, "no_speech_prob": 8.652588439872488e-05}, {"id": 389, "seek": 269048, "start": 2709.84, "end": 2714.2400000000002, "text": " manual work. So that's how hardware design works. And that's what they want to change is just make", "tokens": [9688, 589, 13, 407, 300, 311, 577, 8837, 1715, 1985, 13, 400, 300, 311, 437, 436, 528, 281, 1319, 307, 445, 652], "temperature": 0.0, "avg_logprob": -0.17612478007440982, "compression_ratio": 1.6594827586206897, "no_speech_prob": 8.652588439872488e-05}, {"id": 390, "seek": 271424, "start": 2714.24, "end": 2722.4799999999996, "text": " it completely automated. Just for comparison, this is how things on a Linux kernel would look.", "tokens": [309, 2584, 18473, 13, 1449, 337, 9660, 11, 341, 307, 577, 721, 322, 257, 18734, 28256, 576, 574, 13], "temperature": 0.0, "avg_logprob": -0.1267013078854408, "compression_ratio": 1.6711711711711712, "no_speech_prob": 3.360819391673431e-05}, {"id": 391, "seek": 271424, "start": 2723.8399999999997, "end": 2730.0, "text": " So the hardware community is significantly smaller than the software community. And that's", "tokens": [407, 264, 8837, 1768, 307, 10591, 4356, 813, 264, 4722, 1768, 13, 400, 300, 311], "temperature": 0.0, "avg_logprob": -0.1267013078854408, "compression_ratio": 1.6711711711711712, "no_speech_prob": 3.360819391673431e-05}, {"id": 392, "seek": 271424, "start": 2730.0, "end": 2737.68, "text": " why Ruby, for example, is funding some of these things, is finding hardware engineers is quite", "tokens": [983, 19907, 11, 337, 1365, 11, 307, 6137, 512, 295, 613, 721, 11, 307, 5006, 8837, 11955, 307, 1596], "temperature": 0.0, "avg_logprob": -0.1267013078854408, "compression_ratio": 1.6711711711711712, "no_speech_prob": 3.360819391673431e-05}, {"id": 393, "seek": 271424, "start": 2737.68, "end": 2742.0, "text": " tricky. And there is just tons of software engineers and tons of good ideas that have been", "tokens": [12414, 13, 400, 456, 307, 445, 9131, 295, 4722, 11955, 293, 9131, 295, 665, 3487, 300, 362, 668], "temperature": 0.0, "avg_logprob": -0.1267013078854408, "compression_ratio": 1.6711711711711712, "no_speech_prob": 3.360819391673431e-05}, {"id": 394, "seek": 274200, "start": 2742.0, "end": 2747.12, "text": " explored and tried in the software world. So we want to bring that to hardware as well and make", "tokens": [24016, 293, 3031, 294, 264, 4722, 1002, 13, 407, 321, 528, 281, 1565, 300, 281, 8837, 382, 731, 293, 652], "temperature": 0.0, "avg_logprob": -0.13058336488493197, "compression_ratio": 1.5925925925925926, "no_speech_prob": 8.027054718695581e-05}, {"id": 395, "seek": 274200, "start": 2747.12, "end": 2754.8, "text": " it accessible there. We'll look at it very later. And we also see more and more chip designs being", "tokens": [309, 9515, 456, 13, 492, 603, 574, 412, 309, 588, 1780, 13, 400, 321, 611, 536, 544, 293, 544, 11409, 11347, 885], "temperature": 0.0, "avg_logprob": -0.13058336488493197, "compression_ratio": 1.5925925925925926, "no_speech_prob": 8.027054718695581e-05}, {"id": 396, "seek": 274200, "start": 2754.8, "end": 2761.04, "text": " submitted to OpenMPW. So that's the free as in cost shuttle program where you can just submit your", "tokens": [14405, 281, 7238, 12224, 54, 13, 407, 300, 311, 264, 1737, 382, 294, 2063, 26728, 1461, 689, 291, 393, 445, 10315, 428], "temperature": 0.0, "avg_logprob": -0.13058336488493197, "compression_ratio": 1.5925925925925926, "no_speech_prob": 8.027054718695581e-05}, {"id": 397, "seek": 274200, "start": 2761.04, "end": 2767.2, "text": " designs. So whenever somebody learns typically by themselves how to do a chip design and then", "tokens": [11347, 13, 407, 5699, 2618, 27152, 5850, 538, 2969, 577, 281, 360, 257, 11409, 1715, 293, 550], "temperature": 0.0, "avg_logprob": -0.13058336488493197, "compression_ratio": 1.5925925925925926, "no_speech_prob": 8.027054718695581e-05}, {"id": 398, "seek": 276720, "start": 2767.2, "end": 2773.52, "text": " submit it, it kind of shows up in that graph. So there have been eight free of those manufacturing", "tokens": [10315, 309, 11, 309, 733, 295, 3110, 493, 294, 300, 4295, 13, 407, 456, 362, 668, 3180, 1737, 295, 729, 11096], "temperature": 0.0, "avg_logprob": -0.12720722081709882, "compression_ratio": 1.5403225806451613, "no_speech_prob": 2.831491656252183e-05}, {"id": 399, "seek": 276720, "start": 2773.52, "end": 2781.9199999999996, "text": " runs now. And there is more to come. The first chips are back. So the MPW1 chips. You see this is", "tokens": [6676, 586, 13, 400, 456, 307, 544, 281, 808, 13, 440, 700, 11583, 366, 646, 13, 407, 264, 14146, 54, 16, 11583, 13, 509, 536, 341, 307], "temperature": 0.0, "avg_logprob": -0.12720722081709882, "compression_ratio": 1.5403225806451613, "no_speech_prob": 2.831491656252183e-05}, {"id": 400, "seek": 276720, "start": 2781.9199999999996, "end": 2789.2799999999997, "text": " a fair amount of lead time. It takes typically at least two and a half months roughly to get", "tokens": [257, 3143, 2372, 295, 1477, 565, 13, 467, 2516, 5850, 412, 1935, 732, 293, 257, 1922, 2493, 9810, 281, 483], "temperature": 0.0, "avg_logprob": -0.12720722081709882, "compression_ratio": 1.5403225806451613, "no_speech_prob": 2.831491656252183e-05}, {"id": 401, "seek": 276720, "start": 2789.2799999999997, "end": 2794.48, "text": " chips back from FAB. But then you want to test them and you want to actually potentially fix", "tokens": [11583, 646, 490, 479, 13868, 13, 583, 550, 291, 528, 281, 1500, 552, 293, 291, 528, 281, 767, 7263, 3191], "temperature": 0.0, "avg_logprob": -0.12720722081709882, "compression_ratio": 1.5403225806451613, "no_speech_prob": 2.831491656252183e-05}, {"id": 402, "seek": 279448, "start": 2794.48, "end": 2799.92, "text": " errors and these OpenMPW ones. Since all the tooling is new, that's still a fair amount of", "tokens": [13603, 293, 613, 7238, 12224, 54, 2306, 13, 4162, 439, 264, 46593, 307, 777, 11, 300, 311, 920, 257, 3143, 2372, 295], "temperature": 0.0, "avg_logprob": -0.11049142191486974, "compression_ratio": 1.7163120567375887, "no_speech_prob": 3.4421420423313975e-05}, {"id": 403, "seek": 279448, "start": 2799.92, "end": 2804.72, "text": " problems in them. So bringing them up is not quite trivial and they don't fully work. But that's", "tokens": [2740, 294, 552, 13, 407, 5062, 552, 493, 307, 406, 1596, 26703, 293, 436, 500, 380, 4498, 589, 13, 583, 300, 311], "temperature": 0.0, "avg_logprob": -0.11049142191486974, "compression_ratio": 1.7163120567375887, "no_speech_prob": 3.4421420423313975e-05}, {"id": 404, "seek": 279448, "start": 2804.72, "end": 2808.8, "text": " what we're learning. And that's why we kind of do that repeatedly and again and again. So we don't", "tokens": [437, 321, 434, 2539, 13, 400, 300, 311, 983, 321, 733, 295, 360, 300, 18227, 293, 797, 293, 797, 13, 407, 321, 500, 380], "temperature": 0.0, "avg_logprob": -0.11049142191486974, "compression_ratio": 1.7163120567375887, "no_speech_prob": 3.4421420423313975e-05}, {"id": 405, "seek": 279448, "start": 2808.8, "end": 2816.32, "text": " need to be fully correct the first time. We just have a couple more tries. So looking at the future,", "tokens": [643, 281, 312, 4498, 3006, 264, 700, 565, 13, 492, 445, 362, 257, 1916, 544, 9898, 13, 407, 1237, 412, 264, 2027, 11], "temperature": 0.0, "avg_logprob": -0.11049142191486974, "compression_ratio": 1.7163120567375887, "no_speech_prob": 3.4421420423313975e-05}, {"id": 406, "seek": 279448, "start": 2816.32, "end": 2821.36, "text": " always hard. We're going to see innovation. We're going to see change that nobody predicted. And", "tokens": [1009, 1152, 13, 492, 434, 516, 281, 536, 8504, 13, 492, 434, 516, 281, 536, 1319, 300, 5079, 19147, 13, 400], "temperature": 0.0, "avg_logprob": -0.11049142191486974, "compression_ratio": 1.7163120567375887, "no_speech_prob": 3.4421420423313975e-05}, {"id": 407, "seek": 282136, "start": 2821.36, "end": 2824.96, "text": " that's the good thing about making this open source. So somebody who has an idea can actually", "tokens": [300, 311, 264, 665, 551, 466, 1455, 341, 1269, 4009, 13, 407, 2618, 567, 575, 364, 1558, 393, 767], "temperature": 0.0, "avg_logprob": -0.07561360234799593, "compression_ratio": 1.6996466431095407, "no_speech_prob": 6.40014695818536e-05}, {"id": 408, "seek": 282136, "start": 2824.96, "end": 2830.96, "text": " give it a try and just see if they can do it. Pretty much before, if you wanted to do chip design,", "tokens": [976, 309, 257, 853, 293, 445, 536, 498, 436, 393, 360, 309, 13, 10693, 709, 949, 11, 498, 291, 1415, 281, 360, 11409, 1715, 11], "temperature": 0.0, "avg_logprob": -0.07561360234799593, "compression_ratio": 1.6996466431095407, "no_speech_prob": 6.40014695818536e-05}, {"id": 409, "seek": 282136, "start": 2830.96, "end": 2834.96, "text": " you had to be within a large company that did it the way they always did. So you had to do their", "tokens": [291, 632, 281, 312, 1951, 257, 2416, 2237, 300, 630, 309, 264, 636, 436, 1009, 630, 13, 407, 291, 632, 281, 360, 641], "temperature": 0.0, "avg_logprob": -0.07561360234799593, "compression_ratio": 1.6996466431095407, "no_speech_prob": 6.40014695818536e-05}, {"id": 410, "seek": 282136, "start": 2834.96, "end": 2842.0, "text": " product end of story. So there is no that much unpredictable innovation. Tools getting more", "tokens": [1674, 917, 295, 1657, 13, 407, 456, 307, 572, 300, 709, 31160, 8504, 13, 30302, 1242, 544], "temperature": 0.0, "avg_logprob": -0.07561360234799593, "compression_ratio": 1.6996466431095407, "no_speech_prob": 6.40014695818536e-05}, {"id": 411, "seek": 282136, "start": 2842.0, "end": 2848.7200000000003, "text": " accessible. We can actually get access to them. And finally, we can actually revolutionize learning", "tokens": [9515, 13, 492, 393, 767, 483, 2105, 281, 552, 13, 400, 2721, 11, 321, 393, 767, 8894, 1125, 2539], "temperature": 0.0, "avg_logprob": -0.07561360234799593, "compression_ratio": 1.6996466431095407, "no_speech_prob": 6.40014695818536e-05}, {"id": 412, "seek": 284872, "start": 2848.72, "end": 2853.4399999999996, "text": " about hardware. Before, when I was taking a university course, it was kind of very", "tokens": [466, 8837, 13, 4546, 11, 562, 286, 390, 1940, 257, 5454, 1164, 11, 309, 390, 733, 295, 588], "temperature": 0.0, "avg_logprob": -0.10072819691783977, "compression_ratio": 1.7461538461538462, "no_speech_prob": 5.008155494579114e-05}, {"id": 413, "seek": 284872, "start": 2854.24, "end": 2859.3599999999997, "text": " boring theoretical. So you had kind of course materials from 10 years ago from somebody who", "tokens": [9989, 20864, 13, 407, 291, 632, 733, 295, 1164, 5319, 490, 1266, 924, 2057, 490, 2618, 567], "temperature": 0.0, "avg_logprob": -0.10072819691783977, "compression_ratio": 1.7461538461538462, "no_speech_prob": 5.008155494579114e-05}, {"id": 414, "seek": 284872, "start": 2859.3599999999997, "end": 2863.52, "text": " has never seen a chip being made in their life because they just actually used the course", "tokens": [575, 1128, 1612, 257, 11409, 885, 1027, 294, 641, 993, 570, 436, 445, 767, 1143, 264, 1164], "temperature": 0.0, "avg_logprob": -0.10072819691783977, "compression_ratio": 1.7461538461538462, "no_speech_prob": 5.008155494579114e-05}, {"id": 415, "seek": 284872, "start": 2863.52, "end": 2868.7999999999997, "text": " material that they got 20 years ago. And that's just how teaching evolves. And that's kind of the", "tokens": [2527, 300, 436, 658, 945, 924, 2057, 13, 400, 300, 311, 445, 577, 4571, 43737, 13, 400, 300, 311, 733, 295, 264], "temperature": 0.0, "avg_logprob": -0.10072819691783977, "compression_ratio": 1.7461538461538462, "no_speech_prob": 5.008155494579114e-05}, {"id": 416, "seek": 284872, "start": 2868.7999999999997, "end": 2873.68, "text": " teaching we see in very many universities about hardware design. So they might have a VHDL,", "tokens": [4571, 321, 536, 294, 588, 867, 11779, 466, 8837, 1715, 13, 407, 436, 1062, 362, 257, 691, 22859, 43, 11], "temperature": 0.0, "avg_logprob": -0.10072819691783977, "compression_ratio": 1.7461538461538462, "no_speech_prob": 5.008155494579114e-05}, {"id": 417, "seek": 287368, "start": 2873.68, "end": 2879.3599999999997, "text": " a very low course, but it's so far from reality. It's kind of not even funny. So we can actually", "tokens": [257, 588, 2295, 1164, 11, 457, 309, 311, 370, 1400, 490, 4103, 13, 467, 311, 733, 295, 406, 754, 4074, 13, 407, 321, 393, 767], "temperature": 0.0, "avg_logprob": -0.16915404194533223, "compression_ratio": 1.6170212765957446, "no_speech_prob": 4.5480534026864916e-05}, {"id": 418, "seek": 287368, "start": 2879.3599999999997, "end": 2886.8799999999997, "text": " now learn how to do it the real way. There are some news. I'll let the links up there. And", "tokens": [586, 1466, 577, 281, 360, 309, 264, 957, 636, 13, 821, 366, 512, 2583, 13, 286, 603, 718, 264, 6123, 493, 456, 13, 400], "temperature": 0.0, "avg_logprob": -0.16915404194533223, "compression_ratio": 1.6170212765957446, "no_speech_prob": 4.5480534026864916e-05}, {"id": 419, "seek": 287368, "start": 2886.8799999999997, "end": 2891.12, "text": " finally, if you actually want to take a paid for learning course, with all those open source", "tokens": [2721, 11, 498, 291, 767, 528, 281, 747, 257, 4835, 337, 2539, 1164, 11, 365, 439, 729, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.16915404194533223, "compression_ratio": 1.6170212765957446, "no_speech_prob": 4.5480534026864916e-05}, {"id": 420, "seek": 287368, "start": 2891.12, "end": 2896.48, "text": " tools, there is the zero to AC course from Matt Van. So he helped me actually preparing some slides", "tokens": [3873, 11, 456, 307, 264, 4018, 281, 8157, 1164, 490, 7397, 8979, 13, 407, 415, 4254, 385, 767, 10075, 512, 9788], "temperature": 0.0, "avg_logprob": -0.16915404194533223, "compression_ratio": 1.6170212765957446, "no_speech_prob": 4.5480534026864916e-05}, {"id": 421, "seek": 289648, "start": 2896.48, "end": 2904.64, "text": " to have a look at that stuff. If you're looking for in person events, there is a lecture coming up", "tokens": [281, 362, 257, 574, 412, 300, 1507, 13, 759, 291, 434, 1237, 337, 294, 954, 3931, 11, 456, 307, 257, 7991, 1348, 493], "temperature": 0.0, "avg_logprob": -0.1584496857017599, "compression_ratio": 1.6147540983606556, "no_speech_prob": 6.126883090473711e-05}, {"id": 422, "seek": 289648, "start": 2904.64, "end": 2910.2400000000002, "text": " in the US, a open source hardware conference that the Fosse Foundation has been organizing for a", "tokens": [294, 264, 2546, 11, 257, 1269, 4009, 8837, 7586, 300, 264, 479, 14353, 10335, 575, 668, 17608, 337, 257], "temperature": 0.0, "avg_logprob": -0.1584496857017599, "compression_ratio": 1.6147540983606556, "no_speech_prob": 6.126883090473711e-05}, {"id": 423, "seek": 289648, "start": 2910.2400000000002, "end": 2917.44, "text": " number of years. And there is all kind of coming back after COVID, the main open source hardware", "tokens": [1230, 295, 924, 13, 400, 456, 307, 439, 733, 295, 1348, 646, 934, 4566, 11, 264, 2135, 1269, 4009, 8837], "temperature": 0.0, "avg_logprob": -0.1584496857017599, "compression_ratio": 1.6147540983606556, "no_speech_prob": 6.126883090473711e-05}, {"id": 424, "seek": 289648, "start": 2917.44, "end": 2923.2, "text": " conference in Munich this year. I think we haven't announced that very widely at September 15 and 16.", "tokens": [7586, 294, 40601, 341, 1064, 13, 286, 519, 321, 2378, 380, 7548, 300, 588, 13371, 412, 7216, 2119, 293, 3165, 13], "temperature": 0.0, "avg_logprob": -0.1584496857017599, "compression_ratio": 1.6147540983606556, "no_speech_prob": 6.126883090473711e-05}, {"id": 425, "seek": 292320, "start": 2923.2, "end": 2927.52, "text": " And just stay for the October fest. Just take your hotel room a couple more days. And this is", "tokens": [400, 445, 1754, 337, 264, 7617, 6633, 13, 1449, 747, 428, 7622, 1808, 257, 1916, 544, 1708, 13, 400, 341, 307], "temperature": 0.0, "avg_logprob": -0.10349059104919434, "compression_ratio": 1.5486111111111112, "no_speech_prob": 7.607138104503974e-05}, {"id": 426, "seek": 292320, "start": 2927.52, "end": 2935.12, "text": " going to be a great experience. We end with a quote that I found, an atmosphere of excitement", "tokens": [516, 281, 312, 257, 869, 1752, 13, 492, 917, 365, 257, 6513, 300, 286, 1352, 11, 364, 8018, 295, 14755], "temperature": 0.0, "avg_logprob": -0.10349059104919434, "compression_ratio": 1.5486111111111112, "no_speech_prob": 7.607138104503974e-05}, {"id": 427, "seek": 292320, "start": 2935.12, "end": 2939.4399999999996, "text": " and anticipation pervades this field. Workers from many backgrounds, computer scientists,", "tokens": [293, 35979, 680, 85, 2977, 341, 2519, 13, 42375, 490, 867, 17336, 11, 3820, 7708, 11], "temperature": 0.0, "avg_logprob": -0.10349059104919434, "compression_ratio": 1.5486111111111112, "no_speech_prob": 7.607138104503974e-05}, {"id": 428, "seek": 292320, "start": 2939.4399999999996, "end": 2944.64, "text": " electrical engineers, physics, physicists are collaborating on a common problem area,", "tokens": [12147, 11955, 11, 10649, 11, 48716, 366, 30188, 322, 257, 2689, 1154, 1859, 11], "temperature": 0.0, "avg_logprob": -0.10349059104919434, "compression_ratio": 1.5486111111111112, "no_speech_prob": 7.607138104503974e-05}, {"id": 429, "seek": 292320, "start": 2944.64, "end": 2949.68, "text": " which has not yet become classical. This territory is vast and largely unexplored.", "tokens": [597, 575, 406, 1939, 1813, 13735, 13, 639, 11360, 307, 8369, 293, 11611, 11572, 564, 2769, 13], "temperature": 0.0, "avg_logprob": -0.10349059104919434, "compression_ratio": 1.5486111111111112, "no_speech_prob": 7.607138104503974e-05}, {"id": 430, "seek": 294968, "start": 2949.68, "end": 2963.04, "text": " The rewards for those who simply press forward are great. So this was written in 1978. And with", "tokens": [440, 17203, 337, 729, 567, 2935, 1886, 2128, 366, 869, 13, 407, 341, 390, 3720, 294, 33191, 13, 400, 365], "temperature": 0.0, "avg_logprob": -0.1540458815438407, "compression_ratio": 1.5869565217391304, "no_speech_prob": 9.853992378339171e-05}, {"id": 431, "seek": 294968, "start": 2963.9199999999996, "end": 2970.48, "text": " there again, with the open source world, let's make this open source chip design a reality. We", "tokens": [456, 797, 11, 365, 264, 1269, 4009, 1002, 11, 718, 311, 652, 341, 1269, 4009, 11409, 1715, 257, 4103, 13, 492], "temperature": 0.0, "avg_logprob": -0.1540458815438407, "compression_ratio": 1.5869565217391304, "no_speech_prob": 9.853992378339171e-05}, {"id": 432, "seek": 297048, "start": 2970.48, "end": 2987.28, "text": " have all the necessary ingredients. We have all the necessary tools. Let's make it happen. Thank you.", "tokens": [50364, 362, 439, 264, 4818, 6952, 13, 492, 362, 439, 264, 4818, 3873, 13, 961, 311, 652, 309, 1051, 13, 1044, 291, 13, 51204], "temperature": 0.0, "avg_logprob": -0.19121536254882812, "compression_ratio": 1.2469135802469136, "no_speech_prob": 0.0002705581428017467}], "language": "en"}