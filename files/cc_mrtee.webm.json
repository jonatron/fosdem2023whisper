{"text": " Next speaker is Tom Van Eyck, who is actually also from the same department that you and me are from. And he will, I think, be the only speaker that talks a little bit about our trust zone, so take it ahead. Yeah, so I'm Tom. I'm a first year PhD student at the KU Leuven, and I'll be talking about the research we have done in the last year, year and a half. So to sketch a bit of context, we are researching on cyber-physical systems. Cyber-physical systems are systems that interact with the real world, for example, air compressor's robotic arms. These systems have a controller with safety-critical applications. However, in the recent years, the industry is moving to including a Commodity OS-like Linux to facilitate software updates and third-party applications for monitoring of the cyber-physical systems. However, as you can imagine, to keep the safety-critical applications safe, you have to put this on a separate processor so that the Commodity OS may not influence it, but this becomes very expensive. So what industry wants to do is that they want to integrate both these things on a single processor. So that's basically the requirement that the industry has at this point, but a few problems result from it. The first is, I think, the most obvious. Whenever there's a bug in the Commodity OS or an attacker, they can influence the execution of the safety-critical applications, which means that the safety-critical applications cannot be guaranteed to have their availability, so the safety aspect is completely lost, which is not acceptable for these cyber-physical systems. The second issue that arises is that these safety-critical applications have real-time execution requirements, although there is some support in Linux. For real-time execution, this is mostly not what industry is looking for, so they want to have a real low latency real-time execution scheduler as well. And the third issue that arises is that industry also wants to share the peripherals between the safety-critical applications and the Commodity OS, because these monitoring applications should be able to read out the peripherals, however, industry doesn't want them to be able to disable the peripherals, because then, again, availability isn't guaranteed. For example, if the train wants to break and the peripheral for the brakes is disabled, no brake can be pressed, this is quite an issue. So out of this, our research question was formed, can we ensure availability for safety-critical applications while running a Commodity OS on the same system with little developer impact? And to repeat, we need isolation of the critical applications, we need real-time execution of these critical applications, and we also need a transparent sharing system for the peripherals. As an aside, the threat model that we assumed was that there is a strong remote adversary with root privileges in the Commodity OS, they want to launch a denial of service attack on the complete system, and we assume that the hardware, critical applications and peripherals are trusted and everything else is not. So jumping into our first requirement, to isolate the critical applications, we chose to use ARM Trust Zone, because it's integrated in high-end, low-end devices, embedded devices as well, and it has existed for quite some time, so the chance that the industry already has a processor deployed with ARM Trust Zone on it is quite high. So ARM Trust Zone is actually just hardware-based isolation, it creates two worlds, as you can see the normal world on the left and the secure world on the right, it does this by defining two security states with their own address spaces. In that way, we can ensure confidentiality and integrity for code and data in the secure world, because the hardware blocks any access to these address spaces of the secure world coming from the normal world. We use OPTE, which is an open-source TE implementation of ARM Trust Zone, and it works together with Linux in the normal world. So architecture, you can see again the normal world on the left and the secure world on the right. All the great boxes are the boxes that were already there in OPTEOS and Linux, but the white boxes we added. So for requirement one, of course, is ARM Trust Zone. Requirement two, we added a secure scheduler and a secure interrupt. For requirement three, we added a driver in the normal world and a secure driver in the secure world, and then we also have developed a use case where we monitor the Linux kernel, and that's also in the secure world, but I'll talk about that later. So for the real-time scheduler, so for the real-time execution requirements, we basically need two things. We need a periodic interrupt, and we need a scheduling system. For this periodic interrupt, we use a hardware timer on the board. It's very simple. We set the interrupt to be the highest priority of the complete system, and we protect it from the normal world so that the normal world cannot disable it or reconfigure it. So when an interrupt is triggered by this hardware timer, it gets caught by OPTEOS. OPTEOS checks if it's a scheduling interrupt. If so, it passes on execution to Friartos, which is a well-known, relatively small real-time operating system, which supports task prioritization and preemption, which is very useful for industry. So whenever Friartos gets control, it will schedule its tasks, and after all tasks have executed, control will be given back to OPTEOS so that the system can function as normally. And then for requirement three, we have a \u2013 so this is obviously the normal way that an application on the user level would interact with hardware peripherals. However, these peripherals need to be in a secure world, so we also need to move part of the driver into the secure world. So this is called driver splitting often. We basically introduce a secure driver in the secure world at kernel level, which is the liaison between the normal world and the peripheral. So this secure driver then to keep the developer efforts minimal should not contain a lot. In fact, very little. Only hardware accesses can be put in a secure driver, but you can also put some security policies in there. So for example, if a user application in a normal world wants to read something, it will get allowed. But if it isn't allowed, for example, to disable the peripheral, the secure driver is able to just stop the request and nothing will happen. The secure driver may also include some logic to share the access between the normal and the secure world. For example, if you have a screen as a peripheral, the secure world's content of the screen will always be displayed on top of the normal world content. And the nice thing about creating such a system is indeed only the developers of the driver at the kernel level in the normal world need to care about any changes made to the system. As far as the user level applications know, nothing has changed, which is very useful for industry as well. Of course, you need read and write access, and this is given by a set of APIs included in OptiOS called the global platform APIs. These are a standardized set of function calls to facilitate calling into the secure world, providing data and getting data back. We've measured this to take on average 123 microseconds, which is plenty fast enough for industry. But of course, secure peripherals might also want to return an interrupt, might trigger an interrupt, and this interrupt must also be returned at some point to the normal world. So for this, we developed a notifier system that consists of two parts, one in the normal world, one in the secure world. So what happens is that if an interrupt is triggered at the peripheral, it will get forwarded to the secure world notifier by the secure driver. Then the secure world notifier will trigger an interrupt in the normal world, which will be caught by the normal world notifier, and this will forward it to any driver in the normal world that wants to know if such an interrupt has happened using a published subscribe system. So now we solved all the three requirements, but then we got on to thinking, what can we do with this? So we developed a use case where we tried to monitor the Linux kernel running state if it has crashed or not. So we adopted a very simple system to do this. We basically challenged the Linux kernel using a notification from the system we just built, and we expect the response back in a certain time frame. If we got the response back, Linux is alive, otherwise it's not. It's as simple as that. The things that we can do with this is however more interesting. Whenever Linux doesn't respond in time and we know it's dead, we can, from the secure world, we can dump the kernel state, normal world memory, and we can even reboot Linux kernel while still keeping the safety critical applications running. So we did that. It will show a demo where we reboot Linux. So whenever the monitor in the secure world notices that Linux kernel is dead. So first, to go back a bit, first we store the kernel image at boot time because then we know that Linux is in a good state and it's up and running because we need access to the normal world file system. So we get the image, we store it in the secure world, we protect it from normal world memory so that no access from normal world is possible anymore. So then when Linux crashes, we notice this. We disable all the cores because we are on a multi-core system. We disable all the cores except for our own. We write the image back again to the normal world and then we just jump to the kernel start address. I left some tricky things out because OptiOS needs to do some resetting of its own systems as well but that's not that important. So I have a demo that basically demonstrates this. So again on the left, if you can see it clearly, we have the normal world, isn't very important what you can see there. The most important thing is on the right in the secure world. You can see on the top that that's the output that the monitor is giving every 500 milliseconds. So every 500 milliseconds it's selling a challenge to Linux and getting a response back. If it's a response, it's obviously green. So now if we go into Linux and we make or we cause a crash in the system. Very simple crash kernel panic. We immediately see that the monitor notices this. It will start rebooting process and keep in mind that the secure world is still executing its task in a real-time fashion with a given known latency. And after Linux has rebooted, we again see that the monitor notices Linux is alive. And if after we wait a bit, we get again a shell which we can use like any other Linux system. Yeah, the demo. Thank you. So then to conclude, again, a research question. Can we ensure availability for safety-critical applications while running a commodity-OS on the same system with little developer impact? We do believe so. We did this by leveraging threshold isolation to isolate the critical applications. We introduced a secure scheduling system with freeRTOS. And we introduced also a transparent peripheral sharing system. We have some documentation online. I put it as a tutorial, but you need this board to be able to run it. So it's still ongoing research. And we will update this tutorial whenever we update, we get new stuff in our research. You can also look at the documentation for Opti as well. And if you have any questions at any time, just contact me at this email address. I'd be happy to answer them. So that was it. I hope you enjoyed the presentation. And if you have questions. Yeah. So one of the problems I see with this approach is that you move the device to the secure world. They basically have a seam layer to make the cabinet talk to the device you move to the secure world. The problem is, we've been discussing this for a while, but the problem is you expose a bigger back surface in both the, which is the drivers, basically breaking the main assumption in opting that we don't trust Linus, right? So you have a buffer that fits into your driver and you kind of start to trust that buffer because it ends up being hardware, so there needs to be some kind of arbitration or rationalization process during that thing. And how do you thought about this? Yeah, of course. It was indeed that if you move a driver into the secure world, we increase the attack surface considerably, of course, and we solved this, or we thought about it indeed, and we came to the conclusion that it is indeed a problem. However, if you get secure policies, which you know in advance, so for example, we know that a peripheral can be read only by the normal world, but not written because of course you designed a system like so. You can see, based on the actual requests that are sent by the normal world, if it is allowed or not. So if it's, for example, a write request to an address, we know we cannot allow this. However, if it's a read address, we know we can just execute it and return the data. We have a hardware vendor who will just listen and have a hardware that responds to do memory address cases and you should be fine. Yeah, but that's not the case, sadly enough. The thing is that there's an RFC that we haven't been able to reason about it, which we don't have a watchbook like you have an object that we do have is that we, once the camera comes up, we measure portions of the text area of the camera. We take a text and then we periodically randomly check if that hasn't taken. Now, arguably, that's not a very strong attack against recent, you know, rocks and stuff like that, but you should check that out at some point. Yeah, we are considering this for other research projects that we are running at the same time. It's a question that keeps coming back. How do we authenticate the normal world or the Linux kernel to the secure world? How do we make sure that it is running correctly? Because the kernel, when it comes up, we basically change the bounce of the muscle code. Yeah, indeed. Yeah. After some point, in this case, it's arguably trust what happens. Yeah, indeed. And there is some research going into attestation, so not remote attestation but locally. And also some continuous attestation, but it's still an Linux kernel, which is very difficult to attestate. The last thing is the kernel itself, right? So when you write it to memory and then reboot it, you need to have some kind of cryptographic set, right? Because the trending in the whole chain of trust is, you know, you boot with the effect that verifies your kernel and then you outestate it. But if you load the kernel and down to an entry point, first of all, you need to cryptographic verify what you're doing. Yeah, of course, yeah. And there's been some code and development going into EFI where if you down to the kernel entry point and not the EFI entry point, you use a bunch of security services. For example, ASL app. Yeah, of course. So this was a proof of concept indeed. If you just write the kernel image back to the normal world and jump to it, it's of course a big problem. So if you want to actually build such a system in a secure way, you will need to do checking your image at boot time when you store it in memory. Once you've checked it and stored it, you know that it's safe and then whenever you want to reboot, you can set up the normal world completely so that it is again in a well-known secure state like at boot time and then write the image. We can talk. Of course, yeah. There's more problems, right? Because for example, if you boot like that, ASLR won't work properly in our, at least in our system. Okay. Okay, we'll have a good discussion. Yeah. Yeah, go ahead. Maybe a follow-up question to this initial observation about the sort of security aspects of kind of sharing responsibility for the peripherals. Another reason why you would want to partition the peripherals rather than to give control competes with trust is also performance, right? Because essentially now you're saying that for any peripheral access, you need that to go through the... Yeah, so there is... There is some latency number, but did you evaluate the overall performance degradation on the Linux? Yes, indeed we did. I did not include the slide. Ah, yeah. So the question was, if we evaluated the complete latency of sharing peripherals between the two worlds, yeah, we did indeed verify, don't have a slide for the graphs, but if you look at these numbers, you can see that to go to the peripheral from the normal world, it takes around 103 microseconds. This is however in a standard call in OptiOS, and there is also something like a fast call and then you will get six microsecond latency, which is very fast, certainly fast enough for the requirements set by our industrial partners. And also the 68 microseconds to go back is also quickly enough for these systems, because these systems often have a control loop of one millisecond. So that means that, yeah, even with these numbers, you have like 95 or above of the original performance or time of execution in the normal world. So this is, we think this is a cost that we can totally take in developing the systems just because it gives us so many benefits on security level. Is that good? Okay. Yeah. So the question was, how does this system using a trusted execution environment compare to a hypervisor implementation? At our research group in this synod, we are working with very low-end embedded devices. So this is a proof of concept on quite a high processor, it would be possible to do it in a hypervisor. I don't know how to do it because I haven't taken a look at it that closely, but on these very low-end embedded devices, it's mostly not useful or it's even damaging for the lifetime of device to use a hypervisor because you have also quite some overhead and a very limited lifetime battery. You have a very limited energy budget. So on these lower-end processes, there is an arm trust on implementation that is also very energy efficient. So if we would, of course, not use Opti-Res and Linux, but take the same principles and apply it to such a chip, we believe we could stay in the energy budget that these low-end devices have. And we don't think it's something we can immediately do with hypervisors, but of course, that's not my research area, so that's something that can, of course, be very interesting to research. There was a question in the back. Is there an instance of this hardware that we can use on the cloud to try it out? I'm afraid not, so there is no instance in the cloud that is available to try right now. However, there is, I don't know if you know QEMU, possibly you do, so QEMU. It does support ARM virtualization. So we actually first started using that to develop our system, but we very quickly moved on to a hardware device because of our industrial partners. So the code, as is, won't immediately run on QEMU, but if you change the interrupt numbers and the things that are different, it should be relatively easy to reproduce the same results on a virtualized system as well. Just to continue on the question on virtual machines versus OPE. I think one key difference is that OPE is actually a real trusted execution environment in the sense that compared to a virtual machine where the hypervisor would have access to the address space of the protected application and through flow, with OPE, it doesn't. Anything that runs on the unsecured world does not see that the physical address space cannot access. Well, I guess, for example, our question is like the Siemens software controllers, actually the hypervisor is not Windows or Linux, it's the custom hypervisor, and that also has access like proper. So if it is an hypervisor that uses hardware virtualization, it does have access to the address space of whatever VM is running on the machine. If it's based on the ARM64's virtualization extension, it will have access to the address space. With OPE, the address space is only accessible to the secure world. It's controlled by the secure monitor, which is running at a very privileged level, which is more privileged than the hypervisor. So the hypervisor does not get access to the secure application, whereas with an hypervisor, the hypervisor could just mess with the nested page tables and do whatever it wants, access to the secure peripheral database. Maybe to kick in here then, I love this, so that's what the coffee break hours are like before. So please continue this discussion, but just for the general audience, would I have like a 10-minute break now? I won't call it a coffee break because there's not enough time to run downstairs, you wouldn't come back up. In 10 minutes, we will continue with the next talk, but exactly use it for these type of one-to-one break and continue the discussion in the next 10 minutes. One thing I wanted to pitch in.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 19.56, "text": " Next speaker is Tom Van Eyck, who is actually also from the same department that you and", "tokens": [3087, 8145, 307, 5041, 8979, 23236, 547, 11, 567, 307, 767, 611, 490, 264, 912, 5882, 300, 291, 293], "temperature": 0.0, "avg_logprob": -0.4265170938828412, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.49620550870895386}, {"id": 1, "seek": 0, "start": 19.56, "end": 20.56, "text": " me are from.", "tokens": [385, 366, 490, 13], "temperature": 0.0, "avg_logprob": -0.4265170938828412, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.49620550870895386}, {"id": 2, "seek": 0, "start": 20.56, "end": 24.44, "text": " And he will, I think, be the only speaker that talks a little bit about our trust zone,", "tokens": [400, 415, 486, 11, 286, 519, 11, 312, 264, 787, 8145, 300, 6686, 257, 707, 857, 466, 527, 3361, 6668, 11], "temperature": 0.0, "avg_logprob": -0.4265170938828412, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.49620550870895386}, {"id": 3, "seek": 0, "start": 24.44, "end": 25.44, "text": " so take it ahead.", "tokens": [370, 747, 309, 2286, 13], "temperature": 0.0, "avg_logprob": -0.4265170938828412, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.49620550870895386}, {"id": 4, "seek": 0, "start": 25.44, "end": 26.44, "text": " Yeah, so I'm Tom.", "tokens": [865, 11, 370, 286, 478, 5041, 13], "temperature": 0.0, "avg_logprob": -0.4265170938828412, "compression_ratio": 1.3888888888888888, "no_speech_prob": 0.49620550870895386}, {"id": 5, "seek": 2644, "start": 26.44, "end": 32.64, "text": " I'm a first year PhD student at the KU Leuven, and I'll be talking about the research we", "tokens": [286, 478, 257, 700, 1064, 14476, 3107, 412, 264, 591, 52, 1456, 84, 553, 11, 293, 286, 603, 312, 1417, 466, 264, 2132, 321], "temperature": 0.0, "avg_logprob": -0.22830509445042285, "compression_ratio": 1.6291666666666667, "no_speech_prob": 0.0018124016933143139}, {"id": 6, "seek": 2644, "start": 32.64, "end": 36.28, "text": " have done in the last year, year and a half.", "tokens": [362, 1096, 294, 264, 1036, 1064, 11, 1064, 293, 257, 1922, 13], "temperature": 0.0, "avg_logprob": -0.22830509445042285, "compression_ratio": 1.6291666666666667, "no_speech_prob": 0.0018124016933143139}, {"id": 7, "seek": 2644, "start": 36.28, "end": 41.36, "text": " So to sketch a bit of context, we are researching on cyber-physical systems.", "tokens": [407, 281, 12325, 257, 857, 295, 4319, 11, 321, 366, 24176, 322, 13411, 12, 950, 36280, 3652, 13], "temperature": 0.0, "avg_logprob": -0.22830509445042285, "compression_ratio": 1.6291666666666667, "no_speech_prob": 0.0018124016933143139}, {"id": 8, "seek": 2644, "start": 41.36, "end": 46.2, "text": " Cyber-physical systems are systems that interact with the real world, for example, air compressor's", "tokens": [22935, 12, 950, 36280, 3652, 366, 3652, 300, 4648, 365, 264, 957, 1002, 11, 337, 1365, 11, 1988, 28765, 311], "temperature": 0.0, "avg_logprob": -0.22830509445042285, "compression_ratio": 1.6291666666666667, "no_speech_prob": 0.0018124016933143139}, {"id": 9, "seek": 2644, "start": 46.2, "end": 48.0, "text": " robotic arms.", "tokens": [30468, 5812, 13], "temperature": 0.0, "avg_logprob": -0.22830509445042285, "compression_ratio": 1.6291666666666667, "no_speech_prob": 0.0018124016933143139}, {"id": 10, "seek": 2644, "start": 48.0, "end": 51.8, "text": " These systems have a controller with safety-critical applications.", "tokens": [1981, 3652, 362, 257, 10561, 365, 4514, 12, 32255, 804, 5821, 13], "temperature": 0.0, "avg_logprob": -0.22830509445042285, "compression_ratio": 1.6291666666666667, "no_speech_prob": 0.0018124016933143139}, {"id": 11, "seek": 5180, "start": 51.8, "end": 59.16, "text": " However, in the recent years, the industry is moving to including a Commodity OS-like", "tokens": [2908, 11, 294, 264, 5162, 924, 11, 264, 3518, 307, 2684, 281, 3009, 257, 3046, 378, 507, 12731, 12, 4092], "temperature": 0.0, "avg_logprob": -0.15661165665607063, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.0018329881131649017}, {"id": 12, "seek": 5180, "start": 59.16, "end": 66.47999999999999, "text": " Linux to facilitate software updates and third-party applications for monitoring of the cyber-physical", "tokens": [18734, 281, 20207, 4722, 9205, 293, 2636, 12, 23409, 5821, 337, 11028, 295, 264, 13411, 12, 950, 36280], "temperature": 0.0, "avg_logprob": -0.15661165665607063, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.0018329881131649017}, {"id": 13, "seek": 5180, "start": 66.47999999999999, "end": 67.47999999999999, "text": " systems.", "tokens": [3652, 13], "temperature": 0.0, "avg_logprob": -0.15661165665607063, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.0018329881131649017}, {"id": 14, "seek": 5180, "start": 67.47999999999999, "end": 73.56, "text": " However, as you can imagine, to keep the safety-critical applications safe, you have to put this on", "tokens": [2908, 11, 382, 291, 393, 3811, 11, 281, 1066, 264, 4514, 12, 32255, 804, 5821, 3273, 11, 291, 362, 281, 829, 341, 322], "temperature": 0.0, "avg_logprob": -0.15661165665607063, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.0018329881131649017}, {"id": 15, "seek": 5180, "start": 73.56, "end": 78.03999999999999, "text": " a separate processor so that the Commodity OS may not influence it, but this becomes", "tokens": [257, 4994, 15321, 370, 300, 264, 3046, 378, 507, 12731, 815, 406, 6503, 309, 11, 457, 341, 3643], "temperature": 0.0, "avg_logprob": -0.15661165665607063, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.0018329881131649017}, {"id": 16, "seek": 5180, "start": 78.03999999999999, "end": 79.52, "text": " very expensive.", "tokens": [588, 5124, 13], "temperature": 0.0, "avg_logprob": -0.15661165665607063, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.0018329881131649017}, {"id": 17, "seek": 7952, "start": 79.52, "end": 83.8, "text": " So what industry wants to do is that they want to integrate both these things on a single", "tokens": [407, 437, 3518, 2738, 281, 360, 307, 300, 436, 528, 281, 13365, 1293, 613, 721, 322, 257, 2167], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 18, "seek": 7952, "start": 83.8, "end": 84.8, "text": " processor.", "tokens": [15321, 13], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 19, "seek": 7952, "start": 84.8, "end": 90.6, "text": " So that's basically the requirement that the industry has at this point, but a few problems", "tokens": [407, 300, 311, 1936, 264, 11695, 300, 264, 3518, 575, 412, 341, 935, 11, 457, 257, 1326, 2740], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 20, "seek": 7952, "start": 90.6, "end": 92.16, "text": " result from it.", "tokens": [1874, 490, 309, 13], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 21, "seek": 7952, "start": 92.16, "end": 94.24, "text": " The first is, I think, the most obvious.", "tokens": [440, 700, 307, 11, 286, 519, 11, 264, 881, 6322, 13], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 22, "seek": 7952, "start": 94.24, "end": 100.16, "text": " Whenever there's a bug in the Commodity OS or an attacker, they can influence the execution", "tokens": [14159, 456, 311, 257, 7426, 294, 264, 3046, 378, 507, 12731, 420, 364, 35871, 11, 436, 393, 6503, 264, 15058], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 23, "seek": 7952, "start": 100.16, "end": 105.67999999999999, "text": " of the safety-critical applications, which means that the safety-critical applications", "tokens": [295, 264, 4514, 12, 32255, 804, 5821, 11, 597, 1355, 300, 264, 4514, 12, 32255, 804, 5821], "temperature": 0.0, "avg_logprob": -0.1105875609056005, "compression_ratio": 1.691699604743083, "no_speech_prob": 0.00046097469748929143}, {"id": 24, "seek": 10568, "start": 105.68, "end": 111.04, "text": " cannot be guaranteed to have their availability, so the safety aspect is completely lost, which", "tokens": [2644, 312, 18031, 281, 362, 641, 17945, 11, 370, 264, 4514, 4171, 307, 2584, 2731, 11, 597], "temperature": 0.0, "avg_logprob": -0.11364973508394681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.0004217755049467087}, {"id": 25, "seek": 10568, "start": 111.04, "end": 114.92, "text": " is not acceptable for these cyber-physical systems.", "tokens": [307, 406, 15513, 337, 613, 13411, 12, 950, 36280, 3652, 13], "temperature": 0.0, "avg_logprob": -0.11364973508394681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.0004217755049467087}, {"id": 26, "seek": 10568, "start": 114.92, "end": 119.64000000000001, "text": " The second issue that arises is that these safety-critical applications have real-time", "tokens": [440, 1150, 2734, 300, 27388, 307, 300, 613, 4514, 12, 32255, 804, 5821, 362, 957, 12, 3766], "temperature": 0.0, "avg_logprob": -0.11364973508394681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.0004217755049467087}, {"id": 27, "seek": 10568, "start": 119.64000000000001, "end": 125.12, "text": " execution requirements, although there is some support in Linux.", "tokens": [15058, 7728, 11, 4878, 456, 307, 512, 1406, 294, 18734, 13], "temperature": 0.0, "avg_logprob": -0.11364973508394681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.0004217755049467087}, {"id": 28, "seek": 10568, "start": 125.12, "end": 129.84, "text": " For real-time execution, this is mostly not what industry is looking for, so they want", "tokens": [1171, 957, 12, 3766, 15058, 11, 341, 307, 5240, 406, 437, 3518, 307, 1237, 337, 11, 370, 436, 528], "temperature": 0.0, "avg_logprob": -0.11364973508394681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.0004217755049467087}, {"id": 29, "seek": 10568, "start": 129.84, "end": 135.44, "text": " to have a real low latency real-time execution scheduler as well.", "tokens": [281, 362, 257, 957, 2295, 27043, 957, 12, 3766, 15058, 12000, 260, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.11364973508394681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.0004217755049467087}, {"id": 30, "seek": 13544, "start": 135.44, "end": 141.32, "text": " And the third issue that arises is that industry also wants to share the peripherals between", "tokens": [400, 264, 2636, 2734, 300, 27388, 307, 300, 3518, 611, 2738, 281, 2073, 264, 26807, 1124, 1296], "temperature": 0.0, "avg_logprob": -0.14036051750183107, "compression_ratio": 1.85, "no_speech_prob": 0.0005015160422772169}, {"id": 31, "seek": 13544, "start": 141.32, "end": 147.56, "text": " the safety-critical applications and the Commodity OS, because these monitoring applications", "tokens": [264, 4514, 12, 32255, 804, 5821, 293, 264, 3046, 378, 507, 12731, 11, 570, 613, 11028, 5821], "temperature": 0.0, "avg_logprob": -0.14036051750183107, "compression_ratio": 1.85, "no_speech_prob": 0.0005015160422772169}, {"id": 32, "seek": 13544, "start": 147.56, "end": 152.44, "text": " should be able to read out the peripherals, however, industry doesn't want them to be", "tokens": [820, 312, 1075, 281, 1401, 484, 264, 26807, 1124, 11, 4461, 11, 3518, 1177, 380, 528, 552, 281, 312], "temperature": 0.0, "avg_logprob": -0.14036051750183107, "compression_ratio": 1.85, "no_speech_prob": 0.0005015160422772169}, {"id": 33, "seek": 13544, "start": 152.44, "end": 158.68, "text": " able to disable the peripherals, because then, again, availability isn't guaranteed.", "tokens": [1075, 281, 28362, 264, 26807, 1124, 11, 570, 550, 11, 797, 11, 17945, 1943, 380, 18031, 13], "temperature": 0.0, "avg_logprob": -0.14036051750183107, "compression_ratio": 1.85, "no_speech_prob": 0.0005015160422772169}, {"id": 34, "seek": 13544, "start": 158.68, "end": 163.04, "text": " For example, if the train wants to break and the peripheral for the brakes is disabled,", "tokens": [1171, 1365, 11, 498, 264, 3847, 2738, 281, 1821, 293, 264, 40235, 337, 264, 19950, 307, 15191, 11], "temperature": 0.0, "avg_logprob": -0.14036051750183107, "compression_ratio": 1.85, "no_speech_prob": 0.0005015160422772169}, {"id": 35, "seek": 16304, "start": 163.04, "end": 166.67999999999998, "text": " no brake can be pressed, this is quite an issue.", "tokens": [572, 13997, 393, 312, 17355, 11, 341, 307, 1596, 364, 2734, 13], "temperature": 0.0, "avg_logprob": -0.1159720076728113, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00037479883758351207}, {"id": 36, "seek": 16304, "start": 166.67999999999998, "end": 172.23999999999998, "text": " So out of this, our research question was formed, can we ensure availability for safety-critical", "tokens": [407, 484, 295, 341, 11, 527, 2132, 1168, 390, 8693, 11, 393, 321, 5586, 17945, 337, 4514, 12, 32255, 804], "temperature": 0.0, "avg_logprob": -0.1159720076728113, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00037479883758351207}, {"id": 37, "seek": 16304, "start": 172.23999999999998, "end": 177.35999999999999, "text": " applications while running a Commodity OS on the same system with little developer impact?", "tokens": [5821, 1339, 2614, 257, 3046, 378, 507, 12731, 322, 264, 912, 1185, 365, 707, 10754, 2712, 30], "temperature": 0.0, "avg_logprob": -0.1159720076728113, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00037479883758351207}, {"id": 38, "seek": 16304, "start": 177.35999999999999, "end": 183.12, "text": " And to repeat, we need isolation of the critical applications, we need real-time execution of", "tokens": [400, 281, 7149, 11, 321, 643, 16001, 295, 264, 4924, 5821, 11, 321, 643, 957, 12, 3766, 15058, 295], "temperature": 0.0, "avg_logprob": -0.1159720076728113, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00037479883758351207}, {"id": 39, "seek": 16304, "start": 183.12, "end": 190.51999999999998, "text": " these critical applications, and we also need a transparent sharing system for the peripherals.", "tokens": [613, 4924, 5821, 11, 293, 321, 611, 643, 257, 12737, 5414, 1185, 337, 264, 26807, 1124, 13], "temperature": 0.0, "avg_logprob": -0.1159720076728113, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00037479883758351207}, {"id": 40, "seek": 19052, "start": 190.52, "end": 194.88000000000002, "text": " As an aside, the threat model that we assumed was that there is a strong remote adversary", "tokens": [1018, 364, 7359, 11, 264, 4734, 2316, 300, 321, 15895, 390, 300, 456, 307, 257, 2068, 8607, 48222], "temperature": 0.0, "avg_logprob": -0.14062970085481627, "compression_ratio": 1.65993265993266, "no_speech_prob": 0.0002877865044865757}, {"id": 41, "seek": 19052, "start": 194.88000000000002, "end": 199.4, "text": " with root privileges in the Commodity OS, they want to launch a denial of service attack", "tokens": [365, 5593, 32588, 294, 264, 3046, 378, 507, 12731, 11, 436, 528, 281, 4025, 257, 28754, 295, 2643, 2690], "temperature": 0.0, "avg_logprob": -0.14062970085481627, "compression_ratio": 1.65993265993266, "no_speech_prob": 0.0002877865044865757}, {"id": 42, "seek": 19052, "start": 199.4, "end": 203.84, "text": " on the complete system, and we assume that the hardware, critical applications and peripherals", "tokens": [322, 264, 3566, 1185, 11, 293, 321, 6552, 300, 264, 8837, 11, 4924, 5821, 293, 26807, 1124], "temperature": 0.0, "avg_logprob": -0.14062970085481627, "compression_ratio": 1.65993265993266, "no_speech_prob": 0.0002877865044865757}, {"id": 43, "seek": 19052, "start": 203.84, "end": 208.20000000000002, "text": " are trusted and everything else is not.", "tokens": [366, 16034, 293, 1203, 1646, 307, 406, 13], "temperature": 0.0, "avg_logprob": -0.14062970085481627, "compression_ratio": 1.65993265993266, "no_speech_prob": 0.0002877865044865757}, {"id": 44, "seek": 19052, "start": 208.20000000000002, "end": 212.92000000000002, "text": " So jumping into our first requirement, to isolate the critical applications, we chose", "tokens": [407, 11233, 666, 527, 700, 11695, 11, 281, 25660, 264, 4924, 5821, 11, 321, 5111], "temperature": 0.0, "avg_logprob": -0.14062970085481627, "compression_ratio": 1.65993265993266, "no_speech_prob": 0.0002877865044865757}, {"id": 45, "seek": 19052, "start": 212.92000000000002, "end": 219.24, "text": " to use ARM Trust Zone, because it's integrated in high-end, low-end devices, embedded devices", "tokens": [281, 764, 45209, 11580, 22800, 11, 570, 309, 311, 10919, 294, 1090, 12, 521, 11, 2295, 12, 521, 5759, 11, 16741, 5759], "temperature": 0.0, "avg_logprob": -0.14062970085481627, "compression_ratio": 1.65993265993266, "no_speech_prob": 0.0002877865044865757}, {"id": 46, "seek": 21924, "start": 219.24, "end": 223.52, "text": " as well, and it has existed for quite some time, so the chance that the industry already", "tokens": [382, 731, 11, 293, 309, 575, 13135, 337, 1596, 512, 565, 11, 370, 264, 2931, 300, 264, 3518, 1217], "temperature": 0.0, "avg_logprob": -0.1021699821739866, "compression_ratio": 1.7338129496402879, "no_speech_prob": 0.00019303262524772435}, {"id": 47, "seek": 21924, "start": 223.52, "end": 228.08, "text": " has a processor deployed with ARM Trust Zone on it is quite high.", "tokens": [575, 257, 15321, 17826, 365, 45209, 11580, 22800, 322, 309, 307, 1596, 1090, 13], "temperature": 0.0, "avg_logprob": -0.1021699821739866, "compression_ratio": 1.7338129496402879, "no_speech_prob": 0.00019303262524772435}, {"id": 48, "seek": 21924, "start": 228.08, "end": 234.0, "text": " So ARM Trust Zone is actually just hardware-based isolation, it creates two worlds, as you can", "tokens": [407, 45209, 11580, 22800, 307, 767, 445, 8837, 12, 6032, 16001, 11, 309, 7829, 732, 13401, 11, 382, 291, 393], "temperature": 0.0, "avg_logprob": -0.1021699821739866, "compression_ratio": 1.7338129496402879, "no_speech_prob": 0.00019303262524772435}, {"id": 49, "seek": 21924, "start": 234.0, "end": 237.88, "text": " see the normal world on the left and the secure world on the right, it does this by defining", "tokens": [536, 264, 2710, 1002, 322, 264, 1411, 293, 264, 7144, 1002, 322, 264, 558, 11, 309, 775, 341, 538, 17827], "temperature": 0.0, "avg_logprob": -0.1021699821739866, "compression_ratio": 1.7338129496402879, "no_speech_prob": 0.00019303262524772435}, {"id": 50, "seek": 21924, "start": 237.88, "end": 241.48000000000002, "text": " two security states with their own address spaces.", "tokens": [732, 3825, 4368, 365, 641, 1065, 2985, 7673, 13], "temperature": 0.0, "avg_logprob": -0.1021699821739866, "compression_ratio": 1.7338129496402879, "no_speech_prob": 0.00019303262524772435}, {"id": 51, "seek": 21924, "start": 241.48000000000002, "end": 246.0, "text": " In that way, we can ensure confidentiality and integrity for code and data in the secure", "tokens": [682, 300, 636, 11, 321, 393, 5586, 27054, 507, 293, 16000, 337, 3089, 293, 1412, 294, 264, 7144], "temperature": 0.0, "avg_logprob": -0.1021699821739866, "compression_ratio": 1.7338129496402879, "no_speech_prob": 0.00019303262524772435}, {"id": 52, "seek": 24600, "start": 246.0, "end": 251.96, "text": " world, because the hardware blocks any access to these address spaces of the secure world", "tokens": [1002, 11, 570, 264, 8837, 8474, 604, 2105, 281, 613, 2985, 7673, 295, 264, 7144, 1002], "temperature": 0.0, "avg_logprob": -0.1919157338696857, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.00013692949141841382}, {"id": 53, "seek": 24600, "start": 251.96, "end": 256.16, "text": " coming from the normal world.", "tokens": [1348, 490, 264, 2710, 1002, 13], "temperature": 0.0, "avg_logprob": -0.1919157338696857, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.00013692949141841382}, {"id": 54, "seek": 24600, "start": 256.16, "end": 262.76, "text": " We use OPTE, which is an open-source TE implementation of ARM Trust Zone, and it works together with", "tokens": [492, 764, 23324, 13639, 11, 597, 307, 364, 1269, 12, 41676, 19744, 11420, 295, 45209, 11580, 22800, 11, 293, 309, 1985, 1214, 365], "temperature": 0.0, "avg_logprob": -0.1919157338696857, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.00013692949141841382}, {"id": 55, "seek": 24600, "start": 262.76, "end": 265.72, "text": " Linux in the normal world.", "tokens": [18734, 294, 264, 2710, 1002, 13], "temperature": 0.0, "avg_logprob": -0.1919157338696857, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.00013692949141841382}, {"id": 56, "seek": 24600, "start": 265.72, "end": 270.04, "text": " So architecture, you can see again the normal world on the left and the secure world on", "tokens": [407, 9482, 11, 291, 393, 536, 797, 264, 2710, 1002, 322, 264, 1411, 293, 264, 7144, 1002, 322], "temperature": 0.0, "avg_logprob": -0.1919157338696857, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.00013692949141841382}, {"id": 57, "seek": 24600, "start": 270.04, "end": 271.32, "text": " the right.", "tokens": [264, 558, 13], "temperature": 0.0, "avg_logprob": -0.1919157338696857, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.00013692949141841382}, {"id": 58, "seek": 27132, "start": 271.32, "end": 278.4, "text": " All the great boxes are the boxes that were already there in OPTEOS and Linux, but the", "tokens": [1057, 264, 869, 9002, 366, 264, 9002, 300, 645, 1217, 456, 294, 23324, 13639, 4367, 293, 18734, 11, 457, 264], "temperature": 0.0, "avg_logprob": -0.13064265251159668, "compression_ratio": 1.7564102564102564, "no_speech_prob": 8.515683293808252e-05}, {"id": 59, "seek": 27132, "start": 278.4, "end": 280.12, "text": " white boxes we added.", "tokens": [2418, 9002, 321, 3869, 13], "temperature": 0.0, "avg_logprob": -0.13064265251159668, "compression_ratio": 1.7564102564102564, "no_speech_prob": 8.515683293808252e-05}, {"id": 60, "seek": 27132, "start": 280.12, "end": 283.36, "text": " So for requirement one, of course, is ARM Trust Zone.", "tokens": [407, 337, 11695, 472, 11, 295, 1164, 11, 307, 45209, 11580, 22800, 13], "temperature": 0.0, "avg_logprob": -0.13064265251159668, "compression_ratio": 1.7564102564102564, "no_speech_prob": 8.515683293808252e-05}, {"id": 61, "seek": 27132, "start": 283.36, "end": 286.88, "text": " Requirement two, we added a secure scheduler and a secure interrupt.", "tokens": [42029, 28575, 732, 11, 321, 3869, 257, 7144, 12000, 260, 293, 257, 7144, 12729, 13], "temperature": 0.0, "avg_logprob": -0.13064265251159668, "compression_ratio": 1.7564102564102564, "no_speech_prob": 8.515683293808252e-05}, {"id": 62, "seek": 27132, "start": 286.88, "end": 291.71999999999997, "text": " For requirement three, we added a driver in the normal world and a secure driver in the", "tokens": [1171, 11695, 1045, 11, 321, 3869, 257, 6787, 294, 264, 2710, 1002, 293, 257, 7144, 6787, 294, 264], "temperature": 0.0, "avg_logprob": -0.13064265251159668, "compression_ratio": 1.7564102564102564, "no_speech_prob": 8.515683293808252e-05}, {"id": 63, "seek": 27132, "start": 291.71999999999997, "end": 298.56, "text": " secure world, and then we also have developed a use case where we monitor the Linux kernel,", "tokens": [7144, 1002, 11, 293, 550, 321, 611, 362, 4743, 257, 764, 1389, 689, 321, 6002, 264, 18734, 28256, 11], "temperature": 0.0, "avg_logprob": -0.13064265251159668, "compression_ratio": 1.7564102564102564, "no_speech_prob": 8.515683293808252e-05}, {"id": 64, "seek": 29856, "start": 298.56, "end": 303.36, "text": " and that's also in the secure world, but I'll talk about that later.", "tokens": [293, 300, 311, 611, 294, 264, 7144, 1002, 11, 457, 286, 603, 751, 466, 300, 1780, 13], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 65, "seek": 29856, "start": 303.36, "end": 309.08, "text": " So for the real-time scheduler, so for the real-time execution requirements, we basically", "tokens": [407, 337, 264, 957, 12, 3766, 12000, 260, 11, 370, 337, 264, 957, 12, 3766, 15058, 7728, 11, 321, 1936], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 66, "seek": 29856, "start": 309.08, "end": 310.08, "text": " need two things.", "tokens": [643, 732, 721, 13], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 67, "seek": 29856, "start": 310.08, "end": 313.2, "text": " We need a periodic interrupt, and we need a scheduling system.", "tokens": [492, 643, 257, 27790, 12729, 11, 293, 321, 643, 257, 29055, 1185, 13], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 68, "seek": 29856, "start": 313.2, "end": 316.56, "text": " For this periodic interrupt, we use a hardware timer on the board.", "tokens": [1171, 341, 27790, 12729, 11, 321, 764, 257, 8837, 19247, 322, 264, 3150, 13], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 69, "seek": 29856, "start": 316.56, "end": 317.56, "text": " It's very simple.", "tokens": [467, 311, 588, 2199, 13], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 70, "seek": 29856, "start": 317.56, "end": 321.12, "text": " We set the interrupt to be the highest priority of the complete system, and we protect it", "tokens": [492, 992, 264, 12729, 281, 312, 264, 6343, 9365, 295, 264, 3566, 1185, 11, 293, 321, 2371, 309], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 71, "seek": 29856, "start": 321.12, "end": 325.36, "text": " from the normal world so that the normal world cannot disable it or reconfigure it.", "tokens": [490, 264, 2710, 1002, 370, 300, 264, 2710, 1002, 2644, 28362, 309, 420, 9993, 20646, 540, 309, 13], "temperature": 0.0, "avg_logprob": -0.0799842819454163, "compression_ratio": 1.8272058823529411, "no_speech_prob": 2.6915158741758205e-05}, {"id": 72, "seek": 32536, "start": 325.36, "end": 330.52000000000004, "text": " So when an interrupt is triggered by this hardware timer, it gets caught by OPTEOS.", "tokens": [407, 562, 364, 12729, 307, 21710, 538, 341, 8837, 19247, 11, 309, 2170, 5415, 538, 23324, 13639, 4367, 13], "temperature": 0.0, "avg_logprob": -0.1588102196747402, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.0005198774742893875}, {"id": 73, "seek": 32536, "start": 330.52000000000004, "end": 333.88, "text": " OPTEOS checks if it's a scheduling interrupt.", "tokens": [23324, 13639, 4367, 13834, 498, 309, 311, 257, 29055, 12729, 13], "temperature": 0.0, "avg_logprob": -0.1588102196747402, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.0005198774742893875}, {"id": 74, "seek": 32536, "start": 333.88, "end": 341.40000000000003, "text": " If so, it passes on execution to Friartos, which is a well-known, relatively small real-time", "tokens": [759, 370, 11, 309, 11335, 322, 15058, 281, 479, 470, 446, 329, 11, 597, 307, 257, 731, 12, 6861, 11, 7226, 1359, 957, 12, 3766], "temperature": 0.0, "avg_logprob": -0.1588102196747402, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.0005198774742893875}, {"id": 75, "seek": 32536, "start": 341.40000000000003, "end": 349.12, "text": " operating system, which supports task prioritization and preemption, which is very useful for industry.", "tokens": [7447, 1185, 11, 597, 9346, 5633, 14846, 2144, 293, 659, 26033, 11, 597, 307, 588, 4420, 337, 3518, 13], "temperature": 0.0, "avg_logprob": -0.1588102196747402, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.0005198774742893875}, {"id": 76, "seek": 32536, "start": 349.12, "end": 354.64, "text": " So whenever Friartos gets control, it will schedule its tasks, and after all tasks have", "tokens": [407, 5699, 479, 470, 446, 329, 2170, 1969, 11, 309, 486, 7567, 1080, 9608, 11, 293, 934, 439, 9608, 362], "temperature": 0.0, "avg_logprob": -0.1588102196747402, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.0005198774742893875}, {"id": 77, "seek": 35464, "start": 354.64, "end": 362.4, "text": " executed, control will be given back to OPTEOS so that the system can function as normally.", "tokens": [17577, 11, 1969, 486, 312, 2212, 646, 281, 23324, 13639, 4367, 370, 300, 264, 1185, 393, 2445, 382, 5646, 13], "temperature": 0.0, "avg_logprob": -0.1813235896648747, "compression_ratio": 1.6076923076923078, "no_speech_prob": 0.00011791836732299998}, {"id": 78, "seek": 35464, "start": 362.4, "end": 368.24, "text": " And then for requirement three, we have a \u2013 so this is obviously the normal way that", "tokens": [400, 550, 337, 11695, 1045, 11, 321, 362, 257, 1662, 370, 341, 307, 2745, 264, 2710, 636, 300], "temperature": 0.0, "avg_logprob": -0.1813235896648747, "compression_ratio": 1.6076923076923078, "no_speech_prob": 0.00011791836732299998}, {"id": 79, "seek": 35464, "start": 368.24, "end": 371.64, "text": " an application on the user level would interact with hardware peripherals.", "tokens": [364, 3861, 322, 264, 4195, 1496, 576, 4648, 365, 8837, 26807, 1124, 13], "temperature": 0.0, "avg_logprob": -0.1813235896648747, "compression_ratio": 1.6076923076923078, "no_speech_prob": 0.00011791836732299998}, {"id": 80, "seek": 35464, "start": 371.64, "end": 376.52, "text": " However, these peripherals need to be in a secure world, so we also need to move part", "tokens": [2908, 11, 613, 26807, 1124, 643, 281, 312, 294, 257, 7144, 1002, 11, 370, 321, 611, 643, 281, 1286, 644], "temperature": 0.0, "avg_logprob": -0.1813235896648747, "compression_ratio": 1.6076923076923078, "no_speech_prob": 0.00011791836732299998}, {"id": 81, "seek": 35464, "start": 376.52, "end": 378.24, "text": " of the driver into the secure world.", "tokens": [295, 264, 6787, 666, 264, 7144, 1002, 13], "temperature": 0.0, "avg_logprob": -0.1813235896648747, "compression_ratio": 1.6076923076923078, "no_speech_prob": 0.00011791836732299998}, {"id": 82, "seek": 35464, "start": 378.24, "end": 381.68, "text": " So this is called driver splitting often.", "tokens": [407, 341, 307, 1219, 6787, 30348, 2049, 13], "temperature": 0.0, "avg_logprob": -0.1813235896648747, "compression_ratio": 1.6076923076923078, "no_speech_prob": 0.00011791836732299998}, {"id": 83, "seek": 38168, "start": 381.68, "end": 387.2, "text": " We basically introduce a secure driver in the secure world at kernel level, which is", "tokens": [492, 1936, 5366, 257, 7144, 6787, 294, 264, 7144, 1002, 412, 28256, 1496, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.14121541311574537, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.00021526585624087602}, {"id": 84, "seek": 38168, "start": 387.2, "end": 391.08, "text": " the liaison between the normal world and the peripheral.", "tokens": [264, 49431, 1296, 264, 2710, 1002, 293, 264, 40235, 13], "temperature": 0.0, "avg_logprob": -0.14121541311574537, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.00021526585624087602}, {"id": 85, "seek": 38168, "start": 391.08, "end": 400.24, "text": " So this secure driver then to keep the developer efforts minimal should not contain a lot.", "tokens": [407, 341, 7144, 6787, 550, 281, 1066, 264, 10754, 6484, 13206, 820, 406, 5304, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.14121541311574537, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.00021526585624087602}, {"id": 86, "seek": 38168, "start": 400.24, "end": 401.48, "text": " In fact, very little.", "tokens": [682, 1186, 11, 588, 707, 13], "temperature": 0.0, "avg_logprob": -0.14121541311574537, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.00021526585624087602}, {"id": 87, "seek": 38168, "start": 401.48, "end": 406.28000000000003, "text": " Only hardware accesses can be put in a secure driver, but you can also put some security", "tokens": [5686, 8837, 2105, 279, 393, 312, 829, 294, 257, 7144, 6787, 11, 457, 291, 393, 611, 829, 512, 3825], "temperature": 0.0, "avg_logprob": -0.14121541311574537, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.00021526585624087602}, {"id": 88, "seek": 38168, "start": 406.28000000000003, "end": 407.88, "text": " policies in there.", "tokens": [7657, 294, 456, 13], "temperature": 0.0, "avg_logprob": -0.14121541311574537, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.00021526585624087602}, {"id": 89, "seek": 40788, "start": 407.88, "end": 412.0, "text": " So for example, if a user application in a normal world wants to read something, it", "tokens": [407, 337, 1365, 11, 498, 257, 4195, 3861, 294, 257, 2710, 1002, 2738, 281, 1401, 746, 11, 309], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 90, "seek": 40788, "start": 412.0, "end": 413.0, "text": " will get allowed.", "tokens": [486, 483, 4350, 13], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 91, "seek": 40788, "start": 413.0, "end": 418.36, "text": " But if it isn't allowed, for example, to disable the peripheral, the secure driver", "tokens": [583, 498, 309, 1943, 380, 4350, 11, 337, 1365, 11, 281, 28362, 264, 40235, 11, 264, 7144, 6787], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 92, "seek": 40788, "start": 418.36, "end": 423.88, "text": " is able to just stop the request and nothing will happen.", "tokens": [307, 1075, 281, 445, 1590, 264, 5308, 293, 1825, 486, 1051, 13], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 93, "seek": 40788, "start": 423.88, "end": 430.44, "text": " The secure driver may also include some logic to share the access between the normal and", "tokens": [440, 7144, 6787, 815, 611, 4090, 512, 9952, 281, 2073, 264, 2105, 1296, 264, 2710, 293], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 94, "seek": 40788, "start": 430.44, "end": 431.44, "text": " the secure world.", "tokens": [264, 7144, 1002, 13], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 95, "seek": 40788, "start": 431.44, "end": 436.4, "text": " For example, if you have a screen as a peripheral, the secure world's content of the screen", "tokens": [1171, 1365, 11, 498, 291, 362, 257, 2568, 382, 257, 40235, 11, 264, 7144, 1002, 311, 2701, 295, 264, 2568], "temperature": 0.0, "avg_logprob": -0.13590604287606697, "compression_ratio": 1.822314049586777, "no_speech_prob": 0.0001895868481369689}, {"id": 96, "seek": 43640, "start": 436.4, "end": 440.32, "text": " will always be displayed on top of the normal world content.", "tokens": [486, 1009, 312, 16372, 322, 1192, 295, 264, 2710, 1002, 2701, 13], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 97, "seek": 43640, "start": 440.32, "end": 446.4, "text": " And the nice thing about creating such a system is indeed only the developers of the driver", "tokens": [400, 264, 1481, 551, 466, 4084, 1270, 257, 1185, 307, 6451, 787, 264, 8849, 295, 264, 6787], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 98, "seek": 43640, "start": 446.4, "end": 450.32, "text": " at the kernel level in the normal world need to care about any changes made to the system.", "tokens": [412, 264, 28256, 1496, 294, 264, 2710, 1002, 643, 281, 1127, 466, 604, 2962, 1027, 281, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 99, "seek": 43640, "start": 450.32, "end": 454.28, "text": " As far as the user level applications know, nothing has changed, which is very useful", "tokens": [1018, 1400, 382, 264, 4195, 1496, 5821, 458, 11, 1825, 575, 3105, 11, 597, 307, 588, 4420], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 100, "seek": 43640, "start": 454.28, "end": 457.15999999999997, "text": " for industry as well.", "tokens": [337, 3518, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 101, "seek": 43640, "start": 457.15999999999997, "end": 462.23999999999995, "text": " Of course, you need read and write access, and this is given by a set of APIs included", "tokens": [2720, 1164, 11, 291, 643, 1401, 293, 2464, 2105, 11, 293, 341, 307, 2212, 538, 257, 992, 295, 21445, 5556], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 102, "seek": 43640, "start": 462.23999999999995, "end": 465.52, "text": " in OptiOS called the global platform APIs.", "tokens": [294, 21455, 72, 4367, 1219, 264, 4338, 3663, 21445, 13], "temperature": 0.0, "avg_logprob": -0.13057798352734795, "compression_ratio": 1.693661971830986, "no_speech_prob": 0.000190128615940921}, {"id": 103, "seek": 46552, "start": 465.52, "end": 473.15999999999997, "text": " These are a standardized set of function calls to facilitate calling into the secure world,", "tokens": [1981, 366, 257, 31677, 992, 295, 2445, 5498, 281, 20207, 5141, 666, 264, 7144, 1002, 11], "temperature": 0.0, "avg_logprob": -0.16195965838688675, "compression_ratio": 1.624, "no_speech_prob": 0.0003591613203752786}, {"id": 104, "seek": 46552, "start": 473.15999999999997, "end": 475.08, "text": " providing data and getting data back.", "tokens": [6530, 1412, 293, 1242, 1412, 646, 13], "temperature": 0.0, "avg_logprob": -0.16195965838688675, "compression_ratio": 1.624, "no_speech_prob": 0.0003591613203752786}, {"id": 105, "seek": 46552, "start": 475.08, "end": 480.76, "text": " We've measured this to take on average 123 microseconds, which is plenty fast enough", "tokens": [492, 600, 12690, 341, 281, 747, 322, 4274, 34466, 3123, 37841, 28750, 11, 597, 307, 7140, 2370, 1547], "temperature": 0.0, "avg_logprob": -0.16195965838688675, "compression_ratio": 1.624, "no_speech_prob": 0.0003591613203752786}, {"id": 106, "seek": 46552, "start": 480.76, "end": 482.35999999999996, "text": " for industry.", "tokens": [337, 3518, 13], "temperature": 0.0, "avg_logprob": -0.16195965838688675, "compression_ratio": 1.624, "no_speech_prob": 0.0003591613203752786}, {"id": 107, "seek": 46552, "start": 482.35999999999996, "end": 486.68, "text": " But of course, secure peripherals might also want to return an interrupt, might trigger", "tokens": [583, 295, 1164, 11, 7144, 26807, 1124, 1062, 611, 528, 281, 2736, 364, 12729, 11, 1062, 7875], "temperature": 0.0, "avg_logprob": -0.16195965838688675, "compression_ratio": 1.624, "no_speech_prob": 0.0003591613203752786}, {"id": 108, "seek": 46552, "start": 486.68, "end": 491.35999999999996, "text": " an interrupt, and this interrupt must also be returned at some point to the normal world.", "tokens": [364, 12729, 11, 293, 341, 12729, 1633, 611, 312, 8752, 412, 512, 935, 281, 264, 2710, 1002, 13], "temperature": 0.0, "avg_logprob": -0.16195965838688675, "compression_ratio": 1.624, "no_speech_prob": 0.0003591613203752786}, {"id": 109, "seek": 49136, "start": 491.36, "end": 496.16, "text": " So for this, we developed a notifier system that consists of two parts, one in the normal", "tokens": [407, 337, 341, 11, 321, 4743, 257, 406, 9902, 1185, 300, 14689, 295, 732, 3166, 11, 472, 294, 264, 2710], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 110, "seek": 49136, "start": 496.16, "end": 498.16, "text": " world, one in the secure world.", "tokens": [1002, 11, 472, 294, 264, 7144, 1002, 13], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 111, "seek": 49136, "start": 498.16, "end": 503.24, "text": " So what happens is that if an interrupt is triggered at the peripheral, it will get forwarded", "tokens": [407, 437, 2314, 307, 300, 498, 364, 12729, 307, 21710, 412, 264, 40235, 11, 309, 486, 483, 2128, 292], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 112, "seek": 49136, "start": 503.24, "end": 506.16, "text": " to the secure world notifier by the secure driver.", "tokens": [281, 264, 7144, 1002, 406, 9902, 538, 264, 7144, 6787, 13], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 113, "seek": 49136, "start": 506.16, "end": 509.76, "text": " Then the secure world notifier will trigger an interrupt in the normal world, which will", "tokens": [1396, 264, 7144, 1002, 406, 9902, 486, 7875, 364, 12729, 294, 264, 2710, 1002, 11, 597, 486], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 114, "seek": 49136, "start": 509.76, "end": 514.6800000000001, "text": " be caught by the normal world notifier, and this will forward it to any driver in the", "tokens": [312, 5415, 538, 264, 2710, 1002, 406, 9902, 11, 293, 341, 486, 2128, 309, 281, 604, 6787, 294, 264], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 115, "seek": 49136, "start": 514.6800000000001, "end": 518.28, "text": " normal world that wants to know if such an interrupt has happened using a published", "tokens": [2710, 1002, 300, 2738, 281, 458, 498, 1270, 364, 12729, 575, 2011, 1228, 257, 6572], "temperature": 0.0, "avg_logprob": -0.10956662750244141, "compression_ratio": 2.142857142857143, "no_speech_prob": 8.04914379841648e-05}, {"id": 116, "seek": 51828, "start": 518.28, "end": 521.92, "text": " subscribe system.", "tokens": [3022, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 117, "seek": 51828, "start": 521.92, "end": 527.68, "text": " So now we solved all the three requirements, but then we got on to thinking, what can we", "tokens": [407, 586, 321, 13041, 439, 264, 1045, 7728, 11, 457, 550, 321, 658, 322, 281, 1953, 11, 437, 393, 321], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 118, "seek": 51828, "start": 527.68, "end": 528.68, "text": " do with this?", "tokens": [360, 365, 341, 30], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 119, "seek": 51828, "start": 528.68, "end": 532.88, "text": " So we developed a use case where we tried to monitor the Linux kernel running state", "tokens": [407, 321, 4743, 257, 764, 1389, 689, 321, 3031, 281, 6002, 264, 18734, 28256, 2614, 1785], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 120, "seek": 51828, "start": 532.88, "end": 534.92, "text": " if it has crashed or not.", "tokens": [498, 309, 575, 24190, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 121, "seek": 51828, "start": 534.92, "end": 538.04, "text": " So we adopted a very simple system to do this.", "tokens": [407, 321, 12175, 257, 588, 2199, 1185, 281, 360, 341, 13], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 122, "seek": 51828, "start": 538.04, "end": 543.3199999999999, "text": " We basically challenged the Linux kernel using a notification from the system we just built,", "tokens": [492, 1936, 17737, 264, 18734, 28256, 1228, 257, 11554, 490, 264, 1185, 321, 445, 3094, 11], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 123, "seek": 51828, "start": 543.3199999999999, "end": 546.92, "text": " and we expect the response back in a certain time frame.", "tokens": [293, 321, 2066, 264, 4134, 646, 294, 257, 1629, 565, 3920, 13], "temperature": 0.0, "avg_logprob": -0.1576386389331283, "compression_ratio": 1.6423076923076922, "no_speech_prob": 0.0007111987215466797}, {"id": 124, "seek": 54692, "start": 546.92, "end": 549.8, "text": " If we got the response back, Linux is alive, otherwise it's not.", "tokens": [759, 321, 658, 264, 4134, 646, 11, 18734, 307, 5465, 11, 5911, 309, 311, 406, 13], "temperature": 0.0, "avg_logprob": -0.1741062125774345, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.00023291366233024746}, {"id": 125, "seek": 54692, "start": 549.8, "end": 553.0799999999999, "text": " It's as simple as that.", "tokens": [467, 311, 382, 2199, 382, 300, 13], "temperature": 0.0, "avg_logprob": -0.1741062125774345, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.00023291366233024746}, {"id": 126, "seek": 54692, "start": 553.0799999999999, "end": 558.1999999999999, "text": " The things that we can do with this is however more interesting.", "tokens": [440, 721, 300, 321, 393, 360, 365, 341, 307, 4461, 544, 1880, 13], "temperature": 0.0, "avg_logprob": -0.1741062125774345, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.00023291366233024746}, {"id": 127, "seek": 54692, "start": 558.1999999999999, "end": 563.4399999999999, "text": " Whenever Linux doesn't respond in time and we know it's dead, we can, from the secure", "tokens": [14159, 18734, 1177, 380, 4196, 294, 565, 293, 321, 458, 309, 311, 3116, 11, 321, 393, 11, 490, 264, 7144], "temperature": 0.0, "avg_logprob": -0.1741062125774345, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.00023291366233024746}, {"id": 128, "seek": 54692, "start": 563.4399999999999, "end": 570.3199999999999, "text": " world, we can dump the kernel state, normal world memory, and we can even reboot Linux", "tokens": [1002, 11, 321, 393, 11430, 264, 28256, 1785, 11, 2710, 1002, 4675, 11, 293, 321, 393, 754, 33818, 18734], "temperature": 0.0, "avg_logprob": -0.1741062125774345, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.00023291366233024746}, {"id": 129, "seek": 54692, "start": 570.3199999999999, "end": 575.92, "text": " kernel while still keeping the safety critical applications running.", "tokens": [28256, 1339, 920, 5145, 264, 4514, 4924, 5821, 2614, 13], "temperature": 0.0, "avg_logprob": -0.1741062125774345, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.00023291366233024746}, {"id": 130, "seek": 57592, "start": 575.92, "end": 576.92, "text": " So we did that.", "tokens": [407, 321, 630, 300, 13], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 131, "seek": 57592, "start": 576.92, "end": 579.56, "text": " It will show a demo where we reboot Linux.", "tokens": [467, 486, 855, 257, 10723, 689, 321, 33818, 18734, 13], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 132, "seek": 57592, "start": 579.56, "end": 584.88, "text": " So whenever the monitor in the secure world notices that Linux kernel is dead.", "tokens": [407, 5699, 264, 6002, 294, 264, 7144, 1002, 32978, 300, 18734, 28256, 307, 3116, 13], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 133, "seek": 57592, "start": 584.88, "end": 590.68, "text": " So first, to go back a bit, first we store the kernel image at boot time because then", "tokens": [407, 700, 11, 281, 352, 646, 257, 857, 11, 700, 321, 3531, 264, 28256, 3256, 412, 11450, 565, 570, 550], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 134, "seek": 57592, "start": 590.68, "end": 594.4799999999999, "text": " we know that Linux is in a good state and it's up and running because we need access", "tokens": [321, 458, 300, 18734, 307, 294, 257, 665, 1785, 293, 309, 311, 493, 293, 2614, 570, 321, 643, 2105], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 135, "seek": 57592, "start": 594.4799999999999, "end": 595.88, "text": " to the normal world file system.", "tokens": [281, 264, 2710, 1002, 3991, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 136, "seek": 57592, "start": 595.88, "end": 599.5999999999999, "text": " So we get the image, we store it in the secure world, we protect it from normal world memory", "tokens": [407, 321, 483, 264, 3256, 11, 321, 3531, 309, 294, 264, 7144, 1002, 11, 321, 2371, 309, 490, 2710, 1002, 4675], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 137, "seek": 57592, "start": 599.5999999999999, "end": 604.68, "text": " so that no access from normal world is possible anymore.", "tokens": [370, 300, 572, 2105, 490, 2710, 1002, 307, 1944, 3602, 13], "temperature": 0.0, "avg_logprob": -0.1340675051250155, "compression_ratio": 1.8812260536398469, "no_speech_prob": 0.0001546839630464092}, {"id": 138, "seek": 60468, "start": 604.68, "end": 607.0799999999999, "text": " So then when Linux crashes, we notice this.", "tokens": [407, 550, 562, 18734, 28642, 11, 321, 3449, 341, 13], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 139, "seek": 60468, "start": 607.0799999999999, "end": 612.28, "text": " We disable all the cores because we are on a multi-core system.", "tokens": [492, 28362, 439, 264, 24826, 570, 321, 366, 322, 257, 4825, 12, 12352, 1185, 13], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 140, "seek": 60468, "start": 612.28, "end": 615.0, "text": " We disable all the cores except for our own.", "tokens": [492, 28362, 439, 264, 24826, 3993, 337, 527, 1065, 13], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 141, "seek": 60468, "start": 615.0, "end": 619.8, "text": " We write the image back again to the normal world and then we just jump to the kernel", "tokens": [492, 2464, 264, 3256, 646, 797, 281, 264, 2710, 1002, 293, 550, 321, 445, 3012, 281, 264, 28256], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 142, "seek": 60468, "start": 619.8, "end": 620.88, "text": " start address.", "tokens": [722, 2985, 13], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 143, "seek": 60468, "start": 620.88, "end": 626.9599999999999, "text": " I left some tricky things out because OptiOS needs to do some resetting of its own systems", "tokens": [286, 1411, 512, 12414, 721, 484, 570, 21455, 72, 4367, 2203, 281, 360, 512, 14322, 783, 295, 1080, 1065, 3652], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 144, "seek": 60468, "start": 626.9599999999999, "end": 630.04, "text": " as well but that's not that important.", "tokens": [382, 731, 457, 300, 311, 406, 300, 1021, 13], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 145, "seek": 60468, "start": 630.04, "end": 633.52, "text": " So I have a demo that basically demonstrates this.", "tokens": [407, 286, 362, 257, 10723, 300, 1936, 31034, 341, 13], "temperature": 0.0, "avg_logprob": -0.142455480794991, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.00024781792308203876}, {"id": 146, "seek": 63352, "start": 633.52, "end": 638.1999999999999, "text": " So again on the left, if you can see it clearly, we have the normal world, isn't very important", "tokens": [407, 797, 322, 264, 1411, 11, 498, 291, 393, 536, 309, 4448, 11, 321, 362, 264, 2710, 1002, 11, 1943, 380, 588, 1021], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 147, "seek": 63352, "start": 638.1999999999999, "end": 639.1999999999999, "text": " what you can see there.", "tokens": [437, 291, 393, 536, 456, 13], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 148, "seek": 63352, "start": 639.1999999999999, "end": 641.64, "text": " The most important thing is on the right in the secure world.", "tokens": [440, 881, 1021, 551, 307, 322, 264, 558, 294, 264, 7144, 1002, 13], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 149, "seek": 63352, "start": 641.64, "end": 647.6, "text": " You can see on the top that that's the output that the monitor is giving every 500 milliseconds.", "tokens": [509, 393, 536, 322, 264, 1192, 300, 300, 311, 264, 5598, 300, 264, 6002, 307, 2902, 633, 5923, 34184, 13], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 150, "seek": 63352, "start": 647.6, "end": 651.88, "text": " So every 500 milliseconds it's selling a challenge to Linux and getting a response back.", "tokens": [407, 633, 5923, 34184, 309, 311, 6511, 257, 3430, 281, 18734, 293, 1242, 257, 4134, 646, 13], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 151, "seek": 63352, "start": 651.88, "end": 654.56, "text": " If it's a response, it's obviously green.", "tokens": [759, 309, 311, 257, 4134, 11, 309, 311, 2745, 3092, 13], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 152, "seek": 63352, "start": 654.56, "end": 663.1999999999999, "text": " So now if we go into Linux and we make or we cause a crash in the system.", "tokens": [407, 586, 498, 321, 352, 666, 18734, 293, 321, 652, 420, 321, 3082, 257, 8252, 294, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.12580028533935547, "compression_ratio": 1.8022388059701493, "no_speech_prob": 0.0003246206615585834}, {"id": 153, "seek": 66320, "start": 663.2, "end": 665.32, "text": " Very simple crash kernel panic.", "tokens": [4372, 2199, 8252, 28256, 14783, 13], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 154, "seek": 66320, "start": 665.32, "end": 668.2800000000001, "text": " We immediately see that the monitor notices this.", "tokens": [492, 4258, 536, 300, 264, 6002, 32978, 341, 13], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 155, "seek": 66320, "start": 668.2800000000001, "end": 674.0, "text": " It will start rebooting process and keep in mind that the secure world is still executing", "tokens": [467, 486, 722, 26802, 17001, 1399, 293, 1066, 294, 1575, 300, 264, 7144, 1002, 307, 920, 32368], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 156, "seek": 66320, "start": 674.0, "end": 678.08, "text": " its task in a real-time fashion with a given known latency.", "tokens": [1080, 5633, 294, 257, 957, 12, 3766, 6700, 365, 257, 2212, 2570, 27043, 13], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 157, "seek": 66320, "start": 678.08, "end": 682.9200000000001, "text": " And after Linux has rebooted, we again see that the monitor notices Linux is alive.", "tokens": [400, 934, 18734, 575, 26802, 23325, 11, 321, 797, 536, 300, 264, 6002, 32978, 18734, 307, 5465, 13], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 158, "seek": 66320, "start": 682.9200000000001, "end": 690.88, "text": " And if after we wait a bit, we get again a shell which we can use like any other Linux", "tokens": [400, 498, 934, 321, 1699, 257, 857, 11, 321, 483, 797, 257, 8720, 597, 321, 393, 764, 411, 604, 661, 18734], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 159, "seek": 66320, "start": 690.88, "end": 691.88, "text": " system.", "tokens": [1185, 13], "temperature": 0.0, "avg_logprob": -0.1672537535139658, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0003143644134979695}, {"id": 160, "seek": 69188, "start": 691.88, "end": 696.76, "text": " Yeah, the demo.", "tokens": [865, 11, 264, 10723, 13], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 161, "seek": 69188, "start": 696.76, "end": 702.08, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 162, "seek": 69188, "start": 702.08, "end": 705.28, "text": " So then to conclude, again, a research question.", "tokens": [407, 550, 281, 16886, 11, 797, 11, 257, 2132, 1168, 13], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 163, "seek": 69188, "start": 705.28, "end": 708.8, "text": " Can we ensure availability for safety-critical applications while running a commodity-OS", "tokens": [1664, 321, 5586, 17945, 337, 4514, 12, 32255, 804, 5821, 1339, 2614, 257, 29125, 12, 4367], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 164, "seek": 69188, "start": 708.8, "end": 711.32, "text": " on the same system with little developer impact?", "tokens": [322, 264, 912, 1185, 365, 707, 10754, 2712, 30], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 165, "seek": 69188, "start": 711.32, "end": 713.2, "text": " We do believe so.", "tokens": [492, 360, 1697, 370, 13], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 166, "seek": 69188, "start": 713.2, "end": 718.16, "text": " We did this by leveraging threshold isolation to isolate the critical applications.", "tokens": [492, 630, 341, 538, 32666, 14678, 16001, 281, 25660, 264, 4924, 5821, 13], "temperature": 0.0, "avg_logprob": -0.295165526561248, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.0003609825507737696}, {"id": 167, "seek": 71816, "start": 718.16, "end": 722.6, "text": " We introduced a secure scheduling system with freeRTOS.", "tokens": [492, 7268, 257, 7144, 29055, 1185, 365, 1737, 49, 51, 4367, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 168, "seek": 71816, "start": 722.6, "end": 727.3199999999999, "text": " And we introduced also a transparent peripheral sharing system.", "tokens": [400, 321, 7268, 611, 257, 12737, 40235, 5414, 1185, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 169, "seek": 71816, "start": 727.3199999999999, "end": 728.92, "text": " We have some documentation online.", "tokens": [492, 362, 512, 14333, 2950, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 170, "seek": 71816, "start": 728.92, "end": 734.3199999999999, "text": " I put it as a tutorial, but you need this board to be able to run it.", "tokens": [286, 829, 309, 382, 257, 7073, 11, 457, 291, 643, 341, 3150, 281, 312, 1075, 281, 1190, 309, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 171, "seek": 71816, "start": 734.3199999999999, "end": 736.4399999999999, "text": " So it's still ongoing research.", "tokens": [407, 309, 311, 920, 10452, 2132, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 172, "seek": 71816, "start": 736.4399999999999, "end": 742.36, "text": " And we will update this tutorial whenever we update, we get new stuff in our research.", "tokens": [400, 321, 486, 5623, 341, 7073, 5699, 321, 5623, 11, 321, 483, 777, 1507, 294, 527, 2132, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 173, "seek": 71816, "start": 742.36, "end": 745.16, "text": " You can also look at the documentation for Opti as well.", "tokens": [509, 393, 611, 574, 412, 264, 14333, 337, 21455, 72, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.17420581779857675, "compression_ratio": 1.646090534979424, "no_speech_prob": 0.00036446048761717975}, {"id": 174, "seek": 74516, "start": 745.16, "end": 748.52, "text": " And if you have any questions at any time, just contact me at this email address.", "tokens": [400, 498, 291, 362, 604, 1651, 412, 604, 565, 11, 445, 3385, 385, 412, 341, 3796, 2985, 13], "temperature": 0.0, "avg_logprob": -0.26964559555053713, "compression_ratio": 1.410071942446043, "no_speech_prob": 0.0016408293740823865}, {"id": 175, "seek": 74516, "start": 748.52, "end": 751.48, "text": " I'd be happy to answer them.", "tokens": [286, 1116, 312, 2055, 281, 1867, 552, 13], "temperature": 0.0, "avg_logprob": -0.26964559555053713, "compression_ratio": 1.410071942446043, "no_speech_prob": 0.0016408293740823865}, {"id": 176, "seek": 74516, "start": 751.48, "end": 752.48, "text": " So that was it.", "tokens": [407, 300, 390, 309, 13], "temperature": 0.0, "avg_logprob": -0.26964559555053713, "compression_ratio": 1.410071942446043, "no_speech_prob": 0.0016408293740823865}, {"id": 177, "seek": 74516, "start": 752.48, "end": 754.0799999999999, "text": " I hope you enjoyed the presentation.", "tokens": [286, 1454, 291, 4626, 264, 5860, 13], "temperature": 0.0, "avg_logprob": -0.26964559555053713, "compression_ratio": 1.410071942446043, "no_speech_prob": 0.0016408293740823865}, {"id": 178, "seek": 74516, "start": 754.0799999999999, "end": 756.0799999999999, "text": " And if you have questions.", "tokens": [400, 498, 291, 362, 1651, 13], "temperature": 0.0, "avg_logprob": -0.26964559555053713, "compression_ratio": 1.410071942446043, "no_speech_prob": 0.0016408293740823865}, {"id": 179, "seek": 74516, "start": 756.0799999999999, "end": 757.0799999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.26964559555053713, "compression_ratio": 1.410071942446043, "no_speech_prob": 0.0016408293740823865}, {"id": 180, "seek": 75708, "start": 757.08, "end": 776.84, "text": " So one of the problems I see with this approach is that you move the device to the secure", "tokens": [407, 472, 295, 264, 2740, 286, 536, 365, 341, 3109, 307, 300, 291, 1286, 264, 4302, 281, 264, 7144], "temperature": 0.0, "avg_logprob": -0.3370622347478997, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.0035446351394057274}, {"id": 181, "seek": 75708, "start": 776.84, "end": 777.84, "text": " world.", "tokens": [1002, 13], "temperature": 0.0, "avg_logprob": -0.3370622347478997, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.0035446351394057274}, {"id": 182, "seek": 75708, "start": 777.84, "end": 778.84, "text": " They basically have a seam layer to make the cabinet talk to the device you move to the", "tokens": [814, 1936, 362, 257, 12337, 4583, 281, 652, 264, 15188, 751, 281, 264, 4302, 291, 1286, 281, 264], "temperature": 0.0, "avg_logprob": -0.3370622347478997, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.0035446351394057274}, {"id": 183, "seek": 75708, "start": 778.84, "end": 779.84, "text": " secure world.", "tokens": [7144, 1002, 13], "temperature": 0.0, "avg_logprob": -0.3370622347478997, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.0035446351394057274}, {"id": 184, "seek": 75708, "start": 779.84, "end": 780.84, "text": " The problem is, we've been discussing this for a while, but the problem is you expose", "tokens": [440, 1154, 307, 11, 321, 600, 668, 10850, 341, 337, 257, 1339, 11, 457, 264, 1154, 307, 291, 19219], "temperature": 0.0, "avg_logprob": -0.3370622347478997, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.0035446351394057274}, {"id": 185, "seek": 78084, "start": 780.84, "end": 787.84, "text": " a bigger back surface in both the, which is the drivers, basically breaking the main assumption", "tokens": [257, 3801, 646, 3753, 294, 1293, 264, 11, 597, 307, 264, 11590, 11, 1936, 7697, 264, 2135, 15302], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 186, "seek": 78084, "start": 787.84, "end": 790.84, "text": " in opting that we don't trust Linus, right?", "tokens": [294, 2427, 278, 300, 321, 500, 380, 3361, 9355, 301, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 187, "seek": 78084, "start": 790.84, "end": 796.84, "text": " So you have a buffer that fits into your driver and you kind of start to trust that buffer", "tokens": [407, 291, 362, 257, 21762, 300, 9001, 666, 428, 6787, 293, 291, 733, 295, 722, 281, 3361, 300, 21762], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 188, "seek": 78084, "start": 796.84, "end": 802.84, "text": " because it ends up being hardware, so there needs to be some kind of arbitration or rationalization", "tokens": [570, 309, 5314, 493, 885, 8837, 11, 370, 456, 2203, 281, 312, 512, 733, 295, 14931, 2405, 420, 15090, 2144], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 189, "seek": 78084, "start": 802.84, "end": 804.84, "text": " process during that thing.", "tokens": [1399, 1830, 300, 551, 13], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 190, "seek": 78084, "start": 804.84, "end": 806.84, "text": " And how do you thought about this?", "tokens": [400, 577, 360, 291, 1194, 466, 341, 30], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 191, "seek": 78084, "start": 806.84, "end": 807.84, "text": " Yeah, of course.", "tokens": [865, 11, 295, 1164, 13], "temperature": 0.0, "avg_logprob": -0.5039288814251239, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.002686099847778678}, {"id": 192, "seek": 80784, "start": 807.84, "end": 812.84, "text": " It was indeed that if you move a driver into the secure world, we increase the attack surface", "tokens": [467, 390, 6451, 300, 498, 291, 1286, 257, 6787, 666, 264, 7144, 1002, 11, 321, 3488, 264, 2690, 3753], "temperature": 0.0, "avg_logprob": -0.20953084804393626, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.000742571079172194}, {"id": 193, "seek": 80784, "start": 812.84, "end": 820.84, "text": " considerably, of course, and we solved this, or we thought about it indeed, and we came", "tokens": [31308, 11, 295, 1164, 11, 293, 321, 13041, 341, 11, 420, 321, 1194, 466, 309, 6451, 11, 293, 321, 1361], "temperature": 0.0, "avg_logprob": -0.20953084804393626, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.000742571079172194}, {"id": 194, "seek": 80784, "start": 820.84, "end": 823.84, "text": " to the conclusion that it is indeed a problem.", "tokens": [281, 264, 10063, 300, 309, 307, 6451, 257, 1154, 13], "temperature": 0.0, "avg_logprob": -0.20953084804393626, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.000742571079172194}, {"id": 195, "seek": 80784, "start": 823.84, "end": 828.5600000000001, "text": " However, if you get secure policies, which you know in advance, so for example, we know", "tokens": [2908, 11, 498, 291, 483, 7144, 7657, 11, 597, 291, 458, 294, 7295, 11, 370, 337, 1365, 11, 321, 458], "temperature": 0.0, "avg_logprob": -0.20953084804393626, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.000742571079172194}, {"id": 196, "seek": 80784, "start": 828.5600000000001, "end": 833.2800000000001, "text": " that a peripheral can be read only by the normal world, but not written because of course", "tokens": [300, 257, 40235, 393, 312, 1401, 787, 538, 264, 2710, 1002, 11, 457, 406, 3720, 570, 295, 1164], "temperature": 0.0, "avg_logprob": -0.20953084804393626, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.000742571079172194}, {"id": 197, "seek": 80784, "start": 833.2800000000001, "end": 835.5600000000001, "text": " you designed a system like so.", "tokens": [291, 4761, 257, 1185, 411, 370, 13], "temperature": 0.0, "avg_logprob": -0.20953084804393626, "compression_ratio": 1.7137254901960783, "no_speech_prob": 0.000742571079172194}, {"id": 198, "seek": 83556, "start": 835.56, "end": 841.88, "text": " You can see, based on the actual requests that are sent by the normal world, if it is", "tokens": [509, 393, 536, 11, 2361, 322, 264, 3539, 12475, 300, 366, 2279, 538, 264, 2710, 1002, 11, 498, 309, 307], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 199, "seek": 83556, "start": 841.88, "end": 842.88, "text": " allowed or not.", "tokens": [4350, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 200, "seek": 83556, "start": 842.88, "end": 846.56, "text": " So if it's, for example, a write request to an address, we know we cannot allow this.", "tokens": [407, 498, 309, 311, 11, 337, 1365, 11, 257, 2464, 5308, 281, 364, 2985, 11, 321, 458, 321, 2644, 2089, 341, 13], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 201, "seek": 83556, "start": 846.56, "end": 852.56, "text": " However, if it's a read address, we know we can just execute it and return the data.", "tokens": [2908, 11, 498, 309, 311, 257, 1401, 2985, 11, 321, 458, 321, 393, 445, 14483, 309, 293, 2736, 264, 1412, 13], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 202, "seek": 83556, "start": 852.56, "end": 855.56, "text": " We have a hardware vendor who will just listen and have a hardware that responds to do memory", "tokens": [492, 362, 257, 8837, 24321, 567, 486, 445, 2140, 293, 362, 257, 8837, 300, 27331, 281, 360, 4675], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 203, "seek": 83556, "start": 855.56, "end": 857.56, "text": " address cases and you should be fine.", "tokens": [2985, 3331, 293, 291, 820, 312, 2489, 13], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 204, "seek": 83556, "start": 857.56, "end": 860.56, "text": " Yeah, but that's not the case, sadly enough.", "tokens": [865, 11, 457, 300, 311, 406, 264, 1389, 11, 22023, 1547, 13], "temperature": 0.0, "avg_logprob": -0.258307937748176, "compression_ratio": 1.7403100775193798, "no_speech_prob": 0.0006693105679005384}, {"id": 205, "seek": 86056, "start": 860.56, "end": 866.56, "text": " The thing is that there's an RFC that we haven't been able to reason about it, which", "tokens": [440, 551, 307, 300, 456, 311, 364, 497, 18671, 300, 321, 2378, 380, 668, 1075, 281, 1778, 466, 309, 11, 597], "temperature": 0.0, "avg_logprob": -0.2604954301818343, "compression_ratio": 1.667870036101083, "no_speech_prob": 0.008582568727433681}, {"id": 206, "seek": 86056, "start": 866.56, "end": 870.56, "text": " we don't have a watchbook like you have an object that we do have is that we, once the", "tokens": [321, 500, 380, 362, 257, 1159, 2939, 411, 291, 362, 364, 2657, 300, 321, 360, 362, 307, 300, 321, 11, 1564, 264], "temperature": 0.0, "avg_logprob": -0.2604954301818343, "compression_ratio": 1.667870036101083, "no_speech_prob": 0.008582568727433681}, {"id": 207, "seek": 86056, "start": 870.56, "end": 873.56, "text": " camera comes up, we measure portions of the text area of the camera.", "tokens": [2799, 1487, 493, 11, 321, 3481, 25070, 295, 264, 2487, 1859, 295, 264, 2799, 13], "temperature": 0.0, "avg_logprob": -0.2604954301818343, "compression_ratio": 1.667870036101083, "no_speech_prob": 0.008582568727433681}, {"id": 208, "seek": 86056, "start": 873.56, "end": 878.56, "text": " We take a text and then we periodically randomly check if that hasn't taken.", "tokens": [492, 747, 257, 2487, 293, 550, 321, 38916, 16979, 1520, 498, 300, 6132, 380, 2726, 13], "temperature": 0.0, "avg_logprob": -0.2604954301818343, "compression_ratio": 1.667870036101083, "no_speech_prob": 0.008582568727433681}, {"id": 209, "seek": 86056, "start": 878.56, "end": 884.56, "text": " Now, arguably, that's not a very strong attack against recent, you know, rocks and stuff", "tokens": [823, 11, 26771, 11, 300, 311, 406, 257, 588, 2068, 2690, 1970, 5162, 11, 291, 458, 11, 10989, 293, 1507], "temperature": 0.0, "avg_logprob": -0.2604954301818343, "compression_ratio": 1.667870036101083, "no_speech_prob": 0.008582568727433681}, {"id": 210, "seek": 86056, "start": 884.56, "end": 887.56, "text": " like that, but you should check that out at some point.", "tokens": [411, 300, 11, 457, 291, 820, 1520, 300, 484, 412, 512, 935, 13], "temperature": 0.0, "avg_logprob": -0.2604954301818343, "compression_ratio": 1.667870036101083, "no_speech_prob": 0.008582568727433681}, {"id": 211, "seek": 88756, "start": 887.56, "end": 892.56, "text": " Yeah, we are considering this for other research projects that we are running at the same time.", "tokens": [865, 11, 321, 366, 8079, 341, 337, 661, 2132, 4455, 300, 321, 366, 2614, 412, 264, 912, 565, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 212, "seek": 88756, "start": 892.56, "end": 894.56, "text": " It's a question that keeps coming back.", "tokens": [467, 311, 257, 1168, 300, 5965, 1348, 646, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 213, "seek": 88756, "start": 894.56, "end": 899.56, "text": " How do we authenticate the normal world or the Linux kernel to the secure world?", "tokens": [1012, 360, 321, 9214, 8700, 264, 2710, 1002, 420, 264, 18734, 28256, 281, 264, 7144, 1002, 30], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 214, "seek": 88756, "start": 899.56, "end": 901.56, "text": " How do we make sure that it is running correctly?", "tokens": [1012, 360, 321, 652, 988, 300, 309, 307, 2614, 8944, 30], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 215, "seek": 88756, "start": 901.56, "end": 905.56, "text": " Because the kernel, when it comes up, we basically change the bounce of the muscle code.", "tokens": [1436, 264, 28256, 11, 562, 309, 1487, 493, 11, 321, 1936, 1319, 264, 15894, 295, 264, 8679, 3089, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 216, "seek": 88756, "start": 905.56, "end": 906.56, "text": " Yeah, indeed.", "tokens": [865, 11, 6451, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 217, "seek": 88756, "start": 906.56, "end": 907.56, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 218, "seek": 88756, "start": 907.56, "end": 910.56, "text": " After some point, in this case, it's arguably trust what happens.", "tokens": [2381, 512, 935, 11, 294, 341, 1389, 11, 309, 311, 26771, 3361, 437, 2314, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 219, "seek": 88756, "start": 910.56, "end": 911.56, "text": " Yeah, indeed.", "tokens": [865, 11, 6451, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 220, "seek": 88756, "start": 911.56, "end": 916.56, "text": " And there is some research going into attestation, so not remote attestation but locally.", "tokens": [400, 456, 307, 512, 2132, 516, 666, 951, 377, 399, 11, 370, 406, 8607, 951, 377, 399, 457, 16143, 13], "temperature": 0.0, "avg_logprob": -0.15908888695945203, "compression_ratio": 1.7637540453074434, "no_speech_prob": 0.0014485634164884686}, {"id": 221, "seek": 91656, "start": 916.56, "end": 922.56, "text": " And also some continuous attestation, but it's still an Linux kernel, which is very difficult to attestate.", "tokens": [400, 611, 512, 10957, 951, 377, 399, 11, 457, 309, 311, 920, 364, 18734, 28256, 11, 597, 307, 588, 2252, 281, 951, 377, 473, 13], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 222, "seek": 91656, "start": 922.56, "end": 924.56, "text": " The last thing is the kernel itself, right?", "tokens": [440, 1036, 551, 307, 264, 28256, 2564, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 223, "seek": 91656, "start": 924.56, "end": 930.56, "text": " So when you write it to memory and then reboot it, you need to have some kind of cryptographic", "tokens": [407, 562, 291, 2464, 309, 281, 4675, 293, 550, 33818, 309, 11, 291, 643, 281, 362, 512, 733, 295, 9844, 12295], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 224, "seek": 91656, "start": 930.56, "end": 931.56, "text": " set, right?", "tokens": [992, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 225, "seek": 91656, "start": 931.56, "end": 935.56, "text": " Because the trending in the whole chain of trust is, you know, you boot with the effect", "tokens": [1436, 264, 28692, 294, 264, 1379, 5021, 295, 3361, 307, 11, 291, 458, 11, 291, 11450, 365, 264, 1802], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 226, "seek": 91656, "start": 935.56, "end": 938.56, "text": " that verifies your kernel and then you outestate it.", "tokens": [300, 1306, 11221, 428, 28256, 293, 550, 291, 484, 377, 473, 309, 13], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 227, "seek": 91656, "start": 938.56, "end": 945.56, "text": " But if you load the kernel and down to an entry point, first of all, you need to cryptographic", "tokens": [583, 498, 291, 3677, 264, 28256, 293, 760, 281, 364, 8729, 935, 11, 700, 295, 439, 11, 291, 643, 281, 9844, 12295], "temperature": 0.0, "avg_logprob": -0.19418359903188853, "compression_ratio": 1.7706093189964158, "no_speech_prob": 0.0012509766966104507}, {"id": 228, "seek": 94556, "start": 945.56, "end": 946.56, "text": " verify what you're doing.", "tokens": [16888, 437, 291, 434, 884, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 229, "seek": 94556, "start": 946.56, "end": 947.56, "text": " Yeah, of course, yeah.", "tokens": [865, 11, 295, 1164, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 230, "seek": 94556, "start": 947.56, "end": 952.56, "text": " And there's been some code and development going into EFI where if you down to the kernel", "tokens": [400, 456, 311, 668, 512, 3089, 293, 3250, 516, 666, 462, 38568, 689, 498, 291, 760, 281, 264, 28256], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 231, "seek": 94556, "start": 952.56, "end": 956.56, "text": " entry point and not the EFI entry point, you use a bunch of security services.", "tokens": [8729, 935, 293, 406, 264, 462, 38568, 8729, 935, 11, 291, 764, 257, 3840, 295, 3825, 3328, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 232, "seek": 94556, "start": 956.56, "end": 957.56, "text": " For example, ASL app.", "tokens": [1171, 1365, 11, 7469, 43, 724, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 233, "seek": 94556, "start": 957.56, "end": 958.56, "text": " Yeah, of course.", "tokens": [865, 11, 295, 1164, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 234, "seek": 94556, "start": 958.56, "end": 960.56, "text": " So this was a proof of concept indeed.", "tokens": [407, 341, 390, 257, 8177, 295, 3410, 6451, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 235, "seek": 94556, "start": 960.56, "end": 964.56, "text": " If you just write the kernel image back to the normal world and jump to it, it's of course", "tokens": [759, 291, 445, 2464, 264, 28256, 3256, 646, 281, 264, 2710, 1002, 293, 3012, 281, 309, 11, 309, 311, 295, 1164], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 236, "seek": 94556, "start": 964.56, "end": 966.56, "text": " a big problem.", "tokens": [257, 955, 1154, 13], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 237, "seek": 94556, "start": 966.56, "end": 971.56, "text": " So if you want to actually build such a system in a secure way, you will need to do checking", "tokens": [407, 498, 291, 528, 281, 767, 1322, 1270, 257, 1185, 294, 257, 7144, 636, 11, 291, 486, 643, 281, 360, 8568], "temperature": 0.0, "avg_logprob": -0.16654493482850438, "compression_ratio": 1.6745762711864407, "no_speech_prob": 0.0006324796704575419}, {"id": 238, "seek": 97156, "start": 971.56, "end": 975.56, "text": " your image at boot time when you store it in memory.", "tokens": [428, 3256, 412, 11450, 565, 562, 291, 3531, 309, 294, 4675, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 239, "seek": 97156, "start": 975.56, "end": 979.56, "text": " Once you've checked it and stored it, you know that it's safe and then whenever you want", "tokens": [3443, 291, 600, 10033, 309, 293, 12187, 309, 11, 291, 458, 300, 309, 311, 3273, 293, 550, 5699, 291, 528], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 240, "seek": 97156, "start": 979.56, "end": 983.56, "text": " to reboot, you can set up the normal world completely so that it is again in a well-known", "tokens": [281, 33818, 11, 291, 393, 992, 493, 264, 2710, 1002, 2584, 370, 300, 309, 307, 797, 294, 257, 731, 12, 6861], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 241, "seek": 97156, "start": 983.56, "end": 987.56, "text": " secure state like at boot time and then write the image.", "tokens": [7144, 1785, 411, 412, 11450, 565, 293, 550, 2464, 264, 3256, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 242, "seek": 97156, "start": 987.56, "end": 988.56, "text": " We can talk.", "tokens": [492, 393, 751, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 243, "seek": 97156, "start": 988.56, "end": 989.56, "text": " Of course, yeah.", "tokens": [2720, 1164, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 244, "seek": 97156, "start": 989.56, "end": 990.56, "text": " There's more problems, right?", "tokens": [821, 311, 544, 2740, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 245, "seek": 97156, "start": 990.56, "end": 994.56, "text": " Because for example, if you boot like that, ASLR won't work properly in our, at least in", "tokens": [1436, 337, 1365, 11, 498, 291, 11450, 411, 300, 11, 7469, 31722, 1582, 380, 589, 6108, 294, 527, 11, 412, 1935, 294], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 246, "seek": 97156, "start": 994.56, "end": 995.56, "text": " our system.", "tokens": [527, 1185, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 247, "seek": 97156, "start": 995.56, "end": 996.56, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 248, "seek": 97156, "start": 996.56, "end": 998.56, "text": " Okay, we'll have a good discussion.", "tokens": [1033, 11, 321, 603, 362, 257, 665, 5017, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 249, "seek": 97156, "start": 998.56, "end": 999.56, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 250, "seek": 97156, "start": 999.56, "end": 1000.56, "text": " Yeah, go ahead.", "tokens": [865, 11, 352, 2286, 13], "temperature": 0.0, "avg_logprob": -0.15480522105568334, "compression_ratio": 1.6655844155844155, "no_speech_prob": 0.0006219888455234468}, {"id": 251, "seek": 100056, "start": 1000.56, "end": 1005.56, "text": " Maybe a follow-up question to this initial observation about the sort of security aspects", "tokens": [2704, 257, 1524, 12, 1010, 1168, 281, 341, 5883, 14816, 466, 264, 1333, 295, 3825, 7270], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 252, "seek": 100056, "start": 1005.56, "end": 1009.56, "text": " of kind of sharing responsibility for the peripherals.", "tokens": [295, 733, 295, 5414, 6357, 337, 264, 26807, 1124, 13], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 253, "seek": 100056, "start": 1009.56, "end": 1015.56, "text": " Another reason why you would want to partition the peripherals rather than to give control", "tokens": [3996, 1778, 983, 291, 576, 528, 281, 24808, 264, 26807, 1124, 2831, 813, 281, 976, 1969], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 254, "seek": 100056, "start": 1015.56, "end": 1018.56, "text": " competes with trust is also performance, right?", "tokens": [2850, 279, 365, 3361, 307, 611, 3389, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 255, "seek": 100056, "start": 1018.56, "end": 1023.56, "text": " Because essentially now you're saying that for any peripheral access, you need that to", "tokens": [1436, 4476, 586, 291, 434, 1566, 300, 337, 604, 40235, 2105, 11, 291, 643, 300, 281], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 256, "seek": 100056, "start": 1023.56, "end": 1024.56, "text": " go through the...", "tokens": [352, 807, 264, 485], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 257, "seek": 100056, "start": 1024.56, "end": 1025.56, "text": " Yeah, so there is...", "tokens": [865, 11, 370, 456, 307, 485], "temperature": 0.0, "avg_logprob": -0.25058569806687375, "compression_ratio": 1.623015873015873, "no_speech_prob": 0.004582720808684826}, {"id": 258, "seek": 102556, "start": 1025.56, "end": 1030.56, "text": " There is some latency number, but did you evaluate the overall performance degradation", "tokens": [821, 307, 512, 27043, 1230, 11, 457, 630, 291, 13059, 264, 4787, 3389, 40519], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 259, "seek": 102556, "start": 1030.56, "end": 1031.56, "text": " on the Linux?", "tokens": [322, 264, 18734, 30], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 260, "seek": 102556, "start": 1031.56, "end": 1032.56, "text": " Yes, indeed we did.", "tokens": [1079, 11, 6451, 321, 630, 13], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 261, "seek": 102556, "start": 1032.56, "end": 1033.56, "text": " I did not include the slide.", "tokens": [286, 630, 406, 4090, 264, 4137, 13], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 262, "seek": 102556, "start": 1033.56, "end": 1034.56, "text": " Ah, yeah.", "tokens": [2438, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 263, "seek": 102556, "start": 1034.56, "end": 1041.56, "text": " So the question was, if we evaluated the complete latency of sharing peripherals between the", "tokens": [407, 264, 1168, 390, 11, 498, 321, 25509, 264, 3566, 27043, 295, 5414, 26807, 1124, 1296, 264], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 264, "seek": 102556, "start": 1041.56, "end": 1046.84, "text": " two worlds, yeah, we did indeed verify, don't have a slide for the graphs, but if you look", "tokens": [732, 13401, 11, 1338, 11, 321, 630, 6451, 16888, 11, 500, 380, 362, 257, 4137, 337, 264, 24877, 11, 457, 498, 291, 574], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 265, "seek": 102556, "start": 1046.84, "end": 1052.3999999999999, "text": " at these numbers, you can see that to go to the peripheral from the normal world, it takes", "tokens": [412, 613, 3547, 11, 291, 393, 536, 300, 281, 352, 281, 264, 40235, 490, 264, 2710, 1002, 11, 309, 2516], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 266, "seek": 102556, "start": 1052.3999999999999, "end": 1055.1599999999999, "text": " around 103 microseconds.", "tokens": [926, 48784, 3123, 37841, 28750, 13], "temperature": 0.0, "avg_logprob": -0.18256778559408898, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.0006429072236642241}, {"id": 267, "seek": 105516, "start": 1055.16, "end": 1060.0800000000002, "text": " This is however in a standard call in OptiOS, and there is also something like a fast call", "tokens": [639, 307, 4461, 294, 257, 3832, 818, 294, 21455, 72, 4367, 11, 293, 456, 307, 611, 746, 411, 257, 2370, 818], "temperature": 0.0, "avg_logprob": -0.17563753542692764, "compression_ratio": 1.690391459074733, "no_speech_prob": 0.000607767840847373}, {"id": 268, "seek": 105516, "start": 1060.0800000000002, "end": 1065.28, "text": " and then you will get six microsecond latency, which is very fast, certainly fast enough", "tokens": [293, 550, 291, 486, 483, 2309, 3123, 37841, 18882, 27043, 11, 597, 307, 588, 2370, 11, 3297, 2370, 1547], "temperature": 0.0, "avg_logprob": -0.17563753542692764, "compression_ratio": 1.690391459074733, "no_speech_prob": 0.000607767840847373}, {"id": 269, "seek": 105516, "start": 1065.28, "end": 1069.2, "text": " for the requirements set by our industrial partners.", "tokens": [337, 264, 7728, 992, 538, 527, 9987, 4462, 13], "temperature": 0.0, "avg_logprob": -0.17563753542692764, "compression_ratio": 1.690391459074733, "no_speech_prob": 0.000607767840847373}, {"id": 270, "seek": 105516, "start": 1069.2, "end": 1074.16, "text": " And also the 68 microseconds to go back is also quickly enough for these systems, because", "tokens": [400, 611, 264, 23317, 3123, 37841, 28750, 281, 352, 646, 307, 611, 2661, 1547, 337, 613, 3652, 11, 570], "temperature": 0.0, "avg_logprob": -0.17563753542692764, "compression_ratio": 1.690391459074733, "no_speech_prob": 0.000607767840847373}, {"id": 271, "seek": 105516, "start": 1074.16, "end": 1077.3200000000002, "text": " these systems often have a control loop of one millisecond.", "tokens": [613, 3652, 2049, 362, 257, 1969, 6367, 295, 472, 27940, 18882, 13], "temperature": 0.0, "avg_logprob": -0.17563753542692764, "compression_ratio": 1.690391459074733, "no_speech_prob": 0.000607767840847373}, {"id": 272, "seek": 105516, "start": 1077.3200000000002, "end": 1083.48, "text": " So that means that, yeah, even with these numbers, you have like 95 or above of the original", "tokens": [407, 300, 1355, 300, 11, 1338, 11, 754, 365, 613, 3547, 11, 291, 362, 411, 13420, 420, 3673, 295, 264, 3380], "temperature": 0.0, "avg_logprob": -0.17563753542692764, "compression_ratio": 1.690391459074733, "no_speech_prob": 0.000607767840847373}, {"id": 273, "seek": 108348, "start": 1083.48, "end": 1086.84, "text": " performance or time of execution in the normal world.", "tokens": [3389, 420, 565, 295, 15058, 294, 264, 2710, 1002, 13], "temperature": 0.0, "avg_logprob": -0.2747706761435857, "compression_ratio": 1.4012345679012346, "no_speech_prob": 0.001947309821844101}, {"id": 274, "seek": 108348, "start": 1086.84, "end": 1092.16, "text": " So this is, we think this is a cost that we can totally take in developing the systems", "tokens": [407, 341, 307, 11, 321, 519, 341, 307, 257, 2063, 300, 321, 393, 3879, 747, 294, 6416, 264, 3652], "temperature": 0.0, "avg_logprob": -0.2747706761435857, "compression_ratio": 1.4012345679012346, "no_speech_prob": 0.001947309821844101}, {"id": 275, "seek": 108348, "start": 1092.16, "end": 1097.16, "text": " just because it gives us so many benefits on security level.", "tokens": [445, 570, 309, 2709, 505, 370, 867, 5311, 322, 3825, 1496, 13], "temperature": 0.0, "avg_logprob": -0.2747706761435857, "compression_ratio": 1.4012345679012346, "no_speech_prob": 0.001947309821844101}, {"id": 276, "seek": 108348, "start": 1097.16, "end": 1099.16, "text": " Is that good?", "tokens": [1119, 300, 665, 30], "temperature": 0.0, "avg_logprob": -0.2747706761435857, "compression_ratio": 1.4012345679012346, "no_speech_prob": 0.001947309821844101}, {"id": 277, "seek": 108348, "start": 1099.16, "end": 1100.16, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.2747706761435857, "compression_ratio": 1.4012345679012346, "no_speech_prob": 0.001947309821844101}, {"id": 278, "seek": 108348, "start": 1100.16, "end": 1101.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2747706761435857, "compression_ratio": 1.4012345679012346, "no_speech_prob": 0.001947309821844101}, {"id": 279, "seek": 110116, "start": 1101.16, "end": 1127.0800000000002, "text": " So the question was, how does this system using a trusted execution environment compare", "tokens": [407, 264, 1168, 390, 11, 577, 775, 341, 1185, 1228, 257, 16034, 15058, 2823, 6794], "temperature": 0.0, "avg_logprob": -0.3460868032355058, "compression_ratio": 1.0875, "no_speech_prob": 0.00432966835796833}, {"id": 280, "seek": 112708, "start": 1127.08, "end": 1132.08, "text": " to a hypervisor implementation?", "tokens": [281, 257, 9848, 16457, 11420, 30], "temperature": 0.0, "avg_logprob": -0.17496301509715892, "compression_ratio": 1.6504065040650406, "no_speech_prob": 0.000508217781316489}, {"id": 281, "seek": 112708, "start": 1132.08, "end": 1137.32, "text": " At our research group in this synod, we are working with very low-end embedded devices.", "tokens": [1711, 527, 2132, 1594, 294, 341, 5451, 378, 11, 321, 366, 1364, 365, 588, 2295, 12, 521, 16741, 5759, 13], "temperature": 0.0, "avg_logprob": -0.17496301509715892, "compression_ratio": 1.6504065040650406, "no_speech_prob": 0.000508217781316489}, {"id": 282, "seek": 112708, "start": 1137.32, "end": 1142.24, "text": " So this is a proof of concept on quite a high processor, it would be possible to do it in", "tokens": [407, 341, 307, 257, 8177, 295, 3410, 322, 1596, 257, 1090, 15321, 11, 309, 576, 312, 1944, 281, 360, 309, 294], "temperature": 0.0, "avg_logprob": -0.17496301509715892, "compression_ratio": 1.6504065040650406, "no_speech_prob": 0.000508217781316489}, {"id": 283, "seek": 112708, "start": 1142.24, "end": 1143.24, "text": " a hypervisor.", "tokens": [257, 9848, 16457, 13], "temperature": 0.0, "avg_logprob": -0.17496301509715892, "compression_ratio": 1.6504065040650406, "no_speech_prob": 0.000508217781316489}, {"id": 284, "seek": 112708, "start": 1143.24, "end": 1147.28, "text": " I don't know how to do it because I haven't taken a look at it that closely, but on these", "tokens": [286, 500, 380, 458, 577, 281, 360, 309, 570, 286, 2378, 380, 2726, 257, 574, 412, 309, 300, 8185, 11, 457, 322, 613], "temperature": 0.0, "avg_logprob": -0.17496301509715892, "compression_ratio": 1.6504065040650406, "no_speech_prob": 0.000508217781316489}, {"id": 285, "seek": 112708, "start": 1147.28, "end": 1154.52, "text": " very low-end embedded devices, it's mostly not useful or it's even damaging for the lifetime", "tokens": [588, 2295, 12, 521, 16741, 5759, 11, 309, 311, 5240, 406, 4420, 420, 309, 311, 754, 25342, 337, 264, 11364], "temperature": 0.0, "avg_logprob": -0.17496301509715892, "compression_ratio": 1.6504065040650406, "no_speech_prob": 0.000508217781316489}, {"id": 286, "seek": 115452, "start": 1154.52, "end": 1162.6, "text": " of device to use a hypervisor because you have also quite some overhead and a very limited", "tokens": [295, 4302, 281, 764, 257, 9848, 16457, 570, 291, 362, 611, 1596, 512, 19922, 293, 257, 588, 5567], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 287, "seek": 115452, "start": 1162.6, "end": 1163.6, "text": " lifetime battery.", "tokens": [11364, 5809, 13], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 288, "seek": 115452, "start": 1163.6, "end": 1166.12, "text": " You have a very limited energy budget.", "tokens": [509, 362, 257, 588, 5567, 2281, 4706, 13], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 289, "seek": 115452, "start": 1166.12, "end": 1171.8, "text": " So on these lower-end processes, there is an arm trust on implementation that is also", "tokens": [407, 322, 613, 3126, 12, 521, 7555, 11, 456, 307, 364, 3726, 3361, 322, 11420, 300, 307, 611], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 290, "seek": 115452, "start": 1171.8, "end": 1173.84, "text": " very energy efficient.", "tokens": [588, 2281, 7148, 13], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 291, "seek": 115452, "start": 1173.84, "end": 1178.08, "text": " So if we would, of course, not use Opti-Res and Linux, but take the same principles and", "tokens": [407, 498, 321, 576, 11, 295, 1164, 11, 406, 764, 21455, 72, 12, 33274, 293, 18734, 11, 457, 747, 264, 912, 9156, 293], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 292, "seek": 115452, "start": 1178.08, "end": 1183.96, "text": " apply it to such a chip, we believe we could stay in the energy budget that these low-end", "tokens": [3079, 309, 281, 1270, 257, 11409, 11, 321, 1697, 321, 727, 1754, 294, 264, 2281, 4706, 300, 613, 2295, 12, 521], "temperature": 0.0, "avg_logprob": -0.17818215516236452, "compression_ratio": 1.682170542635659, "no_speech_prob": 0.0003709166485350579}, {"id": 293, "seek": 118396, "start": 1183.96, "end": 1185.28, "text": " devices have.", "tokens": [5759, 362, 13], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 294, "seek": 118396, "start": 1185.28, "end": 1190.2, "text": " And we don't think it's something we can immediately do with hypervisors, but of course, that's", "tokens": [400, 321, 500, 380, 519, 309, 311, 746, 321, 393, 4258, 360, 365, 9848, 4938, 830, 11, 457, 295, 1164, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 295, "seek": 118396, "start": 1190.2, "end": 1194.8, "text": " not my research area, so that's something that can, of course, be very interesting to", "tokens": [406, 452, 2132, 1859, 11, 370, 300, 311, 746, 300, 393, 11, 295, 1164, 11, 312, 588, 1880, 281], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 296, "seek": 118396, "start": 1194.8, "end": 1195.8, "text": " research.", "tokens": [2132, 13], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 297, "seek": 118396, "start": 1195.8, "end": 1196.8, "text": " There was a question in the back.", "tokens": [821, 390, 257, 1168, 294, 264, 646, 13], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 298, "seek": 118396, "start": 1196.8, "end": 1202.96, "text": " Is there an instance of this hardware that we can use on the cloud to try it out?", "tokens": [1119, 456, 364, 5197, 295, 341, 8837, 300, 321, 393, 764, 322, 264, 4588, 281, 853, 309, 484, 30], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 299, "seek": 118396, "start": 1202.96, "end": 1209.48, "text": " I'm afraid not, so there is no instance in the cloud that is available to try right now.", "tokens": [286, 478, 4638, 406, 11, 370, 456, 307, 572, 5197, 294, 264, 4588, 300, 307, 2435, 281, 853, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.19624923156188415, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0006845914758741856}, {"id": 300, "seek": 120948, "start": 1209.48, "end": 1217.3600000000001, "text": " However, there is, I don't know if you know QEMU, possibly you do, so QEMU.", "tokens": [2908, 11, 456, 307, 11, 286, 500, 380, 458, 498, 291, 458, 1249, 6683, 52, 11, 6264, 291, 360, 11, 370, 1249, 6683, 52, 13], "temperature": 0.0, "avg_logprob": -0.17215842389045877, "compression_ratio": 1.478448275862069, "no_speech_prob": 0.0004007538082078099}, {"id": 301, "seek": 120948, "start": 1217.3600000000001, "end": 1220.64, "text": " It does support ARM virtualization.", "tokens": [467, 775, 1406, 45209, 6374, 2144, 13], "temperature": 0.0, "avg_logprob": -0.17215842389045877, "compression_ratio": 1.478448275862069, "no_speech_prob": 0.0004007538082078099}, {"id": 302, "seek": 120948, "start": 1220.64, "end": 1225.3600000000001, "text": " So we actually first started using that to develop our system, but we very quickly moved", "tokens": [407, 321, 767, 700, 1409, 1228, 300, 281, 1499, 527, 1185, 11, 457, 321, 588, 2661, 4259], "temperature": 0.0, "avg_logprob": -0.17215842389045877, "compression_ratio": 1.478448275862069, "no_speech_prob": 0.0004007538082078099}, {"id": 303, "seek": 120948, "start": 1225.3600000000001, "end": 1228.64, "text": " on to a hardware device because of our industrial partners.", "tokens": [322, 281, 257, 8837, 4302, 570, 295, 527, 9987, 4462, 13], "temperature": 0.0, "avg_logprob": -0.17215842389045877, "compression_ratio": 1.478448275862069, "no_speech_prob": 0.0004007538082078099}, {"id": 304, "seek": 120948, "start": 1228.64, "end": 1234.2, "text": " So the code, as is, won't immediately run on QEMU, but if you change the interrupt", "tokens": [407, 264, 3089, 11, 382, 307, 11, 1582, 380, 4258, 1190, 322, 1249, 6683, 52, 11, 457, 498, 291, 1319, 264, 12729], "temperature": 0.0, "avg_logprob": -0.17215842389045877, "compression_ratio": 1.478448275862069, "no_speech_prob": 0.0004007538082078099}, {"id": 305, "seek": 123420, "start": 1234.2, "end": 1241.0800000000002, "text": " numbers and the things that are different, it should be relatively easy to reproduce", "tokens": [3547, 293, 264, 721, 300, 366, 819, 11, 309, 820, 312, 7226, 1858, 281, 29501], "temperature": 0.0, "avg_logprob": -0.23063396272205172, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0006121725891716778}, {"id": 306, "seek": 123420, "start": 1241.0800000000002, "end": 1245.04, "text": " the same results on a virtualized system as well.", "tokens": [264, 912, 3542, 322, 257, 6374, 1602, 1185, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.23063396272205172, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0006121725891716778}, {"id": 307, "seek": 123420, "start": 1245.04, "end": 1250.8400000000001, "text": " Just to continue on the question on virtual machines versus OPE.", "tokens": [1449, 281, 2354, 322, 264, 1168, 322, 6374, 8379, 5717, 422, 5208, 13], "temperature": 0.0, "avg_logprob": -0.23063396272205172, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0006121725891716778}, {"id": 308, "seek": 123420, "start": 1250.8400000000001, "end": 1255.88, "text": " I think one key difference is that OPE is actually a real trusted execution environment", "tokens": [286, 519, 472, 2141, 2649, 307, 300, 422, 5208, 307, 767, 257, 957, 16034, 15058, 2823], "temperature": 0.0, "avg_logprob": -0.23063396272205172, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0006121725891716778}, {"id": 309, "seek": 123420, "start": 1255.88, "end": 1260.52, "text": " in the sense that compared to a virtual machine where the hypervisor would have access to", "tokens": [294, 264, 2020, 300, 5347, 281, 257, 6374, 3479, 689, 264, 9848, 16457, 576, 362, 2105, 281], "temperature": 0.0, "avg_logprob": -0.23063396272205172, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0006121725891716778}, {"id": 310, "seek": 126052, "start": 1260.52, "end": 1268.52, "text": " the address space of the protected application and through flow, with OPE, it doesn't.", "tokens": [264, 2985, 1901, 295, 264, 10594, 3861, 293, 807, 3095, 11, 365, 422, 5208, 11, 309, 1177, 380, 13], "temperature": 0.0, "avg_logprob": -0.4250626564025879, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.0007433311548084021}, {"id": 311, "seek": 126052, "start": 1268.52, "end": 1273.52, "text": " Anything that runs on the unsecured world does not see that the physical address space", "tokens": [11998, 300, 6676, 322, 264, 517, 8159, 3831, 1002, 775, 406, 536, 300, 264, 4001, 2985, 1901], "temperature": 0.0, "avg_logprob": -0.4250626564025879, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.0007433311548084021}, {"id": 312, "seek": 126052, "start": 1273.52, "end": 1274.52, "text": " cannot access.", "tokens": [2644, 2105, 13], "temperature": 0.0, "avg_logprob": -0.4250626564025879, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.0007433311548084021}, {"id": 313, "seek": 126052, "start": 1274.52, "end": 1280.52, "text": " Well, I guess, for example, our question is like the Siemens software controllers, actually", "tokens": [1042, 11, 286, 2041, 11, 337, 1365, 11, 527, 1168, 307, 411, 264, 3559, 45743, 4722, 26903, 11, 767], "temperature": 0.0, "avg_logprob": -0.4250626564025879, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.0007433311548084021}, {"id": 314, "seek": 126052, "start": 1280.52, "end": 1285.52, "text": " the hypervisor is not Windows or Linux, it's the custom hypervisor, and that also has access", "tokens": [264, 9848, 16457, 307, 406, 8591, 420, 18734, 11, 309, 311, 264, 2375, 9848, 16457, 11, 293, 300, 611, 575, 2105], "temperature": 0.0, "avg_logprob": -0.4250626564025879, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.0007433311548084021}, {"id": 315, "seek": 126052, "start": 1285.52, "end": 1286.52, "text": " like proper.", "tokens": [411, 2296, 13], "temperature": 0.0, "avg_logprob": -0.4250626564025879, "compression_ratio": 1.5819672131147542, "no_speech_prob": 0.0007433311548084021}, {"id": 316, "seek": 128652, "start": 1286.52, "end": 1292.44, "text": " So if it is an hypervisor that uses hardware virtualization, it does have access to the", "tokens": [407, 498, 309, 307, 364, 9848, 16457, 300, 4960, 8837, 6374, 2144, 11, 309, 775, 362, 2105, 281, 264], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 317, "seek": 128652, "start": 1292.44, "end": 1296.84, "text": " address space of whatever VM is running on the machine.", "tokens": [2985, 1901, 295, 2035, 18038, 307, 2614, 322, 264, 3479, 13], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 318, "seek": 128652, "start": 1296.84, "end": 1302.52, "text": " If it's based on the ARM64's virtualization extension, it will have access to the address", "tokens": [759, 309, 311, 2361, 322, 264, 45209, 19395, 311, 6374, 2144, 10320, 11, 309, 486, 362, 2105, 281, 264, 2985], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 319, "seek": 128652, "start": 1302.52, "end": 1303.52, "text": " space.", "tokens": [1901, 13], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 320, "seek": 128652, "start": 1303.52, "end": 1309.28, "text": " With OPE, the address space is only accessible to the secure world.", "tokens": [2022, 422, 5208, 11, 264, 2985, 1901, 307, 787, 9515, 281, 264, 7144, 1002, 13], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 321, "seek": 128652, "start": 1309.28, "end": 1313.36, "text": " It's controlled by the secure monitor, which is running at a very privileged level, which", "tokens": [467, 311, 10164, 538, 264, 7144, 6002, 11, 597, 307, 2614, 412, 257, 588, 25293, 1496, 11, 597], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 322, "seek": 128652, "start": 1313.36, "end": 1315.52, "text": " is more privileged than the hypervisor.", "tokens": [307, 544, 25293, 813, 264, 9848, 16457, 13], "temperature": 0.0, "avg_logprob": -0.20153029905546696, "compression_ratio": 1.8174273858921162, "no_speech_prob": 0.00018029302009381354}, {"id": 323, "seek": 131552, "start": 1315.52, "end": 1322.72, "text": " So the hypervisor does not get access to the secure application, whereas with an hypervisor,", "tokens": [407, 264, 9848, 16457, 775, 406, 483, 2105, 281, 264, 7144, 3861, 11, 9735, 365, 364, 9848, 16457, 11], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 324, "seek": 131552, "start": 1322.72, "end": 1327.32, "text": " the hypervisor could just mess with the nested page tables and do whatever it wants, access", "tokens": [264, 9848, 16457, 727, 445, 2082, 365, 264, 15646, 292, 3028, 8020, 293, 360, 2035, 309, 2738, 11, 2105], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 325, "seek": 131552, "start": 1327.32, "end": 1328.32, "text": " to the secure peripheral database.", "tokens": [281, 264, 7144, 40235, 8149, 13], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 326, "seek": 131552, "start": 1328.32, "end": 1333.12, "text": " Maybe to kick in here then, I love this, so that's what the coffee break hours are like", "tokens": [2704, 281, 4437, 294, 510, 550, 11, 286, 959, 341, 11, 370, 300, 311, 437, 264, 4982, 1821, 2496, 366, 411], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 327, "seek": 131552, "start": 1333.12, "end": 1334.12, "text": " before.", "tokens": [949, 13], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 328, "seek": 131552, "start": 1334.12, "end": 1338.12, "text": " So please continue this discussion, but just for the general audience, would I have like", "tokens": [407, 1767, 2354, 341, 5017, 11, 457, 445, 337, 264, 2674, 4034, 11, 576, 286, 362, 411], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 329, "seek": 131552, "start": 1338.12, "end": 1339.12, "text": " a 10-minute break now?", "tokens": [257, 1266, 12, 18256, 1821, 586, 30], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 330, "seek": 131552, "start": 1339.12, "end": 1342.12, "text": " I won't call it a coffee break because there's not enough time to run downstairs, you wouldn't", "tokens": [286, 1582, 380, 818, 309, 257, 4982, 1821, 570, 456, 311, 406, 1547, 565, 281, 1190, 20148, 11, 291, 2759, 380], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 331, "seek": 131552, "start": 1342.12, "end": 1343.12, "text": " come back up.", "tokens": [808, 646, 493, 13], "temperature": 0.0, "avg_logprob": -0.3289934607113109, "compression_ratio": 1.768976897689769, "no_speech_prob": 0.0006524934433400631}, {"id": 332, "seek": 134312, "start": 1343.12, "end": 1348.12, "text": " In 10 minutes, we will continue with the next talk, but exactly use it for these type of", "tokens": [682, 1266, 2077, 11, 321, 486, 2354, 365, 264, 958, 751, 11, 457, 2293, 764, 309, 337, 613, 2010, 295], "temperature": 0.0, "avg_logprob": -0.4058938612017715, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.01620156690478325}, {"id": 333, "seek": 134312, "start": 1348.12, "end": 1353.12, "text": " one-to-one break and continue the discussion in the next 10 minutes.", "tokens": [472, 12, 1353, 12, 546, 1821, 293, 2354, 264, 5017, 294, 264, 958, 1266, 2077, 13], "temperature": 0.0, "avg_logprob": -0.4058938612017715, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.01620156690478325}, {"id": 334, "seek": 135312, "start": 1353.12, "end": 1377.12, "text": " One thing I wanted to pitch in.", "tokens": [1485, 551, 286, 1415, 281, 7293, 294, 13], "temperature": 0.0, "avg_logprob": -0.4776457945505778, "compression_ratio": 0.7948717948717948, "no_speech_prob": 0.012883735820651054}], "language": "en"}