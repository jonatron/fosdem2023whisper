In this talk at the FOSDEM conference, the speaker introduces Whippet, a new garbage collector for Guile, an implementation of the Scheme programming language. The speaker explains that Guile is a garbage collected language, and the garbage collector is responsible for managing memory allocation and deallocation. The current garbage collector used in Guile is the Bohm collector, but the speaker presents Whippet as a new alternative. Whippet is based on the IMIX algorithm, which organizes the heap into blocks and lines and allows for opportunistic evacuation and bump pointer allocation. The speaker discusses the advantages and disadvantages of Whippet compared to the Bohm collector, including the ability to move values and compact the heap. The speaker also mentions potential improvements in performance and scalability with multiple allocator threads. The speaker highlights the goal of incorporating Whippet into Guile, although no specific timeline is given. Overall, the talk explores the benefits and implementation details of Whippet as a new garbage collector for Guile.