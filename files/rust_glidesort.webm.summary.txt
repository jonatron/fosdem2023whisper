The talk presents GlideSort, a hybrid sorting algorithm that is stable and adaptive to pre-sorted and low cardinality inputs. GlideSort combines the merge sort, quicksort, and block insertion sort algorithms, and it is implemented in Rust. The talk also discusses the challenges of implementing sorting algorithms in Rust, such as dealing with unwinding panics and optimizing for Rust-specific features. Experimental results show that GlideSort outperforms other sorting algorithms, including the Rust stable sort, and the algorithm is released and available for use. However, GlideSort may not perform well on older CPUs without modern features like instruction-level parallelism. Overall, GlideSort is a robustly adaptive and efficient sorting algorithm for modern processors in Rust.