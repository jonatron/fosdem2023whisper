The talk discusses the integration of the Cherry hardware capabilities with the Rust compiler. The goal is to produce a Rust compiler that can target Cherry-based architectures and produce production-ready code for security purposes. The integration provides an additional layer of protection to enforce access constraints at runtime in hardware. The talk also mentions the progress and modifications required so far, such as changing APIs to correctly specify capability sizes and modifying libraries to remove any assumptions that break for Cherry. The integration is part of a project led by Cyberhive, funded by the UK government initiative Digital Security by Design.