{"text": " Hi, everyone. Yeah, my name is Miguel Sena, so I work for Microsoft and I'm mostly the main of Landlack, which is a new Schedule Linux feature. And yeah, it's about sunbathing. So this talk is about Rose Library. We wrote for Landlack and, well, we kind of had some changes about compatibility. So yeah, just quick introduction and context to understand the programmatic here. So yeah, why care about security? So here, well, it might be abuse for some, but like every application can be compromised. Every application can be trusted at first and during the lifetime of a process, it can, well, become malicious. So yeah, as developers, there's, well, multiple problems. So we don't want to participate to malicious actions performed by attackers through our software. And we kind of have a responsibility for users, especially to protect their personal data. And yeah, there's also the, well, there might be some issues about third-party code. So security is unboxing is a security approach to isolate software and mainly to isolate them by dropping ambient access rights. So in a shell, well, when you launch an application in, like, common in Existro, this application can access a lot of files, including some, which are kind of private, like.ssh, for example. So some mixing should not be confused with namespaces and containers, which is a way to create kind of a virtualized environment. And Seccom is also something which is really interesting for security purposes, but it's not about access control. It's about protecting the kernel. That was initially the, well, initial goal of Seccom. So Linux is really dedicated from the ground to bring some working features to Linux. So to bring some security features to the kernel. So it is an access control system available to every processes. You don't need to be a root or whatever. And it is designed to be embedded in applications. So to create built-in sandboxing. It's the way to create one or even multiple layers of new securities. So it comes kind of after all system-wide access control, which are already in place. And so it's available on most distros nowadays. And if it is not the case, well, I grant you to open an issue in your favorite distro. So about sandboxing here, what's the interesting point about sandboxing and built-in application security? If, well, that we can create tailored security policies and embedded them in the application. So there's interesting things about that. And that might help to make it security like invisible, which is kind of the main purpose here. We want to not bother users, but secure them anyway. So because these securities policy can be embedded in the application, well, it can use the application semantic. It can also use the application configuration transparently. So you don't need to add another configuration stuff. It's not another layer of execution. It's embedded in the application. And of course, well, if the configuration depends on user interaction, well, it can adapt to this change of behavior. And one really interesting point is, well, as developer, you want to test what you do. And you want to kind of get guarantees that whatever you're developing is still working. And being able to embed security policies in your application, make it possible to test them the same way that you can test every other features. So that's really interesting. You don't rely on, let's say, Selenix being installed on your test machine and so on. And it adapts to the application over time. So if you have, well, a CI, which is well configured, you can test it and make sure that, well, you can a bit, a bit add new features, updates the security policy and make sure that everything was as expected. So speaking about the library and the Rust library, so the idea was to create something which is Rusty, so identity to Rust. And for this, well, we wanted to leverage strong typing so to get some developing guarantees. And so to follow some common patterns. So many here, the builder pattern. So it's still a work in progress. It's working. But yeah, we're working on improving the API and make it easier and more, yeah, easy to use for competitive reasons. So this talk about these kind of compatibility requirements. And yeah, so I'll talk about that. Some example of early-period users listed here. But yeah, it's still in kind of beta. So let's start with some code example. So just as a warning, this kind of simplified code, it's working. But yeah, for the demo, well, it's on demo, but for this example, the idea is to make it simple to, well, to make it easier to understand. So you can see at the left, there's a C code. And at the right, the exact same semantic, but in Rust. So I will mostly talk about the Rust code. But yeah, you can take a look at the C code to kind of see the difference between them and how Rust can be useful there. So as I said, it is based on the builder pattern. So you create a rule set object here with a rule set new. And from there, you kind of call different methods to, well, build the object here. In this case, a root set. So a root set will contain a set of rules. And yeah, at first, you define what you want to enforce, what you want to restrict, what you want to deny by default. So in this case, these are two actions. The action to execute files and the action to write on files. So obviously, it's not enough. But in this case, it's easy to understand for the simple use case. And then, once you define the rule set and what the rule set can handle, well, you can create it. And the rule set creation translates to, you can see at the left, there's a London trade rule set. And this function is in fact a C school. So in the Rust part, when you call the create method, it creates a new rule set, which is backed underneath by a new file descriptor, dedicated to Larnock. And that is a wrap in the rule set object. Then, if you want to add rules to allow some directory to be, for example, executable, which is the case here. So, well, you open the slash user directory and you make it, well, executable. So, allow access, access execute. And then, you can add other rule you want for all the exception that should be legitimate for the, well, legitimate use case. And then, you restrict the current process. Well, in fact, the current thread. And from this point, the current thread can only execute files which are in slash user. And it cannot write anything at all, actually. So, that was an introduction, quick introduction to the library. And the thing is, Larnock is not a full feature access control yet because, well, it is complex. And, well, to reach this goal, well, we need to spend much more years to increment, well, to add new features to the link scale. Yeah. And the thing is, well, sometimes you might add new features that enable to restrict more. And sometimes we might add some features to restrict less. So, let's see what this means. So, the first version of Larnock, which was released with a 5.13 kernel, basically allowed to read, write, and do a lot of common stuff to restrict a lot of common files and actions. But there was, like you can see here, there's three categories. So, first one, always denied, was for the first version of Larnock, the actions that were always denied whenever you sandboxed a thread. So, that was for, well, complexity in the development, but also security reasons. So, for example, you are not able to execute set-ready binaries because it will be kind of a way to bypass the sandbox. And there was some restriction on Ptrace, so you're not allowed to debug an application process which is outside the sandbox. Obviously, it will be a way to get out of the sandbox. So, that's not what we want. So, the second version of Larnock had its new way, a new access write, which was a way to repound files. So, at first, it was denied to change the predatory of a file for security reasons because Larnock is based on five keys identification, and that was kind of complex. So, but the second version, we implemented that, and then it became configurable. So, one item less in the always denied box. In the third version of Larnock, so, all these versions are new kernel releases, and in the third version, we added a new way to restrict a file propagation. So, propagation in Larnock is to change the size of a file, and this was always allowed before because it wasn't endowed. It was a bit complex to implement this in the kernel at this time, but now it is possible. So, you can see that we can move items from the always denied box to the configurable and from the always allowed box to the configurable list. So, application compatibility. There's two main things in compatibility. It is forward compatibility in a way that when you update your kernel, you still can use the old kernel features. So, that's kind of common. And the backward compatibility in this case is, well, when you're using a kernel feature, well, you might need the specification of the kernel that supports this feature. And if your application is running its launch on an old kernel, well, that feature might be missing. And the thing is, when you're developing an application, well, you don't know on which kernel your application will run because, well, it's a user choice and a distro choice. What comes with landlock is the ability to get the landlock, what we call the ABI version. So, it's really just a number. That increments are started at one, and then increments for each new set of features, which is added to the kernel. So, to give you an idea, it's really simple to get this ID version. It's with a landlock with a specific flag. So, yeah, it's a T code, but it's really simple. So, what we want to do at first, well, these four main properties. The first one is to be able to, well, to make it easy to use for developers, of course. So, we want something which is generic, which kind of follows the build-up pattern because, well, it's kind of common and easy to use. We want developers to focus on what they want to restrict, not the internal, well, implementation in the kernel. And we want them to gradually go from a coarse-grain access restriction to a fine-grain one. So, we don't want them to need to implement a fine-grain at first. It might be difficult, too difficult. So, yeah, in the same way that we can incrementally add new set of features, we can also incrementally restrict more and more of the time. So, no need to be super strict at first. And, yeah, it should be simpler to write, well, for the common cases. Okay. At first, the first improvement was to create group access rights. So, let's say you know which landlock version is supported by the running kernel. Let's say it's a second version. Then you can create a new root set which will get all the access rights which are supported by this basic kernel. So, you just call the end-of-access with XFS from all and then ABI2. And then you can do kind of the same when you're adding a new rule. And this time, well, you want to add an exception on the slash result to make it readable. So, in this case, there's two main groups, the from read and the from write. So, in, for example, the from read includes reading a file, but also reading a directory. So, listing a directory. Okay. Second property that we would like to have is being able to enforce a strict restriction. So, even if we don't know on which kernel the application will run, on some cases, we might want to be sure that all features are enforced and restricted. There's two use cases here. The first one is to test it. If you want to sandbox an application, you want to make sure that even if you're using all the sandboxing features, well, your application will work as expected. So, that's really important. And you don't want to run your application in an old kernel and kind of be fooled by the fact that your application is running because there's no, well, not all secret features are enabled. So, you want to cut these kind of issues in your CI. And also for security software, well, you want to have some security guarantees. So, you want to have a way to fold the whole sandboxing with all secret features that we embedded in our application. The third property is to be able to enforce the best for security with some minimal requirements. So, that's kind of the opposite. And this use case is mainly for end users because end user, well, you don't know which kernel they will use. And so, you want to be able to enforce an opportunistic sandboxing. So, if they have a new kernel, well, they will be more protected. If they have an old kernel, they might not be protected at all, but that's not your choice, that's not their choice. And at the end, they want to run your application anywhere. So, another requirement is to be able to disable the whole sandboxing if some features which are required may not be met. And this approach should be easier to write than others because it is the most common thing to do. And the last property is being able to run, well, to configure at runtime the sandboxing, but to make it in a way that you're running most of the codes. So, the idea is to be able to have kind of the same code running everywhere, almost, even if they don't have a recent kernel. Why that? Because you want to kind of identify early kind of some issues which might be linked to the sandboxing code and that's if you have, let's say, two users using a recent kernel and four users using an old kernel, well, you might want to test as much as possible with all your users, even if they don't have a new kernel. So, the first approach we took was, so we'll go quickly here, there's three approach. The first one was to change, well, to add a new method to the root set builder pattern. So, it was a simple method to set and set the best approach. So, if it was false, it was required to have this feature. So, in the example, an application that needed to move files from one directory to another needed to have the access effects refer access right to allow this access. And if it wasn't the case, well, the something should not be enforced, otherwise, it will break the application. So, that is a requirement. And in this case, that was a way to kind of change the state of the builder over time. So, this is kind of flexible, easy to understand, but some kind of cases. And, yeah, it makes the code not really clean. Another approach was kind of to do the same, but this time, with instead of two shifts, enable or disable, there were three ways to change it. The best-ifort way, the soft requirement and the hard requirement. So, a way to make it best-ifort, a way to make it error-out if there's any unsupported feature, and a way to disable the sandbox without error if some feature were not supported. So, that wasn't ideal, neither. And the last approach, which is currently working for us, is kind of a new one. So, the idea is to make it still configurable and to follow all these properties, but to make it, well, a bit simpler and still flexible. So, here, in a shell, well, you can make a new rule set that will error-out if there's any unsupported features, but at the same time, you can specify which feature is required to enable the sandbox or not. So, that's kind of specific, but, yeah, should be better. So, going forward, there's a lot going on in this first library. A lot to improve. You help, you help, you get a presentation, and I encourage you to, well, then make your application or others. And, well, there's some tips if you want to get some motivation here. It's a rewards program. So, thank you for attention. There's some interesting link here. This talk was kind of a dance, but I hope you enjoyed. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.72, "text": " Hi, everyone. Yeah, my name is Miguel Sena, so I work for Microsoft and I'm mostly the", "tokens": [2421, 11, 1518, 13, 865, 11, 452, 1315, 307, 29150, 3862, 64, 11, 370, 286, 589, 337, 8116, 293, 286, 478, 5240, 264], "temperature": 0.0, "avg_logprob": -0.5026392406887479, "compression_ratio": 1.2394366197183098, "no_speech_prob": 0.05045080929994583}, {"id": 1, "seek": 0, "start": 15.72, "end": 23.88, "text": " main of Landlack, which is a new Schedule Linux feature. And yeah, it's about sunbathing.", "tokens": [2135, 295, 6607, 75, 501, 11, 597, 307, 257, 777, 44926, 2271, 18734, 4111, 13, 400, 1338, 11, 309, 311, 466, 3295, 11980, 571, 13], "temperature": 0.0, "avg_logprob": -0.5026392406887479, "compression_ratio": 1.2394366197183098, "no_speech_prob": 0.05045080929994583}, {"id": 2, "seek": 2388, "start": 23.88, "end": 32.36, "text": " So this talk is about Rose Library. We wrote for Landlack and, well, we kind of had some", "tokens": [407, 341, 751, 307, 466, 12765, 12806, 13, 492, 4114, 337, 6607, 75, 501, 293, 11, 731, 11, 321, 733, 295, 632, 512], "temperature": 0.0, "avg_logprob": -0.28307252941709576, "compression_ratio": 1.4606741573033708, "no_speech_prob": 0.00048321502981707454}, {"id": 3, "seek": 2388, "start": 32.36, "end": 41.84, "text": " changes about compatibility. So yeah, just quick introduction and context to understand", "tokens": [2962, 466, 34237, 13, 407, 1338, 11, 445, 1702, 9339, 293, 4319, 281, 1223], "temperature": 0.0, "avg_logprob": -0.28307252941709576, "compression_ratio": 1.4606741573033708, "no_speech_prob": 0.00048321502981707454}, {"id": 4, "seek": 2388, "start": 41.84, "end": 51.44, "text": " the programmatic here. So yeah, why care about security? So here, well, it might be", "tokens": [264, 1461, 25915, 510, 13, 407, 1338, 11, 983, 1127, 466, 3825, 30, 407, 510, 11, 731, 11, 309, 1062, 312], "temperature": 0.0, "avg_logprob": -0.28307252941709576, "compression_ratio": 1.4606741573033708, "no_speech_prob": 0.00048321502981707454}, {"id": 5, "seek": 5144, "start": 51.44, "end": 58.32, "text": " abuse for some, but like every application can be compromised. Every application can be", "tokens": [9852, 337, 512, 11, 457, 411, 633, 3861, 393, 312, 32463, 13, 2048, 3861, 393, 312], "temperature": 0.0, "avg_logprob": -0.2081007900008236, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.0585127357626334e-05}, {"id": 6, "seek": 5144, "start": 58.32, "end": 65.48, "text": " trusted at first and during the lifetime of a process, it can, well, become malicious.", "tokens": [16034, 412, 700, 293, 1830, 264, 11364, 295, 257, 1399, 11, 309, 393, 11, 731, 11, 1813, 33496, 13], "temperature": 0.0, "avg_logprob": -0.2081007900008236, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.0585127357626334e-05}, {"id": 7, "seek": 5144, "start": 65.48, "end": 71.72, "text": " So yeah, as developers, there's, well, multiple problems. So we don't want to participate to", "tokens": [407, 1338, 11, 382, 8849, 11, 456, 311, 11, 731, 11, 3866, 2740, 13, 407, 321, 500, 380, 528, 281, 8197, 281], "temperature": 0.0, "avg_logprob": -0.2081007900008236, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.0585127357626334e-05}, {"id": 8, "seek": 5144, "start": 71.72, "end": 79.52, "text": " malicious actions performed by attackers through our software. And we kind of have a responsibility", "tokens": [33496, 5909, 10332, 538, 45129, 807, 527, 4722, 13, 400, 321, 733, 295, 362, 257, 6357], "temperature": 0.0, "avg_logprob": -0.2081007900008236, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.0585127357626334e-05}, {"id": 9, "seek": 7952, "start": 79.52, "end": 87.47999999999999, "text": " for users, especially to protect their personal data. And yeah, there's also the, well, there", "tokens": [337, 5022, 11, 2318, 281, 2371, 641, 2973, 1412, 13, 400, 1338, 11, 456, 311, 611, 264, 11, 731, 11, 456], "temperature": 0.0, "avg_logprob": -0.26680632843368357, "compression_ratio": 1.6079295154185023, "no_speech_prob": 4.3150106648681685e-05}, {"id": 10, "seek": 7952, "start": 87.47999999999999, "end": 94.39999999999999, "text": " might be some issues about third-party code. So security is unboxing is a security approach", "tokens": [1062, 312, 512, 2663, 466, 2636, 12, 23409, 3089, 13, 407, 3825, 307, 26266, 307, 257, 3825, 3109], "temperature": 0.0, "avg_logprob": -0.26680632843368357, "compression_ratio": 1.6079295154185023, "no_speech_prob": 4.3150106648681685e-05}, {"id": 11, "seek": 7952, "start": 94.39999999999999, "end": 102.0, "text": " to isolate software and mainly to isolate them by dropping ambient access rights. So", "tokens": [281, 25660, 4722, 293, 8704, 281, 25660, 552, 538, 13601, 22997, 2105, 4601, 13, 407], "temperature": 0.0, "avg_logprob": -0.26680632843368357, "compression_ratio": 1.6079295154185023, "no_speech_prob": 4.3150106648681685e-05}, {"id": 12, "seek": 7952, "start": 102.0, "end": 108.72, "text": " in a shell, well, when you launch an application in, like, common in Existro, this application", "tokens": [294, 257, 8720, 11, 731, 11, 562, 291, 4025, 364, 3861, 294, 11, 411, 11, 2689, 294, 2111, 468, 340, 11, 341, 3861], "temperature": 0.0, "avg_logprob": -0.26680632843368357, "compression_ratio": 1.6079295154185023, "no_speech_prob": 4.3150106648681685e-05}, {"id": 13, "seek": 10872, "start": 108.72, "end": 114.24, "text": " can access a lot of files, including some, which are kind of private, like.ssh, for", "tokens": [393, 2105, 257, 688, 295, 7098, 11, 3009, 512, 11, 597, 366, 733, 295, 4551, 11, 411, 2411, 82, 2716, 11, 337], "temperature": 0.0, "avg_logprob": -0.29466227827401, "compression_ratio": 1.5884955752212389, "no_speech_prob": 5.369477366912179e-05}, {"id": 14, "seek": 10872, "start": 114.24, "end": 120.64, "text": " example. So some mixing should not be confused with namespaces and containers, which is a", "tokens": [1365, 13, 407, 512, 11983, 820, 406, 312, 9019, 365, 5288, 79, 2116, 293, 17089, 11, 597, 307, 257], "temperature": 0.0, "avg_logprob": -0.29466227827401, "compression_ratio": 1.5884955752212389, "no_speech_prob": 5.369477366912179e-05}, {"id": 15, "seek": 10872, "start": 120.64, "end": 127.75999999999999, "text": " way to create kind of a virtualized environment. And Seccom is also something which is really", "tokens": [636, 281, 1884, 733, 295, 257, 6374, 1602, 2823, 13, 400, 3306, 1112, 307, 611, 746, 597, 307, 534], "temperature": 0.0, "avg_logprob": -0.29466227827401, "compression_ratio": 1.5884955752212389, "no_speech_prob": 5.369477366912179e-05}, {"id": 16, "seek": 10872, "start": 127.75999999999999, "end": 132.8, "text": " interesting for security purposes, but it's not about access control. It's about protecting", "tokens": [1880, 337, 3825, 9932, 11, 457, 309, 311, 406, 466, 2105, 1969, 13, 467, 311, 466, 12316], "temperature": 0.0, "avg_logprob": -0.29466227827401, "compression_ratio": 1.5884955752212389, "no_speech_prob": 5.369477366912179e-05}, {"id": 17, "seek": 13280, "start": 132.8, "end": 140.4, "text": " the kernel. That was initially the, well, initial goal of Seccom. So Linux is really", "tokens": [264, 28256, 13, 663, 390, 9105, 264, 11, 731, 11, 5883, 3387, 295, 3306, 1112, 13, 407, 18734, 307, 534], "temperature": 0.0, "avg_logprob": -0.2832094930833386, "compression_ratio": 1.5868263473053892, "no_speech_prob": 2.7219793992117047e-05}, {"id": 18, "seek": 13280, "start": 140.4, "end": 148.08, "text": " dedicated from the ground to bring some working features to Linux. So to bring some security", "tokens": [8374, 490, 264, 2727, 281, 1565, 512, 1364, 4122, 281, 18734, 13, 407, 281, 1565, 512, 3825], "temperature": 0.0, "avg_logprob": -0.2832094930833386, "compression_ratio": 1.5868263473053892, "no_speech_prob": 2.7219793992117047e-05}, {"id": 19, "seek": 13280, "start": 148.08, "end": 154.88000000000002, "text": " features to the kernel. So it is an access control system available to every processes.", "tokens": [4122, 281, 264, 28256, 13, 407, 309, 307, 364, 2105, 1969, 1185, 2435, 281, 633, 7555, 13], "temperature": 0.0, "avg_logprob": -0.2832094930833386, "compression_ratio": 1.5868263473053892, "no_speech_prob": 2.7219793992117047e-05}, {"id": 20, "seek": 15488, "start": 154.88, "end": 163.64, "text": " You don't need to be a root or whatever. And it is designed to be embedded in applications.", "tokens": [509, 500, 380, 643, 281, 312, 257, 5593, 420, 2035, 13, 400, 309, 307, 4761, 281, 312, 16741, 294, 5821, 13], "temperature": 0.0, "avg_logprob": -0.13865180576548858, "compression_ratio": 1.445054945054945, "no_speech_prob": 3.110665056738071e-05}, {"id": 21, "seek": 15488, "start": 163.64, "end": 171.16, "text": " So to create built-in sandboxing. It's the way to create one or even multiple layers", "tokens": [407, 281, 1884, 3094, 12, 259, 42115, 278, 13, 467, 311, 264, 636, 281, 1884, 472, 420, 754, 3866, 7914], "temperature": 0.0, "avg_logprob": -0.13865180576548858, "compression_ratio": 1.445054945054945, "no_speech_prob": 3.110665056738071e-05}, {"id": 22, "seek": 15488, "start": 171.16, "end": 180.07999999999998, "text": " of new securities. So it comes kind of after all system-wide access control, which are", "tokens": [295, 777, 38597, 13, 407, 309, 1487, 733, 295, 934, 439, 1185, 12, 7990, 2105, 1969, 11, 597, 366], "temperature": 0.0, "avg_logprob": -0.13865180576548858, "compression_ratio": 1.445054945054945, "no_speech_prob": 3.110665056738071e-05}, {"id": 23, "seek": 18008, "start": 180.08, "end": 187.20000000000002, "text": " already in place. And so it's available on most distros nowadays. And if it is not the", "tokens": [1217, 294, 1081, 13, 400, 370, 309, 311, 2435, 322, 881, 1483, 2635, 13434, 13, 400, 498, 309, 307, 406, 264], "temperature": 0.0, "avg_logprob": -0.22475369771321616, "compression_ratio": 1.6267281105990783, "no_speech_prob": 6.674918404314667e-05}, {"id": 24, "seek": 18008, "start": 187.20000000000002, "end": 194.68, "text": " case, well, I grant you to open an issue in your favorite distro. So about sandboxing", "tokens": [1389, 11, 731, 11, 286, 6386, 291, 281, 1269, 364, 2734, 294, 428, 2954, 1483, 340, 13, 407, 466, 42115, 278], "temperature": 0.0, "avg_logprob": -0.22475369771321616, "compression_ratio": 1.6267281105990783, "no_speech_prob": 6.674918404314667e-05}, {"id": 25, "seek": 18008, "start": 194.68, "end": 201.60000000000002, "text": " here, what's the interesting point about sandboxing and built-in application security?", "tokens": [510, 11, 437, 311, 264, 1880, 935, 466, 42115, 278, 293, 3094, 12, 259, 3861, 3825, 30], "temperature": 0.0, "avg_logprob": -0.22475369771321616, "compression_ratio": 1.6267281105990783, "no_speech_prob": 6.674918404314667e-05}, {"id": 26, "seek": 18008, "start": 201.60000000000002, "end": 208.0, "text": " If, well, that we can create tailored security policies and embedded them in the application.", "tokens": [759, 11, 731, 11, 300, 321, 393, 1884, 34858, 3825, 7657, 293, 16741, 552, 294, 264, 3861, 13], "temperature": 0.0, "avg_logprob": -0.22475369771321616, "compression_ratio": 1.6267281105990783, "no_speech_prob": 6.674918404314667e-05}, {"id": 27, "seek": 20800, "start": 208.0, "end": 217.64, "text": " So there's interesting things about that. And that might help to make it security like", "tokens": [407, 456, 311, 1880, 721, 466, 300, 13, 400, 300, 1062, 854, 281, 652, 309, 3825, 411], "temperature": 0.0, "avg_logprob": -0.21156632515691942, "compression_ratio": 1.4751381215469612, "no_speech_prob": 3.526775253703818e-05}, {"id": 28, "seek": 20800, "start": 217.64, "end": 225.72, "text": " invisible, which is kind of the main purpose here. We want to not bother users, but secure", "tokens": [14603, 11, 597, 307, 733, 295, 264, 2135, 4334, 510, 13, 492, 528, 281, 406, 8677, 5022, 11, 457, 7144], "temperature": 0.0, "avg_logprob": -0.21156632515691942, "compression_ratio": 1.4751381215469612, "no_speech_prob": 3.526775253703818e-05}, {"id": 29, "seek": 20800, "start": 225.72, "end": 233.4, "text": " them anyway. So because these securities policy can be embedded in the application, well,", "tokens": [552, 4033, 13, 407, 570, 613, 38597, 3897, 393, 312, 16741, 294, 264, 3861, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.21156632515691942, "compression_ratio": 1.4751381215469612, "no_speech_prob": 3.526775253703818e-05}, {"id": 30, "seek": 23340, "start": 233.4, "end": 239.56, "text": " it can use the application semantic. It can also use the application configuration transparently.", "tokens": [309, 393, 764, 264, 3861, 47982, 13, 467, 393, 611, 764, 264, 3861, 11694, 7132, 6420, 13], "temperature": 0.0, "avg_logprob": -0.1645920994770096, "compression_ratio": 1.8106796116504855, "no_speech_prob": 3.2154064683709294e-05}, {"id": 31, "seek": 23340, "start": 239.56, "end": 247.12, "text": " So you don't need to add another configuration stuff. It's not another layer of execution.", "tokens": [407, 291, 500, 380, 643, 281, 909, 1071, 11694, 1507, 13, 467, 311, 406, 1071, 4583, 295, 15058, 13], "temperature": 0.0, "avg_logprob": -0.1645920994770096, "compression_ratio": 1.8106796116504855, "no_speech_prob": 3.2154064683709294e-05}, {"id": 32, "seek": 23340, "start": 247.12, "end": 252.52, "text": " It's embedded in the application. And of course, well, if the configuration depends on user", "tokens": [467, 311, 16741, 294, 264, 3861, 13, 400, 295, 1164, 11, 731, 11, 498, 264, 11694, 5946, 322, 4195], "temperature": 0.0, "avg_logprob": -0.1645920994770096, "compression_ratio": 1.8106796116504855, "no_speech_prob": 3.2154064683709294e-05}, {"id": 33, "seek": 23340, "start": 252.52, "end": 259.92, "text": " interaction, well, it can adapt to this change of behavior. And one really interesting point", "tokens": [9285, 11, 731, 11, 309, 393, 6231, 281, 341, 1319, 295, 5223, 13, 400, 472, 534, 1880, 935], "temperature": 0.0, "avg_logprob": -0.1645920994770096, "compression_ratio": 1.8106796116504855, "no_speech_prob": 3.2154064683709294e-05}, {"id": 34, "seek": 25992, "start": 259.92, "end": 267.72, "text": " is, well, as developer, you want to test what you do. And you want to kind of get guarantees", "tokens": [307, 11, 731, 11, 382, 10754, 11, 291, 528, 281, 1500, 437, 291, 360, 13, 400, 291, 528, 281, 733, 295, 483, 32567], "temperature": 0.0, "avg_logprob": -0.16453977160983616, "compression_ratio": 1.6454545454545455, "no_speech_prob": 3.316602305858396e-05}, {"id": 35, "seek": 25992, "start": 267.72, "end": 274.76, "text": " that whatever you're developing is still working. And being able to embed security policies", "tokens": [300, 2035, 291, 434, 6416, 307, 920, 1364, 13, 400, 885, 1075, 281, 12240, 3825, 7657], "temperature": 0.0, "avg_logprob": -0.16453977160983616, "compression_ratio": 1.6454545454545455, "no_speech_prob": 3.316602305858396e-05}, {"id": 36, "seek": 25992, "start": 274.76, "end": 279.76, "text": " in your application, make it possible to test them the same way that you can test every", "tokens": [294, 428, 3861, 11, 652, 309, 1944, 281, 1500, 552, 264, 912, 636, 300, 291, 393, 1500, 633], "temperature": 0.0, "avg_logprob": -0.16453977160983616, "compression_ratio": 1.6454545454545455, "no_speech_prob": 3.316602305858396e-05}, {"id": 37, "seek": 25992, "start": 279.76, "end": 285.20000000000005, "text": " other features. So that's really interesting. You don't rely on, let's say, Selenix being", "tokens": [661, 4122, 13, 407, 300, 311, 534, 1880, 13, 509, 500, 380, 10687, 322, 11, 718, 311, 584, 11, 10736, 268, 970, 885], "temperature": 0.0, "avg_logprob": -0.16453977160983616, "compression_ratio": 1.6454545454545455, "no_speech_prob": 3.316602305858396e-05}, {"id": 38, "seek": 28520, "start": 285.2, "end": 291.12, "text": " installed on your test machine and so on. And it adapts to the application over time.", "tokens": [8899, 322, 428, 1500, 3479, 293, 370, 322, 13, 400, 309, 23169, 1373, 281, 264, 3861, 670, 565, 13], "temperature": 0.0, "avg_logprob": -0.18716969697371774, "compression_ratio": 1.646788990825688, "no_speech_prob": 9.801586202229373e-06}, {"id": 39, "seek": 28520, "start": 291.12, "end": 295.68, "text": " So if you have, well, a CI, which is well configured, you can test it and make sure", "tokens": [407, 498, 291, 362, 11, 731, 11, 257, 37777, 11, 597, 307, 731, 30538, 11, 291, 393, 1500, 309, 293, 652, 988], "temperature": 0.0, "avg_logprob": -0.18716969697371774, "compression_ratio": 1.646788990825688, "no_speech_prob": 9.801586202229373e-06}, {"id": 40, "seek": 28520, "start": 295.68, "end": 301.96, "text": " that, well, you can a bit, a bit add new features, updates the security policy and make sure that", "tokens": [300, 11, 731, 11, 291, 393, 257, 857, 11, 257, 857, 909, 777, 4122, 11, 9205, 264, 3825, 3897, 293, 652, 988, 300], "temperature": 0.0, "avg_logprob": -0.18716969697371774, "compression_ratio": 1.646788990825688, "no_speech_prob": 9.801586202229373e-06}, {"id": 41, "seek": 28520, "start": 301.96, "end": 309.52, "text": " everything was as expected. So speaking about the library and the Rust library, so the idea", "tokens": [1203, 390, 382, 5176, 13, 407, 4124, 466, 264, 6405, 293, 264, 34952, 6405, 11, 370, 264, 1558], "temperature": 0.0, "avg_logprob": -0.18716969697371774, "compression_ratio": 1.646788990825688, "no_speech_prob": 9.801586202229373e-06}, {"id": 42, "seek": 30952, "start": 309.52, "end": 317.08, "text": " was to create something which is Rusty, so identity to Rust. And for this, well, we wanted", "tokens": [390, 281, 1884, 746, 597, 307, 34952, 88, 11, 370, 6575, 281, 34952, 13, 400, 337, 341, 11, 731, 11, 321, 1415], "temperature": 0.0, "avg_logprob": -0.23723218138788787, "compression_ratio": 1.5217391304347827, "no_speech_prob": 3.5784240026259795e-05}, {"id": 43, "seek": 30952, "start": 317.08, "end": 324.96, "text": " to leverage strong typing so to get some developing guarantees. And so to follow some common patterns.", "tokens": [281, 13982, 2068, 18444, 370, 281, 483, 512, 6416, 32567, 13, 400, 370, 281, 1524, 512, 2689, 8294, 13], "temperature": 0.0, "avg_logprob": -0.23723218138788787, "compression_ratio": 1.5217391304347827, "no_speech_prob": 3.5784240026259795e-05}, {"id": 44, "seek": 30952, "start": 324.96, "end": 332.84, "text": " So many here, the builder pattern. So it's still a work in progress. It's working. But", "tokens": [407, 867, 510, 11, 264, 27377, 5102, 13, 407, 309, 311, 920, 257, 589, 294, 4205, 13, 467, 311, 1364, 13, 583], "temperature": 0.0, "avg_logprob": -0.23723218138788787, "compression_ratio": 1.5217391304347827, "no_speech_prob": 3.5784240026259795e-05}, {"id": 45, "seek": 33284, "start": 332.84, "end": 339.47999999999996, "text": " yeah, we're working on improving the API and make it easier and more, yeah, easy to use", "tokens": [1338, 11, 321, 434, 1364, 322, 11470, 264, 9362, 293, 652, 309, 3571, 293, 544, 11, 1338, 11, 1858, 281, 764], "temperature": 0.0, "avg_logprob": -0.31777398977706683, "compression_ratio": 1.4860335195530727, "no_speech_prob": 2.7881627829628997e-05}, {"id": 46, "seek": 33284, "start": 339.47999999999996, "end": 346.44, "text": " for competitive reasons. So this talk about these kind of compatibility requirements.", "tokens": [337, 10043, 4112, 13, 407, 341, 751, 466, 613, 733, 295, 34237, 7728, 13], "temperature": 0.0, "avg_logprob": -0.31777398977706683, "compression_ratio": 1.4860335195530727, "no_speech_prob": 2.7881627829628997e-05}, {"id": 47, "seek": 33284, "start": 346.44, "end": 354.67999999999995, "text": " And yeah, so I'll talk about that. Some example of early-period users listed here. But yeah,", "tokens": [400, 1338, 11, 370, 286, 603, 751, 466, 300, 13, 2188, 1365, 295, 2440, 12, 610, 2695, 5022, 10052, 510, 13, 583, 1338, 11], "temperature": 0.0, "avg_logprob": -0.31777398977706683, "compression_ratio": 1.4860335195530727, "no_speech_prob": 2.7881627829628997e-05}, {"id": 48, "seek": 35468, "start": 354.68, "end": 364.04, "text": " it's still in kind of beta. So let's start with some code example. So just as a warning,", "tokens": [309, 311, 920, 294, 733, 295, 9861, 13, 407, 718, 311, 722, 365, 512, 3089, 1365, 13, 407, 445, 382, 257, 9164, 11], "temperature": 0.0, "avg_logprob": -0.21237992017697066, "compression_ratio": 1.622754491017964, "no_speech_prob": 1.2634969607461244e-05}, {"id": 49, "seek": 35468, "start": 364.04, "end": 370.72, "text": " this kind of simplified code, it's working. But yeah, for the demo, well, it's on demo,", "tokens": [341, 733, 295, 26335, 3089, 11, 309, 311, 1364, 13, 583, 1338, 11, 337, 264, 10723, 11, 731, 11, 309, 311, 322, 10723, 11], "temperature": 0.0, "avg_logprob": -0.21237992017697066, "compression_ratio": 1.622754491017964, "no_speech_prob": 1.2634969607461244e-05}, {"id": 50, "seek": 35468, "start": 370.72, "end": 379.04, "text": " but for this example, the idea is to make it simple to, well, to make it easier to understand.", "tokens": [457, 337, 341, 1365, 11, 264, 1558, 307, 281, 652, 309, 2199, 281, 11, 731, 11, 281, 652, 309, 3571, 281, 1223, 13], "temperature": 0.0, "avg_logprob": -0.21237992017697066, "compression_ratio": 1.622754491017964, "no_speech_prob": 1.2634969607461244e-05}, {"id": 51, "seek": 37904, "start": 379.04, "end": 384.8, "text": " So you can see at the left, there's a C code. And at the right, the exact same semantic,", "tokens": [407, 291, 393, 536, 412, 264, 1411, 11, 456, 311, 257, 383, 3089, 13, 400, 412, 264, 558, 11, 264, 1900, 912, 47982, 11], "temperature": 0.0, "avg_logprob": -0.14388868760089485, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.663047234818805e-05}, {"id": 52, "seek": 37904, "start": 384.8, "end": 389.8, "text": " but in Rust. So I will mostly talk about the Rust code. But yeah, you can take a look", "tokens": [457, 294, 34952, 13, 407, 286, 486, 5240, 751, 466, 264, 34952, 3089, 13, 583, 1338, 11, 291, 393, 747, 257, 574], "temperature": 0.0, "avg_logprob": -0.14388868760089485, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.663047234818805e-05}, {"id": 53, "seek": 37904, "start": 389.8, "end": 396.16, "text": " at the C code to kind of see the difference between them and how Rust can be useful there.", "tokens": [412, 264, 383, 3089, 281, 733, 295, 536, 264, 2649, 1296, 552, 293, 577, 34952, 393, 312, 4420, 456, 13], "temperature": 0.0, "avg_logprob": -0.14388868760089485, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.663047234818805e-05}, {"id": 54, "seek": 37904, "start": 396.16, "end": 402.72, "text": " So as I said, it is based on the builder pattern. So you create a rule set object here with", "tokens": [407, 382, 286, 848, 11, 309, 307, 2361, 322, 264, 27377, 5102, 13, 407, 291, 1884, 257, 4978, 992, 2657, 510, 365], "temperature": 0.0, "avg_logprob": -0.14388868760089485, "compression_ratio": 1.6227272727272728, "no_speech_prob": 2.663047234818805e-05}, {"id": 55, "seek": 40272, "start": 402.72, "end": 409.48, "text": " a rule set new. And from there, you kind of call different methods to, well, build the", "tokens": [257, 4978, 992, 777, 13, 400, 490, 456, 11, 291, 733, 295, 818, 819, 7150, 281, 11, 731, 11, 1322, 264], "temperature": 0.0, "avg_logprob": -0.19653535089572938, "compression_ratio": 1.8208333333333333, "no_speech_prob": 3.360263508511707e-05}, {"id": 56, "seek": 40272, "start": 409.48, "end": 414.16, "text": " object here. In this case, a root set. So a root set will contain a set of rules. And", "tokens": [2657, 510, 13, 682, 341, 1389, 11, 257, 5593, 992, 13, 407, 257, 5593, 992, 486, 5304, 257, 992, 295, 4474, 13, 400], "temperature": 0.0, "avg_logprob": -0.19653535089572938, "compression_ratio": 1.8208333333333333, "no_speech_prob": 3.360263508511707e-05}, {"id": 57, "seek": 40272, "start": 414.16, "end": 418.64000000000004, "text": " yeah, at first, you define what you want to enforce, what you want to restrict, what", "tokens": [1338, 11, 412, 700, 11, 291, 6964, 437, 291, 528, 281, 24825, 11, 437, 291, 528, 281, 7694, 11, 437], "temperature": 0.0, "avg_logprob": -0.19653535089572938, "compression_ratio": 1.8208333333333333, "no_speech_prob": 3.360263508511707e-05}, {"id": 58, "seek": 40272, "start": 418.64000000000004, "end": 424.8, "text": " you want to deny by default. So in this case, these are two actions. The action to execute", "tokens": [291, 528, 281, 15744, 538, 7576, 13, 407, 294, 341, 1389, 11, 613, 366, 732, 5909, 13, 440, 3069, 281, 14483], "temperature": 0.0, "avg_logprob": -0.19653535089572938, "compression_ratio": 1.8208333333333333, "no_speech_prob": 3.360263508511707e-05}, {"id": 59, "seek": 40272, "start": 424.8, "end": 431.08000000000004, "text": " files and the action to write on files. So obviously, it's not enough. But in this case,", "tokens": [7098, 293, 264, 3069, 281, 2464, 322, 7098, 13, 407, 2745, 11, 309, 311, 406, 1547, 13, 583, 294, 341, 1389, 11], "temperature": 0.0, "avg_logprob": -0.19653535089572938, "compression_ratio": 1.8208333333333333, "no_speech_prob": 3.360263508511707e-05}, {"id": 60, "seek": 43108, "start": 431.08, "end": 437.0, "text": " it's easy to understand for the simple use case. And then, once you define the rule set", "tokens": [309, 311, 1858, 281, 1223, 337, 264, 2199, 764, 1389, 13, 400, 550, 11, 1564, 291, 6964, 264, 4978, 992], "temperature": 0.0, "avg_logprob": -0.25608356793721515, "compression_ratio": 1.7920792079207921, "no_speech_prob": 2.2778760467190295e-05}, {"id": 61, "seek": 43108, "start": 437.0, "end": 443.28, "text": " and what the rule set can handle, well, you can create it. And the rule set creation translates", "tokens": [293, 437, 264, 4978, 992, 393, 4813, 11, 731, 11, 291, 393, 1884, 309, 13, 400, 264, 4978, 992, 8016, 28468], "temperature": 0.0, "avg_logprob": -0.25608356793721515, "compression_ratio": 1.7920792079207921, "no_speech_prob": 2.2778760467190295e-05}, {"id": 62, "seek": 43108, "start": 443.28, "end": 448.56, "text": " to, you can see at the left, there's a London trade rule set. And this function is in fact", "tokens": [281, 11, 291, 393, 536, 412, 264, 1411, 11, 456, 311, 257, 7042, 4923, 4978, 992, 13, 400, 341, 2445, 307, 294, 1186], "temperature": 0.0, "avg_logprob": -0.25608356793721515, "compression_ratio": 1.7920792079207921, "no_speech_prob": 2.2778760467190295e-05}, {"id": 63, "seek": 43108, "start": 448.56, "end": 456.68, "text": " a C school. So in the Rust part, when you call the create method, it creates a new rule", "tokens": [257, 383, 1395, 13, 407, 294, 264, 34952, 644, 11, 562, 291, 818, 264, 1884, 3170, 11, 309, 7829, 257, 777, 4978], "temperature": 0.0, "avg_logprob": -0.25608356793721515, "compression_ratio": 1.7920792079207921, "no_speech_prob": 2.2778760467190295e-05}, {"id": 64, "seek": 45668, "start": 456.68, "end": 463.84000000000003, "text": " set, which is backed underneath by a new file descriptor, dedicated to Larnock. And that", "tokens": [992, 11, 597, 307, 20391, 7223, 538, 257, 777, 3991, 31280, 284, 11, 8374, 281, 441, 1083, 1560, 13, 400, 300], "temperature": 0.0, "avg_logprob": -0.23813698742840742, "compression_ratio": 1.4751381215469612, "no_speech_prob": 2.240154026367236e-05}, {"id": 65, "seek": 45668, "start": 463.84000000000003, "end": 471.52, "text": " is a wrap in the rule set object. Then, if you want to add rules to allow some directory", "tokens": [307, 257, 7019, 294, 264, 4978, 992, 2657, 13, 1396, 11, 498, 291, 528, 281, 909, 4474, 281, 2089, 512, 21120], "temperature": 0.0, "avg_logprob": -0.23813698742840742, "compression_ratio": 1.4751381215469612, "no_speech_prob": 2.240154026367236e-05}, {"id": 66, "seek": 45668, "start": 471.52, "end": 477.68, "text": " to be, for example, executable, which is the case here. So, well, you open the slash user", "tokens": [281, 312, 11, 337, 1365, 11, 7568, 712, 11, 597, 307, 264, 1389, 510, 13, 407, 11, 731, 11, 291, 1269, 264, 17330, 4195], "temperature": 0.0, "avg_logprob": -0.23813698742840742, "compression_ratio": 1.4751381215469612, "no_speech_prob": 2.240154026367236e-05}, {"id": 67, "seek": 47768, "start": 477.68, "end": 486.8, "text": " directory and you make it, well, executable. So, allow access, access execute. And then,", "tokens": [21120, 293, 291, 652, 309, 11, 731, 11, 7568, 712, 13, 407, 11, 2089, 2105, 11, 2105, 14483, 13, 400, 550, 11], "temperature": 0.0, "avg_logprob": -0.2182020596095494, "compression_ratio": 1.6566265060240963, "no_speech_prob": 3.832643051282503e-05}, {"id": 68, "seek": 47768, "start": 486.8, "end": 492.24, "text": " you can add other rule you want for all the exception that should be legitimate for the,", "tokens": [291, 393, 909, 661, 4978, 291, 528, 337, 439, 264, 11183, 300, 820, 312, 17956, 337, 264, 11], "temperature": 0.0, "avg_logprob": -0.2182020596095494, "compression_ratio": 1.6566265060240963, "no_speech_prob": 3.832643051282503e-05}, {"id": 69, "seek": 47768, "start": 492.24, "end": 499.04, "text": " well, legitimate use case. And then, you restrict the current process. Well, in fact, the current", "tokens": [731, 11, 17956, 764, 1389, 13, 400, 550, 11, 291, 7694, 264, 2190, 1399, 13, 1042, 11, 294, 1186, 11, 264, 2190], "temperature": 0.0, "avg_logprob": -0.2182020596095494, "compression_ratio": 1.6566265060240963, "no_speech_prob": 3.832643051282503e-05}, {"id": 70, "seek": 49904, "start": 499.04, "end": 507.76000000000005, "text": " thread. And from this point, the current thread can only execute files which are in slash", "tokens": [7207, 13, 400, 490, 341, 935, 11, 264, 2190, 7207, 393, 787, 14483, 7098, 597, 366, 294, 17330], "temperature": 0.0, "avg_logprob": -0.20679154540553238, "compression_ratio": 1.542857142857143, "no_speech_prob": 5.380001675803214e-05}, {"id": 71, "seek": 49904, "start": 507.76000000000005, "end": 519.0, "text": " user. And it cannot write anything at all, actually. So, that was an introduction, quick", "tokens": [4195, 13, 400, 309, 2644, 2464, 1340, 412, 439, 11, 767, 13, 407, 11, 300, 390, 364, 9339, 11, 1702], "temperature": 0.0, "avg_logprob": -0.20679154540553238, "compression_ratio": 1.542857142857143, "no_speech_prob": 5.380001675803214e-05}, {"id": 72, "seek": 49904, "start": 519.0, "end": 526.2, "text": " introduction to the library. And the thing is, Larnock is not a full feature access control", "tokens": [9339, 281, 264, 6405, 13, 400, 264, 551, 307, 11, 441, 1083, 1560, 307, 406, 257, 1577, 4111, 2105, 1969], "temperature": 0.0, "avg_logprob": -0.20679154540553238, "compression_ratio": 1.542857142857143, "no_speech_prob": 5.380001675803214e-05}, {"id": 73, "seek": 52620, "start": 526.2, "end": 534.5600000000001, "text": " yet because, well, it is complex. And, well, to reach this goal, well, we need to spend", "tokens": [1939, 570, 11, 731, 11, 309, 307, 3997, 13, 400, 11, 731, 11, 281, 2524, 341, 3387, 11, 731, 11, 321, 643, 281, 3496], "temperature": 0.0, "avg_logprob": -0.17883145468575615, "compression_ratio": 1.639240506329114, "no_speech_prob": 0.00016961774963419884}, {"id": 74, "seek": 52620, "start": 534.5600000000001, "end": 544.1600000000001, "text": " much more years to increment, well, to add new features to the link scale. Yeah. And", "tokens": [709, 544, 924, 281, 26200, 11, 731, 11, 281, 909, 777, 4122, 281, 264, 2113, 4373, 13, 865, 13, 400], "temperature": 0.0, "avg_logprob": -0.17883145468575615, "compression_ratio": 1.639240506329114, "no_speech_prob": 0.00016961774963419884}, {"id": 75, "seek": 52620, "start": 544.1600000000001, "end": 552.32, "text": " the thing is, well, sometimes you might add new features that enable to restrict more.", "tokens": [264, 551, 307, 11, 731, 11, 2171, 291, 1062, 909, 777, 4122, 300, 9528, 281, 7694, 544, 13], "temperature": 0.0, "avg_logprob": -0.17883145468575615, "compression_ratio": 1.639240506329114, "no_speech_prob": 0.00016961774963419884}, {"id": 76, "seek": 55232, "start": 552.32, "end": 559.84, "text": " And sometimes we might add some features to restrict less. So, let's see what this means.", "tokens": [400, 2171, 321, 1062, 909, 512, 4122, 281, 7694, 1570, 13, 407, 11, 718, 311, 536, 437, 341, 1355, 13], "temperature": 0.0, "avg_logprob": -0.2048539033870107, "compression_ratio": 1.6123348017621146, "no_speech_prob": 5.122851871419698e-05}, {"id": 77, "seek": 55232, "start": 559.84, "end": 568.12, "text": " So, the first version of Larnock, which was released with a 5.13 kernel, basically allowed", "tokens": [407, 11, 264, 700, 3037, 295, 441, 1083, 1560, 11, 597, 390, 4736, 365, 257, 1025, 13, 7668, 28256, 11, 1936, 4350], "temperature": 0.0, "avg_logprob": -0.2048539033870107, "compression_ratio": 1.6123348017621146, "no_speech_prob": 5.122851871419698e-05}, {"id": 78, "seek": 55232, "start": 568.12, "end": 575.6800000000001, "text": " to read, write, and do a lot of common stuff to restrict a lot of common files and actions.", "tokens": [281, 1401, 11, 2464, 11, 293, 360, 257, 688, 295, 2689, 1507, 281, 7694, 257, 688, 295, 2689, 7098, 293, 5909, 13], "temperature": 0.0, "avg_logprob": -0.2048539033870107, "compression_ratio": 1.6123348017621146, "no_speech_prob": 5.122851871419698e-05}, {"id": 79, "seek": 55232, "start": 575.6800000000001, "end": 582.2800000000001, "text": " But there was, like you can see here, there's three categories. So, first one, always denied,", "tokens": [583, 456, 390, 11, 411, 291, 393, 536, 510, 11, 456, 311, 1045, 10479, 13, 407, 11, 700, 472, 11, 1009, 17774, 11], "temperature": 0.0, "avg_logprob": -0.2048539033870107, "compression_ratio": 1.6123348017621146, "no_speech_prob": 5.122851871419698e-05}, {"id": 80, "seek": 58228, "start": 582.28, "end": 587.4, "text": " was for the first version of Larnock, the actions that were always denied whenever you", "tokens": [390, 337, 264, 700, 3037, 295, 441, 1083, 1560, 11, 264, 5909, 300, 645, 1009, 17774, 5699, 291], "temperature": 0.0, "avg_logprob": -0.19271319399597825, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.3313486963161267e-05}, {"id": 81, "seek": 58228, "start": 587.4, "end": 596.88, "text": " sandboxed a thread. So, that was for, well, complexity in the development, but also security", "tokens": [42115, 292, 257, 7207, 13, 407, 11, 300, 390, 337, 11, 731, 11, 14024, 294, 264, 3250, 11, 457, 611, 3825], "temperature": 0.0, "avg_logprob": -0.19271319399597825, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.3313486963161267e-05}, {"id": 82, "seek": 58228, "start": 596.88, "end": 603.16, "text": " reasons. So, for example, you are not able to execute set-ready binaries because it will", "tokens": [4112, 13, 407, 11, 337, 1365, 11, 291, 366, 406, 1075, 281, 14483, 992, 12, 1201, 5171, 4889, 570, 309, 486], "temperature": 0.0, "avg_logprob": -0.19271319399597825, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.3313486963161267e-05}, {"id": 83, "seek": 58228, "start": 603.16, "end": 609.36, "text": " be kind of a way to bypass the sandbox. And there was some restriction on Ptrace, so you're", "tokens": [312, 733, 295, 257, 636, 281, 24996, 264, 42115, 13, 400, 456, 390, 512, 29529, 322, 430, 6903, 617, 11, 370, 291, 434], "temperature": 0.0, "avg_logprob": -0.19271319399597825, "compression_ratio": 1.565217391304348, "no_speech_prob": 2.3313486963161267e-05}, {"id": 84, "seek": 60936, "start": 609.36, "end": 615.6800000000001, "text": " not allowed to debug an application process which is outside the sandbox. Obviously, it", "tokens": [406, 4350, 281, 24083, 364, 3861, 1399, 597, 307, 2380, 264, 42115, 13, 7580, 11, 309], "temperature": 0.0, "avg_logprob": -0.19632984244305154, "compression_ratio": 1.6201923076923077, "no_speech_prob": 5.949547812633682e-06}, {"id": 85, "seek": 60936, "start": 615.6800000000001, "end": 621.44, "text": " will be a way to get out of the sandbox. So, that's not what we want.", "tokens": [486, 312, 257, 636, 281, 483, 484, 295, 264, 42115, 13, 407, 11, 300, 311, 406, 437, 321, 528, 13], "temperature": 0.0, "avg_logprob": -0.19632984244305154, "compression_ratio": 1.6201923076923077, "no_speech_prob": 5.949547812633682e-06}, {"id": 86, "seek": 60936, "start": 621.44, "end": 630.32, "text": " So, the second version of Larnock had its new way, a new access write, which was a way", "tokens": [407, 11, 264, 1150, 3037, 295, 441, 1083, 1560, 632, 1080, 777, 636, 11, 257, 777, 2105, 2464, 11, 597, 390, 257, 636], "temperature": 0.0, "avg_logprob": -0.19632984244305154, "compression_ratio": 1.6201923076923077, "no_speech_prob": 5.949547812633682e-06}, {"id": 87, "seek": 60936, "start": 630.32, "end": 637.28, "text": " to repound files. So, at first, it was denied to change the predatory of a file for security", "tokens": [281, 1085, 554, 7098, 13, 407, 11, 412, 700, 11, 309, 390, 17774, 281, 1319, 264, 3852, 4745, 295, 257, 3991, 337, 3825], "temperature": 0.0, "avg_logprob": -0.19632984244305154, "compression_ratio": 1.6201923076923077, "no_speech_prob": 5.949547812633682e-06}, {"id": 88, "seek": 63728, "start": 637.28, "end": 644.28, "text": " reasons because Larnock is based on five keys identification, and that was kind of complex.", "tokens": [4112, 570, 441, 1083, 1560, 307, 2361, 322, 1732, 9317, 22065, 11, 293, 300, 390, 733, 295, 3997, 13], "temperature": 0.0, "avg_logprob": -0.2736146899237149, "compression_ratio": 1.543859649122807, "no_speech_prob": 1.3601015780295711e-05}, {"id": 89, "seek": 63728, "start": 644.28, "end": 652.64, "text": " So, but the second version, we implemented that, and then it became configurable. So,", "tokens": [407, 11, 457, 264, 1150, 3037, 11, 321, 12270, 300, 11, 293, 550, 309, 3062, 22192, 712, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.2736146899237149, "compression_ratio": 1.543859649122807, "no_speech_prob": 1.3601015780295711e-05}, {"id": 90, "seek": 63728, "start": 652.64, "end": 660.9599999999999, "text": " one item less in the always denied box. In the third version of Larnock, so, all these", "tokens": [472, 3174, 1570, 294, 264, 1009, 17774, 2424, 13, 682, 264, 2636, 3037, 295, 441, 1083, 1560, 11, 370, 11, 439, 613], "temperature": 0.0, "avg_logprob": -0.2736146899237149, "compression_ratio": 1.543859649122807, "no_speech_prob": 1.3601015780295711e-05}, {"id": 91, "seek": 66096, "start": 660.96, "end": 668.8000000000001, "text": " versions are new kernel releases, and in the third version, we added a new way to restrict", "tokens": [9606, 366, 777, 28256, 16952, 11, 293, 294, 264, 2636, 3037, 11, 321, 3869, 257, 777, 636, 281, 7694], "temperature": 0.0, "avg_logprob": -0.21727925158561545, "compression_ratio": 1.6457399103139014, "no_speech_prob": 9.487751412962098e-06}, {"id": 92, "seek": 66096, "start": 668.8000000000001, "end": 678.0, "text": " a file propagation. So, propagation in Larnock is to change the size of a file, and this was", "tokens": [257, 3991, 38377, 13, 407, 11, 38377, 294, 441, 1083, 1560, 307, 281, 1319, 264, 2744, 295, 257, 3991, 11, 293, 341, 390], "temperature": 0.0, "avg_logprob": -0.21727925158561545, "compression_ratio": 1.6457399103139014, "no_speech_prob": 9.487751412962098e-06}, {"id": 93, "seek": 66096, "start": 678.0, "end": 683.84, "text": " always allowed before because it wasn't endowed. It was a bit complex to implement this in", "tokens": [1009, 4350, 949, 570, 309, 2067, 380, 917, 24347, 13, 467, 390, 257, 857, 3997, 281, 4445, 341, 294], "temperature": 0.0, "avg_logprob": -0.21727925158561545, "compression_ratio": 1.6457399103139014, "no_speech_prob": 9.487751412962098e-06}, {"id": 94, "seek": 66096, "start": 683.84, "end": 690.0, "text": " the kernel at this time, but now it is possible. So, you can see that we can move items from", "tokens": [264, 28256, 412, 341, 565, 11, 457, 586, 309, 307, 1944, 13, 407, 11, 291, 393, 536, 300, 321, 393, 1286, 4754, 490], "temperature": 0.0, "avg_logprob": -0.21727925158561545, "compression_ratio": 1.6457399103139014, "no_speech_prob": 9.487751412962098e-06}, {"id": 95, "seek": 69000, "start": 690.0, "end": 695.96, "text": " the always denied box to the configurable and from the always allowed box to the configurable", "tokens": [264, 1009, 17774, 2424, 281, 264, 22192, 712, 293, 490, 264, 1009, 4350, 2424, 281, 264, 22192, 712], "temperature": 0.0, "avg_logprob": -0.2016283820657169, "compression_ratio": 1.7815533980582525, "no_speech_prob": 8.522994903614745e-06}, {"id": 96, "seek": 69000, "start": 695.96, "end": 703.72, "text": " list. So, application compatibility. There's two main things in compatibility. It is forward", "tokens": [1329, 13, 407, 11, 3861, 34237, 13, 821, 311, 732, 2135, 721, 294, 34237, 13, 467, 307, 2128], "temperature": 0.0, "avg_logprob": -0.2016283820657169, "compression_ratio": 1.7815533980582525, "no_speech_prob": 8.522994903614745e-06}, {"id": 97, "seek": 69000, "start": 703.72, "end": 709.84, "text": " compatibility in a way that when you update your kernel, you still can use the old kernel", "tokens": [34237, 294, 257, 636, 300, 562, 291, 5623, 428, 28256, 11, 291, 920, 393, 764, 264, 1331, 28256], "temperature": 0.0, "avg_logprob": -0.2016283820657169, "compression_ratio": 1.7815533980582525, "no_speech_prob": 8.522994903614745e-06}, {"id": 98, "seek": 69000, "start": 709.84, "end": 715.76, "text": " features. So, that's kind of common. And the backward compatibility in this case is, well,", "tokens": [4122, 13, 407, 11, 300, 311, 733, 295, 2689, 13, 400, 264, 23897, 34237, 294, 341, 1389, 307, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.2016283820657169, "compression_ratio": 1.7815533980582525, "no_speech_prob": 8.522994903614745e-06}, {"id": 99, "seek": 71576, "start": 715.76, "end": 720.52, "text": " when you're using a kernel feature, well, you might need the specification of the kernel", "tokens": [562, 291, 434, 1228, 257, 28256, 4111, 11, 731, 11, 291, 1062, 643, 264, 31256, 295, 264, 28256], "temperature": 0.0, "avg_logprob": -0.1700449877007063, "compression_ratio": 1.8601036269430051, "no_speech_prob": 1.9808609067695215e-05}, {"id": 100, "seek": 71576, "start": 720.52, "end": 729.04, "text": " that supports this feature. And if your application is running its launch on an old kernel, well,", "tokens": [300, 9346, 341, 4111, 13, 400, 498, 428, 3861, 307, 2614, 1080, 4025, 322, 364, 1331, 28256, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.1700449877007063, "compression_ratio": 1.8601036269430051, "no_speech_prob": 1.9808609067695215e-05}, {"id": 101, "seek": 71576, "start": 729.04, "end": 734.28, "text": " that feature might be missing. And the thing is, when you're developing an application,", "tokens": [300, 4111, 1062, 312, 5361, 13, 400, 264, 551, 307, 11, 562, 291, 434, 6416, 364, 3861, 11], "temperature": 0.0, "avg_logprob": -0.1700449877007063, "compression_ratio": 1.8601036269430051, "no_speech_prob": 1.9808609067695215e-05}, {"id": 102, "seek": 71576, "start": 734.28, "end": 739.48, "text": " well, you don't know on which kernel your application will run because, well, it's a", "tokens": [731, 11, 291, 500, 380, 458, 322, 597, 28256, 428, 3861, 486, 1190, 570, 11, 731, 11, 309, 311, 257], "temperature": 0.0, "avg_logprob": -0.1700449877007063, "compression_ratio": 1.8601036269430051, "no_speech_prob": 1.9808609067695215e-05}, {"id": 103, "seek": 73948, "start": 739.48, "end": 748.0, "text": " user choice and a distro choice. What comes with landlock is the ability to get the landlock,", "tokens": [4195, 3922, 293, 257, 1483, 340, 3922, 13, 708, 1487, 365, 2117, 4102, 307, 264, 3485, 281, 483, 264, 2117, 4102, 11], "temperature": 0.0, "avg_logprob": -0.24471350390501698, "compression_ratio": 1.662037037037037, "no_speech_prob": 3.109870522166602e-05}, {"id": 104, "seek": 73948, "start": 748.0, "end": 754.16, "text": " what we call the ABI version. So, it's really just a number. That increments are started", "tokens": [437, 321, 818, 264, 316, 11291, 3037, 13, 407, 11, 309, 311, 534, 445, 257, 1230, 13, 663, 1946, 1117, 366, 1409], "temperature": 0.0, "avg_logprob": -0.24471350390501698, "compression_ratio": 1.662037037037037, "no_speech_prob": 3.109870522166602e-05}, {"id": 105, "seek": 73948, "start": 754.16, "end": 759.76, "text": " at one, and then increments for each new set of features, which is added to the kernel.", "tokens": [412, 472, 11, 293, 550, 1946, 1117, 337, 1184, 777, 992, 295, 4122, 11, 597, 307, 3869, 281, 264, 28256, 13], "temperature": 0.0, "avg_logprob": -0.24471350390501698, "compression_ratio": 1.662037037037037, "no_speech_prob": 3.109870522166602e-05}, {"id": 106, "seek": 73948, "start": 759.76, "end": 767.16, "text": " So, to give you an idea, it's really simple to get this ID version. It's with a landlock", "tokens": [407, 11, 281, 976, 291, 364, 1558, 11, 309, 311, 534, 2199, 281, 483, 341, 7348, 3037, 13, 467, 311, 365, 257, 2117, 4102], "temperature": 0.0, "avg_logprob": -0.24471350390501698, "compression_ratio": 1.662037037037037, "no_speech_prob": 3.109870522166602e-05}, {"id": 107, "seek": 76716, "start": 767.16, "end": 773.9599999999999, "text": " with a specific flag. So, yeah, it's a T code, but it's really simple. So, what we want", "tokens": [365, 257, 2685, 7166, 13, 407, 11, 1338, 11, 309, 311, 257, 314, 3089, 11, 457, 309, 311, 534, 2199, 13, 407, 11, 437, 321, 528], "temperature": 0.0, "avg_logprob": -0.2438515968693113, "compression_ratio": 1.6589861751152073, "no_speech_prob": 3.4021908504655585e-05}, {"id": 108, "seek": 76716, "start": 773.9599999999999, "end": 780.0799999999999, "text": " to do at first, well, these four main properties. The first one is to be able to, well, to make", "tokens": [281, 360, 412, 700, 11, 731, 11, 613, 1451, 2135, 7221, 13, 440, 700, 472, 307, 281, 312, 1075, 281, 11, 731, 11, 281, 652], "temperature": 0.0, "avg_logprob": -0.2438515968693113, "compression_ratio": 1.6589861751152073, "no_speech_prob": 3.4021908504655585e-05}, {"id": 109, "seek": 76716, "start": 780.0799999999999, "end": 788.4, "text": " it easy to use for developers, of course. So, we want something which is generic, which", "tokens": [309, 1858, 281, 764, 337, 8849, 11, 295, 1164, 13, 407, 11, 321, 528, 746, 597, 307, 19577, 11, 597], "temperature": 0.0, "avg_logprob": -0.2438515968693113, "compression_ratio": 1.6589861751152073, "no_speech_prob": 3.4021908504655585e-05}, {"id": 110, "seek": 76716, "start": 788.4, "end": 794.4, "text": " kind of follows the build-up pattern because, well, it's kind of common and easy to use.", "tokens": [733, 295, 10002, 264, 1322, 12, 1010, 5102, 570, 11, 731, 11, 309, 311, 733, 295, 2689, 293, 1858, 281, 764, 13], "temperature": 0.0, "avg_logprob": -0.2438515968693113, "compression_ratio": 1.6589861751152073, "no_speech_prob": 3.4021908504655585e-05}, {"id": 111, "seek": 79440, "start": 794.4, "end": 801.4, "text": " We want developers to focus on what they want to restrict, not the internal, well, implementation", "tokens": [492, 528, 8849, 281, 1879, 322, 437, 436, 528, 281, 7694, 11, 406, 264, 6920, 11, 731, 11, 11420], "temperature": 0.0, "avg_logprob": -0.1504802703857422, "compression_ratio": 1.6287425149700598, "no_speech_prob": 1.6655802028253675e-05}, {"id": 112, "seek": 79440, "start": 801.4, "end": 811.3199999999999, "text": " in the kernel. And we want them to gradually go from a coarse-grain access restriction", "tokens": [294, 264, 28256, 13, 400, 321, 528, 552, 281, 13145, 352, 490, 257, 39312, 12, 70, 7146, 2105, 29529], "temperature": 0.0, "avg_logprob": -0.1504802703857422, "compression_ratio": 1.6287425149700598, "no_speech_prob": 1.6655802028253675e-05}, {"id": 113, "seek": 79440, "start": 811.3199999999999, "end": 819.04, "text": " to a fine-grain one. So, we don't want them to need to implement a fine-grain at first.", "tokens": [281, 257, 2489, 12, 70, 7146, 472, 13, 407, 11, 321, 500, 380, 528, 552, 281, 643, 281, 4445, 257, 2489, 12, 70, 7146, 412, 700, 13], "temperature": 0.0, "avg_logprob": -0.1504802703857422, "compression_ratio": 1.6287425149700598, "no_speech_prob": 1.6655802028253675e-05}, {"id": 114, "seek": 81904, "start": 819.04, "end": 824.56, "text": " It might be difficult, too difficult. So, yeah, in the same way that we can incrementally", "tokens": [467, 1062, 312, 2252, 11, 886, 2252, 13, 407, 11, 1338, 11, 294, 264, 912, 636, 300, 321, 393, 26200, 379], "temperature": 0.0, "avg_logprob": -0.18695738508894638, "compression_ratio": 1.6153846153846154, "no_speech_prob": 4.5772358134854585e-05}, {"id": 115, "seek": 81904, "start": 824.56, "end": 830.7199999999999, "text": " add new set of features, we can also incrementally restrict more and more of the time. So, no", "tokens": [909, 777, 992, 295, 4122, 11, 321, 393, 611, 26200, 379, 7694, 544, 293, 544, 295, 264, 565, 13, 407, 11, 572], "temperature": 0.0, "avg_logprob": -0.18695738508894638, "compression_ratio": 1.6153846153846154, "no_speech_prob": 4.5772358134854585e-05}, {"id": 116, "seek": 81904, "start": 830.7199999999999, "end": 839.92, "text": " need to be super strict at first. And, yeah, it should be simpler to write, well, for the", "tokens": [643, 281, 312, 1687, 10910, 412, 700, 13, 400, 11, 1338, 11, 309, 820, 312, 18587, 281, 2464, 11, 731, 11, 337, 264], "temperature": 0.0, "avg_logprob": -0.18695738508894638, "compression_ratio": 1.6153846153846154, "no_speech_prob": 4.5772358134854585e-05}, {"id": 117, "seek": 83992, "start": 839.92, "end": 850.4399999999999, "text": " common cases. Okay. At first, the first improvement was to create group access rights. So, let's", "tokens": [2689, 3331, 13, 1033, 13, 1711, 700, 11, 264, 700, 10444, 390, 281, 1884, 1594, 2105, 4601, 13, 407, 11, 718, 311], "temperature": 0.0, "avg_logprob": -0.2167171395343283, "compression_ratio": 1.532967032967033, "no_speech_prob": 2.1727551938965917e-05}, {"id": 118, "seek": 83992, "start": 850.4399999999999, "end": 857.56, "text": " say you know which landlock version is supported by the running kernel. Let's say it's a second", "tokens": [584, 291, 458, 597, 2117, 4102, 3037, 307, 8104, 538, 264, 2614, 28256, 13, 961, 311, 584, 309, 311, 257, 1150], "temperature": 0.0, "avg_logprob": -0.2167171395343283, "compression_ratio": 1.532967032967033, "no_speech_prob": 2.1727551938965917e-05}, {"id": 119, "seek": 83992, "start": 857.56, "end": 863.68, "text": " version. Then you can create a new root set which will get all the access rights which", "tokens": [3037, 13, 1396, 291, 393, 1884, 257, 777, 5593, 992, 597, 486, 483, 439, 264, 2105, 4601, 597], "temperature": 0.0, "avg_logprob": -0.2167171395343283, "compression_ratio": 1.532967032967033, "no_speech_prob": 2.1727551938965917e-05}, {"id": 120, "seek": 86368, "start": 863.68, "end": 871.2399999999999, "text": " are supported by this basic kernel. So, you just call the end-of-access with XFS from", "tokens": [366, 8104, 538, 341, 3875, 28256, 13, 407, 11, 291, 445, 818, 264, 917, 12, 2670, 12, 326, 780, 365, 1783, 29318, 490], "temperature": 0.0, "avg_logprob": -0.2921528121800099, "compression_ratio": 1.5855855855855856, "no_speech_prob": 2.3143933503888547e-05}, {"id": 121, "seek": 86368, "start": 871.2399999999999, "end": 877.8399999999999, "text": " all and then ABI2. And then you can do kind of the same when you're adding a new rule.", "tokens": [439, 293, 550, 316, 11291, 17, 13, 400, 550, 291, 393, 360, 733, 295, 264, 912, 562, 291, 434, 5127, 257, 777, 4978, 13], "temperature": 0.0, "avg_logprob": -0.2921528121800099, "compression_ratio": 1.5855855855855856, "no_speech_prob": 2.3143933503888547e-05}, {"id": 122, "seek": 86368, "start": 877.8399999999999, "end": 883.4399999999999, "text": " And this time, well, you want to add an exception on the slash result to make it readable. So,", "tokens": [400, 341, 565, 11, 731, 11, 291, 528, 281, 909, 364, 11183, 322, 264, 17330, 1874, 281, 652, 309, 49857, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.2921528121800099, "compression_ratio": 1.5855855855855856, "no_speech_prob": 2.3143933503888547e-05}, {"id": 123, "seek": 86368, "start": 883.4399999999999, "end": 890.28, "text": " in this case, there's two main groups, the from read and the from write. So, in, for", "tokens": [294, 341, 1389, 11, 456, 311, 732, 2135, 3935, 11, 264, 490, 1401, 293, 264, 490, 2464, 13, 407, 11, 294, 11, 337], "temperature": 0.0, "avg_logprob": -0.2921528121800099, "compression_ratio": 1.5855855855855856, "no_speech_prob": 2.3143933503888547e-05}, {"id": 124, "seek": 89028, "start": 890.28, "end": 896.0799999999999, "text": " example, the from read includes reading a file, but also reading a directory. So, listing", "tokens": [1365, 11, 264, 490, 1401, 5974, 3760, 257, 3991, 11, 457, 611, 3760, 257, 21120, 13, 407, 11, 22161], "temperature": 0.0, "avg_logprob": -0.21215609382180606, "compression_ratio": 1.6418604651162791, "no_speech_prob": 1.718448766041547e-05}, {"id": 125, "seek": 89028, "start": 896.0799999999999, "end": 905.0799999999999, "text": " a directory. Okay. Second property that we would like to have is being able to enforce", "tokens": [257, 21120, 13, 1033, 13, 5736, 4707, 300, 321, 576, 411, 281, 362, 307, 885, 1075, 281, 24825], "temperature": 0.0, "avg_logprob": -0.21215609382180606, "compression_ratio": 1.6418604651162791, "no_speech_prob": 1.718448766041547e-05}, {"id": 126, "seek": 89028, "start": 905.0799999999999, "end": 911.36, "text": " a strict restriction. So, even if we don't know on which kernel the application will", "tokens": [257, 10910, 29529, 13, 407, 11, 754, 498, 321, 500, 380, 458, 322, 597, 28256, 264, 3861, 486], "temperature": 0.0, "avg_logprob": -0.21215609382180606, "compression_ratio": 1.6418604651162791, "no_speech_prob": 1.718448766041547e-05}, {"id": 127, "seek": 89028, "start": 911.36, "end": 918.68, "text": " run, on some cases, we might want to be sure that all features are enforced and restricted.", "tokens": [1190, 11, 322, 512, 3331, 11, 321, 1062, 528, 281, 312, 988, 300, 439, 4122, 366, 40953, 293, 20608, 13], "temperature": 0.0, "avg_logprob": -0.21215609382180606, "compression_ratio": 1.6418604651162791, "no_speech_prob": 1.718448766041547e-05}, {"id": 128, "seek": 91868, "start": 918.68, "end": 924.52, "text": " There's two use cases here. The first one is to test it. If you want to sandbox an application,", "tokens": [821, 311, 732, 764, 3331, 510, 13, 440, 700, 472, 307, 281, 1500, 309, 13, 759, 291, 528, 281, 42115, 364, 3861, 11], "temperature": 0.0, "avg_logprob": -0.18411181654248918, "compression_ratio": 1.829268292682927, "no_speech_prob": 3.3159874874399975e-05}, {"id": 129, "seek": 91868, "start": 924.52, "end": 929.1999999999999, "text": " you want to make sure that even if you're using all the sandboxing features, well, your", "tokens": [291, 528, 281, 652, 988, 300, 754, 498, 291, 434, 1228, 439, 264, 42115, 278, 4122, 11, 731, 11, 428], "temperature": 0.0, "avg_logprob": -0.18411181654248918, "compression_ratio": 1.829268292682927, "no_speech_prob": 3.3159874874399975e-05}, {"id": 130, "seek": 91868, "start": 929.1999999999999, "end": 934.28, "text": " application will work as expected. So, that's really important. And you don't want to run", "tokens": [3861, 486, 589, 382, 5176, 13, 407, 11, 300, 311, 534, 1021, 13, 400, 291, 500, 380, 528, 281, 1190], "temperature": 0.0, "avg_logprob": -0.18411181654248918, "compression_ratio": 1.829268292682927, "no_speech_prob": 3.3159874874399975e-05}, {"id": 131, "seek": 91868, "start": 934.28, "end": 939.52, "text": " your application in an old kernel and kind of be fooled by the fact that your application", "tokens": [428, 3861, 294, 364, 1331, 28256, 293, 733, 295, 312, 33372, 538, 264, 1186, 300, 428, 3861], "temperature": 0.0, "avg_logprob": -0.18411181654248918, "compression_ratio": 1.829268292682927, "no_speech_prob": 3.3159874874399975e-05}, {"id": 132, "seek": 91868, "start": 939.52, "end": 945.0, "text": " is running because there's no, well, not all secret features are enabled. So, you want", "tokens": [307, 2614, 570, 456, 311, 572, 11, 731, 11, 406, 439, 4054, 4122, 366, 15172, 13, 407, 11, 291, 528], "temperature": 0.0, "avg_logprob": -0.18411181654248918, "compression_ratio": 1.829268292682927, "no_speech_prob": 3.3159874874399975e-05}, {"id": 133, "seek": 94500, "start": 945.0, "end": 950.6, "text": " to cut these kind of issues in your CI. And also for security software, well, you want", "tokens": [281, 1723, 613, 733, 295, 2663, 294, 428, 37777, 13, 400, 611, 337, 3825, 4722, 11, 731, 11, 291, 528], "temperature": 0.0, "avg_logprob": -0.20291553224836076, "compression_ratio": 1.6073059360730593, "no_speech_prob": 1.802627411962021e-05}, {"id": 134, "seek": 94500, "start": 950.6, "end": 957.56, "text": " to have some security guarantees. So, you want to have a way to fold the whole sandboxing", "tokens": [281, 362, 512, 3825, 32567, 13, 407, 11, 291, 528, 281, 362, 257, 636, 281, 4860, 264, 1379, 42115, 278], "temperature": 0.0, "avg_logprob": -0.20291553224836076, "compression_ratio": 1.6073059360730593, "no_speech_prob": 1.802627411962021e-05}, {"id": 135, "seek": 94500, "start": 957.56, "end": 963.8, "text": " with all secret features that we embedded in our application. The third property is to", "tokens": [365, 439, 4054, 4122, 300, 321, 16741, 294, 527, 3861, 13, 440, 2636, 4707, 307, 281], "temperature": 0.0, "avg_logprob": -0.20291553224836076, "compression_ratio": 1.6073059360730593, "no_speech_prob": 1.802627411962021e-05}, {"id": 136, "seek": 94500, "start": 963.8, "end": 968.84, "text": " be able to enforce the best for security with some minimal requirements. So, that's kind", "tokens": [312, 1075, 281, 24825, 264, 1151, 337, 3825, 365, 512, 13206, 7728, 13, 407, 11, 300, 311, 733], "temperature": 0.0, "avg_logprob": -0.20291553224836076, "compression_ratio": 1.6073059360730593, "no_speech_prob": 1.802627411962021e-05}, {"id": 137, "seek": 96884, "start": 968.84, "end": 974.72, "text": " of the opposite. And this use case is mainly for end users because end user, well, you", "tokens": [295, 264, 6182, 13, 400, 341, 764, 1389, 307, 8704, 337, 917, 5022, 570, 917, 4195, 11, 731, 11, 291], "temperature": 0.0, "avg_logprob": -0.2043589154879252, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.582165143394377e-05}, {"id": 138, "seek": 96884, "start": 974.72, "end": 983.2, "text": " don't know which kernel they will use. And so, you want to be able to enforce an opportunistic", "tokens": [500, 380, 458, 597, 28256, 436, 486, 764, 13, 400, 370, 11, 291, 528, 281, 312, 1075, 281, 24825, 364, 2070, 3142], "temperature": 0.0, "avg_logprob": -0.2043589154879252, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.582165143394377e-05}, {"id": 139, "seek": 96884, "start": 983.2, "end": 990.76, "text": " sandboxing. So, if they have a new kernel, well, they will be more protected. If they", "tokens": [42115, 278, 13, 407, 11, 498, 436, 362, 257, 777, 28256, 11, 731, 11, 436, 486, 312, 544, 10594, 13, 759, 436], "temperature": 0.0, "avg_logprob": -0.2043589154879252, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.582165143394377e-05}, {"id": 140, "seek": 96884, "start": 990.76, "end": 996.5600000000001, "text": " have an old kernel, they might not be protected at all, but that's not your choice, that's", "tokens": [362, 364, 1331, 28256, 11, 436, 1062, 406, 312, 10594, 412, 439, 11, 457, 300, 311, 406, 428, 3922, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.2043589154879252, "compression_ratio": 1.6966824644549763, "no_speech_prob": 2.582165143394377e-05}, {"id": 141, "seek": 99656, "start": 996.56, "end": 1001.88, "text": " not their choice. And at the end, they want to run your application anywhere. So, another", "tokens": [406, 641, 3922, 13, 400, 412, 264, 917, 11, 436, 528, 281, 1190, 428, 3861, 4992, 13, 407, 11, 1071], "temperature": 0.0, "avg_logprob": -0.13977733878202217, "compression_ratio": 1.6409090909090909, "no_speech_prob": 2.531558675400447e-05}, {"id": 142, "seek": 99656, "start": 1001.88, "end": 1007.9599999999999, "text": " requirement is to be able to disable the whole sandboxing if some features which are required", "tokens": [11695, 307, 281, 312, 1075, 281, 28362, 264, 1379, 42115, 278, 498, 512, 4122, 597, 366, 4739], "temperature": 0.0, "avg_logprob": -0.13977733878202217, "compression_ratio": 1.6409090909090909, "no_speech_prob": 2.531558675400447e-05}, {"id": 143, "seek": 99656, "start": 1007.9599999999999, "end": 1013.56, "text": " may not be met. And this approach should be easier to write than others because it is", "tokens": [815, 406, 312, 1131, 13, 400, 341, 3109, 820, 312, 3571, 281, 2464, 813, 2357, 570, 309, 307], "temperature": 0.0, "avg_logprob": -0.13977733878202217, "compression_ratio": 1.6409090909090909, "no_speech_prob": 2.531558675400447e-05}, {"id": 144, "seek": 99656, "start": 1013.56, "end": 1021.3199999999999, "text": " the most common thing to do. And the last property is being able to run, well, to configure", "tokens": [264, 881, 2689, 551, 281, 360, 13, 400, 264, 1036, 4707, 307, 885, 1075, 281, 1190, 11, 731, 11, 281, 22162], "temperature": 0.0, "avg_logprob": -0.13977733878202217, "compression_ratio": 1.6409090909090909, "no_speech_prob": 2.531558675400447e-05}, {"id": 145, "seek": 102132, "start": 1021.32, "end": 1031.0800000000002, "text": " at runtime the sandboxing, but to make it in a way that you're running most of the codes.", "tokens": [412, 34474, 264, 42115, 278, 11, 457, 281, 652, 309, 294, 257, 636, 300, 291, 434, 2614, 881, 295, 264, 14211, 13], "temperature": 0.0, "avg_logprob": -0.16097586495535715, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.461954449652694e-05}, {"id": 146, "seek": 102132, "start": 1031.0800000000002, "end": 1039.3200000000002, "text": " So, the idea is to be able to have kind of the same code running everywhere, almost,", "tokens": [407, 11, 264, 1558, 307, 281, 312, 1075, 281, 362, 733, 295, 264, 912, 3089, 2614, 5315, 11, 1920, 11], "temperature": 0.0, "avg_logprob": -0.16097586495535715, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.461954449652694e-05}, {"id": 147, "seek": 102132, "start": 1039.3200000000002, "end": 1046.44, "text": " even if they don't have a recent kernel. Why that? Because you want to kind of identify", "tokens": [754, 498, 436, 500, 380, 362, 257, 5162, 28256, 13, 1545, 300, 30, 1436, 291, 528, 281, 733, 295, 5876], "temperature": 0.0, "avg_logprob": -0.16097586495535715, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.461954449652694e-05}, {"id": 148, "seek": 104644, "start": 1046.44, "end": 1056.6000000000001, "text": " early kind of some issues which might be linked to the sandboxing code and that's if you have,", "tokens": [2440, 733, 295, 512, 2663, 597, 1062, 312, 9408, 281, 264, 42115, 278, 3089, 293, 300, 311, 498, 291, 362, 11], "temperature": 0.0, "avg_logprob": -0.230129323107131, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.8887805708800443e-05}, {"id": 149, "seek": 104644, "start": 1056.6000000000001, "end": 1061.72, "text": " let's say, two users using a recent kernel and four users using an old kernel, well,", "tokens": [718, 311, 584, 11, 732, 5022, 1228, 257, 5162, 28256, 293, 1451, 5022, 1228, 364, 1331, 28256, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.230129323107131, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.8887805708800443e-05}, {"id": 150, "seek": 104644, "start": 1061.72, "end": 1067.4, "text": " you might want to test as much as possible with all your users, even if they don't have", "tokens": [291, 1062, 528, 281, 1500, 382, 709, 382, 1944, 365, 439, 428, 5022, 11, 754, 498, 436, 500, 380, 362], "temperature": 0.0, "avg_logprob": -0.230129323107131, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.8887805708800443e-05}, {"id": 151, "seek": 104644, "start": 1067.4, "end": 1075.92, "text": " a new kernel. So, the first approach we took was, so we'll go quickly here, there's three", "tokens": [257, 777, 28256, 13, 407, 11, 264, 700, 3109, 321, 1890, 390, 11, 370, 321, 603, 352, 2661, 510, 11, 456, 311, 1045], "temperature": 0.0, "avg_logprob": -0.230129323107131, "compression_ratio": 1.6227272727272728, "no_speech_prob": 1.8887805708800443e-05}, {"id": 152, "seek": 107592, "start": 1075.92, "end": 1082.04, "text": " approach. The first one was to change, well, to add a new method to the root set builder", "tokens": [3109, 13, 440, 700, 472, 390, 281, 1319, 11, 731, 11, 281, 909, 257, 777, 3170, 281, 264, 5593, 992, 27377], "temperature": 0.0, "avg_logprob": -0.2573630515109287, "compression_ratio": 1.7574257425742574, "no_speech_prob": 4.5230932300910354e-05}, {"id": 153, "seek": 107592, "start": 1082.04, "end": 1090.52, "text": " pattern. So, it was a simple method to set and set the best approach. So, if it was false,", "tokens": [5102, 13, 407, 11, 309, 390, 257, 2199, 3170, 281, 992, 293, 992, 264, 1151, 3109, 13, 407, 11, 498, 309, 390, 7908, 11], "temperature": 0.0, "avg_logprob": -0.2573630515109287, "compression_ratio": 1.7574257425742574, "no_speech_prob": 4.5230932300910354e-05}, {"id": 154, "seek": 107592, "start": 1090.52, "end": 1095.48, "text": " it was required to have this feature. So, in the example, an application that needed", "tokens": [309, 390, 4739, 281, 362, 341, 4111, 13, 407, 11, 294, 264, 1365, 11, 364, 3861, 300, 2978], "temperature": 0.0, "avg_logprob": -0.2573630515109287, "compression_ratio": 1.7574257425742574, "no_speech_prob": 4.5230932300910354e-05}, {"id": 155, "seek": 107592, "start": 1095.48, "end": 1101.0, "text": " to move files from one directory to another needed to have the access effects refer access", "tokens": [281, 1286, 7098, 490, 472, 21120, 281, 1071, 2978, 281, 362, 264, 2105, 5065, 2864, 2105], "temperature": 0.0, "avg_logprob": -0.2573630515109287, "compression_ratio": 1.7574257425742574, "no_speech_prob": 4.5230932300910354e-05}, {"id": 156, "seek": 110100, "start": 1101.0, "end": 1108.68, "text": " right to allow this access. And if it wasn't the case, well, the something should not be", "tokens": [558, 281, 2089, 341, 2105, 13, 400, 498, 309, 2067, 380, 264, 1389, 11, 731, 11, 264, 746, 820, 406, 312], "temperature": 0.0, "avg_logprob": -0.24150159735428658, "compression_ratio": 1.63013698630137, "no_speech_prob": 2.5027309675351717e-05}, {"id": 157, "seek": 110100, "start": 1108.68, "end": 1114.88, "text": " enforced, otherwise, it will break the application. So, that is a requirement. And in this case,", "tokens": [40953, 11, 5911, 11, 309, 486, 1821, 264, 3861, 13, 407, 11, 300, 307, 257, 11695, 13, 400, 294, 341, 1389, 11], "temperature": 0.0, "avg_logprob": -0.24150159735428658, "compression_ratio": 1.63013698630137, "no_speech_prob": 2.5027309675351717e-05}, {"id": 158, "seek": 110100, "start": 1114.88, "end": 1120.84, "text": " that was a way to kind of change the state of the builder over time. So, this is kind", "tokens": [300, 390, 257, 636, 281, 733, 295, 1319, 264, 1785, 295, 264, 27377, 670, 565, 13, 407, 11, 341, 307, 733], "temperature": 0.0, "avg_logprob": -0.24150159735428658, "compression_ratio": 1.63013698630137, "no_speech_prob": 2.5027309675351717e-05}, {"id": 159, "seek": 110100, "start": 1120.84, "end": 1126.88, "text": " of flexible, easy to understand, but some kind of cases. And, yeah, it makes the code", "tokens": [295, 11358, 11, 1858, 281, 1223, 11, 457, 512, 733, 295, 3331, 13, 400, 11, 1338, 11, 309, 1669, 264, 3089], "temperature": 0.0, "avg_logprob": -0.24150159735428658, "compression_ratio": 1.63013698630137, "no_speech_prob": 2.5027309675351717e-05}, {"id": 160, "seek": 112688, "start": 1126.88, "end": 1133.5600000000002, "text": " not really clean. Another approach was kind of to do the same, but this time, with instead", "tokens": [406, 534, 2541, 13, 3996, 3109, 390, 733, 295, 281, 360, 264, 912, 11, 457, 341, 565, 11, 365, 2602], "temperature": 0.0, "avg_logprob": -0.21403177005728496, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.0945041140075773e-05}, {"id": 161, "seek": 112688, "start": 1133.5600000000002, "end": 1142.0800000000002, "text": " of two shifts, enable or disable, there were three ways to change it. The best-ifort way,", "tokens": [295, 732, 19201, 11, 9528, 420, 28362, 11, 456, 645, 1045, 2098, 281, 1319, 309, 13, 440, 1151, 12, 351, 477, 636, 11], "temperature": 0.0, "avg_logprob": -0.21403177005728496, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.0945041140075773e-05}, {"id": 162, "seek": 112688, "start": 1142.0800000000002, "end": 1146.88, "text": " the soft requirement and the hard requirement. So, a way to make it best-ifort, a way to", "tokens": [264, 2787, 11695, 293, 264, 1152, 11695, 13, 407, 11, 257, 636, 281, 652, 309, 1151, 12, 351, 477, 11, 257, 636, 281], "temperature": 0.0, "avg_logprob": -0.21403177005728496, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.0945041140075773e-05}, {"id": 163, "seek": 112688, "start": 1146.88, "end": 1153.16, "text": " make it error-out if there's any unsupported feature, and a way to disable the sandbox", "tokens": [652, 309, 6713, 12, 346, 498, 456, 311, 604, 2693, 10504, 14813, 4111, 11, 293, 257, 636, 281, 28362, 264, 42115], "temperature": 0.0, "avg_logprob": -0.21403177005728496, "compression_ratio": 1.6952380952380952, "no_speech_prob": 1.0945041140075773e-05}, {"id": 164, "seek": 115316, "start": 1153.16, "end": 1160.5600000000002, "text": " without error if some feature were not supported. So, that wasn't ideal, neither. And the last", "tokens": [1553, 6713, 498, 512, 4111, 645, 406, 8104, 13, 407, 11, 300, 2067, 380, 7157, 11, 9662, 13, 400, 264, 1036], "temperature": 0.0, "avg_logprob": -0.17545896646927814, "compression_ratio": 1.6222222222222222, "no_speech_prob": 3.26196568494197e-05}, {"id": 165, "seek": 115316, "start": 1160.5600000000002, "end": 1167.72, "text": " approach, which is currently working for us, is kind of a new one. So, the idea is to make", "tokens": [3109, 11, 597, 307, 4362, 1364, 337, 505, 11, 307, 733, 295, 257, 777, 472, 13, 407, 11, 264, 1558, 307, 281, 652], "temperature": 0.0, "avg_logprob": -0.17545896646927814, "compression_ratio": 1.6222222222222222, "no_speech_prob": 3.26196568494197e-05}, {"id": 166, "seek": 115316, "start": 1167.72, "end": 1175.4, "text": " it still configurable and to follow all these properties, but to make it, well, a bit simpler", "tokens": [309, 920, 22192, 712, 293, 281, 1524, 439, 613, 7221, 11, 457, 281, 652, 309, 11, 731, 11, 257, 857, 18587], "temperature": 0.0, "avg_logprob": -0.17545896646927814, "compression_ratio": 1.6222222222222222, "no_speech_prob": 3.26196568494197e-05}, {"id": 167, "seek": 115316, "start": 1175.4, "end": 1181.0400000000002, "text": " and still flexible. So, here, in a shell, well, you can make a new rule set that will", "tokens": [293, 920, 11358, 13, 407, 11, 510, 11, 294, 257, 8720, 11, 731, 11, 291, 393, 652, 257, 777, 4978, 992, 300, 486], "temperature": 0.0, "avg_logprob": -0.17545896646927814, "compression_ratio": 1.6222222222222222, "no_speech_prob": 3.26196568494197e-05}, {"id": 168, "seek": 118104, "start": 1181.04, "end": 1185.6399999999999, "text": " error-out if there's any unsupported features, but at the same time, you can specify which", "tokens": [6713, 12, 346, 498, 456, 311, 604, 2693, 10504, 14813, 4122, 11, 457, 412, 264, 912, 565, 11, 291, 393, 16500, 597], "temperature": 0.0, "avg_logprob": -0.20940029377840003, "compression_ratio": 1.5777777777777777, "no_speech_prob": 8.589529898017645e-05}, {"id": 169, "seek": 118104, "start": 1185.6399999999999, "end": 1191.6399999999999, "text": " feature is required to enable the sandbox or not. So, that's kind of specific, but, yeah,", "tokens": [4111, 307, 4739, 281, 9528, 264, 42115, 420, 406, 13, 407, 11, 300, 311, 733, 295, 2685, 11, 457, 11, 1338, 11], "temperature": 0.0, "avg_logprob": -0.20940029377840003, "compression_ratio": 1.5777777777777777, "no_speech_prob": 8.589529898017645e-05}, {"id": 170, "seek": 118104, "start": 1191.6399999999999, "end": 1199.6, "text": " should be better. So, going forward, there's a lot going on in this first library. A lot", "tokens": [820, 312, 1101, 13, 407, 11, 516, 2128, 11, 456, 311, 257, 688, 516, 322, 294, 341, 700, 6405, 13, 316, 688], "temperature": 0.0, "avg_logprob": -0.20940029377840003, "compression_ratio": 1.5777777777777777, "no_speech_prob": 8.589529898017645e-05}, {"id": 171, "seek": 118104, "start": 1199.6, "end": 1205.24, "text": " to improve. You help, you help, you get a presentation, and I encourage you to, well,", "tokens": [281, 3470, 13, 509, 854, 11, 291, 854, 11, 291, 483, 257, 5860, 11, 293, 286, 5373, 291, 281, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.20940029377840003, "compression_ratio": 1.5777777777777777, "no_speech_prob": 8.589529898017645e-05}, {"id": 172, "seek": 120524, "start": 1205.24, "end": 1211.48, "text": " then make your application or others. And, well, there's some tips if you want to get", "tokens": [550, 652, 428, 3861, 420, 2357, 13, 400, 11, 731, 11, 456, 311, 512, 6082, 498, 291, 528, 281, 483], "temperature": 0.0, "avg_logprob": -0.30335269254796643, "compression_ratio": 1.5144508670520231, "no_speech_prob": 8.992908988147974e-05}, {"id": 173, "seek": 120524, "start": 1211.48, "end": 1215.0, "text": " some motivation here. It's a rewards program. So, thank you for attention. There's some", "tokens": [512, 12335, 510, 13, 467, 311, 257, 17203, 1461, 13, 407, 11, 1309, 291, 337, 3202, 13, 821, 311, 512], "temperature": 0.0, "avg_logprob": -0.30335269254796643, "compression_ratio": 1.5144508670520231, "no_speech_prob": 8.992908988147974e-05}, {"id": 174, "seek": 121500, "start": 1215.0, "end": 1235.12, "text": " interesting link here. This talk was kind of a dance, but I hope you enjoyed. Thank you.", "tokens": [50364, 1880, 2113, 510, 13, 639, 751, 390, 733, 295, 257, 4489, 11, 457, 286, 1454, 291, 4626, 13, 1044, 291, 13, 51370], "temperature": 0.0, "avg_logprob": -0.2214065988858541, "compression_ratio": 1.0602409638554218, "no_speech_prob": 0.0005830844747833908}], "language": "en"}