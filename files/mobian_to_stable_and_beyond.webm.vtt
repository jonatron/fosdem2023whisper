WEBVTT

00:00.000 --> 00:18.240
Thank you everyone and thank you for attending this presentation.

00:18.240 --> 00:24.240
So the title is Mobian to Stable and Beyond because right now we've been only doing some

00:24.240 --> 00:32.960
development release but first what is Mobian? You could think of it as a Debian derivative

00:32.960 --> 00:40.000
or in Debian language a blend which is targeting mobile devices such as smartphones and tablets.

00:42.000 --> 00:48.720
We provide a separate package repository but it's not a standalone distribution right

00:48.720 --> 00:56.480
and we have some ready-to-use disk images which are built for several devices and more on that

00:56.480 --> 01:04.880
later but Mobian is actually a very very small overlay. In our whole package repository we have

01:04.880 --> 01:15.920
44 source packages compared to 35,000 and more on Debian itself so it's really some tiny bits

01:15.920 --> 01:22.800
and actually we are planning to drop some of those packages and my hope is that basically

01:22.800 --> 01:31.280
one year from now we will be down to something like 15 or maybe 20 packages at most because we

01:31.280 --> 01:37.520
have some transitional packages and actually the most difficult to get rid of will be device support

01:37.520 --> 01:44.560
packages where we have downstream patch kernels and stuff like that but in the end Mobian isn't

01:44.560 --> 01:50.640
supposed to be a long-term project it's really supposed to be merged into Debian itself and

01:50.640 --> 01:56.880
just improve the overall Debian ecosystem rather than being a standalone project aimed solely at

01:56.880 --> 02:05.120
mobile users. The question we have been seeing a lot lately over the past few months is basically

02:05.120 --> 02:11.920
where can I find the latest Mobian stable image? You can't because it doesn't exist yet.

02:11.920 --> 02:19.280
We target Debian testing which is a moving target you could think of it as a kind of

02:19.280 --> 02:26.880
rolling release distribution and the Debian testing distro is frozen every once in a while

02:26.880 --> 02:35.600
it's about every once every two years and then moved on to Debian stable. The latest stable

02:35.600 --> 02:42.240
release from Debian was bullseye which was released a bit less than two years ago and back then we

02:42.240 --> 02:53.040
definitely weren't ready for prime time. For example we had version 0.6.8.2 while we now

02:53.040 --> 03:00.880
up to version 0.24 for the compositor and shell sides and there's been a lot of progress over

03:00.880 --> 03:08.720
the past two years. Back when bullseye was released we didn't have stuff like eG25 manager

03:08.720 --> 03:14.800
which is basically a piece of software handling the pine phone and pine phone pro modem configuring

03:14.800 --> 03:23.600
it properly to work as we expect. We didn't have MMS we have very few adaptive applications because

03:23.600 --> 03:30.800
lib add waiter at the time was not even existing we had lib handy but no GTK4 and no lib add waiter

03:31.840 --> 03:40.240
and so in the end we decided against releasing a stable Mobian version for bullseye and the ecosystem

03:40.240 --> 03:47.680
was only starting to ramp up there were still lots of issues and bugs and instabilities and really a

03:47.680 --> 03:57.040
low count of actually usable mobile applications. So what does going stable mean for Mobian?

03:58.960 --> 04:03.920
If you look back at the bookworm development cycle which is basically the past two years

04:05.600 --> 04:11.600
we've seen some great progress both in the overall mobile ecosystem and in Debian itself.

04:11.600 --> 04:19.280
The system is really really richer than it was before and it's still growing and more and more

04:19.280 --> 04:26.720
people are creating or modifying applications so they can run just fine on our tiny displays here.

04:28.800 --> 04:35.840
Graphical environments are more usable and way more stable than they used to be. I mean if you've

04:35.840 --> 04:44.240
been using Fosh like two years ago it was all tapping buttons and trying to get the things

04:44.240 --> 04:52.000
right. Last year we had the swipes which was a huge usability improvement and overall lots of

04:52.000 --> 04:59.920
bugs were fixed so it can run smoothly on many devices and that's just awesome and we even

04:59.920 --> 05:07.840
uploaded a lot of packages we were hosting downstream to Debian itself and that even includes

05:07.840 --> 05:16.080
some Mobian specific package such as the splash screen theme, the installer settings, the repository

05:16.080 --> 05:24.480
key ring also so we have the GPG keys for Mobian also in Debian now so if there's another mishap

05:24.480 --> 05:31.120
it happened last year we let the GPG key expire and user was stuck and had to download those

05:31.120 --> 05:38.560
manually now they'll be able to just update the keys from upstream Debian and still have access to

05:38.560 --> 05:48.400
the Mobian repo. We had also fixed some early mistakes and some optimal choices regarding

05:48.400 --> 05:59.600
how we name packages, how we organize those and how we decided to ship all the device support

06:00.320 --> 06:07.200
tweaks. For example we used to have for each device one tweaks package, one support package which

06:07.200 --> 06:12.800
was just a meta package putting in all the dependencies. Right now for Qualcomm devices

06:12.800 --> 06:21.040
we have two packages which are in Debian itself, those are Qcomm found utils which contains all

06:21.040 --> 06:27.840
the tweaks which are common to every Qualcomm supported device and we have Dreadjuicer as well

06:28.720 --> 06:38.560
which I'll tell a bit more in a minute and in the end now seems a good time to finally go stable

06:38.560 --> 06:48.000
So what will it look like? We have support for the devices we already support basically so those

06:48.000 --> 06:54.000
are the Linux first forms, Pinefone, Pinefone Pro and the Librem 5. We also have some Qualcomm

06:54.000 --> 07:01.520
based devices mostly SDM 845 thanks to the awesome work the community has done on this kernel

07:01.520 --> 07:10.320
and of course we also shipped some 86 images with or without non-free firmware depending

07:10.320 --> 07:16.240
on what you want and it runs just fine for example on the Microsoft Surface Pro and Surface Go

07:16.240 --> 07:25.600
tablets. This is really awesome. We'll also ship two flavors of Mobian one with Fosh and the other

07:25.600 --> 07:33.280
one with SXMO. We would have loved to ship a Plasma Mobile flavor as well but this won't make it

07:33.920 --> 07:40.800
I'm pleased to announce that Plasma Mobile is finally in Debian itself but we only have the basics

07:40.800 --> 07:47.680
which are the calls, contact book, SMS application and settings application and of course the Plasma

07:47.680 --> 07:53.760
Mobile shell but that's not enough to ship a stable image based on Plasma Mobile so we'll keep

07:53.760 --> 07:59.840
that one and start releasing it for the Trixie development cycle which is the next Debian testing

08:00.720 --> 08:07.360
and of course we'll ship an LTS kernel and we'll commit to keep it up to date with security updates

08:07.360 --> 08:11.600
and try to update it as often as possible for all the supported devices.

08:14.000 --> 08:23.040
We also going to ship some kind of semi universal images. One thing we'd like to achieve with Mobian

08:23.040 --> 08:29.360
is that you could just ship one image and flash it on any supported device and the kernel would

08:29.360 --> 08:35.600
support the device. All the small config tweaks needed for this device would be applied automatically.

08:36.160 --> 08:44.480
The firmware could be extracted and so on and we didn't quite get there yet but we're getting

08:44.480 --> 08:53.120
closer. For example on the SDMA45 devices those are Android based devices and they need some

08:53.120 --> 09:00.720
proprietary firmware blobs to just work. The thing is this firmware is shipped by the

09:00.720 --> 09:07.840
phone manufacturer. There's no clear license allowing you to redistribute it so we just can

09:07.840 --> 09:15.760
package those into Debian and call it today. This is where I came from. I came with a joint

09:15.760 --> 09:24.080
juicer. The thing is this is a small runtime program. It runs on boot. It mounts the Android

09:24.080 --> 09:30.960
vendor partitions, fetches the firmware from there and copies it into the Linux user space

09:30.960 --> 09:38.560
root file system and then afterwards you rebuild the Initram FS, reboot the device and on the next

09:38.560 --> 09:46.160
boot you have your Android device with all the firmware you need running just right now without

09:46.160 --> 09:55.840
the need for downloading firmware from the internet. By doing so we also can have one image

09:55.840 --> 10:06.800
for every single SDMA45 devices. One root FS at least because the boot image is using the device

10:06.800 --> 10:13.440
tree for the specific device but you have one root file system and as many boot images as you have

10:13.440 --> 10:21.840
device supported and it just avoids the need for any device specific tweaks and so we hope

10:21.840 --> 10:27.040
that in the future this can be extended to other Qualcomm-based devices such as the Fairphone 4

10:27.040 --> 10:32.720
for example which by the way runs quite nicely on Mobian thanks to the work Luca has done so far.

10:35.120 --> 10:41.600
So that's one of the semi-universal images. The other one we're planning to implement is for

10:41.600 --> 10:51.600
all the.64 devices because those need very few device specific tweaks. The two of those,

10:51.600 --> 10:59.120
the PinePhone and the PineTab already share the same kernel and all we have to do which is not that

10:59.120 --> 11:04.720
easy but all we have to do is basically import the downstream patches for the PinePhone Pro into

11:05.360 --> 11:15.360
this kernel. This can happen quite easily but we still have some things some details we need to

11:15.360 --> 11:23.280
work out especially considering the audio configuration on those devices due to the need

11:23.280 --> 11:32.000
to have the modem properly talking to the SOC in terms of audio and frequencies and so on.

11:33.280 --> 11:38.880
So this might get pushed back a bit but we're working on it and we really hope that it can be

11:38.880 --> 11:48.720
done for Bookworm so that we only have SDM845 images,.64 images and one other for the Libram 5

11:49.760 --> 11:55.520
which needs its own kernel because basically there are some patches that are incompatible

11:55.520 --> 12:02.880
with the PinePhone Pro kernel. They share the same display the same block for the display output

12:02.880 --> 12:10.160
and if it works on one device it doesn't work on the other. Anyway what we'll do during the

12:10.160 --> 12:17.680
freeze period so basically Debian is being frozen in preparation for the stable release.

12:18.640 --> 12:27.040
We cannot have new packages in Debian starting the 12th of this month and one month later we

12:27.040 --> 12:33.280
cannot have any update at all unless it's bug-fixed but we'll still be able to work on downstream

12:33.280 --> 12:39.680
packages to improve the stability and fix the remaining issues and hopefully but we make no

12:39.680 --> 12:44.320
promise there we'll be able to work a bit more upstream by submitting kernel patches,

12:45.280 --> 12:54.640
implementing proper Tobu support for the Libram 5 and PineTab for example and yeah maybe we could

12:54.640 --> 13:01.680
think of other things but for now we're focusing on trying to improve things during the few months

13:01.680 --> 13:09.280
we'll have left before the stable release and so what's next once we have more stable well we'll

13:09.280 --> 13:16.240
switch obviously to the Trixie development cycle tracking the next Debian testing and trying to

13:16.240 --> 13:25.520
get even better software support for mobile devices and so we're going to try to make it easier

13:26.160 --> 13:34.640
to support new devices in Mobian this is already we're paving the way with the SDM845 images and

13:34.640 --> 13:41.040
the Pine64 images and trying to get to a universal image and so we will hopefully make it easier for

13:41.040 --> 13:48.800
people to just support their own device we will also support 64-bit RISC-5 we actually have all

13:48.800 --> 13:55.360
the bits and pieces in place we have a dev board which is actually as a GitLab runner and is able

13:55.360 --> 14:02.800
to build packages for this architecture which is already supported in Debian and so that's one

14:02.800 --> 14:09.760
we'll just flip the switch once the stable release is there we'll keep packaging new software and

14:09.760 --> 14:16.560
new options for our users bits plus my mobile as I mentioned already Lomiri the UB ports user

14:16.560 --> 14:24.640
interface and finally try to get this universal image thing out of the box and working smoothly

14:27.600 --> 14:32.880
that's basically it for me you have a bunch of links there the slides are uploaded to the

14:32.880 --> 14:40.080
website so feel free to go there and yeah I'm not sure we have time for any question a little bit

14:40.080 --> 14:41.280
so first thank you very much

14:48.720 --> 14:51.200
so one minute two minutes for questions

14:51.200 --> 15:20.320
well the question was

15:21.280 --> 15:26.960
for the semi-universal images where we extract firmware from the android vendor partition

15:27.600 --> 15:32.640
do we have a solution for getting the updates from the vendor itself the

15:33.600 --> 15:41.440
answer is no you just get what you have on the device by the time it's run you can flash a new

15:41.440 --> 15:49.920
android ROM on your device and then reinstall mobian if needed and then it will pick the new

15:49.920 --> 15:56.640
firmware but there's no automated way and I really doubt that android phone vendors will

15:56.640 --> 16:07.200
participate in LVFS to get updates in a timely manner to users one last question perhaps yes

16:07.200 --> 16:18.000
would it be possible for mobian to be completely assimilated in debian

16:19.440 --> 16:27.200
almost the only thing that will be pushing us farther from this goal right now it's kernel

16:27.200 --> 16:36.000
support if we manage to get fully supported devices in the upstream kernel that means

16:36.000 --> 16:42.080
upstreaming lots of downstream patches and doing so for any new device which will arise in the next

16:42.080 --> 16:48.800
few years then yes we'll be able to be completely part of debian and have no downstream repository

16:48.800 --> 16:56.560
at all but for now we're being held back by the kernel situation basically okay thank you very

16:56.560 --> 17:09.200
much we don't have more time thank you
