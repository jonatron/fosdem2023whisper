{"text": " So, hello everybody, today I'm going to talk about something I've been hacking on for quite some time now and it is called GALIA and it is an extendable pen testing framework mainly in the automotive domain. My talk is structured like this, it is divided into four parts, I will start with some metadata about me and the project, then I will give you an overview of the status quo, I will conclude with an outlook and I hope we have some time for a little short demo. So that's me, on the left hand side you see my avatar and you might have spotted me on GitHub, I'm Stefan and I'm a security researcher and I'm the maintainer of GALIA. So what is GALIA, GALIA stems from the SACFORCAS project, it was a research project and we received some funding. On the YouTube link you can see a little demo we prepared last year, GALIA is implemented in the Python programming language and we support the latest version minus one that is currently the 3.10 release, it is free software and it is available on GitHub, it is licensed on Apache 2 and we have two maintainers, the second maintainer hides in the audience, if you have questions we have been around here for some time and it aims to be a modular tool for automotive penetration tests. So what is this, according to Wikipedia a penetration test is an authorized simulated cyber attack on a computer system performed to evaluate the security of the system and that basically means we connect our computer to a car or an automotive ECU and we send some data and we keep on sending data until it breaks and hopefully it breaks and then we try to figure out what we did in order to break it and after such tests the lab usually looks like this. What are the challenges to actually achieve this? The reason why GALIA exists is that we were doing some penetration testing and we needed a protocol stack for this and in the automotive domain there is usually the UDS protocol that stands for unified diagnostic services and you can think of it as the HTTP of automotive with the difference that UDS is stateful in contrast to a stateless protocol. Of course we need post processing which means machine readable logs in order to analyze data, everything needs to be reproducible, we solve this by a defined directory structure for artifacts and of course the automotive guys are very, very creative in implementing network protocols that means if you do expect an answer, the ECU doesn't answer, if you expect no answer, the ECU does answer and that's quite a challenge and that's why we decided to write our own protocol stack. Since the automotive industry loves proprietary software and we do want to release the core of GALIA, we created a plugin interface where we maintain our own proprietary plugins in our own infrastructure which plugs nicely into the GitHub code and of course we need the whole software stack to achieve these goals. We did write a whole implementation of the UDS stack and the status quo is like this. Here you plug it into the OBD port of your vehicle, OBD stands for onboard diagnosis and several ECUs might be exposed on that port and you can use GALIA to discover this whole tree. For example, there might be three ECUs available and each ECU has different modes of operation. These are called UDS sessions, GALIA can also discover these and each session might also provide different UDS services. What a UDS service does is up to the manufacturer of the ECU, it can be getting parameters, it might be setting parameters, it might even be software updating, the UDS standard defines just some basic facts what this actually is and it could be everything basically. GALIA comes as a CLI tool and you can think of it as the end map for cars. We provide some ready to use scanning modules, for example the discovery I already showed and there are also modules to investigate these modules further. We have an UDS stack including DOIP or ISOTP, these are little transport protocols beneath UDS since UDS is on the application layer, DOIP for example is on top of TCP, ISOTP is on top of the CAN bus and you can use all these setups. The next one is that we are able to do some automation if you are testing some ECU on its own, you can power cycle it during a scan, we power cycle the whole setup before each scan and so on and of course we have machine readable logging which comes as JSON logging and SQL logging, the SQL module is quite interesting since it can be used to query logging information across different or multiple ECUs and for development we offer a virtual ECU module. The core concept of GALIA is a test run, it is basically the invocation on the command line until it finishes and it always creates a directory structure which is always the same in which contains some artifacts which can be used for scripting or similar and the artifacts they always contain log files, always contains pcap files and it might contain some something else. The software is basically structured like this, there is a core module which can be extended via plugins and you can build standalone modules or you can integrate into the CLI system. Basically, the architecture is like this, the main entry point is the scanner on top which contains a module for optionally controlling power supplies and it contains an abstraction module for an ECU which uses the whole UDS protocol stack and the protocol stack also can be extended via plugins. These plugins might look like this, this is a hello world module, basically you create a class in Python, you need to implement the main method which could be basically anything and then you plug it into an entry point and that's basically it. For random facts, we use poetry for dependency management and in order to maintain a modern Python code base async IO and async await is used everywhere, it is fully typed, it passes mypy strict, it is extendable as mentioned via the Python entry point API and for configuring the protocol stack, we use some URL strings which are verified by the pedantic module. Yesterday there was a great talk about the pedantic module if you are interested in this. So let's give some little outlook. Of course, we need more power supplies, we need more transport modules, we need also more scanner modules and also to we need extending the scope, we need more plugins, scanning techniques and so on and of course more breakage and more memes and more testing. And we need more packages, currently there is a package for the Arch Linux distribution, we have a AUR package and it is included in the NixOS distribution in the unstable branch. And if you are a package maintainer and if you are interested in this, just create a package, file a ticket on Github and we would like to include this in the readme file. I will conclude with a short demo, it can be downloaded on this link but I brought it here and I will play it. What we can see here is a T-Mark session with two tabs. On the first tab, we will start a virtual ECU which is a testing device we will run Gaelia against and on the second tab, we have the command line invocation, here we have the configuration of the network stack, we have a transport module called TCP lines which basically sends ASCII strings as TCP, on top of TCP, we use this for debugging and testing, we have an Artifox where all the logging is placed and we try to discover what actual UDS services this ECU exposes. When you start it, it starts Dumbcap which records all the network traffic, then Gaelia synchronizes with the ECU which means it sends a test a present packet that is something like a ping message and when the Pong arrives, the scanner starts and it iterates over the ECU and in this example, we have found a mode of operation, this session hex 52 and several services are exposed in this session which can be exposed, which can be scanned further with other scanning modules. Now I have finished with my talk, thank you very much for your attention and if there are any questions, I will be happy to answer them. Yes, thank you Stefan. So we have sometimes four questions here, yeah. Hi, thank you for the talk. Can you say anything about fuzzing or memory scan, what you did there? We have some very basic fuzzer, it is included in the GitHub code, it is a PDU fuzzing, but it just generates random data and you don't have any feedback loop for this since this is quite complicated to implement for a car in a generic manner. Internally we have some more sophisticated fuzzing modules but we are not allowed to publish them because of the NDA stuff, unfortunately. For the memory scan, there are a few services, blah, blah, blah, by memory address, we have discovery modules for this published on GitHub, but they actually discover endpoints and that is basically it. So I have done a lot of testing and reverse engineering and you need a matrix of tests of what you are testing against and the thing. So I was just wondering for fits and giggles, is this virtual CPU sufficient to actually plug it into the bus and actually run the car? Because then it would be accurate enough to be able to be tested as a real world MCU. I hope I did understand the question correctly, but our virtual ECU module offers a possibility to clone ECUs so we can just record traffic and store this in the database and it just answers what it has seen recently, but it does not cover any state. The idea was that the virtual CPU is actually sufficient to replace the ECU in the car and run, drive the car and that would give the enough accuracy of the ECU to be able to be tested. Maybe it's a bit too much, but that's not in the scope of Gator, I feel. Okay, thank you, Stefan. Thank you for listening and feel free to ask questions outside full speaker there. Thank you. You are welcome.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.8, "text": " So, hello everybody, today I'm going to talk about something I've been hacking on for quite", "tokens": [407, 11, 7751, 2201, 11, 965, 286, 478, 516, 281, 751, 466, 746, 286, 600, 668, 31422, 322, 337, 1596], "temperature": 0.0, "avg_logprob": -0.2552360534667969, "compression_ratio": 1.470873786407767, "no_speech_prob": 0.031359169632196426}, {"id": 1, "seek": 0, "start": 10.8, "end": 16.76, "text": " some time now and it is called GALIA and it is an extendable pen testing framework mainly", "tokens": [512, 565, 586, 293, 309, 307, 1219, 460, 3427, 6914, 293, 309, 307, 364, 10101, 712, 3435, 4997, 8388, 8704], "temperature": 0.0, "avg_logprob": -0.2552360534667969, "compression_ratio": 1.470873786407767, "no_speech_prob": 0.031359169632196426}, {"id": 2, "seek": 0, "start": 16.76, "end": 19.72, "text": " in the automotive domain.", "tokens": [294, 264, 32866, 9274, 13], "temperature": 0.0, "avg_logprob": -0.2552360534667969, "compression_ratio": 1.470873786407767, "no_speech_prob": 0.031359169632196426}, {"id": 3, "seek": 0, "start": 19.72, "end": 26.240000000000002, "text": " My talk is structured like this, it is divided into four parts, I will start with some metadata", "tokens": [1222, 751, 307, 18519, 411, 341, 11, 309, 307, 6666, 666, 1451, 3166, 11, 286, 486, 722, 365, 512, 26603], "temperature": 0.0, "avg_logprob": -0.2552360534667969, "compression_ratio": 1.470873786407767, "no_speech_prob": 0.031359169632196426}, {"id": 4, "seek": 2624, "start": 26.24, "end": 31.56, "text": " about me and the project, then I will give you an overview of the status quo, I will", "tokens": [466, 385, 293, 264, 1716, 11, 550, 286, 486, 976, 291, 364, 12492, 295, 264, 6558, 28425, 11, 286, 486], "temperature": 0.0, "avg_logprob": -0.13161712222629124, "compression_ratio": 1.5159817351598173, "no_speech_prob": 4.666013046517037e-05}, {"id": 5, "seek": 2624, "start": 31.56, "end": 38.04, "text": " conclude with an outlook and I hope we have some time for a little short demo.", "tokens": [16886, 365, 364, 26650, 293, 286, 1454, 321, 362, 512, 565, 337, 257, 707, 2099, 10723, 13], "temperature": 0.0, "avg_logprob": -0.13161712222629124, "compression_ratio": 1.5159817351598173, "no_speech_prob": 4.666013046517037e-05}, {"id": 6, "seek": 2624, "start": 38.04, "end": 42.7, "text": " So that's me, on the left hand side you see my avatar and you might have spotted me on", "tokens": [407, 300, 311, 385, 11, 322, 264, 1411, 1011, 1252, 291, 536, 452, 36205, 293, 291, 1062, 362, 21010, 385, 322], "temperature": 0.0, "avg_logprob": -0.13161712222629124, "compression_ratio": 1.5159817351598173, "no_speech_prob": 4.666013046517037e-05}, {"id": 7, "seek": 2624, "start": 42.7, "end": 51.16, "text": " GitHub, I'm Stefan and I'm a security researcher and I'm the maintainer of GALIA.", "tokens": [23331, 11, 286, 478, 32158, 293, 286, 478, 257, 3825, 21751, 293, 286, 478, 264, 6909, 260, 295, 460, 3427, 6914, 13], "temperature": 0.0, "avg_logprob": -0.13161712222629124, "compression_ratio": 1.5159817351598173, "no_speech_prob": 4.666013046517037e-05}, {"id": 8, "seek": 5116, "start": 51.16, "end": 57.8, "text": " So what is GALIA, GALIA stems from the SACFORCAS project, it was a research project and we", "tokens": [407, 437, 307, 460, 3427, 6914, 11, 460, 3427, 6914, 27600, 490, 264, 318, 4378, 37, 2483, 34, 3160, 1716, 11, 309, 390, 257, 2132, 1716, 293, 321], "temperature": 0.0, "avg_logprob": -0.18778270305973468, "compression_ratio": 1.5236220472440944, "no_speech_prob": 3.9922371797729284e-05}, {"id": 9, "seek": 5116, "start": 57.8, "end": 59.599999999999994, "text": " received some funding.", "tokens": [4613, 512, 6137, 13], "temperature": 0.0, "avg_logprob": -0.18778270305973468, "compression_ratio": 1.5236220472440944, "no_speech_prob": 3.9922371797729284e-05}, {"id": 10, "seek": 5116, "start": 59.599999999999994, "end": 65.92, "text": " On the YouTube link you can see a little demo we prepared last year, GALIA is implemented", "tokens": [1282, 264, 3088, 2113, 291, 393, 536, 257, 707, 10723, 321, 4927, 1036, 1064, 11, 460, 3427, 6914, 307, 12270], "temperature": 0.0, "avg_logprob": -0.18778270305973468, "compression_ratio": 1.5236220472440944, "no_speech_prob": 3.9922371797729284e-05}, {"id": 11, "seek": 5116, "start": 65.92, "end": 72.92, "text": " in the Python programming language and we support the latest version minus one that is currently", "tokens": [294, 264, 15329, 9410, 2856, 293, 321, 1406, 264, 6792, 3037, 3175, 472, 300, 307, 4362], "temperature": 0.0, "avg_logprob": -0.18778270305973468, "compression_ratio": 1.5236220472440944, "no_speech_prob": 3.9922371797729284e-05}, {"id": 12, "seek": 5116, "start": 72.92, "end": 80.19999999999999, "text": " the 3.10 release, it is free software and it is available on GitHub, it is licensed on", "tokens": [264, 805, 13, 3279, 4374, 11, 309, 307, 1737, 4722, 293, 309, 307, 2435, 322, 23331, 11, 309, 307, 25225, 322], "temperature": 0.0, "avg_logprob": -0.18778270305973468, "compression_ratio": 1.5236220472440944, "no_speech_prob": 3.9922371797729284e-05}, {"id": 13, "seek": 8020, "start": 80.2, "end": 87.16, "text": " Apache 2 and we have two maintainers, the second maintainer hides in the audience, if", "tokens": [46597, 568, 293, 321, 362, 732, 6909, 433, 11, 264, 1150, 6909, 260, 35953, 294, 264, 4034, 11, 498], "temperature": 0.0, "avg_logprob": -0.1667564167695887, "compression_ratio": 1.6437768240343347, "no_speech_prob": 4.386668297229335e-05}, {"id": 14, "seek": 8020, "start": 87.16, "end": 93.24000000000001, "text": " you have questions we have been around here for some time and it aims to be a modular", "tokens": [291, 362, 1651, 321, 362, 668, 926, 510, 337, 512, 565, 293, 309, 24683, 281, 312, 257, 31111], "temperature": 0.0, "avg_logprob": -0.1667564167695887, "compression_ratio": 1.6437768240343347, "no_speech_prob": 4.386668297229335e-05}, {"id": 15, "seek": 8020, "start": 93.24000000000001, "end": 96.32000000000001, "text": " tool for automotive penetration tests.", "tokens": [2290, 337, 32866, 35187, 6921, 13], "temperature": 0.0, "avg_logprob": -0.1667564167695887, "compression_ratio": 1.6437768240343347, "no_speech_prob": 4.386668297229335e-05}, {"id": 16, "seek": 8020, "start": 96.32000000000001, "end": 103.32000000000001, "text": " So what is this, according to Wikipedia a penetration test is an authorized simulated", "tokens": [407, 437, 307, 341, 11, 4650, 281, 28999, 257, 35187, 1500, 307, 364, 28312, 41713], "temperature": 0.0, "avg_logprob": -0.1667564167695887, "compression_ratio": 1.6437768240343347, "no_speech_prob": 4.386668297229335e-05}, {"id": 17, "seek": 8020, "start": 103.32000000000001, "end": 109.52000000000001, "text": " cyber attack on a computer system performed to evaluate the security of the system and", "tokens": [13411, 2690, 322, 257, 3820, 1185, 10332, 281, 13059, 264, 3825, 295, 264, 1185, 293], "temperature": 0.0, "avg_logprob": -0.1667564167695887, "compression_ratio": 1.6437768240343347, "no_speech_prob": 4.386668297229335e-05}, {"id": 18, "seek": 10952, "start": 109.52, "end": 116.39999999999999, "text": " that basically means we connect our computer to a car or an automotive ECU and we send", "tokens": [300, 1936, 1355, 321, 1745, 527, 3820, 281, 257, 1032, 420, 364, 32866, 19081, 52, 293, 321, 2845], "temperature": 0.0, "avg_logprob": -0.1171557384988536, "compression_ratio": 1.5698324022346368, "no_speech_prob": 3.696521162055433e-05}, {"id": 19, "seek": 10952, "start": 116.39999999999999, "end": 122.64, "text": " some data and we keep on sending data until it breaks and hopefully it breaks and then", "tokens": [512, 1412, 293, 321, 1066, 322, 7750, 1412, 1826, 309, 9857, 293, 4696, 309, 9857, 293, 550], "temperature": 0.0, "avg_logprob": -0.1171557384988536, "compression_ratio": 1.5698324022346368, "no_speech_prob": 3.696521162055433e-05}, {"id": 20, "seek": 10952, "start": 122.64, "end": 130.8, "text": " we try to figure out what we did in order to break it and after such tests the lab usually", "tokens": [321, 853, 281, 2573, 484, 437, 321, 630, 294, 1668, 281, 1821, 309, 293, 934, 1270, 6921, 264, 2715, 2673], "temperature": 0.0, "avg_logprob": -0.1171557384988536, "compression_ratio": 1.5698324022346368, "no_speech_prob": 3.696521162055433e-05}, {"id": 21, "seek": 10952, "start": 130.8, "end": 136.24, "text": " looks like this.", "tokens": [1542, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.1171557384988536, "compression_ratio": 1.5698324022346368, "no_speech_prob": 3.696521162055433e-05}, {"id": 22, "seek": 13624, "start": 136.24, "end": 140.20000000000002, "text": " What are the challenges to actually achieve this?", "tokens": [708, 366, 264, 4759, 281, 767, 4584, 341, 30], "temperature": 0.0, "avg_logprob": -0.1380400456173319, "compression_ratio": 1.558252427184466, "no_speech_prob": 3.0193565180525184e-05}, {"id": 23, "seek": 13624, "start": 140.20000000000002, "end": 145.88, "text": " The reason why GALIA exists is that we were doing some penetration testing and we needed", "tokens": [440, 1778, 983, 460, 3427, 6914, 8198, 307, 300, 321, 645, 884, 512, 35187, 4997, 293, 321, 2978], "temperature": 0.0, "avg_logprob": -0.1380400456173319, "compression_ratio": 1.558252427184466, "no_speech_prob": 3.0193565180525184e-05}, {"id": 24, "seek": 13624, "start": 145.88, "end": 152.72, "text": " a protocol stack for this and in the automotive domain there is usually the UDS protocol that", "tokens": [257, 10336, 8630, 337, 341, 293, 294, 264, 32866, 9274, 456, 307, 2673, 264, 624, 11844, 10336, 300], "temperature": 0.0, "avg_logprob": -0.1380400456173319, "compression_ratio": 1.558252427184466, "no_speech_prob": 3.0193565180525184e-05}, {"id": 25, "seek": 13624, "start": 152.72, "end": 160.84, "text": " stands for unified diagnostic services and you can think of it as the HTTP of automotive", "tokens": [7382, 337, 26787, 27897, 3328, 293, 291, 393, 519, 295, 309, 382, 264, 33283, 295, 32866], "temperature": 0.0, "avg_logprob": -0.1380400456173319, "compression_ratio": 1.558252427184466, "no_speech_prob": 3.0193565180525184e-05}, {"id": 26, "seek": 16084, "start": 160.84, "end": 167.52, "text": " with the difference that UDS is stateful in contrast to a stateless protocol.", "tokens": [365, 264, 2649, 300, 624, 11844, 307, 1785, 906, 294, 8712, 281, 257, 2219, 4272, 10336, 13], "temperature": 0.0, "avg_logprob": -0.17559868580586202, "compression_ratio": 1.53125, "no_speech_prob": 2.5826891942415386e-05}, {"id": 27, "seek": 16084, "start": 167.52, "end": 173.24, "text": " Of course we need post processing which means machine readable logs in order to analyze", "tokens": [2720, 1164, 321, 643, 2183, 9007, 597, 1355, 3479, 49857, 20820, 294, 1668, 281, 12477], "temperature": 0.0, "avg_logprob": -0.17559868580586202, "compression_ratio": 1.53125, "no_speech_prob": 2.5826891942415386e-05}, {"id": 28, "seek": 16084, "start": 173.24, "end": 180.44, "text": " data, everything needs to be reproducible, we solve this by a defined directory structure", "tokens": [1412, 11, 1203, 2203, 281, 312, 11408, 32128, 11, 321, 5039, 341, 538, 257, 7642, 21120, 3877], "temperature": 0.0, "avg_logprob": -0.17559868580586202, "compression_ratio": 1.53125, "no_speech_prob": 2.5826891942415386e-05}, {"id": 29, "seek": 16084, "start": 180.44, "end": 187.4, "text": " for artifacts and of course the automotive guys are very, very creative in implementing", "tokens": [337, 24617, 293, 295, 1164, 264, 32866, 1074, 366, 588, 11, 588, 5880, 294, 18114], "temperature": 0.0, "avg_logprob": -0.17559868580586202, "compression_ratio": 1.53125, "no_speech_prob": 2.5826891942415386e-05}, {"id": 30, "seek": 18740, "start": 187.4, "end": 195.12, "text": " network protocols that means if you do expect an answer, the ECU doesn't answer, if you", "tokens": [3209, 20618, 300, 1355, 498, 291, 360, 2066, 364, 1867, 11, 264, 19081, 52, 1177, 380, 1867, 11, 498, 291], "temperature": 0.0, "avg_logprob": -0.12204419750056855, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.3134407456382178e-05}, {"id": 31, "seek": 18740, "start": 195.12, "end": 200.16, "text": " expect no answer, the ECU does answer and that's quite a challenge and that's why we", "tokens": [2066, 572, 1867, 11, 264, 19081, 52, 775, 1867, 293, 300, 311, 1596, 257, 3430, 293, 300, 311, 983, 321], "temperature": 0.0, "avg_logprob": -0.12204419750056855, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.3134407456382178e-05}, {"id": 32, "seek": 18740, "start": 200.16, "end": 205.64000000000001, "text": " decided to write our own protocol stack.", "tokens": [3047, 281, 2464, 527, 1065, 10336, 8630, 13], "temperature": 0.0, "avg_logprob": -0.12204419750056855, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.3134407456382178e-05}, {"id": 33, "seek": 18740, "start": 205.64000000000001, "end": 212.4, "text": " Since the automotive industry loves proprietary software and we do want to release the core", "tokens": [4162, 264, 32866, 3518, 6752, 38992, 4722, 293, 321, 360, 528, 281, 4374, 264, 4965], "temperature": 0.0, "avg_logprob": -0.12204419750056855, "compression_ratio": 1.6666666666666667, "no_speech_prob": 2.3134407456382178e-05}, {"id": 34, "seek": 21240, "start": 212.4, "end": 219.72, "text": " of GALIA, we created a plugin interface where we maintain our own proprietary plugins in", "tokens": [295, 460, 3427, 6914, 11, 321, 2942, 257, 23407, 9226, 689, 321, 6909, 527, 1065, 38992, 33759, 294], "temperature": 0.0, "avg_logprob": -0.11977629594399895, "compression_ratio": 1.502439024390244, "no_speech_prob": 1.300074472965207e-05}, {"id": 35, "seek": 21240, "start": 219.72, "end": 226.24, "text": " our own infrastructure which plugs nicely into the GitHub code and of course we need", "tokens": [527, 1065, 6896, 597, 33899, 9594, 666, 264, 23331, 3089, 293, 295, 1164, 321, 643], "temperature": 0.0, "avg_logprob": -0.11977629594399895, "compression_ratio": 1.502439024390244, "no_speech_prob": 1.300074472965207e-05}, {"id": 36, "seek": 21240, "start": 226.24, "end": 233.08, "text": " the whole software stack to achieve these goals.", "tokens": [264, 1379, 4722, 8630, 281, 4584, 613, 5493, 13], "temperature": 0.0, "avg_logprob": -0.11977629594399895, "compression_ratio": 1.502439024390244, "no_speech_prob": 1.300074472965207e-05}, {"id": 37, "seek": 21240, "start": 233.08, "end": 242.0, "text": " We did write a whole implementation of the UDS stack and the status quo is like this.", "tokens": [492, 630, 2464, 257, 1379, 11420, 295, 264, 624, 11844, 8630, 293, 264, 6558, 28425, 307, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.11977629594399895, "compression_ratio": 1.502439024390244, "no_speech_prob": 1.300074472965207e-05}, {"id": 38, "seek": 24200, "start": 242.0, "end": 248.92, "text": " Here you plug it into the OBD port of your vehicle, OBD stands for onboard diagnosis", "tokens": [1692, 291, 5452, 309, 666, 264, 35538, 35, 2436, 295, 428, 5864, 11, 35538, 35, 7382, 337, 24033, 15217], "temperature": 0.0, "avg_logprob": -0.20965713583013063, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.69748114887625e-05}, {"id": 39, "seek": 24200, "start": 248.92, "end": 254.48, "text": " and several ECUs might be exposed on that port and you can use GALIA to discover this", "tokens": [293, 2940, 19081, 29211, 1062, 312, 9495, 322, 300, 2436, 293, 291, 393, 764, 460, 3427, 6914, 281, 4411, 341], "temperature": 0.0, "avg_logprob": -0.20965713583013063, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.69748114887625e-05}, {"id": 40, "seek": 24200, "start": 254.48, "end": 256.36, "text": " whole tree.", "tokens": [1379, 4230, 13], "temperature": 0.0, "avg_logprob": -0.20965713583013063, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.69748114887625e-05}, {"id": 41, "seek": 24200, "start": 256.36, "end": 264.04, "text": " For example, there might be three ECUs available and each ECU has different modes of operation.", "tokens": [1171, 1365, 11, 456, 1062, 312, 1045, 19081, 29211, 2435, 293, 1184, 19081, 52, 575, 819, 14068, 295, 6916, 13], "temperature": 0.0, "avg_logprob": -0.20965713583013063, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.69748114887625e-05}, {"id": 42, "seek": 24200, "start": 264.04, "end": 271.2, "text": " These are called UDS sessions, GALIA can also discover these and each session might also", "tokens": [1981, 366, 1219, 624, 11844, 11081, 11, 460, 3427, 6914, 393, 611, 4411, 613, 293, 1184, 5481, 1062, 611], "temperature": 0.0, "avg_logprob": -0.20965713583013063, "compression_ratio": 1.5956521739130434, "no_speech_prob": 6.69748114887625e-05}, {"id": 43, "seek": 27120, "start": 271.2, "end": 275.36, "text": " provide different UDS services.", "tokens": [2893, 819, 624, 11844, 3328, 13], "temperature": 0.0, "avg_logprob": -0.12878238713299786, "compression_ratio": 1.588235294117647, "no_speech_prob": 3.0668132239952683e-05}, {"id": 44, "seek": 27120, "start": 275.36, "end": 283.59999999999997, "text": " What a UDS service does is up to the manufacturer of the ECU, it can be getting parameters,", "tokens": [708, 257, 624, 11844, 2643, 775, 307, 493, 281, 264, 18022, 295, 264, 19081, 52, 11, 309, 393, 312, 1242, 9834, 11], "temperature": 0.0, "avg_logprob": -0.12878238713299786, "compression_ratio": 1.588235294117647, "no_speech_prob": 3.0668132239952683e-05}, {"id": 45, "seek": 27120, "start": 283.59999999999997, "end": 291.91999999999996, "text": " it might be setting parameters, it might even be software updating, the UDS standard defines", "tokens": [309, 1062, 312, 3287, 9834, 11, 309, 1062, 754, 312, 4722, 25113, 11, 264, 624, 11844, 3832, 23122], "temperature": 0.0, "avg_logprob": -0.12878238713299786, "compression_ratio": 1.588235294117647, "no_speech_prob": 3.0668132239952683e-05}, {"id": 46, "seek": 29192, "start": 291.92, "end": 301.92, "text": " just some basic facts what this actually is and it could be everything basically.", "tokens": [445, 512, 3875, 9130, 437, 341, 767, 307, 293, 309, 727, 312, 1203, 1936, 13], "temperature": 0.0, "avg_logprob": -0.16843824128846865, "compression_ratio": 1.555, "no_speech_prob": 9.07681715034414e-06}, {"id": 47, "seek": 29192, "start": 301.92, "end": 307.64000000000004, "text": " GALIA comes as a CLI tool and you can think of it as the end map for cars.", "tokens": [460, 3427, 6914, 1487, 382, 257, 12855, 40, 2290, 293, 291, 393, 519, 295, 309, 382, 264, 917, 4471, 337, 5163, 13], "temperature": 0.0, "avg_logprob": -0.16843824128846865, "compression_ratio": 1.555, "no_speech_prob": 9.07681715034414e-06}, {"id": 48, "seek": 29192, "start": 307.64000000000004, "end": 315.40000000000003, "text": " We provide some ready to use scanning modules, for example the discovery I already showed", "tokens": [492, 2893, 512, 1919, 281, 764, 27019, 16679, 11, 337, 1365, 264, 12114, 286, 1217, 4712], "temperature": 0.0, "avg_logprob": -0.16843824128846865, "compression_ratio": 1.555, "no_speech_prob": 9.07681715034414e-06}, {"id": 49, "seek": 29192, "start": 315.40000000000003, "end": 321.6, "text": " and there are also modules to investigate these modules further.", "tokens": [293, 456, 366, 611, 16679, 281, 15013, 613, 16679, 3052, 13], "temperature": 0.0, "avg_logprob": -0.16843824128846865, "compression_ratio": 1.555, "no_speech_prob": 9.07681715034414e-06}, {"id": 50, "seek": 32160, "start": 321.6, "end": 329.72, "text": " We have an UDS stack including DOIP or ISOTP, these are little transport protocols beneath", "tokens": [492, 362, 364, 624, 11844, 8630, 3009, 10699, 9139, 420, 25042, 16804, 11, 613, 366, 707, 5495, 20618, 17149], "temperature": 0.0, "avg_logprob": -0.19482162182147686, "compression_ratio": 1.412121212121212, "no_speech_prob": 4.7489556891378015e-05}, {"id": 51, "seek": 32160, "start": 329.72, "end": 340.12, "text": " UDS since UDS is on the application layer, DOIP for example is on top of TCP, ISOTP is", "tokens": [624, 11844, 1670, 624, 11844, 307, 322, 264, 3861, 4583, 11, 10699, 9139, 337, 1365, 307, 322, 1192, 295, 48965, 11, 25042, 16804, 307], "temperature": 0.0, "avg_logprob": -0.19482162182147686, "compression_ratio": 1.412121212121212, "no_speech_prob": 4.7489556891378015e-05}, {"id": 52, "seek": 32160, "start": 340.12, "end": 346.24, "text": " on top of the CAN bus and you can use all these setups.", "tokens": [322, 1192, 295, 264, 22931, 1255, 293, 291, 393, 764, 439, 613, 46832, 13], "temperature": 0.0, "avg_logprob": -0.19482162182147686, "compression_ratio": 1.412121212121212, "no_speech_prob": 4.7489556891378015e-05}, {"id": 53, "seek": 34624, "start": 346.24, "end": 353.04, "text": " The next one is that we are able to do some automation if you are testing some ECU on", "tokens": [440, 958, 472, 307, 300, 321, 366, 1075, 281, 360, 512, 17769, 498, 291, 366, 4997, 512, 19081, 52, 322], "temperature": 0.0, "avg_logprob": -0.1311744552060782, "compression_ratio": 1.6056338028169015, "no_speech_prob": 3.0175415304256603e-05}, {"id": 54, "seek": 34624, "start": 353.04, "end": 361.36, "text": " its own, you can power cycle it during a scan, we power cycle the whole setup before", "tokens": [1080, 1065, 11, 291, 393, 1347, 6586, 309, 1830, 257, 11049, 11, 321, 1347, 6586, 264, 1379, 8657, 949], "temperature": 0.0, "avg_logprob": -0.1311744552060782, "compression_ratio": 1.6056338028169015, "no_speech_prob": 3.0175415304256603e-05}, {"id": 55, "seek": 34624, "start": 361.36, "end": 366.8, "text": " each scan and so on and of course we have machine readable logging which comes as JSON", "tokens": [1184, 11049, 293, 370, 322, 293, 295, 1164, 321, 362, 3479, 49857, 27991, 597, 1487, 382, 31828], "temperature": 0.0, "avg_logprob": -0.1311744552060782, "compression_ratio": 1.6056338028169015, "no_speech_prob": 3.0175415304256603e-05}, {"id": 56, "seek": 34624, "start": 366.8, "end": 375.0, "text": " logging and SQL logging, the SQL module is quite interesting since it can be used to", "tokens": [27991, 293, 19200, 27991, 11, 264, 19200, 10088, 307, 1596, 1880, 1670, 309, 393, 312, 1143, 281], "temperature": 0.0, "avg_logprob": -0.1311744552060782, "compression_ratio": 1.6056338028169015, "no_speech_prob": 3.0175415304256603e-05}, {"id": 57, "seek": 37500, "start": 375.0, "end": 383.32, "text": " query logging information across different or multiple ECUs and for development we offer", "tokens": [14581, 27991, 1589, 2108, 819, 420, 3866, 19081, 29211, 293, 337, 3250, 321, 2626], "temperature": 0.0, "avg_logprob": -0.12087654344963306, "compression_ratio": 1.4639175257731958, "no_speech_prob": 1.3396893336903304e-05}, {"id": 58, "seek": 37500, "start": 383.32, "end": 386.32, "text": " a virtual ECU module.", "tokens": [257, 6374, 19081, 52, 10088, 13], "temperature": 0.0, "avg_logprob": -0.12087654344963306, "compression_ratio": 1.4639175257731958, "no_speech_prob": 1.3396893336903304e-05}, {"id": 59, "seek": 37500, "start": 386.32, "end": 391.92, "text": " The core concept of GALIA is a test run, it is basically the invocation on the command", "tokens": [440, 4965, 3410, 295, 460, 3427, 6914, 307, 257, 1500, 1190, 11, 309, 307, 1936, 264, 1048, 27943, 322, 264, 5622], "temperature": 0.0, "avg_logprob": -0.12087654344963306, "compression_ratio": 1.4639175257731958, "no_speech_prob": 1.3396893336903304e-05}, {"id": 60, "seek": 37500, "start": 391.92, "end": 399.56, "text": " line until it finishes and it always creates a directory structure which is always the", "tokens": [1622, 1826, 309, 23615, 293, 309, 1009, 7829, 257, 21120, 3877, 597, 307, 1009, 264], "temperature": 0.0, "avg_logprob": -0.12087654344963306, "compression_ratio": 1.4639175257731958, "no_speech_prob": 1.3396893336903304e-05}, {"id": 61, "seek": 39956, "start": 399.56, "end": 407.92, "text": " same in which contains some artifacts which can be used for scripting or similar and the", "tokens": [912, 294, 597, 8306, 512, 24617, 597, 393, 312, 1143, 337, 5755, 278, 420, 2531, 293, 264], "temperature": 0.0, "avg_logprob": -0.18973943922254774, "compression_ratio": 1.709090909090909, "no_speech_prob": 1.1291353075648658e-05}, {"id": 62, "seek": 39956, "start": 407.92, "end": 414.56, "text": " artifacts they always contain log files, always contains pcap files and it might contain", "tokens": [24617, 436, 1009, 5304, 3565, 7098, 11, 1009, 8306, 280, 9485, 7098, 293, 309, 1062, 5304], "temperature": 0.0, "avg_logprob": -0.18973943922254774, "compression_ratio": 1.709090909090909, "no_speech_prob": 1.1291353075648658e-05}, {"id": 63, "seek": 39956, "start": 414.56, "end": 418.04, "text": " some something else.", "tokens": [512, 746, 1646, 13], "temperature": 0.0, "avg_logprob": -0.18973943922254774, "compression_ratio": 1.709090909090909, "no_speech_prob": 1.1291353075648658e-05}, {"id": 64, "seek": 39956, "start": 418.04, "end": 423.04, "text": " The software is basically structured like this, there is a core module which can be", "tokens": [440, 4722, 307, 1936, 18519, 411, 341, 11, 456, 307, 257, 4965, 10088, 597, 393, 312], "temperature": 0.0, "avg_logprob": -0.18973943922254774, "compression_ratio": 1.709090909090909, "no_speech_prob": 1.1291353075648658e-05}, {"id": 65, "seek": 42304, "start": 423.04, "end": 432.84000000000003, "text": " extended via plugins and you can build standalone modules or you can integrate into the CLI", "tokens": [10913, 5766, 33759, 293, 291, 393, 1322, 37454, 16679, 420, 291, 393, 13365, 666, 264, 12855, 40], "temperature": 0.0, "avg_logprob": -0.1659923365086685, "compression_ratio": 1.68348623853211, "no_speech_prob": 1.5196007552731317e-05}, {"id": 66, "seek": 42304, "start": 432.84000000000003, "end": 433.84000000000003, "text": " system.", "tokens": [1185, 13], "temperature": 0.0, "avg_logprob": -0.1659923365086685, "compression_ratio": 1.68348623853211, "no_speech_prob": 1.5196007552731317e-05}, {"id": 67, "seek": 42304, "start": 433.84000000000003, "end": 439.36, "text": " Basically, the architecture is like this, the main entry point is the scanner on top", "tokens": [8537, 11, 264, 9482, 307, 411, 341, 11, 264, 2135, 8729, 935, 307, 264, 30211, 322, 1192], "temperature": 0.0, "avg_logprob": -0.1659923365086685, "compression_ratio": 1.68348623853211, "no_speech_prob": 1.5196007552731317e-05}, {"id": 68, "seek": 42304, "start": 439.36, "end": 446.28000000000003, "text": " which contains a module for optionally controlling power supplies and it contains an abstraction", "tokens": [597, 8306, 257, 10088, 337, 3614, 379, 14905, 1347, 11768, 293, 309, 8306, 364, 37765], "temperature": 0.0, "avg_logprob": -0.1659923365086685, "compression_ratio": 1.68348623853211, "no_speech_prob": 1.5196007552731317e-05}, {"id": 69, "seek": 42304, "start": 446.28000000000003, "end": 452.20000000000005, "text": " module for an ECU which uses the whole UDS protocol stack and the protocol stack also", "tokens": [10088, 337, 364, 19081, 52, 597, 4960, 264, 1379, 624, 11844, 10336, 8630, 293, 264, 10336, 8630, 611], "temperature": 0.0, "avg_logprob": -0.1659923365086685, "compression_ratio": 1.68348623853211, "no_speech_prob": 1.5196007552731317e-05}, {"id": 70, "seek": 45220, "start": 452.2, "end": 455.88, "text": " can be extended via plugins.", "tokens": [393, 312, 10913, 5766, 33759, 13], "temperature": 0.0, "avg_logprob": -0.14929940150334284, "compression_ratio": 1.536723163841808, "no_speech_prob": 8.660641469759867e-06}, {"id": 71, "seek": 45220, "start": 455.88, "end": 461.47999999999996, "text": " These plugins might look like this, this is a hello world module, basically you create", "tokens": [1981, 33759, 1062, 574, 411, 341, 11, 341, 307, 257, 7751, 1002, 10088, 11, 1936, 291, 1884], "temperature": 0.0, "avg_logprob": -0.14929940150334284, "compression_ratio": 1.536723163841808, "no_speech_prob": 8.660641469759867e-06}, {"id": 72, "seek": 45220, "start": 461.47999999999996, "end": 468.48, "text": " a class in Python, you need to implement the main method which could be basically anything", "tokens": [257, 1508, 294, 15329, 11, 291, 643, 281, 4445, 264, 2135, 3170, 597, 727, 312, 1936, 1340], "temperature": 0.0, "avg_logprob": -0.14929940150334284, "compression_ratio": 1.536723163841808, "no_speech_prob": 8.660641469759867e-06}, {"id": 73, "seek": 45220, "start": 468.48, "end": 476.08, "text": " and then you plug it into an entry point and that's basically it.", "tokens": [293, 550, 291, 5452, 309, 666, 364, 8729, 935, 293, 300, 311, 1936, 309, 13], "temperature": 0.0, "avg_logprob": -0.14929940150334284, "compression_ratio": 1.536723163841808, "no_speech_prob": 8.660641469759867e-06}, {"id": 74, "seek": 47608, "start": 476.08, "end": 483.0, "text": " For random facts, we use poetry for dependency management and in order to maintain a modern", "tokens": [1171, 4974, 9130, 11, 321, 764, 15155, 337, 33621, 4592, 293, 294, 1668, 281, 6909, 257, 4363], "temperature": 0.0, "avg_logprob": -0.2101872762044271, "compression_ratio": 1.5081967213114753, "no_speech_prob": 3.3702213841024786e-05}, {"id": 75, "seek": 47608, "start": 483.0, "end": 488.36, "text": " Python code base async IO and async await is used everywhere, it is fully typed, it", "tokens": [15329, 3089, 3096, 382, 34015, 39839, 293, 382, 34015, 19670, 307, 1143, 5315, 11, 309, 307, 4498, 33941, 11, 309], "temperature": 0.0, "avg_logprob": -0.2101872762044271, "compression_ratio": 1.5081967213114753, "no_speech_prob": 3.3702213841024786e-05}, {"id": 76, "seek": 47608, "start": 488.36, "end": 499.0, "text": " passes mypy strict, it is extendable as mentioned via the Python entry point API and for configuring", "tokens": [11335, 452, 8200, 10910, 11, 309, 307, 10101, 712, 382, 2835, 5766, 264, 15329, 8729, 935, 9362, 293, 337, 6662, 1345], "temperature": 0.0, "avg_logprob": -0.2101872762044271, "compression_ratio": 1.5081967213114753, "no_speech_prob": 3.3702213841024786e-05}, {"id": 77, "seek": 49900, "start": 499.0, "end": 507.52, "text": " the protocol stack, we use some URL strings which are verified by the pedantic module.", "tokens": [264, 10336, 8630, 11, 321, 764, 512, 12905, 13985, 597, 366, 31197, 538, 264, 5670, 7128, 10088, 13], "temperature": 0.0, "avg_logprob": -0.2048796017964681, "compression_ratio": 1.5913978494623655, "no_speech_prob": 1.7475236745667644e-05}, {"id": 78, "seek": 49900, "start": 507.52, "end": 514.76, "text": " Yesterday there was a great talk about the pedantic module if you are interested in this.", "tokens": [19765, 456, 390, 257, 869, 751, 466, 264, 5670, 7128, 10088, 498, 291, 366, 3102, 294, 341, 13], "temperature": 0.0, "avg_logprob": -0.2048796017964681, "compression_ratio": 1.5913978494623655, "no_speech_prob": 1.7475236745667644e-05}, {"id": 79, "seek": 49900, "start": 514.76, "end": 519.24, "text": " So let's give some little outlook.", "tokens": [407, 718, 311, 976, 512, 707, 26650, 13], "temperature": 0.0, "avg_logprob": -0.2048796017964681, "compression_ratio": 1.5913978494623655, "no_speech_prob": 1.7475236745667644e-05}, {"id": 80, "seek": 49900, "start": 519.24, "end": 524.84, "text": " Of course, we need more power supplies, we need more transport modules, we need also", "tokens": [2720, 1164, 11, 321, 643, 544, 1347, 11768, 11, 321, 643, 544, 5495, 16679, 11, 321, 643, 611], "temperature": 0.0, "avg_logprob": -0.2048796017964681, "compression_ratio": 1.5913978494623655, "no_speech_prob": 1.7475236745667644e-05}, {"id": 81, "seek": 52484, "start": 524.84, "end": 531.32, "text": " more scanner modules and also to we need extending the scope, we need more plugins, scanning", "tokens": [544, 30211, 16679, 293, 611, 281, 321, 643, 24360, 264, 11923, 11, 321, 643, 544, 33759, 11, 27019], "temperature": 0.0, "avg_logprob": -0.22100770329854574, "compression_ratio": 1.7184466019417475, "no_speech_prob": 4.749968502437696e-05}, {"id": 82, "seek": 52484, "start": 531.32, "end": 536.5600000000001, "text": " techniques and so on and of course more breakage and more memes and more testing.", "tokens": [7512, 293, 370, 322, 293, 295, 1164, 544, 1821, 609, 293, 544, 29730, 293, 544, 4997, 13], "temperature": 0.0, "avg_logprob": -0.22100770329854574, "compression_ratio": 1.7184466019417475, "no_speech_prob": 4.749968502437696e-05}, {"id": 83, "seek": 52484, "start": 536.5600000000001, "end": 542.8000000000001, "text": " And we need more packages, currently there is a package for the Arch Linux distribution,", "tokens": [400, 321, 643, 544, 17401, 11, 4362, 456, 307, 257, 7372, 337, 264, 10984, 18734, 7316, 11], "temperature": 0.0, "avg_logprob": -0.22100770329854574, "compression_ratio": 1.7184466019417475, "no_speech_prob": 4.749968502437696e-05}, {"id": 84, "seek": 52484, "start": 542.8000000000001, "end": 551.8000000000001, "text": " we have a AUR package and it is included in the NixOS distribution in the unstable branch.", "tokens": [321, 362, 257, 316, 7932, 7372, 293, 309, 307, 5556, 294, 264, 426, 970, 4367, 7316, 294, 264, 23742, 9819, 13], "temperature": 0.0, "avg_logprob": -0.22100770329854574, "compression_ratio": 1.7184466019417475, "no_speech_prob": 4.749968502437696e-05}, {"id": 85, "seek": 55180, "start": 551.8, "end": 555.4399999999999, "text": " And if you are a package maintainer and if you are interested in this, just create a", "tokens": [400, 498, 291, 366, 257, 7372, 6909, 260, 293, 498, 291, 366, 3102, 294, 341, 11, 445, 1884, 257], "temperature": 0.0, "avg_logprob": -0.2006088425131405, "compression_ratio": 1.5575757575757576, "no_speech_prob": 0.00016558088827878237}, {"id": 86, "seek": 55180, "start": 555.4399999999999, "end": 562.24, "text": " package, file a ticket on Github and we would like to include this in the readme file.", "tokens": [7372, 11, 3991, 257, 10550, 322, 460, 355, 836, 293, 321, 576, 411, 281, 4090, 341, 294, 264, 1401, 1398, 3991, 13], "temperature": 0.0, "avg_logprob": -0.2006088425131405, "compression_ratio": 1.5575757575757576, "no_speech_prob": 0.00016558088827878237}, {"id": 87, "seek": 55180, "start": 562.24, "end": 568.24, "text": " I will conclude with a short demo, it can be downloaded on this link but I brought it", "tokens": [286, 486, 16886, 365, 257, 2099, 10723, 11, 309, 393, 312, 21748, 322, 341, 2113, 457, 286, 3038, 309], "temperature": 0.0, "avg_logprob": -0.2006088425131405, "compression_ratio": 1.5575757575757576, "no_speech_prob": 0.00016558088827878237}, {"id": 88, "seek": 56824, "start": 568.24, "end": 584.6, "text": " here and I will play it.", "tokens": [510, 293, 286, 486, 862, 309, 13], "temperature": 0.0, "avg_logprob": -0.2273508834838867, "compression_ratio": 1.3015873015873016, "no_speech_prob": 7.466510578524321e-05}, {"id": 89, "seek": 56824, "start": 584.6, "end": 589.6, "text": " What we can see here is a T-Mark session with two tabs.", "tokens": [708, 321, 393, 536, 510, 307, 257, 314, 12, 15168, 5481, 365, 732, 20743, 13], "temperature": 0.0, "avg_logprob": -0.2273508834838867, "compression_ratio": 1.3015873015873016, "no_speech_prob": 7.466510578524321e-05}, {"id": 90, "seek": 56824, "start": 589.6, "end": 595.2, "text": " On the first tab, we will start a virtual ECU which is a testing device we will run", "tokens": [1282, 264, 700, 4421, 11, 321, 486, 722, 257, 6374, 19081, 52, 597, 307, 257, 4997, 4302, 321, 486, 1190], "temperature": 0.0, "avg_logprob": -0.2273508834838867, "compression_ratio": 1.3015873015873016, "no_speech_prob": 7.466510578524321e-05}, {"id": 91, "seek": 59520, "start": 595.2, "end": 603.8000000000001, "text": " Gaelia against and on the second tab, we have the command line invocation, here we have", "tokens": [460, 4300, 654, 1970, 293, 322, 264, 1150, 4421, 11, 321, 362, 264, 5622, 1622, 1048, 27943, 11, 510, 321, 362], "temperature": 0.0, "avg_logprob": -0.20643706819904384, "compression_ratio": 1.5112359550561798, "no_speech_prob": 4.976561831426807e-05}, {"id": 92, "seek": 59520, "start": 603.8000000000001, "end": 609.9200000000001, "text": " the configuration of the network stack, we have a transport module called TCP lines which", "tokens": [264, 11694, 295, 264, 3209, 8630, 11, 321, 362, 257, 5495, 10088, 1219, 48965, 3876, 597], "temperature": 0.0, "avg_logprob": -0.20643706819904384, "compression_ratio": 1.5112359550561798, "no_speech_prob": 4.976561831426807e-05}, {"id": 93, "seek": 59520, "start": 609.9200000000001, "end": 618.24, "text": " basically sends ASCII strings as TCP, on top of TCP, we use this for debugging and testing,", "tokens": [1936, 14790, 7469, 34, 9503, 13985, 382, 48965, 11, 322, 1192, 295, 48965, 11, 321, 764, 341, 337, 45592, 293, 4997, 11], "temperature": 0.0, "avg_logprob": -0.20643706819904384, "compression_ratio": 1.5112359550561798, "no_speech_prob": 4.976561831426807e-05}, {"id": 94, "seek": 61824, "start": 618.24, "end": 624.88, "text": " we have an Artifox where all the logging is placed and we try to discover what actual", "tokens": [321, 362, 364, 5735, 351, 5230, 689, 439, 264, 27991, 307, 7074, 293, 321, 853, 281, 4411, 437, 3539], "temperature": 0.0, "avg_logprob": -0.30899632441533076, "compression_ratio": 1.4362745098039216, "no_speech_prob": 1.3196474355936516e-05}, {"id": 95, "seek": 61824, "start": 624.88, "end": 629.8, "text": " UDS services this ECU exposes.", "tokens": [624, 11844, 3328, 341, 19081, 52, 1278, 4201, 13], "temperature": 0.0, "avg_logprob": -0.30899632441533076, "compression_ratio": 1.4362745098039216, "no_speech_prob": 1.3196474355936516e-05}, {"id": 96, "seek": 61824, "start": 629.8, "end": 638.04, "text": " When you start it, it starts Dumbcap which records all the network traffic, then Gaelia", "tokens": [1133, 291, 722, 309, 11, 309, 3719, 413, 2860, 9485, 597, 7724, 439, 264, 3209, 6419, 11, 550, 460, 4300, 654], "temperature": 0.0, "avg_logprob": -0.30899632441533076, "compression_ratio": 1.4362745098039216, "no_speech_prob": 1.3196474355936516e-05}, {"id": 97, "seek": 61824, "start": 638.04, "end": 643.92, "text": " synchronizes with the ECU which means it sends a test a present packet that is something", "tokens": [19331, 5660, 365, 264, 19081, 52, 597, 1355, 309, 14790, 257, 1500, 257, 1974, 20300, 300, 307, 746], "temperature": 0.0, "avg_logprob": -0.30899632441533076, "compression_ratio": 1.4362745098039216, "no_speech_prob": 1.3196474355936516e-05}, {"id": 98, "seek": 64392, "start": 643.92, "end": 649.4799999999999, "text": " like a ping message and when the Pong arrives, the scanner starts and it iterates over the", "tokens": [411, 257, 26151, 3636, 293, 562, 264, 430, 556, 20116, 11, 264, 30211, 3719, 293, 309, 17138, 1024, 670, 264], "temperature": 0.0, "avg_logprob": -0.23212495950552134, "compression_ratio": 1.5789473684210527, "no_speech_prob": 6.19327329332009e-05}, {"id": 99, "seek": 64392, "start": 649.4799999999999, "end": 660.92, "text": " ECU and in this example, we have found a mode of operation, this session hex 52 and several", "tokens": [19081, 52, 293, 294, 341, 1365, 11, 321, 362, 1352, 257, 4391, 295, 6916, 11, 341, 5481, 23291, 18079, 293, 2940], "temperature": 0.0, "avg_logprob": -0.23212495950552134, "compression_ratio": 1.5789473684210527, "no_speech_prob": 6.19327329332009e-05}, {"id": 100, "seek": 64392, "start": 660.92, "end": 669.64, "text": " services are exposed in this session which can be exposed, which can be scanned further", "tokens": [3328, 366, 9495, 294, 341, 5481, 597, 393, 312, 9495, 11, 597, 393, 312, 45089, 3052], "temperature": 0.0, "avg_logprob": -0.23212495950552134, "compression_ratio": 1.5789473684210527, "no_speech_prob": 6.19327329332009e-05}, {"id": 101, "seek": 66964, "start": 669.64, "end": 676.76, "text": " with other scanning modules.", "tokens": [365, 661, 27019, 16679, 13], "temperature": 0.0, "avg_logprob": -0.2792216095269895, "compression_ratio": 1.3428571428571427, "no_speech_prob": 0.0012831033673137426}, {"id": 102, "seek": 66964, "start": 676.76, "end": 682.3199999999999, "text": " Now I have finished with my talk, thank you very much for your attention and if there", "tokens": [823, 286, 362, 4335, 365, 452, 751, 11, 1309, 291, 588, 709, 337, 428, 3202, 293, 498, 456], "temperature": 0.0, "avg_logprob": -0.2792216095269895, "compression_ratio": 1.3428571428571427, "no_speech_prob": 0.0012831033673137426}, {"id": 103, "seek": 66964, "start": 682.3199999999999, "end": 686.16, "text": " are any questions, I will be happy to answer them.", "tokens": [366, 604, 1651, 11, 286, 486, 312, 2055, 281, 1867, 552, 13], "temperature": 0.0, "avg_logprob": -0.2792216095269895, "compression_ratio": 1.3428571428571427, "no_speech_prob": 0.0012831033673137426}, {"id": 104, "seek": 66964, "start": 686.16, "end": 691.56, "text": " Yes, thank you Stefan.", "tokens": [1079, 11, 1309, 291, 32158, 13], "temperature": 0.0, "avg_logprob": -0.2792216095269895, "compression_ratio": 1.3428571428571427, "no_speech_prob": 0.0012831033673137426}, {"id": 105, "seek": 69156, "start": 691.56, "end": 706.92, "text": " So we have sometimes four questions here, yeah.", "tokens": [407, 321, 362, 2171, 1451, 1651, 510, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.3351441316826399, "compression_ratio": 1.226890756302521, "no_speech_prob": 0.0019748639315366745}, {"id": 106, "seek": 69156, "start": 706.92, "end": 707.92, "text": " Hi, thank you for the talk.", "tokens": [2421, 11, 1309, 291, 337, 264, 751, 13], "temperature": 0.0, "avg_logprob": -0.3351441316826399, "compression_ratio": 1.226890756302521, "no_speech_prob": 0.0019748639315366745}, {"id": 107, "seek": 69156, "start": 707.92, "end": 715.2399999999999, "text": " Can you say anything about fuzzing or memory scan, what you did there?", "tokens": [1664, 291, 584, 1340, 466, 283, 3334, 8781, 420, 4675, 11049, 11, 437, 291, 630, 456, 30], "temperature": 0.0, "avg_logprob": -0.3351441316826399, "compression_ratio": 1.226890756302521, "no_speech_prob": 0.0019748639315366745}, {"id": 108, "seek": 71524, "start": 715.24, "end": 723.04, "text": " We have some very basic fuzzer, it is included in the GitHub code, it is a PDU fuzzing,", "tokens": [492, 362, 512, 588, 3875, 283, 3334, 4527, 11, 309, 307, 5556, 294, 264, 23331, 3089, 11, 309, 307, 257, 10464, 52, 283, 3334, 8781, 11], "temperature": 0.0, "avg_logprob": -0.1474881512778146, "compression_ratio": 1.561904761904762, "no_speech_prob": 5.45767652511131e-05}, {"id": 109, "seek": 71524, "start": 723.04, "end": 730.24, "text": " but it just generates random data and you don't have any feedback loop for this since", "tokens": [457, 309, 445, 23815, 4974, 1412, 293, 291, 500, 380, 362, 604, 5824, 6367, 337, 341, 1670], "temperature": 0.0, "avg_logprob": -0.1474881512778146, "compression_ratio": 1.561904761904762, "no_speech_prob": 5.45767652511131e-05}, {"id": 110, "seek": 71524, "start": 730.24, "end": 736.6800000000001, "text": " this is quite complicated to implement for a car in a generic manner.", "tokens": [341, 307, 1596, 6179, 281, 4445, 337, 257, 1032, 294, 257, 19577, 9060, 13], "temperature": 0.0, "avg_logprob": -0.1474881512778146, "compression_ratio": 1.561904761904762, "no_speech_prob": 5.45767652511131e-05}, {"id": 111, "seek": 71524, "start": 736.6800000000001, "end": 741.92, "text": " Internally we have some more sophisticated fuzzing modules but we are not allowed to", "tokens": [4844, 379, 321, 362, 512, 544, 16950, 283, 3334, 8781, 16679, 457, 321, 366, 406, 4350, 281], "temperature": 0.0, "avg_logprob": -0.1474881512778146, "compression_ratio": 1.561904761904762, "no_speech_prob": 5.45767652511131e-05}, {"id": 112, "seek": 74192, "start": 741.92, "end": 746.4, "text": " publish them because of the NDA stuff, unfortunately.", "tokens": [11374, 552, 570, 295, 264, 426, 7509, 1507, 11, 7015, 13], "temperature": 0.0, "avg_logprob": -0.23245717585086823, "compression_ratio": 1.5058823529411764, "no_speech_prob": 9.794504148885608e-05}, {"id": 113, "seek": 74192, "start": 746.4, "end": 755.3199999999999, "text": " For the memory scan, there are a few services, blah, blah, blah, by memory address, we have", "tokens": [1171, 264, 4675, 11049, 11, 456, 366, 257, 1326, 3328, 11, 12288, 11, 12288, 11, 12288, 11, 538, 4675, 2985, 11, 321, 362], "temperature": 0.0, "avg_logprob": -0.23245717585086823, "compression_ratio": 1.5058823529411764, "no_speech_prob": 9.794504148885608e-05}, {"id": 114, "seek": 74192, "start": 755.3199999999999, "end": 762.24, "text": " discovery modules for this published on GitHub, but they actually discover endpoints and that", "tokens": [12114, 16679, 337, 341, 6572, 322, 23331, 11, 457, 436, 767, 4411, 917, 20552, 293, 300], "temperature": 0.0, "avg_logprob": -0.23245717585086823, "compression_ratio": 1.5058823529411764, "no_speech_prob": 9.794504148885608e-05}, {"id": 115, "seek": 74192, "start": 762.24, "end": 766.68, "text": " is basically it.", "tokens": [307, 1936, 309, 13], "temperature": 0.0, "avg_logprob": -0.23245717585086823, "compression_ratio": 1.5058823529411764, "no_speech_prob": 9.794504148885608e-05}, {"id": 116, "seek": 76668, "start": 766.68, "end": 772.68, "text": " So I have done a lot of testing and reverse engineering and you need a matrix of tests", "tokens": [407, 286, 362, 1096, 257, 688, 295, 4997, 293, 9943, 7043, 293, 291, 643, 257, 8141, 295, 6921], "temperature": 0.0, "avg_logprob": -0.21407732819065903, "compression_ratio": 1.5371428571428571, "no_speech_prob": 0.0009157238528132439}, {"id": 117, "seek": 76668, "start": 772.68, "end": 776.16, "text": " of what you are testing against and the thing.", "tokens": [295, 437, 291, 366, 4997, 1970, 293, 264, 551, 13], "temperature": 0.0, "avg_logprob": -0.21407732819065903, "compression_ratio": 1.5371428571428571, "no_speech_prob": 0.0009157238528132439}, {"id": 118, "seek": 76668, "start": 776.16, "end": 783.0799999999999, "text": " So I was just wondering for fits and giggles, is this virtual CPU sufficient to actually", "tokens": [407, 286, 390, 445, 6359, 337, 9001, 293, 50032, 11, 307, 341, 6374, 13199, 11563, 281, 767], "temperature": 0.0, "avg_logprob": -0.21407732819065903, "compression_ratio": 1.5371428571428571, "no_speech_prob": 0.0009157238528132439}, {"id": 119, "seek": 76668, "start": 783.0799999999999, "end": 790.56, "text": " plug it into the bus and actually run the car?", "tokens": [5452, 309, 666, 264, 1255, 293, 767, 1190, 264, 1032, 30], "temperature": 0.0, "avg_logprob": -0.21407732819065903, "compression_ratio": 1.5371428571428571, "no_speech_prob": 0.0009157238528132439}, {"id": 120, "seek": 79056, "start": 790.56, "end": 799.4, "text": " Because then it would be accurate enough to be able to be tested as a real world MCU.", "tokens": [1436, 550, 309, 576, 312, 8559, 1547, 281, 312, 1075, 281, 312, 8246, 382, 257, 957, 1002, 39415, 13], "temperature": 0.0, "avg_logprob": -0.1446552872657776, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.00010555310291238129}, {"id": 121, "seek": 79056, "start": 799.4, "end": 807.56, "text": " I hope I did understand the question correctly, but our virtual ECU module offers a possibility", "tokens": [286, 1454, 286, 630, 1223, 264, 1168, 8944, 11, 457, 527, 6374, 19081, 52, 10088, 7736, 257, 7959], "temperature": 0.0, "avg_logprob": -0.1446552872657776, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.00010555310291238129}, {"id": 122, "seek": 79056, "start": 807.56, "end": 816.88, "text": " to clone ECUs so we can just record traffic and store this in the database and it just", "tokens": [281, 26506, 19081, 29211, 370, 321, 393, 445, 2136, 6419, 293, 3531, 341, 294, 264, 8149, 293, 309, 445], "temperature": 0.0, "avg_logprob": -0.1446552872657776, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.00010555310291238129}, {"id": 123, "seek": 81688, "start": 816.88, "end": 824.36, "text": " answers what it has seen recently, but it does not cover any state.", "tokens": [6338, 437, 309, 575, 1612, 3938, 11, 457, 309, 775, 406, 2060, 604, 1785, 13], "temperature": 0.0, "avg_logprob": -0.1983824203263468, "compression_ratio": 1.5426829268292683, "no_speech_prob": 0.0007532364106737077}, {"id": 124, "seek": 81688, "start": 824.36, "end": 833.68, "text": " The idea was that the virtual CPU is actually sufficient to replace the ECU in the car and", "tokens": [440, 1558, 390, 300, 264, 6374, 13199, 307, 767, 11563, 281, 7406, 264, 19081, 52, 294, 264, 1032, 293], "temperature": 0.0, "avg_logprob": -0.1983824203263468, "compression_ratio": 1.5426829268292683, "no_speech_prob": 0.0007532364106737077}, {"id": 125, "seek": 81688, "start": 833.68, "end": 841.96, "text": " run, drive the car and that would give the enough accuracy of the ECU to be able to be", "tokens": [1190, 11, 3332, 264, 1032, 293, 300, 576, 976, 264, 1547, 14170, 295, 264, 19081, 52, 281, 312, 1075, 281, 312], "temperature": 0.0, "avg_logprob": -0.1983824203263468, "compression_ratio": 1.5426829268292683, "no_speech_prob": 0.0007532364106737077}, {"id": 126, "seek": 81688, "start": 841.96, "end": 842.96, "text": " tested.", "tokens": [8246, 13], "temperature": 0.0, "avg_logprob": -0.1983824203263468, "compression_ratio": 1.5426829268292683, "no_speech_prob": 0.0007532364106737077}, {"id": 127, "seek": 84296, "start": 842.96, "end": 851.48, "text": " Maybe it's a bit too much, but that's not in the scope of Gator, I feel.", "tokens": [2704, 309, 311, 257, 857, 886, 709, 11, 457, 300, 311, 406, 294, 264, 11923, 295, 460, 1639, 11, 286, 841, 13], "temperature": 0.0, "avg_logprob": -0.5234561719392475, "compression_ratio": 1.3741007194244603, "no_speech_prob": 0.00479084113612771}, {"id": 128, "seek": 84296, "start": 851.48, "end": 854.8000000000001, "text": " Okay, thank you, Stefan.", "tokens": [1033, 11, 1309, 291, 11, 32158, 13], "temperature": 0.0, "avg_logprob": -0.5234561719392475, "compression_ratio": 1.3741007194244603, "no_speech_prob": 0.00479084113612771}, {"id": 129, "seek": 84296, "start": 854.8000000000001, "end": 861.9200000000001, "text": " Thank you for listening and feel free to ask questions outside full speaker there.", "tokens": [1044, 291, 337, 4764, 293, 841, 1737, 281, 1029, 1651, 2380, 1577, 8145, 456, 13], "temperature": 0.0, "avg_logprob": -0.5234561719392475, "compression_ratio": 1.3741007194244603, "no_speech_prob": 0.00479084113612771}, {"id": 130, "seek": 84296, "start": 861.9200000000001, "end": 862.9200000000001, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.5234561719392475, "compression_ratio": 1.3741007194244603, "no_speech_prob": 0.00479084113612771}, {"id": 131, "seek": 86292, "start": 862.92, "end": 879.4, "text": " You are welcome.", "tokens": [509, 366, 2928, 13], "temperature": 1.0, "avg_logprob": -1.7657101154327393, "compression_ratio": 0.6666666666666666, "no_speech_prob": 0.0017759684706106782}], "language": "en"}