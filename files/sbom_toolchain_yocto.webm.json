{"text": " I want to go very quickly because I'm rushing through because I don't want to keep you from the very juiced part. So we are presenting a complete, as complete can be, compliance toolchain for yacht projects. So this in the context has been produced for a project we are part of called Eclipse Oniro. It's an Eclipse Foundation project, it's yacht-based, and it provides an all-scenario platform project. It's very complex, the numbers are quite impressive, cannot run through, but they are quite learning, and everything is based on CI, so everything is CI. We also needed to have a completely CI-ed also compliance process, so we needed to build with the existing parts and building parts that did not exist, by providing a dedicated toolchain. This toolchain for compliance has been made not just by us, but by the Neuropath Tech Park. People are in the room as well, and they have done much of the heavy lifting of programming, and Albert of course gets the credit for the software. It's also an Eclipse Foundation project, and it's alright, there is a REPL, and you can look at everything. It's based on an already existing, the no-subjects of compliance for soldiers can code, but we have to create a dedicated new custom set of tools also being distributed as open source. Of course we use SPDX all across the toolchain for many things, and this is important, this is not just for this project, this is meant to be a toolchain for all the Octobase project, not just for this. Through this combination of tools, we have been able to complete a very lengthy process of compliance, reaching 100% of coverage of all the components. I don't want to skip, thanks to the Damian providing a lot of the information that we have really used. Here you can see very quickly the dashboard, so you can track the evolution and the status of compliance. You can also go and have many more details of the single packages. That is just for knowing what components and what license is there, but we cannot stop there. We want to go farther, and we have what we call the second phase of the compliance toolchain, and we decided to go for a graph database for many technical reasons, because there are a lot of interactions we have to traverse the database very easily. We need to do the missing part, which is software composition analysis, dependencies analysis, and incompatibility checks, and everything must be done automatically as much as possible, so this must be entirely into the CI pipeline, which it does. In order to do this, we need several things. This is really important, map all licenses data from the source to the binary, and at file-level mapping, by file-level mapping, we mean every single file, including patches, everything that goes through needs to be checked, checked some, and tracked through all, in order to make sure that everything that goes inside is tracked. This information comes from many sources. We had an audit team who has done a lot of work, and finally, we need to find a way to automatically, as much as possible, see if the inbound and outbound licenses are compatible with each other through automated tools. This is in the very short time, the general description, here an example of the relationship between components in the database, and there is the next bit, which is perhaps more interesting, and I give the floor to Alberto. So thank you, Carlo, and so the question is, why do we need this? So Yacht of Warflow, for those who are already familiar with that, is quite simplified here. We have recipes, recipes that can map to a single upstream source component, but possibly also two different upstream components, maybe the main application, then some plug-ins. So you can have here many different upstream sources combined together, fetched, and together combined into a single work here, in the unpacker stage task of the build process. Then there are other tasks, configure, patch, whatever, basically build. We got binaries, and binaries are combined together to form the final image. But the problem is that when it comes to upstream sources, we have upstream components that have multiple licenses inside it. Maybe we have different components with different sets of licenses, but the thing is, we have only a small subset of the binaries that we could generate for all this stuff, and the binaries, you don't know what the actual license is, especially when here you have kind of a mess. And the thing is that you risk that some dirty stuff ends up in your image. I mean, I don't know, if you have a package with a blacklisted license or compatible combination of licenses, you may have in your final image something that is not compliant, and this is something we need to avoid. So the thing that we have to do is to follow a process. So to find out the relationship with third-party upstream code, the inbound code, then we need to find under which license the inbound upstream software is, therefore the inbound license. And if there is a possible combination of that, because not all combinations are allowed, and depending on the context, they may be allowed or not, like other talks pointed out this morning. And we need to match this combination with the abound license, is the wanted abound license compatible with the inbound licenses. And this for each artifact, we cannot do that, especially in the embedded field at package level because the package may contain a lot of stuff. And we need to know about the files, not the generic about the package. Here we have an example, I hope it's readable. This is GPGME component that GPG made easy. It's a very small component. In our project, we found it out that we generate only three binaries out of it. If you look at the license and the recipe, you find the GPL, I guess, three or LGPL two or something like that. But this is nothing, sorry, not or, but and. So the thing is that this binary is that GPL, is that LGPL, is that something else? We don't know from what we have from source license information. So we collect in this graph database multiple sources of information. So on the yellow dots are the information coming from our auditing, working on physiology. So file level, source, license information, the purple dots are, comes from Yachta metadata and also the information about which files are being generated by, to generate, they have been used to generate this binary, comes from Yachta from the create SPDX class presented before. Basically, we now have MIT, MIT, GPL two, GPL three, sorry, GPL two or later, or LGPL three or later, and then we have GPL three or later. What's the license of this file? So usually the audit team comes to us and we discuss to find out which is the license of the binary file. But this is not scalable. This is error prone. We cannot do that for every single binary file, for every release, for every snapshot of the project. This is another example. This is another binary you can generate from the same component. Here you have MIT, MIT, MIT, LGPL two, point one or later. This is another story. Maybe it's easier here. And we can have also more complicated, I won't go into the details here. So how can we handle that in an automated way? So the idea is to have kind of a battle between license cards. So you put together every time two, two cards, and you need a set of rules to decide which card wins. And then you iterate and you look over all the possible combinations of license until only one will survive, hopefully. So to do that, we are trying to define a language to define those rules. We need to define the two license cards, the two license cards that are fighting against each other. We need to fight the called battlefield kind of context. Is that static linking, dynamic linking, whatever? The authority who said that, because the answer by the lawyers always, it depends. So we need to say who said that. In this case, FSF, we kind of trust it, especially when it comes to GPL compatibility matrix. And here we are the result of the battle. We have a winner or we have kind of invalid. So this kind of combination is not possible, because GPL two only is not inbound compatible with Apache 2.0, while GPL two or later may be inbound compatible with Apache 2.0. If you make it become GPL three, because GPL three is allowed to be inbound compatible with Apache 2.0. So this is kind of an example. I don't have time to go into details. The rules in action are like here, when you have disjunction, a disjunctive license expression, you need to calculate the Cartesian product. So you need to have, in this case, MIT, GPL two and GPL three fighting against each other. Then MIT, LGPL three and GPL three fight against each other. You find a list of the decision and we know that GPL three or later is the license that prevails here at the end. So the time is up, sorry. So the thing is that, how I already said, we consume data from different sources, from physiology, from Yachto, and for now we have proof of concept. The aim is to upstream everything into the Creator Speedyx class in the Yachto project. I don't think we have time for questions, but here and in the slide you find all the information to contact us. So thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.52, "text": " I want to go very quickly because I'm rushing through because I don't want to keep you from", "tokens": [286, 528, 281, 352, 588, 2661, 570, 286, 478, 25876, 807, 570, 286, 500, 380, 528, 281, 1066, 291, 490], "temperature": 0.0, "avg_logprob": -0.33685046748111125, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.652123212814331}, {"id": 1, "seek": 0, "start": 13.52, "end": 14.76, "text": " the very juiced part.", "tokens": [264, 588, 3649, 4233, 644, 13], "temperature": 0.0, "avg_logprob": -0.33685046748111125, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.652123212814331}, {"id": 2, "seek": 0, "start": 14.76, "end": 23.76, "text": " So we are presenting a complete, as complete can be, compliance toolchain for yacht projects.", "tokens": [407, 321, 366, 15578, 257, 3566, 11, 382, 3566, 393, 312, 11, 15882, 2290, 11509, 337, 39629, 4455, 13], "temperature": 0.0, "avg_logprob": -0.33685046748111125, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.652123212814331}, {"id": 3, "seek": 0, "start": 23.76, "end": 29.96, "text": " So this in the context has been produced for a project we are part of called Eclipse Oniro.", "tokens": [407, 341, 294, 264, 4319, 575, 668, 7126, 337, 257, 1716, 321, 366, 644, 295, 1219, 462, 27197, 1282, 5182, 13], "temperature": 0.0, "avg_logprob": -0.33685046748111125, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.652123212814331}, {"id": 4, "seek": 2996, "start": 29.96, "end": 39.44, "text": " It's an Eclipse Foundation project, it's yacht-based, and it provides an all-scenario platform project.", "tokens": [467, 311, 364, 462, 27197, 10335, 1716, 11, 309, 311, 39629, 12, 6032, 11, 293, 309, 6417, 364, 439, 12, 4417, 49120, 3663, 1716, 13], "temperature": 0.0, "avg_logprob": -0.3671374266175018, "compression_ratio": 1.6018518518518519, "no_speech_prob": 0.0002555190585553646}, {"id": 5, "seek": 2996, "start": 39.44, "end": 44.64, "text": " It's very complex, the numbers are quite impressive, cannot run through, but they are quite learning,", "tokens": [467, 311, 588, 3997, 11, 264, 3547, 366, 1596, 8992, 11, 2644, 1190, 807, 11, 457, 436, 366, 1596, 2539, 11], "temperature": 0.0, "avg_logprob": -0.3671374266175018, "compression_ratio": 1.6018518518518519, "no_speech_prob": 0.0002555190585553646}, {"id": 6, "seek": 2996, "start": 44.64, "end": 50.040000000000006, "text": " and everything is based on CI, so everything is CI.", "tokens": [293, 1203, 307, 2361, 322, 37777, 11, 370, 1203, 307, 37777, 13], "temperature": 0.0, "avg_logprob": -0.3671374266175018, "compression_ratio": 1.6018518518518519, "no_speech_prob": 0.0002555190585553646}, {"id": 7, "seek": 2996, "start": 50.040000000000006, "end": 56.760000000000005, "text": " We also needed to have a completely CI-ed also compliance process, so we needed to build", "tokens": [492, 611, 2978, 281, 362, 257, 2584, 37777, 12, 292, 611, 15882, 1399, 11, 370, 321, 2978, 281, 1322], "temperature": 0.0, "avg_logprob": -0.3671374266175018, "compression_ratio": 1.6018518518518519, "no_speech_prob": 0.0002555190585553646}, {"id": 8, "seek": 5676, "start": 56.76, "end": 64.12, "text": " with the existing parts and building parts that did not exist, by providing a dedicated", "tokens": [365, 264, 6741, 3166, 293, 2390, 3166, 300, 630, 406, 2514, 11, 538, 6530, 257, 8374], "temperature": 0.0, "avg_logprob": -0.23217975392061121, "compression_ratio": 1.5868544600938967, "no_speech_prob": 0.00040851504309102893}, {"id": 9, "seek": 5676, "start": 64.12, "end": 65.62, "text": " toolchain.", "tokens": [2290, 11509, 13], "temperature": 0.0, "avg_logprob": -0.23217975392061121, "compression_ratio": 1.5868544600938967, "no_speech_prob": 0.00040851504309102893}, {"id": 10, "seek": 5676, "start": 65.62, "end": 71.67999999999999, "text": " This toolchain for compliance has been made not just by us, but by the Neuropath Tech Park.", "tokens": [639, 2290, 11509, 337, 15882, 575, 668, 1027, 406, 445, 538, 505, 11, 457, 538, 264, 1734, 84, 1513, 998, 13795, 4964, 13], "temperature": 0.0, "avg_logprob": -0.23217975392061121, "compression_ratio": 1.5868544600938967, "no_speech_prob": 0.00040851504309102893}, {"id": 11, "seek": 5676, "start": 71.67999999999999, "end": 79.0, "text": " People are in the room as well, and they have done much of the heavy lifting of programming,", "tokens": [3432, 366, 294, 264, 1808, 382, 731, 11, 293, 436, 362, 1096, 709, 295, 264, 4676, 15798, 295, 9410, 11], "temperature": 0.0, "avg_logprob": -0.23217975392061121, "compression_ratio": 1.5868544600938967, "no_speech_prob": 0.00040851504309102893}, {"id": 12, "seek": 5676, "start": 79.0, "end": 82.4, "text": " and Albert of course gets the credit for the software.", "tokens": [293, 20812, 295, 1164, 2170, 264, 5397, 337, 264, 4722, 13], "temperature": 0.0, "avg_logprob": -0.23217975392061121, "compression_ratio": 1.5868544600938967, "no_speech_prob": 0.00040851504309102893}, {"id": 13, "seek": 8240, "start": 82.4, "end": 87.96000000000001, "text": " It's also an Eclipse Foundation project, and it's alright, there is a REPL, and you can", "tokens": [467, 311, 611, 364, 462, 27197, 10335, 1716, 11, 293, 309, 311, 5845, 11, 456, 307, 257, 31511, 43, 11, 293, 291, 393], "temperature": 0.0, "avg_logprob": -0.23356581353521966, "compression_ratio": 1.46, "no_speech_prob": 0.00032018055208027363}, {"id": 14, "seek": 8240, "start": 87.96000000000001, "end": 89.76, "text": " look at everything.", "tokens": [574, 412, 1203, 13], "temperature": 0.0, "avg_logprob": -0.23356581353521966, "compression_ratio": 1.46, "no_speech_prob": 0.00032018055208027363}, {"id": 15, "seek": 8240, "start": 89.76, "end": 98.60000000000001, "text": " It's based on an already existing, the no-subjects of compliance for soldiers can code, but we", "tokens": [467, 311, 2361, 322, 364, 1217, 6741, 11, 264, 572, 12, 30131, 1020, 82, 295, 15882, 337, 8892, 393, 3089, 11, 457, 321], "temperature": 0.0, "avg_logprob": -0.23356581353521966, "compression_ratio": 1.46, "no_speech_prob": 0.00032018055208027363}, {"id": 16, "seek": 8240, "start": 98.60000000000001, "end": 107.52000000000001, "text": " have to create a dedicated new custom set of tools also being distributed as open source.", "tokens": [362, 281, 1884, 257, 8374, 777, 2375, 992, 295, 3873, 611, 885, 12631, 382, 1269, 4009, 13], "temperature": 0.0, "avg_logprob": -0.23356581353521966, "compression_ratio": 1.46, "no_speech_prob": 0.00032018055208027363}, {"id": 17, "seek": 10752, "start": 107.52, "end": 114.03999999999999, "text": " Of course we use SPDX all across the toolchain for many things, and this is important, this", "tokens": [2720, 1164, 321, 764, 8420, 35, 55, 439, 2108, 264, 2290, 11509, 337, 867, 721, 11, 293, 341, 307, 1021, 11, 341], "temperature": 0.0, "avg_logprob": -0.19040475393596448, "compression_ratio": 1.6384180790960452, "no_speech_prob": 0.00047333401744253933}, {"id": 18, "seek": 10752, "start": 114.03999999999999, "end": 122.56, "text": " is not just for this project, this is meant to be a toolchain for all the Octobase project,", "tokens": [307, 406, 445, 337, 341, 1716, 11, 341, 307, 4140, 281, 312, 257, 2290, 11509, 337, 439, 264, 6788, 996, 651, 1716, 11], "temperature": 0.0, "avg_logprob": -0.19040475393596448, "compression_ratio": 1.6384180790960452, "no_speech_prob": 0.00047333401744253933}, {"id": 19, "seek": 10752, "start": 122.56, "end": 125.0, "text": " not just for this.", "tokens": [406, 445, 337, 341, 13], "temperature": 0.0, "avg_logprob": -0.19040475393596448, "compression_ratio": 1.6384180790960452, "no_speech_prob": 0.00047333401744253933}, {"id": 20, "seek": 10752, "start": 125.0, "end": 131.4, "text": " Through this combination of tools, we have been able to complete a very lengthy process", "tokens": [8927, 341, 6562, 295, 3873, 11, 321, 362, 668, 1075, 281, 3566, 257, 588, 35374, 1399], "temperature": 0.0, "avg_logprob": -0.19040475393596448, "compression_ratio": 1.6384180790960452, "no_speech_prob": 0.00047333401744253933}, {"id": 21, "seek": 13140, "start": 131.4, "end": 138.44, "text": " of compliance, reaching 100% of coverage of all the components.", "tokens": [295, 15882, 11, 9906, 2319, 4, 295, 9645, 295, 439, 264, 6677, 13], "temperature": 0.0, "avg_logprob": -0.2416869318762491, "compression_ratio": 1.566820276497696, "no_speech_prob": 0.00013428251259028912}, {"id": 22, "seek": 13140, "start": 138.44, "end": 143.92000000000002, "text": " I don't want to skip, thanks to the Damian providing a lot of the information that we", "tokens": [286, 500, 380, 528, 281, 10023, 11, 3231, 281, 264, 5885, 952, 6530, 257, 688, 295, 264, 1589, 300, 321], "temperature": 0.0, "avg_logprob": -0.2416869318762491, "compression_ratio": 1.566820276497696, "no_speech_prob": 0.00013428251259028912}, {"id": 23, "seek": 13140, "start": 143.92000000000002, "end": 145.8, "text": " have really used.", "tokens": [362, 534, 1143, 13], "temperature": 0.0, "avg_logprob": -0.2416869318762491, "compression_ratio": 1.566820276497696, "no_speech_prob": 0.00013428251259028912}, {"id": 24, "seek": 13140, "start": 145.8, "end": 153.6, "text": " Here you can see very quickly the dashboard, so you can track the evolution and the status", "tokens": [1692, 291, 393, 536, 588, 2661, 264, 18342, 11, 370, 291, 393, 2837, 264, 9303, 293, 264, 6558], "temperature": 0.0, "avg_logprob": -0.2416869318762491, "compression_ratio": 1.566820276497696, "no_speech_prob": 0.00013428251259028912}, {"id": 25, "seek": 13140, "start": 153.6, "end": 155.68, "text": " of compliance.", "tokens": [295, 15882, 13], "temperature": 0.0, "avg_logprob": -0.2416869318762491, "compression_ratio": 1.566820276497696, "no_speech_prob": 0.00013428251259028912}, {"id": 26, "seek": 13140, "start": 155.68, "end": 161.28, "text": " You can also go and have many more details of the single packages.", "tokens": [509, 393, 611, 352, 293, 362, 867, 544, 4365, 295, 264, 2167, 17401, 13], "temperature": 0.0, "avg_logprob": -0.2416869318762491, "compression_ratio": 1.566820276497696, "no_speech_prob": 0.00013428251259028912}, {"id": 27, "seek": 16128, "start": 161.28, "end": 167.96, "text": " That is just for knowing what components and what license is there, but we cannot stop", "tokens": [663, 307, 445, 337, 5276, 437, 6677, 293, 437, 10476, 307, 456, 11, 457, 321, 2644, 1590], "temperature": 0.0, "avg_logprob": -0.18170647504853038, "compression_ratio": 1.6813725490196079, "no_speech_prob": 0.0003945408680010587}, {"id": 28, "seek": 16128, "start": 167.96, "end": 168.96, "text": " there.", "tokens": [456, 13], "temperature": 0.0, "avg_logprob": -0.18170647504853038, "compression_ratio": 1.6813725490196079, "no_speech_prob": 0.0003945408680010587}, {"id": 29, "seek": 16128, "start": 168.96, "end": 177.28, "text": " We want to go farther, and we have what we call the second phase of the compliance toolchain,", "tokens": [492, 528, 281, 352, 20344, 11, 293, 321, 362, 437, 321, 818, 264, 1150, 5574, 295, 264, 15882, 2290, 11509, 11], "temperature": 0.0, "avg_logprob": -0.18170647504853038, "compression_ratio": 1.6813725490196079, "no_speech_prob": 0.0003945408680010587}, {"id": 30, "seek": 16128, "start": 177.28, "end": 181.2, "text": " and we decided to go for a graph database for many technical reasons, because there", "tokens": [293, 321, 3047, 281, 352, 337, 257, 4295, 8149, 337, 867, 6191, 4112, 11, 570, 456], "temperature": 0.0, "avg_logprob": -0.18170647504853038, "compression_ratio": 1.6813725490196079, "no_speech_prob": 0.0003945408680010587}, {"id": 31, "seek": 16128, "start": 181.2, "end": 187.04, "text": " are a lot of interactions we have to traverse the database very easily.", "tokens": [366, 257, 688, 295, 13280, 321, 362, 281, 45674, 264, 8149, 588, 3612, 13], "temperature": 0.0, "avg_logprob": -0.18170647504853038, "compression_ratio": 1.6813725490196079, "no_speech_prob": 0.0003945408680010587}, {"id": 32, "seek": 18704, "start": 187.04, "end": 193.51999999999998, "text": " We need to do the missing part, which is software composition analysis, dependencies analysis,", "tokens": [492, 643, 281, 360, 264, 5361, 644, 11, 597, 307, 4722, 12686, 5215, 11, 36606, 5215, 11], "temperature": 0.0, "avg_logprob": -0.22718480999550122, "compression_ratio": 1.6578947368421053, "no_speech_prob": 4.7226767492247745e-05}, {"id": 33, "seek": 18704, "start": 193.51999999999998, "end": 198.6, "text": " and incompatibility checks, and everything must be done automatically as much as possible,", "tokens": [293, 40393, 267, 2841, 13834, 11, 293, 1203, 1633, 312, 1096, 6772, 382, 709, 382, 1944, 11], "temperature": 0.0, "avg_logprob": -0.22718480999550122, "compression_ratio": 1.6578947368421053, "no_speech_prob": 4.7226767492247745e-05}, {"id": 34, "seek": 18704, "start": 198.6, "end": 204.44, "text": " so this must be entirely into the CI pipeline, which it does.", "tokens": [370, 341, 1633, 312, 7696, 666, 264, 37777, 15517, 11, 597, 309, 775, 13], "temperature": 0.0, "avg_logprob": -0.22718480999550122, "compression_ratio": 1.6578947368421053, "no_speech_prob": 4.7226767492247745e-05}, {"id": 35, "seek": 18704, "start": 204.44, "end": 208.12, "text": " In order to do this, we need several things.", "tokens": [682, 1668, 281, 360, 341, 11, 321, 643, 2940, 721, 13], "temperature": 0.0, "avg_logprob": -0.22718480999550122, "compression_ratio": 1.6578947368421053, "no_speech_prob": 4.7226767492247745e-05}, {"id": 36, "seek": 18704, "start": 208.12, "end": 214.04, "text": " This is really important, map all licenses data from the source to the binary, and at", "tokens": [639, 307, 534, 1021, 11, 4471, 439, 32821, 1412, 490, 264, 4009, 281, 264, 17434, 11, 293, 412], "temperature": 0.0, "avg_logprob": -0.22718480999550122, "compression_ratio": 1.6578947368421053, "no_speech_prob": 4.7226767492247745e-05}, {"id": 37, "seek": 21404, "start": 214.04, "end": 220.12, "text": " file-level mapping, by file-level mapping, we mean every single file, including patches,", "tokens": [3991, 12, 12418, 18350, 11, 538, 3991, 12, 12418, 18350, 11, 321, 914, 633, 2167, 3991, 11, 3009, 26531, 11], "temperature": 0.0, "avg_logprob": -0.2378617991571841, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.00037047176738269627}, {"id": 38, "seek": 21404, "start": 220.12, "end": 224.92, "text": " everything that goes through needs to be checked, checked some, and tracked through all, in", "tokens": [1203, 300, 1709, 807, 2203, 281, 312, 10033, 11, 10033, 512, 11, 293, 31703, 807, 439, 11, 294], "temperature": 0.0, "avg_logprob": -0.2378617991571841, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.00037047176738269627}, {"id": 39, "seek": 21404, "start": 224.92, "end": 230.2, "text": " order to make sure that everything that goes inside is tracked.", "tokens": [1668, 281, 652, 988, 300, 1203, 300, 1709, 1854, 307, 31703, 13], "temperature": 0.0, "avg_logprob": -0.2378617991571841, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.00037047176738269627}, {"id": 40, "seek": 21404, "start": 230.2, "end": 232.48, "text": " This information comes from many sources.", "tokens": [639, 1589, 1487, 490, 867, 7139, 13], "temperature": 0.0, "avg_logprob": -0.2378617991571841, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.00037047176738269627}, {"id": 41, "seek": 21404, "start": 232.48, "end": 241.07999999999998, "text": " We had an audit team who has done a lot of work, and finally, we need to find a way to", "tokens": [492, 632, 364, 17748, 1469, 567, 575, 1096, 257, 688, 295, 589, 11, 293, 2721, 11, 321, 643, 281, 915, 257, 636, 281], "temperature": 0.0, "avg_logprob": -0.2378617991571841, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.00037047176738269627}, {"id": 42, "seek": 24108, "start": 241.08, "end": 248.60000000000002, "text": " automatically, as much as possible, see if the inbound and outbound licenses are compatible", "tokens": [6772, 11, 382, 709, 382, 1944, 11, 536, 498, 264, 294, 18767, 293, 484, 18767, 32821, 366, 18218], "temperature": 0.0, "avg_logprob": -0.18172399202982584, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.312840610509738e-05}, {"id": 43, "seek": 24108, "start": 248.60000000000002, "end": 251.04000000000002, "text": " with each other through automated tools.", "tokens": [365, 1184, 661, 807, 18473, 3873, 13], "temperature": 0.0, "avg_logprob": -0.18172399202982584, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.312840610509738e-05}, {"id": 44, "seek": 24108, "start": 251.04000000000002, "end": 258.04, "text": " This is in the very short time, the general description, here an example of the relationship", "tokens": [639, 307, 294, 264, 588, 2099, 565, 11, 264, 2674, 3855, 11, 510, 364, 1365, 295, 264, 2480], "temperature": 0.0, "avg_logprob": -0.18172399202982584, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.312840610509738e-05}, {"id": 45, "seek": 24108, "start": 258.04, "end": 266.28000000000003, "text": " between components in the database, and there is the next bit, which is perhaps more interesting,", "tokens": [1296, 6677, 294, 264, 8149, 11, 293, 456, 307, 264, 958, 857, 11, 597, 307, 4317, 544, 1880, 11], "temperature": 0.0, "avg_logprob": -0.18172399202982584, "compression_ratio": 1.5833333333333333, "no_speech_prob": 4.312840610509738e-05}, {"id": 46, "seek": 26628, "start": 266.28, "end": 272.76, "text": " and I give the floor to Alberto.", "tokens": [293, 286, 976, 264, 4123, 281, 45709, 13], "temperature": 0.0, "avg_logprob": -0.25018539944210566, "compression_ratio": 1.4263959390862944, "no_speech_prob": 0.0005110047641210258}, {"id": 47, "seek": 26628, "start": 272.76, "end": 281.08, "text": " So thank you, Carlo, and so the question is, why do we need this?", "tokens": [407, 1309, 291, 11, 45112, 11, 293, 370, 264, 1168, 307, 11, 983, 360, 321, 643, 341, 30], "temperature": 0.0, "avg_logprob": -0.25018539944210566, "compression_ratio": 1.4263959390862944, "no_speech_prob": 0.0005110047641210258}, {"id": 48, "seek": 26628, "start": 281.08, "end": 288.35999999999996, "text": " So Yacht of Warflow, for those who are already familiar with that, is quite simplified here.", "tokens": [407, 398, 3589, 295, 3630, 10565, 11, 337, 729, 567, 366, 1217, 4963, 365, 300, 11, 307, 1596, 26335, 510, 13], "temperature": 0.0, "avg_logprob": -0.25018539944210566, "compression_ratio": 1.4263959390862944, "no_speech_prob": 0.0005110047641210258}, {"id": 49, "seek": 26628, "start": 288.35999999999996, "end": 295.0, "text": " We have recipes, recipes that can map to a single upstream source component, but possibly", "tokens": [492, 362, 13035, 11, 13035, 300, 393, 4471, 281, 257, 2167, 33915, 4009, 6542, 11, 457, 6264], "temperature": 0.0, "avg_logprob": -0.25018539944210566, "compression_ratio": 1.4263959390862944, "no_speech_prob": 0.0005110047641210258}, {"id": 50, "seek": 29500, "start": 295.0, "end": 300.64, "text": " also two different upstream components, maybe the main application, then some plug-ins.", "tokens": [611, 732, 819, 33915, 6677, 11, 1310, 264, 2135, 3861, 11, 550, 512, 5452, 12, 1292, 13], "temperature": 0.0, "avg_logprob": -0.1956414185561143, "compression_ratio": 1.6201923076923077, "no_speech_prob": 0.0005714849103242159}, {"id": 51, "seek": 29500, "start": 300.64, "end": 307.56, "text": " So you can have here many different upstream sources combined together, fetched, and together", "tokens": [407, 291, 393, 362, 510, 867, 819, 33915, 7139, 9354, 1214, 11, 23673, 292, 11, 293, 1214], "temperature": 0.0, "avg_logprob": -0.1956414185561143, "compression_ratio": 1.6201923076923077, "no_speech_prob": 0.0005714849103242159}, {"id": 52, "seek": 29500, "start": 307.56, "end": 316.0, "text": " combined into a single work here, in the unpacker stage task of the build process.", "tokens": [9354, 666, 257, 2167, 589, 510, 11, 294, 264, 26699, 260, 3233, 5633, 295, 264, 1322, 1399, 13], "temperature": 0.0, "avg_logprob": -0.1956414185561143, "compression_ratio": 1.6201923076923077, "no_speech_prob": 0.0005714849103242159}, {"id": 53, "seek": 29500, "start": 316.0, "end": 321.36, "text": " Then there are other tasks, configure, patch, whatever, basically build.", "tokens": [1396, 456, 366, 661, 9608, 11, 22162, 11, 9972, 11, 2035, 11, 1936, 1322, 13], "temperature": 0.0, "avg_logprob": -0.1956414185561143, "compression_ratio": 1.6201923076923077, "no_speech_prob": 0.0005714849103242159}, {"id": 54, "seek": 32136, "start": 321.36, "end": 327.48, "text": " We got binaries, and binaries are combined together to form the final image.", "tokens": [492, 658, 5171, 4889, 11, 293, 5171, 4889, 366, 9354, 1214, 281, 1254, 264, 2572, 3256, 13], "temperature": 0.0, "avg_logprob": -0.18720553903018727, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.0001799011806724593}, {"id": 55, "seek": 32136, "start": 327.48, "end": 335.88, "text": " But the problem is that when it comes to upstream sources, we have upstream components that", "tokens": [583, 264, 1154, 307, 300, 562, 309, 1487, 281, 33915, 7139, 11, 321, 362, 33915, 6677, 300], "temperature": 0.0, "avg_logprob": -0.18720553903018727, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.0001799011806724593}, {"id": 56, "seek": 32136, "start": 335.88, "end": 339.96000000000004, "text": " have multiple licenses inside it.", "tokens": [362, 3866, 32821, 1854, 309, 13], "temperature": 0.0, "avg_logprob": -0.18720553903018727, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.0001799011806724593}, {"id": 57, "seek": 32136, "start": 339.96000000000004, "end": 346.96000000000004, "text": " Maybe we have different components with different sets of licenses, but the thing is, we have", "tokens": [2704, 321, 362, 819, 6677, 365, 819, 6352, 295, 32821, 11, 457, 264, 551, 307, 11, 321, 362], "temperature": 0.0, "avg_logprob": -0.18720553903018727, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.0001799011806724593}, {"id": 58, "seek": 34696, "start": 346.96, "end": 352.79999999999995, "text": " only a small subset of the binaries that we could generate for all this stuff, and the", "tokens": [787, 257, 1359, 25993, 295, 264, 5171, 4889, 300, 321, 727, 8460, 337, 439, 341, 1507, 11, 293, 264], "temperature": 0.0, "avg_logprob": -0.1279953942782637, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0002595327387098223}, {"id": 59, "seek": 34696, "start": 352.79999999999995, "end": 360.52, "text": " binaries, you don't know what the actual license is, especially when here you have kind of", "tokens": [5171, 4889, 11, 291, 500, 380, 458, 437, 264, 3539, 10476, 307, 11, 2318, 562, 510, 291, 362, 733, 295], "temperature": 0.0, "avg_logprob": -0.1279953942782637, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0002595327387098223}, {"id": 60, "seek": 34696, "start": 360.52, "end": 361.91999999999996, "text": " a mess.", "tokens": [257, 2082, 13], "temperature": 0.0, "avg_logprob": -0.1279953942782637, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0002595327387098223}, {"id": 61, "seek": 34696, "start": 361.91999999999996, "end": 368.32, "text": " And the thing is that you risk that some dirty stuff ends up in your image.", "tokens": [400, 264, 551, 307, 300, 291, 3148, 300, 512, 9360, 1507, 5314, 493, 294, 428, 3256, 13], "temperature": 0.0, "avg_logprob": -0.1279953942782637, "compression_ratio": 1.544378698224852, "no_speech_prob": 0.0002595327387098223}, {"id": 62, "seek": 36832, "start": 368.32, "end": 378.48, "text": " I mean, I don't know, if you have a package with a blacklisted license or compatible combination", "tokens": [286, 914, 11, 286, 500, 380, 458, 11, 498, 291, 362, 257, 7372, 365, 257, 2211, 34890, 10476, 420, 18218, 6562], "temperature": 0.0, "avg_logprob": -0.13808160509381975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 3.4617936762515455e-05}, {"id": 63, "seek": 36832, "start": 378.48, "end": 384.76, "text": " of licenses, you may have in your final image something that is not compliant, and this", "tokens": [295, 32821, 11, 291, 815, 362, 294, 428, 2572, 3256, 746, 300, 307, 406, 36248, 11, 293, 341], "temperature": 0.0, "avg_logprob": -0.13808160509381975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 3.4617936762515455e-05}, {"id": 64, "seek": 36832, "start": 384.76, "end": 387.32, "text": " is something we need to avoid.", "tokens": [307, 746, 321, 643, 281, 5042, 13], "temperature": 0.0, "avg_logprob": -0.13808160509381975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 3.4617936762515455e-05}, {"id": 65, "seek": 36832, "start": 387.32, "end": 392.6, "text": " So the thing that we have to do is to follow a process.", "tokens": [407, 264, 551, 300, 321, 362, 281, 360, 307, 281, 1524, 257, 1399, 13], "temperature": 0.0, "avg_logprob": -0.13808160509381975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 3.4617936762515455e-05}, {"id": 66, "seek": 39260, "start": 392.6, "end": 399.68, "text": " So to find out the relationship with third-party upstream code, the inbound code, then we need", "tokens": [407, 281, 915, 484, 264, 2480, 365, 2636, 12, 23409, 33915, 3089, 11, 264, 294, 18767, 3089, 11, 550, 321, 643], "temperature": 0.0, "avg_logprob": -0.17887462658828565, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.0002652745461091399}, {"id": 67, "seek": 39260, "start": 399.68, "end": 406.28000000000003, "text": " to find under which license the inbound upstream software is, therefore the inbound license.", "tokens": [281, 915, 833, 597, 10476, 264, 294, 18767, 33915, 4722, 307, 11, 4412, 264, 294, 18767, 10476, 13], "temperature": 0.0, "avg_logprob": -0.17887462658828565, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.0002652745461091399}, {"id": 68, "seek": 39260, "start": 406.28000000000003, "end": 412.40000000000003, "text": " And if there is a possible combination of that, because not all combinations are allowed,", "tokens": [400, 498, 456, 307, 257, 1944, 6562, 295, 300, 11, 570, 406, 439, 21267, 366, 4350, 11], "temperature": 0.0, "avg_logprob": -0.17887462658828565, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.0002652745461091399}, {"id": 69, "seek": 39260, "start": 412.40000000000003, "end": 418.56, "text": " and depending on the context, they may be allowed or not, like other talks pointed out", "tokens": [293, 5413, 322, 264, 4319, 11, 436, 815, 312, 4350, 420, 406, 11, 411, 661, 6686, 10932, 484], "temperature": 0.0, "avg_logprob": -0.17887462658828565, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.0002652745461091399}, {"id": 70, "seek": 39260, "start": 418.56, "end": 419.96000000000004, "text": " this morning.", "tokens": [341, 2446, 13], "temperature": 0.0, "avg_logprob": -0.17887462658828565, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.0002652745461091399}, {"id": 71, "seek": 41996, "start": 419.96, "end": 426.59999999999997, "text": " And we need to match this combination with the abound license, is the wanted abound license", "tokens": [400, 321, 643, 281, 2995, 341, 6562, 365, 264, 410, 554, 10476, 11, 307, 264, 1415, 410, 554, 10476], "temperature": 0.0, "avg_logprob": -0.18781862553861953, "compression_ratio": 1.7236842105263157, "no_speech_prob": 0.00019583683751989156}, {"id": 72, "seek": 41996, "start": 426.59999999999997, "end": 429.58, "text": " compatible with the inbound licenses.", "tokens": [18218, 365, 264, 294, 18767, 32821, 13], "temperature": 0.0, "avg_logprob": -0.18781862553861953, "compression_ratio": 1.7236842105263157, "no_speech_prob": 0.00019583683751989156}, {"id": 73, "seek": 41996, "start": 429.58, "end": 434.68, "text": " And this for each artifact, we cannot do that, especially in the embedded field at package", "tokens": [400, 341, 337, 1184, 34806, 11, 321, 2644, 360, 300, 11, 2318, 294, 264, 16741, 2519, 412, 7372], "temperature": 0.0, "avg_logprob": -0.18781862553861953, "compression_ratio": 1.7236842105263157, "no_speech_prob": 0.00019583683751989156}, {"id": 74, "seek": 41996, "start": 434.68, "end": 438.67999999999995, "text": " level because the package may contain a lot of stuff.", "tokens": [1496, 570, 264, 7372, 815, 5304, 257, 688, 295, 1507, 13], "temperature": 0.0, "avg_logprob": -0.18781862553861953, "compression_ratio": 1.7236842105263157, "no_speech_prob": 0.00019583683751989156}, {"id": 75, "seek": 41996, "start": 438.67999999999995, "end": 443.67999999999995, "text": " And we need to know about the files, not the generic about the package.", "tokens": [400, 321, 643, 281, 458, 466, 264, 7098, 11, 406, 264, 19577, 466, 264, 7372, 13], "temperature": 0.0, "avg_logprob": -0.18781862553861953, "compression_ratio": 1.7236842105263157, "no_speech_prob": 0.00019583683751989156}, {"id": 76, "seek": 41996, "start": 443.67999999999995, "end": 447.44, "text": " Here we have an example, I hope it's readable.", "tokens": [1692, 321, 362, 364, 1365, 11, 286, 1454, 309, 311, 49857, 13], "temperature": 0.0, "avg_logprob": -0.18781862553861953, "compression_ratio": 1.7236842105263157, "no_speech_prob": 0.00019583683751989156}, {"id": 77, "seek": 44744, "start": 447.44, "end": 454.24, "text": " This is GPGME component that GPG made easy.", "tokens": [639, 307, 26039, 38, 15454, 6542, 300, 26039, 38, 1027, 1858, 13], "temperature": 0.0, "avg_logprob": -0.21646789794272564, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.00028722890419885516}, {"id": 78, "seek": 44744, "start": 454.24, "end": 457.2, "text": " It's a very small component.", "tokens": [467, 311, 257, 588, 1359, 6542, 13], "temperature": 0.0, "avg_logprob": -0.21646789794272564, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.00028722890419885516}, {"id": 79, "seek": 44744, "start": 457.2, "end": 462.2, "text": " In our project, we found it out that we generate only three binaries out of it.", "tokens": [682, 527, 1716, 11, 321, 1352, 309, 484, 300, 321, 8460, 787, 1045, 5171, 4889, 484, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.21646789794272564, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.00028722890419885516}, {"id": 80, "seek": 44744, "start": 462.2, "end": 470.84, "text": " If you look at the license and the recipe, you find the GPL, I guess, three or LGPL two", "tokens": [759, 291, 574, 412, 264, 10476, 293, 264, 6782, 11, 291, 915, 264, 460, 21593, 11, 286, 2041, 11, 1045, 420, 25449, 21593, 732], "temperature": 0.0, "avg_logprob": -0.21646789794272564, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.00028722890419885516}, {"id": 81, "seek": 44744, "start": 470.84, "end": 472.24, "text": " or something like that.", "tokens": [420, 746, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.21646789794272564, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.00028722890419885516}, {"id": 82, "seek": 44744, "start": 472.24, "end": 476.92, "text": " But this is nothing, sorry, not or, but and.", "tokens": [583, 341, 307, 1825, 11, 2597, 11, 406, 420, 11, 457, 293, 13], "temperature": 0.0, "avg_logprob": -0.21646789794272564, "compression_ratio": 1.5147058823529411, "no_speech_prob": 0.00028722890419885516}, {"id": 83, "seek": 47692, "start": 476.92, "end": 484.56, "text": " So the thing is that this binary is that GPL, is that LGPL, is that something else?", "tokens": [407, 264, 551, 307, 300, 341, 17434, 307, 300, 460, 21593, 11, 307, 300, 25449, 21593, 11, 307, 300, 746, 1646, 30], "temperature": 0.0, "avg_logprob": -0.17898082733154297, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.00015817047096788883}, {"id": 84, "seek": 47692, "start": 484.56, "end": 489.92, "text": " We don't know from what we have from source license information.", "tokens": [492, 500, 380, 458, 490, 437, 321, 362, 490, 4009, 10476, 1589, 13], "temperature": 0.0, "avg_logprob": -0.17898082733154297, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.00015817047096788883}, {"id": 85, "seek": 47692, "start": 489.92, "end": 495.28000000000003, "text": " So we collect in this graph database multiple sources of information.", "tokens": [407, 321, 2500, 294, 341, 4295, 8149, 3866, 7139, 295, 1589, 13], "temperature": 0.0, "avg_logprob": -0.17898082733154297, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.00015817047096788883}, {"id": 86, "seek": 47692, "start": 495.28000000000003, "end": 502.28000000000003, "text": " So on the yellow dots are the information coming from our auditing, working on physiology.", "tokens": [407, 322, 264, 5566, 15026, 366, 264, 1589, 1348, 490, 527, 2379, 1748, 11, 1364, 322, 43585, 13], "temperature": 0.0, "avg_logprob": -0.17898082733154297, "compression_ratio": 1.6612903225806452, "no_speech_prob": 0.00015817047096788883}, {"id": 87, "seek": 50228, "start": 502.28, "end": 514.9599999999999, "text": " So file level, source, license information, the purple dots are, comes from Yachta metadata", "tokens": [407, 3991, 1496, 11, 4009, 11, 10476, 1589, 11, 264, 9656, 15026, 366, 11, 1487, 490, 398, 3589, 64, 26603], "temperature": 0.0, "avg_logprob": -0.33923204394354334, "compression_ratio": 1.6127167630057804, "no_speech_prob": 0.00014664430636912584}, {"id": 88, "seek": 50228, "start": 514.9599999999999, "end": 522.24, "text": " and also the information about which files are being generated by, to generate, they", "tokens": [293, 611, 264, 1589, 466, 597, 7098, 366, 885, 10833, 538, 11, 281, 8460, 11, 436], "temperature": 0.0, "avg_logprob": -0.33923204394354334, "compression_ratio": 1.6127167630057804, "no_speech_prob": 0.00014664430636912584}, {"id": 89, "seek": 50228, "start": 522.24, "end": 528.8399999999999, "text": " have been used to generate this binary, comes from Yachta from the create SPDX class presented", "tokens": [362, 668, 1143, 281, 8460, 341, 17434, 11, 1487, 490, 398, 3589, 64, 490, 264, 1884, 8420, 35, 55, 1508, 8212], "temperature": 0.0, "avg_logprob": -0.33923204394354334, "compression_ratio": 1.6127167630057804, "no_speech_prob": 0.00014664430636912584}, {"id": 90, "seek": 50228, "start": 528.8399999999999, "end": 529.8399999999999, "text": " before.", "tokens": [949, 13], "temperature": 0.0, "avg_logprob": -0.33923204394354334, "compression_ratio": 1.6127167630057804, "no_speech_prob": 0.00014664430636912584}, {"id": 91, "seek": 52984, "start": 529.84, "end": 537.9200000000001, "text": " Basically, we now have MIT, MIT, GPL two, GPL three, sorry, GPL two or later, or LGPL", "tokens": [8537, 11, 321, 586, 362, 13100, 11, 13100, 11, 460, 21593, 732, 11, 460, 21593, 1045, 11, 2597, 11, 460, 21593, 732, 420, 1780, 11, 420, 25449, 21593], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 92, "seek": 52984, "start": 537.9200000000001, "end": 541.88, "text": " three or later, and then we have GPL three or later.", "tokens": [1045, 420, 1780, 11, 293, 550, 321, 362, 460, 21593, 1045, 420, 1780, 13], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 93, "seek": 52984, "start": 541.88, "end": 543.6, "text": " What's the license of this file?", "tokens": [708, 311, 264, 10476, 295, 341, 3991, 30], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 94, "seek": 52984, "start": 543.6, "end": 552.24, "text": " So usually the audit team comes to us and we discuss to find out which is the license", "tokens": [407, 2673, 264, 17748, 1469, 1487, 281, 505, 293, 321, 2248, 281, 915, 484, 597, 307, 264, 10476], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 95, "seek": 52984, "start": 552.24, "end": 555.5600000000001, "text": " of the binary file.", "tokens": [295, 264, 17434, 3991, 13], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 96, "seek": 52984, "start": 555.5600000000001, "end": 557.2, "text": " But this is not scalable.", "tokens": [583, 341, 307, 406, 38481, 13], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 97, "seek": 52984, "start": 557.2, "end": 558.36, "text": " This is error prone.", "tokens": [639, 307, 6713, 25806, 13], "temperature": 0.0, "avg_logprob": -0.18847448348999024, "compression_ratio": 1.6787564766839378, "no_speech_prob": 0.00027988001238554716}, {"id": 98, "seek": 55836, "start": 558.36, "end": 563.08, "text": " We cannot do that for every single binary file, for every release, for every snapshot", "tokens": [492, 2644, 360, 300, 337, 633, 2167, 17434, 3991, 11, 337, 633, 4374, 11, 337, 633, 30163], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 99, "seek": 55836, "start": 563.08, "end": 565.6800000000001, "text": " of the project.", "tokens": [295, 264, 1716, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 100, "seek": 55836, "start": 565.6800000000001, "end": 567.28, "text": " This is another example.", "tokens": [639, 307, 1071, 1365, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 101, "seek": 55836, "start": 567.28, "end": 570.52, "text": " This is another binary you can generate from the same component.", "tokens": [639, 307, 1071, 17434, 291, 393, 8460, 490, 264, 912, 6542, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 102, "seek": 55836, "start": 570.52, "end": 574.96, "text": " Here you have MIT, MIT, MIT, LGPL two, point one or later.", "tokens": [1692, 291, 362, 13100, 11, 13100, 11, 13100, 11, 25449, 21593, 732, 11, 935, 472, 420, 1780, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 103, "seek": 55836, "start": 574.96, "end": 576.6, "text": " This is another story.", "tokens": [639, 307, 1071, 1657, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 104, "seek": 55836, "start": 576.6, "end": 579.64, "text": " Maybe it's easier here.", "tokens": [2704, 309, 311, 3571, 510, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 105, "seek": 55836, "start": 579.64, "end": 584.84, "text": " And we can have also more complicated, I won't go into the details here.", "tokens": [400, 321, 393, 362, 611, 544, 6179, 11, 286, 1582, 380, 352, 666, 264, 4365, 510, 13], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 106, "seek": 55836, "start": 584.84, "end": 588.24, "text": " So how can we handle that in an automated way?", "tokens": [407, 577, 393, 321, 4813, 300, 294, 364, 18473, 636, 30], "temperature": 0.0, "avg_logprob": -0.16959639839504076, "compression_ratio": 1.6951219512195121, "no_speech_prob": 0.00020198924175929278}, {"id": 107, "seek": 58824, "start": 588.24, "end": 592.64, "text": " So the idea is to have kind of a battle between license cards.", "tokens": [407, 264, 1558, 307, 281, 362, 733, 295, 257, 4635, 1296, 10476, 5632, 13], "temperature": 0.0, "avg_logprob": -0.17638072702619764, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0002604358596727252}, {"id": 108, "seek": 58824, "start": 592.64, "end": 600.48, "text": " So you put together every time two, two cards, and you need a set of rules to decide which", "tokens": [407, 291, 829, 1214, 633, 565, 732, 11, 732, 5632, 11, 293, 291, 643, 257, 992, 295, 4474, 281, 4536, 597], "temperature": 0.0, "avg_logprob": -0.17638072702619764, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0002604358596727252}, {"id": 109, "seek": 58824, "start": 600.48, "end": 601.88, "text": " card wins.", "tokens": [2920, 10641, 13], "temperature": 0.0, "avg_logprob": -0.17638072702619764, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0002604358596727252}, {"id": 110, "seek": 58824, "start": 601.88, "end": 609.08, "text": " And then you iterate and you look over all the possible combinations of license until", "tokens": [400, 550, 291, 44497, 293, 291, 574, 670, 439, 264, 1944, 21267, 295, 10476, 1826], "temperature": 0.0, "avg_logprob": -0.17638072702619764, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0002604358596727252}, {"id": 111, "seek": 58824, "start": 609.08, "end": 612.5600000000001, "text": " only one will survive, hopefully.", "tokens": [787, 472, 486, 7867, 11, 4696, 13], "temperature": 0.0, "avg_logprob": -0.17638072702619764, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0002604358596727252}, {"id": 112, "seek": 61256, "start": 612.56, "end": 620.7199999999999, "text": " So to do that, we are trying to define a language to define those rules.", "tokens": [407, 281, 360, 300, 11, 321, 366, 1382, 281, 6964, 257, 2856, 281, 6964, 729, 4474, 13], "temperature": 0.0, "avg_logprob": -0.2009795971131057, "compression_ratio": 1.75, "no_speech_prob": 0.0002708867541514337}, {"id": 113, "seek": 61256, "start": 620.7199999999999, "end": 626.1199999999999, "text": " We need to define the two license cards, the two license cards that are fighting against", "tokens": [492, 643, 281, 6964, 264, 732, 10476, 5632, 11, 264, 732, 10476, 5632, 300, 366, 5237, 1970], "temperature": 0.0, "avg_logprob": -0.2009795971131057, "compression_ratio": 1.75, "no_speech_prob": 0.0002708867541514337}, {"id": 114, "seek": 61256, "start": 626.1199999999999, "end": 627.1199999999999, "text": " each other.", "tokens": [1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.2009795971131057, "compression_ratio": 1.75, "no_speech_prob": 0.0002708867541514337}, {"id": 115, "seek": 61256, "start": 627.1199999999999, "end": 631.4, "text": " We need to fight the called battlefield kind of context.", "tokens": [492, 643, 281, 2092, 264, 1219, 21818, 733, 295, 4319, 13], "temperature": 0.0, "avg_logprob": -0.2009795971131057, "compression_ratio": 1.75, "no_speech_prob": 0.0002708867541514337}, {"id": 116, "seek": 61256, "start": 631.4, "end": 635.8399999999999, "text": " Is that static linking, dynamic linking, whatever?", "tokens": [1119, 300, 13437, 25775, 11, 8546, 25775, 11, 2035, 30], "temperature": 0.0, "avg_logprob": -0.2009795971131057, "compression_ratio": 1.75, "no_speech_prob": 0.0002708867541514337}, {"id": 117, "seek": 61256, "start": 635.8399999999999, "end": 642.52, "text": " The authority who said that, because the answer by the lawyers always, it depends.", "tokens": [440, 8281, 567, 848, 300, 11, 570, 264, 1867, 538, 264, 16219, 1009, 11, 309, 5946, 13], "temperature": 0.0, "avg_logprob": -0.2009795971131057, "compression_ratio": 1.75, "no_speech_prob": 0.0002708867541514337}, {"id": 118, "seek": 64252, "start": 642.52, "end": 646.0799999999999, "text": " So we need to say who said that.", "tokens": [407, 321, 643, 281, 584, 567, 848, 300, 13], "temperature": 0.0, "avg_logprob": -0.18912239301772343, "compression_ratio": 1.5326633165829147, "no_speech_prob": 0.0004632624622900039}, {"id": 119, "seek": 64252, "start": 646.0799999999999, "end": 654.8, "text": " In this case, FSF, we kind of trust it, especially when it comes to GPL compatibility matrix.", "tokens": [682, 341, 1389, 11, 41138, 37, 11, 321, 733, 295, 3361, 309, 11, 2318, 562, 309, 1487, 281, 460, 21593, 34237, 8141, 13], "temperature": 0.0, "avg_logprob": -0.18912239301772343, "compression_ratio": 1.5326633165829147, "no_speech_prob": 0.0004632624622900039}, {"id": 120, "seek": 64252, "start": 654.8, "end": 658.24, "text": " And here we are the result of the battle.", "tokens": [400, 510, 321, 366, 264, 1874, 295, 264, 4635, 13], "temperature": 0.0, "avg_logprob": -0.18912239301772343, "compression_ratio": 1.5326633165829147, "no_speech_prob": 0.0004632624622900039}, {"id": 121, "seek": 64252, "start": 658.24, "end": 663.0799999999999, "text": " We have a winner or we have kind of invalid.", "tokens": [492, 362, 257, 8507, 420, 321, 362, 733, 295, 34702, 13], "temperature": 0.0, "avg_logprob": -0.18912239301772343, "compression_ratio": 1.5326633165829147, "no_speech_prob": 0.0004632624622900039}, {"id": 122, "seek": 64252, "start": 663.0799999999999, "end": 670.4, "text": " So this kind of combination is not possible, because GPL two only is not inbound compatible", "tokens": [407, 341, 733, 295, 6562, 307, 406, 1944, 11, 570, 460, 21593, 732, 787, 307, 406, 294, 18767, 18218], "temperature": 0.0, "avg_logprob": -0.18912239301772343, "compression_ratio": 1.5326633165829147, "no_speech_prob": 0.0004632624622900039}, {"id": 123, "seek": 67040, "start": 670.4, "end": 678.8, "text": " with Apache 2.0, while GPL two or later may be inbound compatible with Apache 2.0.", "tokens": [365, 46597, 568, 13, 15, 11, 1339, 460, 21593, 732, 420, 1780, 815, 312, 294, 18767, 18218, 365, 46597, 568, 13, 15, 13], "temperature": 0.0, "avg_logprob": -0.14089468461048754, "compression_ratio": 1.6139240506329113, "no_speech_prob": 0.001210713293403387}, {"id": 124, "seek": 67040, "start": 678.8, "end": 686.8, "text": " If you make it become GPL three, because GPL three is allowed to be inbound compatible", "tokens": [759, 291, 652, 309, 1813, 460, 21593, 1045, 11, 570, 460, 21593, 1045, 307, 4350, 281, 312, 294, 18767, 18218], "temperature": 0.0, "avg_logprob": -0.14089468461048754, "compression_ratio": 1.6139240506329113, "no_speech_prob": 0.001210713293403387}, {"id": 125, "seek": 67040, "start": 686.8, "end": 688.24, "text": " with Apache 2.0.", "tokens": [365, 46597, 568, 13, 15, 13], "temperature": 0.0, "avg_logprob": -0.14089468461048754, "compression_ratio": 1.6139240506329113, "no_speech_prob": 0.001210713293403387}, {"id": 126, "seek": 67040, "start": 688.24, "end": 691.3199999999999, "text": " So this is kind of an example.", "tokens": [407, 341, 307, 733, 295, 364, 1365, 13], "temperature": 0.0, "avg_logprob": -0.14089468461048754, "compression_ratio": 1.6139240506329113, "no_speech_prob": 0.001210713293403387}, {"id": 127, "seek": 67040, "start": 691.3199999999999, "end": 694.12, "text": " I don't have time to go into details.", "tokens": [286, 500, 380, 362, 565, 281, 352, 666, 4365, 13], "temperature": 0.0, "avg_logprob": -0.14089468461048754, "compression_ratio": 1.6139240506329113, "no_speech_prob": 0.001210713293403387}, {"id": 128, "seek": 69412, "start": 694.12, "end": 702.44, "text": " The rules in action are like here, when you have disjunction, a disjunctive license expression,", "tokens": [440, 4474, 294, 3069, 366, 411, 510, 11, 562, 291, 362, 717, 10010, 882, 11, 257, 717, 10010, 20221, 10476, 6114, 11], "temperature": 0.0, "avg_logprob": -0.19102416918115708, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.000760849507059902}, {"id": 129, "seek": 69412, "start": 702.44, "end": 705.32, "text": " you need to calculate the Cartesian product.", "tokens": [291, 643, 281, 8873, 264, 22478, 42434, 1674, 13], "temperature": 0.0, "avg_logprob": -0.19102416918115708, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.000760849507059902}, {"id": 130, "seek": 69412, "start": 705.32, "end": 710.8, "text": " So you need to have, in this case, MIT, GPL two and GPL three fighting against each other.", "tokens": [407, 291, 643, 281, 362, 11, 294, 341, 1389, 11, 13100, 11, 460, 21593, 732, 293, 460, 21593, 1045, 5237, 1970, 1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.19102416918115708, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.000760849507059902}, {"id": 131, "seek": 69412, "start": 710.8, "end": 717.48, "text": " Then MIT, LGPL three and GPL three fight against each other.", "tokens": [1396, 13100, 11, 441, 38, 21593, 1045, 293, 460, 21593, 1045, 2092, 1970, 1184, 661, 13], "temperature": 0.0, "avg_logprob": -0.19102416918115708, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.000760849507059902}, {"id": 132, "seek": 69412, "start": 717.48, "end": 723.36, "text": " You find a list of the decision and we know that GPL three or later is the license that", "tokens": [509, 915, 257, 1329, 295, 264, 3537, 293, 321, 458, 300, 460, 21593, 1045, 420, 1780, 307, 264, 10476, 300], "temperature": 0.0, "avg_logprob": -0.19102416918115708, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.000760849507059902}, {"id": 133, "seek": 72336, "start": 723.36, "end": 727.6800000000001, "text": " prevails here at the end.", "tokens": [12642, 6227, 510, 412, 264, 917, 13], "temperature": 0.0, "avg_logprob": -0.3419700990240258, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.0005681116599589586}, {"id": 134, "seek": 72336, "start": 727.6800000000001, "end": 732.0, "text": " So the time is up, sorry.", "tokens": [407, 264, 565, 307, 493, 11, 2597, 13], "temperature": 0.0, "avg_logprob": -0.3419700990240258, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.0005681116599589586}, {"id": 135, "seek": 72336, "start": 732.0, "end": 738.44, "text": " So the thing is that, how I already said, we consume data from different sources, from", "tokens": [407, 264, 551, 307, 300, 11, 577, 286, 1217, 848, 11, 321, 14732, 1412, 490, 819, 7139, 11, 490], "temperature": 0.0, "avg_logprob": -0.3419700990240258, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.0005681116599589586}, {"id": 136, "seek": 72336, "start": 738.44, "end": 743.96, "text": " physiology, from Yachto, and for now we have proof of concept.", "tokens": [43585, 11, 490, 398, 3589, 78, 11, 293, 337, 586, 321, 362, 8177, 295, 3410, 13], "temperature": 0.0, "avg_logprob": -0.3419700990240258, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.0005681116599589586}, {"id": 137, "seek": 72336, "start": 743.96, "end": 750.96, "text": " The aim is to upstream everything into the Creator Speedyx class in the Yachto project.", "tokens": [440, 5939, 307, 281, 493, 9291, 1203, 666, 264, 28208, 3550, 6038, 87, 1508, 294, 264, 398, 3589, 78, 1716, 13], "temperature": 0.0, "avg_logprob": -0.3419700990240258, "compression_ratio": 1.5210526315789474, "no_speech_prob": 0.0005681116599589586}, {"id": 138, "seek": 75096, "start": 750.96, "end": 755.84, "text": " I don't think we have time for questions, but here and in the slide you find all the", "tokens": [286, 500, 380, 519, 321, 362, 565, 337, 1651, 11, 457, 510, 293, 294, 264, 4137, 291, 915, 439, 264], "temperature": 0.0, "avg_logprob": -0.2356401284535726, "compression_ratio": 1.2254901960784315, "no_speech_prob": 0.0013763465685769916}, {"id": 139, "seek": 75096, "start": 755.84, "end": 758.2800000000001, "text": " information to contact us.", "tokens": [1589, 281, 3385, 505, 13], "temperature": 0.0, "avg_logprob": -0.2356401284535726, "compression_ratio": 1.2254901960784315, "no_speech_prob": 0.0013763465685769916}, {"id": 140, "seek": 75828, "start": 758.28, "end": 783.6, "text": " So thank you.", "tokens": [50364, 407, 1309, 291, 13, 51630], "temperature": 0.0, "avg_logprob": -0.5081966604505267, "compression_ratio": 0.6190476190476191, "no_speech_prob": 0.0006655028555542231}], "language": "en"}