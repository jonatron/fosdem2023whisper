The speaker discusses graphing tools for scheduler tracing in the Linux kernel. They explain that task schedulers are responsible for placing tasks on cores and deciding what core should run next. The speaker emphasizes the importance of understanding scheduler behavior in order to improve application performance. They highlight two common issues: work conservation, where tasks are not placed on idle cores, and locality, where tasks are not placed on cores that have the necessary data or need to communicate with each other. The speaker introduces two tools, datagraph, which visualizes task placement over time, and running weighting, which shows the number of tasks running and waiting on each core. They provide examples showing how these tools can help identify and address scheduling issues. The speaker concludes by mentioning the need for more configurable tools and potential future improvements.