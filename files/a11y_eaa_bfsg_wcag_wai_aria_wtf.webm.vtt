WEBVTT
Detecting language using up to the first 30 seconds. Use `--language` to specify the language
Detected language: English

00:00.000 --> 00:19.240
We have Danny and Maximilian talking more about accessibility, so take it away.

00:19.240 --> 00:20.240
Thank you.

00:20.240 --> 00:21.440
Hello, everyone.

00:21.440 --> 00:28.080
We have this talk with lots of nice acronyms and we hope you enjoy it.

00:28.080 --> 00:35.000
We will talk about accessibility today and about how to make your web applications more

00:35.000 --> 00:43.440
accessible or with some easy tricks and make it accessible to everyone.

00:43.440 --> 00:49.240
And we are Maximilian and I'm Danny, we are from Deutsche Bahn, it's a German railway

00:49.240 --> 00:59.480
company and we are both working in frontends, working for web applications, yeah.

00:59.480 --> 01:04.080
So we want to start with a site from Bill Clinton.

01:04.080 --> 01:09.360
It says congratulations through the launch of the web accessibility initiative, an effort

01:09.360 --> 01:14.560
to ensure that people with disabilities have access to the Internet's worldwide web.

01:14.560 --> 01:24.000
And did someone of you guess from which year this site is?

01:24.000 --> 01:25.000
I would just give it.

01:25.000 --> 01:32.240
Okay, it's from 1997, so accessibility is not a very new topic, a very new thing.

01:32.240 --> 01:35.080
It was still there every time.

01:35.080 --> 01:42.040
And yeah, we want to start a little bit with the awareness of accessibility, why it matters.

01:42.040 --> 01:48.200
Then I will say something to some implementation things and then how you can ensure your application

01:48.200 --> 01:49.200
is accessible.

01:49.200 --> 01:50.200
Great.

01:50.200 --> 01:53.240
Thanks a lot, Danny.

01:53.240 --> 01:59.480
So first of all, accessibility, and we heard the talk by Mike, it was really amazing to

01:59.480 --> 02:04.720
see so much, even also regarding Drupal and all of the open source CMS, for example, the

02:04.720 --> 02:06.920
development over there.

02:06.920 --> 02:12.720
But when we talk about accessibility, it's quite easy to say that it's only about a specific

02:12.720 --> 02:17.880
group in the end who would have disabilities and even also already said something about

02:17.880 --> 02:20.840
it, it's really about including all the people in there.

02:20.840 --> 02:23.320
This is the main paradigm in the end.

02:23.320 --> 02:27.800
But even also, it's us as developers who are bringing in the barriers, who are bringing

02:27.800 --> 02:34.000
in a nonresponsive layout in the end, who are bringing in something which doesn't work under

02:34.000 --> 02:35.160
different circumstances.

02:35.160 --> 02:39.960
So this is something that we even also want to dig a little bit more into detail today

02:39.960 --> 02:46.120
and show you some things regarding those aspects.

02:46.120 --> 02:51.480
So you might, again, you might think of blindness, first of all, but it's about so much more.

02:51.480 --> 02:57.600
It's about permanent disabilities, it's about temporary disabilities, and even also situational

02:57.600 --> 02:59.440
accessibility issues in the end.

02:59.440 --> 03:04.000
There might be, you might have, for example, you might be in a situation where you do have

03:04.000 --> 03:09.560
probably, for example, your child on your arm or where you do have only one arm, even

03:09.560 --> 03:12.320
also for controlling your device.

03:12.320 --> 03:14.200
It might be a light condition in the end.

03:14.200 --> 03:19.600
There are so many more things than just this one thing that we might think about quite

03:19.600 --> 03:23.200
easily in the very beginning.

03:23.200 --> 03:29.160
To come to the topic why it's even more important is it's a legal topic.

03:29.160 --> 03:34.840
There is the European Accessibility Act, who was enacted in 2019 even already, needs to

03:34.840 --> 03:40.800
be even also transferred to the law in each country in the European Union, in Germany,

03:40.800 --> 03:41.800
for example.

03:41.800 --> 03:51.800
It's even already lost since one year now, 2021, two years, sorry, 2021, but for example,

03:51.800 --> 03:58.560
they will only penalize this until the beginning of the year 2025, but it's similar to GDPR.

03:58.560 --> 04:04.480
We even also, like, we waited for a long time and didn't think it through, and so many companies

04:04.480 --> 04:09.760
only started to think about and to enact on this topic when it was quite near to the

04:09.760 --> 04:15.560
state in 2019, I'm sorry, with GDPR.

04:15.560 --> 04:20.680
To clarify things up a little bit about the structure, how it's being managed, how, especially

04:20.680 --> 04:24.680
for the web, and we're mainly talking about the web, there's obviously even also accessibility

04:24.680 --> 04:31.880
regarding applications about native development, so the structure is obviously in general,

04:31.880 --> 04:42.040
it's W3C, and they do have a web accessibility initiative, WAI, who's formulating those web

04:42.040 --> 04:48.040
content accessibility guidelines, so these are kind of some words that we're even also

04:48.040 --> 04:51.720
using in our presentation in the end.

04:51.720 --> 04:56.720
So all of these rules, all of these principles divide into four categories in the end.

04:56.720 --> 05:03.160
There are, I think, 60 or 70 principles who are divided into those four fields, so it's

05:03.160 --> 05:13.240
about perceivable, understandable, and robust criterias that you could test, for example,

05:13.240 --> 05:18.880
your website against, or that you could ensure the compliance of your web pages, of your

05:18.880 --> 05:21.520
website or web application against.

05:21.520 --> 05:25.200
And even also, those play up into three conformance levels.

05:25.200 --> 05:27.160
We've listed them over here.

05:27.160 --> 05:32.640
It's about that A is really the basis, and it should be ensured in all circumstances,

05:32.640 --> 05:37.400
like, for example, about providing alternative texts in the end for your images.

05:37.400 --> 05:40.880
This is probably quite a simple one.

05:40.880 --> 05:46.000
It's, and the other two criterias, this is about really dividing in between, for example,

05:46.000 --> 05:52.800
governance, who need, or governmental services in the end, who need to ensure that it's about

05:52.800 --> 06:00.280
these AAA criterias that need to be followed in the end, and, for example, for private

06:00.280 --> 06:03.600
companies it's most likely about AA that they need to follow.

06:03.600 --> 06:10.160
And all of those criterias are like structures in those conformance levels.

06:10.160 --> 06:16.160
Why isn't it important in open source projects, you most likely all know this image.

06:16.160 --> 06:21.560
It's always used in kind of the context of security, for example, but it's even also

06:21.560 --> 06:22.560
similar.

06:22.560 --> 06:26.800
I mean, accessibility is even also some kind of a quality attribute in the end, which is

06:26.800 --> 06:35.760
underlying and attribute on something that you could even also use for accessibility.

06:35.760 --> 06:42.600
So if you do have an inaccessible UI library, for example, or if there's something that

06:42.600 --> 06:48.400
is inaccessible in this UI library, it might lead to problems in so many more projects.

06:48.400 --> 06:53.960
And the general paradigm about this is if there's even only one accessibility issue

06:53.960 --> 06:55.760
on the website, it's inaccessible.

06:55.760 --> 07:00.400
It's not about the amount, it then is inaccessible, and that's very important in the end.

07:00.400 --> 07:06.680
You need to test it and you need to, for ensuring this, it should be inaccessible.

07:06.680 --> 07:11.240
And that's why it's so important, even also to test your stuff, but even also to contribute

07:11.240 --> 07:16.560
if you do find something on the Internet to contribute to those libraries.

07:16.560 --> 07:23.560
This might be groundwork for many other websites in the end.

07:23.560 --> 07:29.120
So just one simple commercial about us, about Deutsche Bahn.

07:29.120 --> 07:32.760
We even also do have a design system at Deutsche Bahn.

07:32.760 --> 07:37.760
And we obviously, in the very beginning, we started as Inner Source because it was kind

07:37.760 --> 07:42.560
of a small initiative, obviously you only have some developers, you have some designers

07:42.560 --> 07:43.560
over there.

07:43.560 --> 07:47.080
But then we thought about quite quickly to go Open Source, because from my point of

07:47.080 --> 07:51.760
view, I'm even also doing privately, developing some polyfills and that stuff.

07:51.760 --> 07:56.960
I think Open Source is one of the paradigms, it's about learning in public, isn't it?

07:56.960 --> 08:05.400
I mean, it's going out, it's talking to each other, it's about really getting feedback

08:05.400 --> 08:06.400
and that stuff.

08:06.400 --> 08:12.240
So we decided quite early to go Open Source and get feedback from the public, even also

08:12.240 --> 08:15.400
to get that information.

08:15.400 --> 08:20.280
So I'll lead over to Denny then for the implementation part.

08:20.280 --> 08:21.440
Thank you.

08:21.440 --> 08:27.560
So now we want to focus on what's important when implementing an application on your

08:27.560 --> 08:30.560
iLibrary, what's the most important thing?

08:30.560 --> 08:37.200
And the most important thing, the really most important thing is use semantic HTML.

08:37.200 --> 08:44.880
So that's really the most important thing, I can't say it often, so it's really, if you

08:44.880 --> 08:53.120
only use diffs, then you make things much more harder to bring in accessibility later.

08:53.120 --> 08:57.120
So to make your application accessible later, it's way harder.

08:57.120 --> 09:04.000
So it's easier to change the button style of a button than to bring in accessibility

09:04.000 --> 09:07.960
to a diff element.

09:07.960 --> 09:12.520
And a very big thing is that you use landmarks.

09:12.520 --> 09:19.360
So landmarks are used to structure your web page to big elements.

09:19.360 --> 09:26.640
So like a header, like a navigation, a site container, main part, and the landmarks are

09:26.640 --> 09:32.120
very important for screen readers to identify where is your structure of the site.

09:32.120 --> 09:38.560
So where is your navigation, where can I switch the sites, where is my main content?

09:38.560 --> 09:44.320
And this makes it really more easy for users of screen readers to find the content and

09:44.320 --> 09:49.160
to navigate between them.

09:49.160 --> 09:51.720
And another thing is the headlines.

09:51.720 --> 09:56.640
So when you use headlines, be sure they are in the right order.

09:56.640 --> 10:04.320
Don't leave out some levels of the headlines or mix the levels.

10:04.320 --> 10:09.520
So just don't make an H1 and after that an H5.

10:09.520 --> 10:12.120
So the headlines are like in a book.

10:12.120 --> 10:17.920
If you open a book and you have the index, so you can just, your web page should be structured

10:17.920 --> 10:22.720
like a book.

10:22.720 --> 10:26.280
And another thing are buttons and links.

10:26.280 --> 10:33.000
They're often, often people just use buttons and make on click handlers and the on click

10:33.000 --> 10:37.040
handler will navigate to another page, which isn't a good thing.

10:37.040 --> 10:43.800
So please use links to navigate to things and use buttons to do things, to make actions.

10:43.800 --> 10:45.960
And please don't use this.

10:45.960 --> 10:52.840
So never.

10:52.840 --> 10:58.680
Forms are also a great example where accessibility matters a lot.

10:58.680 --> 11:08.520
So you have separate elements in the structure of HTML for the label and for the input field,

11:08.520 --> 11:14.080
but you should link them together using the ID attribute and the for connection.

11:14.080 --> 11:19.320
And you also can use area attributes to give another hints.

11:19.320 --> 11:27.880
This is probably the sun, yeah, a great example of accessibility.

11:27.880 --> 11:37.720
So yeah, you can use descriptions for more hints which are read out by a screen reader

11:37.720 --> 11:43.800
to the users so that the users know, okay, this description is linked to this input field

11:43.800 --> 11:47.000
of my form.

11:47.000 --> 11:53.520
Yeah, and the attribute is also very important.

11:53.520 --> 11:56.320
It's not an art tag, by the way.

11:56.320 --> 12:05.840
So it's an art attribute and yeah, it should always, sorry, you should always use an art

12:05.840 --> 12:11.000
attribute to describe what's visible on an image.

12:11.000 --> 12:18.000
So it's very important that people who can't see an image that they know what it describes.

12:18.000 --> 12:27.000
So the only thing when you should use an empty art attribute is when you have just like a

12:27.000 --> 12:29.040
decorative image.

12:29.040 --> 12:35.400
Like you have a disk icon for a submit button and the submit button already shows that the

12:35.400 --> 12:39.880
text submit, then it doesn't make sense to have like more content.

12:39.880 --> 12:47.800
So yeah, but otherwise describe your images.

12:47.800 --> 12:57.840
So modal dialogs, also a great example, there are lots of UI libraries in the web which

12:57.840 --> 13:04.840
are not accessible and lots of UI libraries implement like modals from times where the

13:04.840 --> 13:14.480
browser didn't support the native dialog element and these libraries have a big issue because

13:14.480 --> 13:23.600
when a modal appears sometimes a screen reader will not notice there's a modal and will,

13:23.600 --> 13:28.240
so it will read out the content behind and that doesn't make it accessible.

13:28.240 --> 13:29.920
It's not good.

13:29.920 --> 13:35.480
So the native dialog element is a really good way to use and to make your application and

13:35.480 --> 13:41.400
especially modals accessible.

13:41.400 --> 13:46.360
And there are other cool things which are not only good for accessibility issues.

13:46.360 --> 13:52.840
As you can see this is a detailed summary element in HTML and it helps also because if you use

13:52.840 --> 14:00.680
like command F or control F on Windows and search for a term it will automatically expand

14:00.680 --> 14:06.320
and will show where's the content inside the summary, the details.

14:06.320 --> 14:15.120
So yeah, that's also a good example for semantic HTML elements.

14:15.120 --> 14:18.840
And there are other things like auto completion for data lists.

14:18.840 --> 14:23.840
So there are a lot of things that got more and more standardized and are available in

14:23.840 --> 14:30.920
HTML5 now and can be used by developers to implement which makes your application more

14:30.920 --> 14:34.600
accessible without using area attributes.

14:34.600 --> 14:44.920
So area attributes are a way to, it's like, if you don't find a semantic HTML element

14:44.920 --> 14:52.760
then you may have to use a diff and then you can think about do I need some area attribute.

14:52.760 --> 15:00.000
There are some area attributes which helps for making things that aren't natively accessible

15:00.000 --> 15:02.400
that helps to make them accessible.

15:02.400 --> 15:11.720
For example, if you have an area life attribute it helps to read out, if you like, have notifications

15:11.720 --> 15:13.680
on your site.

15:13.680 --> 15:19.160
When you get notified from a server or something a message appears then you have to find a

15:19.160 --> 15:24.480
way to tell the user there was some message occurs.

15:24.480 --> 15:35.480
So therefore area life can be used to read it out for screen reader users.

15:35.480 --> 15:42.440
And now may you asking how can I test easily that my application is accessible and I will

15:42.440 --> 15:44.800
try it over to Maximilian.

15:44.800 --> 15:45.800
Yeah, thanks.

15:45.800 --> 15:46.800
Thanks, Denny.

15:46.800 --> 15:53.960
So one thing that I'd like to quite quickly add to what you said, think of those HTML

15:53.960 --> 15:58.560
tags like little micro front ends that the browser delivers to the user without the need

15:58.560 --> 16:01.400
for JavaScript, it's there even already.

16:01.400 --> 16:04.720
We do have poly fills for most of these features even already.

16:04.720 --> 16:10.880
So use them and by stabilizing this stuff even also through the browser vendors we might

16:10.880 --> 16:16.120
get better features in, we might get better features even also in the future.

16:16.120 --> 16:20.480
Like for example on mobile devices you might get a different UI, you might get a different

16:20.480 --> 16:24.760
keyboard or even also what we've shown regarding details in summary.

16:24.760 --> 16:30.240
It might be something that the browser vendors then could innovate on and for example bring

16:30.240 --> 16:34.520
in this cool feature regarding site search.

16:34.520 --> 16:38.280
So QA in testing, we had this question previously regarding testing.

16:38.280 --> 16:43.080
I think one of the easiest things is really to use, let's say easiest things.

16:43.080 --> 16:45.720
You do have the keyboard in front of you most of the time.

16:45.720 --> 16:53.720
So you could use the keyboard, use the tab key to try to navigate in the application

16:53.720 --> 16:59.080
that you're responsible for, that you're working for in the end and try to reach all of the

16:59.080 --> 17:00.840
interactive elements in there.

17:00.840 --> 17:08.800
Try to control the navigation for example, try to see whether the focus is existing for

17:08.800 --> 17:09.800
example.

17:09.800 --> 17:13.840
There are so many things which are related to keyboard controls even only on the page

17:13.840 --> 17:19.920
where we do assume that the users are using a mouse but this is even also something that

17:19.920 --> 17:23.400
is beneficial for screen readers even also.

17:23.400 --> 17:30.440
It's obviously not something that is the only part, screen readers is even also what Danny

17:30.440 --> 17:35.440
talked about regarding semantic HTML but if you do see that it's not controllable by keyboard

17:35.440 --> 17:41.720
it's most likely even also giving screen reader users a hard time in the end.

17:41.720 --> 17:43.920
And this is the easiest one.

17:43.920 --> 17:50.080
We even also talked about, Mike talked about some other tools we like to highlight at least

17:50.080 --> 17:51.080
Chrome developer tools.

17:51.080 --> 17:55.680
They do have some really nice stuff especially for contrast ratio for example.

17:55.680 --> 17:57.280
We wanted to highlight over here.

17:57.280 --> 18:02.680
They do have Google Lighthouse where you could obviously measure so much more stuff but they

18:02.680 --> 18:07.240
do have an accessibility section in there even also giving you great tips in the end

18:07.240 --> 18:13.360
and they even also provide you insights into the accessibility tree which is the basis

18:13.360 --> 18:18.960
for rendering that stuff later on or telling it to the screen reader.

18:18.960 --> 18:24.200
There was a great talk yesterday by Mozilla even also on optimizing this regarding performance

18:24.200 --> 18:25.960
and accessibility performance.

18:25.960 --> 18:33.080
I would really suggest you to have a look on the recording for this one.

18:33.080 --> 18:35.640
Another part is the X DevTools.

18:35.640 --> 18:38.520
They do have something for CLI even also.

18:38.520 --> 18:43.200
They do have plugins for the browsers.

18:43.200 --> 18:47.360
Why have we used the Foster website over here?

18:47.360 --> 18:48.360
No hard feelings.

18:48.360 --> 18:50.200
I'm sorry about it.

18:50.200 --> 18:51.200
Total issues 35.

18:51.200 --> 18:55.680
Yeah, let's skip that.

18:55.680 --> 18:56.680
Next slide.

18:56.680 --> 18:58.520
Still, it's about the same message.

18:58.520 --> 19:01.960
It's about the human's test with humans in the end.

19:01.960 --> 19:05.240
Keyboard is something which gives you some insight quite quickly.

19:05.240 --> 19:08.560
It's something that is really low level in the end.

19:08.560 --> 19:13.160
But talk to colleagues in your company in your field in the end.

19:13.160 --> 19:19.240
I'm even also working with several colleagues with disabilities and was really inspiring

19:19.240 --> 19:24.080
in the end to see how all of this works and to go through this stuff.

19:24.080 --> 19:26.120
This is something that is really important.

19:26.120 --> 19:30.640
Talk to the users in the end who are using this.

19:30.640 --> 19:35.480
One of the last things previous to the questions that we wanted to bring up because we talked

19:35.480 --> 19:38.000
about it, we had a quick conversation about it.

19:38.000 --> 19:45.320
We do know CVEs, for example, for a global database regarding security issues.

19:45.320 --> 19:50.760
Why don't we even also do this for accessibility vulnerabilities in the end?

19:50.760 --> 19:54.920
Because it's even also something that is becoming or that should become more important

19:54.920 --> 19:57.080
and that even also becomes legal.

19:57.080 --> 20:04.560
So why not do something similar for accessibility and we leave you with this.

20:04.560 --> 20:17.360
Thank you very much for your attention and let's go over to your questions now.

20:17.360 --> 20:20.520
Yes please.

20:20.520 --> 20:22.520
I could repeat it.

20:22.520 --> 20:29.040
There are some elements for some of the data picker that is not accessible by default.

20:29.040 --> 20:33.720
So they are catered where you should have to have the UI library.

20:33.720 --> 20:38.560
Do you know some reference documentation that you can report to?

20:38.560 --> 20:42.600
It depends on the, I would say, sorry, I should repeat it.

20:42.600 --> 20:44.040
There are some elements in the end.

20:44.040 --> 20:45.040
Yeah, sorry.

20:45.040 --> 20:48.200
There are some elements, the question was, there are some elements like for example the

20:48.200 --> 20:53.000
data picker which are currently even already identified as not being responsible in even

20:53.000 --> 20:55.680
the native browser implementation.

20:55.680 --> 20:59.840
So I think, and the question was about whether I do know libraries which I could, for example,

20:59.840 --> 21:00.840
recommend.

21:00.840 --> 21:03.400
I think in the end it's depending on the context that you're working in.

21:03.400 --> 21:07.760
So for example, if there's a great Angular plugin, you couldn't use it in React context.

21:07.760 --> 21:12.400
So you always need to sadly do the research and search for a good plugin.

21:12.400 --> 21:17.840
I think, and I talked about the standards previously, I think it's so important to

21:17.840 --> 21:22.600
you to support those standards because if we do standardize all of this stuff, then

21:22.600 --> 21:28.680
the browser vendors do have the chance even also to make things better in the future.

21:28.680 --> 21:30.280
This is the main point.

21:30.280 --> 21:34.560
So I couldn't necessarily give a perfect suggestion at the moment, but I do know about

21:34.560 --> 21:36.640
those issues at least, they pickers.

21:36.640 --> 21:37.800
It's quite hard.

21:37.800 --> 21:44.120
There's another initiative who are trying to even also come up with new solutions because

21:44.120 --> 21:50.320
even also most designers think about that these ugly, let's say, ugly standard elements

21:50.320 --> 21:56.040
in the browser that we need to overlay them because of design reasons.

21:56.040 --> 21:57.320
And there's another initiative.

21:57.320 --> 22:01.640
I don't remember the name who are even already coming up with something, for example, for

22:01.640 --> 22:08.800
the select menu to build this new, but again, I'm sorry, I could even also, we could add

22:08.800 --> 22:13.600
it to the slides afterwards and then it's in the, add a link on the Foster website.

22:13.600 --> 22:14.600
Yep.

22:14.600 --> 22:15.600
Thank you.

22:15.600 --> 22:16.600
Any more questions?

22:16.600 --> 22:17.600
Yes, please.

22:17.600 --> 22:18.600
Yep.

22:18.600 --> 22:19.600
It's you.

22:19.600 --> 22:20.600
Pablo.

22:20.600 --> 22:29.600
My impression here is that by the time a developer has a chance to do that, it's committed

22:29.600 --> 22:30.600
to it.

22:30.600 --> 22:35.600
At Deutsche Bank, how do you approach this from a design perspective?

22:35.600 --> 22:43.600
In the UXUI, but in general, as a designing the product, before even a developer has the

22:43.600 --> 22:47.600
chance to say, actually, I know how to do this in a way that will pass a test.

22:47.600 --> 22:48.600
Yeah.

22:48.600 --> 22:52.600
Because that is the beginning of the funnel.

22:52.600 --> 22:59.600
But if we don't do that properly, so I'm curious about your experience that instead of focusing

22:59.600 --> 23:07.600
too much on when it's already there and the developer has to do some needs AAA checks.

23:07.600 --> 23:08.600
Yeah.

23:08.600 --> 23:14.600
So I do even also say the question again, how do we approach accessibility not in the end,

23:14.600 --> 23:19.600
not a testing, but even already like, for example, in the concept phase and design process exactly.

23:19.600 --> 23:24.600
So I think it's mainly about to have this scaling in an organization.

23:24.600 --> 23:28.600
It's only the first most important thing is about awareness from my point of view.

23:28.600 --> 23:34.600
So even already in our onboarding sessions for new employees, we are having onboarding

23:34.600 --> 23:41.600
sessions, we do have talks, we do educate on accessibility even already.

23:41.600 --> 23:47.600
So I think the main thing is about awareness for all involved people in the end, for product

23:47.600 --> 23:51.600
owners, for designers, for developers, for testing in the end.

23:51.600 --> 23:55.600
I think it's mainly about awareness, I would say, and then you could only scale.

23:55.600 --> 23:59.600
And I'd like to thank you for your product because we're really looking forward to your

23:59.600 --> 24:00.600
product.

24:00.600 --> 24:01.600
You talked about thank you.

24:01.600 --> 24:02.600
Yeah.

24:02.600 --> 24:03.600
So another question.

24:03.600 --> 24:04.600
Follow up.

24:04.600 --> 24:06.600
I'm afraid it's not only about awareness.

24:06.600 --> 24:09.600
I think it's also about the right skill set.

24:09.600 --> 24:18.600
We are really struggling to find a talent, accessibility talent in the design space.

24:18.600 --> 24:24.600
Awareness is fine, but it's also about experiencing really challenging projects.

24:24.600 --> 24:25.600
Totally.

24:25.600 --> 24:26.600
Totally.

24:26.600 --> 24:28.600
It wasn't about only aware.

24:28.600 --> 24:29.600
I know.

24:29.600 --> 24:30.600
You haven't said it.

24:30.600 --> 24:33.600
So I repeat it quite quickly.

24:33.600 --> 24:36.600
It's not about only awareness, it's even about the skill sets.

24:36.600 --> 24:38.600
It's about experiences.

24:38.600 --> 24:39.600
But you need to start somewhere.

24:39.600 --> 24:45.600
I mean, you could build up experiences by starting and then having all the people getting those

24:45.600 --> 24:46.600
experiences in the end.

24:46.600 --> 24:49.600
I think I couldn't have a better answer at least.

24:49.600 --> 24:54.600
We do have several teams who are specifically working on this, even also education, but

24:54.600 --> 24:59.600
even also testing from the very beginning, even already educating concept and designers

24:59.600 --> 25:01.600
and all of these colleagues.

25:01.600 --> 25:07.600
But in the end, I think it's, yeah, it's about skill set awareness and all of this stuff,

25:07.600 --> 25:11.600
education, talking to each other, all of that stuff.

25:11.600 --> 25:13.600
This is what I could tell you for the moment.

25:13.600 --> 25:18.600
But we could follow up.

25:18.600 --> 25:19.600
Okay.

25:19.600 --> 25:20.600
Yeah.

25:20.600 --> 25:22.600
We are still here.

25:22.600 --> 25:23.600
We are still here.

25:23.600 --> 25:27.600
If you do have anything else to follow up, just come to us, please.

25:27.600 --> 25:48.600
Thank you.
