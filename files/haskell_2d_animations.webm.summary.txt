Julien Dehos gave a talk at the FOSDEM conference about implementing animations in Haskell using the Gloss library, Lens, and State. He demonstrated how to create animations using functional programming and showed how to use data types, lazy evaluation, lenses, and the State monad to improve code implementation. Dehos emphasized that functional programming and Haskell made it easy to create animations and that it allowed developers to manipulate pure functions with static typing that were checked by the compiler, ensuring consistency and ease of understanding.