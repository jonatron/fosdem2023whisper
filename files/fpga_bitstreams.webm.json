{"text": " You The present the present of the present of the present and of the present of the present and of the present from the present from the present from the present from the present from the present And if you're building a ramp, there's going to be a black line, because that's where the camera is pointing to. Ah, okay, I see. You can compare it to there. It's in the black lines. Okay. Hello, everyone. Silence. Hello, everyone. So, my talk about building FPGA bitstreams with open source tools. The important part here is open source tools, because building bitstreams for FPGAs was quite a pain in the ass. A while ago, you had vendor tools, which were large. You had to install them. Some of them were working on Linux. Some were working on specific distributions. If you have the right version, it wasn't fun. And a few years ago, there were more developments on open source tool chains for FPGAs. And since then, a colleague of mine, Stefan, and I, I'm fiddling around with these tools and trying them out and doing stuff with FPGAs. And the experience of that I will be showing today. About me, I'm Michael Treta. I work at Pengotronics as an embedded Linux developer in the graphics team. So, usually I'm doing software in Linux, sometimes user space, sometimes drivers. So, that's my background. Why am I doing FPGAs first? Agenda first. I will show you the open source FPGA tool chain. Then I will show you an example FPGA-based system. And in the end, I will show you the insights and pain points we had when we were developing this system and give you a conclusion and an outlook on the next steps that we are tackling. Use cases for FPGAs. You want to use them if you have real-time requirements and you need a high data throughput. That's two things that you need in graphics as well. You have high data throughput because you need to push all the image data from one point to another. You have real-time requirements because you have 30 FPS, 60 FPS that you have to address. So, you have a limited time span for each frame where the frame must be finished. And another use case or you would also use them for prototyping such systems because you can fiddle around and start experimenting with different implementations. The FPGA open source tool chain is basically these four steps. You start with some HDL description of your bit stream. Usually it's very low or VHDL. Then you have users which synthesizes the code into a net list. Next PNR routes and places the net list for your specific FPGA implementation. So, next PNR needs to know about your FPGA architecture and which vendor you're using. So, this is different for Xilinx for Altera which is Intel now or Lattice. So, you need to know something about your FPGA internal working for that. And in the end, you have a packer which takes the router bit stream with the configuration and writes an actual bit stream which consists of all the bits that configure the FPGA. That was quick and I won't go deeper into this because, as I said, we were working on this for a while and had several talks on that. One by Stefan, you find it on YouTube. It's about who's in both of those FPGA tools. There he will go deeper into how these tools work, how you can interact with them, how you can call them and how all of this stuff is working. And a second talk of building open hardware with open software by me as well on YouTube. And there I go into details on how we automated this and put the FPGA tool chain into a Yocto-based BSP so that we have reproducibility on the bit streams of the tools that are used, our configuration and other providers of libraries that we are using so we can run a specific checkout of the Git repository of our BSP and be sure that we get the same build as the last time. This is also now in our SCI so we have some CI running that takes the status of the bit stream and gives us a working bit stream again from the previous day. So what's in the bit stream? Usually if you come as a Linux developer you want to run a Linux on your bit stream. That's where you take RISC-5, a soft core CPU. Some of them are able to run Linux. Most of them are able to synthesize for your FPGA. So you have quite a few of these. RISC-5 is one implemented in Spinal HDL, Boom implemented in Chisel, Rocket implemented in Chisel or CVA-6 implemented in System Very Low. I said previously you take code for your FPGA in some hardware description language. I said it's very low. The four cores are implemented in three different languages so this is quite a few of different languages and each of these cores takes some periphery to make it actually work also implemented in the same language. So once you decide for a core you're more or less decide for which hardware description language and tools you are using. That's not something that's really flexible for us. And this is a point where Litex comes in. Litex is implemented in Megan which is another hardware description language which is based on Python. And it supports Linux on Litex and gives various pre-configured FPGA bit streams that contain some RISC-5 core and support various FPGA boards that you can just run. So here you see an example from the Litex Git web page, Git repository. It shows an Akron-based board with a multi-core Linux SOC. You have some access to DDR. You have some access to SATA and UART. So this is basically an SOC that's able to run Linux with enough periphery to actually make it work. So there is an example for that available. The question that arise was okay we have this example system but we want to fiddle around with the FPGA and want to run our own bit stream in there or at least be able to customize it to some point. So our starting question for this was can we add our own custom cores that are written in Berrylook into the bit stream that falls out of Litex. For that we decided to come up with a demo system. So the requirements for that were we are using a lambda concept ECP IX-5 board. You saw it before with an ECP-5 FPGA by lettuce which is supported by users and the entire tool chain. So support there is great. We want to put WaxRisk-5 with Linux into the FPGA to run a Linux. And because it's already there so the demo systems have it. And we want to add to our system an LED ring because LEDs are flashy, LEDs attract people. So it's something nice and we want to have interaction with the system. That's why we put a hand wheel there as well so you can as a user do some inputs to the system and get some feedback from the system. It didn't boot probably because it didn't have power. So starting with WaxRisk-5 with Linux as said, Litex already supports this. You can go to the Linux on Litex repository, look for this file and you'll see an implementation for WaxRisk-5 running on the lettuce ECP IX-5. WaxRisk-5 is written in Spinal HDL. That's neither MyGun nor Veriloc. In Litex or in preparation for using it in Litex, you generate the Veriloc code for this WaxRisk-5 core, wrap it in Python or MyGun. And after that, Litex can just integrate the newly created core or generated core into the SOC. It's an example target which supports Lite DRUM for memory access and Lite SD card for using an SD card. The LED ring supports the WS2812 protocol which is a single wire protocol to control LEDs or more than one LED. It's usually used in other fruit LED stripes but you can find various cheap clones on Alibaba and wherever. There is already a core for controlling this protocol implemented in Litex so it's there coded in MyGun. It works as an IOMAPT bus slave so from Linux you just write to the registers and LEDs flash and change the colors. And on the bus you have four bytes per LED so that's the three colors plus whatever. Input is done via a hand wheel which is from Amazon which is usually used for CNC stuff. So it has 100 steps and you just can turn it around and it gives you a rotary encoder with two signals where you can find the direction of rotation. We took some code of the internet for that. It's implemented in very low. There are various examples for that. We wrapped it in Python so that we can use it in Litex and this one runs as a bus master and is able to control the LED core via this connection. So it just sends right this color to this LED on the bus. So if you put all of it together in the middle we have the FPGA on the right side. We have the already existing system with the Vexrist 5 running Linux. The Lite SD card which is connected to the SD card. The Lite DRAM which is connected to our memory. All of these are put together by a wishbone bus. Details are not important. It's a memory bus to communicate between cores. On the left hand side, up here you see the encoder which is implemented in very low. Which is connected to the hand wheel. So this is one thing we added to the bit stream. And we have the LED.py which is migran for the LED controller which is also added to the bit stream and controls the LED ring. So how this is integrated into Litex? We created a new Litex target. Litex distinguishes between targets and platforms. Platforms are the actual boards. Targets are the SOC that you synthesize into your FPGA. So we took the existing platform and added a new target for our own SOC. Because it's Python we have inheritance. We just inherited from the example base SOC with the Litex core and the Vexus 5 core and the other stuff. We configured it, instantiated it, reconfigured the pins so that we can actually connect our own peripherals. So the hand wheel and the LEDs to the connector of the board, added the LED core and added the rotary encoder. In our case it's a decoder for interacting with the hand wheel and we are done. All of this customization is about 200 lines of Python code. So what we encountered and fixed during this process, after we added our custom cores, suddenly Linux was booting but it was not able to access the SD card anymore. We were suspecting various problems in the end like timing or that our bit stream generation failed or something. In the end it turned out due to adding our new custom cores the memory map on the bus has changed and the SD RAM controller has changed its base address and Linux didn't know about that because we were using just the device tree that we took from the example. So we changed our yachter build to use or to take the configuration for the Linux core, generate a device tree from that and give it to Linux and that way Linux took the correct base address and uses the correct base address and is able to use the SD card again. So that's something that will come up later as well because if you reconfigure your base system and device tree changes you have to make sure that your device tree matches your system that you're using. And one other thing is there is some boot loader in the FPGA or in the bit stream for early bring up which corresponds to the ROM code or the ROM boot loader that Marco mentioned previously. So it's in the bit stream and it usually required so we compiled the boot loader and then it started to recentize the bit stream run place and route again. So this is quite fast but it's still in our case six to eight minutes. That's not something you want to have if you're just compiling a really small binary. So we changed our yachter build to synthesize and keep enough space in the area and compile the ROM boot loader and just put it together afterwards. This works a lot faster if you're fiddling around there. Pain points. Meaghan is not really maintained anymore. There is a successor for it. It's Amaranth. Lightix is currently still using Meaghan migrating it to Amaranth is not really feasible. There are ideas to change it to a new hard description language. I'm not sure what's happening there but we saw especially for simulation we saw that Meaghan generates invalid very low code or code you wouldn't want to simulate. That's something. Currently we have to live with it. Then another observation was that the yachter environment wasn't as reproducible as we expected. We're not sure what's the cause for that. If we are missing it somewhere that there is some seed for compiling or for a place and route which we haven't fixed. We saw that there is sometimes failing bitstream falling out of the yachter build that should be reproducible. We wanted to use JTAG to debug the early boot of the WaxRisk 5 and look into it. We are already flashing our bitstream via JTAG on the FPGA. We have JTAG connected to the board but we are not able to connect it to the WaxRisk 5 JTAG connector so that we could add the WaxRisk 5 core to our JTAG chain. That's something we can work around. We can just use different pins but we have to use a second JTAG for that. That's something that's not that great and we haven't figured out yet. Coming to the conclusion, adding and customizing Litex targets is really convenient. It's something you have to figure out. You have to work into it. Once you're in there, I said it's 200 lines for configuring. That is nice. The step from Blinky to just get an LED flashing to an SOC is really large. It's not really surprising because it's much more. But also from things that you have to configure, things where you misconfigured something and it's just not working, you have really many knobs that you can turn and your system will surprise you. With all this tool chain, Litex, there are different modules in Litex. All of them have to be in sync. Sometimes it happens that if you just update one component, you will run into surprises. It's really important to make sure that you have something around this entire tool chain that keeps all your tools fixed on a specific version error that you know which version you are using also for reporting bugs. That's Yopto doing for us or is the plan to have. The next steps are maybe we want to run a kernel CI on the Linux on Litex system so that we can just take Linux kernel and run it against the system. There comes the problem that kernel CI expects a device feed that's upstream with kind of a conflict with the generation of the device feed that has to match your target. Then we see that Linux takes ages to boot on the WexRisk5 about two minutes. Not sure if that's because the core is just slow or if there is something we are waiting for in user space that can be fixed. The WexRisk5 actually supports multi-core systems. We weren't able to boot this yet. Maybe we want to look into using the same system on the concept with different WexRisk5 cores. As I said before, there are four different cores in different languages. All of them usually generate very low code so it should be possible to integrate it into Litex. Show me the source. It's on GitHub. This is a Yocto meta layer where you can find the code for the editing or the entire SOC configuration, the code for the hand wheel and a few other fixes that we did. You can add this to a Yocto workspace and should be able to reproduce the bitstream that we built. Thank you for your attention. That's me. That's my colleague, Stefan. You can send us an email if you have questions or just ask me and find me somewhere. Thank you. We have time for literally one question. This person here was the first one. Thank you for your talk. I had one question about the address changing in the device tree. In microcontroller world, you can have a lot of microcontrollers with the same addresses for the common devices like for STM32. Do all the STM32 have the same base address for RAM?", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 2.0, "text": " You", "tokens": [50364, 509, 50464], "temperature": 1.0, "avg_logprob": -0.9667514562606812, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.796933114528656}, {"id": 1, "seek": 3000, "start": 30.0, "end": 30.8, "text": " The", "tokens": [440], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 2, "seek": 3000, "start": 30.8, "end": 31.16, "text": " present", "tokens": [1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 3, "seek": 3000, "start": 31.16, "end": 32.2, "text": " the present", "tokens": [264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 4, "seek": 3000, "start": 32.2, "end": 32.76, "text": " of the", "tokens": [295, 264], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 5, "seek": 3000, "start": 32.76, "end": 33.42, "text": " present", "tokens": [1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 6, "seek": 3000, "start": 35.42, "end": 36.92, "text": " of the present", "tokens": [295, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 7, "seek": 3000, "start": 36.92, "end": 37.76, "text": " and of the present", "tokens": [293, 295, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 8, "seek": 3000, "start": 37.76, "end": 40.480000000000004, "text": " of the present", "tokens": [295, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 9, "seek": 3000, "start": 40.480000000000004, "end": 41.96, "text": " and of the present", "tokens": [293, 295, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 10, "seek": 3000, "start": 41.96, "end": 42.5, "text": " from", "tokens": [490], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 11, "seek": 3000, "start": 42.5, "end": 43.88, "text": " the present", "tokens": [264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 12, "seek": 3000, "start": 43.88, "end": 48.08, "text": " from the present", "tokens": [490, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 13, "seek": 3000, "start": 48.08, "end": 51.72, "text": " from the present", "tokens": [490, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 14, "seek": 3000, "start": 51.72, "end": 54.480000000000004, "text": " from the present", "tokens": [490, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 15, "seek": 3000, "start": 54.480000000000004, "end": 57.260000000000005, "text": " from the present", "tokens": [490, 264, 1974], "temperature": 1.0, "avg_logprob": -1.9663229549632353, "compression_ratio": 5.026315789473684, "no_speech_prob": 0.5644884705543518}, {"id": 16, "seek": 5726, "start": 57.26, "end": 64.25999999999999, "text": " And if you're building a ramp, there's going to be a black line, because that's where the camera is pointing to.", "tokens": [400, 498, 291, 434, 2390, 257, 12428, 11, 456, 311, 516, 281, 312, 257, 2211, 1622, 11, 570, 300, 311, 689, 264, 2799, 307, 12166, 281, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 17, "seek": 5726, "start": 64.25999999999999, "end": 65.25999999999999, "text": " Ah, okay, I see.", "tokens": [2438, 11, 1392, 11, 286, 536, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 18, "seek": 5726, "start": 65.25999999999999, "end": 66.25999999999999, "text": " You can compare it to there.", "tokens": [509, 393, 6794, 309, 281, 456, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 19, "seek": 5726, "start": 66.25999999999999, "end": 67.25999999999999, "text": " It's in the black lines.", "tokens": [467, 311, 294, 264, 2211, 3876, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 20, "seek": 5726, "start": 67.25999999999999, "end": 68.25999999999999, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 21, "seek": 5726, "start": 75.25999999999999, "end": 77.25999999999999, "text": " Hello, everyone.", "tokens": [2425, 11, 1518, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 22, "seek": 5726, "start": 79.25999999999999, "end": 80.25999999999999, "text": " Silence.", "tokens": [34570, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 23, "seek": 5726, "start": 81.25999999999999, "end": 82.25999999999999, "text": " Hello, everyone.", "tokens": [2425, 11, 1518, 13], "temperature": 0.0, "avg_logprob": -0.45145587432078826, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.3388199806213379}, {"id": 24, "seek": 8226, "start": 82.26, "end": 87.26, "text": " So, my talk about building FPGA bitstreams with open source tools.", "tokens": [407, 11, 452, 751, 466, 2390, 36655, 12570, 857, 9291, 82, 365, 1269, 4009, 3873, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 25, "seek": 8226, "start": 87.26, "end": 96.26, "text": " The important part here is open source tools, because building bitstreams for FPGAs was quite a pain in the ass.", "tokens": [440, 1021, 644, 510, 307, 1269, 4009, 3873, 11, 570, 2390, 857, 9291, 82, 337, 36655, 38, 10884, 390, 1596, 257, 1822, 294, 264, 1256, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 26, "seek": 8226, "start": 96.26, "end": 100.26, "text": " A while ago, you had vendor tools, which were large.", "tokens": [316, 1339, 2057, 11, 291, 632, 24321, 3873, 11, 597, 645, 2416, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 27, "seek": 8226, "start": 100.26, "end": 101.26, "text": " You had to install them.", "tokens": [509, 632, 281, 3625, 552, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 28, "seek": 8226, "start": 101.26, "end": 103.26, "text": " Some of them were working on Linux.", "tokens": [2188, 295, 552, 645, 1364, 322, 18734, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 29, "seek": 8226, "start": 103.26, "end": 105.26, "text": " Some were working on specific distributions.", "tokens": [2188, 645, 1364, 322, 2685, 37870, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 30, "seek": 8226, "start": 105.26, "end": 110.26, "text": " If you have the right version, it wasn't fun.", "tokens": [759, 291, 362, 264, 558, 3037, 11, 309, 2067, 380, 1019, 13], "temperature": 0.0, "avg_logprob": -0.08026840136601375, "compression_ratio": 1.641025641025641, "no_speech_prob": 0.00018976684077642858}, {"id": 31, "seek": 11026, "start": 110.26, "end": 118.26, "text": " And a few years ago, there were more developments on open source tool chains for FPGAs.", "tokens": [400, 257, 1326, 924, 2057, 11, 456, 645, 544, 20862, 322, 1269, 4009, 2290, 12626, 337, 36655, 38, 10884, 13], "temperature": 0.0, "avg_logprob": -0.10236563963048598, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.00012998844613321126}, {"id": 32, "seek": 11026, "start": 118.26, "end": 129.26, "text": " And since then, a colleague of mine, Stefan, and I, I'm fiddling around with these tools and trying them out and doing stuff with FPGAs.", "tokens": [400, 1670, 550, 11, 257, 13532, 295, 3892, 11, 32158, 11, 293, 286, 11, 286, 478, 283, 14273, 1688, 926, 365, 613, 3873, 293, 1382, 552, 484, 293, 884, 1507, 365, 36655, 38, 10884, 13], "temperature": 0.0, "avg_logprob": -0.10236563963048598, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.00012998844613321126}, {"id": 33, "seek": 11026, "start": 129.26, "end": 133.26, "text": " And the experience of that I will be showing today.", "tokens": [400, 264, 1752, 295, 300, 286, 486, 312, 4099, 965, 13], "temperature": 0.0, "avg_logprob": -0.10236563963048598, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.00012998844613321126}, {"id": 34, "seek": 11026, "start": 135.26, "end": 138.26, "text": " About me, I'm Michael Treta.", "tokens": [7769, 385, 11, 286, 478, 5116, 8648, 1328, 13], "temperature": 0.0, "avg_logprob": -0.10236563963048598, "compression_ratio": 1.4878048780487805, "no_speech_prob": 0.00012998844613321126}, {"id": 35, "seek": 13826, "start": 138.26, "end": 143.26, "text": " I work at Pengotronics as an embedded Linux developer in the graphics team.", "tokens": [286, 589, 412, 25783, 310, 37042, 382, 364, 16741, 18734, 10754, 294, 264, 11837, 1469, 13], "temperature": 0.0, "avg_logprob": -0.1504403850700282, "compression_ratio": 1.3979591836734695, "no_speech_prob": 1.4697622646053787e-05}, {"id": 36, "seek": 13826, "start": 143.26, "end": 151.26, "text": " So, usually I'm doing software in Linux, sometimes user space, sometimes drivers.", "tokens": [407, 11, 2673, 286, 478, 884, 4722, 294, 18734, 11, 2171, 4195, 1901, 11, 2171, 11590, 13], "temperature": 0.0, "avg_logprob": -0.1504403850700282, "compression_ratio": 1.3979591836734695, "no_speech_prob": 1.4697622646053787e-05}, {"id": 37, "seek": 13826, "start": 151.26, "end": 154.26, "text": " So, that's my background.", "tokens": [407, 11, 300, 311, 452, 3678, 13], "temperature": 0.0, "avg_logprob": -0.1504403850700282, "compression_ratio": 1.3979591836734695, "no_speech_prob": 1.4697622646053787e-05}, {"id": 38, "seek": 13826, "start": 154.26, "end": 159.26, "text": " Why am I doing FPGAs first?", "tokens": [1545, 669, 286, 884, 36655, 38, 10884, 700, 30], "temperature": 0.0, "avg_logprob": -0.1504403850700282, "compression_ratio": 1.3979591836734695, "no_speech_prob": 1.4697622646053787e-05}, {"id": 39, "seek": 13826, "start": 159.26, "end": 160.26, "text": " Agenda first.", "tokens": [2725, 7639, 700, 13], "temperature": 0.0, "avg_logprob": -0.1504403850700282, "compression_ratio": 1.3979591836734695, "no_speech_prob": 1.4697622646053787e-05}, {"id": 40, "seek": 13826, "start": 160.26, "end": 165.26, "text": " I will show you the open source FPGA tool chain.", "tokens": [286, 486, 855, 291, 264, 1269, 4009, 36655, 12570, 2290, 5021, 13], "temperature": 0.0, "avg_logprob": -0.1504403850700282, "compression_ratio": 1.3979591836734695, "no_speech_prob": 1.4697622646053787e-05}, {"id": 41, "seek": 16526, "start": 165.26, "end": 169.26, "text": " Then I will show you an example FPGA-based system.", "tokens": [1396, 286, 486, 855, 291, 364, 1365, 36655, 12570, 12, 6032, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1179061505331922, "compression_ratio": 1.4970760233918128, "no_speech_prob": 1.9176342902937904e-05}, {"id": 42, "seek": 16526, "start": 169.26, "end": 185.26, "text": " And in the end, I will show you the insights and pain points we had when we were developing this system and give you a conclusion and an outlook on the next steps that we are tackling.", "tokens": [400, 294, 264, 917, 11, 286, 486, 855, 291, 264, 14310, 293, 1822, 2793, 321, 632, 562, 321, 645, 6416, 341, 1185, 293, 976, 291, 257, 10063, 293, 364, 26650, 322, 264, 958, 4439, 300, 321, 366, 34415, 13], "temperature": 0.0, "avg_logprob": -0.1179061505331922, "compression_ratio": 1.4970760233918128, "no_speech_prob": 1.9176342902937904e-05}, {"id": 43, "seek": 16526, "start": 185.26, "end": 187.26, "text": " Use cases for FPGAs.", "tokens": [8278, 3331, 337, 36655, 38, 10884, 13], "temperature": 0.0, "avg_logprob": -0.1179061505331922, "compression_ratio": 1.4970760233918128, "no_speech_prob": 1.9176342902937904e-05}, {"id": 44, "seek": 18726, "start": 187.26, "end": 195.26, "text": " You want to use them if you have real-time requirements and you need a high data throughput.", "tokens": [509, 528, 281, 764, 552, 498, 291, 362, 957, 12, 3766, 7728, 293, 291, 643, 257, 1090, 1412, 44629, 13], "temperature": 0.0, "avg_logprob": -0.05693834435706045, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00027639587642624974}, {"id": 45, "seek": 18726, "start": 195.26, "end": 198.26, "text": " That's two things that you need in graphics as well.", "tokens": [663, 311, 732, 721, 300, 291, 643, 294, 11837, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.05693834435706045, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00027639587642624974}, {"id": 46, "seek": 18726, "start": 198.26, "end": 203.26, "text": " You have high data throughput because you need to push all the image data from one point to another.", "tokens": [509, 362, 1090, 1412, 44629, 570, 291, 643, 281, 2944, 439, 264, 3256, 1412, 490, 472, 935, 281, 1071, 13], "temperature": 0.0, "avg_logprob": -0.05693834435706045, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00027639587642624974}, {"id": 47, "seek": 18726, "start": 203.26, "end": 209.26, "text": " You have real-time requirements because you have 30 FPS, 60 FPS that you have to address.", "tokens": [509, 362, 957, 12, 3766, 7728, 570, 291, 362, 2217, 26429, 11, 4060, 26429, 300, 291, 362, 281, 2985, 13], "temperature": 0.0, "avg_logprob": -0.05693834435706045, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00027639587642624974}, {"id": 48, "seek": 18726, "start": 209.26, "end": 214.26, "text": " So, you have a limited time span for each frame where the frame must be finished.", "tokens": [407, 11, 291, 362, 257, 5567, 565, 16174, 337, 1184, 3920, 689, 264, 3920, 1633, 312, 4335, 13], "temperature": 0.0, "avg_logprob": -0.05693834435706045, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.00027639587642624974}, {"id": 49, "seek": 21426, "start": 214.26, "end": 230.26, "text": " And another use case or you would also use them for prototyping such systems because you can fiddle around and start experimenting with different implementations.", "tokens": [400, 1071, 764, 1389, 420, 291, 576, 611, 764, 552, 337, 46219, 3381, 1270, 3652, 570, 291, 393, 24553, 2285, 926, 293, 722, 29070, 365, 819, 4445, 763, 13], "temperature": 0.0, "avg_logprob": -0.10082307169514318, "compression_ratio": 1.4484536082474226, "no_speech_prob": 1.92053757928079e-05}, {"id": 50, "seek": 21426, "start": 230.26, "end": 235.26, "text": " The FPGA open source tool chain is basically these four steps.", "tokens": [440, 36655, 12570, 1269, 4009, 2290, 5021, 307, 1936, 613, 1451, 4439, 13], "temperature": 0.0, "avg_logprob": -0.10082307169514318, "compression_ratio": 1.4484536082474226, "no_speech_prob": 1.92053757928079e-05}, {"id": 51, "seek": 21426, "start": 235.26, "end": 240.26, "text": " You start with some HDL description of your bit stream.", "tokens": [509, 722, 365, 512, 12149, 43, 3855, 295, 428, 857, 4309, 13], "temperature": 0.0, "avg_logprob": -0.10082307169514318, "compression_ratio": 1.4484536082474226, "no_speech_prob": 1.92053757928079e-05}, {"id": 52, "seek": 24026, "start": 240.26, "end": 245.26, "text": " Usually it's very low or VHDL.", "tokens": [11419, 309, 311, 588, 2295, 420, 691, 22859, 43, 13], "temperature": 0.0, "avg_logprob": -0.14373570018344456, "compression_ratio": 1.3978494623655915, "no_speech_prob": 3.418804408283904e-05}, {"id": 53, "seek": 24026, "start": 245.26, "end": 251.26, "text": " Then you have users which synthesizes the code into a net list.", "tokens": [1396, 291, 362, 5022, 597, 26617, 5660, 264, 3089, 666, 257, 2533, 1329, 13], "temperature": 0.0, "avg_logprob": -0.14373570018344456, "compression_ratio": 1.3978494623655915, "no_speech_prob": 3.418804408283904e-05}, {"id": 54, "seek": 24026, "start": 251.26, "end": 258.26, "text": " Next PNR routes and places the net list for your specific FPGA implementation.", "tokens": [3087, 430, 45, 49, 18242, 293, 3190, 264, 2533, 1329, 337, 428, 2685, 36655, 12570, 11420, 13], "temperature": 0.0, "avg_logprob": -0.14373570018344456, "compression_ratio": 1.3978494623655915, "no_speech_prob": 3.418804408283904e-05}, {"id": 55, "seek": 24026, "start": 258.26, "end": 264.26, "text": " So, next PNR needs to know about your FPGA architecture and which vendor you're using.", "tokens": [407, 11, 958, 430, 45, 49, 2203, 281, 458, 466, 428, 36655, 12570, 9482, 293, 597, 24321, 291, 434, 1228, 13], "temperature": 0.0, "avg_logprob": -0.14373570018344456, "compression_ratio": 1.3978494623655915, "no_speech_prob": 3.418804408283904e-05}, {"id": 56, "seek": 26426, "start": 264.26, "end": 271.26, "text": " So, this is different for Xilinx for Altera which is Intel now or Lattice.", "tokens": [407, 11, 341, 307, 819, 337, 1783, 388, 259, 87, 337, 967, 23833, 597, 307, 19762, 586, 420, 441, 1591, 573, 13], "temperature": 0.0, "avg_logprob": -0.1547306474432888, "compression_ratio": 1.5645933014354068, "no_speech_prob": 1.0281970389769413e-05}, {"id": 57, "seek": 26426, "start": 271.26, "end": 277.26, "text": " So, you need to know something about your FPGA internal working for that.", "tokens": [407, 11, 291, 643, 281, 458, 746, 466, 428, 36655, 12570, 6920, 1364, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.1547306474432888, "compression_ratio": 1.5645933014354068, "no_speech_prob": 1.0281970389769413e-05}, {"id": 58, "seek": 26426, "start": 277.26, "end": 290.26, "text": " And in the end, you have a packer which takes the router bit stream with the configuration and writes an actual bit stream which consists of all the bits that configure the FPGA.", "tokens": [400, 294, 264, 917, 11, 291, 362, 257, 2844, 260, 597, 2516, 264, 22492, 857, 4309, 365, 264, 11694, 293, 13657, 364, 3539, 857, 4309, 597, 14689, 295, 439, 264, 9239, 300, 22162, 264, 36655, 12570, 13], "temperature": 0.0, "avg_logprob": -0.1547306474432888, "compression_ratio": 1.5645933014354068, "no_speech_prob": 1.0281970389769413e-05}, {"id": 59, "seek": 29026, "start": 290.26, "end": 299.26, "text": " That was quick and I won't go deeper into this because, as I said, we were working on this for a while and had several talks on that.", "tokens": [663, 390, 1702, 293, 286, 1582, 380, 352, 7731, 666, 341, 570, 11, 382, 286, 848, 11, 321, 645, 1364, 322, 341, 337, 257, 1339, 293, 632, 2940, 6686, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.1403304817750282, "compression_ratio": 1.5903083700440528, "no_speech_prob": 5.0545306294225156e-05}, {"id": 60, "seek": 29026, "start": 299.26, "end": 303.26, "text": " One by Stefan, you find it on YouTube.", "tokens": [1485, 538, 32158, 11, 291, 915, 309, 322, 3088, 13], "temperature": 0.0, "avg_logprob": -0.1403304817750282, "compression_ratio": 1.5903083700440528, "no_speech_prob": 5.0545306294225156e-05}, {"id": 61, "seek": 29026, "start": 303.26, "end": 308.26, "text": " It's about who's in both of those FPGA tools.", "tokens": [467, 311, 466, 567, 311, 294, 1293, 295, 729, 36655, 12570, 3873, 13], "temperature": 0.0, "avg_logprob": -0.1403304817750282, "compression_ratio": 1.5903083700440528, "no_speech_prob": 5.0545306294225156e-05}, {"id": 62, "seek": 29026, "start": 308.26, "end": 319.26, "text": " There he will go deeper into how these tools work, how you can interact with them, how you can call them and how all of this stuff is working.", "tokens": [821, 415, 486, 352, 7731, 666, 577, 613, 3873, 589, 11, 577, 291, 393, 4648, 365, 552, 11, 577, 291, 393, 818, 552, 293, 577, 439, 295, 341, 1507, 307, 1364, 13], "temperature": 0.0, "avg_logprob": -0.1403304817750282, "compression_ratio": 1.5903083700440528, "no_speech_prob": 5.0545306294225156e-05}, {"id": 63, "seek": 31926, "start": 319.26, "end": 325.26, "text": " And a second talk of building open hardware with open software by me as well on YouTube.", "tokens": [400, 257, 1150, 751, 295, 2390, 1269, 8837, 365, 1269, 4722, 538, 385, 382, 731, 322, 3088, 13], "temperature": 0.0, "avg_logprob": -0.17583079960035242, "compression_ratio": 1.4491978609625669, "no_speech_prob": 4.740103395306505e-05}, {"id": 64, "seek": 31926, "start": 325.26, "end": 340.26, "text": " And there I go into details on how we automated this and put the FPGA tool chain into a Yocto-based BSP so that we have reproducibility on the bit streams of the tools that are used,", "tokens": [400, 456, 286, 352, 666, 4365, 322, 577, 321, 18473, 341, 293, 829, 264, 36655, 12570, 2290, 5021, 666, 257, 7616, 349, 78, 12, 6032, 27253, 47, 370, 300, 321, 362, 11408, 537, 39802, 322, 264, 857, 15842, 295, 264, 3873, 300, 366, 1143, 11], "temperature": 0.0, "avg_logprob": -0.17583079960035242, "compression_ratio": 1.4491978609625669, "no_speech_prob": 4.740103395306505e-05}, {"id": 65, "seek": 34026, "start": 340.26, "end": 357.26, "text": " our configuration and other providers of libraries that we are using so we can run a specific checkout of the Git repository of our BSP and be sure that we get the same build as the last time.", "tokens": [527, 11694, 293, 661, 11330, 295, 15148, 300, 321, 366, 1228, 370, 321, 393, 1190, 257, 2685, 37153, 295, 264, 16939, 25841, 295, 527, 27253, 47, 293, 312, 988, 300, 321, 483, 264, 912, 1322, 382, 264, 1036, 565, 13], "temperature": 0.0, "avg_logprob": -0.09593647176569159, "compression_ratio": 1.381294964028777, "no_speech_prob": 3.7525995139731094e-05}, {"id": 66, "seek": 35726, "start": 357.26, "end": 374.26, "text": " This is also now in our SCI so we have some CI running that takes the status of the bit stream and gives us a working bit stream again from the previous day.", "tokens": [639, 307, 611, 586, 294, 527, 9028, 40, 370, 321, 362, 512, 37777, 2614, 300, 2516, 264, 6558, 295, 264, 857, 4309, 293, 2709, 505, 257, 1364, 857, 4309, 797, 490, 264, 3894, 786, 13], "temperature": 0.0, "avg_logprob": -0.1105865750994001, "compression_ratio": 1.5755813953488371, "no_speech_prob": 2.107534237438813e-05}, {"id": 67, "seek": 35726, "start": 374.26, "end": 376.26, "text": " So what's in the bit stream?", "tokens": [407, 437, 311, 294, 264, 857, 4309, 30], "temperature": 0.0, "avg_logprob": -0.1105865750994001, "compression_ratio": 1.5755813953488371, "no_speech_prob": 2.107534237438813e-05}, {"id": 68, "seek": 35726, "start": 376.26, "end": 382.26, "text": " Usually if you come as a Linux developer you want to run a Linux on your bit stream.", "tokens": [11419, 498, 291, 808, 382, 257, 18734, 10754, 291, 528, 281, 1190, 257, 18734, 322, 428, 857, 4309, 13], "temperature": 0.0, "avg_logprob": -0.1105865750994001, "compression_ratio": 1.5755813953488371, "no_speech_prob": 2.107534237438813e-05}, {"id": 69, "seek": 38226, "start": 382.26, "end": 388.26, "text": " That's where you take RISC-5, a soft core CPU.", "tokens": [663, 311, 689, 291, 747, 497, 2343, 34, 12, 20, 11, 257, 2787, 4965, 13199, 13], "temperature": 0.0, "avg_logprob": -0.15519281019244277, "compression_ratio": 1.2846153846153847, "no_speech_prob": 3.81489226128906e-05}, {"id": 70, "seek": 38226, "start": 388.26, "end": 391.26, "text": " Some of them are able to run Linux.", "tokens": [2188, 295, 552, 366, 1075, 281, 1190, 18734, 13], "temperature": 0.0, "avg_logprob": -0.15519281019244277, "compression_ratio": 1.2846153846153847, "no_speech_prob": 3.81489226128906e-05}, {"id": 71, "seek": 38226, "start": 391.26, "end": 396.26, "text": " Most of them are able to synthesize for your FPGA.", "tokens": [4534, 295, 552, 366, 1075, 281, 26617, 1125, 337, 428, 36655, 12570, 13], "temperature": 0.0, "avg_logprob": -0.15519281019244277, "compression_ratio": 1.2846153846153847, "no_speech_prob": 3.81489226128906e-05}, {"id": 72, "seek": 38226, "start": 396.26, "end": 400.26, "text": " So you have quite a few of these.", "tokens": [407, 291, 362, 1596, 257, 1326, 295, 613, 13], "temperature": 0.0, "avg_logprob": -0.15519281019244277, "compression_ratio": 1.2846153846153847, "no_speech_prob": 3.81489226128906e-05}, {"id": 73, "seek": 40026, "start": 400.26, "end": 413.26, "text": " RISC-5 is one implemented in Spinal HDL, Boom implemented in Chisel, Rocket implemented in Chisel or CVA-6 implemented in System Very Low.", "tokens": [497, 2343, 34, 12, 20, 307, 472, 12270, 294, 1738, 2071, 12149, 43, 11, 15523, 12270, 294, 761, 39711, 11, 29651, 12270, 294, 761, 39711, 420, 383, 20914, 12, 21, 12270, 294, 8910, 4372, 17078, 13], "temperature": 0.0, "avg_logprob": -0.20578701816388031, "compression_ratio": 1.5030674846625767, "no_speech_prob": 5.46338596905116e-05}, {"id": 74, "seek": 40026, "start": 413.26, "end": 420.26, "text": " I said previously you take code for your FPGA in some hardware description language.", "tokens": [286, 848, 8046, 291, 747, 3089, 337, 428, 36655, 12570, 294, 512, 8837, 3855, 2856, 13], "temperature": 0.0, "avg_logprob": -0.20578701816388031, "compression_ratio": 1.5030674846625767, "no_speech_prob": 5.46338596905116e-05}, {"id": 75, "seek": 40026, "start": 420.26, "end": 422.26, "text": " I said it's very low.", "tokens": [286, 848, 309, 311, 588, 2295, 13], "temperature": 0.0, "avg_logprob": -0.20578701816388031, "compression_ratio": 1.5030674846625767, "no_speech_prob": 5.46338596905116e-05}, {"id": 76, "seek": 42226, "start": 422.26, "end": 442.26, "text": " The four cores are implemented in three different languages so this is quite a few of different languages and each of these cores takes some periphery to make it actually work also implemented in the same language.", "tokens": [440, 1451, 24826, 366, 12270, 294, 1045, 819, 8650, 370, 341, 307, 1596, 257, 1326, 295, 819, 8650, 293, 1184, 295, 613, 24826, 2516, 512, 26807, 88, 281, 652, 309, 767, 589, 611, 12270, 294, 264, 912, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1235217771668365, "compression_ratio": 1.731958762886598, "no_speech_prob": 3.700029628816992e-05}, {"id": 77, "seek": 42226, "start": 442.26, "end": 450.26, "text": " So once you decide for a core you're more or less decide for which hardware description language and tools you are using.", "tokens": [407, 1564, 291, 4536, 337, 257, 4965, 291, 434, 544, 420, 1570, 4536, 337, 597, 8837, 3855, 2856, 293, 3873, 291, 366, 1228, 13], "temperature": 0.0, "avg_logprob": -0.1235217771668365, "compression_ratio": 1.731958762886598, "no_speech_prob": 3.700029628816992e-05}, {"id": 78, "seek": 45026, "start": 450.26, "end": 454.26, "text": " That's not something that's really flexible for us.", "tokens": [663, 311, 406, 746, 300, 311, 534, 11358, 337, 505, 13], "temperature": 0.0, "avg_logprob": -0.15347533424695334, "compression_ratio": 1.3611111111111112, "no_speech_prob": 4.255271051079035e-05}, {"id": 79, "seek": 45026, "start": 454.26, "end": 459.26, "text": " And this is a point where Litex comes in.", "tokens": [400, 341, 307, 257, 935, 689, 32986, 87, 1487, 294, 13], "temperature": 0.0, "avg_logprob": -0.15347533424695334, "compression_ratio": 1.3611111111111112, "no_speech_prob": 4.255271051079035e-05}, {"id": 80, "seek": 45026, "start": 459.26, "end": 469.26, "text": " Litex is implemented in Megan which is another hardware description language which is based on Python.", "tokens": [32986, 87, 307, 12270, 294, 21332, 597, 307, 1071, 8837, 3855, 2856, 597, 307, 2361, 322, 15329, 13], "temperature": 0.0, "avg_logprob": -0.15347533424695334, "compression_ratio": 1.3611111111111112, "no_speech_prob": 4.255271051079035e-05}, {"id": 81, "seek": 46926, "start": 469.26, "end": 487.26, "text": " And it supports Linux on Litex and gives various pre-configured FPGA bit streams that contain some RISC-5 core and support various FPGA boards that you can just run.", "tokens": [400, 309, 9346, 18734, 322, 32986, 87, 293, 2709, 3683, 659, 12, 1671, 20646, 3831, 36655, 12570, 857, 15842, 300, 5304, 512, 497, 2343, 34, 12, 20, 4965, 293, 1406, 3683, 36655, 12570, 13293, 300, 291, 393, 445, 1190, 13], "temperature": 0.0, "avg_logprob": -0.1355935660275546, "compression_ratio": 1.2890625, "no_speech_prob": 1.721466105664149e-05}, {"id": 82, "seek": 48726, "start": 487.26, "end": 500.26, "text": " So here you see an example from the Litex Git web page, Git repository. It shows an Akron-based board with a multi-core Linux SOC.", "tokens": [407, 510, 291, 536, 364, 1365, 490, 264, 32986, 87, 16939, 3670, 3028, 11, 16939, 25841, 13, 467, 3110, 364, 9629, 2044, 12, 6032, 3150, 365, 257, 4825, 12, 12352, 18734, 10621, 34, 13], "temperature": 0.0, "avg_logprob": -0.2362860317887931, "compression_ratio": 1.337837837837838, "no_speech_prob": 1.1649181033135392e-05}, {"id": 83, "seek": 48726, "start": 500.26, "end": 508.26, "text": " You have some access to DDR. You have some access to SATA and UART.", "tokens": [509, 362, 512, 2105, 281, 49272, 13, 509, 362, 512, 2105, 281, 31536, 32, 293, 624, 15118, 13], "temperature": 0.0, "avg_logprob": -0.2362860317887931, "compression_ratio": 1.337837837837838, "no_speech_prob": 1.1649181033135392e-05}, {"id": 84, "seek": 50826, "start": 508.26, "end": 517.26, "text": " So this is basically an SOC that's able to run Linux with enough periphery to actually make it work.", "tokens": [407, 341, 307, 1936, 364, 10621, 34, 300, 311, 1075, 281, 1190, 18734, 365, 1547, 26807, 88, 281, 767, 652, 309, 589, 13], "temperature": 0.0, "avg_logprob": -0.06478937048661082, "compression_ratio": 1.2222222222222223, "no_speech_prob": 1.3825553651258815e-05}, {"id": 85, "seek": 50826, "start": 517.26, "end": 526.26, "text": " So there is an example for that available.", "tokens": [407, 456, 307, 364, 1365, 337, 300, 2435, 13], "temperature": 0.0, "avg_logprob": -0.06478937048661082, "compression_ratio": 1.2222222222222223, "no_speech_prob": 1.3825553651258815e-05}, {"id": 86, "seek": 52626, "start": 526.26, "end": 541.26, "text": " The question that arise was okay we have this example system but we want to fiddle around with the FPGA and want to run our own bit stream in there or at least be able to customize it to some point.", "tokens": [440, 1168, 300, 20288, 390, 1392, 321, 362, 341, 1365, 1185, 457, 321, 528, 281, 24553, 2285, 926, 365, 264, 36655, 12570, 293, 528, 281, 1190, 527, 1065, 857, 4309, 294, 456, 420, 412, 1935, 312, 1075, 281, 19734, 309, 281, 512, 935, 13], "temperature": 0.0, "avg_logprob": -0.12594886620839438, "compression_ratio": 1.375, "no_speech_prob": 2.3868329662946053e-05}, {"id": 87, "seek": 54126, "start": 541.26, "end": 556.26, "text": " So our starting question for this was can we add our own custom cores that are written in Berrylook into the bit stream that falls out of Litex.", "tokens": [407, 527, 2891, 1168, 337, 341, 390, 393, 321, 909, 527, 1065, 2375, 24826, 300, 366, 3720, 294, 34084, 12747, 666, 264, 857, 4309, 300, 8804, 484, 295, 32986, 87, 13], "temperature": 0.0, "avg_logprob": -0.10595772217731086, "compression_ratio": 1.3829787234042554, "no_speech_prob": 1.2189013432362117e-05}, {"id": 88, "seek": 54126, "start": 556.26, "end": 559.26, "text": " For that we decided to come up with a demo system.", "tokens": [1171, 300, 321, 3047, 281, 808, 493, 365, 257, 10723, 1185, 13], "temperature": 0.0, "avg_logprob": -0.10595772217731086, "compression_ratio": 1.3829787234042554, "no_speech_prob": 1.2189013432362117e-05}, {"id": 89, "seek": 55926, "start": 559.26, "end": 578.26, "text": " So the requirements for that were we are using a lambda concept ECP IX-5 board. You saw it before with an ECP-5 FPGA by lettuce which is supported by users and the entire tool chain.", "tokens": [407, 264, 7728, 337, 300, 645, 321, 366, 1228, 257, 13607, 3410, 19081, 47, 49497, 12, 20, 3150, 13, 509, 1866, 309, 949, 365, 364, 19081, 47, 12, 20, 36655, 12570, 538, 25542, 597, 307, 8104, 538, 5022, 293, 264, 2302, 2290, 5021, 13], "temperature": 0.0, "avg_logprob": -0.19323035648890904, "compression_ratio": 1.3227848101265822, "no_speech_prob": 1.0939875210169703e-05}, {"id": 90, "seek": 55926, "start": 578.26, "end": 581.26, "text": " So support there is great.", "tokens": [407, 1406, 456, 307, 869, 13], "temperature": 0.0, "avg_logprob": -0.19323035648890904, "compression_ratio": 1.3227848101265822, "no_speech_prob": 1.0939875210169703e-05}, {"id": 91, "seek": 58126, "start": 581.26, "end": 590.26, "text": " We want to put WaxRisk-5 with Linux into the FPGA to run a Linux.", "tokens": [492, 528, 281, 829, 343, 2797, 49, 7797, 12, 20, 365, 18734, 666, 264, 36655, 12570, 281, 1190, 257, 18734, 13], "temperature": 0.0, "avg_logprob": -0.1833672704575937, "compression_ratio": 1.5483870967741935, "no_speech_prob": 2.0130393750150688e-05}, {"id": 92, "seek": 58126, "start": 590.26, "end": 594.26, "text": " And because it's already there so the demo systems have it.", "tokens": [400, 570, 309, 311, 1217, 456, 370, 264, 10723, 3652, 362, 309, 13], "temperature": 0.0, "avg_logprob": -0.1833672704575937, "compression_ratio": 1.5483870967741935, "no_speech_prob": 2.0130393750150688e-05}, {"id": 93, "seek": 58126, "start": 594.26, "end": 601.26, "text": " And we want to add to our system an LED ring because LEDs are flashy, LEDs attract people.", "tokens": [400, 321, 528, 281, 909, 281, 527, 1185, 364, 11261, 4875, 570, 33366, 366, 47873, 11, 33366, 5049, 561, 13], "temperature": 0.0, "avg_logprob": -0.1833672704575937, "compression_ratio": 1.5483870967741935, "no_speech_prob": 2.0130393750150688e-05}, {"id": 94, "seek": 58126, "start": 601.26, "end": 607.26, "text": " So it's something nice and we want to have interaction with the system.", "tokens": [407, 309, 311, 746, 1481, 293, 321, 528, 281, 362, 9285, 365, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1833672704575937, "compression_ratio": 1.5483870967741935, "no_speech_prob": 2.0130393750150688e-05}, {"id": 95, "seek": 60726, "start": 607.26, "end": 622.26, "text": " That's why we put a hand wheel there as well so you can as a user do some inputs to the system and get some feedback from the system.", "tokens": [663, 311, 983, 321, 829, 257, 1011, 5589, 456, 382, 731, 370, 291, 393, 382, 257, 4195, 360, 512, 15743, 281, 264, 1185, 293, 483, 512, 5824, 490, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.11825862222788286, "compression_ratio": 1.4166666666666667, "no_speech_prob": 1.6175059499801137e-05}, {"id": 96, "seek": 60726, "start": 622.26, "end": 630.26, "text": " It didn't boot probably because it didn't have power.", "tokens": [467, 994, 380, 11450, 1391, 570, 309, 994, 380, 362, 1347, 13], "temperature": 0.0, "avg_logprob": -0.11825862222788286, "compression_ratio": 1.4166666666666667, "no_speech_prob": 1.6175059499801137e-05}, {"id": 97, "seek": 63026, "start": 630.26, "end": 637.26, "text": " So starting with WaxRisk-5 with Linux as said, Litex already supports this.", "tokens": [407, 2891, 365, 343, 2797, 49, 7797, 12, 20, 365, 18734, 382, 848, 11, 32986, 87, 1217, 9346, 341, 13], "temperature": 0.0, "avg_logprob": -0.1359943002462387, "compression_ratio": 1.360248447204969, "no_speech_prob": 6.956630841159495e-06}, {"id": 98, "seek": 63026, "start": 637.26, "end": 650.26, "text": " You can go to the Linux on Litex repository, look for this file and you'll see an implementation for WaxRisk-5 running on the lettuce ECP IX-5.", "tokens": [509, 393, 352, 281, 264, 18734, 322, 32986, 87, 25841, 11, 574, 337, 341, 3991, 293, 291, 603, 536, 364, 11420, 337, 343, 2797, 49, 7797, 12, 20, 2614, 322, 264, 25542, 19081, 47, 49497, 12, 20, 13], "temperature": 0.0, "avg_logprob": -0.1359943002462387, "compression_ratio": 1.360248447204969, "no_speech_prob": 6.956630841159495e-06}, {"id": 99, "seek": 65026, "start": 650.26, "end": 662.26, "text": " WaxRisk-5 is written in Spinal HDL. That's neither MyGun nor Veriloc.", "tokens": [343, 2797, 49, 7797, 12, 20, 307, 3720, 294, 1738, 2071, 12149, 43, 13, 663, 311, 9662, 1222, 38, 409, 6051, 4281, 388, 905, 13], "temperature": 0.0, "avg_logprob": -0.2309583936418806, "compression_ratio": 1.3557046979865772, "no_speech_prob": 1.8040818758890964e-05}, {"id": 100, "seek": 65026, "start": 662.26, "end": 675.26, "text": " In Litex or in preparation for using it in Litex, you generate the Veriloc code for this WaxRisk-5 core, wrap it in Python or MyGun.", "tokens": [682, 32986, 87, 420, 294, 13081, 337, 1228, 309, 294, 32986, 87, 11, 291, 8460, 264, 4281, 388, 905, 3089, 337, 341, 343, 2797, 49, 7797, 12, 20, 4965, 11, 7019, 309, 294, 15329, 420, 1222, 38, 409, 13], "temperature": 0.0, "avg_logprob": -0.2309583936418806, "compression_ratio": 1.3557046979865772, "no_speech_prob": 1.8040818758890964e-05}, {"id": 101, "seek": 67526, "start": 675.26, "end": 686.26, "text": " And after that, Litex can just integrate the newly created core or generated core into the SOC.", "tokens": [400, 934, 300, 11, 32986, 87, 393, 445, 13365, 264, 15109, 2942, 4965, 420, 10833, 4965, 666, 264, 10621, 34, 13], "temperature": 0.0, "avg_logprob": -0.12480727195739746, "compression_ratio": 1.342281879194631, "no_speech_prob": 2.0391124053276144e-05}, {"id": 102, "seek": 67526, "start": 686.26, "end": 700.26, "text": " It's an example target which supports Lite DRUM for memory access and Lite SD card for using an SD card.", "tokens": [467, 311, 364, 1365, 3779, 597, 9346, 32986, 12118, 14340, 337, 4675, 2105, 293, 32986, 14638, 2920, 337, 1228, 364, 14638, 2920, 13], "temperature": 0.0, "avg_logprob": -0.12480727195739746, "compression_ratio": 1.342281879194631, "no_speech_prob": 2.0391124053276144e-05}, {"id": 103, "seek": 70026, "start": 700.26, "end": 712.26, "text": " The LED ring supports the WS2812 protocol which is a single wire protocol to control LEDs or more than one LED.", "tokens": [440, 11261, 4875, 9346, 264, 343, 50, 11205, 4762, 10336, 597, 307, 257, 2167, 6234, 10336, 281, 1969, 33366, 420, 544, 813, 472, 11261, 13], "temperature": 0.0, "avg_logprob": -0.13919284608629015, "compression_ratio": 1.343558282208589, "no_speech_prob": 1.69426784850657e-05}, {"id": 104, "seek": 70026, "start": 712.26, "end": 722.26, "text": " It's usually used in other fruit LED stripes but you can find various cheap clones on Alibaba and wherever.", "tokens": [467, 311, 2673, 1143, 294, 661, 6773, 11261, 27308, 457, 291, 393, 915, 3683, 7084, 43803, 322, 967, 897, 5509, 293, 8660, 13], "temperature": 0.0, "avg_logprob": -0.13919284608629015, "compression_ratio": 1.343558282208589, "no_speech_prob": 1.69426784850657e-05}, {"id": 105, "seek": 72226, "start": 722.26, "end": 732.26, "text": " There is already a core for controlling this protocol implemented in Litex so it's there coded in MyGun.", "tokens": [821, 307, 1217, 257, 4965, 337, 14905, 341, 10336, 12270, 294, 32986, 87, 370, 309, 311, 456, 34874, 294, 1222, 38, 409, 13], "temperature": 0.0, "avg_logprob": -0.17491534778050014, "compression_ratio": 1.3253012048192772, "no_speech_prob": 1.2198343029012904e-05}, {"id": 106, "seek": 72226, "start": 732.26, "end": 744.26, "text": " It works as an IOMAPT bus slave so from Linux you just write to the registers and LEDs flash and change the colors.", "tokens": [467, 1985, 382, 364, 286, 5251, 4715, 51, 1255, 14777, 370, 490, 18734, 291, 445, 2464, 281, 264, 38351, 293, 33366, 7319, 293, 1319, 264, 4577, 13], "temperature": 0.0, "avg_logprob": -0.17491534778050014, "compression_ratio": 1.3253012048192772, "no_speech_prob": 1.2198343029012904e-05}, {"id": 107, "seek": 74426, "start": 744.26, "end": 757.26, "text": " And on the bus you have four bytes per LED so that's the three colors plus whatever.", "tokens": [400, 322, 264, 1255, 291, 362, 1451, 36088, 680, 11261, 370, 300, 311, 264, 1045, 4577, 1804, 2035, 13], "temperature": 0.0, "avg_logprob": -0.1463451385498047, "compression_ratio": 1.2627737226277371, "no_speech_prob": 2.5795769033720717e-05}, {"id": 108, "seek": 74426, "start": 757.26, "end": 766.26, "text": " Input is done via a hand wheel which is from Amazon which is usually used for CNC stuff.", "tokens": [682, 2582, 307, 1096, 5766, 257, 1011, 5589, 597, 307, 490, 6795, 597, 307, 2673, 1143, 337, 48714, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1463451385498047, "compression_ratio": 1.2627737226277371, "no_speech_prob": 2.5795769033720717e-05}, {"id": 109, "seek": 76626, "start": 766.26, "end": 783.26, "text": " So it has 100 steps and you just can turn it around and it gives you a rotary encoder with two signals where you can find the direction of rotation.", "tokens": [407, 309, 575, 2319, 4439, 293, 291, 445, 393, 1261, 309, 926, 293, 309, 2709, 291, 257, 45811, 2058, 19866, 365, 732, 12354, 689, 291, 393, 915, 264, 3513, 295, 12447, 13], "temperature": 0.0, "avg_logprob": -0.12343246286565607, "compression_ratio": 1.505813953488372, "no_speech_prob": 5.502894055098295e-06}, {"id": 110, "seek": 76626, "start": 783.26, "end": 787.26, "text": " We took some code of the internet for that.", "tokens": [492, 1890, 512, 3089, 295, 264, 4705, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.12343246286565607, "compression_ratio": 1.505813953488372, "no_speech_prob": 5.502894055098295e-06}, {"id": 111, "seek": 76626, "start": 787.26, "end": 789.26, "text": " It's implemented in very low.", "tokens": [467, 311, 12270, 294, 588, 2295, 13], "temperature": 0.0, "avg_logprob": -0.12343246286565607, "compression_ratio": 1.505813953488372, "no_speech_prob": 5.502894055098295e-06}, {"id": 112, "seek": 76626, "start": 789.26, "end": 792.26, "text": " There are various examples for that.", "tokens": [821, 366, 3683, 5110, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.12343246286565607, "compression_ratio": 1.505813953488372, "no_speech_prob": 5.502894055098295e-06}, {"id": 113, "seek": 79226, "start": 792.26, "end": 806.26, "text": " We wrapped it in Python so that we can use it in Litex and this one runs as a bus master and is able to control the LED core via this connection.", "tokens": [492, 14226, 309, 294, 15329, 370, 300, 321, 393, 764, 309, 294, 32986, 87, 293, 341, 472, 6676, 382, 257, 1255, 4505, 293, 307, 1075, 281, 1969, 264, 11261, 4965, 5766, 341, 4984, 13], "temperature": 0.0, "avg_logprob": -0.07671698817500362, "compression_ratio": 1.4295774647887325, "no_speech_prob": 1.3405346180661581e-05}, {"id": 114, "seek": 79226, "start": 806.26, "end": 815.26, "text": " So it just sends right this color to this LED on the bus.", "tokens": [407, 309, 445, 14790, 558, 341, 2017, 281, 341, 11261, 322, 264, 1255, 13], "temperature": 0.0, "avg_logprob": -0.07671698817500362, "compression_ratio": 1.4295774647887325, "no_speech_prob": 1.3405346180661581e-05}, {"id": 115, "seek": 81526, "start": 815.26, "end": 824.26, "text": " So if you put all of it together in the middle we have the FPGA on the right side.", "tokens": [407, 498, 291, 829, 439, 295, 309, 1214, 294, 264, 2808, 321, 362, 264, 36655, 12570, 322, 264, 558, 1252, 13], "temperature": 0.0, "avg_logprob": -0.16569486118498303, "compression_ratio": 1.5595854922279793, "no_speech_prob": 1.2792600500688422e-05}, {"id": 116, "seek": 81526, "start": 824.26, "end": 830.26, "text": " We have the already existing system with the Vexrist 5 running Linux.", "tokens": [492, 362, 264, 1217, 6741, 1185, 365, 264, 691, 3121, 81, 468, 1025, 2614, 18734, 13], "temperature": 0.0, "avg_logprob": -0.16569486118498303, "compression_ratio": 1.5595854922279793, "no_speech_prob": 1.2792600500688422e-05}, {"id": 117, "seek": 81526, "start": 830.26, "end": 833.26, "text": " The Lite SD card which is connected to the SD card.", "tokens": [440, 32986, 14638, 2920, 597, 307, 4582, 281, 264, 14638, 2920, 13], "temperature": 0.0, "avg_logprob": -0.16569486118498303, "compression_ratio": 1.5595854922279793, "no_speech_prob": 1.2792600500688422e-05}, {"id": 118, "seek": 81526, "start": 833.26, "end": 838.26, "text": " The Lite DRAM which is connected to our memory.", "tokens": [440, 32986, 12118, 2865, 597, 307, 4582, 281, 527, 4675, 13], "temperature": 0.0, "avg_logprob": -0.16569486118498303, "compression_ratio": 1.5595854922279793, "no_speech_prob": 1.2792600500688422e-05}, {"id": 119, "seek": 81526, "start": 838.26, "end": 843.26, "text": " All of these are put together by a wishbone bus.", "tokens": [1057, 295, 613, 366, 829, 1214, 538, 257, 3172, 19782, 1255, 13], "temperature": 0.0, "avg_logprob": -0.16569486118498303, "compression_ratio": 1.5595854922279793, "no_speech_prob": 1.2792600500688422e-05}, {"id": 120, "seek": 84326, "start": 843.26, "end": 845.26, "text": " Details are not important.", "tokens": [42811, 366, 406, 1021, 13], "temperature": 0.0, "avg_logprob": -0.15934579763839493, "compression_ratio": 1.4642857142857142, "no_speech_prob": 2.9738486773567274e-05}, {"id": 121, "seek": 84326, "start": 845.26, "end": 849.26, "text": " It's a memory bus to communicate between cores.", "tokens": [467, 311, 257, 4675, 1255, 281, 7890, 1296, 24826, 13], "temperature": 0.0, "avg_logprob": -0.15934579763839493, "compression_ratio": 1.4642857142857142, "no_speech_prob": 2.9738486773567274e-05}, {"id": 122, "seek": 84326, "start": 849.26, "end": 859.26, "text": " On the left hand side, up here you see the encoder which is implemented in very low.", "tokens": [1282, 264, 1411, 1011, 1252, 11, 493, 510, 291, 536, 264, 2058, 19866, 597, 307, 12270, 294, 588, 2295, 13], "temperature": 0.0, "avg_logprob": -0.15934579763839493, "compression_ratio": 1.4642857142857142, "no_speech_prob": 2.9738486773567274e-05}, {"id": 123, "seek": 84326, "start": 859.26, "end": 862.26, "text": " Which is connected to the hand wheel.", "tokens": [3013, 307, 4582, 281, 264, 1011, 5589, 13], "temperature": 0.0, "avg_logprob": -0.15934579763839493, "compression_ratio": 1.4642857142857142, "no_speech_prob": 2.9738486773567274e-05}, {"id": 124, "seek": 84326, "start": 862.26, "end": 866.26, "text": " So this is one thing we added to the bit stream.", "tokens": [407, 341, 307, 472, 551, 321, 3869, 281, 264, 857, 4309, 13], "temperature": 0.0, "avg_logprob": -0.15934579763839493, "compression_ratio": 1.4642857142857142, "no_speech_prob": 2.9738486773567274e-05}, {"id": 125, "seek": 86626, "start": 866.26, "end": 883.26, "text": " And we have the LED.py which is migran for the LED controller which is also added to the bit stream and controls the LED ring.", "tokens": [400, 321, 362, 264, 11261, 13, 8200, 597, 307, 6186, 4257, 337, 264, 11261, 10561, 597, 307, 611, 3869, 281, 264, 857, 4309, 293, 9003, 264, 11261, 4875, 13], "temperature": 0.0, "avg_logprob": -0.18314871964631257, "compression_ratio": 1.4233576642335766, "no_speech_prob": 1.567862454976421e-05}, {"id": 126, "seek": 86626, "start": 883.26, "end": 888.26, "text": " So how this is integrated into Litex?", "tokens": [407, 577, 341, 307, 10919, 666, 32986, 87, 30], "temperature": 0.0, "avg_logprob": -0.18314871964631257, "compression_ratio": 1.4233576642335766, "no_speech_prob": 1.567862454976421e-05}, {"id": 127, "seek": 86626, "start": 888.26, "end": 891.26, "text": " We created a new Litex target.", "tokens": [492, 2942, 257, 777, 32986, 87, 3779, 13], "temperature": 0.0, "avg_logprob": -0.18314871964631257, "compression_ratio": 1.4233576642335766, "no_speech_prob": 1.567862454976421e-05}, {"id": 128, "seek": 89126, "start": 891.26, "end": 895.26, "text": " Litex distinguishes between targets and platforms.", "tokens": [32986, 87, 11365, 16423, 1296, 12911, 293, 9473, 13], "temperature": 0.0, "avg_logprob": -0.13620734214782715, "compression_ratio": 1.488235294117647, "no_speech_prob": 2.1085519620100968e-05}, {"id": 129, "seek": 89126, "start": 895.26, "end": 897.26, "text": " Platforms are the actual boards.", "tokens": [28707, 82, 366, 264, 3539, 13293, 13], "temperature": 0.0, "avg_logprob": -0.13620734214782715, "compression_ratio": 1.488235294117647, "no_speech_prob": 2.1085519620100968e-05}, {"id": 130, "seek": 89126, "start": 897.26, "end": 902.26, "text": " Targets are the SOC that you synthesize into your FPGA.", "tokens": [10537, 16284, 366, 264, 10621, 34, 300, 291, 26617, 1125, 666, 428, 36655, 12570, 13], "temperature": 0.0, "avg_logprob": -0.13620734214782715, "compression_ratio": 1.488235294117647, "no_speech_prob": 2.1085519620100968e-05}, {"id": 131, "seek": 89126, "start": 902.26, "end": 910.26, "text": " So we took the existing platform and added a new target for our own SOC.", "tokens": [407, 321, 1890, 264, 6741, 3663, 293, 3869, 257, 777, 3779, 337, 527, 1065, 10621, 34, 13], "temperature": 0.0, "avg_logprob": -0.13620734214782715, "compression_ratio": 1.488235294117647, "no_speech_prob": 2.1085519620100968e-05}, {"id": 132, "seek": 89126, "start": 910.26, "end": 913.26, "text": " Because it's Python we have inheritance.", "tokens": [1436, 309, 311, 15329, 321, 362, 32122, 13], "temperature": 0.0, "avg_logprob": -0.13620734214782715, "compression_ratio": 1.488235294117647, "no_speech_prob": 2.1085519620100968e-05}, {"id": 133, "seek": 91326, "start": 913.26, "end": 923.26, "text": " We just inherited from the example base SOC with the Litex core and the Vexus 5 core and the other stuff.", "tokens": [492, 445, 27091, 490, 264, 1365, 3096, 10621, 34, 365, 264, 32986, 87, 4965, 293, 264, 691, 3121, 301, 1025, 4965, 293, 264, 661, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1815727802745083, "compression_ratio": 1.4144736842105263, "no_speech_prob": 2.076476812362671e-05}, {"id": 134, "seek": 91326, "start": 923.26, "end": 933.26, "text": " We configured it, instantiated it, reconfigured the pins so that we can actually connect our own peripherals.", "tokens": [492, 30538, 309, 11, 9836, 72, 770, 309, 11, 9993, 20646, 3831, 264, 16392, 370, 300, 321, 393, 767, 1745, 527, 1065, 26807, 1124, 13], "temperature": 0.0, "avg_logprob": -0.1815727802745083, "compression_ratio": 1.4144736842105263, "no_speech_prob": 2.076476812362671e-05}, {"id": 135, "seek": 93326, "start": 933.26, "end": 947.26, "text": " So the hand wheel and the LEDs to the connector of the board, added the LED core and added the rotary encoder.", "tokens": [407, 264, 1011, 5589, 293, 264, 33366, 281, 264, 19127, 295, 264, 3150, 11, 3869, 264, 11261, 4965, 293, 3869, 264, 45811, 2058, 19866, 13], "temperature": 0.0, "avg_logprob": -0.12824960052967072, "compression_ratio": 1.5212121212121212, "no_speech_prob": 1.5197271750366781e-05}, {"id": 136, "seek": 93326, "start": 947.26, "end": 953.26, "text": " In our case it's a decoder for interacting with the hand wheel and we are done.", "tokens": [682, 527, 1389, 309, 311, 257, 979, 19866, 337, 18017, 365, 264, 1011, 5589, 293, 321, 366, 1096, 13], "temperature": 0.0, "avg_logprob": -0.12824960052967072, "compression_ratio": 1.5212121212121212, "no_speech_prob": 1.5197271750366781e-05}, {"id": 137, "seek": 93326, "start": 953.26, "end": 962.26, "text": " All of this customization is about 200 lines of Python code.", "tokens": [1057, 295, 341, 39387, 307, 466, 2331, 3876, 295, 15329, 3089, 13], "temperature": 0.0, "avg_logprob": -0.12824960052967072, "compression_ratio": 1.5212121212121212, "no_speech_prob": 1.5197271750366781e-05}, {"id": 138, "seek": 96226, "start": 962.26, "end": 971.26, "text": " So what we encountered and fixed during this process, after we added our custom cores,", "tokens": [407, 437, 321, 20381, 293, 6806, 1830, 341, 1399, 11, 934, 321, 3869, 527, 2375, 24826, 11], "temperature": 0.0, "avg_logprob": -0.12164943937271361, "compression_ratio": 1.4787234042553192, "no_speech_prob": 7.285330866579898e-06}, {"id": 139, "seek": 96226, "start": 971.26, "end": 977.26, "text": " suddenly Linux was booting but it was not able to access the SD card anymore.", "tokens": [5800, 18734, 390, 11450, 278, 457, 309, 390, 406, 1075, 281, 2105, 264, 14638, 2920, 3602, 13], "temperature": 0.0, "avg_logprob": -0.12164943937271361, "compression_ratio": 1.4787234042553192, "no_speech_prob": 7.285330866579898e-06}, {"id": 140, "seek": 96226, "start": 977.26, "end": 987.26, "text": " We were suspecting various problems in the end like timing or that our bit stream generation failed or something.", "tokens": [492, 645, 9091, 278, 3683, 2740, 294, 264, 917, 411, 10822, 420, 300, 527, 857, 4309, 5125, 7612, 420, 746, 13], "temperature": 0.0, "avg_logprob": -0.12164943937271361, "compression_ratio": 1.4787234042553192, "no_speech_prob": 7.285330866579898e-06}, {"id": 141, "seek": 98726, "start": 987.26, "end": 997.26, "text": " In the end it turned out due to adding our new custom cores the memory map on the bus has changed", "tokens": [682, 264, 917, 309, 3574, 484, 3462, 281, 5127, 527, 777, 2375, 24826, 264, 4675, 4471, 322, 264, 1255, 575, 3105], "temperature": 0.0, "avg_logprob": -0.11198196254792761, "compression_ratio": 1.4550561797752808, "no_speech_prob": 1.5643934602849185e-05}, {"id": 142, "seek": 98726, "start": 997.26, "end": 1004.26, "text": " and the SD RAM controller has changed its base address and Linux didn't know about that", "tokens": [293, 264, 14638, 14561, 10561, 575, 3105, 1080, 3096, 2985, 293, 18734, 994, 380, 458, 466, 300], "temperature": 0.0, "avg_logprob": -0.11198196254792761, "compression_ratio": 1.4550561797752808, "no_speech_prob": 1.5643934602849185e-05}, {"id": 143, "seek": 98726, "start": 1004.26, "end": 1010.26, "text": " because we were using just the device tree that we took from the example.", "tokens": [570, 321, 645, 1228, 445, 264, 4302, 4230, 300, 321, 1890, 490, 264, 1365, 13], "temperature": 0.0, "avg_logprob": -0.11198196254792761, "compression_ratio": 1.4550561797752808, "no_speech_prob": 1.5643934602849185e-05}, {"id": 144, "seek": 101026, "start": 1010.26, "end": 1019.26, "text": " So we changed our yachter build to use or to take the configuration for the Linux core,", "tokens": [407, 321, 3105, 527, 288, 3589, 260, 1322, 281, 764, 420, 281, 747, 264, 11694, 337, 264, 18734, 4965, 11], "temperature": 0.0, "avg_logprob": -0.16627396643161774, "compression_ratio": 1.6477987421383649, "no_speech_prob": 8.006158168427646e-06}, {"id": 145, "seek": 101026, "start": 1019.26, "end": 1026.26, "text": " generate a device tree from that and give it to Linux and that way Linux took the correct base address", "tokens": [8460, 257, 4302, 4230, 490, 300, 293, 976, 309, 281, 18734, 293, 300, 636, 18734, 1890, 264, 3006, 3096, 2985], "temperature": 0.0, "avg_logprob": -0.16627396643161774, "compression_ratio": 1.6477987421383649, "no_speech_prob": 8.006158168427646e-06}, {"id": 146, "seek": 101026, "start": 1026.26, "end": 1035.26, "text": " and uses the correct base address and is able to use the SD card again.", "tokens": [293, 4960, 264, 3006, 3096, 2985, 293, 307, 1075, 281, 764, 264, 14638, 2920, 797, 13], "temperature": 0.0, "avg_logprob": -0.16627396643161774, "compression_ratio": 1.6477987421383649, "no_speech_prob": 8.006158168427646e-06}, {"id": 147, "seek": 103526, "start": 1035.26, "end": 1042.26, "text": " So that's something that will come up later as well because if you reconfigure your base system", "tokens": [407, 300, 311, 746, 300, 486, 808, 493, 1780, 382, 731, 570, 498, 291, 9993, 20646, 540, 428, 3096, 1185], "temperature": 0.0, "avg_logprob": -0.10999629922109107, "compression_ratio": 1.6117021276595744, "no_speech_prob": 1.9487959434627555e-05}, {"id": 148, "seek": 103526, "start": 1042.26, "end": 1050.26, "text": " and device tree changes you have to make sure that your device tree matches your system that you're using.", "tokens": [293, 4302, 4230, 2962, 291, 362, 281, 652, 988, 300, 428, 4302, 4230, 10676, 428, 1185, 300, 291, 434, 1228, 13], "temperature": 0.0, "avg_logprob": -0.10999629922109107, "compression_ratio": 1.6117021276595744, "no_speech_prob": 1.9487959434627555e-05}, {"id": 149, "seek": 103526, "start": 1050.26, "end": 1061.26, "text": " And one other thing is there is some boot loader in the FPGA or in the bit stream for early bring up", "tokens": [400, 472, 661, 551, 307, 456, 307, 512, 11450, 3677, 260, 294, 264, 36655, 12570, 420, 294, 264, 857, 4309, 337, 2440, 1565, 493], "temperature": 0.0, "avg_logprob": -0.10999629922109107, "compression_ratio": 1.6117021276595744, "no_speech_prob": 1.9487959434627555e-05}, {"id": 150, "seek": 106126, "start": 1061.26, "end": 1067.26, "text": " which corresponds to the ROM code or the ROM boot loader that Marco mentioned previously.", "tokens": [597, 23249, 281, 264, 41678, 3089, 420, 264, 41678, 11450, 3677, 260, 300, 26535, 2835, 8046, 13], "temperature": 0.0, "avg_logprob": -0.1432795891394982, "compression_ratio": 1.6288659793814433, "no_speech_prob": 1.8028496924671344e-05}, {"id": 151, "seek": 106126, "start": 1067.26, "end": 1075.26, "text": " So it's in the bit stream and it usually required so we compiled the boot loader", "tokens": [407, 309, 311, 294, 264, 857, 4309, 293, 309, 2673, 4739, 370, 321, 36548, 264, 11450, 3677, 260], "temperature": 0.0, "avg_logprob": -0.1432795891394982, "compression_ratio": 1.6288659793814433, "no_speech_prob": 1.8028496924671344e-05}, {"id": 152, "seek": 106126, "start": 1075.26, "end": 1081.26, "text": " and then it started to recentize the bit stream run place and route again.", "tokens": [293, 550, 309, 1409, 281, 5162, 1125, 264, 857, 4309, 1190, 1081, 293, 7955, 797, 13], "temperature": 0.0, "avg_logprob": -0.1432795891394982, "compression_ratio": 1.6288659793814433, "no_speech_prob": 1.8028496924671344e-05}, {"id": 153, "seek": 106126, "start": 1081.26, "end": 1087.26, "text": " So this is quite fast but it's still in our case six to eight minutes.", "tokens": [407, 341, 307, 1596, 2370, 457, 309, 311, 920, 294, 527, 1389, 2309, 281, 3180, 2077, 13], "temperature": 0.0, "avg_logprob": -0.1432795891394982, "compression_ratio": 1.6288659793814433, "no_speech_prob": 1.8028496924671344e-05}, {"id": 154, "seek": 108726, "start": 1087.26, "end": 1093.26, "text": " That's not something you want to have if you're just compiling a really small binary.", "tokens": [663, 311, 406, 746, 291, 528, 281, 362, 498, 291, 434, 445, 715, 4883, 257, 534, 1359, 17434, 13], "temperature": 0.0, "avg_logprob": -0.10302359370862023, "compression_ratio": 1.4096385542168675, "no_speech_prob": 8.374837307201233e-06}, {"id": 155, "seek": 108726, "start": 1093.26, "end": 1104.26, "text": " So we changed our yachter build to synthesize and keep enough space in the area", "tokens": [407, 321, 3105, 527, 288, 3589, 260, 1322, 281, 26617, 1125, 293, 1066, 1547, 1901, 294, 264, 1859], "temperature": 0.0, "avg_logprob": -0.10302359370862023, "compression_ratio": 1.4096385542168675, "no_speech_prob": 8.374837307201233e-06}, {"id": 156, "seek": 108726, "start": 1104.26, "end": 1109.26, "text": " and compile the ROM boot loader and just put it together afterwards.", "tokens": [293, 31413, 264, 41678, 11450, 3677, 260, 293, 445, 829, 309, 1214, 10543, 13], "temperature": 0.0, "avg_logprob": -0.10302359370862023, "compression_ratio": 1.4096385542168675, "no_speech_prob": 8.374837307201233e-06}, {"id": 157, "seek": 110926, "start": 1109.26, "end": 1117.26, "text": " This works a lot faster if you're fiddling around there.", "tokens": [639, 1985, 257, 688, 4663, 498, 291, 434, 283, 14273, 1688, 926, 456, 13], "temperature": 0.0, "avg_logprob": -0.17219402983381943, "compression_ratio": 1.4583333333333333, "no_speech_prob": 1.0263190233672503e-05}, {"id": 158, "seek": 110926, "start": 1117.26, "end": 1120.26, "text": " Pain points.", "tokens": [24943, 2793, 13], "temperature": 0.0, "avg_logprob": -0.17219402983381943, "compression_ratio": 1.4583333333333333, "no_speech_prob": 1.0263190233672503e-05}, {"id": 159, "seek": 110926, "start": 1120.26, "end": 1123.26, "text": " Meaghan is not really maintained anymore.", "tokens": [1923, 559, 3451, 307, 406, 534, 17578, 3602, 13], "temperature": 0.0, "avg_logprob": -0.17219402983381943, "compression_ratio": 1.4583333333333333, "no_speech_prob": 1.0263190233672503e-05}, {"id": 160, "seek": 110926, "start": 1123.26, "end": 1125.26, "text": " There is a successor for it.", "tokens": [821, 307, 257, 31864, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.17219402983381943, "compression_ratio": 1.4583333333333333, "no_speech_prob": 1.0263190233672503e-05}, {"id": 161, "seek": 110926, "start": 1125.26, "end": 1129.26, "text": " It's Amaranth.", "tokens": [467, 311, 2012, 17142, 392, 13], "temperature": 0.0, "avg_logprob": -0.17219402983381943, "compression_ratio": 1.4583333333333333, "no_speech_prob": 1.0263190233672503e-05}, {"id": 162, "seek": 110926, "start": 1129.26, "end": 1137.26, "text": " Lightix is currently still using Meaghan migrating it to Amaranth is not really feasible.", "tokens": [8279, 970, 307, 4362, 920, 1228, 1923, 559, 3451, 6186, 8754, 309, 281, 2012, 17142, 392, 307, 406, 534, 26648, 13], "temperature": 0.0, "avg_logprob": -0.17219402983381943, "compression_ratio": 1.4583333333333333, "no_speech_prob": 1.0263190233672503e-05}, {"id": 163, "seek": 113726, "start": 1137.26, "end": 1143.26, "text": " There are ideas to change it to a new hard description language.", "tokens": [821, 366, 3487, 281, 1319, 309, 281, 257, 777, 1152, 3855, 2856, 13], "temperature": 0.0, "avg_logprob": -0.10499058307056695, "compression_ratio": 1.4867724867724867, "no_speech_prob": 3.925539931515232e-05}, {"id": 164, "seek": 113726, "start": 1143.26, "end": 1148.26, "text": " I'm not sure what's happening there but we saw especially for simulation", "tokens": [286, 478, 406, 988, 437, 311, 2737, 456, 457, 321, 1866, 2318, 337, 16575], "temperature": 0.0, "avg_logprob": -0.10499058307056695, "compression_ratio": 1.4867724867724867, "no_speech_prob": 3.925539931515232e-05}, {"id": 165, "seek": 113726, "start": 1148.26, "end": 1156.26, "text": " we saw that Meaghan generates invalid very low code or code you wouldn't want to simulate.", "tokens": [321, 1866, 300, 1923, 559, 3451, 23815, 34702, 588, 2295, 3089, 420, 3089, 291, 2759, 380, 528, 281, 27817, 13], "temperature": 0.0, "avg_logprob": -0.10499058307056695, "compression_ratio": 1.4867724867724867, "no_speech_prob": 3.925539931515232e-05}, {"id": 166, "seek": 113726, "start": 1156.26, "end": 1158.26, "text": " That's something.", "tokens": [663, 311, 746, 13], "temperature": 0.0, "avg_logprob": -0.10499058307056695, "compression_ratio": 1.4867724867724867, "no_speech_prob": 3.925539931515232e-05}, {"id": 167, "seek": 113726, "start": 1158.26, "end": 1161.26, "text": " Currently we have to live with it.", "tokens": [19964, 321, 362, 281, 1621, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.10499058307056695, "compression_ratio": 1.4867724867724867, "no_speech_prob": 3.925539931515232e-05}, {"id": 168, "seek": 116126, "start": 1161.26, "end": 1169.26, "text": " Then another observation was that the yachter environment wasn't as reproducible as we expected.", "tokens": [1396, 1071, 14816, 390, 300, 264, 288, 3589, 260, 2823, 2067, 380, 382, 11408, 32128, 382, 321, 5176, 13], "temperature": 0.0, "avg_logprob": -0.180094376206398, "compression_ratio": 1.514792899408284, "no_speech_prob": 2.0404610040714033e-05}, {"id": 169, "seek": 116126, "start": 1169.26, "end": 1172.26, "text": " We're not sure what's the cause for that.", "tokens": [492, 434, 406, 988, 437, 311, 264, 3082, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.180094376206398, "compression_ratio": 1.514792899408284, "no_speech_prob": 2.0404610040714033e-05}, {"id": 170, "seek": 116126, "start": 1172.26, "end": 1182.26, "text": " If we are missing it somewhere that there is some seed for compiling or for a place and route which we haven't fixed.", "tokens": [759, 321, 366, 5361, 309, 4079, 300, 456, 307, 512, 8871, 337, 715, 4883, 420, 337, 257, 1081, 293, 7955, 597, 321, 2378, 380, 6806, 13], "temperature": 0.0, "avg_logprob": -0.180094376206398, "compression_ratio": 1.514792899408284, "no_speech_prob": 2.0404610040714033e-05}, {"id": 171, "seek": 118226, "start": 1182.26, "end": 1193.26, "text": " We saw that there is sometimes failing bitstream falling out of the yachter build that should be reproducible.", "tokens": [492, 1866, 300, 456, 307, 2171, 18223, 857, 9291, 7440, 484, 295, 264, 288, 3589, 260, 1322, 300, 820, 312, 11408, 32128, 13], "temperature": 0.0, "avg_logprob": -0.18503498023664447, "compression_ratio": 1.4593023255813953, "no_speech_prob": 7.522854048147565e-06}, {"id": 172, "seek": 118226, "start": 1193.26, "end": 1201.26, "text": " We wanted to use JTAG to debug the early boot of the WaxRisk 5 and look into it.", "tokens": [492, 1415, 281, 764, 508, 8241, 38, 281, 24083, 264, 2440, 11450, 295, 264, 343, 2797, 49, 7797, 1025, 293, 574, 666, 309, 13], "temperature": 0.0, "avg_logprob": -0.18503498023664447, "compression_ratio": 1.4593023255813953, "no_speech_prob": 7.522854048147565e-06}, {"id": 173, "seek": 118226, "start": 1201.26, "end": 1208.26, "text": " We are already flashing our bitstream via JTAG on the FPGA.", "tokens": [492, 366, 1217, 31049, 527, 857, 9291, 5766, 508, 8241, 38, 322, 264, 36655, 12570, 13], "temperature": 0.0, "avg_logprob": -0.18503498023664447, "compression_ratio": 1.4593023255813953, "no_speech_prob": 7.522854048147565e-06}, {"id": 174, "seek": 120826, "start": 1208.26, "end": 1218.26, "text": " We have JTAG connected to the board but we are not able to connect it to the WaxRisk 5 JTAG connector", "tokens": [492, 362, 508, 8241, 38, 4582, 281, 264, 3150, 457, 321, 366, 406, 1075, 281, 1745, 309, 281, 264, 343, 2797, 49, 7797, 1025, 508, 8241, 38, 19127], "temperature": 0.0, "avg_logprob": -0.09772538003467378, "compression_ratio": 1.6035502958579881, "no_speech_prob": 8.259747119154781e-06}, {"id": 175, "seek": 120826, "start": 1218.26, "end": 1223.26, "text": " so that we could add the WaxRisk 5 core to our JTAG chain.", "tokens": [370, 300, 321, 727, 909, 264, 343, 2797, 49, 7797, 1025, 4965, 281, 527, 508, 8241, 38, 5021, 13], "temperature": 0.0, "avg_logprob": -0.09772538003467378, "compression_ratio": 1.6035502958579881, "no_speech_prob": 8.259747119154781e-06}, {"id": 176, "seek": 120826, "start": 1223.26, "end": 1226.26, "text": " That's something we can work around.", "tokens": [663, 311, 746, 321, 393, 589, 926, 13], "temperature": 0.0, "avg_logprob": -0.09772538003467378, "compression_ratio": 1.6035502958579881, "no_speech_prob": 8.259747119154781e-06}, {"id": 177, "seek": 120826, "start": 1226.26, "end": 1231.26, "text": " We can just use different pins but we have to use a second JTAG for that.", "tokens": [492, 393, 445, 764, 819, 16392, 457, 321, 362, 281, 764, 257, 1150, 508, 8241, 38, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.09772538003467378, "compression_ratio": 1.6035502958579881, "no_speech_prob": 8.259747119154781e-06}, {"id": 178, "seek": 123126, "start": 1231.26, "end": 1240.26, "text": " That's something that's not that great and we haven't figured out yet.", "tokens": [663, 311, 746, 300, 311, 406, 300, 869, 293, 321, 2378, 380, 8932, 484, 1939, 13], "temperature": 0.0, "avg_logprob": -0.13152314054554906, "compression_ratio": 1.4864864864864864, "no_speech_prob": 8.128152330755256e-06}, {"id": 179, "seek": 123126, "start": 1240.26, "end": 1250.26, "text": " Coming to the conclusion, adding and customizing Litex targets is really convenient.", "tokens": [12473, 281, 264, 10063, 11, 5127, 293, 2375, 3319, 32986, 87, 12911, 307, 534, 10851, 13], "temperature": 0.0, "avg_logprob": -0.13152314054554906, "compression_ratio": 1.4864864864864864, "no_speech_prob": 8.128152330755256e-06}, {"id": 180, "seek": 123126, "start": 1250.26, "end": 1252.26, "text": " It's something you have to figure out.", "tokens": [467, 311, 746, 291, 362, 281, 2573, 484, 13], "temperature": 0.0, "avg_logprob": -0.13152314054554906, "compression_ratio": 1.4864864864864864, "no_speech_prob": 8.128152330755256e-06}, {"id": 181, "seek": 123126, "start": 1252.26, "end": 1259.26, "text": " You have to work into it.", "tokens": [509, 362, 281, 589, 666, 309, 13], "temperature": 0.0, "avg_logprob": -0.13152314054554906, "compression_ratio": 1.4864864864864864, "no_speech_prob": 8.128152330755256e-06}, {"id": 182, "seek": 125926, "start": 1259.26, "end": 1266.26, "text": " Once you're in there, I said it's 200 lines for configuring.", "tokens": [3443, 291, 434, 294, 456, 11, 286, 848, 309, 311, 2331, 3876, 337, 6662, 1345, 13], "temperature": 0.0, "avg_logprob": -0.14325626691182455, "compression_ratio": 1.2967741935483872, "no_speech_prob": 3.9261041820282117e-05}, {"id": 183, "seek": 125926, "start": 1266.26, "end": 1269.26, "text": " That is nice.", "tokens": [663, 307, 1481, 13], "temperature": 0.0, "avg_logprob": -0.14325626691182455, "compression_ratio": 1.2967741935483872, "no_speech_prob": 3.9261041820282117e-05}, {"id": 184, "seek": 125926, "start": 1269.26, "end": 1276.26, "text": " The step from Blinky to just get an LED flashing to an SOC is really large.", "tokens": [440, 1823, 490, 2177, 22998, 281, 445, 483, 364, 11261, 31049, 281, 364, 10621, 34, 307, 534, 2416, 13], "temperature": 0.0, "avg_logprob": -0.14325626691182455, "compression_ratio": 1.2967741935483872, "no_speech_prob": 3.9261041820282117e-05}, {"id": 185, "seek": 125926, "start": 1276.26, "end": 1280.26, "text": " It's not really surprising because it's much more.", "tokens": [467, 311, 406, 534, 8830, 570, 309, 311, 709, 544, 13], "temperature": 0.0, "avg_logprob": -0.14325626691182455, "compression_ratio": 1.2967741935483872, "no_speech_prob": 3.9261041820282117e-05}, {"id": 186, "seek": 128026, "start": 1280.26, "end": 1289.26, "text": " But also from things that you have to configure, things where you misconfigured something and it's just not working,", "tokens": [583, 611, 490, 721, 300, 291, 362, 281, 22162, 11, 721, 689, 291, 27631, 20646, 3831, 746, 293, 309, 311, 445, 406, 1364, 11], "temperature": 0.0, "avg_logprob": -0.11841766457808645, "compression_ratio": 1.5736842105263158, "no_speech_prob": 1.0430881957290694e-05}, {"id": 187, "seek": 128026, "start": 1289.26, "end": 1298.26, "text": " you have really many knobs that you can turn and your system will surprise you.", "tokens": [291, 362, 534, 867, 46999, 300, 291, 393, 1261, 293, 428, 1185, 486, 6365, 291, 13], "temperature": 0.0, "avg_logprob": -0.11841766457808645, "compression_ratio": 1.5736842105263158, "no_speech_prob": 1.0430881957290694e-05}, {"id": 188, "seek": 128026, "start": 1298.26, "end": 1304.26, "text": " With all this tool chain, Litex, there are different modules in Litex.", "tokens": [2022, 439, 341, 2290, 5021, 11, 32986, 87, 11, 456, 366, 819, 16679, 294, 32986, 87, 13], "temperature": 0.0, "avg_logprob": -0.11841766457808645, "compression_ratio": 1.5736842105263158, "no_speech_prob": 1.0430881957290694e-05}, {"id": 189, "seek": 128026, "start": 1304.26, "end": 1306.26, "text": " All of them have to be in sync.", "tokens": [1057, 295, 552, 362, 281, 312, 294, 20271, 13], "temperature": 0.0, "avg_logprob": -0.11841766457808645, "compression_ratio": 1.5736842105263158, "no_speech_prob": 1.0430881957290694e-05}, {"id": 190, "seek": 130626, "start": 1306.26, "end": 1313.26, "text": " Sometimes it happens that if you just update one component, you will run into surprises.", "tokens": [4803, 309, 2314, 300, 498, 291, 445, 5623, 472, 6542, 11, 291, 486, 1190, 666, 22655, 13], "temperature": 0.0, "avg_logprob": -0.0756643281054141, "compression_ratio": 1.5670103092783505, "no_speech_prob": 1.0769329492177349e-05}, {"id": 191, "seek": 130626, "start": 1313.26, "end": 1319.26, "text": " It's really important to make sure that you have something around this entire tool chain", "tokens": [467, 311, 534, 1021, 281, 652, 988, 300, 291, 362, 746, 926, 341, 2302, 2290, 5021], "temperature": 0.0, "avg_logprob": -0.0756643281054141, "compression_ratio": 1.5670103092783505, "no_speech_prob": 1.0769329492177349e-05}, {"id": 192, "seek": 130626, "start": 1319.26, "end": 1323.26, "text": " that keeps all your tools fixed on a specific version error", "tokens": [300, 5965, 439, 428, 3873, 6806, 322, 257, 2685, 3037, 6713], "temperature": 0.0, "avg_logprob": -0.0756643281054141, "compression_ratio": 1.5670103092783505, "no_speech_prob": 1.0769329492177349e-05}, {"id": 193, "seek": 130626, "start": 1323.26, "end": 1331.26, "text": " that you know which version you are using also for reporting bugs.", "tokens": [300, 291, 458, 597, 3037, 291, 366, 1228, 611, 337, 10031, 15120, 13], "temperature": 0.0, "avg_logprob": -0.0756643281054141, "compression_ratio": 1.5670103092783505, "no_speech_prob": 1.0769329492177349e-05}, {"id": 194, "seek": 133126, "start": 1331.26, "end": 1338.26, "text": " That's Yopto doing for us or is the plan to have.", "tokens": [663, 311, 398, 404, 1353, 884, 337, 505, 420, 307, 264, 1393, 281, 362, 13], "temperature": 0.0, "avg_logprob": -0.17014043625086955, "compression_ratio": 1.5164835164835164, "no_speech_prob": 1.0940164429484867e-05}, {"id": 195, "seek": 133126, "start": 1338.26, "end": 1345.26, "text": " The next steps are maybe we want to run a kernel CI on the Linux on Litex system", "tokens": [440, 958, 4439, 366, 1310, 321, 528, 281, 1190, 257, 28256, 37777, 322, 264, 18734, 322, 32986, 87, 1185], "temperature": 0.0, "avg_logprob": -0.17014043625086955, "compression_ratio": 1.5164835164835164, "no_speech_prob": 1.0940164429484867e-05}, {"id": 196, "seek": 133126, "start": 1345.26, "end": 1350.26, "text": " so that we can just take Linux kernel and run it against the system.", "tokens": [370, 300, 321, 393, 445, 747, 18734, 28256, 293, 1190, 309, 1970, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.17014043625086955, "compression_ratio": 1.5164835164835164, "no_speech_prob": 1.0940164429484867e-05}, {"id": 197, "seek": 133126, "start": 1350.26, "end": 1356.26, "text": " There comes the problem that kernel CI expects a device feed that's upstream", "tokens": [821, 1487, 264, 1154, 300, 28256, 37777, 33280, 257, 4302, 3154, 300, 311, 33915], "temperature": 0.0, "avg_logprob": -0.17014043625086955, "compression_ratio": 1.5164835164835164, "no_speech_prob": 1.0940164429484867e-05}, {"id": 198, "seek": 135626, "start": 1356.26, "end": 1363.26, "text": " with kind of a conflict with the generation of the device feed that has to match your target.", "tokens": [365, 733, 295, 257, 6596, 365, 264, 5125, 295, 264, 4302, 3154, 300, 575, 281, 2995, 428, 3779, 13], "temperature": 0.0, "avg_logprob": -0.14722419094729733, "compression_ratio": 1.5336787564766838, "no_speech_prob": 4.354049451649189e-06}, {"id": 199, "seek": 135626, "start": 1363.26, "end": 1370.26, "text": " Then we see that Linux takes ages to boot on the WexRisk5 about two minutes.", "tokens": [1396, 321, 536, 300, 18734, 2516, 12357, 281, 11450, 322, 264, 492, 87, 49, 7797, 20, 466, 732, 2077, 13], "temperature": 0.0, "avg_logprob": -0.14722419094729733, "compression_ratio": 1.5336787564766838, "no_speech_prob": 4.354049451649189e-06}, {"id": 200, "seek": 135626, "start": 1370.26, "end": 1375.26, "text": " Not sure if that's because the core is just slow", "tokens": [1726, 988, 498, 300, 311, 570, 264, 4965, 307, 445, 2964], "temperature": 0.0, "avg_logprob": -0.14722419094729733, "compression_ratio": 1.5336787564766838, "no_speech_prob": 4.354049451649189e-06}, {"id": 201, "seek": 135626, "start": 1375.26, "end": 1384.26, "text": " or if there is something we are waiting for in user space that can be fixed.", "tokens": [420, 498, 456, 307, 746, 321, 366, 3806, 337, 294, 4195, 1901, 300, 393, 312, 6806, 13], "temperature": 0.0, "avg_logprob": -0.14722419094729733, "compression_ratio": 1.5336787564766838, "no_speech_prob": 4.354049451649189e-06}, {"id": 202, "seek": 138426, "start": 1384.26, "end": 1387.26, "text": " The WexRisk5 actually supports multi-core systems.", "tokens": [440, 492, 87, 49, 7797, 20, 767, 9346, 4825, 12, 12352, 3652, 13], "temperature": 0.0, "avg_logprob": -0.11448684982631517, "compression_ratio": 1.5746606334841629, "no_speech_prob": 3.0195977160474285e-05}, {"id": 203, "seek": 138426, "start": 1387.26, "end": 1391.26, "text": " We weren't able to boot this yet.", "tokens": [492, 4999, 380, 1075, 281, 11450, 341, 1939, 13], "temperature": 0.0, "avg_logprob": -0.11448684982631517, "compression_ratio": 1.5746606334841629, "no_speech_prob": 3.0195977160474285e-05}, {"id": 204, "seek": 138426, "start": 1391.26, "end": 1400.26, "text": " Maybe we want to look into using the same system on the concept with different WexRisk5 cores.", "tokens": [2704, 321, 528, 281, 574, 666, 1228, 264, 912, 1185, 322, 264, 3410, 365, 819, 492, 87, 49, 7797, 20, 24826, 13], "temperature": 0.0, "avg_logprob": -0.11448684982631517, "compression_ratio": 1.5746606334841629, "no_speech_prob": 3.0195977160474285e-05}, {"id": 205, "seek": 138426, "start": 1400.26, "end": 1403.26, "text": " As I said before, there are four different cores in different languages.", "tokens": [1018, 286, 848, 949, 11, 456, 366, 1451, 819, 24826, 294, 819, 8650, 13], "temperature": 0.0, "avg_logprob": -0.11448684982631517, "compression_ratio": 1.5746606334841629, "no_speech_prob": 3.0195977160474285e-05}, {"id": 206, "seek": 138426, "start": 1403.26, "end": 1406.26, "text": " All of them usually generate very low code", "tokens": [1057, 295, 552, 2673, 8460, 588, 2295, 3089], "temperature": 0.0, "avg_logprob": -0.11448684982631517, "compression_ratio": 1.5746606334841629, "no_speech_prob": 3.0195977160474285e-05}, {"id": 207, "seek": 138426, "start": 1406.26, "end": 1413.26, "text": " so it should be possible to integrate it into Litex.", "tokens": [370, 309, 820, 312, 1944, 281, 13365, 309, 666, 32986, 87, 13], "temperature": 0.0, "avg_logprob": -0.11448684982631517, "compression_ratio": 1.5746606334841629, "no_speech_prob": 3.0195977160474285e-05}, {"id": 208, "seek": 141326, "start": 1413.26, "end": 1416.26, "text": " Show me the source.", "tokens": [6895, 385, 264, 4009, 13], "temperature": 0.0, "avg_logprob": -0.18942593746497982, "compression_ratio": 1.393103448275862, "no_speech_prob": 1.993967998714652e-05}, {"id": 209, "seek": 141326, "start": 1416.26, "end": 1418.26, "text": " It's on GitHub.", "tokens": [467, 311, 322, 23331, 13], "temperature": 0.0, "avg_logprob": -0.18942593746497982, "compression_ratio": 1.393103448275862, "no_speech_prob": 1.993967998714652e-05}, {"id": 210, "seek": 141326, "start": 1418.26, "end": 1427.26, "text": " This is a Yocto meta layer where you can find the code for the editing", "tokens": [639, 307, 257, 7616, 349, 78, 19616, 4583, 689, 291, 393, 915, 264, 3089, 337, 264, 10000], "temperature": 0.0, "avg_logprob": -0.18942593746497982, "compression_ratio": 1.393103448275862, "no_speech_prob": 1.993967998714652e-05}, {"id": 211, "seek": 141326, "start": 1427.26, "end": 1432.26, "text": " or the entire SOC configuration, the code for the hand wheel", "tokens": [420, 264, 2302, 10621, 34, 11694, 11, 264, 3089, 337, 264, 1011, 5589], "temperature": 0.0, "avg_logprob": -0.18942593746497982, "compression_ratio": 1.393103448275862, "no_speech_prob": 1.993967998714652e-05}, {"id": 212, "seek": 141326, "start": 1432.26, "end": 1435.26, "text": " and a few other fixes that we did.", "tokens": [293, 257, 1326, 661, 32539, 300, 321, 630, 13], "temperature": 0.0, "avg_logprob": -0.18942593746497982, "compression_ratio": 1.393103448275862, "no_speech_prob": 1.993967998714652e-05}, {"id": 213, "seek": 143526, "start": 1435.26, "end": 1446.26, "text": " You can add this to a Yocto workspace and should be able to reproduce the bitstream that we built.", "tokens": [509, 393, 909, 341, 281, 257, 7616, 349, 78, 32706, 293, 820, 312, 1075, 281, 29501, 264, 857, 9291, 300, 321, 3094, 13], "temperature": 0.0, "avg_logprob": -0.15315337919853103, "compression_ratio": 1.4624277456647399, "no_speech_prob": 3.640441718744114e-05}, {"id": 214, "seek": 143526, "start": 1446.26, "end": 1449.26, "text": " Thank you for your attention.", "tokens": [1044, 291, 337, 428, 3202, 13], "temperature": 0.0, "avg_logprob": -0.15315337919853103, "compression_ratio": 1.4624277456647399, "no_speech_prob": 3.640441718744114e-05}, {"id": 215, "seek": 143526, "start": 1449.26, "end": 1451.26, "text": " That's me. That's my colleague, Stefan.", "tokens": [663, 311, 385, 13, 663, 311, 452, 13532, 11, 32158, 13], "temperature": 0.0, "avg_logprob": -0.15315337919853103, "compression_ratio": 1.4624277456647399, "no_speech_prob": 3.640441718744114e-05}, {"id": 216, "seek": 143526, "start": 1451.26, "end": 1455.26, "text": " You can send us an email if you have questions", "tokens": [509, 393, 2845, 505, 364, 3796, 498, 291, 362, 1651], "temperature": 0.0, "avg_logprob": -0.15315337919853103, "compression_ratio": 1.4624277456647399, "no_speech_prob": 3.640441718744114e-05}, {"id": 217, "seek": 143526, "start": 1455.26, "end": 1459.26, "text": " or just ask me and find me somewhere.", "tokens": [420, 445, 1029, 385, 293, 915, 385, 4079, 13], "temperature": 0.0, "avg_logprob": -0.15315337919853103, "compression_ratio": 1.4624277456647399, "no_speech_prob": 3.640441718744114e-05}, {"id": 218, "seek": 145926, "start": 1459.26, "end": 1468.26, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.1916569709777832, "compression_ratio": 1.2173913043478262, "no_speech_prob": 0.002088907640427351}, {"id": 219, "seek": 145926, "start": 1468.26, "end": 1471.26, "text": " We have time for literally one question.", "tokens": [492, 362, 565, 337, 3736, 472, 1168, 13], "temperature": 0.0, "avg_logprob": -0.1916569709777832, "compression_ratio": 1.2173913043478262, "no_speech_prob": 0.002088907640427351}, {"id": 220, "seek": 145926, "start": 1471.26, "end": 1479.26, "text": " This person here was the first one.", "tokens": [639, 954, 510, 390, 264, 700, 472, 13], "temperature": 0.0, "avg_logprob": -0.1916569709777832, "compression_ratio": 1.2173913043478262, "no_speech_prob": 0.002088907640427351}, {"id": 221, "seek": 145926, "start": 1479.26, "end": 1483.26, "text": " Thank you for your talk.", "tokens": [1044, 291, 337, 428, 751, 13], "temperature": 0.0, "avg_logprob": -0.1916569709777832, "compression_ratio": 1.2173913043478262, "no_speech_prob": 0.002088907640427351}, {"id": 222, "seek": 148326, "start": 1483.26, "end": 1489.26, "text": " I had one question about the address changing in the device tree.", "tokens": [286, 632, 472, 1168, 466, 264, 2985, 4473, 294, 264, 4302, 4230, 13], "temperature": 0.0, "avg_logprob": -0.11232566833496094, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.003917882218956947}, {"id": 223, "seek": 148326, "start": 1489.26, "end": 1495.26, "text": " In microcontroller world, you can have a lot of microcontrollers", "tokens": [682, 4532, 9000, 22922, 1002, 11, 291, 393, 362, 257, 688, 295, 4532, 9000, 3970, 433], "temperature": 0.0, "avg_logprob": -0.11232566833496094, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.003917882218956947}, {"id": 224, "seek": 148326, "start": 1495.26, "end": 1500.26, "text": " with the same addresses for the common devices like for STM32.", "tokens": [365, 264, 912, 16862, 337, 264, 2689, 5759, 411, 337, 4904, 44, 11440, 13], "temperature": 0.0, "avg_logprob": -0.11232566833496094, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.003917882218956947}, {"id": 225, "seek": 150026, "start": 1500.26, "end": 1515.26, "text": " Do all the STM32 have the same base address for RAM?", "tokens": [50364, 1144, 439, 264, 4904, 44, 11440, 362, 264, 912, 3096, 2985, 337, 14561, 30, 51114], "temperature": 0.0, "avg_logprob": -0.19322977346532486, "compression_ratio": 0.9285714285714286, "no_speech_prob": 0.0012850427301600575}], "language": "en"}