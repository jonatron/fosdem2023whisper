WEBVTT

00:00.000 --> 00:26.240
So, hello everyone, we start with the next project, the next routing project, and I'm

00:26.240 --> 00:32.160
really pleased that Janik Fossil came all the way here from Montreal, Canada, and is

00:32.160 --> 00:36.320
going to present us Transit Network Planning for everyone.

00:36.320 --> 00:43.120
It's a great project to show how a research project is going into real life, and he just

00:43.120 --> 00:48.560
or the project just went open source last autumn, so we're really excited to see what

00:48.560 --> 00:52.800
you, yeah, what your project is about.

00:52.800 --> 00:57.800
Thank you.

00:57.800 --> 01:06.880
Bonjour, hi everyone, I'm really happy to, I always find a good excuse to come to Foss

01:06.880 --> 01:16.000
them, so, as Melia said, I'm from Montreal, I live in a, in a borough called Verdun, which

01:16.000 --> 01:22.400
is still in the island of Montreal, a little bit far from the subway, so I have to rely

01:22.400 --> 01:26.160
on buses to get everywhere on the network.

01:26.160 --> 01:32.400
Luckily Montreal is a well-grid, it's a grid-based city, so it's really easy to pass bus line

01:32.400 --> 01:37.600
about everywhere, but the problem I have, every time I try to get the bus, they all seems

01:37.600 --> 01:41.640
to be in sync, even if I have like three or four lines, I look at the schedule and there's

01:41.640 --> 01:46.480
like no bus available right now, and I ask myself, can I find a way to prove that and

01:46.480 --> 01:52.360
ask the city council or the transit agency, there's a problem there.

01:52.360 --> 01:57.080
Actually a couple of years back, I started about paying a couple of friends at the Polytechnic

01:57.080 --> 02:03.960
University on a software project called Transition, which is a transit planning tool, which is

02:03.960 --> 02:09.560
aimed for transit planner at first, but as much as you want to make a really good tool

02:09.560 --> 02:14.200
for transit planner, people are working in transit agency, our ultimate goal is to make

02:14.200 --> 02:19.080
the tool as easy to use for every citizen, everybody, to actually solve and understand

02:19.080 --> 02:24.520
what are the transit problem and come up with a solution that everybody can bring.

02:24.520 --> 02:28.760
We are really far from that goal, but we want to make it as easy as like your favorite

02:28.760 --> 02:34.360
city simulation game.

02:34.360 --> 02:42.000
So as I said, we are a research group based in Polytechnic Montreal called Cher Mobility.

02:42.000 --> 02:48.440
It's a mix of transit engineers who studied transit problem, mobility problem, but we

02:48.440 --> 02:54.040
have also other people like we have an economist, and we have a few software folks to help with

02:54.040 --> 02:57.680
the software development.

02:57.680 --> 03:02.200
Being an engineering school, we tend to work with applied solutions, so we develop a few

03:02.200 --> 03:04.040
tools over the year.

03:04.040 --> 03:08.440
We have Evolution, which is a travel survey platform, I'll talk a bit more later.

03:08.440 --> 03:13.880
We have a tool for congestion, dashboarding, tax dashboarding, and the one I'm talking

03:13.880 --> 03:19.240
about today, the tool about transit planning.

03:19.240 --> 03:26.640
So if you're a transit professional, your main day job is to actually draw new lines

03:26.640 --> 03:27.640
for your city.

03:27.640 --> 03:31.760
There's more analysis to that, but this is the main thing that the tool will provide

03:31.760 --> 03:32.760
you.

03:32.760 --> 03:39.680
You have the map of the city and you can just add new stops, you can add lines, draw where

03:39.680 --> 03:46.840
they go, or you can just import a GTS file for your network or export them as you go.

03:46.840 --> 03:53.920
This is Brussels, I just imported the whole city and can just go and try to work on that

03:53.920 --> 03:59.240
and see where are the problems or what we can improve.

03:59.240 --> 04:04.680
We have the concept of variant or scenario, so basically you want to do some studies and

04:04.680 --> 04:09.760
like maybe exclude some part of the line or exclude some mode of transportation, like

04:09.760 --> 04:14.440
some people only like buses, they just want to take bus, so you will study maybe your

04:14.440 --> 04:18.600
network that way.

04:18.600 --> 04:25.360
We have a schedule editor or viewer, basically you can just see all the schedule, you can

04:25.360 --> 04:26.360
edit it.

04:26.360 --> 04:31.760
We have a simple edition, like you can tell I have five bus for this line, it'll just

04:31.760 --> 04:36.040
like generate your schedule considering the time to go over the route, the dwell time

04:36.040 --> 04:38.880
at every stop in there.

04:38.880 --> 04:45.160
We are not aiming to make a tool to operate the network, like OSRD before, it's more tailored

04:45.160 --> 04:49.460
to like actual scheduling of your train in real life.

04:49.460 --> 04:53.080
We want to keep it more eye level, like what's the idea of the planning?

04:53.080 --> 04:57.320
If you are a small city, small transit agency, you can use that to do your operation, it's

04:57.320 --> 05:01.560
simple enough, it will give you some information, if you enter the schedule it will tell you

05:01.560 --> 05:06.160
how many buses you need, so we can give quick estimate, but we will not consider things

05:06.160 --> 05:11.520
like scheduling of staff, maintenance, another issue in there, so we want to keep it more

05:11.520 --> 05:16.760
eye level, at least at this point in time.

05:16.760 --> 05:24.840
So the first kind of analysis we do, and like the Lotus project presented before, is routing.

05:24.840 --> 05:29.440
So basically the same simple problem, you have a source, a destination, we allow it

05:29.440 --> 05:35.080
to specify a bunch of parameters to represent what Felix was talking about, different kind

05:35.080 --> 05:40.480
of needs for different kind of people, do you want to do multiple connection or not,

05:40.480 --> 05:46.960
are they older people, do you want to walk less, they walk slower, that kind of things.

05:46.960 --> 05:51.440
We can calculate like the best route or we can show you all the different alternatives.

05:51.440 --> 05:57.200
So if you want to go from the ground plus to here at 9am this morning to get in time,

05:57.200 --> 06:02.880
the best option you will give you is the 95 bus, but there was 17 other alternatives

06:02.880 --> 06:07.160
that was like in range to get here in time.

06:07.160 --> 06:11.840
We show you transit, we show you walking, we are walking on the modes, like adding cycling

06:11.840 --> 06:16.320
or adding like, fix parking like park and ride, there is a lot of like complicated problem

06:16.320 --> 06:22.600
to combine network like cycling and ride, there is a lot of difficulty in there and

06:22.600 --> 06:28.160
I am really looking at like what do you do if you can save us some time to do that there.

06:28.160 --> 06:33.080
I was talking about variant, I am sometime a bus knob, I take the bus a lot at home,

06:33.080 --> 06:38.800
so when I go, especially on this side of the Atlantic I try to stick to rails, so I excluded

06:38.800 --> 06:46.920
all the buses and this is like the best route if I want to keep on metal road.

06:46.920 --> 06:53.880
The second kind of allow this really use in transit planning is the accessibility map.

06:53.880 --> 07:01.880
The idea there is to specify a point in the region and it will show you the area you can

07:01.880 --> 07:04.320
reach in a specific amount of time.

07:04.320 --> 07:10.760
In this example I show you like from this place what you can reach in like 15, 30 and

07:10.760 --> 07:18.120
45 minutes, you can specify this area and the main interest of the tool you can do like

07:18.120 --> 07:23.400
one point at a time, if you want to do a real analysis you will want to do a lot of them

07:23.400 --> 07:25.360
and that is what the tool provides.

07:25.360 --> 07:32.640
Also for the routing part you can just upload a file of like origin for the accessibility

07:32.640 --> 07:38.480
map or origin destination for the routing and then you can do like real life analysis

07:38.480 --> 07:43.960
of like all your movement in a day and see what's best in your network.

07:43.960 --> 07:48.920
Every time you will get some, a bunch of statistics for the accessibility map the interesting part

07:48.920 --> 07:53.920
is like how many square kilometers you can reach in a specific time.

07:53.920 --> 08:00.080
If we use the same variant excluding the bus network you see you reach a little bit less

08:00.080 --> 08:04.280
if you stick to rail and you have about like 10 square kilometers less.

08:04.280 --> 08:09.440
So that's an interesting thing to analyze, like if you have some new lines you do the

08:09.440 --> 08:13.480
analysis with the new line without the line you compare the results in there.

08:13.480 --> 08:17.840
We are currently working on new views like to especially do this diff and so that by

08:17.840 --> 08:22.400
having to look at the map yourself we're going to show you like okay this is the difference

08:22.400 --> 08:30.320
between the two analysis that you did and the statistic difference between those two

08:30.320 --> 08:35.120
are a solution that you are exploring for your network.

08:35.120 --> 08:41.280
A third analysis that we do we have a simulation and optimization algorithm.

08:41.280 --> 08:43.360
It's based on a genetic algorithm.

08:43.360 --> 08:47.560
So basically the idea you can provide like either your existing network, add a bunch

08:47.560 --> 08:52.880
of new lines or create some random lines in your network and using some simulated trips

08:52.880 --> 08:57.720
or actual trips if you have the data there we'll try to find the best route, the best

08:57.720 --> 09:03.720
line to put in your network to reduce the overall transit time for your population.

09:03.720 --> 09:07.800
You can keep other parameters like I want to keep the cost constant to what I have right

09:07.800 --> 09:13.520
now so I will not add new trains, new buses or you can give it like okay I have some extra

09:13.520 --> 09:18.640
budget I can do like 10% more in there.

09:18.640 --> 09:24.280
For some of the city we studied we showed that we can by using that kind of algorithm

09:24.280 --> 09:28.520
reduce the overall transit time of user by about 15%.

09:28.520 --> 09:35.920
Some user will get worse but most of the user will have better time.

09:35.920 --> 09:39.600
And we did that for real for some cities.

09:39.600 --> 09:40.840
This is Ramanville.

09:40.840 --> 09:47.080
It's a town about 80,000 people sitting mostly between Montreal and Quebec City and they

09:47.080 --> 09:51.200
came to us with their actual network and they were like yeah it doesn't serve our user

09:51.200 --> 09:52.200
well.

09:52.200 --> 09:53.400
We want to have something better.

09:53.400 --> 09:57.280
So we just ran the algorithm and give them that.

09:57.280 --> 10:02.640
So if you compare quickly you see like the same overall idea with the lines.

10:02.640 --> 10:08.240
We started with some what they have but we explored some space around that.

10:08.240 --> 10:11.360
For this case we draw the line ourselves.

10:11.360 --> 10:17.120
We have a couple of students working on algorithm to just generate new line automatically instead

10:17.120 --> 10:21.440
of having you and tried to add the new idea there.

10:21.440 --> 10:28.200
So this is actually being implemented right now as a new network for that city.

10:28.200 --> 10:35.320
Another real study that we did, there's an idea to add a new subway line that would

10:35.320 --> 10:41.040
go diagonally in Montreal, a project that we called the pink line.

10:41.040 --> 10:46.840
Might not go but there's a lot of idea floating around but the city and the government came

10:46.840 --> 10:51.720
to us like okay can you show us what would be the impact of adding that lines to the

10:51.720 --> 10:52.720
city.

10:52.720 --> 10:57.640
So basically using the batch routing capability of the tool and using actual travel survey

10:57.640 --> 11:00.680
data from a previous study.

11:00.680 --> 11:06.520
We are able to simulate all the movement of people with the line and without the line

11:06.520 --> 11:11.440
and we've seen some interesting result that overall adding that line will reduce transit

11:11.440 --> 11:16.080
time by about 5% for the whole population.

11:16.080 --> 11:19.120
Interestingly we've shown that the people who would get the most benefits from that

11:19.120 --> 11:21.640
line would be people who actually use car right now.

11:21.640 --> 11:29.760
So hopefully adding that would shift some mode of transportation from car to some other

11:29.760 --> 11:32.520
better transit solution.

11:32.520 --> 11:38.040
This is the overall map of the city with like that project and all the currently project

11:38.040 --> 11:42.040
being constructed in Montreal and in blue we show like we show where most people would

11:42.040 --> 11:54.600
get at least like a two-minute improvement in their transit in average with a new city.

11:54.600 --> 12:00.640
So all is the tool build basically it's a web application, it's run on Node.js.

12:00.640 --> 12:05.200
We mostly write, we convert all the code to TypeScript to have at least something that

12:05.200 --> 12:08.440
is not too awful to maintain.

12:08.440 --> 12:13.880
All component in C++ and Rust in the back end we try to move more and more of the component

12:13.880 --> 12:19.680
in Rust just to make improve the maintainability and it's all running on top of PostGIS and

12:19.680 --> 12:22.360
PostGeshQL.

12:22.360 --> 12:30.400
For the basic routing as most people use OpenSuite.NET data we use OSRM to do the basic

12:30.400 --> 12:35.280
route on the road unlike pedestrian path.

12:35.280 --> 12:40.000
We didn't modify the basic profile to have more accurate results especially for buses

12:40.000 --> 12:41.760
in cities.

12:41.760 --> 12:46.080
You want to be more accurate because a bus is not a car, a bus cannot go on every street

12:46.080 --> 12:52.160
necessarily or cannot turn as easily as other cars so we have some specific mode for that.

12:52.160 --> 12:56.120
Same with MOTIS we actually looking at also looking at Valhalla maybe it could give us

12:56.120 --> 13:01.480
some improvement in our operation.

13:01.480 --> 13:05.640
For the transit part we develop a tool car, TR routing, it's a standalone component also

13:05.640 --> 13:07.200
available.

13:07.200 --> 13:12.360
We implemented the connection scale algorithm, reference to the paper there from some people

13:12.360 --> 13:16.640
at the car street investment technology.

13:16.640 --> 13:21.880
Really efficient algorithm, we add a transit, a trip-based algorithm before but we used

13:21.880 --> 13:22.880
that.

13:22.880 --> 13:27.640
It's mostly in C++ at this point, wanted to convert to Rust but maybe I can just use

13:27.640 --> 13:34.640
MOTIS in there that part and don't have to worry about it.

13:34.640 --> 13:39.600
But if we want to do planning we have to do some data, like if you're a transit agency,

13:39.600 --> 13:44.320
if you're a city government you have that already probably but if you're a citizen you

13:44.320 --> 13:47.560
need to find that data somewhere.

13:47.560 --> 13:53.600
Luckily most of what we need to do the planning is available in OpenSuite.NET.

13:53.600 --> 13:59.640
The basic part of the road network, all the pedestrian path, rail line, it's mostly all

13:59.640 --> 14:00.640
in there.

14:00.640 --> 14:04.880
So you can go around, use the SRM, do some quick planning there, you have everything

14:04.880 --> 14:05.880
that you need.

14:05.880 --> 14:12.280
If you want to do population and trip-based analysis you will need to simulate a population.

14:12.280 --> 14:15.280
Even there OpenSuite map can help us.

14:15.280 --> 14:21.280
If you have all the building drawn on the map you can extrapolate a little bit your population.

14:21.280 --> 14:24.400
If it's residential building you know some people will probably live there.

14:24.400 --> 14:28.480
You can see where the population is debuted in the city.

14:28.480 --> 14:35.960
And on the other side, if you have the POI, the point of interest, all the other building,

14:35.960 --> 14:41.800
all the shops, all the school, all the like industry, so you know where people usually

14:41.800 --> 14:42.800
go in the day.

14:42.800 --> 14:47.720
So we can just simulate what is that in our general algorithm, you actually use that kind

14:47.720 --> 14:55.080
of information and just create trips to do the analysis in there.

14:55.080 --> 15:02.280
OpenSuite map is pretty good but it's not always good enough for what we need.

15:02.280 --> 15:06.560
We estimate we have to spend a little bit of time validating the data to make sure we have

15:06.560 --> 15:07.560
the accurate result.

15:07.560 --> 15:11.080
You can use as is but you might get error in there.

15:11.080 --> 15:16.320
For like a dense urban environment like Montreal, like Brussels, we spend about 25 hours per

15:16.320 --> 15:19.800
square kilometer doing the validation.

15:19.800 --> 15:25.360
For suburban environment, 10, maybe 10 hours per square kilometer in the rural side, maybe

15:25.360 --> 15:26.640
a couple of hours.

15:26.640 --> 15:30.280
The good thing is as long as when it's done, when it's done, you just have to make sure

15:30.280 --> 15:37.200
new exit don't break everything but the information will be there.

15:37.200 --> 15:39.600
What do we look at when we do the validation?

15:39.600 --> 15:41.160
What are the important things we need?

15:41.160 --> 15:45.800
The first part is make sure we have all the link between the pedestrian network, the cycling

15:45.800 --> 15:48.680
network with the rest of the road network.

15:48.680 --> 15:55.080
If you have things like the tram stop near the ULB, there's a lot of pedestrian path

15:55.080 --> 15:56.400
going in and out.

15:56.400 --> 16:00.800
If we didn't have connection well between all those time, the routing algorithm would

16:00.800 --> 16:06.160
not be able to just get you from the tram network to the campus or we'll find a route

16:06.160 --> 16:07.160
that goes around.

16:07.160 --> 16:10.760
It's really important to make sure you have all the correct access tag so we have to go

16:10.760 --> 16:15.960
look at everything in that and even add maybe some connection between street to go around

16:15.960 --> 16:18.240
in there.

16:18.240 --> 16:21.080
We'll usually split the sidewalk and the cycling path.

16:21.080 --> 16:24.920
I know it's a little bit a debate in the open stream map community, should you split

16:24.920 --> 16:28.520
the sidewalk or just use the sidewalk tag?

16:28.520 --> 16:33.760
But at least for us, we get a really more accurate result if we split the sidewalk.

16:33.760 --> 16:39.600
For big street, having a few meters difference between the middle of the road and the sidewalk

16:39.600 --> 16:42.800
that can be more easy to go around.

16:42.800 --> 16:46.520
We also know the quality of the road there.

16:46.520 --> 16:48.600
We don't use that information yet in our routing.

16:48.600 --> 16:53.040
We want to get there and be able to tell people, yeah, this route, if you walk on that street,

16:53.040 --> 16:55.080
there's a large, large, large wall on the street.

16:55.080 --> 16:58.960
It's more fun to walk there versus some of the road.

16:58.960 --> 17:06.200
Whenever I plan from my place to the subway, I always take the road that the tool proposed

17:06.200 --> 17:09.000
me because it's more fun to go on that other road because there's shops, there's more

17:09.000 --> 17:12.720
life, so it's more interesting.

17:12.720 --> 17:17.280
The other thing, we will add doors to big buildings, like big building, like university

17:17.280 --> 17:18.720
like that.

17:18.720 --> 17:23.280
If we use the center, the centroid of the building, we might route you on the completely

17:23.280 --> 17:24.880
other side of the building.

17:24.880 --> 17:28.920
If it's a big one, maybe that will end up being a different bus completely.

17:28.920 --> 17:31.320
We need to make sure to know where are the main entrance.

17:31.320 --> 17:36.240
We're going to go and add that, like big shopping center, things like that, industry

17:36.240 --> 17:39.080
big warehouses.

17:39.080 --> 17:44.600
We're going to spend time just mixing the street, our well-aligned, the one-way out

17:44.600 --> 17:48.640
there that will be useful to ride cars and buses.

17:48.640 --> 17:49.720
Make sure we have the speed limit.

17:49.720 --> 17:54.680
We can consider that in the transit time of a vehicle.

17:54.680 --> 17:58.760
Since we have OpenStreetMap open, we'll just try to add all the point of interest that

17:58.760 --> 18:04.280
we can find, and at least the name and the type that will help the algorithm in there.

18:04.280 --> 18:08.360
We can go further when we have time.

18:08.360 --> 18:13.760
We can have reserve line for buses.

18:13.760 --> 18:17.080
We would like to automate a little bit more of that with using MapRulet or the task manager

18:17.080 --> 18:19.400
from the OpenStreetMap community.

18:19.400 --> 18:22.680
We are not there yet, but it's going there.

18:22.680 --> 18:25.920
For the population, I've talked a little bit about the OSM building.

18:25.920 --> 18:28.680
What we tend to use a lot is the land use register.

18:28.680 --> 18:33.360
A lot of government will provide that for free, or at least you can request information

18:33.360 --> 18:34.360
to that.

18:34.360 --> 18:37.960
Basically, the information about all the building in a specific area.

18:37.960 --> 18:39.200
You know the building type.

18:39.200 --> 18:46.640
You can find out the population on there or the interest, where people want to go in there.

18:46.640 --> 18:50.280
You might want to use the census information that most government will provide.

18:50.280 --> 18:54.920
The difficulty there is the general area is really big.

18:54.920 --> 19:00.160
It will often cover multiple blocks in the city, so it will cover multiple bus lines

19:00.160 --> 19:01.160
or stops.

19:01.160 --> 19:04.760
It won't be hard to find exactly where some people would come from.

19:04.760 --> 19:09.840
We are trying to work on some ideas, some algorithm to spread the population in some

19:09.840 --> 19:16.120
sensible way to be able to simulate based on that, but it's still a work on progress.

19:16.120 --> 19:23.920
Lastly, if you have travel surveys, and if you're not familiar to that idea, most of

19:23.920 --> 19:29.880
the agency will spend time once in a while to just go and ask most users where they are

19:29.880 --> 19:33.960
coming from, where they are going, why they are traveling, and they're going to do that

19:33.960 --> 19:39.440
by phone, sending mail, or just stop people on the network and ask them where they are

19:39.440 --> 19:40.440
going.

19:40.440 --> 19:41.440
That's really useful information.

19:41.440 --> 19:45.840
You can take that and do an exact simulation of your specific day, but that data is not

19:45.840 --> 19:46.840
generally available.

19:46.840 --> 19:49.840
If you're a researcher, you can have access to it, but a general citizen will not have

19:49.840 --> 19:50.840
that.

19:50.840 --> 19:55.640
That's why we try to get the population and just simulate that kind of movement there.

19:55.640 --> 20:00.520
It will be interesting to know to get at some point, if we can anonymize the information,

20:00.520 --> 20:09.240
use the same idea, spread the population somehow, and make that private-free in there.

20:09.240 --> 20:12.400
I talked about the evolution tool earlier.

20:12.400 --> 20:17.760
It's a web-based kind of survey platform that can be used for that, which is all the plug-ins

20:17.760 --> 20:23.360
to actually ask people about where they're going, where they're coming from, more specifically

20:23.360 --> 20:31.520
like from a date or survey monkey kind of thing.

20:31.520 --> 20:34.840
As we're talking, we also research groups, so there's a couple of challenges to bring

20:34.840 --> 20:36.960
stuff to the real world.

20:36.960 --> 20:42.240
How do we make sure the things we do are actually useful?

20:42.240 --> 20:44.800
The first thing would be the code is open source.

20:44.800 --> 20:48.960
As most research, I really strongly believe everything should be open source.

20:48.960 --> 20:53.400
Trying to get the student to work in the open source would be a good first step.

20:53.400 --> 20:54.400
It's not there yet.

20:54.400 --> 20:59.360
A lot of people want to go as fast as they can and just finish their thesis and give

20:59.360 --> 21:03.520
us the code at the end that we have to, as a research professional, do a lot of cleanup

21:03.520 --> 21:07.720
and make sure it works for everybody, but it would be a good way.

21:07.720 --> 21:11.560
The other thing we do is we make sure we partner with actual transit agency.

21:11.560 --> 21:16.080
Like in Quebec, we work with almost all the main transit agencies for a major city.

21:16.080 --> 21:18.440
We actually have them use the tool, give us feedback.

21:18.440 --> 21:24.280
We sit with them and ask them what kind of study do you do and sometimes we do a batch

21:24.280 --> 21:28.000
routing thing and then we take the CSV file and then we do some Excel and then we do some

21:28.000 --> 21:31.960
Python script and be like, okay, what if we just give you a button that would just give

21:31.960 --> 21:37.360
you that and have a quick plug-in to open in QGIS?

21:37.360 --> 21:44.680
We try with those ideas in there.

21:44.680 --> 21:48.680
As I said, we are far from done.

21:48.680 --> 21:50.400
We have currently 450 open issues.

21:50.400 --> 21:54.600
Not all bug reports, yeah, there's some, but stuff like improving the UI, implementing

21:54.600 --> 22:02.520
new algorithms, trying to integrate some of the tools in there, but yeah, it's a work

22:02.520 --> 22:05.880
in progress and we always open to review pull requests.

22:05.880 --> 22:11.680
As for my original problem, I ran a batch on a batch accessibility map, so basically

22:11.680 --> 22:18.080
from my place every five minutes, how far could I reach in the city for like 60 minutes.

22:18.080 --> 22:22.280
I got this really big association, that kind of showed me there's some kind of a problem

22:22.280 --> 22:28.360
with the schedule, especially around this 1030 mark where I dip about by almost 15 square

22:28.360 --> 22:29.360
kilometers.

22:29.360 --> 22:34.440
I remember every time I tried to go out of the house at that time, which is a good time

22:34.440 --> 22:40.560
to start working, 1030, and there's no bus available.

22:40.560 --> 22:44.080
So I think there's a problem there, it's not highly scientific so far, I'm just like

22:44.080 --> 22:49.480
a computer engineer trying to fake myself into transit engineering, but I think there's

22:49.480 --> 22:51.960
a problem there.

22:51.960 --> 22:53.480
So that's it, thank you.

22:53.480 --> 23:15.760
If you have any questions, do you think it would make sense to use that same tool to

23:15.760 --> 23:23.880
work at a different scale, for example, drawing train lines at the scale of a country, for

23:23.880 --> 23:26.360
example, would it make sense to do a transition scale?

23:26.360 --> 23:31.240
So the question is, does it make sense to work at the higher scale, like country level?

23:31.240 --> 23:32.240
I think so.

23:32.240 --> 23:36.960
I think right now the performance of the tool might not be there yet.

23:36.960 --> 23:42.880
We kind of tend to, when I do work on Montreal as a world, that's starting to things getting

23:42.880 --> 23:46.680
slow, we are hitting limits, so at this point we are trying to increase the scalability

23:46.680 --> 23:51.120
of that, and we definitely want to go at that level, especially at what depends on the size

23:51.120 --> 23:55.880
of the country, like Canada, why it might be a bit too big, but at least province level,

23:55.880 --> 23:58.880
we definitely want to be able to do that.

23:58.880 --> 24:14.880
I think that the first for me, there are two main problems in Brussels, is the transportation

24:14.880 --> 24:39.880
of people, and I think it's important to inform the people, which go with all mode of transportation,

24:39.880 --> 24:50.880
with indication when is the next bus, when is the next trolley, and when is the next train,

24:50.880 --> 24:59.880
and so on, also for bicycle users to pay in the train, because it's expensive, it will

24:59.880 --> 25:09.880
have to go with the train, it's more bicycle, not for me, for computer, it should be good

25:09.880 --> 25:20.880
to have an announcement in every place, in the motorways, so in the plane, in the trains,

25:20.880 --> 25:32.880
and so it can be so computerized.

25:32.880 --> 25:36.880
Yeah, it's interesting comment, and yeah, that's where we want to make the tool for people,

25:36.880 --> 25:40.880
but I know a lot of politicians, and I want to make the tool as good for them to actually

25:40.880 --> 25:44.880
be able to try it by themselves and understand the problem.

25:44.880 --> 25:49.880
We often have people come to Catherine, which is the head of the research lab, and like

25:49.880 --> 25:54.880
they asked them for studies, but they are not always implemented, but if people can just

25:54.880 --> 25:59.880
see for themselves what would be the improvement, that could be interesting in there.

25:59.880 --> 26:02.880
Maybe one last question, it's short, very short.

26:02.880 --> 26:04.880
Yeah, very short one.

26:04.880 --> 26:29.880
That's the comment, it doesn't make sense to actually sort of like adapting the network

26:29.880 --> 26:33.880
to the city, how can we adapt the city to the network, and where can we build new development

26:33.880 --> 26:37.880
and new residential plan, new residential area.

26:37.880 --> 26:40.880
That's a really interesting idea, we never thought of that, but maybe there's something

26:40.880 --> 26:45.880
we can find a way to implement and see where there's potential to redevelop the city maybe

26:45.880 --> 26:48.880
and increase density in some places.

26:48.880 --> 27:04.880
Thank you for your time.
