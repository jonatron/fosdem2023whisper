{"text": " Okay, continuing with the immigration topic. There is a relatively new tool called Open Rewrite, and you're going to hear all about it from Tim. Hi. It's been mentioned a few times before, so I hope I can live up to the hype. My name's Tim Tobake, and I'm a staff software engineer at Moderna. I recently started just the start of this month, and before that I was a migration engineer as a consultant for five years. So what that means is I would walk into organizations, familiarize myself with all the old technologies that they were still using, and then hack away at lifting all those services up to the latest versions of Java and Sprint. I would frequently find versions that up to five to ten-year-old versions of Java or JUnit or Sprint, which is not ideal from either a securities perspective or even a developer experience point of view. Initially I would migrate these services by hand, or gradually introduce more and more force automations. But then at the end of the early last year, I discovered Open Rewrite, and Open Rewrite is a tool that promises to make light work of all such migrations. I got so excited by this technology that I started to contribute and even present about this on conferences, and then eventually quit my job to work on Open Rewrite full-time. So after a nice sabbatical, that brings us here today. Perhaps you've faced some of the same challenges that I did. At a conference like this, you'll hear all about new framework and language features. Yeah, back at work, you've stuck to using Java 8 and JUnit 4. And migrating all of that by hand can seem daunting, if it ever gets priority. I want to show you how easy it can be to perform major migrations. That way you too can adopt all the latest language and framework features. And it can be fun to adopt new language features such as records and text blocks. But you don't want to adopt these features manually, you're only on a single project. Instead we will look into automations and make all projects feel like new again, so you can benefit from JGM, language and framework improvements. Here's a very brief overview of the types of migrations I'll be talking about. Likely you already performed some of these migrations in the past, and other migrations are always just around the corner. If you look back over time, there's a near constant stream of worthwhile improvements to pick up. And I like the challenge, I still get excited whenever a new version comes out. I just don't like the repetitive elements that come with upgrading. And if you try to keep up by hand, you will hardly get anything else done, especially as microservices these days mean you're not just upgrading once, but dozens of time. Automation may then be the only option, especially for companies using thousands of services. Through Open Rewrite you can now migrate between versions of Java and Spring with a simple command. You can even migrate between frameworks, such as from JUnit to AssertJ, and from Java.e to Spring. In this talk, I'll tell you all about Open Rewrite, how it came about, how it works, and what you can do with it. And finally, we'll briefly look at who is developing these recipes and how to apply them to open source projects. Open Rewrite was developed in Netflix, initially to aid in the migration of an internal logging framework to AssertJ. You can probably imagine that any logging framework is going to be pervasive throughout an organization, so even consider migrating using a perfectly accurate automation. So they, especially when usage is spread across hundreds of services, so they develop a parser to accurately read Java and turn the source code into a lossless semantic tree. This model can then be modified to replace the old learning statements with calls to AssertJ. Next the migrated model is running out as close as possible to the original source code. That way the applied changes are minimal, leaving the surrounding code untouched. Later, the same developers moved on to work on Spinnigar, and while trying to onboard teams and organizations there, they found that teams often struggled with the same outdated languages and framework. To help teams adopt the latest versions, to help teams adopt the latest versions, they applied a different set of migration recipes, through the same lossless semantic tree parser. Let me just get this one on. This allowed them to quickly reduce this technical depth and bring teams from Spring Book 1 to Spring Book 2 and from JUnit 4 to JUnit 5. The project has since been open sourced, with the company behind it committed to making all recipes available on the Apache license for open source software. The initial focus for open rewind is on the Java virtual machine languages and surrounding technologies. There are parsers, for instance, for Java, Groovy, Dunl and XML, and these in turn unlock support for builders such as Maven and Gradle, and libraries such as JUnit, AssertJ and Guava. Ultimately refactoring entire frameworks and platforms is supported, with recipes available for application frames such as Micronaut, Barkers and Spring. Open Rewrite is not the only parser capable of understanding and manipulating Java. However, three features set Open Rewrite apart from the competition. The first is to focus on exact type attribution. By having the exact type available on any tree element, we can be sure to only manipulate exact matches. The second characteristic that sets Open Rewrite apart is the form of preservation. The parser not only takes into account the functional code, but also the surrounding code style and implementation. This allows us to accurately reproduce your source code regardless of further changes. Changes made through Open Rewrite look just like our colleague worked on your code. And finally, the serialization format ensures you're able to query and refactor your code faster and at scale. Together, these features make Open Rewrite exceptionally good at safe code transformations, especially as the changes are minimally invasive and guaranteed to work in part of the due to the do no harm mentality. By manipulating the full lossless semantic tree, Open Rewrite can far exceed simple search and replace operations. With the full lossless semantic tree built, we need to instruct Open Rewrite what operations to apply and where in your code. Recipes are highly defined, such as a group of search and refactoring operations. Together they accomplish a higher level task, such as a framework migration. Recipes can consist of a single standalone operation, or be linked together with other recipes. Open Rewrite comes with a large collection of fine-grained recipes out of the box that can be combined for common migration steps. You can think of these as LEGO building blocks, ready to be applied with the proper parameters. There are hundreds of these building blocks to, for instance, change types, change methods, change arguments, manipulate properties, and alter dependencies of plugins. Full recipes are implemented as Java visitors that first match and then modify elements of the lossless semantic tree. There are plenty of examples available, but notice that you only need a dedicated Java visitor, but none of the existing recipes can only really achieve your goals. Typically, you can get very far, only configuring, combining, applying existing recipes through a YAML description form. Examples then group together these fine-grained recipes into more coarse-grained, application-specific recipes. There are modules, for example, for loading frameworks, testing frameworks, and application frameworks, such as Spring. Think of these as LEGO sets, with built plans for common migrations ready to be applied. In my opinion, the lossless semantic tree, combined with a large collection of fine-grained recipes, is what sets open-grained apart from other similar tools, such as error-prones and repositories. Now, I want to show you how migration recipes are configured in OpenRero. Let's briefly look at a migration from JUnit4 to JUnit5. I want you to imagine the steps of what we need after such a migration. You've likely applied some of those steps already in the past. Some others should have to update the test annotations. But you would also have to update the assertions, and sometimes the argument order would have to update all imports, and they have to update any test rules, and that's just getting started. Notice how each of these steps is reflected as a separate recipe in this YAML configuration form. Some refer to and prefer the NERC steps, such as the change-type recipe. Others are implemented as an imperative set, a dedicated Java visitor that changes the lossless semantic tree. All these steps combine to achieve a complete JUnit5 migration. This is a common pattern with OpenRero. Large migrations are broken up into small, reusable steps. When we run this recipe, we get predictable results. Our imports are replaced, as we would expect, and our Makito runner is replaced into using the extension. Life cycle annotations, such as that before, are correctly replaced. But interestingly, we can see how OpenRero shines through when it comes to comparing expected exceptions. Having the full power of a lossless semantic tree, combined with a Java visitor, allows us to adopt assert throws. Since these types of changes that would not be possible with a regular expression approach. Running migration recipes is fairly straightforward. First, you apply a built-in plugin for OpenRero. I've used Maven in my example, but Gradle works just as well. Then depending on the changes you want to make, you add a dependency on the respective OpenRero module. Lastly, you run the OpenRero plugin with the migration recipe that you want to execute. The command scene here will migrate an application from Spring Boot 1.5 to the latest Spring Boot 2.7 branch, and we're also working on a 3.0 migration. This migration works all the way back to Spring Boot 1.5. They will update dependencies, properties, and deprecations from any older versions, and it includes the JU5 migration we've seen before, as well as any Spring-specific test constructs. Now that we've seen how OpenRero works, let's have a look at what you can do with it. Obviously, but now we've seen it is well-suited to migrations. You've mostly seen migrations from one version to another, but you can also migrate from one framework to another. If you want to switch from large for J to as a large for J, you can, and the same thing if you want to switch between JUnit and AssertJ, and even larger migrations are in development. Another application is fixing static analysis findings. A large collection of checkstiles, sonar, and security findings are supported to allow you to reduce your technical debt in minutes. Finally, there's a whole class of recipes to enforce a code style, and rather than merely apply a formator, these style recipes go a step further to actually change your code. This ensures your code style is consistently from project to project. In addition to what's already available, it's fairly easy to add custom migration recipes specific to your project. Now that we've seen how it works and what you can do with it, let's briefly look at what is still to come. As you've seen, OpenRemo has dedicated parsers for multiple languages already, but we have some catching up to do still. We are working on a parser for both Java 18 and up and Kotlin, but note that you're perfectly able to run on Java 17, but you cannot yet migrate to some of the new language features. The interesting thing about Kotlin is going to be that the Java migration recipes that we have will also just work, even though the languages look very different. Another subject we're working on is data flow analysis, and this not only takes into account the individual code statements, but also how data flows throughout your application. This will allow recipes to, for instance, add immutability or dedicated security fixes. Another interesting development is the Spring Boot Migrator project from VMR. It builds upon OpenRemo to migrate projects towards Spring from other frameworks. It takes a slightly different, more interactive approach, which will be coming handy when it comes to the Spring Boot 3 migration. All these features are inactive development. It's not yet clear when you can use this in a production setting, but it's interesting developments nonetheless. There's a last subject I want to tell you a bit about the company behind OpenRemo. As I said before, Moderna has committed to making all recipes available open source. Our focus is on applying recipes at scale. Through Moderna, clients can discover code patterns across an entire organization and target these for transformation. And even if you're not a paying customer, you can still use the web interface to browse available recipes and even apply them to open source projects. This can be a great way to start contributing back to open source software. And if you find any of the migration steps are missing, OpenRemo itself is very accepting of new contributions. The community plays a large role in the development of new recipes. Now, as you could probably tell from my email address, we're not exactly a big company. But we're pretty well connected in the broader Java community. Through collaborations, other companies contribute migration recipes for their remotes. And this ensures their users are able to migrate easily and timely with new releases. And if you maintain or merely enjoy your particular library or framework, you can help other users by providing migration recipes. So with that, we are getting near the end of my presentation. Before I send you away, I want to recommend a few resources where you can learn more. There's extensive documentation available on OpenRemo. Development is all on GitHub with new suggestions typically picked up with surprising speed. And as you've all seen, it's quite easy to contribute minor migration steps. If you want to try some recipes quickly on OpenSource software, have a look at public.moderna.io. And if you have any questions, you can reach out on our public slide or via email. And finally, if you would like to play around with the months you've seen before, I've written a blog post to accompany this presentation. This blog post migrates an old Spring Path Clinic branch from Spring Boot 1.5 to Spring on Java 8 to Spring Boot 2.x on Java 17. That way you can play around with your commands and see the changes made every step. For your own projects, I recommend you start with the testing framework migrations. They're an easy way to gain confidence in the tool and see what it can do for your project. And with that, I'd like to thank you for your attention. What's also really great about Tim's story is that he was enthusiastic about a project. He started contributing to it and now he was offered a job when he's working at the company behind this project. It's really the textbook story of starting contributing and then getting paid to do that and joining the company behind the project. Well, thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 9.92, "text": " Okay, continuing with the immigration topic.", "tokens": [1033, 11, 9289, 365, 264, 13554, 4829, 13], "temperature": 0.0, "avg_logprob": -0.27149322421051736, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.4966912865638733}, {"id": 1, "seek": 0, "start": 9.92, "end": 14.56, "text": " There is a relatively new tool called Open Rewrite, and you're going to hear all about", "tokens": [821, 307, 257, 7226, 777, 2290, 1219, 7238, 497, 1023, 35002, 11, 293, 291, 434, 516, 281, 1568, 439, 466], "temperature": 0.0, "avg_logprob": -0.27149322421051736, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.4966912865638733}, {"id": 2, "seek": 0, "start": 14.56, "end": 15.56, "text": " it from Tim.", "tokens": [309, 490, 7172, 13], "temperature": 0.0, "avg_logprob": -0.27149322421051736, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.4966912865638733}, {"id": 3, "seek": 0, "start": 15.56, "end": 16.56, "text": " Hi.", "tokens": [2421, 13], "temperature": 0.0, "avg_logprob": -0.27149322421051736, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.4966912865638733}, {"id": 4, "seek": 0, "start": 16.56, "end": 22.52, "text": " It's been mentioned a few times before, so I hope I can live up to the hype.", "tokens": [467, 311, 668, 2835, 257, 1326, 1413, 949, 11, 370, 286, 1454, 286, 393, 1621, 493, 281, 264, 24144, 13], "temperature": 0.0, "avg_logprob": -0.27149322421051736, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.4966912865638733}, {"id": 5, "seek": 0, "start": 22.52, "end": 27.560000000000002, "text": " My name's Tim Tobake, and I'm a staff software engineer at Moderna.", "tokens": [1222, 1315, 311, 7172, 26350, 619, 11, 293, 286, 478, 257, 3525, 4722, 11403, 412, 6583, 22250, 13], "temperature": 0.0, "avg_logprob": -0.27149322421051736, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.4966912865638733}, {"id": 6, "seek": 2756, "start": 27.56, "end": 33.36, "text": " I recently started just the start of this month, and before that I was a migration engineer", "tokens": [286, 3938, 1409, 445, 264, 722, 295, 341, 1618, 11, 293, 949, 300, 286, 390, 257, 17011, 11403], "temperature": 0.0, "avg_logprob": -0.22034870705953458, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.00033807847648859024}, {"id": 7, "seek": 2756, "start": 33.36, "end": 36.839999999999996, "text": " as a consultant for five years.", "tokens": [382, 257, 24676, 337, 1732, 924, 13], "temperature": 0.0, "avg_logprob": -0.22034870705953458, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.00033807847648859024}, {"id": 8, "seek": 2756, "start": 36.839999999999996, "end": 44.12, "text": " So what that means is I would walk into organizations, familiarize myself with all the old technologies", "tokens": [407, 437, 300, 1355, 307, 286, 576, 1792, 666, 6150, 11, 4963, 1125, 2059, 365, 439, 264, 1331, 7943], "temperature": 0.0, "avg_logprob": -0.22034870705953458, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.00033807847648859024}, {"id": 9, "seek": 2756, "start": 44.12, "end": 50.56, "text": " that they were still using, and then hack away at lifting all those services up to the", "tokens": [300, 436, 645, 920, 1228, 11, 293, 550, 10339, 1314, 412, 15798, 439, 729, 3328, 493, 281, 264], "temperature": 0.0, "avg_logprob": -0.22034870705953458, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.00033807847648859024}, {"id": 10, "seek": 2756, "start": 50.56, "end": 54.120000000000005, "text": " latest versions of Java and Sprint.", "tokens": [6792, 9606, 295, 10745, 293, 7702, 686, 13], "temperature": 0.0, "avg_logprob": -0.22034870705953458, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.00033807847648859024}, {"id": 11, "seek": 5412, "start": 54.12, "end": 60.72, "text": " I would frequently find versions that up to five to ten-year-old versions of Java or", "tokens": [286, 576, 10374, 915, 9606, 300, 493, 281, 1732, 281, 2064, 12, 5294, 12, 2641, 9606, 295, 10745, 420], "temperature": 0.0, "avg_logprob": -0.2519768524169922, "compression_ratio": 1.5147058823529411, "no_speech_prob": 6.657064659520984e-05}, {"id": 12, "seek": 5412, "start": 60.72, "end": 66.56, "text": " JUnit or Sprint, which is not ideal from either a securities perspective or even a developer", "tokens": [508, 12405, 270, 420, 7702, 686, 11, 597, 307, 406, 7157, 490, 2139, 257, 38597, 4585, 420, 754, 257, 10754], "temperature": 0.0, "avg_logprob": -0.2519768524169922, "compression_ratio": 1.5147058823529411, "no_speech_prob": 6.657064659520984e-05}, {"id": 13, "seek": 5412, "start": 66.56, "end": 69.64, "text": " experience point of view.", "tokens": [1752, 935, 295, 1910, 13], "temperature": 0.0, "avg_logprob": -0.2519768524169922, "compression_ratio": 1.5147058823529411, "no_speech_prob": 6.657064659520984e-05}, {"id": 14, "seek": 5412, "start": 69.64, "end": 74.67999999999999, "text": " Initially I would migrate these services by hand, or gradually introduce more and more", "tokens": [29446, 286, 576, 31821, 613, 3328, 538, 1011, 11, 420, 13145, 5366, 544, 293, 544], "temperature": 0.0, "avg_logprob": -0.2519768524169922, "compression_ratio": 1.5147058823529411, "no_speech_prob": 6.657064659520984e-05}, {"id": 15, "seek": 5412, "start": 74.67999999999999, "end": 77.92, "text": " force automations.", "tokens": [3464, 3553, 763, 13], "temperature": 0.0, "avg_logprob": -0.2519768524169922, "compression_ratio": 1.5147058823529411, "no_speech_prob": 6.657064659520984e-05}, {"id": 16, "seek": 7792, "start": 77.92, "end": 86.4, "text": " But then at the end of the early last year, I discovered Open Rewrite, and Open Rewrite", "tokens": [583, 550, 412, 264, 917, 295, 264, 2440, 1036, 1064, 11, 286, 6941, 7238, 497, 1023, 35002, 11, 293, 7238, 497, 1023, 35002], "temperature": 0.0, "avg_logprob": -0.15002508724437041, "compression_ratio": 1.5865384615384615, "no_speech_prob": 8.405535481870174e-05}, {"id": 17, "seek": 7792, "start": 86.4, "end": 91.08, "text": " is a tool that promises to make light work of all such migrations.", "tokens": [307, 257, 2290, 300, 16403, 281, 652, 1442, 589, 295, 439, 1270, 6186, 12154, 13], "temperature": 0.0, "avg_logprob": -0.15002508724437041, "compression_ratio": 1.5865384615384615, "no_speech_prob": 8.405535481870174e-05}, {"id": 18, "seek": 7792, "start": 91.08, "end": 95.64, "text": " I got so excited by this technology that I started to contribute and even present about", "tokens": [286, 658, 370, 2919, 538, 341, 2899, 300, 286, 1409, 281, 10586, 293, 754, 1974, 466], "temperature": 0.0, "avg_logprob": -0.15002508724437041, "compression_ratio": 1.5865384615384615, "no_speech_prob": 8.405535481870174e-05}, {"id": 19, "seek": 7792, "start": 95.64, "end": 103.76, "text": " this on conferences, and then eventually quit my job to work on Open Rewrite full-time.", "tokens": [341, 322, 22032, 11, 293, 550, 4728, 10366, 452, 1691, 281, 589, 322, 7238, 497, 1023, 35002, 1577, 12, 3766, 13], "temperature": 0.0, "avg_logprob": -0.15002508724437041, "compression_ratio": 1.5865384615384615, "no_speech_prob": 8.405535481870174e-05}, {"id": 20, "seek": 10376, "start": 103.76, "end": 108.04, "text": " So after a nice sabbatical, that brings us here today.", "tokens": [407, 934, 257, 1481, 5560, 11980, 804, 11, 300, 5607, 505, 510, 965, 13], "temperature": 0.0, "avg_logprob": -0.1692771052455043, "compression_ratio": 1.5318352059925093, "no_speech_prob": 0.00011325120431138203}, {"id": 21, "seek": 10376, "start": 108.04, "end": 111.2, "text": " Perhaps you've faced some of the same challenges that I did.", "tokens": [10517, 291, 600, 11446, 512, 295, 264, 912, 4759, 300, 286, 630, 13], "temperature": 0.0, "avg_logprob": -0.1692771052455043, "compression_ratio": 1.5318352059925093, "no_speech_prob": 0.00011325120431138203}, {"id": 22, "seek": 10376, "start": 111.2, "end": 115.76, "text": " At a conference like this, you'll hear all about new framework and language features.", "tokens": [1711, 257, 7586, 411, 341, 11, 291, 603, 1568, 439, 466, 777, 8388, 293, 2856, 4122, 13], "temperature": 0.0, "avg_logprob": -0.1692771052455043, "compression_ratio": 1.5318352059925093, "no_speech_prob": 0.00011325120431138203}, {"id": 23, "seek": 10376, "start": 115.76, "end": 122.32000000000001, "text": " Yeah, back at work, you've stuck to using Java 8 and JUnit 4.", "tokens": [865, 11, 646, 412, 589, 11, 291, 600, 5541, 281, 1228, 10745, 1649, 293, 508, 12405, 270, 1017, 13], "temperature": 0.0, "avg_logprob": -0.1692771052455043, "compression_ratio": 1.5318352059925093, "no_speech_prob": 0.00011325120431138203}, {"id": 24, "seek": 10376, "start": 122.32000000000001, "end": 127.88000000000001, "text": " And migrating all of that by hand can seem daunting, if it ever gets priority.", "tokens": [400, 6186, 8754, 439, 295, 300, 538, 1011, 393, 1643, 37657, 11, 498, 309, 1562, 2170, 9365, 13], "temperature": 0.0, "avg_logprob": -0.1692771052455043, "compression_ratio": 1.5318352059925093, "no_speech_prob": 0.00011325120431138203}, {"id": 25, "seek": 10376, "start": 127.88000000000001, "end": 132.88, "text": " I want to show you how easy it can be to perform major migrations.", "tokens": [286, 528, 281, 855, 291, 577, 1858, 309, 393, 312, 281, 2042, 2563, 6186, 12154, 13], "temperature": 0.0, "avg_logprob": -0.1692771052455043, "compression_ratio": 1.5318352059925093, "no_speech_prob": 0.00011325120431138203}, {"id": 26, "seek": 13288, "start": 132.88, "end": 137.79999999999998, "text": " That way you too can adopt all the latest language and framework features.", "tokens": [663, 636, 291, 886, 393, 6878, 439, 264, 6792, 2856, 293, 8388, 4122, 13], "temperature": 0.0, "avg_logprob": -0.2433141352056147, "compression_ratio": 1.6767241379310345, "no_speech_prob": 0.00017671959358267486}, {"id": 27, "seek": 13288, "start": 137.79999999999998, "end": 143.2, "text": " And it can be fun to adopt new language features such as records and text blocks.", "tokens": [400, 309, 393, 312, 1019, 281, 6878, 777, 2856, 4122, 1270, 382, 7724, 293, 2487, 8474, 13], "temperature": 0.0, "avg_logprob": -0.2433141352056147, "compression_ratio": 1.6767241379310345, "no_speech_prob": 0.00017671959358267486}, {"id": 28, "seek": 13288, "start": 143.2, "end": 148.35999999999999, "text": " But you don't want to adopt these features manually, you're only on a single project.", "tokens": [583, 291, 500, 380, 528, 281, 6878, 613, 4122, 16945, 11, 291, 434, 787, 322, 257, 2167, 1716, 13], "temperature": 0.0, "avg_logprob": -0.2433141352056147, "compression_ratio": 1.6767241379310345, "no_speech_prob": 0.00017671959358267486}, {"id": 29, "seek": 13288, "start": 148.35999999999999, "end": 152.68, "text": " Instead we will look into automations and make all projects feel like new again, so", "tokens": [7156, 321, 486, 574, 666, 3553, 763, 293, 652, 439, 4455, 841, 411, 777, 797, 11, 370], "temperature": 0.0, "avg_logprob": -0.2433141352056147, "compression_ratio": 1.6767241379310345, "no_speech_prob": 0.00017671959358267486}, {"id": 30, "seek": 13288, "start": 152.68, "end": 158.64, "text": " you can benefit from JGM, language and framework improvements.", "tokens": [291, 393, 5121, 490, 508, 25152, 11, 2856, 293, 8388, 13797, 13], "temperature": 0.0, "avg_logprob": -0.2433141352056147, "compression_ratio": 1.6767241379310345, "no_speech_prob": 0.00017671959358267486}, {"id": 31, "seek": 15864, "start": 158.64, "end": 163.83999999999997, "text": " Here's a very brief overview of the types of migrations I'll be talking about.", "tokens": [1692, 311, 257, 588, 5353, 12492, 295, 264, 3467, 295, 6186, 12154, 286, 603, 312, 1417, 466, 13], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 32, "seek": 15864, "start": 163.83999999999997, "end": 168.44, "text": " Likely you already performed some of these migrations in the past, and other migrations", "tokens": [1743, 356, 291, 1217, 10332, 512, 295, 613, 6186, 12154, 294, 264, 1791, 11, 293, 661, 6186, 12154], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 33, "seek": 15864, "start": 168.44, "end": 171.07999999999998, "text": " are always just around the corner.", "tokens": [366, 1009, 445, 926, 264, 4538, 13], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 34, "seek": 15864, "start": 171.07999999999998, "end": 175.11999999999998, "text": " If you look back over time, there's a near constant stream of worthwhile improvements", "tokens": [759, 291, 574, 646, 670, 565, 11, 456, 311, 257, 2651, 5754, 4309, 295, 28159, 13797], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 35, "seek": 15864, "start": 175.11999999999998, "end": 176.76, "text": " to pick up.", "tokens": [281, 1888, 493, 13], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 36, "seek": 15864, "start": 176.76, "end": 181.07999999999998, "text": " And I like the challenge, I still get excited whenever a new version comes out.", "tokens": [400, 286, 411, 264, 3430, 11, 286, 920, 483, 2919, 5699, 257, 777, 3037, 1487, 484, 13], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 37, "seek": 15864, "start": 181.07999999999998, "end": 186.0, "text": " I just don't like the repetitive elements that come with upgrading.", "tokens": [286, 445, 500, 380, 411, 264, 29404, 4959, 300, 808, 365, 36249, 13], "temperature": 0.0, "avg_logprob": -0.19273386964010536, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.00029439679929055274}, {"id": 38, "seek": 18600, "start": 186.0, "end": 191.12, "text": " And if you try to keep up by hand, you will hardly get anything else done, especially", "tokens": [400, 498, 291, 853, 281, 1066, 493, 538, 1011, 11, 291, 486, 13572, 483, 1340, 1646, 1096, 11, 2318], "temperature": 0.0, "avg_logprob": -0.2135500797005587, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0001305533805862069}, {"id": 39, "seek": 18600, "start": 191.12, "end": 197.72, "text": " as microservices these days mean you're not just upgrading once, but dozens of time.", "tokens": [382, 15547, 47480, 613, 1708, 914, 291, 434, 406, 445, 36249, 1564, 11, 457, 18431, 295, 565, 13], "temperature": 0.0, "avg_logprob": -0.2135500797005587, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0001305533805862069}, {"id": 40, "seek": 18600, "start": 197.72, "end": 205.48, "text": " Automation may then be the only option, especially for companies using thousands of services.", "tokens": [24619, 399, 815, 550, 312, 264, 787, 3614, 11, 2318, 337, 3431, 1228, 5383, 295, 3328, 13], "temperature": 0.0, "avg_logprob": -0.2135500797005587, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0001305533805862069}, {"id": 41, "seek": 18600, "start": 205.48, "end": 210.92000000000002, "text": " Through Open Rewrite you can now migrate between versions of Java and Spring with a simple", "tokens": [8927, 7238, 497, 1023, 35002, 291, 393, 586, 31821, 1296, 9606, 295, 10745, 293, 14013, 365, 257, 2199], "temperature": 0.0, "avg_logprob": -0.2135500797005587, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0001305533805862069}, {"id": 42, "seek": 18600, "start": 210.92000000000002, "end": 211.92000000000002, "text": " command.", "tokens": [5622, 13], "temperature": 0.0, "avg_logprob": -0.2135500797005587, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0001305533805862069}, {"id": 43, "seek": 21192, "start": 211.92, "end": 218.28, "text": " You can even migrate between frameworks, such as from JUnit to AssertJ, and from Java.e", "tokens": [509, 393, 754, 31821, 1296, 29834, 11, 1270, 382, 490, 508, 12405, 270, 281, 6281, 911, 41, 11, 293, 490, 10745, 13, 68], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 44, "seek": 21192, "start": 218.28, "end": 219.28, "text": " to Spring.", "tokens": [281, 14013, 13], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 45, "seek": 21192, "start": 219.28, "end": 225.48, "text": " In this talk, I'll tell you all about Open Rewrite, how it came about, how it works,", "tokens": [682, 341, 751, 11, 286, 603, 980, 291, 439, 466, 7238, 497, 1023, 35002, 11, 577, 309, 1361, 466, 11, 577, 309, 1985, 11], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 46, "seek": 21192, "start": 225.48, "end": 226.88, "text": " and what you can do with it.", "tokens": [293, 437, 291, 393, 360, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 47, "seek": 21192, "start": 226.88, "end": 232.27999999999997, "text": " And finally, we'll briefly look at who is developing these recipes and how to apply", "tokens": [400, 2721, 11, 321, 603, 10515, 574, 412, 567, 307, 6416, 613, 13035, 293, 577, 281, 3079], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 48, "seek": 21192, "start": 232.27999999999997, "end": 236.67999999999998, "text": " them to open source projects.", "tokens": [552, 281, 1269, 4009, 4455, 13], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 49, "seek": 21192, "start": 236.67999999999998, "end": 241.83999999999997, "text": " Open Rewrite was developed in Netflix, initially to aid in the migration of an internal logging", "tokens": [7238, 497, 1023, 35002, 390, 4743, 294, 12778, 11, 9105, 281, 9418, 294, 264, 17011, 295, 364, 6920, 27991], "temperature": 0.0, "avg_logprob": -0.24794354932061557, "compression_ratio": 1.6045627376425855, "no_speech_prob": 0.00010400517930975184}, {"id": 50, "seek": 24184, "start": 241.84, "end": 244.88, "text": " framework to AssertJ.", "tokens": [8388, 281, 6281, 911, 41, 13], "temperature": 0.0, "avg_logprob": -0.2285152760947623, "compression_ratio": 1.5617021276595744, "no_speech_prob": 0.0001794130657799542}, {"id": 51, "seek": 24184, "start": 244.88, "end": 249.32, "text": " You can probably imagine that any logging framework is going to be pervasive throughout", "tokens": [509, 393, 1391, 3811, 300, 604, 27991, 8388, 307, 516, 281, 312, 680, 39211, 3710], "temperature": 0.0, "avg_logprob": -0.2285152760947623, "compression_ratio": 1.5617021276595744, "no_speech_prob": 0.0001794130657799542}, {"id": 52, "seek": 24184, "start": 249.32, "end": 257.8, "text": " an organization, so even consider migrating using a perfectly accurate automation.", "tokens": [364, 4475, 11, 370, 754, 1949, 6186, 8754, 1228, 257, 6239, 8559, 17769, 13], "temperature": 0.0, "avg_logprob": -0.2285152760947623, "compression_ratio": 1.5617021276595744, "no_speech_prob": 0.0001794130657799542}, {"id": 53, "seek": 24184, "start": 257.8, "end": 264.24, "text": " So they, especially when usage is spread across hundreds of services, so they develop a parser", "tokens": [407, 436, 11, 2318, 562, 14924, 307, 3974, 2108, 6779, 295, 3328, 11, 370, 436, 1499, 257, 21156, 260], "temperature": 0.0, "avg_logprob": -0.2285152760947623, "compression_ratio": 1.5617021276595744, "no_speech_prob": 0.0001794130657799542}, {"id": 54, "seek": 24184, "start": 264.24, "end": 270.6, "text": " to accurately read Java and turn the source code into a lossless semantic tree.", "tokens": [281, 20095, 1401, 10745, 293, 1261, 264, 4009, 3089, 666, 257, 4470, 1832, 47982, 4230, 13], "temperature": 0.0, "avg_logprob": -0.2285152760947623, "compression_ratio": 1.5617021276595744, "no_speech_prob": 0.0001794130657799542}, {"id": 55, "seek": 27060, "start": 270.6, "end": 275.52000000000004, "text": " This model can then be modified to replace the old learning statements with calls to", "tokens": [639, 2316, 393, 550, 312, 15873, 281, 7406, 264, 1331, 2539, 12363, 365, 5498, 281], "temperature": 0.0, "avg_logprob": -0.2240285110473633, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00019196550420019776}, {"id": 56, "seek": 27060, "start": 275.52000000000004, "end": 278.04, "text": " AssertJ.", "tokens": [6281, 911, 41, 13], "temperature": 0.0, "avg_logprob": -0.2240285110473633, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00019196550420019776}, {"id": 57, "seek": 27060, "start": 278.04, "end": 283.20000000000005, "text": " Next the migrated model is running out as close as possible to the original source code.", "tokens": [3087, 264, 48329, 2316, 307, 2614, 484, 382, 1998, 382, 1944, 281, 264, 3380, 4009, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2240285110473633, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00019196550420019776}, {"id": 58, "seek": 27060, "start": 283.20000000000005, "end": 289.08000000000004, "text": " That way the applied changes are minimal, leaving the surrounding code untouched.", "tokens": [663, 636, 264, 6456, 2962, 366, 13206, 11, 5012, 264, 11498, 3089, 1701, 36740, 13], "temperature": 0.0, "avg_logprob": -0.2240285110473633, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00019196550420019776}, {"id": 59, "seek": 27060, "start": 289.08000000000004, "end": 294.56, "text": " Later, the same developers moved on to work on Spinnigar, and while trying to onboard", "tokens": [11965, 11, 264, 912, 8849, 4259, 322, 281, 589, 322, 1738, 7729, 328, 289, 11, 293, 1339, 1382, 281, 24033], "temperature": 0.0, "avg_logprob": -0.2240285110473633, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00019196550420019776}, {"id": 60, "seek": 27060, "start": 294.56, "end": 299.68, "text": " teams and organizations there, they found that teams often struggled with the same outdated", "tokens": [5491, 293, 6150, 456, 11, 436, 1352, 300, 5491, 2049, 19023, 365, 264, 912, 36313], "temperature": 0.0, "avg_logprob": -0.2240285110473633, "compression_ratio": 1.6309963099630995, "no_speech_prob": 0.00019196550420019776}, {"id": 61, "seek": 29968, "start": 299.68, "end": 302.72, "text": " languages and framework.", "tokens": [8650, 293, 8388, 13], "temperature": 0.0, "avg_logprob": -0.23851600446199117, "compression_ratio": 1.625, "no_speech_prob": 0.000754660286474973}, {"id": 62, "seek": 29968, "start": 302.72, "end": 314.16, "text": " To help teams adopt the latest versions, to help teams adopt the latest versions, they", "tokens": [1407, 854, 5491, 6878, 264, 6792, 9606, 11, 281, 854, 5491, 6878, 264, 6792, 9606, 11, 436], "temperature": 0.0, "avg_logprob": -0.23851600446199117, "compression_ratio": 1.625, "no_speech_prob": 0.000754660286474973}, {"id": 63, "seek": 29968, "start": 314.16, "end": 320.28000000000003, "text": " applied a different set of migration recipes, through the same lossless semantic tree parser.", "tokens": [6456, 257, 819, 992, 295, 17011, 13035, 11, 807, 264, 912, 4470, 1832, 47982, 4230, 21156, 260, 13], "temperature": 0.0, "avg_logprob": -0.23851600446199117, "compression_ratio": 1.625, "no_speech_prob": 0.000754660286474973}, {"id": 64, "seek": 29968, "start": 320.28000000000003, "end": 326.56, "text": " Let me just get this one on.", "tokens": [961, 385, 445, 483, 341, 472, 322, 13], "temperature": 0.0, "avg_logprob": -0.23851600446199117, "compression_ratio": 1.625, "no_speech_prob": 0.000754660286474973}, {"id": 65, "seek": 32656, "start": 326.56, "end": 331.84, "text": " This allowed them to quickly reduce this technical depth and bring teams from Spring", "tokens": [639, 4350, 552, 281, 2661, 5407, 341, 6191, 7161, 293, 1565, 5491, 490, 14013], "temperature": 0.0, "avg_logprob": -0.2897102107172427, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.00045514453086070716}, {"id": 66, "seek": 32656, "start": 331.84, "end": 337.56, "text": " Book 1 to Spring Book 2 and from JUnit 4 to JUnit 5.", "tokens": [9476, 502, 281, 14013, 9476, 568, 293, 490, 508, 12405, 270, 1017, 281, 508, 12405, 270, 1025, 13], "temperature": 0.0, "avg_logprob": -0.2897102107172427, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.00045514453086070716}, {"id": 67, "seek": 32656, "start": 337.56, "end": 342.32, "text": " The project has since been open sourced, with the company behind it committed to making", "tokens": [440, 1716, 575, 1670, 668, 1269, 11006, 1232, 11, 365, 264, 2237, 2261, 309, 7784, 281, 1455], "temperature": 0.0, "avg_logprob": -0.2897102107172427, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.00045514453086070716}, {"id": 68, "seek": 32656, "start": 342.32, "end": 348.4, "text": " all recipes available on the Apache license for open source software.", "tokens": [439, 13035, 2435, 322, 264, 46597, 10476, 337, 1269, 4009, 4722, 13], "temperature": 0.0, "avg_logprob": -0.2897102107172427, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.00045514453086070716}, {"id": 69, "seek": 32656, "start": 348.4, "end": 353.68, "text": " The initial focus for open rewind is on the Java virtual machine languages and surrounding", "tokens": [440, 5883, 1879, 337, 1269, 41458, 307, 322, 264, 10745, 6374, 3479, 8650, 293, 11498], "temperature": 0.0, "avg_logprob": -0.2897102107172427, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.00045514453086070716}, {"id": 70, "seek": 32656, "start": 353.68, "end": 355.68, "text": " technologies.", "tokens": [7943, 13], "temperature": 0.0, "avg_logprob": -0.2897102107172427, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.00045514453086070716}, {"id": 71, "seek": 35568, "start": 355.68, "end": 361.64, "text": " There are parsers, for instance, for Java, Groovy, Dunl and XML, and these in turn unlock", "tokens": [821, 366, 21156, 433, 11, 337, 5197, 11, 337, 10745, 11, 12981, 38223, 11, 11959, 75, 293, 43484, 11, 293, 613, 294, 1261, 11634], "temperature": 0.0, "avg_logprob": -0.3147065422751687, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0002224612981081009}, {"id": 72, "seek": 35568, "start": 361.64, "end": 370.2, "text": " support for builders such as Maven and Gradle, and libraries such as JUnit, AssertJ and Guava.", "tokens": [1406, 337, 36281, 1270, 382, 4042, 553, 293, 16710, 306, 11, 293, 15148, 1270, 382, 508, 12405, 270, 11, 6281, 911, 41, 293, 2694, 4061, 13], "temperature": 0.0, "avg_logprob": -0.3147065422751687, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0002224612981081009}, {"id": 73, "seek": 35568, "start": 370.2, "end": 375.56, "text": " Ultimately refactoring entire frameworks and platforms is supported, with recipes available", "tokens": [23921, 1895, 578, 3662, 2302, 29834, 293, 9473, 307, 8104, 11, 365, 13035, 2435], "temperature": 0.0, "avg_logprob": -0.3147065422751687, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0002224612981081009}, {"id": 74, "seek": 35568, "start": 375.56, "end": 382.48, "text": " for application frames such as Micronaut, Barkers and Spring.", "tokens": [337, 3861, 12083, 1270, 382, 5818, 2044, 1375, 11, 36275, 433, 293, 14013, 13], "temperature": 0.0, "avg_logprob": -0.3147065422751687, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.0002224612981081009}, {"id": 75, "seek": 38248, "start": 382.48, "end": 388.84000000000003, "text": " Open Rewrite is not the only parser capable of understanding and manipulating Java.", "tokens": [7238, 497, 1023, 35002, 307, 406, 264, 787, 21156, 260, 8189, 295, 3701, 293, 40805, 10745, 13], "temperature": 0.0, "avg_logprob": -0.18729734933504494, "compression_ratio": 1.6810344827586208, "no_speech_prob": 0.00029045756673440337}, {"id": 76, "seek": 38248, "start": 388.84000000000003, "end": 393.36, "text": " However, three features set Open Rewrite apart from the competition.", "tokens": [2908, 11, 1045, 4122, 992, 7238, 497, 1023, 35002, 4936, 490, 264, 6211, 13], "temperature": 0.0, "avg_logprob": -0.18729734933504494, "compression_ratio": 1.6810344827586208, "no_speech_prob": 0.00029045756673440337}, {"id": 77, "seek": 38248, "start": 393.36, "end": 397.04, "text": " The first is to focus on exact type attribution.", "tokens": [440, 700, 307, 281, 1879, 322, 1900, 2010, 9080, 1448, 13], "temperature": 0.0, "avg_logprob": -0.18729734933504494, "compression_ratio": 1.6810344827586208, "no_speech_prob": 0.00029045756673440337}, {"id": 78, "seek": 38248, "start": 397.04, "end": 402.16, "text": " By having the exact type available on any tree element, we can be sure to only manipulate", "tokens": [3146, 1419, 264, 1900, 2010, 2435, 322, 604, 4230, 4478, 11, 321, 393, 312, 988, 281, 787, 20459], "temperature": 0.0, "avg_logprob": -0.18729734933504494, "compression_ratio": 1.6810344827586208, "no_speech_prob": 0.00029045756673440337}, {"id": 79, "seek": 38248, "start": 402.16, "end": 404.64000000000004, "text": " exact matches.", "tokens": [1900, 10676, 13], "temperature": 0.0, "avg_logprob": -0.18729734933504494, "compression_ratio": 1.6810344827586208, "no_speech_prob": 0.00029045756673440337}, {"id": 80, "seek": 38248, "start": 404.64000000000004, "end": 411.24, "text": " The second characteristic that sets Open Rewrite apart is the form of preservation.", "tokens": [440, 1150, 16282, 300, 6352, 7238, 497, 1023, 35002, 4936, 307, 264, 1254, 295, 27257, 13], "temperature": 0.0, "avg_logprob": -0.18729734933504494, "compression_ratio": 1.6810344827586208, "no_speech_prob": 0.00029045756673440337}, {"id": 81, "seek": 41124, "start": 411.24, "end": 415.32, "text": " The parser not only takes into account the functional code, but also the surrounding", "tokens": [440, 21156, 260, 406, 787, 2516, 666, 2696, 264, 11745, 3089, 11, 457, 611, 264, 11498], "temperature": 0.0, "avg_logprob": -0.2755130343967014, "compression_ratio": 1.562992125984252, "no_speech_prob": 3.755588113563135e-05}, {"id": 82, "seek": 41124, "start": 415.32, "end": 419.16, "text": " code style and implementation.", "tokens": [3089, 3758, 293, 11420, 13], "temperature": 0.0, "avg_logprob": -0.2755130343967014, "compression_ratio": 1.562992125984252, "no_speech_prob": 3.755588113563135e-05}, {"id": 83, "seek": 41124, "start": 419.16, "end": 425.0, "text": " This allows us to accurately reproduce your source code regardless of further changes.", "tokens": [639, 4045, 505, 281, 20095, 29501, 428, 4009, 3089, 10060, 295, 3052, 2962, 13], "temperature": 0.0, "avg_logprob": -0.2755130343967014, "compression_ratio": 1.562992125984252, "no_speech_prob": 3.755588113563135e-05}, {"id": 84, "seek": 41124, "start": 425.0, "end": 429.24, "text": " Changes made through Open Rewrite look just like our colleague worked on your code.", "tokens": [761, 10350, 1027, 807, 7238, 497, 1023, 35002, 574, 445, 411, 527, 13532, 2732, 322, 428, 3089, 13], "temperature": 0.0, "avg_logprob": -0.2755130343967014, "compression_ratio": 1.562992125984252, "no_speech_prob": 3.755588113563135e-05}, {"id": 85, "seek": 41124, "start": 429.24, "end": 435.6, "text": " And finally, the serialization format ensures you're able to query and refactor your code", "tokens": [400, 2721, 11, 264, 17436, 2144, 7877, 28111, 291, 434, 1075, 281, 14581, 293, 1895, 15104, 428, 3089], "temperature": 0.0, "avg_logprob": -0.2755130343967014, "compression_ratio": 1.562992125984252, "no_speech_prob": 3.755588113563135e-05}, {"id": 86, "seek": 41124, "start": 435.6, "end": 437.40000000000003, "text": " faster and at scale.", "tokens": [4663, 293, 412, 4373, 13], "temperature": 0.0, "avg_logprob": -0.2755130343967014, "compression_ratio": 1.562992125984252, "no_speech_prob": 3.755588113563135e-05}, {"id": 87, "seek": 43740, "start": 437.4, "end": 443.52, "text": " Together, these features make Open Rewrite exceptionally good at safe code transformations,", "tokens": [15911, 11, 613, 4122, 652, 7238, 497, 1023, 35002, 37807, 665, 412, 3273, 3089, 34852, 11], "temperature": 0.0, "avg_logprob": -0.18943497941300674, "compression_ratio": 1.5598086124401913, "no_speech_prob": 0.00013407475489657372}, {"id": 88, "seek": 43740, "start": 443.52, "end": 450.67999999999995, "text": " especially as the changes are minimally invasive and guaranteed to work in part of the due", "tokens": [2318, 382, 264, 2962, 366, 4464, 379, 30894, 293, 18031, 281, 589, 294, 644, 295, 264, 3462], "temperature": 0.0, "avg_logprob": -0.18943497941300674, "compression_ratio": 1.5598086124401913, "no_speech_prob": 0.00013407475489657372}, {"id": 89, "seek": 43740, "start": 450.67999999999995, "end": 454.0, "text": " to the do no harm mentality.", "tokens": [281, 264, 360, 572, 6491, 21976, 13], "temperature": 0.0, "avg_logprob": -0.18943497941300674, "compression_ratio": 1.5598086124401913, "no_speech_prob": 0.00013407475489657372}, {"id": 90, "seek": 43740, "start": 454.0, "end": 459.35999999999996, "text": " By manipulating the full lossless semantic tree, Open Rewrite can far exceed simple search", "tokens": [3146, 40805, 264, 1577, 4470, 1832, 47982, 4230, 11, 7238, 497, 1023, 35002, 393, 1400, 14048, 2199, 3164], "temperature": 0.0, "avg_logprob": -0.18943497941300674, "compression_ratio": 1.5598086124401913, "no_speech_prob": 0.00013407475489657372}, {"id": 91, "seek": 43740, "start": 459.35999999999996, "end": 463.52, "text": " and replace operations.", "tokens": [293, 7406, 7705, 13], "temperature": 0.0, "avg_logprob": -0.18943497941300674, "compression_ratio": 1.5598086124401913, "no_speech_prob": 0.00013407475489657372}, {"id": 92, "seek": 46352, "start": 463.52, "end": 468.15999999999997, "text": " With the full lossless semantic tree built, we need to instruct Open Rewrite what operations", "tokens": [2022, 264, 1577, 4470, 1832, 47982, 4230, 3094, 11, 321, 643, 281, 7232, 7238, 497, 1023, 35002, 437, 7705], "temperature": 0.0, "avg_logprob": -0.192243165867303, "compression_ratio": 1.645021645021645, "no_speech_prob": 0.0001951071317307651}, {"id": 93, "seek": 46352, "start": 468.15999999999997, "end": 471.59999999999997, "text": " to apply and where in your code.", "tokens": [281, 3079, 293, 689, 294, 428, 3089, 13], "temperature": 0.0, "avg_logprob": -0.192243165867303, "compression_ratio": 1.645021645021645, "no_speech_prob": 0.0001951071317307651}, {"id": 94, "seek": 46352, "start": 471.59999999999997, "end": 476.91999999999996, "text": " Recipes are highly defined, such as a group of search and refactoring operations.", "tokens": [1300, 537, 5190, 366, 5405, 7642, 11, 1270, 382, 257, 1594, 295, 3164, 293, 1895, 578, 3662, 7705, 13], "temperature": 0.0, "avg_logprob": -0.192243165867303, "compression_ratio": 1.645021645021645, "no_speech_prob": 0.0001951071317307651}, {"id": 95, "seek": 46352, "start": 476.91999999999996, "end": 481.88, "text": " Together they accomplish a higher level task, such as a framework migration.", "tokens": [15911, 436, 9021, 257, 2946, 1496, 5633, 11, 1270, 382, 257, 8388, 17011, 13], "temperature": 0.0, "avg_logprob": -0.192243165867303, "compression_ratio": 1.645021645021645, "no_speech_prob": 0.0001951071317307651}, {"id": 96, "seek": 46352, "start": 481.88, "end": 486.56, "text": " Recipes can consist of a single standalone operation, or be linked together with other", "tokens": [1300, 537, 5190, 393, 4603, 295, 257, 2167, 37454, 6916, 11, 420, 312, 9408, 1214, 365, 661], "temperature": 0.0, "avg_logprob": -0.192243165867303, "compression_ratio": 1.645021645021645, "no_speech_prob": 0.0001951071317307651}, {"id": 97, "seek": 46352, "start": 486.56, "end": 489.4, "text": " recipes.", "tokens": [13035, 13], "temperature": 0.0, "avg_logprob": -0.192243165867303, "compression_ratio": 1.645021645021645, "no_speech_prob": 0.0001951071317307651}, {"id": 98, "seek": 48940, "start": 489.4, "end": 493.71999999999997, "text": " Open Rewrite comes with a large collection of fine-grained recipes out of the box that", "tokens": [7238, 497, 1023, 35002, 1487, 365, 257, 2416, 5765, 295, 2489, 12, 20735, 2001, 13035, 484, 295, 264, 2424, 300], "temperature": 0.0, "avg_logprob": -0.1690736620613698, "compression_ratio": 1.6416666666666666, "no_speech_prob": 9.260161459678784e-05}, {"id": 99, "seek": 48940, "start": 493.71999999999997, "end": 497.08, "text": " can be combined for common migration steps.", "tokens": [393, 312, 9354, 337, 2689, 17011, 4439, 13], "temperature": 0.0, "avg_logprob": -0.1690736620613698, "compression_ratio": 1.6416666666666666, "no_speech_prob": 9.260161459678784e-05}, {"id": 100, "seek": 48940, "start": 497.08, "end": 502.67999999999995, "text": " You can think of these as LEGO building blocks, ready to be applied with the proper parameters.", "tokens": [509, 393, 519, 295, 613, 382, 36072, 2390, 8474, 11, 1919, 281, 312, 6456, 365, 264, 2296, 9834, 13], "temperature": 0.0, "avg_logprob": -0.1690736620613698, "compression_ratio": 1.6416666666666666, "no_speech_prob": 9.260161459678784e-05}, {"id": 101, "seek": 48940, "start": 502.67999999999995, "end": 507.88, "text": " There are hundreds of these building blocks to, for instance, change types, change methods,", "tokens": [821, 366, 6779, 295, 613, 2390, 8474, 281, 11, 337, 5197, 11, 1319, 3467, 11, 1319, 7150, 11], "temperature": 0.0, "avg_logprob": -0.1690736620613698, "compression_ratio": 1.6416666666666666, "no_speech_prob": 9.260161459678784e-05}, {"id": 102, "seek": 48940, "start": 507.88, "end": 515.3199999999999, "text": " change arguments, manipulate properties, and alter dependencies of plugins.", "tokens": [1319, 12869, 11, 20459, 7221, 11, 293, 11337, 36606, 295, 33759, 13], "temperature": 0.0, "avg_logprob": -0.1690736620613698, "compression_ratio": 1.6416666666666666, "no_speech_prob": 9.260161459678784e-05}, {"id": 103, "seek": 51532, "start": 515.32, "end": 520.72, "text": " Full recipes are implemented as Java visitors that first match and then modify elements", "tokens": [13841, 13035, 366, 12270, 382, 10745, 14315, 300, 700, 2995, 293, 550, 16927, 4959], "temperature": 0.0, "avg_logprob": -0.22227369035993302, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.00010202077100984752}, {"id": 104, "seek": 51532, "start": 520.72, "end": 522.48, "text": " of the lossless semantic tree.", "tokens": [295, 264, 4470, 1832, 47982, 4230, 13], "temperature": 0.0, "avg_logprob": -0.22227369035993302, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.00010202077100984752}, {"id": 105, "seek": 51532, "start": 522.48, "end": 527.96, "text": " There are plenty of examples available, but notice that you only need a dedicated Java", "tokens": [821, 366, 7140, 295, 5110, 2435, 11, 457, 3449, 300, 291, 787, 643, 257, 8374, 10745], "temperature": 0.0, "avg_logprob": -0.22227369035993302, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.00010202077100984752}, {"id": 106, "seek": 51532, "start": 527.96, "end": 532.7600000000001, "text": " visitor, but none of the existing recipes can only really achieve your goals.", "tokens": [28222, 11, 457, 6022, 295, 264, 6741, 13035, 393, 787, 534, 4584, 428, 5493, 13], "temperature": 0.0, "avg_logprob": -0.22227369035993302, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.00010202077100984752}, {"id": 107, "seek": 51532, "start": 532.7600000000001, "end": 539.9200000000001, "text": " Typically, you can get very far, only configuring, combining, applying existing recipes through", "tokens": [23129, 11, 291, 393, 483, 588, 1400, 11, 787, 6662, 1345, 11, 21928, 11, 9275, 6741, 13035, 807], "temperature": 0.0, "avg_logprob": -0.22227369035993302, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.00010202077100984752}, {"id": 108, "seek": 51532, "start": 539.9200000000001, "end": 543.84, "text": " a YAML description form.", "tokens": [257, 398, 2865, 43, 3855, 1254, 13], "temperature": 0.0, "avg_logprob": -0.22227369035993302, "compression_ratio": 1.6489795918367347, "no_speech_prob": 0.00010202077100984752}, {"id": 109, "seek": 54384, "start": 543.84, "end": 549.9200000000001, "text": " Examples then group together these fine-grained recipes into more coarse-grained, application-specific", "tokens": [48591, 550, 1594, 1214, 613, 2489, 12, 20735, 2001, 13035, 666, 544, 39312, 12, 20735, 2001, 11, 3861, 12, 29258], "temperature": 0.0, "avg_logprob": -0.22001549632278913, "compression_ratio": 1.7024793388429753, "no_speech_prob": 0.00012632815924007446}, {"id": 110, "seek": 54384, "start": 549.9200000000001, "end": 550.9200000000001, "text": " recipes.", "tokens": [13035, 13], "temperature": 0.0, "avg_logprob": -0.22001549632278913, "compression_ratio": 1.7024793388429753, "no_speech_prob": 0.00012632815924007446}, {"id": 111, "seek": 54384, "start": 550.9200000000001, "end": 556.8000000000001, "text": " There are modules, for example, for loading frameworks, testing frameworks, and application", "tokens": [821, 366, 16679, 11, 337, 1365, 11, 337, 15114, 29834, 11, 4997, 29834, 11, 293, 3861], "temperature": 0.0, "avg_logprob": -0.22001549632278913, "compression_ratio": 1.7024793388429753, "no_speech_prob": 0.00012632815924007446}, {"id": 112, "seek": 54384, "start": 556.8000000000001, "end": 559.2800000000001, "text": " frameworks, such as Spring.", "tokens": [29834, 11, 1270, 382, 14013, 13], "temperature": 0.0, "avg_logprob": -0.22001549632278913, "compression_ratio": 1.7024793388429753, "no_speech_prob": 0.00012632815924007446}, {"id": 113, "seek": 54384, "start": 559.2800000000001, "end": 566.44, "text": " Think of these as LEGO sets, with built plans for common migrations ready to be applied.", "tokens": [6557, 295, 613, 382, 36072, 6352, 11, 365, 3094, 5482, 337, 2689, 6186, 12154, 1919, 281, 312, 6456, 13], "temperature": 0.0, "avg_logprob": -0.22001549632278913, "compression_ratio": 1.7024793388429753, "no_speech_prob": 0.00012632815924007446}, {"id": 114, "seek": 54384, "start": 566.44, "end": 571.32, "text": " In my opinion, the lossless semantic tree, combined with a large collection of fine-grained", "tokens": [682, 452, 4800, 11, 264, 4470, 1832, 47982, 4230, 11, 9354, 365, 257, 2416, 5765, 295, 2489, 12, 20735, 2001], "temperature": 0.0, "avg_logprob": -0.22001549632278913, "compression_ratio": 1.7024793388429753, "no_speech_prob": 0.00012632815924007446}, {"id": 115, "seek": 57132, "start": 571.32, "end": 576.44, "text": " recipes, is what sets open-grained apart from other similar tools, such as error-prones", "tokens": [13035, 11, 307, 437, 6352, 1269, 12, 20735, 2001, 4936, 490, 661, 2531, 3873, 11, 1270, 382, 6713, 12, 1424, 2213], "temperature": 0.0, "avg_logprob": -0.35877424073450775, "compression_ratio": 1.5588235294117647, "no_speech_prob": 6.794416549382731e-05}, {"id": 116, "seek": 57132, "start": 576.44, "end": 577.44, "text": " and repositories.", "tokens": [293, 22283, 2083, 13], "temperature": 0.0, "avg_logprob": -0.35877424073450775, "compression_ratio": 1.5588235294117647, "no_speech_prob": 6.794416549382731e-05}, {"id": 117, "seek": 57132, "start": 577.44, "end": 584.8000000000001, "text": " Now, I want to show you how migration recipes are configured in OpenRero.", "tokens": [823, 11, 286, 528, 281, 855, 291, 577, 17011, 13035, 366, 30538, 294, 7238, 49, 2032, 13], "temperature": 0.0, "avg_logprob": -0.35877424073450775, "compression_ratio": 1.5588235294117647, "no_speech_prob": 6.794416549382731e-05}, {"id": 118, "seek": 57132, "start": 584.8000000000001, "end": 588.5200000000001, "text": " Let's briefly look at a migration from JUnit4 to JUnit5.", "tokens": [961, 311, 10515, 574, 412, 257, 17011, 490, 508, 12405, 270, 19, 281, 508, 12405, 270, 20, 13], "temperature": 0.0, "avg_logprob": -0.35877424073450775, "compression_ratio": 1.5588235294117647, "no_speech_prob": 6.794416549382731e-05}, {"id": 119, "seek": 57132, "start": 588.5200000000001, "end": 593.9200000000001, "text": " I want you to imagine the steps of what we need after such a migration.", "tokens": [286, 528, 291, 281, 3811, 264, 4439, 295, 437, 321, 643, 934, 1270, 257, 17011, 13], "temperature": 0.0, "avg_logprob": -0.35877424073450775, "compression_ratio": 1.5588235294117647, "no_speech_prob": 6.794416549382731e-05}, {"id": 120, "seek": 57132, "start": 593.9200000000001, "end": 599.36, "text": " You've likely applied some of those steps already in the past.", "tokens": [509, 600, 3700, 6456, 512, 295, 729, 4439, 1217, 294, 264, 1791, 13], "temperature": 0.0, "avg_logprob": -0.35877424073450775, "compression_ratio": 1.5588235294117647, "no_speech_prob": 6.794416549382731e-05}, {"id": 121, "seek": 59936, "start": 599.36, "end": 603.04, "text": " Some others should have to update the test annotations.", "tokens": [2188, 2357, 820, 362, 281, 5623, 264, 1500, 25339, 763, 13], "temperature": 0.0, "avg_logprob": -0.2332642749675269, "compression_ratio": 1.7405857740585775, "no_speech_prob": 0.00023013827740214765}, {"id": 122, "seek": 59936, "start": 603.04, "end": 607.76, "text": " But you would also have to update the assertions, and sometimes the argument order would have", "tokens": [583, 291, 576, 611, 362, 281, 5623, 264, 19810, 626, 11, 293, 2171, 264, 6770, 1668, 576, 362], "temperature": 0.0, "avg_logprob": -0.2332642749675269, "compression_ratio": 1.7405857740585775, "no_speech_prob": 0.00023013827740214765}, {"id": 123, "seek": 59936, "start": 607.76, "end": 614.04, "text": " to update all imports, and they have to update any test rules, and that's just getting started.", "tokens": [281, 5623, 439, 41596, 11, 293, 436, 362, 281, 5623, 604, 1500, 4474, 11, 293, 300, 311, 445, 1242, 1409, 13], "temperature": 0.0, "avg_logprob": -0.2332642749675269, "compression_ratio": 1.7405857740585775, "no_speech_prob": 0.00023013827740214765}, {"id": 124, "seek": 59936, "start": 614.04, "end": 619.24, "text": " Notice how each of these steps is reflected as a separate recipe in this YAML configuration", "tokens": [13428, 577, 1184, 295, 613, 4439, 307, 15502, 382, 257, 4994, 6782, 294, 341, 398, 2865, 43, 11694], "temperature": 0.0, "avg_logprob": -0.2332642749675269, "compression_ratio": 1.7405857740585775, "no_speech_prob": 0.00023013827740214765}, {"id": 125, "seek": 59936, "start": 619.24, "end": 620.96, "text": " form.", "tokens": [1254, 13], "temperature": 0.0, "avg_logprob": -0.2332642749675269, "compression_ratio": 1.7405857740585775, "no_speech_prob": 0.00023013827740214765}, {"id": 126, "seek": 59936, "start": 620.96, "end": 626.52, "text": " Some refer to and prefer the NERC steps, such as the change-type recipe.", "tokens": [2188, 2864, 281, 293, 4382, 264, 426, 1598, 34, 4439, 11, 1270, 382, 264, 1319, 12, 20467, 6782, 13], "temperature": 0.0, "avg_logprob": -0.2332642749675269, "compression_ratio": 1.7405857740585775, "no_speech_prob": 0.00023013827740214765}, {"id": 127, "seek": 62652, "start": 626.52, "end": 631.3199999999999, "text": " Others are implemented as an imperative set, a dedicated Java visitor that changes the", "tokens": [20277, 366, 12270, 382, 364, 32490, 992, 11, 257, 8374, 10745, 28222, 300, 2962, 264], "temperature": 0.0, "avg_logprob": -0.14101435814374758, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.0001876178284874186}, {"id": 128, "seek": 62652, "start": 631.3199999999999, "end": 633.76, "text": " lossless semantic tree.", "tokens": [4470, 1832, 47982, 4230, 13], "temperature": 0.0, "avg_logprob": -0.14101435814374758, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.0001876178284874186}, {"id": 129, "seek": 62652, "start": 633.76, "end": 638.92, "text": " All these steps combine to achieve a complete JUnit5 migration.", "tokens": [1057, 613, 4439, 10432, 281, 4584, 257, 3566, 508, 12405, 270, 20, 17011, 13], "temperature": 0.0, "avg_logprob": -0.14101435814374758, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.0001876178284874186}, {"id": 130, "seek": 62652, "start": 638.92, "end": 641.76, "text": " This is a common pattern with OpenRero.", "tokens": [639, 307, 257, 2689, 5102, 365, 7238, 49, 2032, 13], "temperature": 0.0, "avg_logprob": -0.14101435814374758, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.0001876178284874186}, {"id": 131, "seek": 62652, "start": 641.76, "end": 647.76, "text": " Large migrations are broken up into small, reusable steps.", "tokens": [33092, 6186, 12154, 366, 5463, 493, 666, 1359, 11, 41807, 4439, 13], "temperature": 0.0, "avg_logprob": -0.14101435814374758, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.0001876178284874186}, {"id": 132, "seek": 62652, "start": 647.76, "end": 651.0, "text": " When we run this recipe, we get predictable results.", "tokens": [1133, 321, 1190, 341, 6782, 11, 321, 483, 27737, 3542, 13], "temperature": 0.0, "avg_logprob": -0.14101435814374758, "compression_ratio": 1.5162790697674418, "no_speech_prob": 0.0001876178284874186}, {"id": 133, "seek": 65100, "start": 651.0, "end": 656.96, "text": " Our imports are replaced, as we would expect, and our Makito runner is replaced into using", "tokens": [2621, 41596, 366, 10772, 11, 382, 321, 576, 2066, 11, 293, 527, 16576, 3528, 24376, 307, 10772, 666, 1228], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 134, "seek": 65100, "start": 656.96, "end": 658.96, "text": " the extension.", "tokens": [264, 10320, 13], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 135, "seek": 65100, "start": 658.96, "end": 664.12, "text": " Life cycle annotations, such as that before, are correctly replaced.", "tokens": [7720, 6586, 25339, 763, 11, 1270, 382, 300, 949, 11, 366, 8944, 10772, 13], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 136, "seek": 65100, "start": 664.12, "end": 668.92, "text": " But interestingly, we can see how OpenRero shines through when it comes to comparing", "tokens": [583, 25873, 11, 321, 393, 536, 577, 7238, 49, 2032, 28056, 807, 562, 309, 1487, 281, 15763], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 137, "seek": 65100, "start": 668.92, "end": 670.12, "text": " expected exceptions.", "tokens": [5176, 22847, 13], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 138, "seek": 65100, "start": 670.12, "end": 676.6, "text": " Having the full power of a lossless semantic tree, combined with a Java visitor, allows", "tokens": [10222, 264, 1577, 1347, 295, 257, 4470, 1832, 47982, 4230, 11, 9354, 365, 257, 10745, 28222, 11, 4045], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 139, "seek": 65100, "start": 676.6, "end": 679.16, "text": " us to adopt assert throws.", "tokens": [505, 281, 6878, 19810, 19251, 13], "temperature": 0.0, "avg_logprob": -0.27613580226898193, "compression_ratio": 1.5737051792828685, "no_speech_prob": 0.00027935372781939805}, {"id": 140, "seek": 67916, "start": 679.16, "end": 685.88, "text": " Since these types of changes that would not be possible with a regular expression approach.", "tokens": [4162, 613, 3467, 295, 2962, 300, 576, 406, 312, 1944, 365, 257, 3890, 6114, 3109, 13], "temperature": 0.0, "avg_logprob": -0.26149088541666665, "compression_ratio": 1.4958333333333333, "no_speech_prob": 8.864505070960149e-05}, {"id": 141, "seek": 67916, "start": 685.88, "end": 688.0799999999999, "text": " Running migration recipes is fairly straightforward.", "tokens": [28136, 17011, 13035, 307, 6457, 15325, 13], "temperature": 0.0, "avg_logprob": -0.26149088541666665, "compression_ratio": 1.4958333333333333, "no_speech_prob": 8.864505070960149e-05}, {"id": 142, "seek": 67916, "start": 688.0799999999999, "end": 692.48, "text": " First, you apply a built-in plugin for OpenRero.", "tokens": [2386, 11, 291, 3079, 257, 3094, 12, 259, 23407, 337, 7238, 49, 2032, 13], "temperature": 0.0, "avg_logprob": -0.26149088541666665, "compression_ratio": 1.4958333333333333, "no_speech_prob": 8.864505070960149e-05}, {"id": 143, "seek": 67916, "start": 692.48, "end": 697.56, "text": " I've used Maven in my example, but Gradle works just as well.", "tokens": [286, 600, 1143, 4042, 553, 294, 452, 1365, 11, 457, 16710, 306, 1985, 445, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.26149088541666665, "compression_ratio": 1.4958333333333333, "no_speech_prob": 8.864505070960149e-05}, {"id": 144, "seek": 67916, "start": 697.56, "end": 701.88, "text": " Then depending on the changes you want to make, you add a dependency on the respective", "tokens": [1396, 5413, 322, 264, 2962, 291, 528, 281, 652, 11, 291, 909, 257, 33621, 322, 264, 23649], "temperature": 0.0, "avg_logprob": -0.26149088541666665, "compression_ratio": 1.4958333333333333, "no_speech_prob": 8.864505070960149e-05}, {"id": 145, "seek": 67916, "start": 701.88, "end": 702.88, "text": " OpenRero module.", "tokens": [7238, 49, 2032, 10088, 13], "temperature": 0.0, "avg_logprob": -0.26149088541666665, "compression_ratio": 1.4958333333333333, "no_speech_prob": 8.864505070960149e-05}, {"id": 146, "seek": 70288, "start": 702.88, "end": 710.08, "text": " Lastly, you run the OpenRero plugin with the migration recipe that you want to execute.", "tokens": [18072, 11, 291, 1190, 264, 7238, 49, 2032, 23407, 365, 264, 17011, 6782, 300, 291, 528, 281, 14483, 13], "temperature": 0.0, "avg_logprob": -0.16772946224936955, "compression_ratio": 1.5520833333333333, "no_speech_prob": 0.00021901600121054798}, {"id": 147, "seek": 70288, "start": 710.08, "end": 716.84, "text": " The command scene here will migrate an application from Spring Boot 1.5 to the latest Spring", "tokens": [440, 5622, 4145, 510, 486, 31821, 364, 3861, 490, 14013, 37263, 502, 13, 20, 281, 264, 6792, 14013], "temperature": 0.0, "avg_logprob": -0.16772946224936955, "compression_ratio": 1.5520833333333333, "no_speech_prob": 0.00021901600121054798}, {"id": 148, "seek": 70288, "start": 716.84, "end": 722.6, "text": " Boot 2.7 branch, and we're also working on a 3.0 migration.", "tokens": [37263, 568, 13, 22, 9819, 11, 293, 321, 434, 611, 1364, 322, 257, 805, 13, 15, 17011, 13], "temperature": 0.0, "avg_logprob": -0.16772946224936955, "compression_ratio": 1.5520833333333333, "no_speech_prob": 0.00021901600121054798}, {"id": 149, "seek": 70288, "start": 722.6, "end": 727.08, "text": " This migration works all the way back to Spring Boot 1.5.", "tokens": [639, 17011, 1985, 439, 264, 636, 646, 281, 14013, 37263, 502, 13, 20, 13], "temperature": 0.0, "avg_logprob": -0.16772946224936955, "compression_ratio": 1.5520833333333333, "no_speech_prob": 0.00021901600121054798}, {"id": 150, "seek": 72708, "start": 727.08, "end": 733.1600000000001, "text": " They will update dependencies, properties, and deprecations from any older versions,", "tokens": [814, 486, 5623, 36606, 11, 7221, 11, 293, 1367, 13867, 763, 490, 604, 4906, 9606, 11], "temperature": 0.0, "avg_logprob": -0.23000720538924227, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.00010839766036951914}, {"id": 151, "seek": 72708, "start": 733.1600000000001, "end": 738.4000000000001, "text": " and it includes the JU5 migration we've seen before, as well as any Spring-specific test", "tokens": [293, 309, 5974, 264, 508, 52, 20, 17011, 321, 600, 1612, 949, 11, 382, 731, 382, 604, 14013, 12, 29258, 1500], "temperature": 0.0, "avg_logprob": -0.23000720538924227, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.00010839766036951914}, {"id": 152, "seek": 72708, "start": 738.4000000000001, "end": 739.4000000000001, "text": " constructs.", "tokens": [7690, 82, 13], "temperature": 0.0, "avg_logprob": -0.23000720538924227, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.00010839766036951914}, {"id": 153, "seek": 72708, "start": 739.4000000000001, "end": 746.76, "text": " Now that we've seen how OpenRero works, let's have a look at what you can do with it.", "tokens": [823, 300, 321, 600, 1612, 577, 7238, 49, 2032, 1985, 11, 718, 311, 362, 257, 574, 412, 437, 291, 393, 360, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.23000720538924227, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.00010839766036951914}, {"id": 154, "seek": 72708, "start": 746.76, "end": 751.0, "text": " Obviously, but now we've seen it is well-suited to migrations.", "tokens": [7580, 11, 457, 586, 321, 600, 1612, 309, 307, 731, 12, 15091, 1226, 281, 6186, 12154, 13], "temperature": 0.0, "avg_logprob": -0.23000720538924227, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.00010839766036951914}, {"id": 155, "seek": 72708, "start": 751.0, "end": 756.84, "text": " You've mostly seen migrations from one version to another, but you can also migrate from", "tokens": [509, 600, 5240, 1612, 6186, 12154, 490, 472, 3037, 281, 1071, 11, 457, 291, 393, 611, 31821, 490], "temperature": 0.0, "avg_logprob": -0.23000720538924227, "compression_ratio": 1.6785714285714286, "no_speech_prob": 0.00010839766036951914}, {"id": 156, "seek": 75684, "start": 756.84, "end": 759.12, "text": " one framework to another.", "tokens": [472, 8388, 281, 1071, 13], "temperature": 0.0, "avg_logprob": -0.26573074340820313, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0001576627983013168}, {"id": 157, "seek": 75684, "start": 759.12, "end": 763.9200000000001, "text": " If you want to switch from large for J to as a large for J, you can, and the same thing", "tokens": [759, 291, 528, 281, 3679, 490, 2416, 337, 508, 281, 382, 257, 2416, 337, 508, 11, 291, 393, 11, 293, 264, 912, 551], "temperature": 0.0, "avg_logprob": -0.26573074340820313, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0001576627983013168}, {"id": 158, "seek": 75684, "start": 763.9200000000001, "end": 772.1600000000001, "text": " if you want to switch between JUnit and AssertJ, and even larger migrations are in development.", "tokens": [498, 291, 528, 281, 3679, 1296, 508, 12405, 270, 293, 6281, 911, 41, 11, 293, 754, 4833, 6186, 12154, 366, 294, 3250, 13], "temperature": 0.0, "avg_logprob": -0.26573074340820313, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0001576627983013168}, {"id": 159, "seek": 75684, "start": 772.1600000000001, "end": 775.64, "text": " Another application is fixing static analysis findings.", "tokens": [3996, 3861, 307, 19442, 13437, 5215, 16483, 13], "temperature": 0.0, "avg_logprob": -0.26573074340820313, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0001576627983013168}, {"id": 160, "seek": 75684, "start": 775.64, "end": 780.64, "text": " A large collection of checkstiles, sonar, and security findings are supported to allow", "tokens": [316, 2416, 5765, 295, 1520, 372, 4680, 11, 1872, 289, 11, 293, 3825, 16483, 366, 8104, 281, 2089], "temperature": 0.0, "avg_logprob": -0.26573074340820313, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0001576627983013168}, {"id": 161, "seek": 75684, "start": 780.64, "end": 784.2, "text": " you to reduce your technical debt in minutes.", "tokens": [291, 281, 5407, 428, 6191, 7831, 294, 2077, 13], "temperature": 0.0, "avg_logprob": -0.26573074340820313, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0001576627983013168}, {"id": 162, "seek": 78420, "start": 784.2, "end": 790.48, "text": " Finally, there's a whole class of recipes to enforce a code style, and rather than merely", "tokens": [6288, 11, 456, 311, 257, 1379, 1508, 295, 13035, 281, 24825, 257, 3089, 3758, 11, 293, 2831, 813, 17003], "temperature": 0.0, "avg_logprob": -0.21921222614792157, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.0002036461519310251}, {"id": 163, "seek": 78420, "start": 790.48, "end": 797.1600000000001, "text": " apply a formator, these style recipes go a step further to actually change your code.", "tokens": [3079, 257, 1254, 1639, 11, 613, 3758, 13035, 352, 257, 1823, 3052, 281, 767, 1319, 428, 3089, 13], "temperature": 0.0, "avg_logprob": -0.21921222614792157, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.0002036461519310251}, {"id": 164, "seek": 78420, "start": 797.1600000000001, "end": 801.72, "text": " This ensures your code style is consistently from project to project.", "tokens": [639, 28111, 428, 3089, 3758, 307, 14961, 490, 1716, 281, 1716, 13], "temperature": 0.0, "avg_logprob": -0.21921222614792157, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.0002036461519310251}, {"id": 165, "seek": 78420, "start": 801.72, "end": 806.4000000000001, "text": " In addition to what's already available, it's fairly easy to add custom migration recipes", "tokens": [682, 4500, 281, 437, 311, 1217, 2435, 11, 309, 311, 6457, 1858, 281, 909, 2375, 17011, 13035], "temperature": 0.0, "avg_logprob": -0.21921222614792157, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.0002036461519310251}, {"id": 166, "seek": 78420, "start": 806.4000000000001, "end": 810.6, "text": " specific to your project.", "tokens": [2685, 281, 428, 1716, 13], "temperature": 0.0, "avg_logprob": -0.21921222614792157, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.0002036461519310251}, {"id": 167, "seek": 78420, "start": 810.6, "end": 814.1600000000001, "text": " Now that we've seen how it works and what you can do with it, let's briefly look at", "tokens": [823, 300, 321, 600, 1612, 577, 309, 1985, 293, 437, 291, 393, 360, 365, 309, 11, 718, 311, 10515, 574, 412], "temperature": 0.0, "avg_logprob": -0.21921222614792157, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.0002036461519310251}, {"id": 168, "seek": 81416, "start": 814.16, "end": 817.0799999999999, "text": " what is still to come.", "tokens": [437, 307, 920, 281, 808, 13], "temperature": 0.0, "avg_logprob": -0.22651564400151092, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.00010118159843841568}, {"id": 169, "seek": 81416, "start": 817.0799999999999, "end": 823.48, "text": " As you've seen, OpenRemo has dedicated parsers for multiple languages already, but we have", "tokens": [1018, 291, 600, 1612, 11, 7238, 49, 36221, 575, 8374, 21156, 433, 337, 3866, 8650, 1217, 11, 457, 321, 362], "temperature": 0.0, "avg_logprob": -0.22651564400151092, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.00010118159843841568}, {"id": 170, "seek": 81416, "start": 823.48, "end": 826.16, "text": " some catching up to do still.", "tokens": [512, 16124, 493, 281, 360, 920, 13], "temperature": 0.0, "avg_logprob": -0.22651564400151092, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.00010118159843841568}, {"id": 171, "seek": 81416, "start": 826.16, "end": 832.28, "text": " We are working on a parser for both Java 18 and up and Kotlin, but note that you're perfectly", "tokens": [492, 366, 1364, 322, 257, 21156, 260, 337, 1293, 10745, 2443, 293, 493, 293, 30123, 5045, 11, 457, 3637, 300, 291, 434, 6239], "temperature": 0.0, "avg_logprob": -0.22651564400151092, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.00010118159843841568}, {"id": 172, "seek": 81416, "start": 832.28, "end": 838.8, "text": " able to run on Java 17, but you cannot yet migrate to some of the new language features.", "tokens": [1075, 281, 1190, 322, 10745, 3282, 11, 457, 291, 2644, 1939, 31821, 281, 512, 295, 264, 777, 2856, 4122, 13], "temperature": 0.0, "avg_logprob": -0.22651564400151092, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.00010118159843841568}, {"id": 173, "seek": 81416, "start": 838.8, "end": 843.36, "text": " The interesting thing about Kotlin is going to be that the Java migration recipes that", "tokens": [440, 1880, 551, 466, 30123, 5045, 307, 516, 281, 312, 300, 264, 10745, 17011, 13035, 300], "temperature": 0.0, "avg_logprob": -0.22651564400151092, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.00010118159843841568}, {"id": 174, "seek": 84336, "start": 843.36, "end": 849.28, "text": " we have will also just work, even though the languages look very different.", "tokens": [321, 362, 486, 611, 445, 589, 11, 754, 1673, 264, 8650, 574, 588, 819, 13], "temperature": 0.0, "avg_logprob": -0.1493323262532552, "compression_ratio": 1.5291479820627802, "no_speech_prob": 9.131176921073347e-05}, {"id": 175, "seek": 84336, "start": 849.28, "end": 854.44, "text": " Another subject we're working on is data flow analysis, and this not only takes into account", "tokens": [3996, 3983, 321, 434, 1364, 322, 307, 1412, 3095, 5215, 11, 293, 341, 406, 787, 2516, 666, 2696], "temperature": 0.0, "avg_logprob": -0.1493323262532552, "compression_ratio": 1.5291479820627802, "no_speech_prob": 9.131176921073347e-05}, {"id": 176, "seek": 84336, "start": 854.44, "end": 861.5600000000001, "text": " the individual code statements, but also how data flows throughout your application.", "tokens": [264, 2609, 3089, 12363, 11, 457, 611, 577, 1412, 12867, 3710, 428, 3861, 13], "temperature": 0.0, "avg_logprob": -0.1493323262532552, "compression_ratio": 1.5291479820627802, "no_speech_prob": 9.131176921073347e-05}, {"id": 177, "seek": 84336, "start": 861.5600000000001, "end": 869.84, "text": " This will allow recipes to, for instance, add immutability or dedicated security fixes.", "tokens": [639, 486, 2089, 13035, 281, 11, 337, 5197, 11, 909, 3397, 325, 2310, 420, 8374, 3825, 32539, 13], "temperature": 0.0, "avg_logprob": -0.1493323262532552, "compression_ratio": 1.5291479820627802, "no_speech_prob": 9.131176921073347e-05}, {"id": 178, "seek": 86984, "start": 869.84, "end": 874.44, "text": " Another interesting development is the Spring Boot Migrator project from VMR.", "tokens": [3996, 1880, 3250, 307, 264, 14013, 37263, 18951, 19802, 1716, 490, 18038, 49, 13], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 179, "seek": 86984, "start": 874.44, "end": 881.0400000000001, "text": " It builds upon OpenRemo to migrate projects towards Spring from other frameworks.", "tokens": [467, 15182, 3564, 7238, 49, 36221, 281, 31821, 4455, 3030, 14013, 490, 661, 29834, 13], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 180, "seek": 86984, "start": 881.0400000000001, "end": 885.9200000000001, "text": " It takes a slightly different, more interactive approach, which will be coming handy when", "tokens": [467, 2516, 257, 4748, 819, 11, 544, 15141, 3109, 11, 597, 486, 312, 1348, 13239, 562], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 181, "seek": 86984, "start": 885.9200000000001, "end": 889.88, "text": " it comes to the Spring Boot 3 migration.", "tokens": [309, 1487, 281, 264, 14013, 37263, 805, 17011, 13], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 182, "seek": 86984, "start": 889.88, "end": 892.0, "text": " All these features are inactive development.", "tokens": [1057, 613, 4122, 366, 294, 12596, 3250, 13], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 183, "seek": 86984, "start": 892.0, "end": 895.88, "text": " It's not yet clear when you can use this in a production setting, but it's interesting", "tokens": [467, 311, 406, 1939, 1850, 562, 291, 393, 764, 341, 294, 257, 4265, 3287, 11, 457, 309, 311, 1880], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 184, "seek": 86984, "start": 895.88, "end": 899.8000000000001, "text": " developments nonetheless.", "tokens": [20862, 26756, 13], "temperature": 0.0, "avg_logprob": -0.23064695358276366, "compression_ratio": 1.6905660377358491, "no_speech_prob": 0.00017517295782454312}, {"id": 185, "seek": 89980, "start": 899.8, "end": 904.28, "text": " There's a last subject I want to tell you a bit about the company behind OpenRemo.", "tokens": [821, 311, 257, 1036, 3983, 286, 528, 281, 980, 291, 257, 857, 466, 264, 2237, 2261, 7238, 49, 36221, 13], "temperature": 0.0, "avg_logprob": -0.16630669029391543, "compression_ratio": 1.5387453874538746, "no_speech_prob": 0.00017231375386472791}, {"id": 186, "seek": 89980, "start": 904.28, "end": 910.4399999999999, "text": " As I said before, Moderna has committed to making all recipes available open source.", "tokens": [1018, 286, 848, 949, 11, 6583, 22250, 575, 7784, 281, 1455, 439, 13035, 2435, 1269, 4009, 13], "temperature": 0.0, "avg_logprob": -0.16630669029391543, "compression_ratio": 1.5387453874538746, "no_speech_prob": 0.00017231375386472791}, {"id": 187, "seek": 89980, "start": 910.4399999999999, "end": 914.0799999999999, "text": " Our focus is on applying recipes at scale.", "tokens": [2621, 1879, 307, 322, 9275, 13035, 412, 4373, 13], "temperature": 0.0, "avg_logprob": -0.16630669029391543, "compression_ratio": 1.5387453874538746, "no_speech_prob": 0.00017231375386472791}, {"id": 188, "seek": 89980, "start": 914.0799999999999, "end": 918.5999999999999, "text": " Through Moderna, clients can discover code patterns across an entire organization and", "tokens": [8927, 6583, 22250, 11, 6982, 393, 4411, 3089, 8294, 2108, 364, 2302, 4475, 293], "temperature": 0.0, "avg_logprob": -0.16630669029391543, "compression_ratio": 1.5387453874538746, "no_speech_prob": 0.00017231375386472791}, {"id": 189, "seek": 89980, "start": 918.5999999999999, "end": 921.88, "text": " target these for transformation.", "tokens": [3779, 613, 337, 9887, 13], "temperature": 0.0, "avg_logprob": -0.16630669029391543, "compression_ratio": 1.5387453874538746, "no_speech_prob": 0.00017231375386472791}, {"id": 190, "seek": 89980, "start": 921.88, "end": 925.92, "text": " And even if you're not a paying customer, you can still use the web interface to browse", "tokens": [400, 754, 498, 291, 434, 406, 257, 6229, 5474, 11, 291, 393, 920, 764, 264, 3670, 9226, 281, 31442], "temperature": 0.0, "avg_logprob": -0.16630669029391543, "compression_ratio": 1.5387453874538746, "no_speech_prob": 0.00017231375386472791}, {"id": 191, "seek": 92592, "start": 925.92, "end": 930.52, "text": " available recipes and even apply them to open source projects.", "tokens": [2435, 13035, 293, 754, 3079, 552, 281, 1269, 4009, 4455, 13], "temperature": 0.0, "avg_logprob": -0.1735526124636332, "compression_ratio": 1.5859375, "no_speech_prob": 0.00010488822590559721}, {"id": 192, "seek": 92592, "start": 930.52, "end": 934.8, "text": " This can be a great way to start contributing back to open source software.", "tokens": [639, 393, 312, 257, 869, 636, 281, 722, 19270, 646, 281, 1269, 4009, 4722, 13], "temperature": 0.0, "avg_logprob": -0.1735526124636332, "compression_ratio": 1.5859375, "no_speech_prob": 0.00010488822590559721}, {"id": 193, "seek": 92592, "start": 934.8, "end": 939.5999999999999, "text": " And if you find any of the migration steps are missing, OpenRemo itself is very accepting", "tokens": [400, 498, 291, 915, 604, 295, 264, 17011, 4439, 366, 5361, 11, 7238, 49, 36221, 2564, 307, 588, 17391], "temperature": 0.0, "avg_logprob": -0.1735526124636332, "compression_ratio": 1.5859375, "no_speech_prob": 0.00010488822590559721}, {"id": 194, "seek": 92592, "start": 939.5999999999999, "end": 942.4399999999999, "text": " of new contributions.", "tokens": [295, 777, 15725, 13], "temperature": 0.0, "avg_logprob": -0.1735526124636332, "compression_ratio": 1.5859375, "no_speech_prob": 0.00010488822590559721}, {"id": 195, "seek": 92592, "start": 942.4399999999999, "end": 946.5999999999999, "text": " The community plays a large role in the development of new recipes.", "tokens": [440, 1768, 5749, 257, 2416, 3090, 294, 264, 3250, 295, 777, 13035, 13], "temperature": 0.0, "avg_logprob": -0.1735526124636332, "compression_ratio": 1.5859375, "no_speech_prob": 0.00010488822590559721}, {"id": 196, "seek": 92592, "start": 946.5999999999999, "end": 953.48, "text": " Now, as you could probably tell from my email address, we're not exactly a big company.", "tokens": [823, 11, 382, 291, 727, 1391, 980, 490, 452, 3796, 2985, 11, 321, 434, 406, 2293, 257, 955, 2237, 13], "temperature": 0.0, "avg_logprob": -0.1735526124636332, "compression_ratio": 1.5859375, "no_speech_prob": 0.00010488822590559721}, {"id": 197, "seek": 95348, "start": 953.48, "end": 957.24, "text": " But we're pretty well connected in the broader Java community.", "tokens": [583, 321, 434, 1238, 731, 4582, 294, 264, 13227, 10745, 1768, 13], "temperature": 0.0, "avg_logprob": -0.19947817451075503, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.00020240551384631544}, {"id": 198, "seek": 95348, "start": 957.24, "end": 962.84, "text": " Through collaborations, other companies contribute migration recipes for their remotes.", "tokens": [8927, 36908, 11, 661, 3431, 10586, 17011, 13035, 337, 641, 890, 17251, 13], "temperature": 0.0, "avg_logprob": -0.19947817451075503, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.00020240551384631544}, {"id": 199, "seek": 95348, "start": 962.84, "end": 970.08, "text": " And this ensures their users are able to migrate easily and timely with new releases.", "tokens": [400, 341, 28111, 641, 5022, 366, 1075, 281, 31821, 3612, 293, 25150, 365, 777, 16952, 13], "temperature": 0.0, "avg_logprob": -0.19947817451075503, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.00020240551384631544}, {"id": 200, "seek": 95348, "start": 970.08, "end": 975.88, "text": " And if you maintain or merely enjoy your particular library or framework, you can help other users", "tokens": [400, 498, 291, 6909, 420, 17003, 2103, 428, 1729, 6405, 420, 8388, 11, 291, 393, 854, 661, 5022], "temperature": 0.0, "avg_logprob": -0.19947817451075503, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.00020240551384631544}, {"id": 201, "seek": 95348, "start": 975.88, "end": 980.48, "text": " by providing migration recipes.", "tokens": [538, 6530, 17011, 13035, 13], "temperature": 0.0, "avg_logprob": -0.19947817451075503, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.00020240551384631544}, {"id": 202, "seek": 98048, "start": 980.48, "end": 983.6, "text": " So with that, we are getting near the end of my presentation.", "tokens": [407, 365, 300, 11, 321, 366, 1242, 2651, 264, 917, 295, 452, 5860, 13], "temperature": 0.0, "avg_logprob": -0.23456031974704786, "compression_ratio": 1.5121951219512195, "no_speech_prob": 0.00015116760914679617}, {"id": 203, "seek": 98048, "start": 983.6, "end": 989.16, "text": " Before I send you away, I want to recommend a few resources where you can learn more.", "tokens": [4546, 286, 2845, 291, 1314, 11, 286, 528, 281, 2748, 257, 1326, 3593, 689, 291, 393, 1466, 544, 13], "temperature": 0.0, "avg_logprob": -0.23456031974704786, "compression_ratio": 1.5121951219512195, "no_speech_prob": 0.00015116760914679617}, {"id": 204, "seek": 98048, "start": 989.16, "end": 993.9200000000001, "text": " There's extensive documentation available on OpenRemo.", "tokens": [821, 311, 13246, 14333, 2435, 322, 7238, 49, 36221, 13], "temperature": 0.0, "avg_logprob": -0.23456031974704786, "compression_ratio": 1.5121951219512195, "no_speech_prob": 0.00015116760914679617}, {"id": 205, "seek": 98048, "start": 993.9200000000001, "end": 998.96, "text": " Development is all on GitHub with new suggestions typically picked up with surprising speed.", "tokens": [15041, 307, 439, 322, 23331, 365, 777, 13396, 5850, 6183, 493, 365, 8830, 3073, 13], "temperature": 0.0, "avg_logprob": -0.23456031974704786, "compression_ratio": 1.5121951219512195, "no_speech_prob": 0.00015116760914679617}, {"id": 206, "seek": 98048, "start": 998.96, "end": 1005.36, "text": " And as you've all seen, it's quite easy to contribute minor migration steps.", "tokens": [400, 382, 291, 600, 439, 1612, 11, 309, 311, 1596, 1858, 281, 10586, 6696, 17011, 4439, 13], "temperature": 0.0, "avg_logprob": -0.23456031974704786, "compression_ratio": 1.5121951219512195, "no_speech_prob": 0.00015116760914679617}, {"id": 207, "seek": 100536, "start": 1005.36, "end": 1012.6800000000001, "text": " If you want to try some recipes quickly on OpenSource software, have a look at public.moderna.io.", "tokens": [759, 291, 528, 281, 853, 512, 13035, 2661, 322, 7238, 50, 2948, 4722, 11, 362, 257, 574, 412, 1908, 13, 8014, 22250, 13, 1004, 13], "temperature": 0.0, "avg_logprob": -0.23566807233370268, "compression_ratio": 1.5653846153846154, "no_speech_prob": 0.00019126910774502903}, {"id": 208, "seek": 100536, "start": 1012.6800000000001, "end": 1017.4, "text": " And if you have any questions, you can reach out on our public slide or via email.", "tokens": [400, 498, 291, 362, 604, 1651, 11, 291, 393, 2524, 484, 322, 527, 1908, 4137, 420, 5766, 3796, 13], "temperature": 0.0, "avg_logprob": -0.23566807233370268, "compression_ratio": 1.5653846153846154, "no_speech_prob": 0.00019126910774502903}, {"id": 209, "seek": 100536, "start": 1017.4, "end": 1023.84, "text": " And finally, if you would like to play around with the months you've seen before, I've", "tokens": [400, 2721, 11, 498, 291, 576, 411, 281, 862, 926, 365, 264, 2493, 291, 600, 1612, 949, 11, 286, 600], "temperature": 0.0, "avg_logprob": -0.23566807233370268, "compression_ratio": 1.5653846153846154, "no_speech_prob": 0.00019126910774502903}, {"id": 210, "seek": 100536, "start": 1023.84, "end": 1027.52, "text": " written a blog post to accompany this presentation.", "tokens": [3720, 257, 6968, 2183, 281, 21627, 341, 5860, 13], "temperature": 0.0, "avg_logprob": -0.23566807233370268, "compression_ratio": 1.5653846153846154, "no_speech_prob": 0.00019126910774502903}, {"id": 211, "seek": 100536, "start": 1027.52, "end": 1032.92, "text": " This blog post migrates an old Spring Path Clinic branch from Spring Boot 1.5 to Spring", "tokens": [639, 6968, 2183, 6186, 12507, 364, 1331, 14013, 21914, 37918, 9819, 490, 14013, 37263, 502, 13, 20, 281, 14013], "temperature": 0.0, "avg_logprob": -0.23566807233370268, "compression_ratio": 1.5653846153846154, "no_speech_prob": 0.00019126910774502903}, {"id": 212, "seek": 103292, "start": 1032.92, "end": 1037.3200000000002, "text": " on Java 8 to Spring Boot 2.x on Java 17.", "tokens": [322, 10745, 1649, 281, 14013, 37263, 568, 13, 87, 322, 10745, 3282, 13], "temperature": 0.0, "avg_logprob": -0.24698850382929263, "compression_ratio": 1.584070796460177, "no_speech_prob": 0.00023523705021943897}, {"id": 213, "seek": 103292, "start": 1037.3200000000002, "end": 1043.04, "text": " That way you can play around with your commands and see the changes made every step.", "tokens": [663, 636, 291, 393, 862, 926, 365, 428, 16901, 293, 536, 264, 2962, 1027, 633, 1823, 13], "temperature": 0.0, "avg_logprob": -0.24698850382929263, "compression_ratio": 1.584070796460177, "no_speech_prob": 0.00023523705021943897}, {"id": 214, "seek": 103292, "start": 1043.04, "end": 1046.88, "text": " For your own projects, I recommend you start with the testing framework migrations.", "tokens": [1171, 428, 1065, 4455, 11, 286, 2748, 291, 722, 365, 264, 4997, 8388, 6186, 12154, 13], "temperature": 0.0, "avg_logprob": -0.24698850382929263, "compression_ratio": 1.584070796460177, "no_speech_prob": 0.00023523705021943897}, {"id": 215, "seek": 103292, "start": 1046.88, "end": 1053.1200000000001, "text": " They're an easy way to gain confidence in the tool and see what it can do for your project.", "tokens": [814, 434, 364, 1858, 636, 281, 6052, 6687, 294, 264, 2290, 293, 536, 437, 309, 393, 360, 337, 428, 1716, 13], "temperature": 0.0, "avg_logprob": -0.24698850382929263, "compression_ratio": 1.584070796460177, "no_speech_prob": 0.00023523705021943897}, {"id": 216, "seek": 105312, "start": 1053.12, "end": 1063.12, "text": " And with that, I'd like to thank you for your attention.", "tokens": [400, 365, 300, 11, 286, 1116, 411, 281, 1309, 291, 337, 428, 3202, 13], "temperature": 0.0, "avg_logprob": -0.23045613392289863, "compression_ratio": 1.6093023255813954, "no_speech_prob": 0.0001848183892434463}, {"id": 217, "seek": 105312, "start": 1063.12, "end": 1067.32, "text": " What's also really great about Tim's story is that he was enthusiastic about a project.", "tokens": [708, 311, 611, 534, 869, 466, 7172, 311, 1657, 307, 300, 415, 390, 28574, 466, 257, 1716, 13], "temperature": 0.0, "avg_logprob": -0.23045613392289863, "compression_ratio": 1.6093023255813954, "no_speech_prob": 0.0001848183892434463}, {"id": 218, "seek": 105312, "start": 1067.32, "end": 1072.12, "text": " He started contributing to it and now he was offered a job when he's working at the company", "tokens": [634, 1409, 19270, 281, 309, 293, 586, 415, 390, 8059, 257, 1691, 562, 415, 311, 1364, 412, 264, 2237], "temperature": 0.0, "avg_logprob": -0.23045613392289863, "compression_ratio": 1.6093023255813954, "no_speech_prob": 0.0001848183892434463}, {"id": 219, "seek": 105312, "start": 1072.12, "end": 1073.6399999999999, "text": " behind this project.", "tokens": [2261, 341, 1716, 13], "temperature": 0.0, "avg_logprob": -0.23045613392289863, "compression_ratio": 1.6093023255813954, "no_speech_prob": 0.0001848183892434463}, {"id": 220, "seek": 105312, "start": 1073.6399999999999, "end": 1081.1999999999998, "text": " It's really the textbook story of starting contributing and then getting paid to do that", "tokens": [467, 311, 534, 264, 25591, 1657, 295, 2891, 19270, 293, 550, 1242, 4835, 281, 360, 300], "temperature": 0.0, "avg_logprob": -0.23045613392289863, "compression_ratio": 1.6093023255813954, "no_speech_prob": 0.0001848183892434463}, {"id": 221, "seek": 108120, "start": 1081.2, "end": 1084.48, "text": " and joining the company behind the project.", "tokens": [293, 5549, 264, 2237, 2261, 264, 1716, 13], "temperature": 0.0, "avg_logprob": -0.29978295376426295, "compression_ratio": 0.9710144927536232, "no_speech_prob": 0.0005970078054815531}, {"id": 222, "seek": 108448, "start": 1084.48, "end": 1113.44, "text": " Well, thank you very much.", "tokens": [50364, 1042, 11, 1309, 291, 588, 709, 13, 51812], "temperature": 0.0, "avg_logprob": -0.6594814777374267, "compression_ratio": 0.7647058823529411, "no_speech_prob": 0.0011437312932685018}], "language": "en"}