{"text": " Hello, Faustem. My name is Alejandro and today I am going to talk about Papis, a simple, powerful and extendable command line bibliography manager that I have been developing during the last 7 years. I will be explaining some of the main considerations of the project and demoing some of its basic use cases. First of all, let me introduce myself. I work currently as a physicist at the Technical University of Vienna in Austria. We develop massively parallel algorithms in order to calculate properties of molecules and solids from a theoretical point of view. You can find me on Nasodon or around the web. Don't hesitate to contact me. So, what is Papis? Papis started as a simple bibliography manager built around the command line. It should make possible to manage papers or books at scale or for small curated libraries. It is therefore important to implement a simple data model and use an approachable programming language, such as Python, so that users can interact easily with Papis' many features. In addition, Python also encourages contributions from researchers in the academic world. Since nowadays, many researchers are exposed to this language. Papis strives to be and build a community, and various plugins have appeared thanks to the community. There are plugins for the major text editors, such as NeoVim and Emacs, and partial support exists for VS Code and Vim. Additionally, lately we have been working on the web application for Papis, and I will be showing some of its features in this talk. But you are asking yourself, why Papis? We think that it should be possible and simple to perform complex tasks on a whole library. This is made possible through a rich command line interface. You can add papers from a DOI or from a variety of websites supported by Papis. You can explore sources like Crossref from the command line, or download information about the citations of a publication, or check which publications cite the current publication. You can take notes that play well with tools like Vim or Emacs org mode. You can version control your documents and export to the most common formats. You can spend countless hours curating and improving your library's notes, metadata, and PDF documents without fearing losing your data to an API change or end-of-life of Papis. Since your data is stored in a very simple but flexible format. I want to emphasize the fact that one of the main goals of Papis is enabling the user to be independent of Papis itself. A researcher, academic or not, spends an enormous amount of time searching, reading and not notating publications. For us Papis maintainers, it is important that a person comfortable with any scripting language should be able to retrieve the totality of Papis data by writing a script in an afternoon. In order to accomplish this, an extremely simple library structure was chosen. The library structure relies on having one folder per library document. This means, for instance, in the case of the shown publication of Turing, the folder includes a YAML file containing the metadata information of the publication and an additional PDF file with the published publication itself. In this example library, we would have an additional document under the folder 1-document, where we find two PDF files in this case. A document in a Papis library is any folder containing a YAML file entitled info.yaml. The contents of the YAML file are in principle up to the user's to the user's are in principle up to the user's to determine. However, in practice, there are some conventions used in Papis. Inside the info.yaml file, the key files contains a list of related files in the documents directory. These files might be PDF files or any other kind of files relevant to the document. In the case of the Turing publication, files therefore lists a single PDF document, paper.pdf. The key ref is used for exploring BipTec files and is the reference of the document when using bibliographic tools outside of Papis. The YAML key type is also used for BipTecs exploring and is the type of document, whether a book, an article, a monograph, etc. There is also an in-built support for tags, which may be added as a list of space-separated keywords. We chose the YAML format due to its ease of writing, reading, and because most programming languages are provided with libraries that can read these files. Of course, given the simplicity of the library model, it is possible to write a crude finder with just a unique scrap and fine commands. All functionalities in Papis can be customized through a configuration file in the INI format. Papis can define multiple libraries through the configuration file, and all Papis settings can be independently configured for each library. You can define default settings under the Settings section, which will be common to all libraries. A library is simply defined as a section with a dir key, which contains the path to the library directory containing all documents. You can then customize this library, in this case a library named Papis, and set the default opener tool to the PDF viewer events. If you happen to want an additional library of books holding mostly EPUB formatted books, you could define the opener to be caliber instead. You can read about all the configuration settings in the Documentation page, where you will see a description of their function and their default values. With this introduction, let us take a look now at a common workflow to add an article from a journal page. Here is a common view of an article in a browser. We can see lots of information, and the easiest way of adding this article to Papis will be by locating the DOI of the article in the page. In this case, we locate the DOI in the URL of the article, and we copy it to our clipboard to paste it in the terminal. The command for adding a paper is Papis add, and Papis add comes with quite many options. In general, when adding a document, Papis will try to download metadata from various sources and, if possible, download PDF documents, if they are freely and legally available. In here, we see that I am using the edit flag. This flag instructs the Papis add command to open the editor with the info.yaml file before adding the document to the library. Similarly, the open flag instructs the command to open the attached files, if any, before adding the document to the library. We are also telling the command through the from flag to retrieve information exclusively from the DOI. We can also preset some metadata through the command line. In this case, we are adding the tags, classics and DFT. Let's go ahead and run the command. Papis will now try to download metadata and a PDF file from online sources. In the current configuration, we are greeted with an interactive prompt to add, split or reject the metadata retrieved from Crossref. We choose to accept the metadata. The interactive session now shows us a retrieved PDF document and asks us, if this is the document that belongs to the publication. At this point, we can inspect the document and we realize that we indeed want this PDF file, so we press Y. Now, all the information is in place and we can see a preliminary version of the info file since we pass the edit flag. We can see that a lot of information could be retrieved, detailed author list information, volume, pages, among others, and our tags have found their way into the YAML file correctly. A confirmation prompt subsequently appears since we pass the confirmed flag to the command. We agree to it and, therefore, the document gets added to the library. We can now fetch information about the publication cited in this article. The command for this is citations and we pass to it the fetch citations flag, which first checks for information in our library and then heads to Crossref to retrieve relevant information about the references appearing in our newly added document. If we now open the directory where the document has been stored, we see that the PDF file has been correctly stored alongside the info YAML file and the newly generated citations.yaml file. If we inspect the citations file, we see that it is in the format of a list of YAML files, where every element separated by three dashes represents bibliographic information about the citations. This can be used for scripting, for browsing the citations, or for easily visualizing them through the web application. This demo will show how to leverage the Puppys API in Python to write one of the simplest scripts you can write. You can find more information in the documentation together with other more complex example scripts. First of all, let us add a bigger library to our demo library. For this, we need to edit the configuration file and add an additional library. After adding the library, we can list the directories with the list command, which shows us the interactive interface to select documents. Most Puppys commands accept a query argument as an input. In this case, we can query for documents matching the author to include the string Einstein. We can also use the all flag to do a Puppys action to all documents matching the query. In this case, listing the full paths for the folders. Other commands like open, edit, or update work in a similar fashion. Next, we will write a simple Python script to scan all the documents in the library and add the tag to the document whenever the substring this appears in the title of the document. To do this, we can use the Puppys API submodule and we can obtain all documents in the current library with the function get all documents in lib. Next, we loop over all documents and we deal with the document as if it were a Python dictionary. The method save saves the document. I will comment out the save call since I don't want it to override the library. Let's run the script and see that it works. And indeed, it works. The last demonstration will concern the web application. The web application is quite useful if you would like to self host Puppys or access it from a portable device. We can run the web application using the serve command to which we can pass a port 88888. Directing our browser to the URL localhost colon 8888, we see the starting page of the web application where we are presented with a simple query prompt. Other pages include listing all the documents in the library, listing all the tags, and browsing a different library. Let us again enter the author Einstein query into the prompt. The result page includes a handy timeline with the results of the query and a simple multi-line list of the results. In this timeline, we can see for instance directly the annus mirabilis of Einstein together with a couple of other publications further right. We could click on the title of the timeline and go to the respective document page. In the results for the document, we see a left block with some basic information and the PDF links. On the right hand side, we see the citation, references, and several external links for the document. Let us look for the first paper we added at the beginning of this presentation. It is worth noting that we can click on the tags of the documents to get the results for the given tags. If we click on the arrow, we will navigate into the document page. The red notifications advise us of small problems with the data in our document. However, I will not fix those now. The document page is a multi-tap page where the first tab presents most of the information of the document in an HTML form fashion. Additionally, we have access to the raw info file where we can modify and override its contents. We have added a BipDex tab for LaTeX users. This document has a single file attached and we can preview it on the browser thanks to the library PDF JavaScript. We can also download the document or open the document in a new window. In the next tab, we can visualize the citations file that we generated previously. This tab also has a timeline like the search results and the documents with the green reference indicate that these documents exist in our library and we can open them. Let us open this article page. For this article, we have also generated citations, but we can also use the Harvard ATS service. In the case of articles citing the current article, we have not generated this file and therefore we get an embedded page from ATS by default. In the last tab, we can edit the nodes from the browser. Furthermore, clicking on the tags and library pages, we can see how these interfaces look like. Thank you very much for your attention. For further information, visit the projects page over at GitHub. Of course, Puppies is only alive because of its community. I would like to thank all the users and contributors over the years. I would like to specially thank the co-mentainers of Puppies, Alex Fickle and Julian Hauser for their hard work in the last year. I hope you enjoyed the presentation and I'll be answering your questions shortly. Fantastic. Thank you so much for that really actually quite interesting talk Alejandro. I really quite felt inspired thinking, wow, can I run this with my own publications as a way of collating stuff and also sharing it with the world? It's always nice when you watch a talk and you immediately think, yes, I'm going to use this as well. So I have a few questions here. I think my first one, perhaps, might be, I historically have used Zotero. I had to think very carefully not to say no to that. Is it easy for me to migrate if I was inclined to migrate from Zotero or other plugins? Over the years, quite a lot of people have developed some plugins for the interface of Zotero and Puppies. You can export to simply and create Puppies libraries but I'm also aware of some people that actually use both. So they have a workflow to export this dynamically the whole time. So it is in principle compatible and there are a couple of projects that do this. This is coming from the community. Thanks. That's actually really appealing to me because whilst I was watching the way you added with the DOI, I thought that was really cool but there's still like seven command line flags and I'd really like the button that says add this to Zotero. Yeah. So the thing is, yeah, I should have maybe given some more examples of adding some documents. So in principle, it's also possible to add a document just by the URL. So there are some automatic recognition in Puppies. So most URLs are recognized and it could in this case even revive URL or within the HTML page. I noticed that there is a tool to use. Sorry. Your connection has gone just robot enough. Testing, testing. Do we still have you now? Yes, that is much better. Could you maybe just repeat your last two or three sentences because it was just a bit hard to hear. Sorry. So there are some, Zotero has implemented also quite a lot of metadata fetches from many sources and there is also a project that tries to reuse these metadata fetches from Zotero for their use in Puppies and maybe also in the web application in Puppies. So this might also happen in the future. But in general, it's much easier to add documents than what I showed in the video. Cool. Thanks. It's also really nice to hear how interoperable y'all are. So we have a couple more questions in the chat. So Paul says, does the YAML format follow bibliographic standards of any type? So we try to use most of the BipTec keywords when they are applicable and in general the YAML format is really free to the user to use. So you might want to use a particular convention in your YAML files but the keywords are mostly motivated by BipTec. That's the only one. It still sounds like there's some decent interoperability there which is really nice. Celia asks, who are the main users of Pappis in terms of discipline, students, researchers, etc? Well, I know that's a good question. A lot of biophysics and biosciences, so bioinformatics, I know quite a lot of people that use it. Physics, mathematics and computer science, I would say. These are the ones. But for instance, Julian is one commentator and he's a philosopher. So it really helps. Of course, you have to be a little bit acquainted with the command line. Maybe hopefully through the web application in the future this will change. But it's in general people that really care about their libraries, the metadata that they have in their libraries, and they really want to have a very clear, clear representation of their data. They don't want some upstream database somewhere stored. So they really want everything in plain text. Yes, I think you demonstrated so beautifully how accessible your own data is and it's surprisingly rare. Do you have any trainings for Pappis so that people who maybe are a bit less confident could learn more about it? Sadly, not right now. Maybe that's something if enough people are interested. That's something that we could certainly look into. But we have the discussions in GitHub. So quite a lot of people ask questions there. So there are also frequently asked questions there. And we have also a Zulip chat. Also we are on Libera, but right now not so many people are there. And yeah, so just drop by and ask whatever you want. Super, thank you. So we have about 45 seconds left. That's time to squeeze in one last question. So we have one here from Paul. And we've got some love for the timeline, which I agree. I was like, oh, I want that. Do you plan any other visualizations, like maybe publication networks from citation data? Yes, actually, yes, because I realized I really like these visualizations. I plan some like with the citation, some trees and stuff like this. But I would like to have more feedback from from users to really know what's really sensible and useful. Thanks. That's a great point. So we have three seconds left. Thank you so much. Thank you. Thank you, all of you. All right, I think we're off the live stream. That was I'm so going to be going back and like setting my own purpose up with a web server. Thank you so much. Yeah, thank you. Thank you. Okay, I'm going to hop to the next talk.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.4, "text": " Hello, Faustem. My name is Alejandro and today I am going to talk about Papis, a simple,", "tokens": [50364, 2425, 11, 12710, 381, 443, 13, 1222, 1315, 307, 44568, 29173, 293, 965, 286, 669, 516, 281, 751, 466, 15919, 271, 11, 257, 2199, 11, 50984], "temperature": 0.0, "avg_logprob": -0.2763182126558744, "compression_ratio": 1.4126984126984128, "no_speech_prob": 0.0935099869966507}, {"id": 1, "seek": 0, "start": 12.4, "end": 17.400000000000002, "text": " powerful and extendable command line bibliography manager that I have been developing during", "tokens": [50984, 4005, 293, 10101, 712, 5622, 1622, 34344, 5820, 6598, 300, 286, 362, 668, 6416, 1830, 51234], "temperature": 0.0, "avg_logprob": -0.2763182126558744, "compression_ratio": 1.4126984126984128, "no_speech_prob": 0.0935099869966507}, {"id": 2, "seek": 0, "start": 17.400000000000002, "end": 23.32, "text": " the last 7 years. I will be explaining some of the main considerations of the project", "tokens": [51234, 264, 1036, 1614, 924, 13, 286, 486, 312, 13468, 512, 295, 264, 2135, 24070, 295, 264, 1716, 51530], "temperature": 0.0, "avg_logprob": -0.2763182126558744, "compression_ratio": 1.4126984126984128, "no_speech_prob": 0.0935099869966507}, {"id": 3, "seek": 2332, "start": 23.4, "end": 30.84, "text": " and demoing some of its basic use cases. First of all, let me introduce myself. I work currently", "tokens": [50368, 293, 10723, 278, 512, 295, 1080, 3875, 764, 3331, 13, 2386, 295, 439, 11, 718, 385, 5366, 2059, 13, 286, 589, 4362, 50740], "temperature": 0.0, "avg_logprob": -0.1637173167994765, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.3434363901615143}, {"id": 4, "seek": 2332, "start": 30.84, "end": 37.32, "text": " as a physicist at the Technical University of Vienna in Austria. We develop massively parallel", "tokens": [50740, 382, 257, 42466, 412, 264, 35512, 3535, 295, 31024, 294, 26501, 13, 492, 1499, 29379, 8952, 51064], "temperature": 0.0, "avg_logprob": -0.1637173167994765, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.3434363901615143}, {"id": 5, "seek": 2332, "start": 37.32, "end": 43.32, "text": " algorithms in order to calculate properties of molecules and solids from a theoretical point of", "tokens": [51064, 14642, 294, 1668, 281, 8873, 7221, 295, 13093, 293, 38536, 490, 257, 20864, 935, 295, 51364], "temperature": 0.0, "avg_logprob": -0.1637173167994765, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.3434363901615143}, {"id": 6, "seek": 4332, "start": 43.32, "end": 49.64, "text": " view. You can find me on Nasodon or around the web. Don't hesitate to contact me.", "tokens": [50364, 1910, 13, 509, 393, 915, 385, 322, 16151, 378, 266, 420, 926, 264, 3670, 13, 1468, 380, 20842, 281, 3385, 385, 13, 50680], "temperature": 0.0, "avg_logprob": -0.16281080937040024, "compression_ratio": 1.4308510638297873, "no_speech_prob": 0.09521715342998505}, {"id": 7, "seek": 4332, "start": 52.52, "end": 61.16, "text": " So, what is Papis? Papis started as a simple bibliography manager built around the command", "tokens": [50824, 407, 11, 437, 307, 15919, 271, 30, 15919, 271, 1409, 382, 257, 2199, 34344, 5820, 6598, 3094, 926, 264, 5622, 51256], "temperature": 0.0, "avg_logprob": -0.16281080937040024, "compression_ratio": 1.4308510638297873, "no_speech_prob": 0.09521715342998505}, {"id": 8, "seek": 4332, "start": 61.16, "end": 70.12, "text": " line. It should make possible to manage papers or books at scale or for small curated libraries.", "tokens": [51256, 1622, 13, 467, 820, 652, 1944, 281, 3067, 10577, 420, 3642, 412, 4373, 420, 337, 1359, 47851, 15148, 13, 51704], "temperature": 0.0, "avg_logprob": -0.16281080937040024, "compression_ratio": 1.4308510638297873, "no_speech_prob": 0.09521715342998505}, {"id": 9, "seek": 7012, "start": 71.08, "end": 77.48, "text": " It is therefore important to implement a simple data model and use an approachable programming", "tokens": [50412, 467, 307, 4412, 1021, 281, 4445, 257, 2199, 1412, 2316, 293, 764, 364, 3109, 712, 9410, 50732], "temperature": 0.0, "avg_logprob": -0.17919124405959558, "compression_ratio": 1.481283422459893, "no_speech_prob": 0.015396120958030224}, {"id": 10, "seek": 7012, "start": 77.48, "end": 84.36, "text": " language, such as Python, so that users can interact easily with Papis' many features.", "tokens": [50732, 2856, 11, 1270, 382, 15329, 11, 370, 300, 5022, 393, 4648, 3612, 365, 15919, 271, 6, 867, 4122, 13, 51076], "temperature": 0.0, "avg_logprob": -0.17919124405959558, "compression_ratio": 1.481283422459893, "no_speech_prob": 0.015396120958030224}, {"id": 11, "seek": 7012, "start": 86.28, "end": 94.04, "text": " In addition, Python also encourages contributions from researchers in the academic world. Since", "tokens": [51172, 682, 4500, 11, 15329, 611, 28071, 15725, 490, 10309, 294, 264, 7778, 1002, 13, 4162, 51560], "temperature": 0.0, "avg_logprob": -0.17919124405959558, "compression_ratio": 1.481283422459893, "no_speech_prob": 0.015396120958030224}, {"id": 12, "seek": 9404, "start": 94.36, "end": 104.36000000000001, "text": " nowadays, many researchers are exposed to this language. Papis strives to be and build a community,", "tokens": [50380, 13434, 11, 867, 10309, 366, 9495, 281, 341, 2856, 13, 15919, 271, 3575, 977, 281, 312, 293, 1322, 257, 1768, 11, 50880], "temperature": 0.0, "avg_logprob": -0.13095832665761312, "compression_ratio": 1.4450867052023122, "no_speech_prob": 0.0066810231655836105}, {"id": 13, "seek": 9404, "start": 105.48, "end": 109.72, "text": " and various plugins have appeared thanks to the community.", "tokens": [50936, 293, 3683, 33759, 362, 8516, 3231, 281, 264, 1768, 13, 51148], "temperature": 0.0, "avg_logprob": -0.13095832665761312, "compression_ratio": 1.4450867052023122, "no_speech_prob": 0.0066810231655836105}, {"id": 14, "seek": 9404, "start": 112.36000000000001, "end": 119.48, "text": " There are plugins for the major text editors, such as NeoVim and Emacs, and partial support", "tokens": [51280, 821, 366, 33759, 337, 264, 2563, 2487, 31446, 11, 1270, 382, 24458, 53, 332, 293, 3968, 44937, 11, 293, 14641, 1406, 51636], "temperature": 0.0, "avg_logprob": -0.13095832665761312, "compression_ratio": 1.4450867052023122, "no_speech_prob": 0.0066810231655836105}, {"id": 15, "seek": 11948, "start": 119.48, "end": 127.72, "text": " exists for VS Code and Vim. Additionally, lately we have been working on the web application for", "tokens": [50364, 8198, 337, 25091, 15549, 293, 691, 332, 13, 19927, 11, 12881, 321, 362, 668, 1364, 322, 264, 3670, 3861, 337, 50776], "temperature": 0.0, "avg_logprob": -0.09546124644395781, "compression_ratio": 1.4977777777777779, "no_speech_prob": 0.010005845688283443}, {"id": 16, "seek": 11948, "start": 127.72, "end": 132.20000000000002, "text": " Papis, and I will be showing some of its features in this talk.", "tokens": [50776, 15919, 271, 11, 293, 286, 486, 312, 4099, 512, 295, 1080, 4122, 294, 341, 751, 13, 51000], "temperature": 0.0, "avg_logprob": -0.09546124644395781, "compression_ratio": 1.4977777777777779, "no_speech_prob": 0.010005845688283443}, {"id": 17, "seek": 11948, "start": 135.0, "end": 141.88, "text": " But you are asking yourself, why Papis? We think that it should be possible and simple", "tokens": [51140, 583, 291, 366, 3365, 1803, 11, 983, 15919, 271, 30, 492, 519, 300, 309, 820, 312, 1944, 293, 2199, 51484], "temperature": 0.0, "avg_logprob": -0.09546124644395781, "compression_ratio": 1.4977777777777779, "no_speech_prob": 0.010005845688283443}, {"id": 18, "seek": 11948, "start": 141.88, "end": 148.2, "text": " to perform complex tasks on a whole library. This is made possible through a rich command", "tokens": [51484, 281, 2042, 3997, 9608, 322, 257, 1379, 6405, 13, 639, 307, 1027, 1944, 807, 257, 4593, 5622, 51800], "temperature": 0.0, "avg_logprob": -0.09546124644395781, "compression_ratio": 1.4977777777777779, "no_speech_prob": 0.010005845688283443}, {"id": 19, "seek": 14820, "start": 148.51999999999998, "end": 156.11999999999998, "text": " line interface. You can add papers from a DOI or from a variety of websites supported by Papis.", "tokens": [50380, 1622, 9226, 13, 509, 393, 909, 10577, 490, 257, 10699, 40, 420, 490, 257, 5673, 295, 12891, 8104, 538, 15919, 271, 13, 50760], "temperature": 0.0, "avg_logprob": -0.10731882601976395, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.15800262987613678}, {"id": 20, "seek": 14820, "start": 156.83999999999997, "end": 161.23999999999998, "text": " You can explore sources like Crossref from the command line,", "tokens": [50796, 509, 393, 6839, 7139, 411, 11623, 33115, 490, 264, 5622, 1622, 11, 51016], "temperature": 0.0, "avg_logprob": -0.10731882601976395, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.15800262987613678}, {"id": 21, "seek": 14820, "start": 161.95999999999998, "end": 166.04, "text": " or download information about the citations of a publication,", "tokens": [51052, 420, 5484, 1589, 466, 264, 4814, 763, 295, 257, 19953, 11, 51256], "temperature": 0.0, "avg_logprob": -0.10731882601976395, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.15800262987613678}, {"id": 22, "seek": 14820, "start": 166.76, "end": 171.23999999999998, "text": " or check which publications cite the current publication.", "tokens": [51292, 420, 1520, 597, 25618, 37771, 264, 2190, 19953, 13, 51516], "temperature": 0.0, "avg_logprob": -0.10731882601976395, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.15800262987613678}, {"id": 23, "seek": 17124, "start": 171.72, "end": 176.68, "text": " You can take notes that play well with tools like Vim or Emacs org mode.", "tokens": [50388, 509, 393, 747, 5570, 300, 862, 731, 365, 3873, 411, 691, 332, 420, 3968, 44937, 14045, 4391, 13, 50636], "temperature": 0.0, "avg_logprob": -0.20337839479799624, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.01770758628845215}, {"id": 24, "seek": 17124, "start": 176.68, "end": 182.20000000000002, "text": " You can version control your documents and export to the most common formats.", "tokens": [50636, 509, 393, 3037, 1969, 428, 8512, 293, 10725, 281, 264, 881, 2689, 25879, 13, 50912], "temperature": 0.0, "avg_logprob": -0.20337839479799624, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.01770758628845215}, {"id": 25, "seek": 17124, "start": 183.48000000000002, "end": 190.28, "text": " You can spend countless hours curating and improving your library's notes, metadata,", "tokens": [50976, 509, 393, 3496, 19223, 2496, 1262, 990, 293, 11470, 428, 6405, 311, 5570, 11, 26603, 11, 51316], "temperature": 0.0, "avg_logprob": -0.20337839479799624, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.01770758628845215}, {"id": 26, "seek": 17124, "start": 190.28, "end": 197.8, "text": " and PDF documents without fearing losing your data to an API change or end-of-life of Papis.", "tokens": [51316, 293, 17752, 8512, 1553, 579, 1921, 7027, 428, 1412, 281, 364, 9362, 1319, 420, 917, 12, 2670, 12, 9073, 295, 15919, 271, 13, 51692], "temperature": 0.0, "avg_logprob": -0.20337839479799624, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.01770758628845215}, {"id": 27, "seek": 19780, "start": 197.88000000000002, "end": 203.0, "text": " Since your data is stored in a very simple but flexible format.", "tokens": [50368, 4162, 428, 1412, 307, 12187, 294, 257, 588, 2199, 457, 11358, 7877, 13, 50624], "temperature": 0.0, "avg_logprob": -0.1553016369159405, "compression_ratio": 1.4689265536723164, "no_speech_prob": 0.017978735268115997}, {"id": 28, "seek": 19780, "start": 206.28, "end": 211.08, "text": " I want to emphasize the fact that one of the main goals of Papis", "tokens": [50788, 286, 528, 281, 16078, 264, 1186, 300, 472, 295, 264, 2135, 5493, 295, 15919, 271, 51028], "temperature": 0.0, "avg_logprob": -0.1553016369159405, "compression_ratio": 1.4689265536723164, "no_speech_prob": 0.017978735268115997}, {"id": 29, "seek": 19780, "start": 211.08, "end": 215.0, "text": " is enabling the user to be independent of Papis itself.", "tokens": [51028, 307, 23148, 264, 4195, 281, 312, 6695, 295, 15919, 271, 2564, 13, 51224], "temperature": 0.0, "avg_logprob": -0.1553016369159405, "compression_ratio": 1.4689265536723164, "no_speech_prob": 0.017978735268115997}, {"id": 30, "seek": 19780, "start": 216.04000000000002, "end": 222.04000000000002, "text": " A researcher, academic or not, spends an enormous amount of time searching,", "tokens": [51276, 316, 21751, 11, 7778, 420, 406, 11, 25620, 364, 11322, 2372, 295, 565, 10808, 11, 51576], "temperature": 0.0, "avg_logprob": -0.1553016369159405, "compression_ratio": 1.4689265536723164, "no_speech_prob": 0.017978735268115997}, {"id": 31, "seek": 22204, "start": 222.6, "end": 225.64, "text": " reading and not notating publications.", "tokens": [50392, 3760, 293, 406, 406, 990, 25618, 13, 50544], "temperature": 0.0, "avg_logprob": -0.08539056777954102, "compression_ratio": 1.5353535353535352, "no_speech_prob": 0.02842920459806919}, {"id": 32, "seek": 22204, "start": 226.76, "end": 233.95999999999998, "text": " For us Papis maintainers, it is important that a person comfortable with any scripting language", "tokens": [50600, 1171, 505, 15919, 271, 6909, 433, 11, 309, 307, 1021, 300, 257, 954, 4619, 365, 604, 5755, 278, 2856, 50960], "temperature": 0.0, "avg_logprob": -0.08539056777954102, "compression_ratio": 1.5353535353535352, "no_speech_prob": 0.02842920459806919}, {"id": 33, "seek": 22204, "start": 233.95999999999998, "end": 241.23999999999998, "text": " should be able to retrieve the totality of Papis data by writing a script in an afternoon.", "tokens": [50960, 820, 312, 1075, 281, 30254, 264, 1993, 1860, 295, 15919, 271, 1412, 538, 3579, 257, 5755, 294, 364, 6499, 13, 51324], "temperature": 0.0, "avg_logprob": -0.08539056777954102, "compression_ratio": 1.5353535353535352, "no_speech_prob": 0.02842920459806919}, {"id": 34, "seek": 22204, "start": 243.32, "end": 249.07999999999998, "text": " In order to accomplish this, an extremely simple library structure was chosen.", "tokens": [51428, 682, 1668, 281, 9021, 341, 11, 364, 4664, 2199, 6405, 3877, 390, 8614, 13, 51716], "temperature": 0.0, "avg_logprob": -0.08539056777954102, "compression_ratio": 1.5353535353535352, "no_speech_prob": 0.02842920459806919}, {"id": 35, "seek": 24908, "start": 249.56, "end": 255.0, "text": " The library structure relies on having one folder per library document.", "tokens": [50388, 440, 6405, 3877, 30910, 322, 1419, 472, 10820, 680, 6405, 4166, 13, 50660], "temperature": 0.0, "avg_logprob": -0.22098058553842398, "compression_ratio": 1.5767195767195767, "no_speech_prob": 0.002630745992064476}, {"id": 36, "seek": 24908, "start": 255.0, "end": 260.44, "text": " This means, for instance, in the case of the shown publication of Turing,", "tokens": [50660, 639, 1355, 11, 337, 5197, 11, 294, 264, 1389, 295, 264, 4898, 19953, 295, 314, 1345, 11, 50932], "temperature": 0.0, "avg_logprob": -0.22098058553842398, "compression_ratio": 1.5767195767195767, "no_speech_prob": 0.002630745992064476}, {"id": 37, "seek": 24908, "start": 260.44, "end": 266.44, "text": " the folder includes a YAML file containing the metadata information of the publication", "tokens": [50932, 264, 10820, 5974, 257, 398, 2865, 43, 3991, 19273, 264, 26603, 1589, 295, 264, 19953, 51232], "temperature": 0.0, "avg_logprob": -0.22098058553842398, "compression_ratio": 1.5767195767195767, "no_speech_prob": 0.002630745992064476}, {"id": 38, "seek": 24908, "start": 266.44, "end": 271.64, "text": " and an additional PDF file with the published publication itself.", "tokens": [51232, 293, 364, 4497, 17752, 3991, 365, 264, 6572, 19953, 2564, 13, 51492], "temperature": 0.0, "avg_logprob": -0.22098058553842398, "compression_ratio": 1.5767195767195767, "no_speech_prob": 0.002630745992064476}, {"id": 39, "seek": 27164, "start": 272.2, "end": 279.0, "text": " In this example library, we would have an additional document under the folder 1-document,", "tokens": [50392, 682, 341, 1365, 6405, 11, 321, 576, 362, 364, 4497, 4166, 833, 264, 10820, 502, 12, 67, 30439, 11, 50732], "temperature": 0.0, "avg_logprob": -0.31491588964694883, "compression_ratio": 1.546875, "no_speech_prob": 0.01542249321937561}, {"id": 40, "seek": 27164, "start": 279.0, "end": 282.2, "text": " where we find two PDF files in this case.", "tokens": [50732, 689, 321, 915, 732, 17752, 7098, 294, 341, 1389, 13, 50892], "temperature": 0.0, "avg_logprob": -0.31491588964694883, "compression_ratio": 1.546875, "no_speech_prob": 0.01542249321937561}, {"id": 41, "seek": 27164, "start": 283.56, "end": 291.0, "text": " A document in a Papis library is any folder containing a YAML file entitled info.yaml.", "tokens": [50960, 316, 4166, 294, 257, 15919, 271, 6405, 307, 604, 10820, 19273, 257, 398, 2865, 43, 3991, 17838, 13614, 13, 88, 335, 75, 13, 51332], "temperature": 0.0, "avg_logprob": -0.31491588964694883, "compression_ratio": 1.546875, "no_speech_prob": 0.01542249321937561}, {"id": 42, "seek": 27164, "start": 293.0, "end": 299.0, "text": " The contents of the YAML file are in principle up to the user's to the user's", "tokens": [51432, 440, 15768, 295, 264, 398, 2865, 43, 3991, 366, 294, 8665, 493, 281, 264, 4195, 311, 281, 264, 4195, 311, 51732], "temperature": 0.0, "avg_logprob": -0.31491588964694883, "compression_ratio": 1.546875, "no_speech_prob": 0.01542249321937561}, {"id": 43, "seek": 29900, "start": 299.16, "end": 302.6, "text": " are in principle up to the user's to determine.", "tokens": [50372, 366, 294, 8665, 493, 281, 264, 4195, 311, 281, 6997, 13, 50544], "temperature": 0.0, "avg_logprob": -0.10177079518636067, "compression_ratio": 1.546875, "no_speech_prob": 0.0011877367505803704}, {"id": 44, "seek": 29900, "start": 302.6, "end": 307.32, "text": " However, in practice, there are some conventions used in Papis.", "tokens": [50544, 2908, 11, 294, 3124, 11, 456, 366, 512, 33520, 1143, 294, 15919, 271, 13, 50780], "temperature": 0.0, "avg_logprob": -0.10177079518636067, "compression_ratio": 1.546875, "no_speech_prob": 0.0011877367505803704}, {"id": 45, "seek": 29900, "start": 309.24, "end": 317.72, "text": " Inside the info.yaml file, the key files contains a list of related files in the documents directory.", "tokens": [50876, 15123, 264, 13614, 13, 88, 335, 75, 3991, 11, 264, 2141, 7098, 8306, 257, 1329, 295, 4077, 7098, 294, 264, 8512, 21120, 13, 51300], "temperature": 0.0, "avg_logprob": -0.10177079518636067, "compression_ratio": 1.546875, "no_speech_prob": 0.0011877367505803704}, {"id": 46, "seek": 29900, "start": 318.68, "end": 325.32, "text": " These files might be PDF files or any other kind of files relevant to the document.", "tokens": [51348, 1981, 7098, 1062, 312, 17752, 7098, 420, 604, 661, 733, 295, 7098, 7340, 281, 264, 4166, 13, 51680], "temperature": 0.0, "avg_logprob": -0.10177079518636067, "compression_ratio": 1.546875, "no_speech_prob": 0.0011877367505803704}, {"id": 47, "seek": 32532, "start": 326.2, "end": 328.36, "text": " In the case of the Turing publication,", "tokens": [50408, 682, 264, 1389, 295, 264, 314, 1345, 19953, 11, 50516], "temperature": 0.0, "avg_logprob": -0.3355438562087071, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.004981131758540869}, {"id": 48, "seek": 32532, "start": 328.36, "end": 335.48, "text": " files therefore lists a single PDF document, paper.pdf.", "tokens": [50516, 7098, 4412, 14511, 257, 2167, 17752, 4166, 11, 3035, 13, 79, 45953, 13, 50872], "temperature": 0.0, "avg_logprob": -0.3355438562087071, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.004981131758540869}, {"id": 49, "seek": 32532, "start": 336.84, "end": 344.03999999999996, "text": " The key ref is used for exploring BipTec files and is the reference of the document", "tokens": [50940, 440, 2141, 1895, 307, 1143, 337, 12736, 363, 647, 51, 3045, 7098, 293, 307, 264, 6408, 295, 264, 4166, 51300], "temperature": 0.0, "avg_logprob": -0.3355438562087071, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.004981131758540869}, {"id": 50, "seek": 32532, "start": 344.03999999999996, "end": 347.56, "text": " when using bibliographic tools outside of Papis.", "tokens": [51300, 562, 1228, 34344, 12295, 3873, 2380, 295, 15919, 271, 13, 51476], "temperature": 0.0, "avg_logprob": -0.3355438562087071, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.004981131758540869}, {"id": 51, "seek": 32532, "start": 348.36, "end": 354.12, "text": " The YAML key type is also used for BipTecs exploring and is", "tokens": [51516, 440, 398, 2865, 43, 2141, 2010, 307, 611, 1143, 337, 363, 647, 51, 3045, 82, 12736, 293, 307, 51804], "temperature": 0.0, "avg_logprob": -0.3355438562087071, "compression_ratio": 1.53475935828877, "no_speech_prob": 0.004981131758540869}, {"id": 52, "seek": 35412, "start": 355.08, "end": 360.84000000000003, "text": " the type of document, whether a book, an article, a monograph, etc.", "tokens": [50412, 264, 2010, 295, 4166, 11, 1968, 257, 1446, 11, 364, 7222, 11, 257, 1108, 3108, 11, 5183, 13, 50700], "temperature": 0.0, "avg_logprob": -0.13240341756535673, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.003764668945223093}, {"id": 53, "seek": 35412, "start": 361.96, "end": 365.0, "text": " There is also an in-built support for tags,", "tokens": [50756, 821, 307, 611, 364, 294, 12, 23018, 1406, 337, 18632, 11, 50908], "temperature": 0.0, "avg_logprob": -0.13240341756535673, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.003764668945223093}, {"id": 54, "seek": 35412, "start": 365.0, "end": 369.16, "text": " which may be added as a list of space-separated keywords.", "tokens": [50908, 597, 815, 312, 3869, 382, 257, 1329, 295, 1901, 12, 405, 2181, 770, 21009, 13, 51116], "temperature": 0.0, "avg_logprob": -0.13240341756535673, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.003764668945223093}, {"id": 55, "seek": 35412, "start": 370.28000000000003, "end": 374.44, "text": " We chose the YAML format due to its ease of writing, reading,", "tokens": [51172, 492, 5111, 264, 398, 2865, 43, 7877, 3462, 281, 1080, 12708, 295, 3579, 11, 3760, 11, 51380], "temperature": 0.0, "avg_logprob": -0.13240341756535673, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.003764668945223093}, {"id": 56, "seek": 35412, "start": 374.44, "end": 380.28000000000003, "text": " and because most programming languages are provided with libraries that can read these files.", "tokens": [51380, 293, 570, 881, 9410, 8650, 366, 5649, 365, 15148, 300, 393, 1401, 613, 7098, 13, 51672], "temperature": 0.0, "avg_logprob": -0.13240341756535673, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.003764668945223093}, {"id": 57, "seek": 38028, "start": 381.23999999999995, "end": 385.08, "text": " Of course, given the simplicity of the library model,", "tokens": [50412, 2720, 1164, 11, 2212, 264, 25632, 295, 264, 6405, 2316, 11, 50604], "temperature": 0.0, "avg_logprob": -0.09560104737798851, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0024721468798816204}, {"id": 58, "seek": 38028, "start": 385.08, "end": 390.35999999999996, "text": " it is possible to write a crude finder with just a unique scrap and fine commands.", "tokens": [50604, 309, 307, 1944, 281, 2464, 257, 30796, 915, 260, 365, 445, 257, 3845, 23138, 293, 2489, 16901, 13, 50868], "temperature": 0.0, "avg_logprob": -0.09560104737798851, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0024721468798816204}, {"id": 59, "seek": 38028, "start": 392.35999999999996, "end": 398.2, "text": " All functionalities in Papis can be customized through a configuration file in the INI format.", "tokens": [50968, 1057, 11745, 1088, 294, 15919, 271, 393, 312, 30581, 807, 257, 11694, 3991, 294, 264, 6892, 40, 7877, 13, 51260], "temperature": 0.0, "avg_logprob": -0.09560104737798851, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0024721468798816204}, {"id": 60, "seek": 38028, "start": 400.2, "end": 404.67999999999995, "text": " Papis can define multiple libraries through the configuration file,", "tokens": [51360, 15919, 271, 393, 6964, 3866, 15148, 807, 264, 11694, 3991, 11, 51584], "temperature": 0.0, "avg_logprob": -0.09560104737798851, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0024721468798816204}, {"id": 61, "seek": 38028, "start": 404.67999999999995, "end": 409.47999999999996, "text": " and all Papis settings can be independently configured for each library.", "tokens": [51584, 293, 439, 15919, 271, 6257, 393, 312, 21761, 30538, 337, 1184, 6405, 13, 51824], "temperature": 0.0, "avg_logprob": -0.09560104737798851, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0024721468798816204}, {"id": 62, "seek": 41028, "start": 410.84, "end": 414.67999999999995, "text": " You can define default settings under the Settings section,", "tokens": [50392, 509, 393, 6964, 7576, 6257, 833, 264, 27286, 3541, 11, 50584], "temperature": 0.0, "avg_logprob": -0.12161930402119954, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.0002780071517918259}, {"id": 63, "seek": 41028, "start": 415.4, "end": 417.55999999999995, "text": " which will be common to all libraries.", "tokens": [50620, 597, 486, 312, 2689, 281, 439, 15148, 13, 50728], "temperature": 0.0, "avg_logprob": -0.12161930402119954, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.0002780071517918259}, {"id": 64, "seek": 41028, "start": 418.76, "end": 423.08, "text": " A library is simply defined as a section with a dir key,", "tokens": [50788, 316, 6405, 307, 2935, 7642, 382, 257, 3541, 365, 257, 4746, 2141, 11, 51004], "temperature": 0.0, "avg_logprob": -0.12161930402119954, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.0002780071517918259}, {"id": 65, "seek": 41028, "start": 423.08, "end": 427.96, "text": " which contains the path to the library directory containing all documents.", "tokens": [51004, 597, 8306, 264, 3100, 281, 264, 6405, 21120, 19273, 439, 8512, 13, 51248], "temperature": 0.0, "avg_logprob": -0.12161930402119954, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.0002780071517918259}, {"id": 66, "seek": 41028, "start": 429.47999999999996, "end": 434.91999999999996, "text": " You can then customize this library, in this case a library named Papis,", "tokens": [51324, 509, 393, 550, 19734, 341, 6405, 11, 294, 341, 1389, 257, 6405, 4926, 15919, 271, 11, 51596], "temperature": 0.0, "avg_logprob": -0.12161930402119954, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.0002780071517918259}, {"id": 67, "seek": 41028, "start": 434.91999999999996, "end": 439.0, "text": " and set the default opener tool to the PDF viewer events.", "tokens": [51596, 293, 992, 264, 7576, 43850, 2290, 281, 264, 17752, 16767, 3931, 13, 51800], "temperature": 0.0, "avg_logprob": -0.12161930402119954, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.0002780071517918259}, {"id": 68, "seek": 44028, "start": 440.28, "end": 445.96, "text": " If you happen to want an additional library of books holding mostly EPUB formatted books,", "tokens": [50364, 759, 291, 1051, 281, 528, 364, 4497, 6405, 295, 3642, 5061, 5240, 462, 8115, 33, 1254, 32509, 3642, 11, 50648], "temperature": 0.0, "avg_logprob": -0.11631648095099481, "compression_ratio": 1.56640625, "no_speech_prob": 6.814794323872775e-05}, {"id": 69, "seek": 44028, "start": 447.08, "end": 450.11999999999995, "text": " you could define the opener to be caliber instead.", "tokens": [50704, 291, 727, 6964, 264, 43850, 281, 312, 41946, 2602, 13, 50856], "temperature": 0.0, "avg_logprob": -0.11631648095099481, "compression_ratio": 1.56640625, "no_speech_prob": 6.814794323872775e-05}, {"id": 70, "seek": 44028, "start": 451.55999999999995, "end": 456.28, "text": " You can read about all the configuration settings in the Documentation page,", "tokens": [50928, 509, 393, 1401, 466, 439, 264, 11694, 6257, 294, 264, 37684, 399, 3028, 11, 51164], "temperature": 0.0, "avg_logprob": -0.11631648095099481, "compression_ratio": 1.56640625, "no_speech_prob": 6.814794323872775e-05}, {"id": 71, "seek": 44028, "start": 456.28, "end": 460.52, "text": " where you will see a description of their function and their default values.", "tokens": [51164, 689, 291, 486, 536, 257, 3855, 295, 641, 2445, 293, 641, 7576, 4190, 13, 51376], "temperature": 0.0, "avg_logprob": -0.11631648095099481, "compression_ratio": 1.56640625, "no_speech_prob": 6.814794323872775e-05}, {"id": 72, "seek": 44028, "start": 462.11999999999995, "end": 468.67999999999995, "text": " With this introduction, let us take a look now at a common workflow to add an article from a journal page.", "tokens": [51456, 2022, 341, 9339, 11, 718, 505, 747, 257, 574, 586, 412, 257, 2689, 20993, 281, 909, 364, 7222, 490, 257, 6708, 3028, 13, 51784], "temperature": 0.0, "avg_logprob": -0.11631648095099481, "compression_ratio": 1.56640625, "no_speech_prob": 6.814794323872775e-05}, {"id": 73, "seek": 47028, "start": 471.0, "end": 474.03999999999996, "text": " Here is a common view of an article in a browser.", "tokens": [50400, 1692, 307, 257, 2689, 1910, 295, 364, 7222, 294, 257, 11185, 13, 50552], "temperature": 0.0, "avg_logprob": -0.07463907111774791, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.002672048518434167}, {"id": 74, "seek": 47028, "start": 474.76, "end": 480.76, "text": " We can see lots of information, and the easiest way of adding this article to Papis", "tokens": [50588, 492, 393, 536, 3195, 295, 1589, 11, 293, 264, 12889, 636, 295, 5127, 341, 7222, 281, 15919, 271, 50888], "temperature": 0.0, "avg_logprob": -0.07463907111774791, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.002672048518434167}, {"id": 75, "seek": 47028, "start": 481.32, "end": 485.23999999999995, "text": " will be by locating the DOI of the article in the page.", "tokens": [50916, 486, 312, 538, 1628, 990, 264, 10699, 40, 295, 264, 7222, 294, 264, 3028, 13, 51112], "temperature": 0.0, "avg_logprob": -0.07463907111774791, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.002672048518434167}, {"id": 76, "seek": 47028, "start": 487.08, "end": 492.03999999999996, "text": " In this case, we locate the DOI in the URL of the article,", "tokens": [51204, 682, 341, 1389, 11, 321, 22370, 264, 10699, 40, 294, 264, 12905, 295, 264, 7222, 11, 51452], "temperature": 0.0, "avg_logprob": -0.07463907111774791, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.002672048518434167}, {"id": 77, "seek": 47028, "start": 492.03999999999996, "end": 496.28, "text": " and we copy it to our clipboard to paste it in the terminal.", "tokens": [51452, 293, 321, 5055, 309, 281, 527, 7353, 3787, 281, 9163, 309, 294, 264, 14709, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07463907111774791, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.002672048518434167}, {"id": 78, "seek": 49628, "start": 496.84, "end": 505.4, "text": " The command for adding a paper is Papis add, and Papis add comes with quite many options.", "tokens": [50392, 440, 5622, 337, 5127, 257, 3035, 307, 15919, 271, 909, 11, 293, 15919, 271, 909, 1487, 365, 1596, 867, 3956, 13, 50820], "temperature": 0.0, "avg_logprob": -0.19602514803409576, "compression_ratio": 1.5113636363636365, "no_speech_prob": 0.004133071284741163}, {"id": 79, "seek": 49628, "start": 506.11999999999995, "end": 513.16, "text": " In general, when adding a document, Papis will try to download metadata from various sources and,", "tokens": [50856, 682, 2674, 11, 562, 5127, 257, 4166, 11, 15919, 271, 486, 853, 281, 5484, 26603, 490, 3683, 7139, 293, 11, 51208], "temperature": 0.0, "avg_logprob": -0.19602514803409576, "compression_ratio": 1.5113636363636365, "no_speech_prob": 0.004133071284741163}, {"id": 80, "seek": 49628, "start": 513.16, "end": 519.24, "text": " if possible, download PDF documents, if they are freely and legally available.", "tokens": [51208, 498, 1944, 11, 5484, 17752, 8512, 11, 498, 436, 366, 16433, 293, 21106, 2435, 13, 51512], "temperature": 0.0, "avg_logprob": -0.19602514803409576, "compression_ratio": 1.5113636363636365, "no_speech_prob": 0.004133071284741163}, {"id": 81, "seek": 51924, "start": 519.32, "end": 524.44, "text": " In here, we see that I am using the edit flag.", "tokens": [50368, 682, 510, 11, 321, 536, 300, 286, 669, 1228, 264, 8129, 7166, 13, 50624], "temperature": 0.0, "avg_logprob": -0.125870418548584, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.004069664049893618}, {"id": 82, "seek": 51924, "start": 525.48, "end": 531.88, "text": " This flag instructs the Papis add command to open the editor with the info.yaml file", "tokens": [50676, 639, 7166, 7232, 82, 264, 15919, 271, 909, 5622, 281, 1269, 264, 9839, 365, 264, 13614, 13, 88, 335, 75, 3991, 50996], "temperature": 0.0, "avg_logprob": -0.125870418548584, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.004069664049893618}, {"id": 83, "seek": 51924, "start": 531.88, "end": 534.2, "text": " before adding the document to the library.", "tokens": [50996, 949, 5127, 264, 4166, 281, 264, 6405, 13, 51112], "temperature": 0.0, "avg_logprob": -0.125870418548584, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.004069664049893618}, {"id": 84, "seek": 51924, "start": 536.12, "end": 542.12, "text": " Similarly, the open flag instructs the command to open the attached files, if any,", "tokens": [51208, 13157, 11, 264, 1269, 7166, 7232, 82, 264, 5622, 281, 1269, 264, 8570, 7098, 11, 498, 604, 11, 51508], "temperature": 0.0, "avg_logprob": -0.125870418548584, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.004069664049893618}, {"id": 85, "seek": 51924, "start": 542.12, "end": 544.6, "text": " before adding the document to the library.", "tokens": [51508, 949, 5127, 264, 4166, 281, 264, 6405, 13, 51632], "temperature": 0.0, "avg_logprob": -0.125870418548584, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.004069664049893618}, {"id": 86, "seek": 54460, "start": 545.5600000000001, "end": 548.9200000000001, "text": " We are also telling the command through the from flag", "tokens": [50412, 492, 366, 611, 3585, 264, 5622, 807, 264, 490, 7166, 50580], "temperature": 0.0, "avg_logprob": -0.143001094008937, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.0012842091964557767}, {"id": 87, "seek": 54460, "start": 548.9200000000001, "end": 553.08, "text": " to retrieve information exclusively from the DOI.", "tokens": [50580, 281, 30254, 1589, 20638, 490, 264, 10699, 40, 13, 50788], "temperature": 0.0, "avg_logprob": -0.143001094008937, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.0012842091964557767}, {"id": 88, "seek": 54460, "start": 555.0, "end": 558.9200000000001, "text": " We can also preset some metadata through the command line.", "tokens": [50884, 492, 393, 611, 32081, 512, 26603, 807, 264, 5622, 1622, 13, 51080], "temperature": 0.0, "avg_logprob": -0.143001094008937, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.0012842091964557767}, {"id": 89, "seek": 54460, "start": 559.88, "end": 564.84, "text": " In this case, we are adding the tags, classics and DFT.", "tokens": [51128, 682, 341, 1389, 11, 321, 366, 5127, 264, 18632, 11, 36110, 293, 413, 25469, 13, 51376], "temperature": 0.0, "avg_logprob": -0.143001094008937, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.0012842091964557767}, {"id": 90, "seek": 54460, "start": 566.84, "end": 568.6800000000001, "text": " Let's go ahead and run the command.", "tokens": [51476, 961, 311, 352, 2286, 293, 1190, 264, 5622, 13, 51568], "temperature": 0.0, "avg_logprob": -0.143001094008937, "compression_ratio": 1.5119047619047619, "no_speech_prob": 0.0012842091964557767}, {"id": 91, "seek": 56868, "start": 568.68, "end": 577.16, "text": " Papis will now try to download metadata and a PDF file from online sources.", "tokens": [50364, 15919, 271, 486, 586, 853, 281, 5484, 26603, 293, 257, 17752, 3991, 490, 2950, 7139, 13, 50788], "temperature": 0.0, "avg_logprob": -0.12917132296804654, "compression_ratio": 1.4550898203592815, "no_speech_prob": 0.0008692032424733043}, {"id": 92, "seek": 56868, "start": 578.12, "end": 583.7199999999999, "text": " In the current configuration, we are greeted with an interactive prompt to add,", "tokens": [50836, 682, 264, 2190, 11694, 11, 321, 366, 38441, 365, 364, 15141, 12391, 281, 909, 11, 51116], "temperature": 0.0, "avg_logprob": -0.12917132296804654, "compression_ratio": 1.4550898203592815, "no_speech_prob": 0.0008692032424733043}, {"id": 93, "seek": 56868, "start": 583.7199999999999, "end": 587.9599999999999, "text": " split or reject the metadata retrieved from Crossref.", "tokens": [51116, 7472, 420, 8248, 264, 26603, 19817, 937, 490, 11623, 33115, 13, 51328], "temperature": 0.0, "avg_logprob": -0.12917132296804654, "compression_ratio": 1.4550898203592815, "no_speech_prob": 0.0008692032424733043}, {"id": 94, "seek": 56868, "start": 588.8399999999999, "end": 591.16, "text": " We choose to accept the metadata.", "tokens": [51372, 492, 2826, 281, 3241, 264, 26603, 13, 51488], "temperature": 0.0, "avg_logprob": -0.12917132296804654, "compression_ratio": 1.4550898203592815, "no_speech_prob": 0.0008692032424733043}, {"id": 95, "seek": 59116, "start": 591.4, "end": 597.4, "text": " The interactive session now shows us a retrieved PDF document and asks us,", "tokens": [50376, 440, 15141, 5481, 586, 3110, 505, 257, 19817, 937, 17752, 4166, 293, 8962, 505, 11, 50676], "temperature": 0.0, "avg_logprob": -0.27969851144930213, "compression_ratio": 1.5942028985507246, "no_speech_prob": 0.0017818394117057323}, {"id": 96, "seek": 59116, "start": 597.4, "end": 600.4399999999999, "text": " if this is the document that belongs to the publication.", "tokens": [50676, 498, 341, 307, 264, 4166, 300, 12953, 281, 264, 19953, 13, 50828], "temperature": 0.0, "avg_logprob": -0.27969851144930213, "compression_ratio": 1.5942028985507246, "no_speech_prob": 0.0017818394117057323}, {"id": 97, "seek": 59116, "start": 601.4, "end": 608.1999999999999, "text": " At this point, we can inspect the document and we realize that we indeed want this PDF file,", "tokens": [50876, 1711, 341, 935, 11, 321, 393, 15018, 264, 4166, 293, 321, 4325, 300, 321, 6451, 528, 341, 17752, 3991, 11, 51216], "temperature": 0.0, "avg_logprob": -0.27969851144930213, "compression_ratio": 1.5942028985507246, "no_speech_prob": 0.0017818394117057323}, {"id": 98, "seek": 59116, "start": 608.1999999999999, "end": 609.4, "text": " so we press Y.", "tokens": [51216, 370, 321, 1886, 398, 13, 51276], "temperature": 0.0, "avg_logprob": -0.27969851144930213, "compression_ratio": 1.5942028985507246, "no_speech_prob": 0.0017818394117057323}, {"id": 99, "seek": 59116, "start": 611.8, "end": 618.36, "text": " Now, all the information is in place and we can see a preliminary version of the info file", "tokens": [51396, 823, 11, 439, 264, 1589, 307, 294, 1081, 293, 321, 393, 536, 257, 28817, 3037, 295, 264, 13614, 3991, 51724], "temperature": 0.0, "avg_logprob": -0.27969851144930213, "compression_ratio": 1.5942028985507246, "no_speech_prob": 0.0017818394117057323}, {"id": 100, "seek": 61836, "start": 619.16, "end": 620.92, "text": " since we pass the edit flag.", "tokens": [50404, 1670, 321, 1320, 264, 8129, 7166, 13, 50492], "temperature": 0.0, "avg_logprob": -0.29830338921345456, "compression_ratio": 1.558974358974359, "no_speech_prob": 0.0010985926492139697}, {"id": 101, "seek": 61836, "start": 622.92, "end": 629.5600000000001, "text": " We can see that a lot of information could be retrieved, detailed author list information,", "tokens": [50592, 492, 393, 536, 300, 257, 688, 295, 1589, 727, 312, 19817, 937, 11, 9942, 3793, 1329, 1589, 11, 50924], "temperature": 0.0, "avg_logprob": -0.29830338921345456, "compression_ratio": 1.558974358974359, "no_speech_prob": 0.0010985926492139697}, {"id": 102, "seek": 61836, "start": 630.52, "end": 638.36, "text": " volume, pages, among others, and our tags have found their way into the YAML file correctly.", "tokens": [50972, 5523, 11, 7183, 11, 3654, 2357, 11, 293, 527, 18632, 362, 1352, 641, 636, 666, 264, 398, 2865, 43, 3991, 8944, 13, 51364], "temperature": 0.0, "avg_logprob": -0.29830338921345456, "compression_ratio": 1.558974358974359, "no_speech_prob": 0.0010985926492139697}, {"id": 103, "seek": 61836, "start": 640.76, "end": 646.36, "text": " A confirmation prompt subsequently appears since we pass the confirmed flag to the command.", "tokens": [51484, 316, 21871, 12391, 26514, 7038, 1670, 321, 1320, 264, 11341, 7166, 281, 264, 5622, 13, 51764], "temperature": 0.0, "avg_logprob": -0.29830338921345456, "compression_ratio": 1.558974358974359, "no_speech_prob": 0.0010985926492139697}, {"id": 104, "seek": 64836, "start": 648.6, "end": 654.28, "text": " We agree to it and, therefore, the document gets added to the library.", "tokens": [50376, 492, 3986, 281, 309, 293, 11, 4412, 11, 264, 4166, 2170, 3869, 281, 264, 6405, 13, 50660], "temperature": 0.0, "avg_logprob": -0.1603477948332486, "compression_ratio": 1.6282722513089005, "no_speech_prob": 0.0013043571962043643}, {"id": 105, "seek": 64836, "start": 656.36, "end": 661.16, "text": " We can now fetch information about the publication cited in this article.", "tokens": [50764, 492, 393, 586, 23673, 1589, 466, 264, 19953, 30134, 294, 341, 7222, 13, 51004], "temperature": 0.0, "avg_logprob": -0.1603477948332486, "compression_ratio": 1.6282722513089005, "no_speech_prob": 0.0013043571962043643}, {"id": 106, "seek": 64836, "start": 661.16, "end": 667.24, "text": " The command for this is citations and we pass to it the fetch citations flag,", "tokens": [51004, 440, 5622, 337, 341, 307, 4814, 763, 293, 321, 1320, 281, 309, 264, 23673, 4814, 763, 7166, 11, 51308], "temperature": 0.0, "avg_logprob": -0.1603477948332486, "compression_ratio": 1.6282722513089005, "no_speech_prob": 0.0013043571962043643}, {"id": 107, "seek": 64836, "start": 667.8000000000001, "end": 675.0, "text": " which first checks for information in our library and then heads to Crossref to retrieve", "tokens": [51336, 597, 700, 13834, 337, 1589, 294, 527, 6405, 293, 550, 8050, 281, 11623, 33115, 281, 30254, 51696], "temperature": 0.0, "avg_logprob": -0.1603477948332486, "compression_ratio": 1.6282722513089005, "no_speech_prob": 0.0013043571962043643}, {"id": 108, "seek": 67500, "start": 675.0, "end": 679.8, "text": " relevant information about the references appearing in our newly added document.", "tokens": [50364, 7340, 1589, 466, 264, 15400, 19870, 294, 527, 15109, 3869, 4166, 13, 50604], "temperature": 0.0, "avg_logprob": -0.11308170500255767, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0007551576709374785}, {"id": 109, "seek": 67500, "start": 681.56, "end": 685.8, "text": " If we now open the directory where the document has been stored,", "tokens": [50692, 759, 321, 586, 1269, 264, 21120, 689, 264, 4166, 575, 668, 12187, 11, 50904], "temperature": 0.0, "avg_logprob": -0.11308170500255767, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0007551576709374785}, {"id": 110, "seek": 67500, "start": 686.44, "end": 692.52, "text": " we see that the PDF file has been correctly stored alongside the info YAML file", "tokens": [50936, 321, 536, 300, 264, 17752, 3991, 575, 668, 8944, 12187, 12385, 264, 13614, 398, 2865, 43, 3991, 51240], "temperature": 0.0, "avg_logprob": -0.11308170500255767, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0007551576709374785}, {"id": 111, "seek": 67500, "start": 692.52, "end": 697.4, "text": " and the newly generated citations.yaml file.", "tokens": [51240, 293, 264, 15109, 10833, 4814, 763, 13, 88, 335, 75, 3991, 13, 51484], "temperature": 0.0, "avg_logprob": -0.11308170500255767, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0007551576709374785}, {"id": 112, "seek": 70500, "start": 705.24, "end": 728.68, "text": " If we inspect the citations file, we see that it is in the format of a list of YAML files,", "tokens": [50376, 759, 321, 15018, 264, 4814, 763, 3991, 11, 321, 536, 300, 309, 307, 294, 264, 7877, 295, 257, 1329, 295, 398, 2865, 43, 7098, 11, 51548], "temperature": 0.0, "avg_logprob": -0.19861438356596847, "compression_ratio": 1.1111111111111112, "no_speech_prob": 0.009848070330917835}, {"id": 113, "seek": 72868, "start": 728.68, "end": 735.4799999999999, "text": " where every element separated by three dashes represents bibliographic information about the", "tokens": [50364, 689, 633, 4478, 12005, 538, 1045, 8240, 279, 8855, 34344, 12295, 1589, 466, 264, 50704], "temperature": 0.0, "avg_logprob": -0.08735286035845356, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.018539365381002426}, {"id": 114, "seek": 72868, "start": 735.4799999999999, "end": 743.2399999999999, "text": " citations. This can be used for scripting, for browsing the citations, or for easily", "tokens": [50704, 4814, 763, 13, 639, 393, 312, 1143, 337, 5755, 278, 11, 337, 38602, 264, 4814, 763, 11, 420, 337, 3612, 51092], "temperature": 0.0, "avg_logprob": -0.08735286035845356, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.018539365381002426}, {"id": 115, "seek": 72868, "start": 743.2399999999999, "end": 752.28, "text": " visualizing them through the web application. This demo will show how to leverage the Puppys API", "tokens": [51092, 5056, 3319, 552, 807, 264, 3670, 3861, 13, 639, 10723, 486, 855, 577, 281, 13982, 264, 430, 10504, 749, 9362, 51544], "temperature": 0.0, "avg_logprob": -0.08735286035845356, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.018539365381002426}, {"id": 116, "seek": 75228, "start": 752.28, "end": 759.3199999999999, "text": " in Python to write one of the simplest scripts you can write. You can find more information", "tokens": [50364, 294, 15329, 281, 2464, 472, 295, 264, 22811, 23294, 291, 393, 2464, 13, 509, 393, 915, 544, 1589, 50716], "temperature": 0.0, "avg_logprob": -0.07502692767551968, "compression_ratio": 1.622340425531915, "no_speech_prob": 0.019119754433631897}, {"id": 117, "seek": 75228, "start": 759.3199999999999, "end": 763.48, "text": " in the documentation together with other more complex example scripts.", "tokens": [50716, 294, 264, 14333, 1214, 365, 661, 544, 3997, 1365, 23294, 13, 50924], "temperature": 0.0, "avg_logprob": -0.07502692767551968, "compression_ratio": 1.622340425531915, "no_speech_prob": 0.019119754433631897}, {"id": 118, "seek": 75228, "start": 765.0799999999999, "end": 770.52, "text": " First of all, let us add a bigger library to our demo library. For this,", "tokens": [51004, 2386, 295, 439, 11, 718, 505, 909, 257, 3801, 6405, 281, 527, 10723, 6405, 13, 1171, 341, 11, 51276], "temperature": 0.0, "avg_logprob": -0.07502692767551968, "compression_ratio": 1.622340425531915, "no_speech_prob": 0.019119754433631897}, {"id": 119, "seek": 75228, "start": 770.52, "end": 775.24, "text": " we need to edit the configuration file and add an additional library.", "tokens": [51276, 321, 643, 281, 8129, 264, 11694, 3991, 293, 909, 364, 4497, 6405, 13, 51512], "temperature": 0.0, "avg_logprob": -0.07502692767551968, "compression_ratio": 1.622340425531915, "no_speech_prob": 0.019119754433631897}, {"id": 120, "seek": 77524, "start": 775.96, "end": 783.24, "text": " After adding the library, we can list the directories with the list command,", "tokens": [50400, 2381, 5127, 264, 6405, 11, 321, 393, 1329, 264, 5391, 530, 365, 264, 1329, 5622, 11, 50764], "temperature": 0.0, "avg_logprob": -0.12465777325986037, "compression_ratio": 1.5621621621621622, "no_speech_prob": 0.002114849630743265}, {"id": 121, "seek": 77524, "start": 784.6, "end": 789.0, "text": " which shows us the interactive interface to select documents.", "tokens": [50832, 597, 3110, 505, 264, 15141, 9226, 281, 3048, 8512, 13, 51052], "temperature": 0.0, "avg_logprob": -0.12465777325986037, "compression_ratio": 1.5621621621621622, "no_speech_prob": 0.002114849630743265}, {"id": 122, "seek": 77524, "start": 790.52, "end": 796.52, "text": " Most Puppys commands accept a query argument as an input. In this case,", "tokens": [51128, 4534, 430, 10504, 749, 16901, 3241, 257, 14581, 6770, 382, 364, 4846, 13, 682, 341, 1389, 11, 51428], "temperature": 0.0, "avg_logprob": -0.12465777325986037, "compression_ratio": 1.5621621621621622, "no_speech_prob": 0.002114849630743265}, {"id": 123, "seek": 77524, "start": 796.52, "end": 801.96, "text": " we can query for documents matching the author to include the string Einstein.", "tokens": [51428, 321, 393, 14581, 337, 8512, 14324, 264, 3793, 281, 4090, 264, 6798, 23486, 13, 51700], "temperature": 0.0, "avg_logprob": -0.12465777325986037, "compression_ratio": 1.5621621621621622, "no_speech_prob": 0.002114849630743265}, {"id": 124, "seek": 80196, "start": 802.36, "end": 810.84, "text": " We can also use the all flag to do a Puppys action to all documents matching the query.", "tokens": [50384, 492, 393, 611, 764, 264, 439, 7166, 281, 360, 257, 430, 10504, 749, 3069, 281, 439, 8512, 14324, 264, 14581, 13, 50808], "temperature": 0.0, "avg_logprob": -0.14759247643607004, "compression_ratio": 1.390728476821192, "no_speech_prob": 0.0007552469032816589}, {"id": 125, "seek": 80196, "start": 811.64, "end": 815.5600000000001, "text": " In this case, listing the full paths for the folders.", "tokens": [50848, 682, 341, 1389, 11, 22161, 264, 1577, 14518, 337, 264, 31082, 13, 51044], "temperature": 0.0, "avg_logprob": -0.14759247643607004, "compression_ratio": 1.390728476821192, "no_speech_prob": 0.0007552469032816589}, {"id": 126, "seek": 80196, "start": 818.0400000000001, "end": 823.96, "text": " Other commands like open, edit, or update work in a similar fashion.", "tokens": [51168, 5358, 16901, 411, 1269, 11, 8129, 11, 420, 5623, 589, 294, 257, 2531, 6700, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14759247643607004, "compression_ratio": 1.390728476821192, "no_speech_prob": 0.0007552469032816589}, {"id": 127, "seek": 82396, "start": 824.2800000000001, "end": 832.12, "text": " Next, we will write a simple Python script to scan all the documents in the library", "tokens": [50380, 3087, 11, 321, 486, 2464, 257, 2199, 15329, 5755, 281, 11049, 439, 264, 8512, 294, 264, 6405, 50772], "temperature": 0.0, "avg_logprob": -0.14311009559078494, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.0016225033905357122}, {"id": 128, "seek": 82396, "start": 832.76, "end": 839.72, "text": " and add the tag to the document whenever the substring this appears in the title of the document.", "tokens": [50804, 293, 909, 264, 6162, 281, 264, 4166, 5699, 264, 4594, 2937, 341, 7038, 294, 264, 4876, 295, 264, 4166, 13, 51152], "temperature": 0.0, "avg_logprob": -0.14311009559078494, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.0016225033905357122}, {"id": 129, "seek": 82396, "start": 841.8000000000001, "end": 848.6800000000001, "text": " To do this, we can use the Puppys API submodule and we can obtain all documents in the current", "tokens": [51256, 1407, 360, 341, 11, 321, 393, 764, 264, 430, 10504, 749, 9362, 1422, 8014, 2271, 293, 321, 393, 12701, 439, 8512, 294, 264, 2190, 51600], "temperature": 0.0, "avg_logprob": -0.14311009559078494, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.0016225033905357122}, {"id": 130, "seek": 84868, "start": 848.68, "end": 852.5999999999999, "text": " library with the function get all documents in lib.", "tokens": [50364, 6405, 365, 264, 2445, 483, 439, 8512, 294, 22854, 13, 50560], "temperature": 0.0, "avg_logprob": -0.13885227839152017, "compression_ratio": 1.3796296296296295, "no_speech_prob": 0.001895105466246605}, {"id": 131, "seek": 84868, "start": 855.2399999999999, "end": 862.04, "text": " Next, we loop over all documents and we deal with the document as if it were a Python dictionary.", "tokens": [50692, 3087, 11, 321, 6367, 670, 439, 8512, 293, 321, 2028, 365, 264, 4166, 382, 498, 309, 645, 257, 15329, 25890, 13, 51032], "temperature": 0.0, "avg_logprob": -0.13885227839152017, "compression_ratio": 1.3796296296296295, "no_speech_prob": 0.001895105466246605}, {"id": 132, "seek": 87868, "start": 879.2399999999999, "end": 891.4799999999999, "text": " The method save saves the document.", "tokens": [50392, 440, 3170, 3155, 19155, 264, 4166, 13, 51004], "temperature": 0.0, "avg_logprob": -0.18894610113027144, "compression_ratio": 1.381679389312977, "no_speech_prob": 0.0023955064825713634}, {"id": 133, "seek": 87868, "start": 893.64, "end": 898.8399999999999, "text": " I will comment out the save call since I don't want it to override the library.", "tokens": [51112, 286, 486, 2871, 484, 264, 3155, 818, 1670, 286, 500, 380, 528, 309, 281, 42321, 264, 6405, 13, 51372], "temperature": 0.0, "avg_logprob": -0.18894610113027144, "compression_ratio": 1.381679389312977, "no_speech_prob": 0.0023955064825713634}, {"id": 134, "seek": 87868, "start": 902.1999999999999, "end": 906.8399999999999, "text": " Let's run the script and see that it works. And indeed, it works.", "tokens": [51540, 961, 311, 1190, 264, 5755, 293, 536, 300, 309, 1985, 13, 400, 6451, 11, 309, 1985, 13, 51772], "temperature": 0.0, "avg_logprob": -0.18894610113027144, "compression_ratio": 1.381679389312977, "no_speech_prob": 0.0023955064825713634}, {"id": 135, "seek": 90868, "start": 909.4, "end": 912.4399999999999, "text": " The last demonstration will concern the web application.", "tokens": [50400, 440, 1036, 16520, 486, 3136, 264, 3670, 3861, 13, 50552], "temperature": 0.0, "avg_logprob": -0.11448713392019272, "compression_ratio": 1.5864197530864197, "no_speech_prob": 0.0019567636772990227}, {"id": 136, "seek": 90868, "start": 913.0799999999999, "end": 917.7199999999999, "text": " The web application is quite useful if you would like to self host Puppys", "tokens": [50584, 440, 3670, 3861, 307, 1596, 4420, 498, 291, 576, 411, 281, 2698, 3975, 430, 10504, 749, 50816], "temperature": 0.0, "avg_logprob": -0.11448713392019272, "compression_ratio": 1.5864197530864197, "no_speech_prob": 0.0019567636772990227}, {"id": 137, "seek": 90868, "start": 917.7199999999999, "end": 919.88, "text": " or access it from a portable device.", "tokens": [50816, 420, 2105, 309, 490, 257, 21800, 4302, 13, 50924], "temperature": 0.0, "avg_logprob": -0.11448713392019272, "compression_ratio": 1.5864197530864197, "no_speech_prob": 0.0019567636772990227}, {"id": 138, "seek": 90868, "start": 922.28, "end": 929.3199999999999, "text": " We can run the web application using the serve command to which we can pass a port 88888.", "tokens": [51044, 492, 393, 1190, 264, 3670, 3861, 1228, 264, 4596, 5622, 281, 597, 321, 393, 1320, 257, 2436, 1649, 16919, 16919, 13, 51396], "temperature": 0.0, "avg_logprob": -0.11448713392019272, "compression_ratio": 1.5864197530864197, "no_speech_prob": 0.0019567636772990227}, {"id": 139, "seek": 92932, "start": 929.48, "end": 940.2800000000001, "text": " Directing our browser to the URL localhost colon 8888,", "tokens": [50372, 18308, 278, 527, 11185, 281, 264, 12905, 2654, 6037, 8255, 1649, 16919, 23, 11, 50912], "temperature": 0.0, "avg_logprob": -0.19751073603044478, "compression_ratio": 1.4720496894409938, "no_speech_prob": 0.002359182806685567}, {"id": 140, "seek": 92932, "start": 940.9200000000001, "end": 947.48, "text": " we see the starting page of the web application where we are presented with a simple query prompt.", "tokens": [50944, 321, 536, 264, 2891, 3028, 295, 264, 3670, 3861, 689, 321, 366, 8212, 365, 257, 2199, 14581, 12391, 13, 51272], "temperature": 0.0, "avg_logprob": -0.19751073603044478, "compression_ratio": 1.4720496894409938, "no_speech_prob": 0.002359182806685567}, {"id": 141, "seek": 92932, "start": 950.44, "end": 956.84, "text": " Other pages include listing all the documents in the library, listing all the tags,", "tokens": [51420, 5358, 7183, 4090, 22161, 439, 264, 8512, 294, 264, 6405, 11, 22161, 439, 264, 18632, 11, 51740], "temperature": 0.0, "avg_logprob": -0.19751073603044478, "compression_ratio": 1.4720496894409938, "no_speech_prob": 0.002359182806685567}, {"id": 142, "seek": 95684, "start": 957.48, "end": 964.44, "text": " and browsing a different library. Let us again enter the author Einstein query into the prompt.", "tokens": [50396, 293, 38602, 257, 819, 6405, 13, 961, 505, 797, 3242, 264, 3793, 23486, 14581, 666, 264, 12391, 13, 50744], "temperature": 0.0, "avg_logprob": -0.12330620288848877, "compression_ratio": 1.6435185185185186, "no_speech_prob": 0.005543938372284174}, {"id": 143, "seek": 95684, "start": 965.5600000000001, "end": 970.36, "text": " The result page includes a handy timeline with the results of the query", "tokens": [50800, 440, 1874, 3028, 5974, 257, 13239, 12933, 365, 264, 3542, 295, 264, 14581, 51040], "temperature": 0.0, "avg_logprob": -0.12330620288848877, "compression_ratio": 1.6435185185185186, "no_speech_prob": 0.005543938372284174}, {"id": 144, "seek": 95684, "start": 971.08, "end": 978.6, "text": " and a simple multi-line list of the results. In this timeline, we can see for instance directly", "tokens": [51076, 293, 257, 2199, 4825, 12, 1889, 1329, 295, 264, 3542, 13, 682, 341, 12933, 11, 321, 393, 536, 337, 5197, 3838, 51452], "temperature": 0.0, "avg_logprob": -0.12330620288848877, "compression_ratio": 1.6435185185185186, "no_speech_prob": 0.005543938372284174}, {"id": 145, "seek": 95684, "start": 978.6, "end": 985.24, "text": " the annus mirabilis of Einstein together with a couple of other publications further right.", "tokens": [51452, 264, 2324, 301, 3149, 5177, 271, 295, 23486, 1214, 365, 257, 1916, 295, 661, 25618, 3052, 558, 13, 51784], "temperature": 0.0, "avg_logprob": -0.12330620288848877, "compression_ratio": 1.6435185185185186, "no_speech_prob": 0.005543938372284174}, {"id": 146, "seek": 98524, "start": 985.64, "end": 990.52, "text": " We could click on the title of the timeline and go to the respective document page.", "tokens": [50384, 492, 727, 2052, 322, 264, 4876, 295, 264, 12933, 293, 352, 281, 264, 23649, 4166, 3028, 13, 50628], "temperature": 0.0, "avg_logprob": -0.22553023425015536, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.001345261582173407}, {"id": 147, "seek": 98524, "start": 992.52, "end": 999.16, "text": " In the results for the document, we see a left block with some basic information and the PDF links.", "tokens": [50728, 682, 264, 3542, 337, 264, 4166, 11, 321, 536, 257, 1411, 3461, 365, 512, 3875, 1589, 293, 264, 17752, 6123, 13, 51060], "temperature": 0.0, "avg_logprob": -0.22553023425015536, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.001345261582173407}, {"id": 148, "seek": 98524, "start": 1000.12, "end": 1007.24, "text": " On the right hand side, we see the citation, references, and several external links for the document.", "tokens": [51108, 1282, 264, 558, 1011, 1252, 11, 321, 536, 264, 45590, 11, 15400, 11, 293, 2940, 8320, 6123, 337, 264, 4166, 13, 51464], "temperature": 0.0, "avg_logprob": -0.22553023425015536, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.001345261582173407}, {"id": 149, "seek": 101524, "start": 1016.2, "end": 1032.28, "text": " Let us look for the first paper we added at the beginning of this presentation.", "tokens": [50412, 961, 505, 574, 337, 264, 700, 3035, 321, 3869, 412, 264, 2863, 295, 341, 5860, 13, 51216], "temperature": 0.0, "avg_logprob": -0.1600965369831432, "compression_ratio": 1.4375, "no_speech_prob": 0.0016203665873035789}, {"id": 150, "seek": 101524, "start": 1033.48, "end": 1043.24, "text": " It is worth noting that we can click on the tags of the documents to get the results for the given tags.", "tokens": [51276, 467, 307, 3163, 26801, 300, 321, 393, 2052, 322, 264, 18632, 295, 264, 8512, 281, 483, 264, 3542, 337, 264, 2212, 18632, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1600965369831432, "compression_ratio": 1.4375, "no_speech_prob": 0.0016203665873035789}, {"id": 151, "seek": 104524, "start": 1045.48, "end": 1063.0, "text": " If we click on the arrow, we will navigate into the document page. The red notifications advise us", "tokens": [50376, 759, 321, 2052, 322, 264, 11610, 11, 321, 486, 12350, 666, 264, 4166, 3028, 13, 440, 2182, 13426, 18312, 505, 51252], "temperature": 0.0, "avg_logprob": -0.1441093020968967, "compression_ratio": 1.368421052631579, "no_speech_prob": 0.0029796252492815256}, {"id": 152, "seek": 104524, "start": 1063.0, "end": 1068.28, "text": " of small problems with the data in our document. However, I will not fix those now.", "tokens": [51252, 295, 1359, 2740, 365, 264, 1412, 294, 527, 4166, 13, 2908, 11, 286, 486, 406, 3191, 729, 586, 13, 51516], "temperature": 0.0, "avg_logprob": -0.1441093020968967, "compression_ratio": 1.368421052631579, "no_speech_prob": 0.0029796252492815256}, {"id": 153, "seek": 106828, "start": 1069.24, "end": 1076.68, "text": " The document page is a multi-tap page where the first tab presents most of the information", "tokens": [50412, 440, 4166, 3028, 307, 257, 4825, 12, 83, 569, 3028, 689, 264, 700, 4421, 13533, 881, 295, 264, 1589, 50784], "temperature": 0.0, "avg_logprob": -0.20768002101353236, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.013634768314659595}, {"id": 154, "seek": 106828, "start": 1076.68, "end": 1085.24, "text": " of the document in an HTML form fashion. Additionally, we have access to the raw info file", "tokens": [50784, 295, 264, 4166, 294, 364, 17995, 1254, 6700, 13, 19927, 11, 321, 362, 2105, 281, 264, 8936, 13614, 3991, 51212], "temperature": 0.0, "avg_logprob": -0.20768002101353236, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.013634768314659595}, {"id": 155, "seek": 106828, "start": 1086.36, "end": 1094.52, "text": " where we can modify and override its contents. We have added a BipDex tab for LaTeX users.", "tokens": [51268, 689, 321, 393, 16927, 293, 42321, 1080, 15768, 13, 492, 362, 3869, 257, 363, 647, 35, 3121, 4421, 337, 2369, 14233, 55, 5022, 13, 51676], "temperature": 0.0, "avg_logprob": -0.20768002101353236, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.013634768314659595}, {"id": 156, "seek": 109452, "start": 1094.68, "end": 1103.6399999999999, "text": " This document has a single file attached and we can preview it on the browser thanks to the library", "tokens": [50372, 639, 4166, 575, 257, 2167, 3991, 8570, 293, 321, 393, 14281, 309, 322, 264, 11185, 3231, 281, 264, 6405, 50820], "temperature": 0.0, "avg_logprob": -0.13680191962949692, "compression_ratio": 1.5, "no_speech_prob": 0.0016482074279338121}, {"id": 157, "seek": 109452, "start": 1103.6399999999999, "end": 1111.48, "text": " PDF JavaScript. We can also download the document or open the document in a new window.", "tokens": [50820, 17752, 15778, 13, 492, 393, 611, 5484, 264, 4166, 420, 1269, 264, 4166, 294, 257, 777, 4910, 13, 51212], "temperature": 0.0, "avg_logprob": -0.13680191962949692, "compression_ratio": 1.5, "no_speech_prob": 0.0016482074279338121}, {"id": 158, "seek": 109452, "start": 1115.48, "end": 1120.6, "text": " In the next tab, we can visualize the citations file that we generated previously.", "tokens": [51412, 682, 264, 958, 4421, 11, 321, 393, 23273, 264, 4814, 763, 3991, 300, 321, 10833, 8046, 13, 51668], "temperature": 0.0, "avg_logprob": -0.13680191962949692, "compression_ratio": 1.5, "no_speech_prob": 0.0016482074279338121}, {"id": 159, "seek": 112060, "start": 1121.48, "end": 1125.24, "text": " This tab also has a timeline like the search results", "tokens": [50408, 639, 4421, 611, 575, 257, 12933, 411, 264, 3164, 3542, 50596], "temperature": 0.0, "avg_logprob": -0.13435470792982313, "compression_ratio": 1.474074074074074, "no_speech_prob": 0.001410091295838356}, {"id": 160, "seek": 112060, "start": 1125.24, "end": 1132.28, "text": " and the documents with the green reference indicate that these documents exist in our library and we", "tokens": [50596, 293, 264, 8512, 365, 264, 3092, 6408, 13330, 300, 613, 8512, 2514, 294, 527, 6405, 293, 321, 50948], "temperature": 0.0, "avg_logprob": -0.13435470792982313, "compression_ratio": 1.474074074074074, "no_speech_prob": 0.001410091295838356}, {"id": 161, "seek": 112060, "start": 1132.28, "end": 1144.76, "text": " can open them. Let us open this article page.", "tokens": [50948, 393, 1269, 552, 13, 961, 505, 1269, 341, 7222, 3028, 13, 51572], "temperature": 0.0, "avg_logprob": -0.13435470792982313, "compression_ratio": 1.474074074074074, "no_speech_prob": 0.001410091295838356}, {"id": 162, "seek": 115060, "start": 1150.6, "end": 1174.76, "text": " For this article, we have also generated citations, but we can also use the Harvard ATS service.", "tokens": [50372, 1171, 341, 7222, 11, 321, 362, 611, 10833, 4814, 763, 11, 457, 321, 393, 611, 764, 264, 13378, 316, 7327, 2643, 13, 51572], "temperature": 0.0, "avg_logprob": -0.29795106887817385, "compression_ratio": 1.103448275862069, "no_speech_prob": 0.005634871777147055}, {"id": 163, "seek": 118060, "start": 1181.56, "end": 1192.04, "text": " In the case of articles citing the current article, we have not generated this file", "tokens": [50412, 682, 264, 1389, 295, 11290, 48749, 264, 2190, 7222, 11, 321, 362, 406, 10833, 341, 3991, 50936], "temperature": 0.0, "avg_logprob": -0.16443899154663086, "compression_ratio": 1.4316546762589928, "no_speech_prob": 0.0007434930303134024}, {"id": 164, "seek": 118060, "start": 1192.6799999999998, "end": 1196.9199999999998, "text": " and therefore we get an embedded page from ATS by default.", "tokens": [50968, 293, 4412, 321, 483, 364, 16741, 3028, 490, 316, 7327, 538, 7576, 13, 51180], "temperature": 0.0, "avg_logprob": -0.16443899154663086, "compression_ratio": 1.4316546762589928, "no_speech_prob": 0.0007434930303134024}, {"id": 165, "seek": 118060, "start": 1200.76, "end": 1204.76, "text": " In the last tab, we can edit the nodes from the browser.", "tokens": [51372, 682, 264, 1036, 4421, 11, 321, 393, 8129, 264, 13891, 490, 264, 11185, 13, 51572], "temperature": 0.0, "avg_logprob": -0.16443899154663086, "compression_ratio": 1.4316546762589928, "no_speech_prob": 0.0007434930303134024}, {"id": 166, "seek": 121060, "start": 1211.56, "end": 1223.56, "text": " Furthermore, clicking on the tags and library pages, we can see how these interfaces look like.", "tokens": [50412, 23999, 11, 9697, 322, 264, 18632, 293, 6405, 7183, 11, 321, 393, 536, 577, 613, 28416, 574, 411, 13, 51012], "temperature": 0.0, "avg_logprob": -0.24273590925263194, "compression_ratio": 1.3529411764705883, "no_speech_prob": 0.0005111166392453015}, {"id": 167, "seek": 121060, "start": 1233.56, "end": 1240.04, "text": " Thank you very much for your attention. For further information, visit the projects page", "tokens": [51512, 1044, 291, 588, 709, 337, 428, 3202, 13, 1171, 3052, 1589, 11, 3441, 264, 4455, 3028, 51836], "temperature": 0.0, "avg_logprob": -0.24273590925263194, "compression_ratio": 1.3529411764705883, "no_speech_prob": 0.0005111166392453015}, {"id": 168, "seek": 124004, "start": 1240.04, "end": 1249.8, "text": " over at GitHub. Of course, Puppies is only alive because of its community. I would like to thank", "tokens": [50364, 670, 412, 23331, 13, 2720, 1164, 11, 430, 10504, 530, 307, 787, 5465, 570, 295, 1080, 1768, 13, 286, 576, 411, 281, 1309, 50852], "temperature": 0.0, "avg_logprob": -0.1284860016463639, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.025931987911462784}, {"id": 169, "seek": 124004, "start": 1249.8, "end": 1256.84, "text": " all the users and contributors over the years. I would like to specially thank the co-mentainers", "tokens": [50852, 439, 264, 5022, 293, 45627, 670, 264, 924, 13, 286, 576, 411, 281, 22549, 1309, 264, 598, 12, 518, 491, 433, 51204], "temperature": 0.0, "avg_logprob": -0.1284860016463639, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.025931987911462784}, {"id": 170, "seek": 124004, "start": 1256.84, "end": 1264.84, "text": " of Puppies, Alex Fickle and Julian Hauser for their hard work in the last year. I hope you", "tokens": [51204, 295, 430, 10504, 530, 11, 5202, 479, 618, 306, 293, 25151, 4064, 18088, 337, 641, 1152, 589, 294, 264, 1036, 1064, 13, 286, 1454, 291, 51604], "temperature": 0.0, "avg_logprob": -0.1284860016463639, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.025931987911462784}, {"id": 171, "seek": 126484, "start": 1264.84, "end": 1272.1999999999998, "text": " enjoyed the presentation and I'll be answering your questions shortly.", "tokens": [50364, 4626, 264, 5860, 293, 286, 603, 312, 13430, 428, 1651, 13392, 13, 50732], "temperature": 0.0, "avg_logprob": -0.33544018689323873, "compression_ratio": 1.253968253968254, "no_speech_prob": 0.04835490137338638}, {"id": 172, "seek": 126484, "start": 1282.4399999999998, "end": 1288.1999999999998, "text": " Fantastic. Thank you so much for that really actually quite interesting talk Alejandro.", "tokens": [51244, 21320, 13, 1044, 291, 370, 709, 337, 300, 534, 767, 1596, 1880, 751, 44568, 29173, 13, 51532], "temperature": 0.0, "avg_logprob": -0.33544018689323873, "compression_ratio": 1.253968253968254, "no_speech_prob": 0.04835490137338638}, {"id": 173, "seek": 128820, "start": 1288.52, "end": 1296.1200000000001, "text": " I really quite felt inspired thinking, wow, can I run this with my own publications as a way of", "tokens": [50380, 286, 534, 1596, 2762, 7547, 1953, 11, 6076, 11, 393, 286, 1190, 341, 365, 452, 1065, 25618, 382, 257, 636, 295, 50760], "temperature": 0.0, "avg_logprob": -0.2302359172276088, "compression_ratio": 1.5611814345991561, "no_speech_prob": 0.0705583393573761}, {"id": 174, "seek": 128820, "start": 1296.1200000000001, "end": 1301.56, "text": " collating stuff and also sharing it with the world? It's always nice when you watch a talk", "tokens": [50760, 1263, 990, 1507, 293, 611, 5414, 309, 365, 264, 1002, 30, 467, 311, 1009, 1481, 562, 291, 1159, 257, 751, 51032], "temperature": 0.0, "avg_logprob": -0.2302359172276088, "compression_ratio": 1.5611814345991561, "no_speech_prob": 0.0705583393573761}, {"id": 175, "seek": 128820, "start": 1301.56, "end": 1308.52, "text": " and you immediately think, yes, I'm going to use this as well. So I have a few questions here.", "tokens": [51032, 293, 291, 4258, 519, 11, 2086, 11, 286, 478, 516, 281, 764, 341, 382, 731, 13, 407, 286, 362, 257, 1326, 1651, 510, 13, 51380], "temperature": 0.0, "avg_logprob": -0.2302359172276088, "compression_ratio": 1.5611814345991561, "no_speech_prob": 0.0705583393573761}, {"id": 176, "seek": 128820, "start": 1309.32, "end": 1315.4, "text": " I think my first one, perhaps, might be, I historically have used Zotero. I had to think", "tokens": [51420, 286, 519, 452, 700, 472, 11, 4317, 11, 1062, 312, 11, 286, 16180, 362, 1143, 1176, 310, 2032, 13, 286, 632, 281, 519, 51724], "temperature": 0.0, "avg_logprob": -0.2302359172276088, "compression_ratio": 1.5611814345991561, "no_speech_prob": 0.0705583393573761}, {"id": 177, "seek": 131540, "start": 1315.4, "end": 1322.6000000000001, "text": " very carefully not to say no to that. Is it easy for me to migrate if I was inclined to migrate", "tokens": [50364, 588, 7500, 406, 281, 584, 572, 281, 300, 13, 1119, 309, 1858, 337, 385, 281, 31821, 498, 286, 390, 28173, 281, 31821, 50724], "temperature": 0.0, "avg_logprob": -0.19432926177978516, "compression_ratio": 1.545945945945946, "no_speech_prob": 0.0036378144286572933}, {"id": 178, "seek": 131540, "start": 1322.6000000000001, "end": 1335.8000000000002, "text": " from Zotero or other plugins? Over the years, quite a lot of people have developed some plugins for", "tokens": [50724, 490, 1176, 310, 2032, 420, 661, 33759, 30, 4886, 264, 924, 11, 1596, 257, 688, 295, 561, 362, 4743, 512, 33759, 337, 51384], "temperature": 0.0, "avg_logprob": -0.19432926177978516, "compression_ratio": 1.545945945945946, "no_speech_prob": 0.0036378144286572933}, {"id": 179, "seek": 131540, "start": 1335.8000000000002, "end": 1344.3600000000001, "text": " the interface of Zotero and Puppies. You can export to simply and create Puppies libraries", "tokens": [51384, 264, 9226, 295, 1176, 310, 2032, 293, 430, 10504, 530, 13, 509, 393, 10725, 281, 2935, 293, 1884, 430, 10504, 530, 15148, 51812], "temperature": 0.0, "avg_logprob": -0.19432926177978516, "compression_ratio": 1.545945945945946, "no_speech_prob": 0.0036378144286572933}, {"id": 180, "seek": 134436, "start": 1345.24, "end": 1351.8799999999999, "text": " but I'm also aware of some people that actually use both. So they have a workflow to", "tokens": [50408, 457, 286, 478, 611, 3650, 295, 512, 561, 300, 767, 764, 1293, 13, 407, 436, 362, 257, 20993, 281, 50740], "temperature": 0.0, "avg_logprob": -0.1379961162418514, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.003266383660957217}, {"id": 181, "seek": 134436, "start": 1352.6, "end": 1359.08, "text": " export this dynamically the whole time. So it is in principle compatible and there are", "tokens": [50776, 10725, 341, 43492, 264, 1379, 565, 13, 407, 309, 307, 294, 8665, 18218, 293, 456, 366, 51100], "temperature": 0.0, "avg_logprob": -0.1379961162418514, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.003266383660957217}, {"id": 182, "seek": 134436, "start": 1359.08, "end": 1362.84, "text": " a couple of projects that do this. This is coming from the community.", "tokens": [51100, 257, 1916, 295, 4455, 300, 360, 341, 13, 639, 307, 1348, 490, 264, 1768, 13, 51288], "temperature": 0.0, "avg_logprob": -0.1379961162418514, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.003266383660957217}, {"id": 183, "seek": 134436, "start": 1364.76, "end": 1369.1599999999999, "text": " Thanks. That's actually really appealing to me because whilst I was watching the way you", "tokens": [51384, 2561, 13, 663, 311, 767, 534, 23842, 281, 385, 570, 18534, 286, 390, 1976, 264, 636, 291, 51604], "temperature": 0.0, "avg_logprob": -0.1379961162418514, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.003266383660957217}, {"id": 184, "seek": 136916, "start": 1369.16, "end": 1374.3600000000001, "text": " added with the DOI, I thought that was really cool but there's still like seven command line", "tokens": [50364, 3869, 365, 264, 10699, 40, 11, 286, 1194, 300, 390, 534, 1627, 457, 456, 311, 920, 411, 3407, 5622, 1622, 50624], "temperature": 0.0, "avg_logprob": -0.19341091260518115, "compression_ratio": 1.4789473684210526, "no_speech_prob": 0.00924932025372982}, {"id": 185, "seek": 136916, "start": 1374.3600000000001, "end": 1381.72, "text": " flags and I'd really like the button that says add this to Zotero. Yeah. So the thing is,", "tokens": [50624, 23265, 293, 286, 1116, 534, 411, 264, 2960, 300, 1619, 909, 341, 281, 1176, 310, 2032, 13, 865, 13, 407, 264, 551, 307, 11, 50992], "temperature": 0.0, "avg_logprob": -0.19341091260518115, "compression_ratio": 1.4789473684210526, "no_speech_prob": 0.00924932025372982}, {"id": 186, "seek": 136916, "start": 1382.8400000000001, "end": 1390.68, "text": " yeah, I should have maybe given some more examples of adding some documents. So in principle, it's", "tokens": [51048, 1338, 11, 286, 820, 362, 1310, 2212, 512, 544, 5110, 295, 5127, 512, 8512, 13, 407, 294, 8665, 11, 309, 311, 51440], "temperature": 0.0, "avg_logprob": -0.19341091260518115, "compression_ratio": 1.4789473684210526, "no_speech_prob": 0.00924932025372982}, {"id": 187, "seek": 139068, "start": 1390.68, "end": 1403.5600000000002, "text": " also possible to add a document just by the URL. So there are some automatic recognition in Puppies.", "tokens": [50364, 611, 1944, 281, 909, 257, 4166, 445, 538, 264, 12905, 13, 407, 456, 366, 512, 12509, 11150, 294, 430, 10504, 530, 13, 51008], "temperature": 0.0, "avg_logprob": -0.12914113815014178, "compression_ratio": 1.1235955056179776, "no_speech_prob": 0.008183379657566547}, {"id": 188, "seek": 140356, "start": 1403.56, "end": 1415.72, "text": " So most URLs are recognized and it could in this case even revive URL or", "tokens": [50364, 407, 881, 43267, 366, 9823, 293, 309, 727, 294, 341, 1389, 754, 36292, 12905, 420, 50972], "temperature": 0.0, "avg_logprob": -0.43791847229003905, "compression_ratio": 1.1981981981981982, "no_speech_prob": 0.060578443109989166}, {"id": 189, "seek": 140356, "start": 1417.96, "end": 1428.44, "text": " within the HTML page. I noticed that there is a tool to use.", "tokens": [51084, 1951, 264, 17995, 3028, 13, 286, 5694, 300, 456, 307, 257, 2290, 281, 764, 13, 51608], "temperature": 0.0, "avg_logprob": -0.43791847229003905, "compression_ratio": 1.1981981981981982, "no_speech_prob": 0.060578443109989166}, {"id": 190, "seek": 143356, "start": 1433.6399999999999, "end": 1439.72, "text": " Sorry. Your connection has gone just robot enough.", "tokens": [50368, 4919, 13, 2260, 4984, 575, 2780, 445, 7881, 1547, 13, 50672], "temperature": 0.0, "avg_logprob": -0.24616017937660217, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.019372638314962387}, {"id": 191, "seek": 143356, "start": 1447.6399999999999, "end": 1453.56, "text": " Testing, testing. Do we still have you now? Yes, that is much better. Could you maybe just repeat", "tokens": [51068, 45517, 11, 4997, 13, 1144, 321, 920, 362, 291, 586, 30, 1079, 11, 300, 307, 709, 1101, 13, 7497, 291, 1310, 445, 7149, 51364], "temperature": 0.0, "avg_logprob": -0.24616017937660217, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.019372638314962387}, {"id": 192, "seek": 143356, "start": 1453.56, "end": 1459.3999999999999, "text": " your last two or three sentences because it was just a bit hard to hear. Sorry. So there are some,", "tokens": [51364, 428, 1036, 732, 420, 1045, 16579, 570, 309, 390, 445, 257, 857, 1152, 281, 1568, 13, 4919, 13, 407, 456, 366, 512, 11, 51656], "temperature": 0.0, "avg_logprob": -0.24616017937660217, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.019372638314962387}, {"id": 193, "seek": 145940, "start": 1460.3600000000001, "end": 1474.0400000000002, "text": " Zotero has implemented also quite a lot of metadata fetches from many sources and there is also a", "tokens": [50412, 1176, 310, 2032, 575, 12270, 611, 1596, 257, 688, 295, 26603, 15136, 3781, 490, 867, 7139, 293, 456, 307, 611, 257, 51096], "temperature": 0.0, "avg_logprob": -0.15901469211189115, "compression_ratio": 1.56, "no_speech_prob": 0.001753641408868134}, {"id": 194, "seek": 145940, "start": 1474.0400000000002, "end": 1484.2, "text": " project that tries to reuse these metadata fetches from Zotero for their use in Puppies and maybe", "tokens": [51096, 1716, 300, 9898, 281, 26225, 613, 26603, 15136, 3781, 490, 1176, 310, 2032, 337, 641, 764, 294, 430, 10504, 530, 293, 1310, 51604], "temperature": 0.0, "avg_logprob": -0.15901469211189115, "compression_ratio": 1.56, "no_speech_prob": 0.001753641408868134}, {"id": 195, "seek": 148420, "start": 1484.2, "end": 1490.6000000000001, "text": " also in the web application in Puppies. So this might also happen in the future. But in general,", "tokens": [50364, 611, 294, 264, 3670, 3861, 294, 430, 10504, 530, 13, 407, 341, 1062, 611, 1051, 294, 264, 2027, 13, 583, 294, 2674, 11, 50684], "temperature": 0.0, "avg_logprob": -0.09570367137591045, "compression_ratio": 1.5, "no_speech_prob": 0.005901404656469822}, {"id": 196, "seek": 148420, "start": 1490.6000000000001, "end": 1499.4, "text": " it's much easier to add documents than what I showed in the video. Cool. Thanks. It's also", "tokens": [50684, 309, 311, 709, 3571, 281, 909, 8512, 813, 437, 286, 4712, 294, 264, 960, 13, 8561, 13, 2561, 13, 467, 311, 611, 51124], "temperature": 0.0, "avg_logprob": -0.09570367137591045, "compression_ratio": 1.5, "no_speech_prob": 0.005901404656469822}, {"id": 197, "seek": 148420, "start": 1499.4, "end": 1504.76, "text": " really nice to hear how interoperable y'all are. So we have a couple more questions in the chat.", "tokens": [51124, 534, 1481, 281, 1568, 577, 728, 7192, 712, 288, 6, 336, 366, 13, 407, 321, 362, 257, 1916, 544, 1651, 294, 264, 5081, 13, 51392], "temperature": 0.0, "avg_logprob": -0.09570367137591045, "compression_ratio": 1.5, "no_speech_prob": 0.005901404656469822}, {"id": 198, "seek": 148420, "start": 1506.28, "end": 1512.1200000000001, "text": " So Paul says, does the YAML format follow bibliographic standards of any type?", "tokens": [51468, 407, 4552, 1619, 11, 775, 264, 398, 2865, 43, 7877, 1524, 34344, 12295, 7787, 295, 604, 2010, 30, 51760], "temperature": 0.0, "avg_logprob": -0.09570367137591045, "compression_ratio": 1.5, "no_speech_prob": 0.005901404656469822}, {"id": 199, "seek": 151420, "start": 1514.6000000000001, "end": 1528.2, "text": " So we try to use most of the BipTec keywords when they are applicable and in general the YAML format", "tokens": [50384, 407, 321, 853, 281, 764, 881, 295, 264, 363, 647, 51, 3045, 21009, 562, 436, 366, 21142, 293, 294, 2674, 264, 398, 2865, 43, 7877, 51064], "temperature": 0.0, "avg_logprob": -0.13332578870985243, "compression_ratio": 1.3680555555555556, "no_speech_prob": 0.0022495349403470755}, {"id": 200, "seek": 151420, "start": 1528.2, "end": 1536.28, "text": " is really free to the user to use. So you might want to use a particular convention in your YAML", "tokens": [51064, 307, 534, 1737, 281, 264, 4195, 281, 764, 13, 407, 291, 1062, 528, 281, 764, 257, 1729, 10286, 294, 428, 398, 2865, 43, 51468], "temperature": 0.0, "avg_logprob": -0.13332578870985243, "compression_ratio": 1.3680555555555556, "no_speech_prob": 0.0022495349403470755}, {"id": 201, "seek": 153628, "start": 1536.28, "end": 1545.3999999999999, "text": " files but the keywords are mostly motivated by BipTec. That's the only one.", "tokens": [50364, 7098, 457, 264, 21009, 366, 5240, 14515, 538, 363, 647, 51, 3045, 13, 663, 311, 264, 787, 472, 13, 50820], "temperature": 0.0, "avg_logprob": -0.17777521470013788, "compression_ratio": 1.4098360655737705, "no_speech_prob": 0.010134612210094929}, {"id": 202, "seek": 153628, "start": 1547.0, "end": 1550.84, "text": " It still sounds like there's some decent interoperability there which is really nice.", "tokens": [50900, 467, 920, 3263, 411, 456, 311, 512, 8681, 728, 7192, 2310, 456, 597, 307, 534, 1481, 13, 51092], "temperature": 0.0, "avg_logprob": -0.17777521470013788, "compression_ratio": 1.4098360655737705, "no_speech_prob": 0.010134612210094929}, {"id": 203, "seek": 153628, "start": 1552.68, "end": 1559.56, "text": " Celia asks, who are the main users of Pappis in terms of discipline, students, researchers, etc?", "tokens": [51184, 19967, 654, 8962, 11, 567, 366, 264, 2135, 5022, 295, 430, 1746, 271, 294, 2115, 295, 13635, 11, 1731, 11, 10309, 11, 5183, 30, 51528], "temperature": 0.0, "avg_logprob": -0.17777521470013788, "compression_ratio": 1.4098360655737705, "no_speech_prob": 0.010134612210094929}, {"id": 204, "seek": 155956, "start": 1560.52, "end": 1571.72, "text": " Well, I know that's a good question. A lot of biophysics and biosciences, so bioinformatics,", "tokens": [50412, 1042, 11, 286, 458, 300, 311, 257, 665, 1168, 13, 316, 688, 295, 3228, 5317, 41732, 293, 36997, 537, 2667, 11, 370, 12198, 37811, 30292, 11, 50972], "temperature": 0.0, "avg_logprob": -0.16305279731750488, "compression_ratio": 1.5274725274725274, "no_speech_prob": 0.011141667142510414}, {"id": 205, "seek": 155956, "start": 1571.72, "end": 1577.8799999999999, "text": " I know quite a lot of people that use it. Physics, mathematics and computer science,", "tokens": [50972, 286, 458, 1596, 257, 688, 295, 561, 300, 764, 309, 13, 38355, 11, 18666, 293, 3820, 3497, 11, 51280], "temperature": 0.0, "avg_logprob": -0.16305279731750488, "compression_ratio": 1.5274725274725274, "no_speech_prob": 0.011141667142510414}, {"id": 206, "seek": 155956, "start": 1577.8799999999999, "end": 1585.08, "text": " I would say. These are the ones. But for instance, Julian is one commentator and he's a philosopher.", "tokens": [51280, 286, 576, 584, 13, 1981, 366, 264, 2306, 13, 583, 337, 5197, 11, 25151, 307, 472, 2871, 1639, 293, 415, 311, 257, 29805, 13, 51640], "temperature": 0.0, "avg_logprob": -0.16305279731750488, "compression_ratio": 1.5274725274725274, "no_speech_prob": 0.011141667142510414}, {"id": 207, "seek": 158508, "start": 1585.8799999999999, "end": 1595.8, "text": " So it really helps. Of course, you have to be a little bit acquainted with the command line.", "tokens": [50404, 407, 309, 534, 3665, 13, 2720, 1164, 11, 291, 362, 281, 312, 257, 707, 857, 50224, 365, 264, 5622, 1622, 13, 50900], "temperature": 0.0, "avg_logprob": -0.14940766990184784, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.004607117734849453}, {"id": 208, "seek": 158508, "start": 1596.36, "end": 1602.76, "text": " Maybe hopefully through the web application in the future this will change. But it's in general", "tokens": [50928, 2704, 4696, 807, 264, 3670, 3861, 294, 264, 2027, 341, 486, 1319, 13, 583, 309, 311, 294, 2674, 51248], "temperature": 0.0, "avg_logprob": -0.14940766990184784, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.004607117734849453}, {"id": 209, "seek": 158508, "start": 1602.76, "end": 1608.76, "text": " people that really care about their libraries, the metadata that they have in their libraries,", "tokens": [51248, 561, 300, 534, 1127, 466, 641, 15148, 11, 264, 26603, 300, 436, 362, 294, 641, 15148, 11, 51548], "temperature": 0.0, "avg_logprob": -0.14940766990184784, "compression_ratio": 1.5297297297297296, "no_speech_prob": 0.004607117734849453}, {"id": 210, "seek": 160876, "start": 1608.84, "end": 1617.24, "text": " and they really want to have a very clear, clear representation of their data. They don't want", "tokens": [50368, 293, 436, 534, 528, 281, 362, 257, 588, 1850, 11, 1850, 10290, 295, 641, 1412, 13, 814, 500, 380, 528, 50788], "temperature": 0.0, "avg_logprob": -0.1307041237993938, "compression_ratio": 1.577092511013216, "no_speech_prob": 0.002587989205494523}, {"id": 211, "seek": 160876, "start": 1617.24, "end": 1622.76, "text": " some upstream database somewhere stored. So they really want everything in plain text.", "tokens": [50788, 512, 33915, 8149, 4079, 12187, 13, 407, 436, 534, 528, 1203, 294, 11121, 2487, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1307041237993938, "compression_ratio": 1.577092511013216, "no_speech_prob": 0.002587989205494523}, {"id": 212, "seek": 160876, "start": 1624.76, "end": 1630.04, "text": " Yes, I think you demonstrated so beautifully how accessible your own data is and it's", "tokens": [51164, 1079, 11, 286, 519, 291, 18772, 370, 16525, 577, 9515, 428, 1065, 1412, 307, 293, 309, 311, 51428], "temperature": 0.0, "avg_logprob": -0.1307041237993938, "compression_ratio": 1.577092511013216, "no_speech_prob": 0.002587989205494523}, {"id": 213, "seek": 160876, "start": 1630.04, "end": 1637.4, "text": " surprisingly rare. Do you have any trainings for Pappis so that people who maybe are a bit", "tokens": [51428, 17600, 5892, 13, 1144, 291, 362, 604, 33856, 337, 430, 1746, 271, 370, 300, 561, 567, 1310, 366, 257, 857, 51796], "temperature": 0.0, "avg_logprob": -0.1307041237993938, "compression_ratio": 1.577092511013216, "no_speech_prob": 0.002587989205494523}, {"id": 214, "seek": 163740, "start": 1637.4, "end": 1644.1200000000001, "text": " less confident could learn more about it? Sadly, not right now. Maybe that's something if enough", "tokens": [50364, 1570, 6679, 727, 1466, 544, 466, 309, 30, 29628, 11, 406, 558, 586, 13, 2704, 300, 311, 746, 498, 1547, 50700], "temperature": 0.0, "avg_logprob": -0.10337825188269982, "compression_ratio": 1.5, "no_speech_prob": 0.002317089354619384}, {"id": 215, "seek": 163740, "start": 1644.1200000000001, "end": 1650.68, "text": " people are interested. That's something that we could certainly look into. But we have the", "tokens": [50700, 561, 366, 3102, 13, 663, 311, 746, 300, 321, 727, 3297, 574, 666, 13, 583, 321, 362, 264, 51028], "temperature": 0.0, "avg_logprob": -0.10337825188269982, "compression_ratio": 1.5, "no_speech_prob": 0.002317089354619384}, {"id": 216, "seek": 163740, "start": 1650.68, "end": 1659.0800000000002, "text": " discussions in GitHub. So quite a lot of people ask questions there. So there are also frequently", "tokens": [51028, 11088, 294, 23331, 13, 407, 1596, 257, 688, 295, 561, 1029, 1651, 456, 13, 407, 456, 366, 611, 10374, 51448], "temperature": 0.0, "avg_logprob": -0.10337825188269982, "compression_ratio": 1.5, "no_speech_prob": 0.002317089354619384}, {"id": 217, "seek": 165908, "start": 1659.08, "end": 1667.8, "text": " asked questions there. And we have also a Zulip chat. Also we are on Libera, but right now not", "tokens": [50364, 2351, 1651, 456, 13, 400, 321, 362, 611, 257, 1176, 425, 647, 5081, 13, 2743, 321, 366, 322, 14175, 64, 11, 457, 558, 586, 406, 50800], "temperature": 0.0, "avg_logprob": -0.1276917521158854, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.020266523584723473}, {"id": 218, "seek": 165908, "start": 1667.8, "end": 1675.48, "text": " so many people are there. And yeah, so just drop by and ask whatever you want.", "tokens": [50800, 370, 867, 561, 366, 456, 13, 400, 1338, 11, 370, 445, 3270, 538, 293, 1029, 2035, 291, 528, 13, 51184], "temperature": 0.0, "avg_logprob": -0.1276917521158854, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.020266523584723473}, {"id": 219, "seek": 165908, "start": 1677.0, "end": 1685.1599999999999, "text": " Super, thank you. So we have about 45 seconds left. That's time to squeeze in one last question.", "tokens": [51260, 4548, 11, 1309, 291, 13, 407, 321, 362, 466, 6905, 3949, 1411, 13, 663, 311, 565, 281, 13578, 294, 472, 1036, 1168, 13, 51668], "temperature": 0.0, "avg_logprob": -0.1276917521158854, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.020266523584723473}, {"id": 220, "seek": 168516, "start": 1685.16, "end": 1689.88, "text": " So we have one here from Paul. And we've got some love for the timeline, which I agree. I was like,", "tokens": [50364, 407, 321, 362, 472, 510, 490, 4552, 13, 400, 321, 600, 658, 512, 959, 337, 264, 12933, 11, 597, 286, 3986, 13, 286, 390, 411, 11, 50600], "temperature": 0.0, "avg_logprob": -0.1688907221743935, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.005544536747038364}, {"id": 221, "seek": 168516, "start": 1689.88, "end": 1697.88, "text": " oh, I want that. Do you plan any other visualizations, like maybe publication networks from citation data?", "tokens": [50600, 1954, 11, 286, 528, 300, 13, 1144, 291, 1393, 604, 661, 5056, 14455, 11, 411, 1310, 19953, 9590, 490, 45590, 1412, 30, 51000], "temperature": 0.0, "avg_logprob": -0.1688907221743935, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.005544536747038364}, {"id": 222, "seek": 168516, "start": 1699.24, "end": 1704.6000000000001, "text": " Yes, actually, yes, because I realized I really like these visualizations.", "tokens": [51068, 1079, 11, 767, 11, 2086, 11, 570, 286, 5334, 286, 534, 411, 613, 5056, 14455, 13, 51336], "temperature": 0.0, "avg_logprob": -0.1688907221743935, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.005544536747038364}, {"id": 223, "seek": 168516, "start": 1706.68, "end": 1713.0, "text": " I plan some like with the citation, some trees and stuff like this. But I would like to have", "tokens": [51440, 286, 1393, 512, 411, 365, 264, 45590, 11, 512, 5852, 293, 1507, 411, 341, 13, 583, 286, 576, 411, 281, 362, 51756], "temperature": 0.0, "avg_logprob": -0.1688907221743935, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.005544536747038364}, {"id": 224, "seek": 171300, "start": 1713.0, "end": 1718.12, "text": " more feedback from from users to really know what's really sensible and useful.", "tokens": [50364, 544, 5824, 490, 490, 5022, 281, 534, 458, 437, 311, 534, 25380, 293, 4420, 13, 50620], "temperature": 0.0, "avg_logprob": -0.14325630918462226, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0027950808871537447}, {"id": 225, "seek": 171300, "start": 1720.36, "end": 1725.64, "text": " Thanks. That's a great point. So we have three seconds left. Thank you so much.", "tokens": [50732, 2561, 13, 663, 311, 257, 869, 935, 13, 407, 321, 362, 1045, 3949, 1411, 13, 1044, 291, 370, 709, 13, 50996], "temperature": 0.0, "avg_logprob": -0.14325630918462226, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0027950808871537447}, {"id": 226, "seek": 171300, "start": 1725.64, "end": 1730.6, "text": " Thank you. Thank you, all of you. All right, I think we're off the live stream. That was", "tokens": [50996, 1044, 291, 13, 1044, 291, 11, 439, 295, 291, 13, 1057, 558, 11, 286, 519, 321, 434, 766, 264, 1621, 4309, 13, 663, 390, 51244], "temperature": 0.0, "avg_logprob": -0.14325630918462226, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0027950808871537447}, {"id": 227, "seek": 171300, "start": 1731.4, "end": 1737.32, "text": " I'm so going to be going back and like setting my own purpose up with a web server. Thank you so much.", "tokens": [51284, 286, 478, 370, 516, 281, 312, 516, 646, 293, 411, 3287, 452, 1065, 4334, 493, 365, 257, 3670, 7154, 13, 1044, 291, 370, 709, 13, 51580], "temperature": 0.0, "avg_logprob": -0.14325630918462226, "compression_ratio": 1.6714285714285715, "no_speech_prob": 0.0027950808871537447}, {"id": 228, "seek": 173732, "start": 1737.32, "end": 1742.04, "text": " Yeah, thank you. Thank you. Okay, I'm going to hop to the next talk.", "tokens": [50368, 865, 11, 1309, 291, 13, 1044, 291, 13, 1033, 11, 286, 478, 516, 281, 3818, 281, 264, 958, 751, 13, 50600], "temperature": 0.0, "avg_logprob": -0.31452417373657227, "compression_ratio": 1.0461538461538462, "no_speech_prob": 0.013171529397368431}], "language": "en"}