In this talk, James Hamilton discusses the process of shrinking apps and the challenges associated with shrinking Kotlin code. He explains that shrinking involves removing unused code, optimizing bytecode, and obfuscating names. He focuses on the differences between Java and Kotlin classes, specifically the need for metadata in Kotlin classes. James also introduces ProGuard Core, a tool for analyzing and modifying Kotlin metadata, and demonstrates how it can be used to read and modify metadata. He emphasizes that metadata is crucial for certain functionalities like reflection and debugging and discusses how ProGuard handles renaming during the shrinking process. Overall, the talk provides insights into the process of shrinking apps and the considerations specific to Kotlin code.