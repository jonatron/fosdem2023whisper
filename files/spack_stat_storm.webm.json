{"text": " All right, it works, cool. So welcome all to this talk. My first time at FOSDAM, so I'm excited. I will be talking about taming the stat storm in SPAC. So what is the stat storm and why should it be tamed? This storm was coined, let's say, by the Geeks developers who happened to be also here. And it's for you to be affected by this problem, you have a need a few ingredients. One is a package manager that installs every package into its own prefix. NICs, for instance, Geeks or SPAC. You need a loader, like a dynamic loader or interpreter like Python, that has to locate dependencies at application startup. And you have to have a typical HPC file system that is slow and shared. And with all these ingredients, you get horrible startup times of applications. And that is what the stat storm is about. First, before we look into the problem more, a little bit about SPAC. I guess Todd will also introduce it. But SPAC is a flexible package manager, primarily targeted for HPC. One of the nice things or that attracted me to it was that you don't need root privileges to start using it. And it builds on top of your distro so it can also integrate with, like, MPI libraries that are already there. It supports installing multiple flavors of the same package. And I'm saying flavors because a version does not really describe a specific package. There are, like, tons of compile time toggles. Usually, you can swap dependencies in and out. And, well, a version does not uniquely describe a package. And it also comes with a very powerful dependency solver. And it is quite easy to contribute to it because the package recipes are written in Python. So, for example, below here is how you could write part of a recipe to specify, like, a conditional dependency on Python under, like, these particular conditions. And if you're used to, like, Appcat install or whatever, you can do that basically with SPAC2. You can say SPAC install FFTW. But you can also be more precise. That is unique about SPAC, I think. You can say SPAC install FFTW and set the variants to, like, compile time toggle to, like, precision. I want float and doubles. I want FFTW to be compiled with MPI. And the particular provider for MPI will be MPitch. And it should be not version 4, but limited to or constrained to version 3. So that is the input you give to SPAC. And then it goes for a think and it spits out a dependency graph with all the details filled in. So there's, like, the concretization process. It's called SPAC. That can then be installed. And every package, as I said, it will be installed into its own prefix. And the directory name of this prefix will contain a hash derived from the dependency graph. And that allows you to have multiple packages installed at the same time. So that makes SPAC a intentionally non-file system hierarchy standard compliant package manager. So there is no root level bin directory or a lib directory. Everything is in its own prefix. So it can look like this, for instance. But then the problem is that packages have to actually be located at runtime. And I guess the classical solution, I mean, it's not very unique to SPAC. The classical solution in HPC is to use, like, module files, for example. So you log into a system, you do module load, FFTW. And before you know it, you have dozens of kilobytes of environment variables set for binaries, typically like LDLibraryPath is filled with stuff. And for Python, PythonPath, et cetera. This is not necessarily great because, especially for SPAC, if you want to use SPAC executables and also system executables, if SPAC sets LDLibraryPath, then your system executables may change behavior. Or if you use, like, two different SPAC executables with conflicting dependencies, and you have this one global variable that might also lead to issues. So these environment variables are not the way to solve it. Let's focus just on ELF binaries or executables libraries on Linux. If you have an executable, like an ELF executable, in there you find a section that says what interpreters you use. That is the dynamic loader. That's at least one thing that is mentioned by absolute path. So that's what the kernel finds. The kernel starts the loader. The loader interprets the executable. It needs to find a bunch of libraries in the dynamic section. It recursively finds these libraries. So that's basically how the story goes. And then we want users to be able to run executables without all the magic variables, or the opaque variables. And the typical solution, which I think is shared among Nix, Geeks, SPAC, is to have a compiler wrapper that injects R-paths. And R-paths are basically binary local search paths so that you don't have to use global variables anymore. The exact behavior of the loader then kind of depends on what libc you use. So for instance, in glibc, the R-paths beat the library path during the search, which is also something that SPAC exploits. That's the way that SPAC actually can run executables on messy HPC systems that do set these variables for other things. On muscle libc, the search behavior is slightly different, but you don't see muscle that much in HPC anyways. However, there is a cost to R-path, and that is a runtime search. Normally for system executables, what happens is that if you start the executable, the loader will basically just loop over the things that it needs and look it up in a global cache, like the loader cache. And this is quick, and nobody complains about startup times, I guess. In SPAC, you have at least a double loop, and in glibc you even have maybe a triple loop. You loop over the need libraries, the search paths, the R-paths, and then there's hardware-related sub-directories of the R-paths where you can maybe find optimized libraries, which is actually kind of redundant in the SPAC world because we optimize every package for a specific target, so there is no need to look in sub-directories. Well, in any case, there is this triple loop where eventually there is some syscall. And generally, that is not a big deal because in general, how many dependencies do you really have? If you look at Git, maybe there are three packages involved, so there is not a whole lot of searching going on, but things get really wild if you look at, for instance, Emacs with GTK support. This is not the whole... It doesn't fit on the slide to show all the dependencies, and you can get like, I don't know, like 150 libraries with like about 700 DT-meeted entries in the binaries. Yeah, there is a lot of load, runtime overhead, or startup overhead. If you use strays, you can actually see what happens, and you get horrible things like about 5,000 syscalls, of which 4,000 are basically searching for a library in a path where it can't find it. So yeah, there is some overhead to it. And even, like I tried this on the production system, on a warm cache, there is like very noticeable overhead where a lot of time is spent in like system time, just to, I don't know, like print the version of Emacs, which should really just print immediately, of course. So with the dynamic loader in spec, you typically have an overhead that is shifting towards loading objects and not like relocation where the dynamic loader is usually known to be slow for. And then HPC is really a problem, because typically you don't start like one process, but you start like a whole series of processes among different nodes. So yeah, there is a good reason to try and improve this. So obvious solution would be to just switch to static linking, because there is no dynamic loader involved anymore. But generally, there is still use for shared libraries, I would say. For one, you can avoid all the symbol clashes, especially I feel like these huge graphs or dependency graphs, like with the Emacs example, the odds that you find like some symbol that's being used twice are quite high, and shared libraries have good ways to say like, this is my public interface and this is my private interface, and if you have clashes in the private interface, well, there is no problem. Also, LD preloading is still nice to have, I would say, like swapping out a malloc just to try, like will this improve my performance, for instance. So that would be gone with static linking, and there are some other issues, like, I don't know. Dynamic languages, if you have to interface with them, you kind of have to use shared libraries anyways. The geek solution that's already there for, I don't know, like over a year at least, is to patch GLEPSE, and basically they create a package local cache of libraries, so that you basically know like the library name maps to a particular path. It is made package local instead of global, which I think is quite elegant, but for SPAC it is not really usable because it requires GLEPSE. Muscle doesn't have a loader cache, for instance, and it also requires patching in GLEPSE, and we currently don't control GLEPSE. So it's for SPAC not really an option. Another solution would be to emulate a loader cache by simlinking. So in our prefix, we add like a bunch of simlinks from, these are the libraries that we probably need to the dependencies where they are, and then we can replace nrpass into one, and so there's like a single search path, which is also easy, which also works for muscle, and it's a more recommended way to, like according to the muscle made in this, to emulate this cache. But there are some technical issues, like you can still have relative R paths with origin semantics, and they become relative to a simlink, and not to the actual library in the prefix directory where they are, so it may not always work. Another solution, shrinkwrap. This is actually done a bit more recent, and it's currently a pull request to patch-elve from a NixOS project, and their idea is basically to replace all the, all the DT-needed entries with absolute paths of like the transitive closure. So if you run LOD, you're executable, you get a bunch of libraries out of that, and all of them go into the DT-needed entries, and by absolute path and dynamic loader will do no search, it will just directly open them. So it's interesting. It's built on top of patch-elve, which is also used like a lot in Nix. At the same time, patching L files that way is kind of tedious, and there are bugs every now and then, and there are some side effects I'll talk about in a bit. But before we look at the current spec solution, let's step back a bit. Like a typical user issue who is not very familiar with loader internals or whatever, they build their software on an HPC system, they submit their jobs, and it doesn't work, and like the loader cannot find particular libraries that were located during the build, but not at runtime, or they suddenly end up with the wrong Lipson and C++ or whatever. That is a bit of an issue with the discrepancy between like the linker and the loader, and the basic example is like this, you create a shared library, you create an executable, you link to the library, this is a libf, you run the executable, and oh no, it cannot find the thing. Obviously, we can understand why that happens, but at the same time it's a bit dumb, like you just linked it, why can't you not find it right now? In general, of course, we are probably going to install the library, and maybe it's in a slightly different location, so we cannot fix the path ahead of time, but if you think about back, all the dependencies, they are pretty much fixed in their location in a prefix, so they're not going to move anywhere, so if linking immediately binds the library path, that would be great. And one way to do that is if you think about what the linker does, it does a whole lot of things, but one of the things is it copies the shared object name of the library that you're linking to into the executable, a library that needs it. In the dynamic loader, it performs a search for that name, always except if there is like a forward slash, or like a directory separator in it, then it directly opens it. So what if you create a library with a shared object name that contains a forward slash? That is the trick, and actually the trick is also quite popular on macOS, just not very popular on Linux. So what you get is any linker that you would use would, if you, sorry, any linker that you would use would basically copy a path directly into a DC-needed entry. So that raises the question, can you just change shared object names? And generally, yes, you could. And they're mostly like a cache key anyways, it's not a very special field in a binary. There is some possibility to have like introspection with deal info in C. It is rarely ever used, so I've only really seen it in Java, where they check like what Tlpc version is used, for instance. But then, okay, in spec, we can say like, okay, leave that so name there then for that specific package. And that is basically, that leads us to the current trick that spec uses. So we have an opt-in setting in spec 0.19 that you can enable with this command. And basically what it does is, after something gets installed, we replace all the shared object names with the path where the library is located itself. And then what you get is not only better performance because there's no search anymore, but also more like stability or hardening because whatever you link to is also what you get at runtime. There's no discrepancy anymore between the linker and the loader. They will always use the same libraries. It also works outside of spec, so if there's like things installed with spec and people start linking against it, they will automatically always use the spec libraries without having to set environment variables or setting R paths themselves. It does not, in some cases, the trick happens a bit too late. Like if you, I don't know, build curl, curl links to lip curl, like intra package linking, then lip call shared object name has not been replaced yet. We do that past post install, so sometimes there may be some small issues. And last thing that I want to say about this is like, how do you replace shared object names? So currently we simply use patch elf. It is generally good, I would say, apart from the issue tracker, which has multiple dozens of problems reported, but it generally works. But there is one downside, namely that it, well, it increases the, or it reduces the, or it solves the stat storm problem. At the same time, it may, like, change the L files in non-trivial ways and create new load segments. So you end up with fewer stat goals, but more M-map goals, for instance. So if we can avoid patch elf, that would actually be nice. And then there is actually another trick that we are, well, it's under consideration, or it's an open pull request, to basically reserve some space in the dynamic section of the executables and libraries with a dummy R path. And then in Python with SPAC, we just move the shared object name into that placeholder space. And then we can basically update executables and libraries in place, and it doesn't require all the advanced patch elf logic. Okay, so with that solution, do we improve the startup time of e-mail, or like, do we improve the e-max time to printing the version? And the answer is pretty much yes. So the system time goes down quite a bit, so that's good. But we still don't have, we don't capture glipc, so this is what the LDD output looks like. It all absolutely passed, but not glipc. It still search for. And now we end up in a rather funny situation where basically everything that the dynamic loader opens or needs is found directly, except that it spends about 400 syscalls looking for glipc, and the loader itself is part of glipc, so it feels a bit dumb. But in muscle glipc, actually, that is not an issue at all because they're quite smart about it. The loader is actually also the glipc implementation, so they never locate glipc, and that's also a reason why muscle binaries may start actually a little bit faster than glipc binaries. But if we are now at the last issue, like if we make the paths of glipc absolute or preload them, then we actually finally reduce the startup time to something reasonable. And then the statstorm issue is solved, so there are actually zero statcalls, and the open-add calls are, well, significantly reduced. So basically, to answer the question, have we solved the statstorm spec mostly? It would be easier if we also control glipc, but we are not there yet. But at the same time, it is definitely possible, and, well, for sure, you get the second runtime for free, and if you push a little bit harder, we could still make the paths to glipc itself absolute, for instance, and then you get the proper performance. So here are some further links for, like, there's also the whole discussion, and Nick's going on, and their issue has been open since 2017, I think, where people reported this issue, like slow startup times, and lately there's quite some discussion for them going on, too. They also have the same issue. They not only want to support glipc, but also muscle, so it's interesting to read up on that, too. And I'll leave it by that. Thank you. Any questions for Harman? Hello. Hi. So I have a question. So how do you load the prefixes on your software packages? Do you use a module system like Elmot or something like that? So we have multiple ways to actually use the software. You can generate modules, yeah. There is also a way to, which I like a little bit more, is, like, you create an environment, you add all the packages in there that you need, and then you generate a view. That is actually like a more classical directory structure that you get out of that, where everything is merged. Because, for instance, in Elmot, with the modules, you can swap modules on the fly, so it can be used by the user. So I'm wondering if you're using these absolute paths, and then one of my users decided to do a module swap on the OpenMPI library, so something else. How is that handled with this system? So one thing that you lose is the ability, like, if you use absolute paths, one thing that you lose is the ability to use the library path, but you can do LD preload, and to be honest, I'm not sure why LD preload doesn't, well, it's not used that much, but LD preload has the advantage that you can very specifically talk, like, I want to use this library. Yeah, that's quite hard to say. Yeah, but it's also not very different from, like... It's prepended everywhere, so yeah. It's also not very different, in my opinion, from using a LD library path, but yeah. Thank you. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.32, "text": " All right, it works, cool.", "tokens": [50364, 1057, 558, 11, 309, 1985, 11, 1627, 13, 50880], "temperature": 0.0, "avg_logprob": -0.2714886872664742, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.13281729817390442}, {"id": 1, "seek": 0, "start": 10.32, "end": 12.4, "text": " So welcome all to this talk.", "tokens": [50880, 407, 2928, 439, 281, 341, 751, 13, 50984], "temperature": 0.0, "avg_logprob": -0.2714886872664742, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.13281729817390442}, {"id": 2, "seek": 0, "start": 12.4, "end": 15.44, "text": " My first time at FOSDAM, so I'm excited.", "tokens": [50984, 1222, 700, 565, 412, 479, 4367, 35, 2865, 11, 370, 286, 478, 2919, 13, 51136], "temperature": 0.0, "avg_logprob": -0.2714886872664742, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.13281729817390442}, {"id": 3, "seek": 0, "start": 15.44, "end": 20.2, "text": " I will be talking about taming the stat storm in SPAC.", "tokens": [51136, 286, 486, 312, 1417, 466, 256, 5184, 264, 2219, 7679, 294, 8420, 4378, 13, 51374], "temperature": 0.0, "avg_logprob": -0.2714886872664742, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.13281729817390442}, {"id": 4, "seek": 0, "start": 20.2, "end": 24.560000000000002, "text": " So what is the stat storm and why should it be tamed?", "tokens": [51374, 407, 437, 307, 264, 2219, 7679, 293, 983, 820, 309, 312, 256, 3475, 30, 51592], "temperature": 0.0, "avg_logprob": -0.2714886872664742, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.13281729817390442}, {"id": 5, "seek": 0, "start": 24.560000000000002, "end": 29.96, "text": " This storm was coined, let's say, by the Geeks developers who happened to be also here.", "tokens": [51592, 639, 7679, 390, 45222, 11, 718, 311, 584, 11, 538, 264, 2876, 24785, 8849, 567, 2011, 281, 312, 611, 510, 13, 51862], "temperature": 0.0, "avg_logprob": -0.2714886872664742, "compression_ratio": 1.4362745098039216, "no_speech_prob": 0.13281729817390442}, {"id": 6, "seek": 2996, "start": 30.92, "end": 37.56, "text": " And it's for you to be affected by this problem, you have a need a few ingredients.", "tokens": [50412, 400, 309, 311, 337, 291, 281, 312, 8028, 538, 341, 1154, 11, 291, 362, 257, 643, 257, 1326, 6952, 13, 50744], "temperature": 0.0, "avg_logprob": -0.317118184706744, "compression_ratio": 1.4744186046511627, "no_speech_prob": 0.00438787043094635}, {"id": 7, "seek": 2996, "start": 37.56, "end": 43.36, "text": " One is a package manager that installs every package into its own prefix.", "tokens": [50744, 1485, 307, 257, 7372, 6598, 300, 3625, 82, 633, 7372, 666, 1080, 1065, 46969, 13, 51034], "temperature": 0.0, "avg_logprob": -0.317118184706744, "compression_ratio": 1.4744186046511627, "no_speech_prob": 0.00438787043094635}, {"id": 8, "seek": 2996, "start": 43.36, "end": 46.96, "text": " NICs, for instance, Geeks or SPAC.", "tokens": [51034, 426, 2532, 82, 11, 337, 5197, 11, 2876, 24785, 420, 8420, 4378, 13, 51214], "temperature": 0.0, "avg_logprob": -0.317118184706744, "compression_ratio": 1.4744186046511627, "no_speech_prob": 0.00438787043094635}, {"id": 9, "seek": 2996, "start": 46.96, "end": 52.96, "text": " You need a loader, like a dynamic loader or interpreter like Python,", "tokens": [51214, 509, 643, 257, 3677, 260, 11, 411, 257, 8546, 3677, 260, 420, 34132, 411, 15329, 11, 51514], "temperature": 0.0, "avg_logprob": -0.317118184706744, "compression_ratio": 1.4744186046511627, "no_speech_prob": 0.00438787043094635}, {"id": 10, "seek": 2996, "start": 52.96, "end": 56.96, "text": " that has to locate dependencies at application startup.", "tokens": [51514, 300, 575, 281, 22370, 36606, 412, 3861, 18578, 13, 51714], "temperature": 0.0, "avg_logprob": -0.317118184706744, "compression_ratio": 1.4744186046511627, "no_speech_prob": 0.00438787043094635}, {"id": 11, "seek": 5696, "start": 56.96, "end": 61.96, "text": " And you have to have a typical HPC file system that is slow and shared.", "tokens": [50364, 400, 291, 362, 281, 362, 257, 7476, 12557, 34, 3991, 1185, 300, 307, 2964, 293, 5507, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13497668818423622, "compression_ratio": 1.5397489539748954, "no_speech_prob": 0.0017259890446439385}, {"id": 12, "seek": 5696, "start": 61.96, "end": 67.96000000000001, "text": " And with all these ingredients, you get horrible startup times of applications.", "tokens": [50614, 400, 365, 439, 613, 6952, 11, 291, 483, 9263, 18578, 1413, 295, 5821, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13497668818423622, "compression_ratio": 1.5397489539748954, "no_speech_prob": 0.0017259890446439385}, {"id": 13, "seek": 5696, "start": 67.96000000000001, "end": 69.96000000000001, "text": " And that is what the stat storm is about.", "tokens": [50914, 400, 300, 307, 437, 264, 2219, 7679, 307, 466, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13497668818423622, "compression_ratio": 1.5397489539748954, "no_speech_prob": 0.0017259890446439385}, {"id": 14, "seek": 5696, "start": 72.96000000000001, "end": 76.96000000000001, "text": " First, before we look into the problem more, a little bit about SPAC.", "tokens": [51164, 2386, 11, 949, 321, 574, 666, 264, 1154, 544, 11, 257, 707, 857, 466, 8420, 4378, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13497668818423622, "compression_ratio": 1.5397489539748954, "no_speech_prob": 0.0017259890446439385}, {"id": 15, "seek": 5696, "start": 76.96000000000001, "end": 79.96000000000001, "text": " I guess Todd will also introduce it.", "tokens": [51364, 286, 2041, 21488, 486, 611, 5366, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13497668818423622, "compression_ratio": 1.5397489539748954, "no_speech_prob": 0.0017259890446439385}, {"id": 16, "seek": 5696, "start": 79.96000000000001, "end": 85.96000000000001, "text": " But SPAC is a flexible package manager, primarily targeted for HPC.", "tokens": [51514, 583, 8420, 4378, 307, 257, 11358, 7372, 6598, 11, 10029, 15045, 337, 12557, 34, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13497668818423622, "compression_ratio": 1.5397489539748954, "no_speech_prob": 0.0017259890446439385}, {"id": 17, "seek": 8596, "start": 85.96, "end": 92.96, "text": " One of the nice things or that attracted me to it was that you don't need root privileges to start using it.", "tokens": [50364, 1485, 295, 264, 1481, 721, 420, 300, 15912, 385, 281, 309, 390, 300, 291, 500, 380, 643, 5593, 32588, 281, 722, 1228, 309, 13, 50714], "temperature": 0.0, "avg_logprob": -0.13010367681813795, "compression_ratio": 1.5982532751091703, "no_speech_prob": 0.0015963109908625484}, {"id": 18, "seek": 8596, "start": 92.96, "end": 99.96, "text": " And it builds on top of your distro so it can also integrate with, like, MPI libraries that are already there.", "tokens": [50714, 400, 309, 15182, 322, 1192, 295, 428, 1483, 340, 370, 309, 393, 611, 13365, 365, 11, 411, 11, 14146, 40, 15148, 300, 366, 1217, 456, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13010367681813795, "compression_ratio": 1.5982532751091703, "no_speech_prob": 0.0015963109908625484}, {"id": 19, "seek": 8596, "start": 99.96, "end": 104.96, "text": " It supports installing multiple flavors of the same package.", "tokens": [51064, 467, 9346, 20762, 3866, 16303, 295, 264, 912, 7372, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13010367681813795, "compression_ratio": 1.5982532751091703, "no_speech_prob": 0.0015963109908625484}, {"id": 20, "seek": 8596, "start": 104.96, "end": 109.96, "text": " And I'm saying flavors because a version does not really describe a specific package.", "tokens": [51314, 400, 286, 478, 1566, 16303, 570, 257, 3037, 775, 406, 534, 6786, 257, 2685, 7372, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13010367681813795, "compression_ratio": 1.5982532751091703, "no_speech_prob": 0.0015963109908625484}, {"id": 21, "seek": 10996, "start": 109.96, "end": 112.96, "text": " There are, like, tons of compile time toggles.", "tokens": [50364, 821, 366, 11, 411, 11, 9131, 295, 31413, 565, 26911, 904, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13015670280951958, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.025532053783535957}, {"id": 22, "seek": 10996, "start": 112.96, "end": 115.96, "text": " Usually, you can swap dependencies in and out.", "tokens": [50514, 11419, 11, 291, 393, 18135, 36606, 294, 293, 484, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13015670280951958, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.025532053783535957}, {"id": 23, "seek": 10996, "start": 115.96, "end": 122.96, "text": " And, well, a version does not uniquely describe a package.", "tokens": [50664, 400, 11, 731, 11, 257, 3037, 775, 406, 31474, 6786, 257, 7372, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13015670280951958, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.025532053783535957}, {"id": 24, "seek": 10996, "start": 122.96, "end": 126.96, "text": " And it also comes with a very powerful dependency solver.", "tokens": [51014, 400, 309, 611, 1487, 365, 257, 588, 4005, 33621, 1404, 331, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13015670280951958, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.025532053783535957}, {"id": 25, "seek": 10996, "start": 126.96, "end": 134.95999999999998, "text": " And it is quite easy to contribute to it because the package recipes are written in Python.", "tokens": [51214, 400, 309, 307, 1596, 1858, 281, 10586, 281, 309, 570, 264, 7372, 13035, 366, 3720, 294, 15329, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13015670280951958, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.025532053783535957}, {"id": 26, "seek": 13496, "start": 134.96, "end": 146.96, "text": " So, for example, below here is how you could write part of a recipe to specify, like, a conditional dependency on Python under, like, these particular conditions.", "tokens": [50364, 407, 11, 337, 1365, 11, 2507, 510, 307, 577, 291, 727, 2464, 644, 295, 257, 6782, 281, 16500, 11, 411, 11, 257, 27708, 33621, 322, 15329, 833, 11, 411, 11, 613, 1729, 4487, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10740000792223998, "compression_ratio": 1.5169491525423728, "no_speech_prob": 0.004745949525386095}, {"id": 27, "seek": 13496, "start": 146.96, "end": 155.96, "text": " And if you're used to, like, Appcat install or whatever, you can do that basically with SPAC2.", "tokens": [50964, 400, 498, 291, 434, 1143, 281, 11, 411, 11, 3132, 18035, 3625, 420, 2035, 11, 291, 393, 360, 300, 1936, 365, 8420, 4378, 17, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10740000792223998, "compression_ratio": 1.5169491525423728, "no_speech_prob": 0.004745949525386095}, {"id": 28, "seek": 13496, "start": 155.96, "end": 158.96, "text": " You can say SPAC install FFTW.", "tokens": [51414, 509, 393, 584, 8420, 4378, 3625, 479, 25469, 54, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10740000792223998, "compression_ratio": 1.5169491525423728, "no_speech_prob": 0.004745949525386095}, {"id": 29, "seek": 13496, "start": 158.96, "end": 160.96, "text": " But you can also be more precise.", "tokens": [51564, 583, 291, 393, 611, 312, 544, 13600, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10740000792223998, "compression_ratio": 1.5169491525423728, "no_speech_prob": 0.004745949525386095}, {"id": 30, "seek": 13496, "start": 160.96, "end": 162.96, "text": " That is unique about SPAC, I think.", "tokens": [51664, 663, 307, 3845, 466, 8420, 4378, 11, 286, 519, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10740000792223998, "compression_ratio": 1.5169491525423728, "no_speech_prob": 0.004745949525386095}, {"id": 31, "seek": 16296, "start": 162.96, "end": 171.96, "text": " You can say SPAC install FFTW and set the variants to, like, compile time toggle to, like, precision.", "tokens": [50364, 509, 393, 584, 8420, 4378, 3625, 479, 25469, 54, 293, 992, 264, 21669, 281, 11, 411, 11, 31413, 565, 31225, 281, 11, 411, 11, 18356, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10585928524241728, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.011664191260933876}, {"id": 32, "seek": 16296, "start": 171.96, "end": 173.96, "text": " I want float and doubles.", "tokens": [50814, 286, 528, 15706, 293, 31634, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10585928524241728, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.011664191260933876}, {"id": 33, "seek": 16296, "start": 173.96, "end": 176.96, "text": " I want FFTW to be compiled with MPI.", "tokens": [50914, 286, 528, 479, 25469, 54, 281, 312, 36548, 365, 14146, 40, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10585928524241728, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.011664191260933876}, {"id": 34, "seek": 16296, "start": 176.96, "end": 180.96, "text": " And the particular provider for MPI will be MPitch.", "tokens": [51064, 400, 264, 1729, 12398, 337, 14146, 40, 486, 312, 14146, 1549, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10585928524241728, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.011664191260933876}, {"id": 35, "seek": 16296, "start": 180.96, "end": 186.96, "text": " And it should be not version 4, but limited to or constrained to version 3.", "tokens": [51264, 400, 309, 820, 312, 406, 3037, 1017, 11, 457, 5567, 281, 420, 38901, 281, 3037, 805, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10585928524241728, "compression_ratio": 1.482233502538071, "no_speech_prob": 0.011664191260933876}, {"id": 36, "seek": 18696, "start": 186.96, "end": 188.96, "text": " So that is the input you give to SPAC.", "tokens": [50364, 407, 300, 307, 264, 4846, 291, 976, 281, 8420, 4378, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1013164958734622, "compression_ratio": 1.5025125628140703, "no_speech_prob": 0.0222028736025095}, {"id": 37, "seek": 18696, "start": 188.96, "end": 196.96, "text": " And then it goes for a think and it spits out a dependency graph with all the details filled in.", "tokens": [50464, 400, 550, 309, 1709, 337, 257, 519, 293, 309, 637, 1208, 484, 257, 33621, 4295, 365, 439, 264, 4365, 6412, 294, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1013164958734622, "compression_ratio": 1.5025125628140703, "no_speech_prob": 0.0222028736025095}, {"id": 38, "seek": 18696, "start": 196.96, "end": 199.96, "text": " So there's, like, the concretization process.", "tokens": [50864, 407, 456, 311, 11, 411, 11, 264, 39481, 2144, 1399, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1013164958734622, "compression_ratio": 1.5025125628140703, "no_speech_prob": 0.0222028736025095}, {"id": 39, "seek": 18696, "start": 199.96, "end": 202.96, "text": " It's called SPAC.", "tokens": [51014, 467, 311, 1219, 8420, 4378, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1013164958734622, "compression_ratio": 1.5025125628140703, "no_speech_prob": 0.0222028736025095}, {"id": 40, "seek": 18696, "start": 202.96, "end": 205.96, "text": " That can then be installed.", "tokens": [51164, 663, 393, 550, 312, 8899, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1013164958734622, "compression_ratio": 1.5025125628140703, "no_speech_prob": 0.0222028736025095}, {"id": 41, "seek": 18696, "start": 205.96, "end": 211.96, "text": " And every package, as I said, it will be installed into its own prefix.", "tokens": [51314, 400, 633, 7372, 11, 382, 286, 848, 11, 309, 486, 312, 8899, 666, 1080, 1065, 46969, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1013164958734622, "compression_ratio": 1.5025125628140703, "no_speech_prob": 0.0222028736025095}, {"id": 42, "seek": 21196, "start": 211.96, "end": 218.96, "text": " And the directory name of this prefix will contain a hash derived from the dependency graph.", "tokens": [50364, 400, 264, 21120, 1315, 295, 341, 46969, 486, 5304, 257, 22019, 18949, 490, 264, 33621, 4295, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08452820008800875, "compression_ratio": 1.6032388663967612, "no_speech_prob": 0.005902482196688652}, {"id": 43, "seek": 21196, "start": 218.96, "end": 222.96, "text": " And that allows you to have multiple packages installed at the same time.", "tokens": [50714, 400, 300, 4045, 291, 281, 362, 3866, 17401, 8899, 412, 264, 912, 565, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08452820008800875, "compression_ratio": 1.6032388663967612, "no_speech_prob": 0.005902482196688652}, {"id": 44, "seek": 21196, "start": 222.96, "end": 230.96, "text": " So that makes SPAC a intentionally non-file system hierarchy standard compliant package manager.", "tokens": [50914, 407, 300, 1669, 8420, 4378, 257, 22062, 2107, 12, 69, 794, 1185, 22333, 3832, 36248, 7372, 6598, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08452820008800875, "compression_ratio": 1.6032388663967612, "no_speech_prob": 0.005902482196688652}, {"id": 45, "seek": 21196, "start": 230.96, "end": 234.96, "text": " So there is no root level bin directory or a lib directory.", "tokens": [51314, 407, 456, 307, 572, 5593, 1496, 5171, 21120, 420, 257, 22854, 21120, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08452820008800875, "compression_ratio": 1.6032388663967612, "no_speech_prob": 0.005902482196688652}, {"id": 46, "seek": 21196, "start": 234.96, "end": 236.96, "text": " Everything is in its own prefix.", "tokens": [51514, 5471, 307, 294, 1080, 1065, 46969, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08452820008800875, "compression_ratio": 1.6032388663967612, "no_speech_prob": 0.005902482196688652}, {"id": 47, "seek": 21196, "start": 236.96, "end": 240.96, "text": " So it can look like this, for instance.", "tokens": [51614, 407, 309, 393, 574, 411, 341, 11, 337, 5197, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08452820008800875, "compression_ratio": 1.6032388663967612, "no_speech_prob": 0.005902482196688652}, {"id": 48, "seek": 24096, "start": 241.96, "end": 248.96, "text": " But then the problem is that packages have to actually be located at runtime.", "tokens": [50414, 583, 550, 264, 1154, 307, 300, 17401, 362, 281, 767, 312, 6870, 412, 34474, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10277357195863629, "compression_ratio": 1.5413223140495869, "no_speech_prob": 0.0016465767985209823}, {"id": 49, "seek": 24096, "start": 248.96, "end": 252.96, "text": " And I guess the classical solution, I mean, it's not very unique to SPAC.", "tokens": [50764, 400, 286, 2041, 264, 13735, 3827, 11, 286, 914, 11, 309, 311, 406, 588, 3845, 281, 8420, 4378, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10277357195863629, "compression_ratio": 1.5413223140495869, "no_speech_prob": 0.0016465767985209823}, {"id": 50, "seek": 24096, "start": 252.96, "end": 256.96000000000004, "text": " The classical solution in HPC is to use, like, module files, for example.", "tokens": [50964, 440, 13735, 3827, 294, 12557, 34, 307, 281, 764, 11, 411, 11, 10088, 7098, 11, 337, 1365, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10277357195863629, "compression_ratio": 1.5413223140495869, "no_speech_prob": 0.0016465767985209823}, {"id": 51, "seek": 24096, "start": 256.96000000000004, "end": 260.96000000000004, "text": " So you log into a system, you do module load, FFTW.", "tokens": [51164, 407, 291, 3565, 666, 257, 1185, 11, 291, 360, 10088, 3677, 11, 479, 25469, 54, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10277357195863629, "compression_ratio": 1.5413223140495869, "no_speech_prob": 0.0016465767985209823}, {"id": 52, "seek": 24096, "start": 260.96000000000004, "end": 267.96000000000004, "text": " And before you know it, you have dozens of kilobytes of environment variables set for binaries,", "tokens": [51364, 400, 949, 291, 458, 309, 11, 291, 362, 18431, 295, 5128, 996, 43673, 295, 2823, 9102, 992, 337, 5171, 4889, 11, 51714], "temperature": 0.0, "avg_logprob": -0.10277357195863629, "compression_ratio": 1.5413223140495869, "no_speech_prob": 0.0016465767985209823}, {"id": 53, "seek": 26796, "start": 267.96, "end": 271.96, "text": " typically like LDLibraryPath is filled with stuff.", "tokens": [50364, 5850, 411, 33936, 43, 6414, 822, 47, 998, 307, 6412, 365, 1507, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15406481041965714, "compression_ratio": 1.553191489361702, "no_speech_prob": 0.00590344425290823}, {"id": 54, "seek": 26796, "start": 271.96, "end": 275.96, "text": " And for Python, PythonPath, et cetera.", "tokens": [50564, 400, 337, 15329, 11, 15329, 47, 998, 11, 1030, 11458, 13, 50764], "temperature": 0.0, "avg_logprob": -0.15406481041965714, "compression_ratio": 1.553191489361702, "no_speech_prob": 0.00590344425290823}, {"id": 55, "seek": 26796, "start": 275.96, "end": 280.96, "text": " This is not necessarily great because, especially for SPAC,", "tokens": [50764, 639, 307, 406, 4725, 869, 570, 11, 2318, 337, 8420, 4378, 11, 51014], "temperature": 0.0, "avg_logprob": -0.15406481041965714, "compression_ratio": 1.553191489361702, "no_speech_prob": 0.00590344425290823}, {"id": 56, "seek": 26796, "start": 280.96, "end": 284.96, "text": " if you want to use SPAC executables and also system executables,", "tokens": [51014, 498, 291, 528, 281, 764, 8420, 4378, 7568, 2965, 293, 611, 1185, 7568, 2965, 11, 51214], "temperature": 0.0, "avg_logprob": -0.15406481041965714, "compression_ratio": 1.553191489361702, "no_speech_prob": 0.00590344425290823}, {"id": 57, "seek": 26796, "start": 284.96, "end": 291.96, "text": " if SPAC sets LDLibraryPath, then your system executables may change behavior.", "tokens": [51214, 498, 8420, 4378, 6352, 33936, 43, 6414, 822, 47, 998, 11, 550, 428, 1185, 7568, 2965, 815, 1319, 5223, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15406481041965714, "compression_ratio": 1.553191489361702, "no_speech_prob": 0.00590344425290823}, {"id": 58, "seek": 29196, "start": 291.96, "end": 297.96, "text": " Or if you use, like, two different SPAC executables with conflicting dependencies,", "tokens": [50364, 1610, 498, 291, 764, 11, 411, 11, 732, 819, 8420, 4378, 7568, 2965, 365, 43784, 36606, 11, 50664], "temperature": 0.0, "avg_logprob": -0.10841075233791185, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.003993635531514883}, {"id": 59, "seek": 29196, "start": 297.96, "end": 302.96, "text": " and you have this one global variable that might also lead to issues.", "tokens": [50664, 293, 291, 362, 341, 472, 4338, 7006, 300, 1062, 611, 1477, 281, 2663, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10841075233791185, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.003993635531514883}, {"id": 60, "seek": 29196, "start": 302.96, "end": 309.96, "text": " So these environment variables are not the way to solve it.", "tokens": [50914, 407, 613, 2823, 9102, 366, 406, 264, 636, 281, 5039, 309, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10841075233791185, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.003993635531514883}, {"id": 61, "seek": 29196, "start": 309.96, "end": 316.96, "text": " Let's focus just on ELF binaries or executables libraries on Linux.", "tokens": [51264, 961, 311, 1879, 445, 322, 14426, 37, 5171, 4889, 420, 7568, 2965, 15148, 322, 18734, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10841075233791185, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.003993635531514883}, {"id": 62, "seek": 31696, "start": 316.96, "end": 324.96, "text": " If you have an executable, like an ELF executable,", "tokens": [50364, 759, 291, 362, 364, 7568, 712, 11, 411, 364, 14426, 37, 7568, 712, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11579944973900205, "compression_ratio": 1.7191011235955056, "no_speech_prob": 0.0046045416966080666}, {"id": 63, "seek": 31696, "start": 324.96, "end": 331.96, "text": " in there you find a section that says what interpreters you use.", "tokens": [50764, 294, 456, 291, 915, 257, 3541, 300, 1619, 437, 17489, 1559, 291, 764, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11579944973900205, "compression_ratio": 1.7191011235955056, "no_speech_prob": 0.0046045416966080666}, {"id": 64, "seek": 31696, "start": 331.96, "end": 335.96, "text": " That is the dynamic loader. That's at least one thing that is mentioned by absolute path.", "tokens": [51114, 663, 307, 264, 8546, 3677, 260, 13, 663, 311, 412, 1935, 472, 551, 300, 307, 2835, 538, 8236, 3100, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11579944973900205, "compression_ratio": 1.7191011235955056, "no_speech_prob": 0.0046045416966080666}, {"id": 65, "seek": 31696, "start": 335.96, "end": 339.96, "text": " So that's what the kernel finds. The kernel starts the loader.", "tokens": [51314, 407, 300, 311, 437, 264, 28256, 10704, 13, 440, 28256, 3719, 264, 3677, 260, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11579944973900205, "compression_ratio": 1.7191011235955056, "no_speech_prob": 0.0046045416966080666}, {"id": 66, "seek": 31696, "start": 339.96, "end": 342.96, "text": " The loader interprets the executable.", "tokens": [51514, 440, 3677, 260, 17489, 1373, 264, 7568, 712, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11579944973900205, "compression_ratio": 1.7191011235955056, "no_speech_prob": 0.0046045416966080666}, {"id": 67, "seek": 34296, "start": 342.96, "end": 347.96, "text": " It needs to find a bunch of libraries in the dynamic section.", "tokens": [50364, 467, 2203, 281, 915, 257, 3840, 295, 15148, 294, 264, 8546, 3541, 13, 50614], "temperature": 0.0, "avg_logprob": -0.15916815469431322, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.009245207533240318}, {"id": 68, "seek": 34296, "start": 347.96, "end": 351.96, "text": " It recursively finds these libraries.", "tokens": [50614, 467, 20560, 3413, 10704, 613, 15148, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15916815469431322, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.009245207533240318}, {"id": 69, "seek": 34296, "start": 351.96, "end": 355.96, "text": " So that's basically how the story goes.", "tokens": [50814, 407, 300, 311, 1936, 577, 264, 1657, 1709, 13, 51014], "temperature": 0.0, "avg_logprob": -0.15916815469431322, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.009245207533240318}, {"id": 70, "seek": 34296, "start": 355.96, "end": 360.96, "text": " And then we want users to be able to run executables without all the magic variables,", "tokens": [51014, 400, 550, 321, 528, 5022, 281, 312, 1075, 281, 1190, 7568, 2965, 1553, 439, 264, 5585, 9102, 11, 51264], "temperature": 0.0, "avg_logprob": -0.15916815469431322, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.009245207533240318}, {"id": 71, "seek": 34296, "start": 360.96, "end": 362.96, "text": " or the opaque variables.", "tokens": [51264, 420, 264, 42687, 9102, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15916815469431322, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.009245207533240318}, {"id": 72, "seek": 34296, "start": 362.96, "end": 366.96, "text": " And the typical solution, which I think is shared among Nix, Geeks, SPAC,", "tokens": [51364, 400, 264, 7476, 3827, 11, 597, 286, 519, 307, 5507, 3654, 426, 970, 11, 2876, 24785, 11, 8420, 4378, 11, 51564], "temperature": 0.0, "avg_logprob": -0.15916815469431322, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.009245207533240318}, {"id": 73, "seek": 36696, "start": 366.96, "end": 371.96, "text": " is to have a compiler wrapper that injects R-paths.", "tokens": [50364, 307, 281, 362, 257, 31958, 46906, 300, 10711, 82, 497, 12, 31852, 82, 13, 50614], "temperature": 0.0, "avg_logprob": -0.15446031211626413, "compression_ratio": 1.5745614035087718, "no_speech_prob": 0.023298479616642}, {"id": 74, "seek": 36696, "start": 371.96, "end": 376.96, "text": " And R-paths are basically binary local search paths", "tokens": [50614, 400, 497, 12, 31852, 82, 366, 1936, 17434, 2654, 3164, 14518, 50864], "temperature": 0.0, "avg_logprob": -0.15446031211626413, "compression_ratio": 1.5745614035087718, "no_speech_prob": 0.023298479616642}, {"id": 75, "seek": 36696, "start": 376.96, "end": 380.96, "text": " so that you don't have to use global variables anymore.", "tokens": [50864, 370, 300, 291, 500, 380, 362, 281, 764, 4338, 9102, 3602, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15446031211626413, "compression_ratio": 1.5745614035087718, "no_speech_prob": 0.023298479616642}, {"id": 76, "seek": 36696, "start": 380.96, "end": 385.96, "text": " The exact behavior of the loader then kind of depends on what libc you use.", "tokens": [51064, 440, 1900, 5223, 295, 264, 3677, 260, 550, 733, 295, 5946, 322, 437, 22854, 66, 291, 764, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15446031211626413, "compression_ratio": 1.5745614035087718, "no_speech_prob": 0.023298479616642}, {"id": 77, "seek": 36696, "start": 385.96, "end": 391.96, "text": " So for instance, in glibc, the R-paths beat the library path during the search,", "tokens": [51314, 407, 337, 5197, 11, 294, 1563, 897, 66, 11, 264, 497, 12, 31852, 82, 4224, 264, 6405, 3100, 1830, 264, 3164, 11, 51614], "temperature": 0.0, "avg_logprob": -0.15446031211626413, "compression_ratio": 1.5745614035087718, "no_speech_prob": 0.023298479616642}, {"id": 78, "seek": 36696, "start": 391.96, "end": 393.96, "text": " which is also something that SPAC exploits.", "tokens": [51614, 597, 307, 611, 746, 300, 8420, 4378, 12382, 1208, 13, 51714], "temperature": 0.0, "avg_logprob": -0.15446031211626413, "compression_ratio": 1.5745614035087718, "no_speech_prob": 0.023298479616642}, {"id": 79, "seek": 39396, "start": 393.96, "end": 398.96, "text": " That's the way that SPAC actually can run executables on messy HPC systems", "tokens": [50364, 663, 311, 264, 636, 300, 8420, 4378, 767, 393, 1190, 7568, 2965, 322, 16191, 12557, 34, 3652, 50614], "temperature": 0.0, "avg_logprob": -0.1071382236480713, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0026295974384993315}, {"id": 80, "seek": 39396, "start": 398.96, "end": 401.96, "text": " that do set these variables for other things.", "tokens": [50614, 300, 360, 992, 613, 9102, 337, 661, 721, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1071382236480713, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0026295974384993315}, {"id": 81, "seek": 39396, "start": 401.96, "end": 405.96, "text": " On muscle libc, the search behavior is slightly different,", "tokens": [50764, 1282, 8679, 22854, 66, 11, 264, 3164, 5223, 307, 4748, 819, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1071382236480713, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0026295974384993315}, {"id": 82, "seek": 39396, "start": 405.96, "end": 410.96, "text": " but you don't see muscle that much in HPC anyways.", "tokens": [50964, 457, 291, 500, 380, 536, 8679, 300, 709, 294, 12557, 34, 13448, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1071382236480713, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0026295974384993315}, {"id": 83, "seek": 39396, "start": 410.96, "end": 416.96, "text": " However, there is a cost to R-path, and that is a runtime search.", "tokens": [51214, 2908, 11, 456, 307, 257, 2063, 281, 497, 12, 31852, 11, 293, 300, 307, 257, 34474, 3164, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1071382236480713, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0026295974384993315}, {"id": 84, "seek": 39396, "start": 416.96, "end": 421.96, "text": " Normally for system executables, what happens is that if you start the executable,", "tokens": [51514, 17424, 337, 1185, 7568, 2965, 11, 437, 2314, 307, 300, 498, 291, 722, 264, 7568, 712, 11, 51764], "temperature": 0.0, "avg_logprob": -0.1071382236480713, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0026295974384993315}, {"id": 85, "seek": 42196, "start": 421.96, "end": 424.96, "text": " the loader will basically just loop over the things that it needs", "tokens": [50364, 264, 3677, 260, 486, 1936, 445, 6367, 670, 264, 721, 300, 309, 2203, 50514], "temperature": 0.0, "avg_logprob": -0.10347513198852538, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.0017795778112486005}, {"id": 86, "seek": 42196, "start": 424.96, "end": 430.96, "text": " and look it up in a global cache, like the loader cache.", "tokens": [50514, 293, 574, 309, 493, 294, 257, 4338, 19459, 11, 411, 264, 3677, 260, 19459, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10347513198852538, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.0017795778112486005}, {"id": 87, "seek": 42196, "start": 430.96, "end": 436.96, "text": " And this is quick, and nobody complains about startup times, I guess.", "tokens": [50814, 400, 341, 307, 1702, 11, 293, 5079, 1209, 2315, 466, 18578, 1413, 11, 286, 2041, 13, 51114], "temperature": 0.0, "avg_logprob": -0.10347513198852538, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.0017795778112486005}, {"id": 88, "seek": 42196, "start": 436.96, "end": 439.96, "text": " In SPAC, you have at least a double loop,", "tokens": [51114, 682, 8420, 4378, 11, 291, 362, 412, 1935, 257, 3834, 6367, 11, 51264], "temperature": 0.0, "avg_logprob": -0.10347513198852538, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.0017795778112486005}, {"id": 89, "seek": 42196, "start": 439.96, "end": 442.96, "text": " and in glibc you even have maybe a triple loop.", "tokens": [51264, 293, 294, 1563, 897, 66, 291, 754, 362, 1310, 257, 15508, 6367, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10347513198852538, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.0017795778112486005}, {"id": 90, "seek": 42196, "start": 442.96, "end": 446.96, "text": " You loop over the need libraries, the search paths, the R-paths,", "tokens": [51414, 509, 6367, 670, 264, 643, 15148, 11, 264, 3164, 14518, 11, 264, 497, 12, 31852, 82, 11, 51614], "temperature": 0.0, "avg_logprob": -0.10347513198852538, "compression_ratio": 1.5844748858447488, "no_speech_prob": 0.0017795778112486005}, {"id": 91, "seek": 44696, "start": 446.96, "end": 453.96, "text": " and then there's hardware-related sub-directories of the R-paths", "tokens": [50364, 293, 550, 456, 311, 8837, 12, 12004, 1422, 12, 18267, 1672, 530, 295, 264, 497, 12, 31852, 82, 50714], "temperature": 0.0, "avg_logprob": -0.12568502928081313, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.004749280866235495}, {"id": 92, "seek": 44696, "start": 453.96, "end": 456.96, "text": " where you can maybe find optimized libraries,", "tokens": [50714, 689, 291, 393, 1310, 915, 26941, 15148, 11, 50864], "temperature": 0.0, "avg_logprob": -0.12568502928081313, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.004749280866235495}, {"id": 93, "seek": 44696, "start": 456.96, "end": 458.96, "text": " which is actually kind of redundant in the SPAC world", "tokens": [50864, 597, 307, 767, 733, 295, 40997, 294, 264, 8420, 4378, 1002, 50964], "temperature": 0.0, "avg_logprob": -0.12568502928081313, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.004749280866235495}, {"id": 94, "seek": 44696, "start": 458.96, "end": 463.96, "text": " because we optimize every package for a specific target,", "tokens": [50964, 570, 321, 19719, 633, 7372, 337, 257, 2685, 3779, 11, 51214], "temperature": 0.0, "avg_logprob": -0.12568502928081313, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.004749280866235495}, {"id": 95, "seek": 44696, "start": 463.96, "end": 466.96, "text": " so there is no need to look in sub-directories.", "tokens": [51214, 370, 456, 307, 572, 643, 281, 574, 294, 1422, 12, 18267, 1672, 530, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12568502928081313, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.004749280866235495}, {"id": 96, "seek": 44696, "start": 466.96, "end": 475.96, "text": " Well, in any case, there is this triple loop where eventually there is some syscall.", "tokens": [51364, 1042, 11, 294, 604, 1389, 11, 456, 307, 341, 15508, 6367, 689, 4728, 456, 307, 512, 262, 749, 45459, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12568502928081313, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.004749280866235495}, {"id": 97, "seek": 47596, "start": 475.96, "end": 480.96, "text": " And generally, that is not a big deal because in general,", "tokens": [50364, 400, 5101, 11, 300, 307, 406, 257, 955, 2028, 570, 294, 2674, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 98, "seek": 47596, "start": 480.96, "end": 482.96, "text": " how many dependencies do you really have?", "tokens": [50614, 577, 867, 36606, 360, 291, 534, 362, 30, 50714], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 99, "seek": 47596, "start": 482.96, "end": 485.96, "text": " If you look at Git, maybe there are three packages involved,", "tokens": [50714, 759, 291, 574, 412, 16939, 11, 1310, 456, 366, 1045, 17401, 3288, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 100, "seek": 47596, "start": 485.96, "end": 488.96, "text": " so there is not a whole lot of searching going on,", "tokens": [50864, 370, 456, 307, 406, 257, 1379, 688, 295, 10808, 516, 322, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 101, "seek": 47596, "start": 488.96, "end": 497.96, "text": " but things get really wild if you look at, for instance, Emacs with GTK support.", "tokens": [51014, 457, 721, 483, 534, 4868, 498, 291, 574, 412, 11, 337, 5197, 11, 3968, 44937, 365, 17530, 42, 1406, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 102, "seek": 47596, "start": 497.96, "end": 499.96, "text": " This is not the whole...", "tokens": [51464, 639, 307, 406, 264, 1379, 485, 51564], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 103, "seek": 47596, "start": 499.96, "end": 502.96, "text": " It doesn't fit on the slide to show all the dependencies,", "tokens": [51564, 467, 1177, 380, 3318, 322, 264, 4137, 281, 855, 439, 264, 36606, 11, 51714], "temperature": 0.0, "avg_logprob": -0.1255843662979579, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.003321070224046707}, {"id": 104, "seek": 50296, "start": 502.96, "end": 506.96, "text": " and you can get like, I don't know, like 150 libraries", "tokens": [50364, 293, 291, 393, 483, 411, 11, 286, 500, 380, 458, 11, 411, 8451, 15148, 50564], "temperature": 0.0, "avg_logprob": -0.23852428491564764, "compression_ratio": 1.406060606060606, "no_speech_prob": 0.014680194668471813}, {"id": 105, "seek": 50296, "start": 506.96, "end": 513.96, "text": " with like about 700 DT-meeted entries in the binaries.", "tokens": [50564, 365, 411, 466, 15204, 413, 51, 12, 1398, 10993, 23041, 294, 264, 5171, 4889, 13, 50914], "temperature": 0.0, "avg_logprob": -0.23852428491564764, "compression_ratio": 1.406060606060606, "no_speech_prob": 0.014680194668471813}, {"id": 106, "seek": 50296, "start": 513.96, "end": 521.96, "text": " Yeah, there is a lot of load, runtime overhead, or startup overhead.", "tokens": [50914, 865, 11, 456, 307, 257, 688, 295, 3677, 11, 34474, 19922, 11, 420, 18578, 19922, 13, 51314], "temperature": 0.0, "avg_logprob": -0.23852428491564764, "compression_ratio": 1.406060606060606, "no_speech_prob": 0.014680194668471813}, {"id": 107, "seek": 50296, "start": 521.96, "end": 525.96, "text": " If you use strays, you can actually see what happens,", "tokens": [51314, 759, 291, 764, 262, 6903, 3772, 11, 291, 393, 767, 536, 437, 2314, 11, 51514], "temperature": 0.0, "avg_logprob": -0.23852428491564764, "compression_ratio": 1.406060606060606, "no_speech_prob": 0.014680194668471813}, {"id": 108, "seek": 52596, "start": 525.96, "end": 531.96, "text": " and you get horrible things like about 5,000 syscalls,", "tokens": [50364, 293, 291, 483, 9263, 721, 411, 466, 1025, 11, 1360, 262, 749, 66, 39655, 11, 50664], "temperature": 0.0, "avg_logprob": -0.13341179813247128, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.07354901731014252}, {"id": 109, "seek": 52596, "start": 531.96, "end": 536.96, "text": " of which 4,000 are basically searching for a library", "tokens": [50664, 295, 597, 1017, 11, 1360, 366, 1936, 10808, 337, 257, 6405, 50914], "temperature": 0.0, "avg_logprob": -0.13341179813247128, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.07354901731014252}, {"id": 110, "seek": 52596, "start": 536.96, "end": 540.96, "text": " in a path where it can't find it.", "tokens": [50914, 294, 257, 3100, 689, 309, 393, 380, 915, 309, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13341179813247128, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.07354901731014252}, {"id": 111, "seek": 52596, "start": 540.96, "end": 542.96, "text": " So yeah, there is some overhead to it.", "tokens": [51114, 407, 1338, 11, 456, 307, 512, 19922, 281, 309, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13341179813247128, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.07354901731014252}, {"id": 112, "seek": 52596, "start": 542.96, "end": 547.96, "text": " And even, like I tried this on the production system,", "tokens": [51214, 400, 754, 11, 411, 286, 3031, 341, 322, 264, 4265, 1185, 11, 51464], "temperature": 0.0, "avg_logprob": -0.13341179813247128, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.07354901731014252}, {"id": 113, "seek": 52596, "start": 547.96, "end": 550.96, "text": " on a warm cache, there is like very noticeable overhead", "tokens": [51464, 322, 257, 4561, 19459, 11, 456, 307, 411, 588, 26041, 19922, 51614], "temperature": 0.0, "avg_logprob": -0.13341179813247128, "compression_ratio": 1.5025906735751295, "no_speech_prob": 0.07354901731014252}, {"id": 114, "seek": 55096, "start": 550.96, "end": 556.96, "text": " where a lot of time is spent in like system time,", "tokens": [50364, 689, 257, 688, 295, 565, 307, 4418, 294, 411, 1185, 565, 11, 50664], "temperature": 0.0, "avg_logprob": -0.16974167142595564, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.005206785164773464}, {"id": 115, "seek": 55096, "start": 556.96, "end": 560.96, "text": " just to, I don't know, like print the version of Emacs,", "tokens": [50664, 445, 281, 11, 286, 500, 380, 458, 11, 411, 4482, 264, 3037, 295, 3968, 44937, 11, 50864], "temperature": 0.0, "avg_logprob": -0.16974167142595564, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.005206785164773464}, {"id": 116, "seek": 55096, "start": 560.96, "end": 567.96, "text": " which should really just print immediately, of course.", "tokens": [50864, 597, 820, 534, 445, 4482, 4258, 11, 295, 1164, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16974167142595564, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.005206785164773464}, {"id": 117, "seek": 55096, "start": 567.96, "end": 570.96, "text": " So with the dynamic loader in spec,", "tokens": [51214, 407, 365, 264, 8546, 3677, 260, 294, 1608, 11, 51364], "temperature": 0.0, "avg_logprob": -0.16974167142595564, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.005206785164773464}, {"id": 118, "seek": 55096, "start": 570.96, "end": 576.96, "text": " you typically have an overhead that is shifting towards loading objects", "tokens": [51364, 291, 5850, 362, 364, 19922, 300, 307, 17573, 3030, 15114, 6565, 51664], "temperature": 0.0, "avg_logprob": -0.16974167142595564, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.005206785164773464}, {"id": 119, "seek": 57696, "start": 576.96, "end": 581.96, "text": " and not like relocation where the dynamic loader is usually known to be slow for.", "tokens": [50364, 293, 406, 411, 26981, 399, 689, 264, 8546, 3677, 260, 307, 2673, 2570, 281, 312, 2964, 337, 13, 50614], "temperature": 0.0, "avg_logprob": -0.12304853863186306, "compression_ratio": 1.5589519650655022, "no_speech_prob": 0.0030732254963368177}, {"id": 120, "seek": 57696, "start": 581.96, "end": 583.96, "text": " And then HPC is really a problem,", "tokens": [50614, 400, 550, 12557, 34, 307, 534, 257, 1154, 11, 50714], "temperature": 0.0, "avg_logprob": -0.12304853863186306, "compression_ratio": 1.5589519650655022, "no_speech_prob": 0.0030732254963368177}, {"id": 121, "seek": 57696, "start": 583.96, "end": 586.96, "text": " because typically you don't start like one process,", "tokens": [50714, 570, 5850, 291, 500, 380, 722, 411, 472, 1399, 11, 50864], "temperature": 0.0, "avg_logprob": -0.12304853863186306, "compression_ratio": 1.5589519650655022, "no_speech_prob": 0.0030732254963368177}, {"id": 122, "seek": 57696, "start": 586.96, "end": 593.96, "text": " but you start like a whole series of processes among different nodes.", "tokens": [50864, 457, 291, 722, 411, 257, 1379, 2638, 295, 7555, 3654, 819, 13891, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12304853863186306, "compression_ratio": 1.5589519650655022, "no_speech_prob": 0.0030732254963368177}, {"id": 123, "seek": 57696, "start": 593.96, "end": 597.96, "text": " So yeah, there is a good reason to try and improve this.", "tokens": [51214, 407, 1338, 11, 456, 307, 257, 665, 1778, 281, 853, 293, 3470, 341, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12304853863186306, "compression_ratio": 1.5589519650655022, "no_speech_prob": 0.0030732254963368177}, {"id": 124, "seek": 57696, "start": 597.96, "end": 602.96, "text": " So obvious solution would be to just switch to static linking,", "tokens": [51414, 407, 6322, 3827, 576, 312, 281, 445, 3679, 281, 13437, 25775, 11, 51664], "temperature": 0.0, "avg_logprob": -0.12304853863186306, "compression_ratio": 1.5589519650655022, "no_speech_prob": 0.0030732254963368177}, {"id": 125, "seek": 60296, "start": 602.96, "end": 606.96, "text": " because there is no dynamic loader involved anymore.", "tokens": [50364, 570, 456, 307, 572, 8546, 3677, 260, 3288, 3602, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10893418068109556, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0011331604328006506}, {"id": 126, "seek": 60296, "start": 606.96, "end": 612.96, "text": " But generally, there is still use for shared libraries, I would say.", "tokens": [50564, 583, 5101, 11, 456, 307, 920, 764, 337, 5507, 15148, 11, 286, 576, 584, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10893418068109556, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0011331604328006506}, {"id": 127, "seek": 60296, "start": 612.96, "end": 615.96, "text": " For one, you can avoid all the symbol clashes,", "tokens": [50864, 1171, 472, 11, 291, 393, 5042, 439, 264, 5986, 596, 12808, 11, 51014], "temperature": 0.0, "avg_logprob": -0.10893418068109556, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0011331604328006506}, {"id": 128, "seek": 60296, "start": 615.96, "end": 621.96, "text": " especially I feel like these huge graphs or dependency graphs,", "tokens": [51014, 2318, 286, 841, 411, 613, 2603, 24877, 420, 33621, 24877, 11, 51314], "temperature": 0.0, "avg_logprob": -0.10893418068109556, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0011331604328006506}, {"id": 129, "seek": 60296, "start": 621.96, "end": 623.96, "text": " like with the Emacs example,", "tokens": [51314, 411, 365, 264, 3968, 44937, 1365, 11, 51414], "temperature": 0.0, "avg_logprob": -0.10893418068109556, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0011331604328006506}, {"id": 130, "seek": 60296, "start": 623.96, "end": 628.96, "text": " the odds that you find like some symbol that's being used twice are quite high,", "tokens": [51414, 264, 17439, 300, 291, 915, 411, 512, 5986, 300, 311, 885, 1143, 6091, 366, 1596, 1090, 11, 51664], "temperature": 0.0, "avg_logprob": -0.10893418068109556, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.0011331604328006506}, {"id": 131, "seek": 62896, "start": 628.96, "end": 631.96, "text": " and shared libraries have good ways to say like,", "tokens": [50364, 293, 5507, 15148, 362, 665, 2098, 281, 584, 411, 11, 50514], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 132, "seek": 62896, "start": 631.96, "end": 634.96, "text": " this is my public interface and this is my private interface,", "tokens": [50514, 341, 307, 452, 1908, 9226, 293, 341, 307, 452, 4551, 9226, 11, 50664], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 133, "seek": 62896, "start": 634.96, "end": 639.96, "text": " and if you have clashes in the private interface, well, there is no problem.", "tokens": [50664, 293, 498, 291, 362, 596, 12808, 294, 264, 4551, 9226, 11, 731, 11, 456, 307, 572, 1154, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 134, "seek": 62896, "start": 639.96, "end": 644.96, "text": " Also, LD preloading is still nice to have, I would say,", "tokens": [50914, 2743, 11, 33936, 659, 2907, 278, 307, 920, 1481, 281, 362, 11, 286, 576, 584, 11, 51164], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 135, "seek": 62896, "start": 644.96, "end": 647.96, "text": " like swapping out a malloc just to try,", "tokens": [51164, 411, 1693, 10534, 484, 257, 16026, 905, 445, 281, 853, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 136, "seek": 62896, "start": 647.96, "end": 653.96, "text": " like will this improve my performance, for instance.", "tokens": [51314, 411, 486, 341, 3470, 452, 3389, 11, 337, 5197, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 137, "seek": 62896, "start": 653.96, "end": 655.96, "text": " So that would be gone with static linking,", "tokens": [51614, 407, 300, 576, 312, 2780, 365, 13437, 25775, 11, 51714], "temperature": 0.0, "avg_logprob": -0.1374703014598173, "compression_ratio": 1.669603524229075, "no_speech_prob": 0.007335757836699486}, {"id": 138, "seek": 65596, "start": 655.96, "end": 658.96, "text": " and there are some other issues, like, I don't know.", "tokens": [50364, 293, 456, 366, 512, 661, 2663, 11, 411, 11, 286, 500, 380, 458, 13, 50514], "temperature": 0.0, "avg_logprob": -0.19054631436808725, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.005813430994749069}, {"id": 139, "seek": 65596, "start": 658.96, "end": 660.96, "text": " Dynamic languages, if you have to interface with them,", "tokens": [50514, 45440, 8650, 11, 498, 291, 362, 281, 9226, 365, 552, 11, 50614], "temperature": 0.0, "avg_logprob": -0.19054631436808725, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.005813430994749069}, {"id": 140, "seek": 65596, "start": 660.96, "end": 665.96, "text": " you kind of have to use shared libraries anyways.", "tokens": [50614, 291, 733, 295, 362, 281, 764, 5507, 15148, 13448, 13, 50864], "temperature": 0.0, "avg_logprob": -0.19054631436808725, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.005813430994749069}, {"id": 141, "seek": 65596, "start": 665.96, "end": 671.96, "text": " The geek solution that's already there for, I don't know, like over a year at least,", "tokens": [50864, 440, 36162, 3827, 300, 311, 1217, 456, 337, 11, 286, 500, 380, 458, 11, 411, 670, 257, 1064, 412, 1935, 11, 51164], "temperature": 0.0, "avg_logprob": -0.19054631436808725, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.005813430994749069}, {"id": 142, "seek": 65596, "start": 671.96, "end": 674.96, "text": " is to patch GLEPSE,", "tokens": [51164, 307, 281, 9972, 460, 2634, 47, 5879, 11, 51314], "temperature": 0.0, "avg_logprob": -0.19054631436808725, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.005813430994749069}, {"id": 143, "seek": 65596, "start": 674.96, "end": 680.96, "text": " and basically they create a package local cache of libraries,", "tokens": [51314, 293, 1936, 436, 1884, 257, 7372, 2654, 19459, 295, 15148, 11, 51614], "temperature": 0.0, "avg_logprob": -0.19054631436808725, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.005813430994749069}, {"id": 144, "seek": 68096, "start": 680.96, "end": 687.96, "text": " so that you basically know like the library name maps to a particular path.", "tokens": [50364, 370, 300, 291, 1936, 458, 411, 264, 6405, 1315, 11317, 281, 257, 1729, 3100, 13, 50714], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 145, "seek": 68096, "start": 687.96, "end": 690.96, "text": " It is made package local instead of global,", "tokens": [50714, 467, 307, 1027, 7372, 2654, 2602, 295, 4338, 11, 50864], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 146, "seek": 68096, "start": 690.96, "end": 692.96, "text": " which I think is quite elegant,", "tokens": [50864, 597, 286, 519, 307, 1596, 21117, 11, 50964], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 147, "seek": 68096, "start": 692.96, "end": 697.96, "text": " but for SPAC it is not really usable because it requires GLEPSE.", "tokens": [50964, 457, 337, 8420, 4378, 309, 307, 406, 534, 29975, 570, 309, 7029, 460, 2634, 47, 5879, 13, 51214], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 148, "seek": 68096, "start": 697.96, "end": 701.96, "text": " Muscle doesn't have a loader cache, for instance,", "tokens": [51214, 3569, 2160, 1177, 380, 362, 257, 3677, 260, 19459, 11, 337, 5197, 11, 51414], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 149, "seek": 68096, "start": 701.96, "end": 703.96, "text": " and it also requires patching in GLEPSE,", "tokens": [51414, 293, 309, 611, 7029, 9972, 278, 294, 460, 2634, 47, 5879, 11, 51514], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 150, "seek": 68096, "start": 703.96, "end": 707.96, "text": " and we currently don't control GLEPSE.", "tokens": [51514, 293, 321, 4362, 500, 380, 1969, 460, 2634, 47, 5879, 13, 51714], "temperature": 0.0, "avg_logprob": -0.113623685836792, "compression_ratio": 1.5043478260869565, "no_speech_prob": 0.007452473044395447}, {"id": 151, "seek": 70796, "start": 707.96, "end": 710.96, "text": " So it's for SPAC not really an option.", "tokens": [50364, 407, 309, 311, 337, 8420, 4378, 406, 534, 364, 3614, 13, 50514], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 152, "seek": 70796, "start": 710.96, "end": 717.96, "text": " Another solution would be to emulate a loader cache by simlinking.", "tokens": [50514, 3996, 3827, 576, 312, 281, 45497, 257, 3677, 260, 19459, 538, 1034, 75, 12408, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 153, "seek": 70796, "start": 717.96, "end": 722.96, "text": " So in our prefix, we add like a bunch of simlinks from,", "tokens": [50864, 407, 294, 527, 46969, 11, 321, 909, 411, 257, 3840, 295, 1034, 75, 16431, 490, 11, 51114], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 154, "seek": 70796, "start": 722.96, "end": 727.96, "text": " these are the libraries that we probably need to the dependencies where they are,", "tokens": [51114, 613, 366, 264, 15148, 300, 321, 1391, 643, 281, 264, 36606, 689, 436, 366, 11, 51364], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 155, "seek": 70796, "start": 727.96, "end": 730.96, "text": " and then we can replace nrpass into one,", "tokens": [51364, 293, 550, 321, 393, 7406, 297, 81, 9216, 666, 472, 11, 51514], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 156, "seek": 70796, "start": 730.96, "end": 732.96, "text": " and so there's like a single search path,", "tokens": [51514, 293, 370, 456, 311, 411, 257, 2167, 3164, 3100, 11, 51614], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 157, "seek": 70796, "start": 732.96, "end": 735.96, "text": " which is also easy, which also works for muscle,", "tokens": [51614, 597, 307, 611, 1858, 11, 597, 611, 1985, 337, 8679, 11, 51764], "temperature": 0.0, "avg_logprob": -0.14304959433419365, "compression_ratio": 1.5957446808510638, "no_speech_prob": 0.001079970272257924}, {"id": 158, "seek": 73596, "start": 735.96, "end": 738.96, "text": " and it's a more recommended way to, like according to the muscle made in this,", "tokens": [50364, 293, 309, 311, 257, 544, 9628, 636, 281, 11, 411, 4650, 281, 264, 8679, 1027, 294, 341, 11, 50514], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 159, "seek": 73596, "start": 738.96, "end": 741.96, "text": " to emulate this cache.", "tokens": [50514, 281, 45497, 341, 19459, 13, 50664], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 160, "seek": 73596, "start": 741.96, "end": 743.96, "text": " But there are some technical issues,", "tokens": [50664, 583, 456, 366, 512, 6191, 2663, 11, 50764], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 161, "seek": 73596, "start": 743.96, "end": 748.96, "text": " like you can still have relative R paths with origin semantics,", "tokens": [50764, 411, 291, 393, 920, 362, 4972, 497, 14518, 365, 4957, 4361, 45298, 11, 51014], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 162, "seek": 73596, "start": 748.96, "end": 751.96, "text": " and they become relative to a simlink,", "tokens": [51014, 293, 436, 1813, 4972, 281, 257, 1034, 22473, 11, 51164], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 163, "seek": 73596, "start": 751.96, "end": 756.96, "text": " and not to the actual library in the prefix directory where they are,", "tokens": [51164, 293, 406, 281, 264, 3539, 6405, 294, 264, 46969, 21120, 689, 436, 366, 11, 51414], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 164, "seek": 73596, "start": 756.96, "end": 759.96, "text": " so it may not always work.", "tokens": [51414, 370, 309, 815, 406, 1009, 589, 13, 51564], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 165, "seek": 73596, "start": 759.96, "end": 763.96, "text": " Another solution, shrinkwrap.", "tokens": [51564, 3996, 3827, 11, 23060, 86, 4007, 13, 51764], "temperature": 0.0, "avg_logprob": -0.19471384554493185, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0038207664620131254}, {"id": 166, "seek": 76396, "start": 763.96, "end": 767.96, "text": " This is actually done a bit more recent,", "tokens": [50364, 639, 307, 767, 1096, 257, 857, 544, 5162, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 167, "seek": 76396, "start": 767.96, "end": 774.96, "text": " and it's currently a pull request to patch-elve from a NixOS project,", "tokens": [50564, 293, 309, 311, 4362, 257, 2235, 5308, 281, 9972, 12, 338, 303, 490, 257, 426, 970, 4367, 1716, 11, 50914], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 168, "seek": 76396, "start": 774.96, "end": 778.96, "text": " and their idea is basically to replace all the,", "tokens": [50914, 293, 641, 1558, 307, 1936, 281, 7406, 439, 264, 11, 51114], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 169, "seek": 76396, "start": 778.96, "end": 783.96, "text": " all the DT-needed entries with absolute paths of like the transitive closure.", "tokens": [51114, 439, 264, 413, 51, 12, 716, 37679, 23041, 365, 8236, 14518, 295, 411, 264, 1145, 2187, 24653, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 170, "seek": 76396, "start": 783.96, "end": 786.96, "text": " So if you run LOD, you're executable,", "tokens": [51364, 407, 498, 291, 1190, 441, 14632, 11, 291, 434, 7568, 712, 11, 51514], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 171, "seek": 76396, "start": 786.96, "end": 788.96, "text": " you get a bunch of libraries out of that,", "tokens": [51514, 291, 483, 257, 3840, 295, 15148, 484, 295, 300, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 172, "seek": 76396, "start": 788.96, "end": 791.96, "text": " and all of them go into the DT-needed entries,", "tokens": [51614, 293, 439, 295, 552, 352, 666, 264, 413, 51, 12, 716, 37679, 23041, 11, 51764], "temperature": 0.0, "avg_logprob": -0.1677883642691153, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0014304317301139235}, {"id": 173, "seek": 79196, "start": 791.96, "end": 794.96, "text": " and by absolute path and dynamic loader will do no search,", "tokens": [50364, 293, 538, 8236, 3100, 293, 8546, 3677, 260, 486, 360, 572, 3164, 11, 50514], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 174, "seek": 79196, "start": 794.96, "end": 796.96, "text": " it will just directly open them.", "tokens": [50514, 309, 486, 445, 3838, 1269, 552, 13, 50614], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 175, "seek": 79196, "start": 796.96, "end": 798.96, "text": " So it's interesting.", "tokens": [50614, 407, 309, 311, 1880, 13, 50714], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 176, "seek": 79196, "start": 798.96, "end": 800.96, "text": " It's built on top of patch-elve,", "tokens": [50714, 467, 311, 3094, 322, 1192, 295, 9972, 12, 338, 303, 11, 50814], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 177, "seek": 79196, "start": 800.96, "end": 803.96, "text": " which is also used like a lot in Nix.", "tokens": [50814, 597, 307, 611, 1143, 411, 257, 688, 294, 426, 970, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 178, "seek": 79196, "start": 803.96, "end": 807.96, "text": " At the same time, patching L files that way is kind of tedious,", "tokens": [50964, 1711, 264, 912, 565, 11, 9972, 278, 441, 7098, 300, 636, 307, 733, 295, 38284, 11, 51164], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 179, "seek": 79196, "start": 807.96, "end": 810.96, "text": " and there are bugs every now and then,", "tokens": [51164, 293, 456, 366, 15120, 633, 586, 293, 550, 11, 51314], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 180, "seek": 79196, "start": 810.96, "end": 814.96, "text": " and there are some side effects I'll talk about in a bit.", "tokens": [51314, 293, 456, 366, 512, 1252, 5065, 286, 603, 751, 466, 294, 257, 857, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 181, "seek": 79196, "start": 814.96, "end": 818.96, "text": " But before we look at the current spec solution,", "tokens": [51514, 583, 949, 321, 574, 412, 264, 2190, 1608, 3827, 11, 51714], "temperature": 0.0, "avg_logprob": -0.12278163022008436, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.0005786929395981133}, {"id": 182, "seek": 81896, "start": 818.96, "end": 820.96, "text": " let's step back a bit.", "tokens": [50364, 718, 311, 1823, 646, 257, 857, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 183, "seek": 81896, "start": 820.96, "end": 823.96, "text": " Like a typical user issue", "tokens": [50464, 1743, 257, 7476, 4195, 2734, 50614], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 184, "seek": 81896, "start": 823.96, "end": 827.96, "text": " who is not very familiar with loader internals or whatever,", "tokens": [50614, 567, 307, 406, 588, 4963, 365, 3677, 260, 2154, 1124, 420, 2035, 11, 50814], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 185, "seek": 81896, "start": 827.96, "end": 831.96, "text": " they build their software on an HPC system,", "tokens": [50814, 436, 1322, 641, 4722, 322, 364, 12557, 34, 1185, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 186, "seek": 81896, "start": 831.96, "end": 834.96, "text": " they submit their jobs, and it doesn't work,", "tokens": [51014, 436, 10315, 641, 4782, 11, 293, 309, 1177, 380, 589, 11, 51164], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 187, "seek": 81896, "start": 834.96, "end": 837.96, "text": " and like the loader cannot find particular libraries", "tokens": [51164, 293, 411, 264, 3677, 260, 2644, 915, 1729, 15148, 51314], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 188, "seek": 81896, "start": 837.96, "end": 840.96, "text": " that were located during the build, but not at runtime,", "tokens": [51314, 300, 645, 6870, 1830, 264, 1322, 11, 457, 406, 412, 34474, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 189, "seek": 81896, "start": 840.96, "end": 845.96, "text": " or they suddenly end up with the wrong Lipson and C++ or whatever.", "tokens": [51464, 420, 436, 5800, 917, 493, 365, 264, 2085, 441, 2600, 266, 293, 383, 25472, 420, 2035, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1492459914263557, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.0014754418516531587}, {"id": 190, "seek": 84596, "start": 845.96, "end": 848.96, "text": " That is a bit of an issue with the discrepancy", "tokens": [50364, 663, 307, 257, 857, 295, 364, 2734, 365, 264, 2983, 265, 6040, 1344, 50514], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 191, "seek": 84596, "start": 848.96, "end": 851.96, "text": " between like the linker and the loader,", "tokens": [50514, 1296, 411, 264, 2113, 260, 293, 264, 3677, 260, 11, 50664], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 192, "seek": 84596, "start": 851.96, "end": 854.96, "text": " and the basic example is like this,", "tokens": [50664, 293, 264, 3875, 1365, 307, 411, 341, 11, 50814], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 193, "seek": 84596, "start": 854.96, "end": 857.96, "text": " you create a shared library, you create an executable,", "tokens": [50814, 291, 1884, 257, 5507, 6405, 11, 291, 1884, 364, 7568, 712, 11, 50964], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 194, "seek": 84596, "start": 857.96, "end": 859.96, "text": " you link to the library,", "tokens": [50964, 291, 2113, 281, 264, 6405, 11, 51064], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 195, "seek": 84596, "start": 859.96, "end": 863.96, "text": " this is a libf, you run the executable,", "tokens": [51064, 341, 307, 257, 22854, 69, 11, 291, 1190, 264, 7568, 712, 11, 51264], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 196, "seek": 84596, "start": 863.96, "end": 865.96, "text": " and oh no, it cannot find the thing.", "tokens": [51264, 293, 1954, 572, 11, 309, 2644, 915, 264, 551, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 197, "seek": 84596, "start": 865.96, "end": 868.96, "text": " Obviously, we can understand why that happens,", "tokens": [51364, 7580, 11, 321, 393, 1223, 983, 300, 2314, 11, 51514], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 198, "seek": 84596, "start": 868.96, "end": 870.96, "text": " but at the same time it's a bit dumb,", "tokens": [51514, 457, 412, 264, 912, 565, 309, 311, 257, 857, 10316, 11, 51614], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 199, "seek": 84596, "start": 870.96, "end": 874.96, "text": " like you just linked it, why can't you not find it right now?", "tokens": [51614, 411, 291, 445, 9408, 309, 11, 983, 393, 380, 291, 406, 915, 309, 558, 586, 30, 51814], "temperature": 0.0, "avg_logprob": -0.12429651363875514, "compression_ratio": 1.775, "no_speech_prob": 0.0012429907219484448}, {"id": 200, "seek": 87496, "start": 874.96, "end": 878.96, "text": " In general, of course, we are probably going to install the library,", "tokens": [50364, 682, 2674, 11, 295, 1164, 11, 321, 366, 1391, 516, 281, 3625, 264, 6405, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 201, "seek": 87496, "start": 878.96, "end": 880.96, "text": " and maybe it's in a slightly different location,", "tokens": [50564, 293, 1310, 309, 311, 294, 257, 4748, 819, 4914, 11, 50664], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 202, "seek": 87496, "start": 880.96, "end": 884.96, "text": " so we cannot fix the path ahead of time,", "tokens": [50664, 370, 321, 2644, 3191, 264, 3100, 2286, 295, 565, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 203, "seek": 87496, "start": 884.96, "end": 886.96, "text": " but if you think about back,", "tokens": [50864, 457, 498, 291, 519, 466, 646, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 204, "seek": 87496, "start": 886.96, "end": 889.96, "text": " all the dependencies, they are pretty much fixed", "tokens": [50964, 439, 264, 36606, 11, 436, 366, 1238, 709, 6806, 51114], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 205, "seek": 87496, "start": 889.96, "end": 891.96, "text": " in their location in a prefix,", "tokens": [51114, 294, 641, 4914, 294, 257, 46969, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 206, "seek": 87496, "start": 891.96, "end": 893.96, "text": " so they're not going to move anywhere,", "tokens": [51214, 370, 436, 434, 406, 516, 281, 1286, 4992, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 207, "seek": 87496, "start": 893.96, "end": 901.96, "text": " so if linking immediately binds the library path,", "tokens": [51314, 370, 498, 25775, 4258, 41515, 264, 6405, 3100, 11, 51714], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 208, "seek": 87496, "start": 901.96, "end": 903.96, "text": " that would be great.", "tokens": [51714, 300, 576, 312, 869, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1126317316942876, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.0006256146589294076}, {"id": 209, "seek": 90396, "start": 903.96, "end": 908.96, "text": " And one way to do that is if you think about what the linker does,", "tokens": [50364, 400, 472, 636, 281, 360, 300, 307, 498, 291, 519, 466, 437, 264, 2113, 260, 775, 11, 50614], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 210, "seek": 90396, "start": 908.96, "end": 910.96, "text": " it does a whole lot of things,", "tokens": [50614, 309, 775, 257, 1379, 688, 295, 721, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 211, "seek": 90396, "start": 910.96, "end": 913.96, "text": " but one of the things is it copies the shared object name", "tokens": [50714, 457, 472, 295, 264, 721, 307, 309, 14341, 264, 5507, 2657, 1315, 50864], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 212, "seek": 90396, "start": 913.96, "end": 915.96, "text": " of the library that you're linking to", "tokens": [50864, 295, 264, 6405, 300, 291, 434, 25775, 281, 50964], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 213, "seek": 90396, "start": 915.96, "end": 918.96, "text": " into the executable, a library that needs it.", "tokens": [50964, 666, 264, 7568, 712, 11, 257, 6405, 300, 2203, 309, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 214, "seek": 90396, "start": 918.96, "end": 923.96, "text": " In the dynamic loader, it performs a search for that name,", "tokens": [51114, 682, 264, 8546, 3677, 260, 11, 309, 26213, 257, 3164, 337, 300, 1315, 11, 51364], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 215, "seek": 90396, "start": 923.96, "end": 925.96, "text": " always except if there is like a forward slash,", "tokens": [51364, 1009, 3993, 498, 456, 307, 411, 257, 2128, 17330, 11, 51464], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 216, "seek": 90396, "start": 925.96, "end": 928.96, "text": " or like a directory separator in it,", "tokens": [51464, 420, 411, 257, 21120, 3128, 1639, 294, 309, 11, 51614], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 217, "seek": 90396, "start": 928.96, "end": 930.96, "text": " then it directly opens it.", "tokens": [51614, 550, 309, 3838, 9870, 309, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09038681361986244, "compression_ratio": 1.729957805907173, "no_speech_prob": 0.0010808655060827732}, {"id": 218, "seek": 93096, "start": 930.96, "end": 933.96, "text": " So what if you create a library", "tokens": [50364, 407, 437, 498, 291, 1884, 257, 6405, 50514], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 219, "seek": 93096, "start": 933.96, "end": 936.96, "text": " with a shared object name that contains a forward slash?", "tokens": [50514, 365, 257, 5507, 2657, 1315, 300, 8306, 257, 2128, 17330, 30, 50664], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 220, "seek": 93096, "start": 936.96, "end": 938.96, "text": " That is the trick,", "tokens": [50664, 663, 307, 264, 4282, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 221, "seek": 93096, "start": 938.96, "end": 942.96, "text": " and actually the trick is also quite popular on macOS,", "tokens": [50764, 293, 767, 264, 4282, 307, 611, 1596, 3743, 322, 7912, 4367, 11, 50964], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 222, "seek": 93096, "start": 942.96, "end": 945.96, "text": " just not very popular on Linux.", "tokens": [50964, 445, 406, 588, 3743, 322, 18734, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 223, "seek": 93096, "start": 945.96, "end": 951.96, "text": " So what you get is any linker that you would use would,", "tokens": [51114, 407, 437, 291, 483, 307, 604, 2113, 260, 300, 291, 576, 764, 576, 11, 51414], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 224, "seek": 93096, "start": 951.96, "end": 956.96, "text": " if you, sorry, any linker that you would use", "tokens": [51414, 498, 291, 11, 2597, 11, 604, 2113, 260, 300, 291, 576, 764, 51664], "temperature": 0.0, "avg_logprob": -0.11349873315720331, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.0002340734499739483}, {"id": 225, "seek": 95696, "start": 956.96, "end": 963.96, "text": " would basically copy a path directly into a DC-needed entry.", "tokens": [50364, 576, 1936, 5055, 257, 3100, 3838, 666, 257, 9114, 12, 716, 37679, 8729, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 226, "seek": 95696, "start": 963.96, "end": 965.96, "text": " So that raises the question,", "tokens": [50714, 407, 300, 19658, 264, 1168, 11, 50814], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 227, "seek": 95696, "start": 965.96, "end": 968.96, "text": " can you just change shared object names?", "tokens": [50814, 393, 291, 445, 1319, 5507, 2657, 5288, 30, 50964], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 228, "seek": 95696, "start": 968.96, "end": 972.96, "text": " And generally, yes, you could.", "tokens": [50964, 400, 5101, 11, 2086, 11, 291, 727, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 229, "seek": 95696, "start": 972.96, "end": 974.96, "text": " And they're mostly like a cache key anyways,", "tokens": [51164, 400, 436, 434, 5240, 411, 257, 19459, 2141, 13448, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 230, "seek": 95696, "start": 974.96, "end": 977.96, "text": " it's not a very special field in a binary.", "tokens": [51264, 309, 311, 406, 257, 588, 2121, 2519, 294, 257, 17434, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 231, "seek": 95696, "start": 977.96, "end": 981.96, "text": " There is some possibility to have like introspection", "tokens": [51414, 821, 307, 512, 7959, 281, 362, 411, 560, 2635, 19997, 51614], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 232, "seek": 95696, "start": 981.96, "end": 984.96, "text": " with deal info in C.", "tokens": [51614, 365, 2028, 13614, 294, 383, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1572944096156529, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.0027986534405499697}, {"id": 233, "seek": 98496, "start": 984.96, "end": 987.96, "text": " It is rarely ever used,", "tokens": [50364, 467, 307, 13752, 1562, 1143, 11, 50514], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 234, "seek": 98496, "start": 987.96, "end": 989.96, "text": " so I've only really seen it in Java,", "tokens": [50514, 370, 286, 600, 787, 534, 1612, 309, 294, 10745, 11, 50614], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 235, "seek": 98496, "start": 989.96, "end": 994.96, "text": " where they check like what Tlpc version is used, for instance.", "tokens": [50614, 689, 436, 1520, 411, 437, 314, 75, 79, 66, 3037, 307, 1143, 11, 337, 5197, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 236, "seek": 98496, "start": 994.96, "end": 997.96, "text": " But then, okay, in spec, we can say like,", "tokens": [50864, 583, 550, 11, 1392, 11, 294, 1608, 11, 321, 393, 584, 411, 11, 51014], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 237, "seek": 98496, "start": 997.96, "end": 1002.96, "text": " okay, leave that so name there then for that specific package.", "tokens": [51014, 1392, 11, 1856, 300, 370, 1315, 456, 550, 337, 300, 2685, 7372, 13, 51264], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 238, "seek": 98496, "start": 1002.96, "end": 1004.96, "text": " And that is basically,", "tokens": [51264, 400, 300, 307, 1936, 11, 51364], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 239, "seek": 98496, "start": 1004.96, "end": 1009.96, "text": " that leads us to the current trick that spec uses.", "tokens": [51364, 300, 6689, 505, 281, 264, 2190, 4282, 300, 1608, 4960, 13, 51614], "temperature": 0.0, "avg_logprob": -0.18721722496880425, "compression_ratio": 1.5729166666666667, "no_speech_prob": 0.0012059272266924381}, {"id": 240, "seek": 100996, "start": 1009.96, "end": 1014.96, "text": " So we have an opt-in setting in spec 0.19", "tokens": [50364, 407, 321, 362, 364, 2427, 12, 259, 3287, 294, 1608, 1958, 13, 3405, 50614], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 241, "seek": 100996, "start": 1014.96, "end": 1017.96, "text": " that you can enable with this command.", "tokens": [50614, 300, 291, 393, 9528, 365, 341, 5622, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 242, "seek": 100996, "start": 1017.96, "end": 1021.96, "text": " And basically what it does is,", "tokens": [50764, 400, 1936, 437, 309, 775, 307, 11, 50964], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 243, "seek": 100996, "start": 1021.96, "end": 1023.96, "text": " after something gets installed,", "tokens": [50964, 934, 746, 2170, 8899, 11, 51064], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 244, "seek": 100996, "start": 1023.96, "end": 1027.96, "text": " we replace all the shared object names with the path", "tokens": [51064, 321, 7406, 439, 264, 5507, 2657, 5288, 365, 264, 3100, 51264], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 245, "seek": 100996, "start": 1027.96, "end": 1030.96, "text": " where the library is located itself.", "tokens": [51264, 689, 264, 6405, 307, 6870, 2564, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 246, "seek": 100996, "start": 1030.96, "end": 1033.96, "text": " And then what you get is not only better performance", "tokens": [51414, 400, 550, 437, 291, 483, 307, 406, 787, 1101, 3389, 51564], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 247, "seek": 100996, "start": 1033.96, "end": 1035.96, "text": " because there's no search anymore,", "tokens": [51564, 570, 456, 311, 572, 3164, 3602, 11, 51664], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 248, "seek": 100996, "start": 1035.96, "end": 1038.96, "text": " but also more like stability or hardening", "tokens": [51664, 457, 611, 544, 411, 11826, 420, 1152, 4559, 51814], "temperature": 0.0, "avg_logprob": -0.08677030864514802, "compression_ratio": 1.5316455696202531, "no_speech_prob": 0.0004372280091047287}, {"id": 249, "seek": 103896, "start": 1038.96, "end": 1041.96, "text": " because whatever you link to is also what you get at runtime.", "tokens": [50364, 570, 2035, 291, 2113, 281, 307, 611, 437, 291, 483, 412, 34474, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 250, "seek": 103896, "start": 1041.96, "end": 1045.96, "text": " There's no discrepancy anymore between the linker and the loader.", "tokens": [50514, 821, 311, 572, 2983, 265, 6040, 1344, 3602, 1296, 264, 2113, 260, 293, 264, 3677, 260, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 251, "seek": 103896, "start": 1045.96, "end": 1048.96, "text": " They will always use the same libraries.", "tokens": [50714, 814, 486, 1009, 764, 264, 912, 15148, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 252, "seek": 103896, "start": 1048.96, "end": 1050.96, "text": " It also works outside of spec,", "tokens": [50864, 467, 611, 1985, 2380, 295, 1608, 11, 50964], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 253, "seek": 103896, "start": 1050.96, "end": 1052.96, "text": " so if there's like things installed with spec", "tokens": [50964, 370, 498, 456, 311, 411, 721, 8899, 365, 1608, 51064], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 254, "seek": 103896, "start": 1052.96, "end": 1054.96, "text": " and people start linking against it,", "tokens": [51064, 293, 561, 722, 25775, 1970, 309, 11, 51164], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 255, "seek": 103896, "start": 1054.96, "end": 1058.96, "text": " they will automatically always use the spec libraries", "tokens": [51164, 436, 486, 6772, 1009, 764, 264, 1608, 15148, 51364], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 256, "seek": 103896, "start": 1058.96, "end": 1060.96, "text": " without having to set environment variables", "tokens": [51364, 1553, 1419, 281, 992, 2823, 9102, 51464], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 257, "seek": 103896, "start": 1060.96, "end": 1064.96, "text": " or setting R paths themselves.", "tokens": [51464, 420, 3287, 497, 14518, 2969, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09360608015910234, "compression_ratio": 1.6983471074380165, "no_speech_prob": 0.001324088079854846}, {"id": 258, "seek": 106496, "start": 1065.96, "end": 1069.96, "text": " It does not, in some cases, the trick happens a bit too late.", "tokens": [50414, 467, 775, 406, 11, 294, 512, 3331, 11, 264, 4282, 2314, 257, 857, 886, 3469, 13, 50614], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 259, "seek": 106496, "start": 1069.96, "end": 1071.96, "text": " Like if you, I don't know, build curl,", "tokens": [50614, 1743, 498, 291, 11, 286, 500, 380, 458, 11, 1322, 22591, 11, 50714], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 260, "seek": 106496, "start": 1071.96, "end": 1075.96, "text": " curl links to lip curl, like intra package linking,", "tokens": [50714, 22591, 6123, 281, 8280, 22591, 11, 411, 43358, 7372, 25775, 11, 50914], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 261, "seek": 106496, "start": 1075.96, "end": 1080.96, "text": " then lip call shared object name has not been replaced yet.", "tokens": [50914, 550, 8280, 818, 5507, 2657, 1315, 575, 406, 668, 10772, 1939, 13, 51164], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 262, "seek": 106496, "start": 1080.96, "end": 1082.96, "text": " We do that past post install,", "tokens": [51164, 492, 360, 300, 1791, 2183, 3625, 11, 51264], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 263, "seek": 106496, "start": 1082.96, "end": 1087.96, "text": " so sometimes there may be some small issues.", "tokens": [51264, 370, 2171, 456, 815, 312, 512, 1359, 2663, 13, 51514], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 264, "seek": 106496, "start": 1087.96, "end": 1090.96, "text": " And last thing that I want to say about this is like,", "tokens": [51514, 400, 1036, 551, 300, 286, 528, 281, 584, 466, 341, 307, 411, 11, 51664], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 265, "seek": 106496, "start": 1090.96, "end": 1092.96, "text": " how do you replace shared object names?", "tokens": [51664, 577, 360, 291, 7406, 5507, 2657, 5288, 30, 51764], "temperature": 0.0, "avg_logprob": -0.20309894489792157, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.0016220322577282786}, {"id": 266, "seek": 109296, "start": 1092.96, "end": 1096.96, "text": " So currently we simply use patch elf.", "tokens": [50364, 407, 4362, 321, 2935, 764, 9972, 35565, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 267, "seek": 109296, "start": 1096.96, "end": 1100.96, "text": " It is generally good, I would say,", "tokens": [50564, 467, 307, 5101, 665, 11, 286, 576, 584, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 268, "seek": 109296, "start": 1100.96, "end": 1102.96, "text": " apart from the issue tracker,", "tokens": [50764, 4936, 490, 264, 2734, 37516, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 269, "seek": 109296, "start": 1102.96, "end": 1105.96, "text": " which has multiple dozens of problems reported,", "tokens": [50864, 597, 575, 3866, 18431, 295, 2740, 7055, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 270, "seek": 109296, "start": 1105.96, "end": 1110.96, "text": " but it generally works.", "tokens": [51014, 457, 309, 5101, 1985, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 271, "seek": 109296, "start": 1110.96, "end": 1113.96, "text": " But there is one downside, namely that it,", "tokens": [51264, 583, 456, 307, 472, 25060, 11, 20926, 300, 309, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 272, "seek": 109296, "start": 1113.96, "end": 1116.96, "text": " well, it increases the, or it reduces the,", "tokens": [51414, 731, 11, 309, 8637, 264, 11, 420, 309, 18081, 264, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 273, "seek": 109296, "start": 1116.96, "end": 1119.96, "text": " or it solves the stat storm problem.", "tokens": [51564, 420, 309, 39890, 264, 2219, 7679, 1154, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1616826114884342, "compression_ratio": 1.546875, "no_speech_prob": 0.0015968275256454945}, {"id": 274, "seek": 111996, "start": 1119.96, "end": 1121.96, "text": " At the same time, it may, like,", "tokens": [50364, 1711, 264, 912, 565, 11, 309, 815, 11, 411, 11, 50464], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 275, "seek": 111996, "start": 1121.96, "end": 1123.96, "text": " change the L files in non-trivial ways", "tokens": [50464, 1319, 264, 441, 7098, 294, 2107, 12, 83, 470, 22640, 2098, 50564], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 276, "seek": 111996, "start": 1123.96, "end": 1125.96, "text": " and create new load segments.", "tokens": [50564, 293, 1884, 777, 3677, 19904, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 277, "seek": 111996, "start": 1125.96, "end": 1129.96, "text": " So you end up with fewer stat goals,", "tokens": [50664, 407, 291, 917, 493, 365, 13366, 2219, 5493, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 278, "seek": 111996, "start": 1129.96, "end": 1132.96, "text": " but more M-map goals, for instance.", "tokens": [50864, 457, 544, 376, 12, 24223, 5493, 11, 337, 5197, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 279, "seek": 111996, "start": 1132.96, "end": 1136.96, "text": " So if we can avoid patch elf, that would actually be nice.", "tokens": [51014, 407, 498, 321, 393, 5042, 9972, 35565, 11, 300, 576, 767, 312, 1481, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 280, "seek": 111996, "start": 1136.96, "end": 1140.96, "text": " And then there is actually another trick that we are,", "tokens": [51214, 400, 550, 456, 307, 767, 1071, 4282, 300, 321, 366, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 281, "seek": 111996, "start": 1140.96, "end": 1143.96, "text": " well, it's under consideration, or it's an open pull request,", "tokens": [51414, 731, 11, 309, 311, 833, 12381, 11, 420, 309, 311, 364, 1269, 2235, 5308, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 282, "seek": 111996, "start": 1143.96, "end": 1147.96, "text": " to basically reserve some space", "tokens": [51564, 281, 1936, 17824, 512, 1901, 51764], "temperature": 0.0, "avg_logprob": -0.1423445864840671, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.010966850444674492}, {"id": 283, "seek": 114796, "start": 1147.96, "end": 1152.96, "text": " in the dynamic section of the executables and libraries", "tokens": [50364, 294, 264, 8546, 3541, 295, 264, 7568, 2965, 293, 15148, 50614], "temperature": 0.0, "avg_logprob": -0.1308152299178274, "compression_ratio": 1.5797872340425532, "no_speech_prob": 0.0058862133882939816}, {"id": 284, "seek": 114796, "start": 1152.96, "end": 1156.96, "text": " with a dummy R path.", "tokens": [50614, 365, 257, 35064, 497, 3100, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1308152299178274, "compression_ratio": 1.5797872340425532, "no_speech_prob": 0.0058862133882939816}, {"id": 285, "seek": 114796, "start": 1156.96, "end": 1159.96, "text": " And then in Python with SPAC,", "tokens": [50814, 400, 550, 294, 15329, 365, 8420, 4378, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1308152299178274, "compression_ratio": 1.5797872340425532, "no_speech_prob": 0.0058862133882939816}, {"id": 286, "seek": 114796, "start": 1159.96, "end": 1165.96, "text": " we just move the shared object name into that placeholder space.", "tokens": [50964, 321, 445, 1286, 264, 5507, 2657, 1315, 666, 300, 1081, 20480, 1901, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1308152299178274, "compression_ratio": 1.5797872340425532, "no_speech_prob": 0.0058862133882939816}, {"id": 287, "seek": 114796, "start": 1165.96, "end": 1169.96, "text": " And then we can basically update executables and libraries in place,", "tokens": [51264, 400, 550, 321, 393, 1936, 5623, 7568, 2965, 293, 15148, 294, 1081, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1308152299178274, "compression_ratio": 1.5797872340425532, "no_speech_prob": 0.0058862133882939816}, {"id": 288, "seek": 114796, "start": 1169.96, "end": 1174.96, "text": " and it doesn't require all the advanced patch elf logic.", "tokens": [51464, 293, 309, 1177, 380, 3651, 439, 264, 7339, 9972, 35565, 9952, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1308152299178274, "compression_ratio": 1.5797872340425532, "no_speech_prob": 0.0058862133882939816}, {"id": 289, "seek": 117496, "start": 1175.96, "end": 1177.96, "text": " Okay, so with that solution,", "tokens": [50414, 1033, 11, 370, 365, 300, 3827, 11, 50514], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 290, "seek": 117496, "start": 1177.96, "end": 1179.96, "text": " do we improve the startup time of e-mail,", "tokens": [50514, 360, 321, 3470, 264, 18578, 565, 295, 308, 12, 11799, 11, 50614], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 291, "seek": 117496, "start": 1179.96, "end": 1184.96, "text": " or like, do we improve the e-max time to printing the version?", "tokens": [50614, 420, 411, 11, 360, 321, 3470, 264, 308, 12, 41167, 565, 281, 14699, 264, 3037, 30, 50864], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 292, "seek": 117496, "start": 1184.96, "end": 1188.96, "text": " And the answer is pretty much yes.", "tokens": [50864, 400, 264, 1867, 307, 1238, 709, 2086, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 293, "seek": 117496, "start": 1188.96, "end": 1192.96, "text": " So the system time goes down quite a bit, so that's good.", "tokens": [51064, 407, 264, 1185, 565, 1709, 760, 1596, 257, 857, 11, 370, 300, 311, 665, 13, 51264], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 294, "seek": 117496, "start": 1192.96, "end": 1197.96, "text": " But we still don't have, we don't capture glipc,", "tokens": [51264, 583, 321, 920, 500, 380, 362, 11, 321, 500, 380, 7983, 1563, 647, 66, 11, 51514], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 295, "seek": 117496, "start": 1197.96, "end": 1199.96, "text": " so this is what the LDD output looks like.", "tokens": [51514, 370, 341, 307, 437, 264, 441, 20818, 5598, 1542, 411, 13, 51614], "temperature": 0.0, "avg_logprob": -0.19158105175904552, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0010970645816996694}, {"id": 296, "seek": 119996, "start": 1199.96, "end": 1202.96, "text": " It all absolutely passed, but not glipc.", "tokens": [50364, 467, 439, 3122, 4678, 11, 457, 406, 1563, 647, 66, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 297, "seek": 119996, "start": 1202.96, "end": 1205.96, "text": " It still search for.", "tokens": [50514, 467, 920, 3164, 337, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 298, "seek": 119996, "start": 1205.96, "end": 1208.96, "text": " And now we end up in a rather funny situation", "tokens": [50664, 400, 586, 321, 917, 493, 294, 257, 2831, 4074, 2590, 50814], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 299, "seek": 119996, "start": 1208.96, "end": 1212.96, "text": " where basically everything that the dynamic loader opens", "tokens": [50814, 689, 1936, 1203, 300, 264, 8546, 3677, 260, 9870, 51014], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 300, "seek": 119996, "start": 1212.96, "end": 1216.96, "text": " or needs is found directly,", "tokens": [51014, 420, 2203, 307, 1352, 3838, 11, 51214], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 301, "seek": 119996, "start": 1216.96, "end": 1220.96, "text": " except that it spends about 400 syscalls looking for glipc,", "tokens": [51214, 3993, 300, 309, 25620, 466, 8423, 262, 749, 66, 39655, 1237, 337, 1563, 647, 66, 11, 51414], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 302, "seek": 119996, "start": 1220.96, "end": 1223.96, "text": " and the loader itself is part of glipc,", "tokens": [51414, 293, 264, 3677, 260, 2564, 307, 644, 295, 1563, 647, 66, 11, 51564], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 303, "seek": 119996, "start": 1223.96, "end": 1225.96, "text": " so it feels a bit dumb.", "tokens": [51564, 370, 309, 3417, 257, 857, 10316, 13, 51664], "temperature": 0.0, "avg_logprob": -0.16278833024045256, "compression_ratio": 1.5119617224880382, "no_speech_prob": 0.006876612082123756}, {"id": 304, "seek": 122596, "start": 1225.96, "end": 1229.96, "text": " But in muscle glipc, actually, that is not an issue at all", "tokens": [50364, 583, 294, 8679, 1563, 647, 66, 11, 767, 11, 300, 307, 406, 364, 2734, 412, 439, 50564], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 305, "seek": 122596, "start": 1229.96, "end": 1232.96, "text": " because they're quite smart about it.", "tokens": [50564, 570, 436, 434, 1596, 4069, 466, 309, 13, 50714], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 306, "seek": 122596, "start": 1232.96, "end": 1236.96, "text": " The loader is actually also the glipc implementation,", "tokens": [50714, 440, 3677, 260, 307, 767, 611, 264, 1563, 647, 66, 11420, 11, 50914], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 307, "seek": 122596, "start": 1236.96, "end": 1239.96, "text": " so they never locate glipc,", "tokens": [50914, 370, 436, 1128, 22370, 1563, 647, 66, 11, 51064], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 308, "seek": 122596, "start": 1239.96, "end": 1242.96, "text": " and that's also a reason why muscle binaries", "tokens": [51064, 293, 300, 311, 611, 257, 1778, 983, 8679, 5171, 4889, 51214], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 309, "seek": 122596, "start": 1242.96, "end": 1247.96, "text": " may start actually a little bit faster than glipc binaries.", "tokens": [51214, 815, 722, 767, 257, 707, 857, 4663, 813, 1563, 647, 66, 5171, 4889, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 310, "seek": 122596, "start": 1247.96, "end": 1250.96, "text": " But if we are now at the last issue,", "tokens": [51464, 583, 498, 321, 366, 586, 412, 264, 1036, 2734, 11, 51614], "temperature": 0.0, "avg_logprob": -0.13150696044272564, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.0006664875545538962}, {"id": 311, "seek": 125096, "start": 1250.96, "end": 1255.96, "text": " like if we make the paths of glipc absolute or preload them,", "tokens": [50364, 411, 498, 321, 652, 264, 14518, 295, 1563, 647, 66, 8236, 420, 659, 2907, 552, 11, 50614], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 312, "seek": 125096, "start": 1255.96, "end": 1259.96, "text": " then we actually finally reduce the startup time", "tokens": [50614, 550, 321, 767, 2721, 5407, 264, 18578, 565, 50814], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 313, "seek": 125096, "start": 1259.96, "end": 1261.96, "text": " to something reasonable.", "tokens": [50814, 281, 746, 10585, 13, 50914], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 314, "seek": 125096, "start": 1261.96, "end": 1264.96, "text": " And then the statstorm issue is solved,", "tokens": [50914, 400, 550, 264, 2219, 17367, 2734, 307, 13041, 11, 51064], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 315, "seek": 125096, "start": 1264.96, "end": 1266.96, "text": " so there are actually zero statcalls,", "tokens": [51064, 370, 456, 366, 767, 4018, 2219, 66, 39655, 11, 51164], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 316, "seek": 125096, "start": 1266.96, "end": 1274.96, "text": " and the open-add calls are, well, significantly reduced.", "tokens": [51164, 293, 264, 1269, 12, 25224, 5498, 366, 11, 731, 11, 10591, 9212, 13, 51564], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 317, "seek": 125096, "start": 1274.96, "end": 1277.96, "text": " So basically, to answer the question,", "tokens": [51564, 407, 1936, 11, 281, 1867, 264, 1168, 11, 51714], "temperature": 0.0, "avg_logprob": -0.18522933592279273, "compression_ratio": 1.5824742268041236, "no_speech_prob": 0.003938787151128054}, {"id": 318, "seek": 127796, "start": 1277.96, "end": 1282.96, "text": " have we solved the statstorm spec mostly?", "tokens": [50364, 362, 321, 13041, 264, 2219, 17367, 1608, 5240, 30, 50614], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 319, "seek": 127796, "start": 1282.96, "end": 1286.96, "text": " It would be easier if we also control glipc,", "tokens": [50614, 467, 576, 312, 3571, 498, 321, 611, 1969, 1563, 647, 66, 11, 50814], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 320, "seek": 127796, "start": 1286.96, "end": 1290.96, "text": " but we are not there yet.", "tokens": [50814, 457, 321, 366, 406, 456, 1939, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 321, "seek": 127796, "start": 1290.96, "end": 1293.96, "text": " But at the same time, it is definitely possible,", "tokens": [51014, 583, 412, 264, 912, 565, 11, 309, 307, 2138, 1944, 11, 51164], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 322, "seek": 127796, "start": 1293.96, "end": 1298.96, "text": " and, well, for sure, you get the second runtime for free,", "tokens": [51164, 293, 11, 731, 11, 337, 988, 11, 291, 483, 264, 1150, 34474, 337, 1737, 11, 51414], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 323, "seek": 127796, "start": 1298.96, "end": 1300.96, "text": " and if you push a little bit harder,", "tokens": [51414, 293, 498, 291, 2944, 257, 707, 857, 6081, 11, 51514], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 324, "seek": 127796, "start": 1300.96, "end": 1304.96, "text": " we could still make the paths to glipc itself absolute,", "tokens": [51514, 321, 727, 920, 652, 264, 14518, 281, 1563, 647, 66, 2564, 8236, 11, 51714], "temperature": 0.0, "avg_logprob": -0.12308890923209813, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0051298607140779495}, {"id": 325, "seek": 130496, "start": 1304.96, "end": 1309.96, "text": " for instance, and then you get the proper performance.", "tokens": [50364, 337, 5197, 11, 293, 550, 291, 483, 264, 2296, 3389, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 326, "seek": 130496, "start": 1309.96, "end": 1312.96, "text": " So here are some further links for, like,", "tokens": [50614, 407, 510, 366, 512, 3052, 6123, 337, 11, 411, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 327, "seek": 130496, "start": 1312.96, "end": 1314.96, "text": " there's also the whole discussion,", "tokens": [50764, 456, 311, 611, 264, 1379, 5017, 11, 50864], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 328, "seek": 130496, "start": 1314.96, "end": 1316.96, "text": " and Nick's going on,", "tokens": [50864, 293, 9449, 311, 516, 322, 11, 50964], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 329, "seek": 130496, "start": 1316.96, "end": 1319.96, "text": " and their issue has been open since 2017,", "tokens": [50964, 293, 641, 2734, 575, 668, 1269, 1670, 6591, 11, 51114], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 330, "seek": 130496, "start": 1319.96, "end": 1322.96, "text": " I think, where people reported this issue,", "tokens": [51114, 286, 519, 11, 689, 561, 7055, 341, 2734, 11, 51264], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 331, "seek": 130496, "start": 1322.96, "end": 1324.96, "text": " like slow startup times,", "tokens": [51264, 411, 2964, 18578, 1413, 11, 51364], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 332, "seek": 130496, "start": 1324.96, "end": 1327.96, "text": " and lately there's quite some discussion", "tokens": [51364, 293, 12881, 456, 311, 1596, 512, 5017, 51514], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 333, "seek": 130496, "start": 1327.96, "end": 1329.96, "text": " for them going on, too.", "tokens": [51514, 337, 552, 516, 322, 11, 886, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 334, "seek": 130496, "start": 1329.96, "end": 1331.96, "text": " They also have the same issue.", "tokens": [51614, 814, 611, 362, 264, 912, 2734, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11797556877136231, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.051993709057569504}, {"id": 335, "seek": 133196, "start": 1331.96, "end": 1333.96, "text": " They not only want to support glipc,", "tokens": [50364, 814, 406, 787, 528, 281, 1406, 1563, 647, 66, 11, 50464], "temperature": 0.0, "avg_logprob": -0.1682066657326438, "compression_ratio": 1.2461538461538462, "no_speech_prob": 0.005930744111537933}, {"id": 336, "seek": 133196, "start": 1333.96, "end": 1335.96, "text": " but also muscle,", "tokens": [50464, 457, 611, 8679, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1682066657326438, "compression_ratio": 1.2461538461538462, "no_speech_prob": 0.005930744111537933}, {"id": 337, "seek": 133196, "start": 1335.96, "end": 1338.96, "text": " so it's interesting to read up on that, too.", "tokens": [50564, 370, 309, 311, 1880, 281, 1401, 493, 322, 300, 11, 886, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1682066657326438, "compression_ratio": 1.2461538461538462, "no_speech_prob": 0.005930744111537933}, {"id": 338, "seek": 133196, "start": 1338.96, "end": 1341.96, "text": " And I'll leave it by that. Thank you.", "tokens": [50714, 400, 286, 603, 1856, 309, 538, 300, 13, 1044, 291, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1682066657326438, "compression_ratio": 1.2461538461538462, "no_speech_prob": 0.005930744111537933}, {"id": 339, "seek": 133196, "start": 1349.96, "end": 1351.96, "text": " Any questions for Harman?", "tokens": [51264, 2639, 1651, 337, 3653, 1601, 30, 51364], "temperature": 0.0, "avg_logprob": -0.1682066657326438, "compression_ratio": 1.2461538461538462, "no_speech_prob": 0.005930744111537933}, {"id": 340, "seek": 135196, "start": 1351.96, "end": 1360.96, "text": " Hello.", "tokens": [50364, 2425, 13, 50814], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 341, "seek": 135196, "start": 1360.96, "end": 1362.96, "text": " Hi.", "tokens": [50814, 2421, 13, 50914], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 342, "seek": 135196, "start": 1362.96, "end": 1364.96, "text": " So I have a question.", "tokens": [50914, 407, 286, 362, 257, 1168, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 343, "seek": 135196, "start": 1364.96, "end": 1367.96, "text": " So how do you load the prefixes on your software packages?", "tokens": [51014, 407, 577, 360, 291, 3677, 264, 18417, 36005, 322, 428, 4722, 17401, 30, 51164], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 344, "seek": 135196, "start": 1367.96, "end": 1370.96, "text": " Do you use a module system like Elmot or something like that?", "tokens": [51164, 1144, 291, 764, 257, 10088, 1185, 411, 2699, 29778, 420, 746, 411, 300, 30, 51314], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 345, "seek": 135196, "start": 1370.96, "end": 1374.96, "text": " So we have multiple ways to actually use the software.", "tokens": [51314, 407, 321, 362, 3866, 2098, 281, 767, 764, 264, 4722, 13, 51514], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 346, "seek": 135196, "start": 1374.96, "end": 1378.96, "text": " You can generate modules, yeah.", "tokens": [51514, 509, 393, 8460, 16679, 11, 1338, 13, 51714], "temperature": 0.0, "avg_logprob": -0.19322208619453538, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.009334670379757881}, {"id": 347, "seek": 137896, "start": 1378.96, "end": 1383.96, "text": " There is also a way to, which I like a little bit more,", "tokens": [50364, 821, 307, 611, 257, 636, 281, 11, 597, 286, 411, 257, 707, 857, 544, 11, 50614], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 348, "seek": 137896, "start": 1383.96, "end": 1385.96, "text": " is, like, you create an environment,", "tokens": [50614, 307, 11, 411, 11, 291, 1884, 364, 2823, 11, 50714], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 349, "seek": 137896, "start": 1385.96, "end": 1390.96, "text": " you add all the packages in there that you need,", "tokens": [50714, 291, 909, 439, 264, 17401, 294, 456, 300, 291, 643, 11, 50964], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 350, "seek": 137896, "start": 1390.96, "end": 1392.96, "text": " and then you generate a view.", "tokens": [50964, 293, 550, 291, 8460, 257, 1910, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 351, "seek": 137896, "start": 1392.96, "end": 1399.96, "text": " That is actually like a more classical directory structure", "tokens": [51064, 663, 307, 767, 411, 257, 544, 13735, 21120, 3877, 51414], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 352, "seek": 137896, "start": 1399.96, "end": 1402.96, "text": " that you get out of that, where everything is merged.", "tokens": [51414, 300, 291, 483, 484, 295, 300, 11, 689, 1203, 307, 36427, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 353, "seek": 137896, "start": 1402.96, "end": 1405.96, "text": " Because, for instance, in Elmot, with the modules,", "tokens": [51564, 1436, 11, 337, 5197, 11, 294, 2699, 29778, 11, 365, 264, 16679, 11, 51714], "temperature": 0.0, "avg_logprob": -0.15924345928689707, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.007812456227838993}, {"id": 354, "seek": 140596, "start": 1405.96, "end": 1408.96, "text": " you can swap modules on the fly,", "tokens": [50364, 291, 393, 18135, 16679, 322, 264, 3603, 11, 50514], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 355, "seek": 140596, "start": 1408.96, "end": 1411.96, "text": " so it can be used by the user.", "tokens": [50514, 370, 309, 393, 312, 1143, 538, 264, 4195, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 356, "seek": 140596, "start": 1411.96, "end": 1415.96, "text": " So I'm wondering if you're using these absolute paths,", "tokens": [50664, 407, 286, 478, 6359, 498, 291, 434, 1228, 613, 8236, 14518, 11, 50864], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 357, "seek": 140596, "start": 1415.96, "end": 1420.96, "text": " and then one of my users decided to do a module swap", "tokens": [50864, 293, 550, 472, 295, 452, 5022, 3047, 281, 360, 257, 10088, 18135, 51114], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 358, "seek": 140596, "start": 1420.96, "end": 1424.96, "text": " on the OpenMPI library, so something else.", "tokens": [51114, 322, 264, 7238, 12224, 40, 6405, 11, 370, 746, 1646, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 359, "seek": 140596, "start": 1424.96, "end": 1426.96, "text": " How is that handled with this system?", "tokens": [51314, 1012, 307, 300, 18033, 365, 341, 1185, 30, 51414], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 360, "seek": 140596, "start": 1426.96, "end": 1429.96, "text": " So one thing that you lose is the ability,", "tokens": [51414, 407, 472, 551, 300, 291, 3624, 307, 264, 3485, 11, 51564], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 361, "seek": 140596, "start": 1429.96, "end": 1431.96, "text": " like, if you use absolute paths,", "tokens": [51564, 411, 11, 498, 291, 764, 8236, 14518, 11, 51664], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 362, "seek": 140596, "start": 1431.96, "end": 1434.96, "text": " one thing that you lose is the ability to use the library path,", "tokens": [51664, 472, 551, 300, 291, 3624, 307, 264, 3485, 281, 764, 264, 6405, 3100, 11, 51814], "temperature": 0.0, "avg_logprob": -0.12359537397112165, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.0038743193726986647}, {"id": 363, "seek": 143496, "start": 1434.96, "end": 1437.96, "text": " but you can do LD preload, and to be honest,", "tokens": [50364, 457, 291, 393, 360, 33936, 659, 2907, 11, 293, 281, 312, 3245, 11, 50514], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 364, "seek": 143496, "start": 1437.96, "end": 1440.96, "text": " I'm not sure why LD preload doesn't, well,", "tokens": [50514, 286, 478, 406, 988, 983, 33936, 659, 2907, 1177, 380, 11, 731, 11, 50664], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 365, "seek": 143496, "start": 1440.96, "end": 1443.96, "text": " it's not used that much, but LD preload has the advantage", "tokens": [50664, 309, 311, 406, 1143, 300, 709, 11, 457, 33936, 659, 2907, 575, 264, 5002, 50814], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 366, "seek": 143496, "start": 1443.96, "end": 1445.96, "text": " that you can very specifically talk,", "tokens": [50814, 300, 291, 393, 588, 4682, 751, 11, 50914], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 367, "seek": 143496, "start": 1445.96, "end": 1447.96, "text": " like, I want to use this library.", "tokens": [50914, 411, 11, 286, 528, 281, 764, 341, 6405, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 368, "seek": 143496, "start": 1447.96, "end": 1449.96, "text": " Yeah, that's quite hard to say.", "tokens": [51014, 865, 11, 300, 311, 1596, 1152, 281, 584, 13, 51114], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 369, "seek": 143496, "start": 1449.96, "end": 1451.96, "text": " Yeah, but it's also not very different from, like...", "tokens": [51114, 865, 11, 457, 309, 311, 611, 406, 588, 819, 490, 11, 411, 485, 51214], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 370, "seek": 143496, "start": 1451.96, "end": 1453.96, "text": " It's prepended everywhere, so yeah.", "tokens": [51214, 467, 311, 2666, 3502, 5315, 11, 370, 1338, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 371, "seek": 143496, "start": 1453.96, "end": 1456.96, "text": " It's also not very different, in my opinion,", "tokens": [51314, 467, 311, 611, 406, 588, 819, 11, 294, 452, 4800, 11, 51464], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 372, "seek": 143496, "start": 1456.96, "end": 1460.96, "text": " from using a LD library path, but yeah.", "tokens": [51464, 490, 1228, 257, 33936, 6405, 3100, 11, 457, 1338, 13, 51664], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 373, "seek": 143496, "start": 1460.96, "end": 1462.96, "text": " Thank you.", "tokens": [51664, 1044, 291, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16985108959141063, "compression_ratio": 1.7459677419354838, "no_speech_prob": 0.004947754088789225}, {"id": 374, "seek": 146496, "start": 1464.96, "end": 1466.96, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.5390909910202026, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.9904929995536804}], "language": "en"}