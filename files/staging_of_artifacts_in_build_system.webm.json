{"text": " So good evening, everyone, and welcome to the last talk in this session. I hope you still have some energy left. So my name is Sascha Roloff. I'm working at the Huawei Intelligent Cloud Technology Lab of the Huawei Munich Research Center, and today we are going to take a look under the hood of build systems and what common practices are currently used in basically all of the build systems and why many of them are suboptimal in certain regards and how they can be improved by a concept called staging. So in order to explain you the issues with current build systems, I directly jump into an example and I guess many of you have used make once or twice in your open source developments. So let's start with this classic build system. So we want to create a build description for a very simple hello world application composed of a hello binary and a greet library, and the greeting phrase is hard coded inside the hello binary and a greet e can be injected at compile time at the greet library. So this is a make file. We have our rules which describe which artifacts are generated by actions based on a set of input artifacts, and so we have different actions actually involved to generate the final binary, and for example we have compile actions to generate the object files like the hello.o or the greet.o, we have archive action for the greet library, and the final linking action to actually generate the binary. At the end we also want to create some sample output, so we just take the output of the hello world and store it in a text file. So nothing spectacular right now, each artifact is associated with a file on the file system so the actions can directly operate on it. If we execute the build, we just see all the actions are executed, everything fine, and the output is generated, and yes now the boss comes into our office and he's unhappy with our result, he wants to put it basically on a poster and it should be more readable. Okay so yeah then let's add some post processing to the task, and we just take the output of the hello binary, store it in the intermediate file and put this intermediate file into the post processing and translate all letters into, capitalize all letters basically and store it into post processed text. And then finally put this text into the target sample output, and we execute this, we see new actions are executed and the result is fine, looks much better now, hello world and capital letters great, but the boss is still unhappy, he wants to have some localization, he doesn't want to greet the whole world, he just wants to greet Munich and Brussels, and he wants to have it both in a single make file, so what do we have to do now, okay we have to basically we have two program variants now, and what should we do in order to reuse most of our rules that we already have, we can use a for loop over the location dependent targets and interpolate the city name into the artifact names as you can see here, so we have now not only a single hello binary, but two hello binaries with dot and the name of the city, and these are our two program variants, and as you can see there is a lot of string interpolation coming into our make file and it doesn't make it really readable, but we have to do it, because each artifact is associated with a file on the file system and this needs to be a unique name, so we have to do it basically, and when we execute it, okay now we get a bit more actions, but it's working, and we see now, okay the output is as required and we greet Munich and Brussels, but the boss is still, I mean he's happy now with our output, but now he's unhappy with our implementation, he says that's not maintainable, why do we use a build system from the 70s, use a modern one, they are supposed to do much better now, well okay, then let's use Bazel, and this is what it looks like in Bazel, so the same application, and as it turns out they are better, but not in all regards, so they introduce high level concepts like the CC binary and CC library, we don't have to manually write object file creation and linking, but it's, everything is wrapped now inside these high level concept calls, and also our bash calls are wrapped in these general targets, but I mean it looks a bit more readable now, but still we have this string interpolation here, and the for loops over the city names, and yeah why is it actually like that, why do we need this, I mean it's a modern build system, and the reason is because Bazel also associates each artifact with a file on the file system, and yeah, so that's why this basically brings us to an important observation, and this means even modern build systems, it's required that you have unique names for your artifacts, and because they basically follow a design decision implemented by make in the 70s, and the design decision by make was that each artifact needs to have a fixed location in the file system, well for make it was perfectly fine at that time, because there was nothing else or not much different to do in order to determine which part of a program needs to be recomputed, basically to compare timestamps, and for this you need files, so for make this was totally fine, but there is actually no reason anymore to do this in modern build systems, because they anyway isolate their actions in order to avoid getting unwanted dependencies into their builds, so their actions are executed either in a separate directory or in a container in order to better control the dependencies, so when they anyway execute their actions, why don't we allow the targets to specify where to put the artifacts, and this is exactly the idea of staging, so basically there is no technical reason for modern build systems for restriction of to associate each artifact with a file, and instead we propose that we should stop following this common practice and apply staging instead, and the idea of staging is that an action can freely select the location of input and output artifacts within its working directory, and this basically introduces a separation between physical and logical paths, inside an action, you only work on the logical paths, and the action can freely decide where to put a generated artifact, or where it wants to read an input artifact, and so this is basically our proposal to apply staging, and how could it be look like if it's implemented in a build system, so this is basically our project, it's called just build, and this is a build description that we propose, so we also have the definitions of our targets here, we also use the high level concepts like binaries and libraries, and in this JSON syntax the type just selects which kind of artifact or which kind of target it basically is, and what we can see inside the target definitions our artifacts are named without string interpolation, so we don't need to artificially invent unique names for our artifacts, they are just like they are, and also for example here this use target we just access the hello binary, even though we will have two of these binaries but we just write hello, and we don't care, I mean it's staged, and what is created from the depending dependency, it's just staging the final result at that location where we need it, so, but still we have the for loop, this is something what we of course still need to, which basically creates two configurations, which is then propagated, I mean this variable that is created here is propagated to all the depending targets, and it propagates until the greed library, which then reads this configuration variable and injects it into the compile command, so this is how a description could look like with staging, and from this description we can also generate a so called target graph, which shows the dependencies of the targets, so main depends on all, all depends on two post process because we have two configured targets, so the greed library basically is duplicated and this propagates until the post process target, and these target graph or targets are basically high level concepts, if you want to take a look into which actions are actually executed, you can also generate an action graph, which shows a data flow, that's why the errors are inverted, and it's a bipartite graph, which means so, the ellipses are the artifacts and the rectangles are the actions, and yeah, so you can really see the artifact names are basically the same, so post process dot txt and post process dot txt are the same names in both branches, and since they are staged in logical paths, there's no problem, there's no conflict actually, this would not work in make, you would have to use unique names, okay, so and what happens when we execute it, so we just select the target that we want to build, and there is some output coming here, and it says okay we have 12 actions, zero cache hits, of course we execute, built at first time, so you can count it's 12 actions, and it's just built, the artifact is somewhere, I mean it could be in a remote execution, and then it's just existing in a remote cus, if you want to have the artifact in your local folder, then you have to install it, and when we execute the installation, we now see okay, again 12 actions, and also 12 cache hits, because everything is known already, and then the file is in your local directory actually, and we see the content is fine, and we even don't need to store it into our local directory, we can just print the content of an artifact by the minus p option, if we take staging seriously, we have also very nice implications, and one is for example, assume that you have an external source code that you want to use in your project, and you want to apply some patches on it, and yeah how do you do it, normally you would copy it, apply the patch, because you don't want to modify the original source code, and yeah this results in a lot of maintenance problems, but with staging this can be done much easier with logical in place patching, you just apply the patch on the logical path, and yeah, then let's take a look how this could look like, so we have now put our example files in a third party directory outside of our project, and a directory with the patches, and the patch just modifies the hello greeting phrase with a bonjour greeting phrase, and we just have to add a single block, a single block into our build description, which points to our patch and to the file that needs to be patched, and that's it, and the resulting target graph just shows, okay we have now one more target here, the hellocpp source target, and the other, the binaries are depending on this extra target now, and also in the action graph you can see that there is just a single new action actually added here to the action graph, where earlier was hellocpp is now the patched version of hellocpp, and it's just another input, and if something is changed in the patch all dependent targets are executed, okay if we execute it we see bonjour Munich, bonjour Brussels, works well, okay so quickly to summarize my talk, as we have seen there are some inconvenient habits in modern build systems, and yeah we propose to apply staging instead to make build systems better, and you will have a couple of advantages if you apply staging, and yeah which are written here, and this is not only a concept it's already implemented, so if you want to take a look into our project please come by, and yeah now the stage is yours, thanks for your attention, are there are any questions, there is a question, no I think it will repeat the question, you heard the question, yeah exactly we do actually content addressable storage, so repeat the question please, okay the question was how do we identify which source code we actually need for the staging, and yeah we apply content addressable storage, so we determine a hash basically from all of our source codes, and then also we know what has been changed or not, any other questions, yeah so the question was whether we use the jason syntax, yeah no we decided for jason, and yeah it's jason is used as our build description syntax, okay so how many developers are working on it, and is it widely used, a very good question actually we recently got open sourced, and we are in total five developers currently working on it, and yeah but we really try to implement the new concepts into this build system, and make it a really sound build system compared to other modern build systems, and yeah so please just take a look at our project, and there is a nice tutorial also, which well everything explains nicely, and hope to see you there, okay thank you for the talk, thank you, goodbye, thank you for coming.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 9.200000000000001, "text": " So good evening, everyone, and welcome to the last talk in this session.", "tokens": [407, 665, 5634, 11, 1518, 11, 293, 2928, 281, 264, 1036, 751, 294, 341, 5481, 13], "temperature": 0.0, "avg_logprob": -0.23205522744052381, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.08481009304523468}, {"id": 1, "seek": 0, "start": 9.200000000000001, "end": 12.36, "text": " I hope you still have some energy left.", "tokens": [286, 1454, 291, 920, 362, 512, 2281, 1411, 13], "temperature": 0.0, "avg_logprob": -0.23205522744052381, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.08481009304523468}, {"id": 2, "seek": 0, "start": 12.36, "end": 13.72, "text": " So my name is Sascha Roloff.", "tokens": [407, 452, 1315, 307, 36613, 4413, 497, 401, 4506, 13], "temperature": 0.0, "avg_logprob": -0.23205522744052381, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.08481009304523468}, {"id": 3, "seek": 0, "start": 13.72, "end": 19.84, "text": " I'm working at the Huawei Intelligent Cloud Technology Lab of the Huawei Munich Research", "tokens": [286, 478, 1364, 412, 264, 28542, 18762, 25002, 8061, 15037, 10137, 295, 264, 28542, 40601, 10303], "temperature": 0.0, "avg_logprob": -0.23205522744052381, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.08481009304523468}, {"id": 4, "seek": 0, "start": 19.84, "end": 26.8, "text": " Center, and today we are going to take a look under the hood of build systems and what common", "tokens": [5169, 11, 293, 965, 321, 366, 516, 281, 747, 257, 574, 833, 264, 13376, 295, 1322, 3652, 293, 437, 2689], "temperature": 0.0, "avg_logprob": -0.23205522744052381, "compression_ratio": 1.4930875576036866, "no_speech_prob": 0.08481009304523468}, {"id": 5, "seek": 2680, "start": 26.8, "end": 33.56, "text": " practices are currently used in basically all of the build systems and why many of", "tokens": [7525, 366, 4362, 1143, 294, 1936, 439, 295, 264, 1322, 3652, 293, 983, 867, 295], "temperature": 0.0, "avg_logprob": -0.1548036507197789, "compression_ratio": 1.625, "no_speech_prob": 9.428474004380405e-05}, {"id": 6, "seek": 2680, "start": 33.56, "end": 39.44, "text": " them are suboptimal in certain regards and how they can be improved by a concept called", "tokens": [552, 366, 1422, 5747, 10650, 294, 1629, 14258, 293, 577, 436, 393, 312, 9689, 538, 257, 3410, 1219], "temperature": 0.0, "avg_logprob": -0.1548036507197789, "compression_ratio": 1.625, "no_speech_prob": 9.428474004380405e-05}, {"id": 7, "seek": 2680, "start": 39.44, "end": 42.44, "text": " staging.", "tokens": [41085, 13], "temperature": 0.0, "avg_logprob": -0.1548036507197789, "compression_ratio": 1.625, "no_speech_prob": 9.428474004380405e-05}, {"id": 8, "seek": 2680, "start": 42.44, "end": 47.760000000000005, "text": " So in order to explain you the issues with current build systems, I directly jump into", "tokens": [407, 294, 1668, 281, 2903, 291, 264, 2663, 365, 2190, 1322, 3652, 11, 286, 3838, 3012, 666], "temperature": 0.0, "avg_logprob": -0.1548036507197789, "compression_ratio": 1.625, "no_speech_prob": 9.428474004380405e-05}, {"id": 9, "seek": 2680, "start": 47.760000000000005, "end": 56.040000000000006, "text": " an example and I guess many of you have used make once or twice in your open source developments.", "tokens": [364, 1365, 293, 286, 2041, 867, 295, 291, 362, 1143, 652, 1564, 420, 6091, 294, 428, 1269, 4009, 20862, 13], "temperature": 0.0, "avg_logprob": -0.1548036507197789, "compression_ratio": 1.625, "no_speech_prob": 9.428474004380405e-05}, {"id": 10, "seek": 5604, "start": 56.04, "end": 58.72, "text": " So let's start with this classic build system.", "tokens": [407, 718, 311, 722, 365, 341, 7230, 1322, 1185, 13], "temperature": 0.0, "avg_logprob": -0.14342767000198364, "compression_ratio": 1.6974358974358974, "no_speech_prob": 3.213086893083528e-05}, {"id": 11, "seek": 5604, "start": 58.72, "end": 64.68, "text": " So we want to create a build description for a very simple hello world application composed", "tokens": [407, 321, 528, 281, 1884, 257, 1322, 3855, 337, 257, 588, 2199, 7751, 1002, 3861, 18204], "temperature": 0.0, "avg_logprob": -0.14342767000198364, "compression_ratio": 1.6974358974358974, "no_speech_prob": 3.213086893083528e-05}, {"id": 12, "seek": 5604, "start": 64.68, "end": 72.75999999999999, "text": " of a hello binary and a greet library, and the greeting phrase is hard coded inside the", "tokens": [295, 257, 7751, 17434, 293, 257, 12044, 6405, 11, 293, 264, 28174, 9535, 307, 1152, 34874, 1854, 264], "temperature": 0.0, "avg_logprob": -0.14342767000198364, "compression_ratio": 1.6974358974358974, "no_speech_prob": 3.213086893083528e-05}, {"id": 13, "seek": 5604, "start": 72.75999999999999, "end": 80.48, "text": " hello binary and a greet e can be injected at compile time at the greet library.", "tokens": [7751, 17434, 293, 257, 12044, 308, 393, 312, 36967, 412, 31413, 565, 412, 264, 12044, 6405, 13], "temperature": 0.0, "avg_logprob": -0.14342767000198364, "compression_ratio": 1.6974358974358974, "no_speech_prob": 3.213086893083528e-05}, {"id": 14, "seek": 5604, "start": 80.48, "end": 82.92, "text": " So this is a make file.", "tokens": [407, 341, 307, 257, 652, 3991, 13], "temperature": 0.0, "avg_logprob": -0.14342767000198364, "compression_ratio": 1.6974358974358974, "no_speech_prob": 3.213086893083528e-05}, {"id": 15, "seek": 8292, "start": 82.92, "end": 91.28, "text": " We have our rules which describe which artifacts are generated by actions based on a set of", "tokens": [492, 362, 527, 4474, 597, 6786, 597, 24617, 366, 10833, 538, 5909, 2361, 322, 257, 992, 295], "temperature": 0.0, "avg_logprob": -0.16919142083276675, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.21771512972191e-05}, {"id": 16, "seek": 8292, "start": 91.28, "end": 98.24000000000001, "text": " input artifacts, and so we have different actions actually involved to generate the", "tokens": [4846, 24617, 11, 293, 370, 321, 362, 819, 5909, 767, 3288, 281, 8460, 264], "temperature": 0.0, "avg_logprob": -0.16919142083276675, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.21771512972191e-05}, {"id": 17, "seek": 8292, "start": 98.24000000000001, "end": 104.04, "text": " final binary, and for example we have compile actions to generate the object files like", "tokens": [2572, 17434, 11, 293, 337, 1365, 321, 362, 31413, 5909, 281, 8460, 264, 2657, 7098, 411], "temperature": 0.0, "avg_logprob": -0.16919142083276675, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.21771512972191e-05}, {"id": 18, "seek": 8292, "start": 104.04, "end": 110.68, "text": " the hello.o or the greet.o, we have archive action for the greet library, and the final", "tokens": [264, 7751, 13, 78, 420, 264, 12044, 13, 78, 11, 321, 362, 23507, 3069, 337, 264, 12044, 6405, 11, 293, 264, 2572], "temperature": 0.0, "avg_logprob": -0.16919142083276675, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.21771512972191e-05}, {"id": 19, "seek": 11068, "start": 110.68, "end": 114.64, "text": " linking action to actually generate the binary.", "tokens": [25775, 3069, 281, 767, 8460, 264, 17434, 13], "temperature": 0.0, "avg_logprob": -0.12934772173563638, "compression_ratio": 1.6851063829787234, "no_speech_prob": 1.9205208445782773e-05}, {"id": 20, "seek": 11068, "start": 114.64, "end": 120.52000000000001, "text": " At the end we also want to create some sample output, so we just take the output of the", "tokens": [1711, 264, 917, 321, 611, 528, 281, 1884, 512, 6889, 5598, 11, 370, 321, 445, 747, 264, 5598, 295, 264], "temperature": 0.0, "avg_logprob": -0.12934772173563638, "compression_ratio": 1.6851063829787234, "no_speech_prob": 1.9205208445782773e-05}, {"id": 21, "seek": 11068, "start": 120.52000000000001, "end": 123.68, "text": " hello world and store it in a text file.", "tokens": [7751, 1002, 293, 3531, 309, 294, 257, 2487, 3991, 13], "temperature": 0.0, "avg_logprob": -0.12934772173563638, "compression_ratio": 1.6851063829787234, "no_speech_prob": 1.9205208445782773e-05}, {"id": 22, "seek": 11068, "start": 123.68, "end": 130.72, "text": " So nothing spectacular right now, each artifact is associated with a file on the file system", "tokens": [407, 1825, 18149, 558, 586, 11, 1184, 34806, 307, 6615, 365, 257, 3991, 322, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.12934772173563638, "compression_ratio": 1.6851063829787234, "no_speech_prob": 1.9205208445782773e-05}, {"id": 23, "seek": 11068, "start": 130.72, "end": 134.4, "text": " so the actions can directly operate on it.", "tokens": [370, 264, 5909, 393, 3838, 9651, 322, 309, 13], "temperature": 0.0, "avg_logprob": -0.12934772173563638, "compression_ratio": 1.6851063829787234, "no_speech_prob": 1.9205208445782773e-05}, {"id": 24, "seek": 11068, "start": 134.4, "end": 139.96, "text": " If we execute the build, we just see all the actions are executed, everything fine,", "tokens": [759, 321, 14483, 264, 1322, 11, 321, 445, 536, 439, 264, 5909, 366, 17577, 11, 1203, 2489, 11], "temperature": 0.0, "avg_logprob": -0.12934772173563638, "compression_ratio": 1.6851063829787234, "no_speech_prob": 1.9205208445782773e-05}, {"id": 25, "seek": 13996, "start": 139.96, "end": 147.56, "text": " and the output is generated, and yes now the boss comes into our office and he's unhappy", "tokens": [293, 264, 5598, 307, 10833, 11, 293, 2086, 586, 264, 5741, 1487, 666, 527, 3398, 293, 415, 311, 22172], "temperature": 0.0, "avg_logprob": -0.1671960984153309, "compression_ratio": 1.6883720930232557, "no_speech_prob": 8.071339107118547e-05}, {"id": 26, "seek": 13996, "start": 147.56, "end": 154.68, "text": " with our result, he wants to put it basically on a poster and it should be more readable.", "tokens": [365, 527, 1874, 11, 415, 2738, 281, 829, 309, 1936, 322, 257, 17171, 293, 309, 820, 312, 544, 49857, 13], "temperature": 0.0, "avg_logprob": -0.1671960984153309, "compression_ratio": 1.6883720930232557, "no_speech_prob": 8.071339107118547e-05}, {"id": 27, "seek": 13996, "start": 154.68, "end": 161.16, "text": " Okay so yeah then let's add some post processing to the task, and we just take the output of", "tokens": [1033, 370, 1338, 550, 718, 311, 909, 512, 2183, 9007, 281, 264, 5633, 11, 293, 321, 445, 747, 264, 5598, 295], "temperature": 0.0, "avg_logprob": -0.1671960984153309, "compression_ratio": 1.6883720930232557, "no_speech_prob": 8.071339107118547e-05}, {"id": 28, "seek": 13996, "start": 161.16, "end": 167.4, "text": " the hello binary, store it in the intermediate file and put this intermediate file into the", "tokens": [264, 7751, 17434, 11, 3531, 309, 294, 264, 19376, 3991, 293, 829, 341, 19376, 3991, 666, 264], "temperature": 0.0, "avg_logprob": -0.1671960984153309, "compression_ratio": 1.6883720930232557, "no_speech_prob": 8.071339107118547e-05}, {"id": 29, "seek": 16740, "start": 167.4, "end": 174.16, "text": " post processing and translate all letters into, capitalize all letters basically and", "tokens": [2183, 9007, 293, 13799, 439, 7825, 666, 11, 48114, 439, 7825, 1936, 293], "temperature": 0.0, "avg_logprob": -0.16185367641164294, "compression_ratio": 1.6779661016949152, "no_speech_prob": 1.221200182044413e-05}, {"id": 30, "seek": 16740, "start": 174.16, "end": 177.4, "text": " store it into post processed text.", "tokens": [3531, 309, 666, 2183, 18846, 2487, 13], "temperature": 0.0, "avg_logprob": -0.16185367641164294, "compression_ratio": 1.6779661016949152, "no_speech_prob": 1.221200182044413e-05}, {"id": 31, "seek": 16740, "start": 177.4, "end": 184.88, "text": " And then finally put this text into the target sample output, and we execute this, we see", "tokens": [400, 550, 2721, 829, 341, 2487, 666, 264, 3779, 6889, 5598, 11, 293, 321, 14483, 341, 11, 321, 536], "temperature": 0.0, "avg_logprob": -0.16185367641164294, "compression_ratio": 1.6779661016949152, "no_speech_prob": 1.221200182044413e-05}, {"id": 32, "seek": 16740, "start": 184.88, "end": 191.56, "text": " new actions are executed and the result is fine, looks much better now, hello world and", "tokens": [777, 5909, 366, 17577, 293, 264, 1874, 307, 2489, 11, 1542, 709, 1101, 586, 11, 7751, 1002, 293], "temperature": 0.0, "avg_logprob": -0.16185367641164294, "compression_ratio": 1.6779661016949152, "no_speech_prob": 1.221200182044413e-05}, {"id": 33, "seek": 19156, "start": 191.56, "end": 197.6, "text": " capital letters great, but the boss is still unhappy, he wants to have some localization,", "tokens": [4238, 7825, 869, 11, 457, 264, 5741, 307, 920, 22172, 11, 415, 2738, 281, 362, 512, 2654, 2144, 11], "temperature": 0.0, "avg_logprob": -0.12014557765080379, "compression_ratio": 1.708133971291866, "no_speech_prob": 8.324762166012079e-05}, {"id": 34, "seek": 19156, "start": 197.6, "end": 203.6, "text": " he doesn't want to greet the whole world, he just wants to greet Munich and Brussels,", "tokens": [415, 1177, 380, 528, 281, 12044, 264, 1379, 1002, 11, 415, 445, 2738, 281, 12044, 40601, 293, 38717, 11], "temperature": 0.0, "avg_logprob": -0.12014557765080379, "compression_ratio": 1.708133971291866, "no_speech_prob": 8.324762166012079e-05}, {"id": 35, "seek": 19156, "start": 203.6, "end": 209.24, "text": " and he wants to have it both in a single make file, so what do we have to do now, okay we", "tokens": [293, 415, 2738, 281, 362, 309, 1293, 294, 257, 2167, 652, 3991, 11, 370, 437, 360, 321, 362, 281, 360, 586, 11, 1392, 321], "temperature": 0.0, "avg_logprob": -0.12014557765080379, "compression_ratio": 1.708133971291866, "no_speech_prob": 8.324762166012079e-05}, {"id": 36, "seek": 19156, "start": 209.24, "end": 216.36, "text": " have to basically we have two program variants now, and what should we do in order to reuse", "tokens": [362, 281, 1936, 321, 362, 732, 1461, 21669, 586, 11, 293, 437, 820, 321, 360, 294, 1668, 281, 26225], "temperature": 0.0, "avg_logprob": -0.12014557765080379, "compression_ratio": 1.708133971291866, "no_speech_prob": 8.324762166012079e-05}, {"id": 37, "seek": 21636, "start": 216.36, "end": 223.56, "text": " most of our rules that we already have, we can use a for loop over the location dependent", "tokens": [881, 295, 527, 4474, 300, 321, 1217, 362, 11, 321, 393, 764, 257, 337, 6367, 670, 264, 4914, 12334], "temperature": 0.0, "avg_logprob": -0.11138906478881835, "compression_ratio": 1.6, "no_speech_prob": 0.00016515402239747345}, {"id": 38, "seek": 21636, "start": 223.56, "end": 229.92000000000002, "text": " targets and interpolate the city name into the artifact names as you can see here, so", "tokens": [12911, 293, 44902, 473, 264, 2307, 1315, 666, 264, 34806, 5288, 382, 291, 393, 536, 510, 11, 370], "temperature": 0.0, "avg_logprob": -0.11138906478881835, "compression_ratio": 1.6, "no_speech_prob": 0.00016515402239747345}, {"id": 39, "seek": 21636, "start": 229.92000000000002, "end": 236.44000000000003, "text": " we have now not only a single hello binary, but two hello binaries with dot and the name", "tokens": [321, 362, 586, 406, 787, 257, 2167, 7751, 17434, 11, 457, 732, 7751, 5171, 4889, 365, 5893, 293, 264, 1315], "temperature": 0.0, "avg_logprob": -0.11138906478881835, "compression_ratio": 1.6, "no_speech_prob": 0.00016515402239747345}, {"id": 40, "seek": 23644, "start": 236.44, "end": 247.04, "text": " of the city, and these are our two program variants, and as you can see there is a lot", "tokens": [295, 264, 2307, 11, 293, 613, 366, 527, 732, 1461, 21669, 11, 293, 382, 291, 393, 536, 456, 307, 257, 688], "temperature": 0.0, "avg_logprob": -0.15523136023319128, "compression_ratio": 1.5963855421686748, "no_speech_prob": 2.3905387934064493e-05}, {"id": 41, "seek": 23644, "start": 247.04, "end": 254.28, "text": " of string interpolation coming into our make file and it doesn't make it really readable,", "tokens": [295, 6798, 44902, 399, 1348, 666, 527, 652, 3991, 293, 309, 1177, 380, 652, 309, 534, 49857, 11], "temperature": 0.0, "avg_logprob": -0.15523136023319128, "compression_ratio": 1.5963855421686748, "no_speech_prob": 2.3905387934064493e-05}, {"id": 42, "seek": 23644, "start": 254.28, "end": 259.88, "text": " but we have to do it, because each artifact is associated with a file on the file system", "tokens": [457, 321, 362, 281, 360, 309, 11, 570, 1184, 34806, 307, 6615, 365, 257, 3991, 322, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.15523136023319128, "compression_ratio": 1.5963855421686748, "no_speech_prob": 2.3905387934064493e-05}, {"id": 43, "seek": 25988, "start": 259.88, "end": 266.56, "text": " and this needs to be a unique name, so we have to do it basically, and when we execute", "tokens": [293, 341, 2203, 281, 312, 257, 3845, 1315, 11, 370, 321, 362, 281, 360, 309, 1936, 11, 293, 562, 321, 14483], "temperature": 0.0, "avg_logprob": -0.14224010467529297, "compression_ratio": 1.5340909090909092, "no_speech_prob": 9.113659325521439e-05}, {"id": 44, "seek": 25988, "start": 266.56, "end": 275.68, "text": " it, okay now we get a bit more actions, but it's working, and we see now, okay the output", "tokens": [309, 11, 1392, 586, 321, 483, 257, 857, 544, 5909, 11, 457, 309, 311, 1364, 11, 293, 321, 536, 586, 11, 1392, 264, 5598], "temperature": 0.0, "avg_logprob": -0.14224010467529297, "compression_ratio": 1.5340909090909092, "no_speech_prob": 9.113659325521439e-05}, {"id": 45, "seek": 25988, "start": 275.68, "end": 283.56, "text": " is as required and we greet Munich and Brussels, but the boss is still, I mean he's happy now", "tokens": [307, 382, 4739, 293, 321, 12044, 40601, 293, 38717, 11, 457, 264, 5741, 307, 920, 11, 286, 914, 415, 311, 2055, 586], "temperature": 0.0, "avg_logprob": -0.14224010467529297, "compression_ratio": 1.5340909090909092, "no_speech_prob": 9.113659325521439e-05}, {"id": 46, "seek": 28356, "start": 283.56, "end": 291.28000000000003, "text": " with our output, but now he's unhappy with our implementation, he says that's not maintainable,", "tokens": [365, 527, 5598, 11, 457, 586, 415, 311, 22172, 365, 527, 11420, 11, 415, 1619, 300, 311, 406, 6909, 712, 11], "temperature": 0.0, "avg_logprob": -0.1472370263301965, "compression_ratio": 1.643835616438356, "no_speech_prob": 6.795273657189682e-05}, {"id": 47, "seek": 28356, "start": 291.28000000000003, "end": 295.0, "text": " why do we use a build system from the 70s, use a modern one, they are supposed to do", "tokens": [983, 360, 321, 764, 257, 1322, 1185, 490, 264, 5285, 82, 11, 764, 257, 4363, 472, 11, 436, 366, 3442, 281, 360], "temperature": 0.0, "avg_logprob": -0.1472370263301965, "compression_ratio": 1.643835616438356, "no_speech_prob": 6.795273657189682e-05}, {"id": 48, "seek": 28356, "start": 295.0, "end": 303.96, "text": " much better now, well okay, then let's use Bazel, and this is what it looks like in Bazel,", "tokens": [709, 1101, 586, 11, 731, 1392, 11, 550, 718, 311, 764, 42220, 338, 11, 293, 341, 307, 437, 309, 1542, 411, 294, 42220, 338, 11], "temperature": 0.0, "avg_logprob": -0.1472370263301965, "compression_ratio": 1.643835616438356, "no_speech_prob": 6.795273657189682e-05}, {"id": 49, "seek": 28356, "start": 303.96, "end": 311.0, "text": " so the same application, and as it turns out they are better, but not in all regards, so", "tokens": [370, 264, 912, 3861, 11, 293, 382, 309, 4523, 484, 436, 366, 1101, 11, 457, 406, 294, 439, 14258, 11, 370], "temperature": 0.0, "avg_logprob": -0.1472370263301965, "compression_ratio": 1.643835616438356, "no_speech_prob": 6.795273657189682e-05}, {"id": 50, "seek": 31100, "start": 311.0, "end": 317.36, "text": " they introduce high level concepts like the CC binary and CC library, we don't have to", "tokens": [436, 5366, 1090, 1496, 10392, 411, 264, 12630, 17434, 293, 12630, 6405, 11, 321, 500, 380, 362, 281], "temperature": 0.0, "avg_logprob": -0.19046950731121126, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.00015786453150212765}, {"id": 51, "seek": 31100, "start": 317.36, "end": 324.68, "text": " manually write object file creation and linking, but it's, everything is wrapped now inside", "tokens": [16945, 2464, 2657, 3991, 8016, 293, 25775, 11, 457, 309, 311, 11, 1203, 307, 14226, 586, 1854], "temperature": 0.0, "avg_logprob": -0.19046950731121126, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.00015786453150212765}, {"id": 52, "seek": 31100, "start": 324.68, "end": 335.6, "text": " these high level concept calls, and also our bash calls are wrapped in these general targets,", "tokens": [613, 1090, 1496, 3410, 5498, 11, 293, 611, 527, 46183, 5498, 366, 14226, 294, 613, 2674, 12911, 11], "temperature": 0.0, "avg_logprob": -0.19046950731121126, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.00015786453150212765}, {"id": 53, "seek": 33560, "start": 335.6, "end": 341.92, "text": " but I mean it looks a bit more readable now, but still we have this string interpolation", "tokens": [457, 286, 914, 309, 1542, 257, 857, 544, 49857, 586, 11, 457, 920, 321, 362, 341, 6798, 44902, 399], "temperature": 0.0, "avg_logprob": -0.12574288085266783, "compression_ratio": 1.6401869158878504, "no_speech_prob": 5.05669268022757e-05}, {"id": 54, "seek": 33560, "start": 341.92, "end": 349.0, "text": " here, and the for loops over the city names, and yeah why is it actually like that, why", "tokens": [510, 11, 293, 264, 337, 16121, 670, 264, 2307, 5288, 11, 293, 1338, 983, 307, 309, 767, 411, 300, 11, 983], "temperature": 0.0, "avg_logprob": -0.12574288085266783, "compression_ratio": 1.6401869158878504, "no_speech_prob": 5.05669268022757e-05}, {"id": 55, "seek": 33560, "start": 349.0, "end": 354.76000000000005, "text": " do we need this, I mean it's a modern build system, and the reason is because Bazel also", "tokens": [360, 321, 643, 341, 11, 286, 914, 309, 311, 257, 4363, 1322, 1185, 11, 293, 264, 1778, 307, 570, 42220, 338, 611], "temperature": 0.0, "avg_logprob": -0.12574288085266783, "compression_ratio": 1.6401869158878504, "no_speech_prob": 5.05669268022757e-05}, {"id": 56, "seek": 33560, "start": 354.76000000000005, "end": 363.84000000000003, "text": " associates each artifact with a file on the file system, and yeah, so that's why this", "tokens": [36914, 1184, 34806, 365, 257, 3991, 322, 264, 3991, 1185, 11, 293, 1338, 11, 370, 300, 311, 983, 341], "temperature": 0.0, "avg_logprob": -0.12574288085266783, "compression_ratio": 1.6401869158878504, "no_speech_prob": 5.05669268022757e-05}, {"id": 57, "seek": 36384, "start": 363.84, "end": 370.79999999999995, "text": " basically brings us to an important observation, and this means even modern build systems,", "tokens": [1936, 5607, 505, 281, 364, 1021, 14816, 11, 293, 341, 1355, 754, 4363, 1322, 3652, 11], "temperature": 0.0, "avg_logprob": -0.10647360483805339, "compression_ratio": 1.7067307692307692, "no_speech_prob": 9.146354568656534e-05}, {"id": 58, "seek": 36384, "start": 370.79999999999995, "end": 380.35999999999996, "text": " it's required that you have unique names for your artifacts, and because they basically", "tokens": [309, 311, 4739, 300, 291, 362, 3845, 5288, 337, 428, 24617, 11, 293, 570, 436, 1936], "temperature": 0.0, "avg_logprob": -0.10647360483805339, "compression_ratio": 1.7067307692307692, "no_speech_prob": 9.146354568656534e-05}, {"id": 59, "seek": 36384, "start": 380.35999999999996, "end": 385.91999999999996, "text": " follow a design decision implemented by make in the 70s, and the design decision by make", "tokens": [1524, 257, 1715, 3537, 12270, 538, 652, 294, 264, 5285, 82, 11, 293, 264, 1715, 3537, 538, 652], "temperature": 0.0, "avg_logprob": -0.10647360483805339, "compression_ratio": 1.7067307692307692, "no_speech_prob": 9.146354568656534e-05}, {"id": 60, "seek": 36384, "start": 385.91999999999996, "end": 393.0, "text": " was that each artifact needs to have a fixed location in the file system, well for make", "tokens": [390, 300, 1184, 34806, 2203, 281, 362, 257, 6806, 4914, 294, 264, 3991, 1185, 11, 731, 337, 652], "temperature": 0.0, "avg_logprob": -0.10647360483805339, "compression_ratio": 1.7067307692307692, "no_speech_prob": 9.146354568656534e-05}, {"id": 61, "seek": 39300, "start": 393.0, "end": 399.64, "text": " it was perfectly fine at that time, because there was nothing else or not much different", "tokens": [309, 390, 6239, 2489, 412, 300, 565, 11, 570, 456, 390, 1825, 1646, 420, 406, 709, 819], "temperature": 0.0, "avg_logprob": -0.12607469903417381, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.0001707886258373037}, {"id": 62, "seek": 39300, "start": 399.64, "end": 406.4, "text": " to do in order to determine which part of a program needs to be recomputed, basically", "tokens": [281, 360, 294, 1668, 281, 6997, 597, 644, 295, 257, 1461, 2203, 281, 312, 23334, 2582, 292, 11, 1936], "temperature": 0.0, "avg_logprob": -0.12607469903417381, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.0001707886258373037}, {"id": 63, "seek": 39300, "start": 406.4, "end": 412.88, "text": " to compare timestamps, and for this you need files, so for make this was totally fine,", "tokens": [281, 6794, 49108, 23150, 11, 293, 337, 341, 291, 643, 7098, 11, 370, 337, 652, 341, 390, 3879, 2489, 11], "temperature": 0.0, "avg_logprob": -0.12607469903417381, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.0001707886258373037}, {"id": 64, "seek": 39300, "start": 412.88, "end": 417.52, "text": " but there is actually no reason anymore to do this in modern build systems, because they", "tokens": [457, 456, 307, 767, 572, 1778, 3602, 281, 360, 341, 294, 4363, 1322, 3652, 11, 570, 436], "temperature": 0.0, "avg_logprob": -0.12607469903417381, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.0001707886258373037}, {"id": 65, "seek": 41752, "start": 417.52, "end": 427.0, "text": " anyway isolate their actions in order to avoid getting unwanted dependencies into their builds,", "tokens": [4033, 25660, 641, 5909, 294, 1668, 281, 5042, 1242, 33745, 36606, 666, 641, 15182, 11], "temperature": 0.0, "avg_logprob": -0.12257242202758789, "compression_ratio": 1.7777777777777777, "no_speech_prob": 6.80441371514462e-05}, {"id": 66, "seek": 41752, "start": 427.0, "end": 433.0, "text": " so their actions are executed either in a separate directory or in a container in order", "tokens": [370, 641, 5909, 366, 17577, 2139, 294, 257, 4994, 21120, 420, 294, 257, 10129, 294, 1668], "temperature": 0.0, "avg_logprob": -0.12257242202758789, "compression_ratio": 1.7777777777777777, "no_speech_prob": 6.80441371514462e-05}, {"id": 67, "seek": 41752, "start": 433.0, "end": 439.08, "text": " to better control the dependencies, so when they anyway execute their actions, why don't", "tokens": [281, 1101, 1969, 264, 36606, 11, 370, 562, 436, 4033, 14483, 641, 5909, 11, 983, 500, 380], "temperature": 0.0, "avg_logprob": -0.12257242202758789, "compression_ratio": 1.7777777777777777, "no_speech_prob": 6.80441371514462e-05}, {"id": 68, "seek": 43908, "start": 439.08, "end": 447.71999999999997, "text": " we allow the targets to specify where to put the artifacts, and this is exactly the idea", "tokens": [321, 2089, 264, 12911, 281, 16500, 689, 281, 829, 264, 24617, 11, 293, 341, 307, 2293, 264, 1558], "temperature": 0.0, "avg_logprob": -0.14219070693193855, "compression_ratio": 1.5823529411764705, "no_speech_prob": 1.5921912563499063e-05}, {"id": 69, "seek": 43908, "start": 447.71999999999997, "end": 453.44, "text": " of staging, so basically there is no technical reason for modern build systems for restriction", "tokens": [295, 41085, 11, 370, 1936, 456, 307, 572, 6191, 1778, 337, 4363, 1322, 3652, 337, 29529], "temperature": 0.0, "avg_logprob": -0.14219070693193855, "compression_ratio": 1.5823529411764705, "no_speech_prob": 1.5921912563499063e-05}, {"id": 70, "seek": 43908, "start": 453.44, "end": 462.12, "text": " of to associate each artifact with a file, and instead we propose that we should stop", "tokens": [295, 281, 14644, 1184, 34806, 365, 257, 3991, 11, 293, 2602, 321, 17421, 300, 321, 820, 1590], "temperature": 0.0, "avg_logprob": -0.14219070693193855, "compression_ratio": 1.5823529411764705, "no_speech_prob": 1.5921912563499063e-05}, {"id": 71, "seek": 46212, "start": 462.12, "end": 469.84000000000003, "text": " following this common practice and apply staging instead, and the idea of staging is that an", "tokens": [3480, 341, 2689, 3124, 293, 3079, 41085, 2602, 11, 293, 264, 1558, 295, 41085, 307, 300, 364], "temperature": 0.0, "avg_logprob": -0.12150295575459798, "compression_ratio": 1.6626506024096386, "no_speech_prob": 3.213888703612611e-05}, {"id": 72, "seek": 46212, "start": 469.84000000000003, "end": 477.96, "text": " action can freely select the location of input and output artifacts within its working directory,", "tokens": [3069, 393, 16433, 3048, 264, 4914, 295, 4846, 293, 5598, 24617, 1951, 1080, 1364, 21120, 11], "temperature": 0.0, "avg_logprob": -0.12150295575459798, "compression_ratio": 1.6626506024096386, "no_speech_prob": 3.213888703612611e-05}, {"id": 73, "seek": 46212, "start": 477.96, "end": 484.6, "text": " and this basically introduces a separation between physical and logical paths, inside", "tokens": [293, 341, 1936, 31472, 257, 14634, 1296, 4001, 293, 14978, 14518, 11, 1854], "temperature": 0.0, "avg_logprob": -0.12150295575459798, "compression_ratio": 1.6626506024096386, "no_speech_prob": 3.213888703612611e-05}, {"id": 74, "seek": 48460, "start": 484.6, "end": 492.36, "text": " an action, you only work on the logical paths, and the action can freely decide where to", "tokens": [364, 3069, 11, 291, 787, 589, 322, 264, 14978, 14518, 11, 293, 264, 3069, 393, 16433, 4536, 689, 281], "temperature": 0.0, "avg_logprob": -0.1422046838804733, "compression_ratio": 1.7462686567164178, "no_speech_prob": 2.211099854321219e-05}, {"id": 75, "seek": 48460, "start": 492.36, "end": 501.76000000000005, "text": " put a generated artifact, or where it wants to read an input artifact, and so this is", "tokens": [829, 257, 10833, 34806, 11, 420, 689, 309, 2738, 281, 1401, 364, 4846, 34806, 11, 293, 370, 341, 307], "temperature": 0.0, "avg_logprob": -0.1422046838804733, "compression_ratio": 1.7462686567164178, "no_speech_prob": 2.211099854321219e-05}, {"id": 76, "seek": 48460, "start": 501.76000000000005, "end": 508.56, "text": " basically our proposal to apply staging, and how could it be look like if it's implemented", "tokens": [1936, 527, 11494, 281, 3079, 41085, 11, 293, 577, 727, 309, 312, 574, 411, 498, 309, 311, 12270], "temperature": 0.0, "avg_logprob": -0.1422046838804733, "compression_ratio": 1.7462686567164178, "no_speech_prob": 2.211099854321219e-05}, {"id": 77, "seek": 48460, "start": 508.56, "end": 513.2, "text": " in a build system, so this is basically our project, it's called just build, and this", "tokens": [294, 257, 1322, 1185, 11, 370, 341, 307, 1936, 527, 1716, 11, 309, 311, 1219, 445, 1322, 11, 293, 341], "temperature": 0.0, "avg_logprob": -0.1422046838804733, "compression_ratio": 1.7462686567164178, "no_speech_prob": 2.211099854321219e-05}, {"id": 78, "seek": 51320, "start": 513.2, "end": 522.84, "text": " is a build description that we propose, so we also have the definitions of our targets", "tokens": [307, 257, 1322, 3855, 300, 321, 17421, 11, 370, 321, 611, 362, 264, 21988, 295, 527, 12911], "temperature": 0.0, "avg_logprob": -0.15010894099368324, "compression_ratio": 1.7107843137254901, "no_speech_prob": 5.6421951740048826e-05}, {"id": 79, "seek": 51320, "start": 522.84, "end": 529.36, "text": " here, we also use the high level concepts like binaries and libraries, and in this JSON", "tokens": [510, 11, 321, 611, 764, 264, 1090, 1496, 10392, 411, 5171, 4889, 293, 15148, 11, 293, 294, 341, 31828], "temperature": 0.0, "avg_logprob": -0.15010894099368324, "compression_ratio": 1.7107843137254901, "no_speech_prob": 5.6421951740048826e-05}, {"id": 80, "seek": 51320, "start": 529.36, "end": 535.0400000000001, "text": " syntax the type just selects which kind of artifact or which kind of target it basically", "tokens": [28431, 264, 2010, 445, 3048, 82, 597, 733, 295, 34806, 420, 597, 733, 295, 3779, 309, 1936], "temperature": 0.0, "avg_logprob": -0.15010894099368324, "compression_ratio": 1.7107843137254901, "no_speech_prob": 5.6421951740048826e-05}, {"id": 81, "seek": 51320, "start": 535.0400000000001, "end": 542.8000000000001, "text": " is, and what we can see inside the target definitions our artifacts are named without", "tokens": [307, 11, 293, 437, 321, 393, 536, 1854, 264, 3779, 21988, 527, 24617, 366, 4926, 1553], "temperature": 0.0, "avg_logprob": -0.15010894099368324, "compression_ratio": 1.7107843137254901, "no_speech_prob": 5.6421951740048826e-05}, {"id": 82, "seek": 54280, "start": 542.8, "end": 549.52, "text": " string interpolation, so we don't need to artificially invent unique names for our artifacts,", "tokens": [6798, 44902, 399, 11, 370, 321, 500, 380, 643, 281, 39905, 2270, 7962, 3845, 5288, 337, 527, 24617, 11], "temperature": 0.0, "avg_logprob": -0.13356063549335187, "compression_ratio": 1.5730994152046784, "no_speech_prob": 6.594169099116698e-05}, {"id": 83, "seek": 54280, "start": 549.52, "end": 557.0, "text": " they are just like they are, and also for example here this use target we just access", "tokens": [436, 366, 445, 411, 436, 366, 11, 293, 611, 337, 1365, 510, 341, 764, 3779, 321, 445, 2105], "temperature": 0.0, "avg_logprob": -0.13356063549335187, "compression_ratio": 1.5730994152046784, "no_speech_prob": 6.594169099116698e-05}, {"id": 84, "seek": 54280, "start": 557.0, "end": 564.16, "text": " the hello binary, even though we will have two of these binaries but we just write hello,", "tokens": [264, 7751, 17434, 11, 754, 1673, 321, 486, 362, 732, 295, 613, 5171, 4889, 457, 321, 445, 2464, 7751, 11], "temperature": 0.0, "avg_logprob": -0.13356063549335187, "compression_ratio": 1.5730994152046784, "no_speech_prob": 6.594169099116698e-05}, {"id": 85, "seek": 56416, "start": 564.16, "end": 573.16, "text": " and we don't care, I mean it's staged, and what is created from the depending dependency,", "tokens": [293, 321, 500, 380, 1127, 11, 286, 914, 309, 311, 45178, 11, 293, 437, 307, 2942, 490, 264, 5413, 33621, 11], "temperature": 0.0, "avg_logprob": -0.14311660722244618, "compression_ratio": 1.680952380952381, "no_speech_prob": 2.0770947230630554e-05}, {"id": 86, "seek": 56416, "start": 573.16, "end": 580.24, "text": " it's just staging the final result at that location where we need it, so, but still we", "tokens": [309, 311, 445, 41085, 264, 2572, 1874, 412, 300, 4914, 689, 321, 643, 309, 11, 370, 11, 457, 920, 321], "temperature": 0.0, "avg_logprob": -0.14311660722244618, "compression_ratio": 1.680952380952381, "no_speech_prob": 2.0770947230630554e-05}, {"id": 87, "seek": 56416, "start": 580.24, "end": 586.1999999999999, "text": " have the for loop, this is something what we of course still need to, which basically", "tokens": [362, 264, 337, 6367, 11, 341, 307, 746, 437, 321, 295, 1164, 920, 643, 281, 11, 597, 1936], "temperature": 0.0, "avg_logprob": -0.14311660722244618, "compression_ratio": 1.680952380952381, "no_speech_prob": 2.0770947230630554e-05}, {"id": 88, "seek": 56416, "start": 586.1999999999999, "end": 592.88, "text": " creates two configurations, which is then propagated, I mean this variable that is created", "tokens": [7829, 732, 31493, 11, 597, 307, 550, 12425, 770, 11, 286, 914, 341, 7006, 300, 307, 2942], "temperature": 0.0, "avg_logprob": -0.14311660722244618, "compression_ratio": 1.680952380952381, "no_speech_prob": 2.0770947230630554e-05}, {"id": 89, "seek": 59288, "start": 592.88, "end": 599.2, "text": " here is propagated to all the depending targets, and it propagates until the greed library,", "tokens": [510, 307, 12425, 770, 281, 439, 264, 5413, 12911, 11, 293, 309, 12425, 1024, 1826, 264, 29230, 6405, 11], "temperature": 0.0, "avg_logprob": -0.13224271627572867, "compression_ratio": 1.7352941176470589, "no_speech_prob": 1.4965839000069536e-05}, {"id": 90, "seek": 59288, "start": 599.2, "end": 607.36, "text": " which then reads this configuration variable and injects it into the compile command, so", "tokens": [597, 550, 15700, 341, 11694, 7006, 293, 10711, 82, 309, 666, 264, 31413, 5622, 11, 370], "temperature": 0.0, "avg_logprob": -0.13224271627572867, "compression_ratio": 1.7352941176470589, "no_speech_prob": 1.4965839000069536e-05}, {"id": 91, "seek": 59288, "start": 607.36, "end": 614.24, "text": " this is how a description could look like with staging, and from this description we", "tokens": [341, 307, 577, 257, 3855, 727, 574, 411, 365, 41085, 11, 293, 490, 341, 3855, 321], "temperature": 0.0, "avg_logprob": -0.13224271627572867, "compression_ratio": 1.7352941176470589, "no_speech_prob": 1.4965839000069536e-05}, {"id": 92, "seek": 59288, "start": 614.24, "end": 620.44, "text": " can also generate a so called target graph, which shows the dependencies of the targets,", "tokens": [393, 611, 8460, 257, 370, 1219, 3779, 4295, 11, 597, 3110, 264, 36606, 295, 264, 12911, 11], "temperature": 0.0, "avg_logprob": -0.13224271627572867, "compression_ratio": 1.7352941176470589, "no_speech_prob": 1.4965839000069536e-05}, {"id": 93, "seek": 62044, "start": 620.44, "end": 627.12, "text": " so main depends on all, all depends on two post process because we have two configured", "tokens": [370, 2135, 5946, 322, 439, 11, 439, 5946, 322, 732, 2183, 1399, 570, 321, 362, 732, 30538], "temperature": 0.0, "avg_logprob": -0.15165368104592347, "compression_ratio": 1.7205882352941178, "no_speech_prob": 1.86157449206803e-05}, {"id": 94, "seek": 62044, "start": 627.12, "end": 634.1600000000001, "text": " targets, so the greed library basically is duplicated and this propagates until the post", "tokens": [12911, 11, 370, 264, 29230, 6405, 1936, 307, 1581, 564, 3587, 293, 341, 12425, 1024, 1826, 264, 2183], "temperature": 0.0, "avg_logprob": -0.15165368104592347, "compression_ratio": 1.7205882352941178, "no_speech_prob": 1.86157449206803e-05}, {"id": 95, "seek": 62044, "start": 634.1600000000001, "end": 642.48, "text": " process target, and these target graph or targets are basically high level concepts,", "tokens": [1399, 3779, 11, 293, 613, 3779, 4295, 420, 12911, 366, 1936, 1090, 1496, 10392, 11], "temperature": 0.0, "avg_logprob": -0.15165368104592347, "compression_ratio": 1.7205882352941178, "no_speech_prob": 1.86157449206803e-05}, {"id": 96, "seek": 62044, "start": 642.48, "end": 648.12, "text": " if you want to take a look into which actions are actually executed, you can also generate", "tokens": [498, 291, 528, 281, 747, 257, 574, 666, 597, 5909, 366, 767, 17577, 11, 291, 393, 611, 8460], "temperature": 0.0, "avg_logprob": -0.15165368104592347, "compression_ratio": 1.7205882352941178, "no_speech_prob": 1.86157449206803e-05}, {"id": 97, "seek": 64812, "start": 648.12, "end": 655.28, "text": " an action graph, which shows a data flow, that's why the errors are inverted, and it's", "tokens": [364, 3069, 4295, 11, 597, 3110, 257, 1412, 3095, 11, 300, 311, 983, 264, 13603, 366, 38969, 11, 293, 309, 311], "temperature": 0.0, "avg_logprob": -0.15959923083965594, "compression_ratio": 1.8763440860215055, "no_speech_prob": 2.110824607370887e-05}, {"id": 98, "seek": 64812, "start": 655.28, "end": 662.36, "text": " a bipartite graph, which means so, the ellipses are the artifacts and the rectangles are", "tokens": [257, 28741, 642, 4295, 11, 597, 1355, 370, 11, 264, 8284, 2600, 279, 366, 264, 24617, 293, 264, 24077, 904, 366], "temperature": 0.0, "avg_logprob": -0.15959923083965594, "compression_ratio": 1.8763440860215055, "no_speech_prob": 2.110824607370887e-05}, {"id": 99, "seek": 64812, "start": 662.36, "end": 670.4, "text": " the actions, and yeah, so you can really see the artifact names are basically the same,", "tokens": [264, 5909, 11, 293, 1338, 11, 370, 291, 393, 534, 536, 264, 34806, 5288, 366, 1936, 264, 912, 11], "temperature": 0.0, "avg_logprob": -0.15959923083965594, "compression_ratio": 1.8763440860215055, "no_speech_prob": 2.110824607370887e-05}, {"id": 100, "seek": 64812, "start": 670.4, "end": 676.6, "text": " so post process dot txt and post process dot txt are the same names in both branches,", "tokens": [370, 2183, 1399, 5893, 256, 734, 293, 2183, 1399, 5893, 256, 734, 366, 264, 912, 5288, 294, 1293, 14770, 11], "temperature": 0.0, "avg_logprob": -0.15959923083965594, "compression_ratio": 1.8763440860215055, "no_speech_prob": 2.110824607370887e-05}, {"id": 101, "seek": 67660, "start": 676.6, "end": 682.6, "text": " and since they are staged in logical paths, there's no problem, there's no conflict actually,", "tokens": [293, 1670, 436, 366, 45178, 294, 14978, 14518, 11, 456, 311, 572, 1154, 11, 456, 311, 572, 6596, 767, 11], "temperature": 0.0, "avg_logprob": -0.17693372873159555, "compression_ratio": 1.6126126126126126, "no_speech_prob": 3.424843089305796e-05}, {"id": 102, "seek": 67660, "start": 682.6, "end": 689.96, "text": " this would not work in make, you would have to use unique names, okay, so and what happens", "tokens": [341, 576, 406, 589, 294, 652, 11, 291, 576, 362, 281, 764, 3845, 5288, 11, 1392, 11, 370, 293, 437, 2314], "temperature": 0.0, "avg_logprob": -0.17693372873159555, "compression_ratio": 1.6126126126126126, "no_speech_prob": 3.424843089305796e-05}, {"id": 103, "seek": 67660, "start": 689.96, "end": 695.6, "text": " when we execute it, so we just select the target that we want to build, and there is", "tokens": [562, 321, 14483, 309, 11, 370, 321, 445, 3048, 264, 3779, 300, 321, 528, 281, 1322, 11, 293, 456, 307], "temperature": 0.0, "avg_logprob": -0.17693372873159555, "compression_ratio": 1.6126126126126126, "no_speech_prob": 3.424843089305796e-05}, {"id": 104, "seek": 67660, "start": 695.6, "end": 700.6, "text": " some output coming here, and it says okay we have 12 actions, zero cache hits, of course", "tokens": [512, 5598, 1348, 510, 11, 293, 309, 1619, 1392, 321, 362, 2272, 5909, 11, 4018, 19459, 8664, 11, 295, 1164], "temperature": 0.0, "avg_logprob": -0.17693372873159555, "compression_ratio": 1.6126126126126126, "no_speech_prob": 3.424843089305796e-05}, {"id": 105, "seek": 70060, "start": 700.6, "end": 707.64, "text": " we execute, built at first time, so you can count it's 12 actions, and it's just built,", "tokens": [321, 14483, 11, 3094, 412, 700, 565, 11, 370, 291, 393, 1207, 309, 311, 2272, 5909, 11, 293, 309, 311, 445, 3094, 11], "temperature": 0.0, "avg_logprob": -0.16831641950105367, "compression_ratio": 1.7989949748743719, "no_speech_prob": 2.317190774192568e-05}, {"id": 106, "seek": 70060, "start": 707.64, "end": 713.64, "text": " the artifact is somewhere, I mean it could be in a remote execution, and then it's just", "tokens": [264, 34806, 307, 4079, 11, 286, 914, 309, 727, 312, 294, 257, 8607, 15058, 11, 293, 550, 309, 311, 445], "temperature": 0.0, "avg_logprob": -0.16831641950105367, "compression_ratio": 1.7989949748743719, "no_speech_prob": 2.317190774192568e-05}, {"id": 107, "seek": 70060, "start": 713.64, "end": 719.24, "text": " existing in a remote cus, if you want to have the artifact in your local folder, then you", "tokens": [6741, 294, 257, 8607, 269, 301, 11, 498, 291, 528, 281, 362, 264, 34806, 294, 428, 2654, 10820, 11, 550, 291], "temperature": 0.0, "avg_logprob": -0.16831641950105367, "compression_ratio": 1.7989949748743719, "no_speech_prob": 2.317190774192568e-05}, {"id": 108, "seek": 70060, "start": 719.24, "end": 726.72, "text": " have to install it, and when we execute the installation, we now see okay, again 12 actions,", "tokens": [362, 281, 3625, 309, 11, 293, 562, 321, 14483, 264, 13260, 11, 321, 586, 536, 1392, 11, 797, 2272, 5909, 11], "temperature": 0.0, "avg_logprob": -0.16831641950105367, "compression_ratio": 1.7989949748743719, "no_speech_prob": 2.317190774192568e-05}, {"id": 109, "seek": 72672, "start": 726.72, "end": 732.72, "text": " and also 12 cache hits, because everything is known already, and then the file is in", "tokens": [293, 611, 2272, 19459, 8664, 11, 570, 1203, 307, 2570, 1217, 11, 293, 550, 264, 3991, 307, 294], "temperature": 0.0, "avg_logprob": -0.09869797650505514, "compression_ratio": 1.6794258373205742, "no_speech_prob": 1.5437368347193114e-05}, {"id": 110, "seek": 72672, "start": 732.72, "end": 740.52, "text": " your local directory actually, and we see the content is fine, and we even don't need", "tokens": [428, 2654, 21120, 767, 11, 293, 321, 536, 264, 2701, 307, 2489, 11, 293, 321, 754, 500, 380, 643], "temperature": 0.0, "avg_logprob": -0.09869797650505514, "compression_ratio": 1.6794258373205742, "no_speech_prob": 1.5437368347193114e-05}, {"id": 111, "seek": 72672, "start": 740.52, "end": 744.76, "text": " to store it into our local directory, we can just print the content of an artifact by the", "tokens": [281, 3531, 309, 666, 527, 2654, 21120, 11, 321, 393, 445, 4482, 264, 2701, 295, 364, 34806, 538, 264], "temperature": 0.0, "avg_logprob": -0.09869797650505514, "compression_ratio": 1.6794258373205742, "no_speech_prob": 1.5437368347193114e-05}, {"id": 112, "seek": 72672, "start": 744.76, "end": 754.8000000000001, "text": " minus p option, if we take staging seriously, we have also very nice implications, and one", "tokens": [3175, 280, 3614, 11, 498, 321, 747, 41085, 6638, 11, 321, 362, 611, 588, 1481, 16602, 11, 293, 472], "temperature": 0.0, "avg_logprob": -0.09869797650505514, "compression_ratio": 1.6794258373205742, "no_speech_prob": 1.5437368347193114e-05}, {"id": 113, "seek": 75480, "start": 754.8, "end": 761.0, "text": " is for example, assume that you have an external source code that you want to use in your project,", "tokens": [307, 337, 1365, 11, 6552, 300, 291, 362, 364, 8320, 4009, 3089, 300, 291, 528, 281, 764, 294, 428, 1716, 11], "temperature": 0.0, "avg_logprob": -0.14410622336647727, "compression_ratio": 1.8949579831932772, "no_speech_prob": 3.477994687273167e-05}, {"id": 114, "seek": 75480, "start": 761.0, "end": 765.92, "text": " and you want to apply some patches on it, and yeah how do you do it, normally you would", "tokens": [293, 291, 528, 281, 3079, 512, 26531, 322, 309, 11, 293, 1338, 577, 360, 291, 360, 309, 11, 5646, 291, 576], "temperature": 0.0, "avg_logprob": -0.14410622336647727, "compression_ratio": 1.8949579831932772, "no_speech_prob": 3.477994687273167e-05}, {"id": 115, "seek": 75480, "start": 765.92, "end": 771.04, "text": " copy it, apply the patch, because you don't want to modify the original source code, and", "tokens": [5055, 309, 11, 3079, 264, 9972, 11, 570, 291, 500, 380, 528, 281, 16927, 264, 3380, 4009, 3089, 11, 293], "temperature": 0.0, "avg_logprob": -0.14410622336647727, "compression_ratio": 1.8949579831932772, "no_speech_prob": 3.477994687273167e-05}, {"id": 116, "seek": 75480, "start": 771.04, "end": 777.16, "text": " yeah this results in a lot of maintenance problems, but with staging this can be done", "tokens": [1338, 341, 3542, 294, 257, 688, 295, 11258, 2740, 11, 457, 365, 41085, 341, 393, 312, 1096], "temperature": 0.0, "avg_logprob": -0.14410622336647727, "compression_ratio": 1.8949579831932772, "no_speech_prob": 3.477994687273167e-05}, {"id": 117, "seek": 75480, "start": 777.16, "end": 784.64, "text": " much easier with logical in place patching, you just apply the patch on the logical path,", "tokens": [709, 3571, 365, 14978, 294, 1081, 9972, 278, 11, 291, 445, 3079, 264, 9972, 322, 264, 14978, 3100, 11], "temperature": 0.0, "avg_logprob": -0.14410622336647727, "compression_ratio": 1.8949579831932772, "no_speech_prob": 3.477994687273167e-05}, {"id": 118, "seek": 78464, "start": 784.64, "end": 792.08, "text": " and yeah, then let's take a look how this could look like, so we have now put our example", "tokens": [293, 1338, 11, 550, 718, 311, 747, 257, 574, 577, 341, 727, 574, 411, 11, 370, 321, 362, 586, 829, 527, 1365], "temperature": 0.0, "avg_logprob": -0.1281873963095925, "compression_ratio": 1.6265060240963856, "no_speech_prob": 3.587420724215917e-05}, {"id": 119, "seek": 78464, "start": 792.08, "end": 801.1999999999999, "text": " files in a third party directory outside of our project, and a directory with the patches,", "tokens": [7098, 294, 257, 2636, 3595, 21120, 2380, 295, 527, 1716, 11, 293, 257, 21120, 365, 264, 26531, 11], "temperature": 0.0, "avg_logprob": -0.1281873963095925, "compression_ratio": 1.6265060240963856, "no_speech_prob": 3.587420724215917e-05}, {"id": 120, "seek": 78464, "start": 801.1999999999999, "end": 807.6, "text": " and the patch just modifies the hello greeting phrase with a bonjour greeting phrase, and", "tokens": [293, 264, 9972, 445, 1072, 11221, 264, 7751, 28174, 9535, 365, 257, 4428, 8696, 28174, 9535, 11, 293], "temperature": 0.0, "avg_logprob": -0.1281873963095925, "compression_ratio": 1.6265060240963856, "no_speech_prob": 3.587420724215917e-05}, {"id": 121, "seek": 80760, "start": 807.6, "end": 814.6800000000001, "text": " we just have to add a single block, a single block into our build description, which points", "tokens": [321, 445, 362, 281, 909, 257, 2167, 3461, 11, 257, 2167, 3461, 666, 527, 1322, 3855, 11, 597, 2793], "temperature": 0.0, "avg_logprob": -0.1427132847544911, "compression_ratio": 1.7661691542288558, "no_speech_prob": 1.2799540854757652e-05}, {"id": 122, "seek": 80760, "start": 814.6800000000001, "end": 821.24, "text": " to our patch and to the file that needs to be patched, and that's it, and the resulting", "tokens": [281, 527, 9972, 293, 281, 264, 3991, 300, 2203, 281, 312, 9972, 292, 11, 293, 300, 311, 309, 11, 293, 264, 16505], "temperature": 0.0, "avg_logprob": -0.1427132847544911, "compression_ratio": 1.7661691542288558, "no_speech_prob": 1.2799540854757652e-05}, {"id": 123, "seek": 80760, "start": 821.24, "end": 826.8000000000001, "text": " target graph just shows, okay we have now one more target here, the hellocpp source", "tokens": [3779, 4295, 445, 3110, 11, 1392, 321, 362, 586, 472, 544, 3779, 510, 11, 264, 7751, 66, 427, 4009], "temperature": 0.0, "avg_logprob": -0.1427132847544911, "compression_ratio": 1.7661691542288558, "no_speech_prob": 1.2799540854757652e-05}, {"id": 124, "seek": 80760, "start": 826.8000000000001, "end": 834.44, "text": " target, and the other, the binaries are depending on this extra target now, and also in the", "tokens": [3779, 11, 293, 264, 661, 11, 264, 5171, 4889, 366, 5413, 322, 341, 2857, 3779, 586, 11, 293, 611, 294, 264], "temperature": 0.0, "avg_logprob": -0.1427132847544911, "compression_ratio": 1.7661691542288558, "no_speech_prob": 1.2799540854757652e-05}, {"id": 125, "seek": 83444, "start": 834.44, "end": 840.4000000000001, "text": " action graph you can see that there is just a single new action actually added here to", "tokens": [3069, 4295, 291, 393, 536, 300, 456, 307, 445, 257, 2167, 777, 3069, 767, 3869, 510, 281], "temperature": 0.0, "avg_logprob": -0.15437404588721265, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.878162897308357e-05}, {"id": 126, "seek": 83444, "start": 840.4000000000001, "end": 847.6, "text": " the action graph, where earlier was hellocpp is now the patched version of hellocpp, and", "tokens": [264, 3069, 4295, 11, 689, 3071, 390, 7751, 66, 427, 307, 586, 264, 9972, 292, 3037, 295, 7751, 66, 427, 11, 293], "temperature": 0.0, "avg_logprob": -0.15437404588721265, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.878162897308357e-05}, {"id": 127, "seek": 83444, "start": 847.6, "end": 853.08, "text": " it's just another input, and if something is changed in the patch all dependent targets", "tokens": [309, 311, 445, 1071, 4846, 11, 293, 498, 746, 307, 3105, 294, 264, 9972, 439, 12334, 12911], "temperature": 0.0, "avg_logprob": -0.15437404588721265, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.878162897308357e-05}, {"id": 128, "seek": 83444, "start": 853.08, "end": 863.2, "text": " are executed, okay if we execute it we see bonjour Munich, bonjour Brussels, works well,", "tokens": [366, 17577, 11, 1392, 498, 321, 14483, 309, 321, 536, 4428, 8696, 40601, 11, 4428, 8696, 38717, 11, 1985, 731, 11], "temperature": 0.0, "avg_logprob": -0.15437404588721265, "compression_ratio": 1.6842105263157894, "no_speech_prob": 3.878162897308357e-05}, {"id": 129, "seek": 86320, "start": 863.2, "end": 868.5200000000001, "text": " okay so quickly to summarize my talk, as we have seen there are some inconvenient habits", "tokens": [1392, 370, 2661, 281, 20858, 452, 751, 11, 382, 321, 362, 1612, 456, 366, 512, 46196, 14100], "temperature": 0.0, "avg_logprob": -0.11536477860950288, "compression_ratio": 1.6851851851851851, "no_speech_prob": 9.576618322171271e-05}, {"id": 130, "seek": 86320, "start": 868.5200000000001, "end": 873.88, "text": " in modern build systems, and yeah we propose to apply staging instead to make build systems", "tokens": [294, 4363, 1322, 3652, 11, 293, 1338, 321, 17421, 281, 3079, 41085, 2602, 281, 652, 1322, 3652], "temperature": 0.0, "avg_logprob": -0.11536477860950288, "compression_ratio": 1.6851851851851851, "no_speech_prob": 9.576618322171271e-05}, {"id": 131, "seek": 86320, "start": 873.88, "end": 880.34, "text": " better, and you will have a couple of advantages if you apply staging, and yeah which are written", "tokens": [1101, 11, 293, 291, 486, 362, 257, 1916, 295, 14906, 498, 291, 3079, 41085, 11, 293, 1338, 597, 366, 3720], "temperature": 0.0, "avg_logprob": -0.11536477860950288, "compression_ratio": 1.6851851851851851, "no_speech_prob": 9.576618322171271e-05}, {"id": 132, "seek": 86320, "start": 880.34, "end": 887.0, "text": " here, and this is not only a concept it's already implemented, so if you want to take", "tokens": [510, 11, 293, 341, 307, 406, 787, 257, 3410, 309, 311, 1217, 12270, 11, 370, 498, 291, 528, 281, 747], "temperature": 0.0, "avg_logprob": -0.11536477860950288, "compression_ratio": 1.6851851851851851, "no_speech_prob": 9.576618322171271e-05}, {"id": 133, "seek": 88700, "start": 887.0, "end": 894.8, "text": " a look into our project please come by, and yeah now the stage is yours, thanks for your", "tokens": [257, 574, 666, 527, 1716, 1767, 808, 538, 11, 293, 1338, 586, 264, 3233, 307, 6342, 11, 3231, 337, 428], "temperature": 0.0, "avg_logprob": -0.4031898664391559, "compression_ratio": 1.432, "no_speech_prob": 0.0004446100792847574}, {"id": 134, "seek": 88700, "start": 894.8, "end": 915.2, "text": " attention, are there are any questions, there is a question, no I think it will repeat the", "tokens": [3202, 11, 366, 456, 366, 604, 1651, 11, 456, 307, 257, 1168, 11, 572, 286, 519, 309, 486, 7149, 264], "temperature": 0.0, "avg_logprob": -0.4031898664391559, "compression_ratio": 1.432, "no_speech_prob": 0.0004446100792847574}, {"id": 135, "seek": 91520, "start": 915.2, "end": 934.08, "text": " question, you heard the question, yeah exactly we do actually content addressable storage,", "tokens": [1168, 11, 291, 2198, 264, 1168, 11, 1338, 2293, 321, 360, 767, 2701, 2985, 712, 6725, 11], "temperature": 0.0, "avg_logprob": -0.29744131972150106, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001248507178388536}, {"id": 136, "seek": 91520, "start": 934.08, "end": 940.32, "text": " so repeat the question please, okay the question was how do we identify which source code we", "tokens": [370, 7149, 264, 1168, 1767, 11, 1392, 264, 1168, 390, 577, 360, 321, 5876, 597, 4009, 3089, 321], "temperature": 0.0, "avg_logprob": -0.29744131972150106, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001248507178388536}, {"id": 137, "seek": 94032, "start": 940.32, "end": 947.96, "text": " actually need for the staging, and yeah we apply content addressable storage, so we", "tokens": [767, 643, 337, 264, 41085, 11, 293, 1338, 321, 3079, 2701, 2985, 712, 6725, 11, 370, 321], "temperature": 0.0, "avg_logprob": -0.16746238126593121, "compression_ratio": 1.55625, "no_speech_prob": 0.00033546279883012176}, {"id": 138, "seek": 94032, "start": 947.96, "end": 952.7600000000001, "text": " determine a hash basically from all of our source codes, and then also we know what has", "tokens": [6997, 257, 22019, 1936, 490, 439, 295, 527, 4009, 14211, 11, 293, 550, 611, 321, 458, 437, 575], "temperature": 0.0, "avg_logprob": -0.16746238126593121, "compression_ratio": 1.55625, "no_speech_prob": 0.00033546279883012176}, {"id": 139, "seek": 94032, "start": 952.7600000000001, "end": 970.2, "text": " been changed or not, any other questions, yeah so the question was whether we", "tokens": [668, 3105, 420, 406, 11, 604, 661, 1651, 11, 1338, 370, 264, 1168, 390, 1968, 321], "temperature": 0.0, "avg_logprob": -0.16746238126593121, "compression_ratio": 1.55625, "no_speech_prob": 0.00033546279883012176}, {"id": 140, "seek": 97020, "start": 970.2, "end": 979.08, "text": " use the jason syntax, yeah no we decided for jason, and yeah it's jason is used as our", "tokens": [764, 264, 361, 1258, 28431, 11, 1338, 572, 321, 3047, 337, 361, 1258, 11, 293, 1338, 309, 311, 361, 1258, 307, 1143, 382, 527], "temperature": 0.0, "avg_logprob": -0.2446701725323995, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0005303201614879072}, {"id": 141, "seek": 97020, "start": 979.08, "end": 994.4000000000001, "text": " build description syntax, okay so how many developers are working on it, and is it widely", "tokens": [1322, 3855, 28431, 11, 1392, 370, 577, 867, 8849, 366, 1364, 322, 309, 11, 293, 307, 309, 13371], "temperature": 0.0, "avg_logprob": -0.2446701725323995, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0005303201614879072}, {"id": 142, "seek": 99440, "start": 994.4, "end": 1002.1999999999999, "text": " used, a very good question actually we recently got open sourced, and we are in total five", "tokens": [1143, 11, 257, 588, 665, 1168, 767, 321, 3938, 658, 1269, 11006, 1232, 11, 293, 321, 366, 294, 3217, 1732], "temperature": 0.0, "avg_logprob": -0.12077468917483375, "compression_ratio": 1.7427184466019416, "no_speech_prob": 4.1297884308733046e-05}, {"id": 143, "seek": 99440, "start": 1002.1999999999999, "end": 1010.04, "text": " developers currently working on it, and yeah but we really try to implement the new concepts", "tokens": [8849, 4362, 1364, 322, 309, 11, 293, 1338, 457, 321, 534, 853, 281, 4445, 264, 777, 10392], "temperature": 0.0, "avg_logprob": -0.12077468917483375, "compression_ratio": 1.7427184466019416, "no_speech_prob": 4.1297884308733046e-05}, {"id": 144, "seek": 99440, "start": 1010.04, "end": 1015.52, "text": " into this build system, and make it a really sound build system compared to other modern", "tokens": [666, 341, 1322, 1185, 11, 293, 652, 309, 257, 534, 1626, 1322, 1185, 5347, 281, 661, 4363], "temperature": 0.0, "avg_logprob": -0.12077468917483375, "compression_ratio": 1.7427184466019416, "no_speech_prob": 4.1297884308733046e-05}, {"id": 145, "seek": 99440, "start": 1015.52, "end": 1020.92, "text": " build systems, and yeah so please just take a look at our project, and there is a nice", "tokens": [1322, 3652, 11, 293, 1338, 370, 1767, 445, 747, 257, 574, 412, 527, 1716, 11, 293, 456, 307, 257, 1481], "temperature": 0.0, "avg_logprob": -0.12077468917483375, "compression_ratio": 1.7427184466019416, "no_speech_prob": 4.1297884308733046e-05}, {"id": 146, "seek": 102092, "start": 1020.92, "end": 1029.28, "text": " tutorial also, which well everything explains nicely, and hope to see you there, okay thank", "tokens": [7073, 611, 11, 597, 731, 1203, 13948, 9594, 11, 293, 1454, 281, 536, 291, 456, 11, 1392, 1309], "temperature": 0.0, "avg_logprob": -0.3155828822742809, "compression_ratio": 1.1518987341772151, "no_speech_prob": 0.0005749949486926198}, {"id": 147, "seek": 102928, "start": 1029.28, "end": 1052.6399999999999, "text": " you for the talk, thank you, goodbye, thank you for coming.", "tokens": [50364, 291, 337, 264, 751, 11, 1309, 291, 11, 12084, 11, 1309, 291, 337, 1348, 13, 51532], "temperature": 0.2, "avg_logprob": -0.5300122367011176, "compression_ratio": 1.1132075471698113, "no_speech_prob": 0.0013926911633461714}], "language": "en"}