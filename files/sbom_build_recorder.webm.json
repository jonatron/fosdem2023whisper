{"text": " So this is a presentation, we're starting now actually a new set of presentations in the dev room, not about completely S-bombs but about information that gets inside S-bombs and you'll be hearing more about it. So this is a presentation about a system to capture detailed information about building and the work, I mean almost all of the work happened by thirties and so I was just, yeah, you know, explaining what has to be done, deciding the problem. So we'll be going through a very typical agenda, you know, what we're trying to solve, how we solve it, how we solve it and what was not solved and what we're going to do. This happened as a GSOC project, Google Summer of Project last year of the GIFOS organization which is an umbrella organization for open source in Greece and we have representatives there. Right, I'm not going to be reading the whole slide, you can read it and you can see it there. But they're an umbrella organization that they're looking over open source development in Greece and they are, have been participated to GSOC for many years now and one of the project was the wonderful that Thottis did, right. So let's start with the basics, what are we trying to solve, right? There are different names for what we're trying to solve, some people call it origin, some call it providence or pedigree or things, essentially if we have a binary file and I'm talking when I say binary I mean an executable or a library, not an image, right, or a PDF but an object file, right, how was this created, right, what are the sources that were used in order to create this binary, right, what was the process that was used in order to create that, essentially these two things, right, the goal is to have extra information and meta information about all this stuff and so in the end you know exactly what information is inside the binary, right, or was used to create it, right. So think of it very simplistically, you know, if I have a command that builds a binary like a compiler that gets a source file and generates an executable, I want to record, okay, there was this process called CC and it read the wonderful file in C and it produces an executable, right, that's what we want to solve. And then it gets tricky because as you can imagine, you know, okay, we're not obviously looking at only things that are specified in the command line, right. So when you do CC, the hello world dot C, maybe it includes the file, right, you see language has include, so and this might be significant, it will definitely be significant, right, so it might include, slash yourself, slash include, slash stdio dot h, so I need to record that this file was also used in order to produce this binary, right, and in the same way CC is just a program, I cannot just record the name because the name does not mean anything, this is definitely a file and maybe it uses other linked libraries in order to do that and when you produce the final executable, definitely it might include system libraries and you want to record all this, right. So we're not talking about, you know, parsing the command line and seeing the three files mentioned there, we want to record everything happening in there and obviously the command may not be explicit, it might just be make, right, and you want to record everything happening with this build command, right, is the problem clear, has anyone else, has this problem? So the project, the whole project was okay, let's build something like that and how do you create a project, you say what I want to achieve and this is a functional specification, right, so we want a minimal interface, I don't want to tell developers how you have to change the compiler in order to do that and I mean the first idea would be to change the compiler but yeah, let's try to make it minimal, so ideally no changes to the command at all, right, and I want to record the files being created or written, the files being read or the process is being run, so for each of the files I want to know the name, I want to know the full path because there might be difference and then because I care about the, actually the content, I want the hash because the same file can be in different places with the same hash so I have to know what it is and you know, extra nice information, the size of the file, mode of the file and stuff like that, I don't care, for every process that runs I want to know okay, what was the process, what were the arguments, what was the environment because as you probably know, every process reads may be different according to the environment that it finds, yeah okay, start and end times would be useful and stuff like that, right, so this is the information that, this is the function specification, this is our wonderful problem, right, and then 40 sat down and worked, well no no wait, you'll take the mic, this is, well he's not engineer yet, he will become, can you hear me now, well to tackle this problem we created the command line tool named build recorder, which you can see right here, build underscore recorder, which records information about the build on Linux, use it, this is rather simple, all you have to do is prefix your build command, whatever that is, make gcc, java compiler, with the name of the executable, build recorder runs transparently in the background while your build is running, you don't need to change anything in terms of your configuration, your source files or even your build system, you can literally pick any project you like at this point in time, run with build recorder and it should run, if it doesn't please file a bug report, now as you can see build recorder, build recorder stores all of that information in an output file by default named the build does recorder dot out, but as you can see you can use the does so option to actually supply an alternative file name, but what does it actually record, well pretty much everything we talked about in the functional specification, for its file we have a list of attributes, its name, its size, its sex sum of its contents as well as its absolute path, similarly for each process we store its command line with all its arguments, a start and end time stamp as well as the environment, we also store a list of relationships, namely a process creates a process that is by forking or cloning or any of their variants, as well as a process opens a file for reading, a process opens a file for writing or some processes are associated with executables, for example if we were to run make, the system would probably run the file at slash user slash bin slash make, we want to record that as well, now all of this information is stored in the output file in RTF turtle format, class is being processed in file and all of the attributes as well as the relationships been the predicates, this is an example, for example we have a process ID 1 which is the initial compilation process, imagine gcc-fusy, it starts at the current time stamp, we have another process which is a preprocessor, the c preprocessor, it starts at another time stamp, we specify that the initial compiler actually created the preprocessor unit and then we have the fact that the we have a file f1 foo.c which should be specified that ah pid2 reads f1, the preprocessor opens the file foo.c which has size 100 and the random has of zeros, we have another f2 which is a temporary that the compiler might use, which as we can see the process number two actually writes on this, we have another process, the classical cc which merges those files together the object file, yeah that's a general idea I guess, well how is it implemented, how does it support all of those languages, well the basic idea is that we basically want to record all of the files and processes that a process uses and now if we think about it all processes and files are actually handled using system calls, so if we were to look at the system calls a process makes, we could see all of the files and processes that it uses, for example if we look at the open family of system calls, open create and its variants, we can easily extract the name as well as the access mode, on the same note for process all we have to do is trace, fork, clone and its variants as well as the execution system calls to actually see the process ID and the executable files, now from the information that we extracted from these two we can actually get even more information like the command line, the environment, a link to a file which from there we can get the size that has in the absolute path, yeah all of this happens on linux, so we basically just need a way to trace system calls, under linux this is a fairly straightforward problem, we use pitch-race which directly copy and paste it from the command line, it is primarily used to implement breakpoint debugging system calls tracing, now that's it, it's a very simple program, no, for the duration of our project, okay so photos run through the slides that did implement it, so we have lots of time now, so it's not perfect it has issues right, so let's start discussing, you got the major idea of how it works right, what are the issues, the main two big buckets of issues are the real complexity and performance right, so real complexity, remember that we said you know it's a compiler that just reads a file and creates an executable that was this wonderful diagram first, it's real life is not that simple right, so on the right hand side you see a more typical ideal again compiler, so when you have a compiler it actually calls three different processes right, you call the first one the first pass that reads the C file and creates an assembly file and then you call the assembler that reads the assembly and creates an object file and then you have the linker loader that reads the object file and creates an executable right, so this is a very abstracted and ideal world situation, we do not, real world is nothing like that, real world may be like that if you have you know done your compiler courses and you have seen the different passes of compiler and stuff like that and then you go to the real world where the hello world which is just you know print hello world dot c in current Linux is this one right, so I'm not going to be explaining every file in that one but this is just you know the three lines of main hello world print hello world and if you compile it with gcc explicit, so you see there are, what can I say, lots of include files been included, this is the first step of compiler right, the compiler first step right, so it you think that it will only read hello world dot c but you have a hash include in order to include the print f definition, so and this include unfortunately includes you know std def and libc header start dot h and lots of other different files and all these are files that have been read by the first process and then it creates something else which I'm not sure where it is somewhere or so it creates the temporary files, it creates the assembly there if you can see and then it creates the object files and in order to create the final executable lots of libraries have to be included right and this is the library is being included in the executable right and then we have the other set of things that in order to run cc one which is an executable so a file in the file system right, you have to load dynamically a number of other libraries that this executable depends on, so you have to record all these as well because again you have to have an accurate record of everything being used right, so yeah even the hello world example is complex right and you create and record lots of files and processes for that one which means oh and a lot of them are going to be reused again and again and again right so when you had for example to compile two different files right they will both include for example stdi.h right and ideally you don't want to redo, you don't want to have another record another box here for the second instance of the same file on the other hand it might not be the second instance of the same file because something might have changed right while you're running somebody else is installing a new compiler and it messes up all your binaries right and it's different binaries in the first run on the second run and all this stuff so this brings us to having to do it efficiently, so you're doing performance. Well performance isn't great at the current moment I mean we have to stop and restart the process multiple times using ptrace like you stop the process you read an entire file from disk you hash it thank you and then you restart the process this is relatively expensive as you can imagine the current profiling shows like when I built one and my system normally took nine minutes with build recorded it took 36 minutes so yeah it depends on your hardware your hard disk pretty much but the good news are that there's a lot of room from improvements because first of all we haven't optimized anything we're using plain arrays we will be switching them with lookup tables so we expect massive performance gain from this in fact when I tried the hash mapping limitation we dropped this to 22 minutes so that's optimistic and another thing to mention is that ptrace actually makes a multi-threaded process run as a single thread which is an issue so if you run for example make dustj8 you won't actually get the performance benefits of multiple threads we have plans to change that as well lots of changes need to be made in fact we proposed it as another project for GSOC for this summer and yeah that's it pretty much we hope to see an improvement we can't really tell how what at the end the overhead shall be like how much we can improve build recorder but we will get there now regarding future work pretty much we approve performance we plan to handle more programming systems I mean you can use it with any programming language you want but if I was to for example compile a project in Java using a build system like Maven Maven has web dependencies it downloads packages from repositories so ideally we would like to also record those repositories those URLs this is another proposed project for the next GSOC and next we have porting it to non-linux systems like other unixes net bsd free bsd the list goes on the one thing that wasn't mentioned is that build recorder at the current time only works with Linux kernels of version 5.3 plus reasons being reason being that we are using some system calls that make it run on every architecture so you can build it on a Raspberry Pi or any architecture of your like any architecture that Linux supports in expense of not having support for prior versions that was us thank you this is the url yes but we also have a QR code if you do not trust your code you don't know you're going to be a re-crow right yeah this is not the same url so we're plenty enough time questions right so the question was how do you know when to hash the file because when you open it for writing you have to know when it the modification ends and then you should hash the result that's correct and the answer is well we have the file when we find the closed system call you wait for all modifications to happen and then upon the closed system call the process is stopped so all the stuff is in there the virtual memory and the list goes on so you have the file at that time we also have the file when we open the file to see if it was seen before so we can have a lot of nice graph in fact the graph is just a dependency graph in a like a semantic web as one makes sense nice so the question was how do we consume this we produce all this information and how is this consumed and the answer is this is a build recorder it just records here's the information we we have we do not consume it at all it might be used to create to enter it into an s-bomb or something like that that's completely out of this this is just recording all this information it's out of the scope of this project yeah let's see sorry have we tried converting the data to svdx similar question to that one no we just record build this is a build recorder right another tool might read this wonderful output and create whatever they want it's way on the back the question is have we explored ebb ebbf ebbf whatever you you know what i'm talking about yet the answer is no no not yet sorry oh yeah sure so the question is what's the problem with maven that we said that it's going to be handled in the future yeah on this level maven works the same right so we can't record the information but we will just be recording hey a jar file was just been used we would like ideally to record because maven already downloaded it but we're just tracing the file system system calls right so ideally would like also to record the information hey we're downloading from this location this jar file we put it there and then we use it right on the level that we're using it we can record it right now sorry go ahead so i missed you sorry the question is do we distinguish between modifications to a file or completely new created file and written and the answer is well if we did that the performance would be even worse you can actually do it you can actually add another handler that checks for write system calls and has the file every time but imagine if you had to has the file every time someone calls right i don't want to okay the comment was that there was a yesterday talk in the golden room that they showed using ebpf instead of ptrace for a similar work and performance was great something to explore yes go ahead the question is how does this compare to scan code trace code that supposed doing the same thing we have not measured it for that i didn't even know that you know sorry oh if it runs for this race it's yeah it's the same as trace race we don't any other questions wow the question was what does it happen when you run it while building a container you mean or so again remember it just records it just records all the system calls right into the disk right so when you run it in the while you do docker build it will record all the files being used in order so if you do copy things it will record everything being copied into the layer right stuff like that yeah go ahead to be honest the command doesn't have to be a build command you can literally plug in anything in there ls or whatever i mean we are not supporting it we can promise that we will be supporting it in the future but you can do that so anything you can imagine it will run docker it will probably record that docker docker was called docker will still run all those dependencies it will still try to compile it will still link against all those libraries which is anyways so yeah any thoughts about going off off linux to uh windows we are at an open source conference repeat the question ah yes they asked if we're planning to implement something like this on windows well no first of all first of all it's hard the idea the idea would be great if i have developers who can do that and know the corresponding things magic to do uh in windows pr's welcome it's an entirely different process you don't have to all the system goals and other unixes we can work with that but there must be something on windows but i don't know no okay thank you you", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.64, "text": " So this is a presentation, we're starting now actually a new set of presentations in", "tokens": [50364, 407, 341, 307, 257, 5860, 11, 321, 434, 2891, 586, 767, 257, 777, 992, 295, 18964, 294, 50996], "temperature": 0.0, "avg_logprob": -0.2249554934566968, "compression_ratio": 1.7283236994219653, "no_speech_prob": 0.22295299172401428}, {"id": 1, "seek": 0, "start": 12.64, "end": 19.44, "text": " the dev room, not about completely S-bombs but about information that gets inside S-bombs", "tokens": [50996, 264, 1905, 1808, 11, 406, 466, 2584, 318, 12, 65, 298, 929, 457, 466, 1589, 300, 2170, 1854, 318, 12, 65, 298, 929, 51336], "temperature": 0.0, "avg_logprob": -0.2249554934566968, "compression_ratio": 1.7283236994219653, "no_speech_prob": 0.22295299172401428}, {"id": 2, "seek": 0, "start": 19.44, "end": 21.64, "text": " and you'll be hearing more about it.", "tokens": [51336, 293, 291, 603, 312, 4763, 544, 466, 309, 13, 51446], "temperature": 0.0, "avg_logprob": -0.2249554934566968, "compression_ratio": 1.7283236994219653, "no_speech_prob": 0.22295299172401428}, {"id": 3, "seek": 0, "start": 21.64, "end": 28.44, "text": " So this is a presentation about a system to capture detailed information about building", "tokens": [51446, 407, 341, 307, 257, 5860, 466, 257, 1185, 281, 7983, 9942, 1589, 466, 2390, 51786], "temperature": 0.0, "avg_logprob": -0.2249554934566968, "compression_ratio": 1.7283236994219653, "no_speech_prob": 0.22295299172401428}, {"id": 4, "seek": 2844, "start": 28.44, "end": 36.96, "text": " and the work, I mean almost all of the work happened by thirties and so I was just, yeah,", "tokens": [50364, 293, 264, 589, 11, 286, 914, 1920, 439, 295, 264, 589, 2011, 538, 258, 2498, 530, 293, 370, 286, 390, 445, 11, 1338, 11, 50790], "temperature": 0.0, "avg_logprob": -0.24241906469994848, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.01933913864195347}, {"id": 5, "seek": 2844, "start": 36.96, "end": 41.480000000000004, "text": " you know, explaining what has to be done, deciding the problem.", "tokens": [50790, 291, 458, 11, 13468, 437, 575, 281, 312, 1096, 11, 17990, 264, 1154, 13, 51016], "temperature": 0.0, "avg_logprob": -0.24241906469994848, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.01933913864195347}, {"id": 6, "seek": 2844, "start": 41.480000000000004, "end": 48.6, "text": " So we'll be going through a very typical agenda, you know, what we're trying to solve,", "tokens": [51016, 407, 321, 603, 312, 516, 807, 257, 588, 7476, 9829, 11, 291, 458, 11, 437, 321, 434, 1382, 281, 5039, 11, 51372], "temperature": 0.0, "avg_logprob": -0.24241906469994848, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.01933913864195347}, {"id": 7, "seek": 2844, "start": 48.6, "end": 55.64, "text": " how we solve it, how we solve it and what was not solved and what we're going to do.", "tokens": [51372, 577, 321, 5039, 309, 11, 577, 321, 5039, 309, 293, 437, 390, 406, 13041, 293, 437, 321, 434, 516, 281, 360, 13, 51724], "temperature": 0.0, "avg_logprob": -0.24241906469994848, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.01933913864195347}, {"id": 8, "seek": 5564, "start": 55.64, "end": 62.92, "text": " This happened as a GSOC project, Google Summer of Project last year of the GIFOS organization", "tokens": [50364, 639, 2011, 382, 257, 460, 17188, 34, 1716, 11, 3329, 16161, 295, 9849, 1036, 1064, 295, 264, 460, 12775, 4367, 4475, 50728], "temperature": 0.0, "avg_logprob": -0.21201495466561154, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03752344474196434}, {"id": 9, "seek": 5564, "start": 62.92, "end": 69.0, "text": " which is an umbrella organization for open source in Greece and we have representatives", "tokens": [50728, 597, 307, 364, 21925, 4475, 337, 1269, 4009, 294, 17214, 293, 321, 362, 18628, 51032], "temperature": 0.0, "avg_logprob": -0.21201495466561154, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03752344474196434}, {"id": 10, "seek": 5564, "start": 69.0, "end": 70.0, "text": " there.", "tokens": [51032, 456, 13, 51082], "temperature": 0.0, "avg_logprob": -0.21201495466561154, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03752344474196434}, {"id": 11, "seek": 5564, "start": 70.0, "end": 75.2, "text": " Right, I'm not going to be reading the whole slide, you can read it and you can see it there.", "tokens": [51082, 1779, 11, 286, 478, 406, 516, 281, 312, 3760, 264, 1379, 4137, 11, 291, 393, 1401, 309, 293, 291, 393, 536, 309, 456, 13, 51342], "temperature": 0.0, "avg_logprob": -0.21201495466561154, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03752344474196434}, {"id": 12, "seek": 5564, "start": 75.2, "end": 80.68, "text": " But they're an umbrella organization that they're looking over open source development", "tokens": [51342, 583, 436, 434, 364, 21925, 4475, 300, 436, 434, 1237, 670, 1269, 4009, 3250, 51616], "temperature": 0.0, "avg_logprob": -0.21201495466561154, "compression_ratio": 1.669683257918552, "no_speech_prob": 0.03752344474196434}, {"id": 13, "seek": 8068, "start": 80.68, "end": 90.32000000000001, "text": " in Greece and they are, have been participated to GSOC for many years now and one of the", "tokens": [50364, 294, 17214, 293, 436, 366, 11, 362, 668, 17978, 281, 460, 17188, 34, 337, 867, 924, 586, 293, 472, 295, 264, 50846], "temperature": 0.0, "avg_logprob": -0.24192201638523536, "compression_ratio": 1.5360824742268042, "no_speech_prob": 0.06397707015275955}, {"id": 14, "seek": 8068, "start": 90.32000000000001, "end": 94.4, "text": " project was the wonderful that Thottis did, right.", "tokens": [50846, 1716, 390, 264, 3715, 300, 334, 1521, 271, 630, 11, 558, 13, 51050], "temperature": 0.0, "avg_logprob": -0.24192201638523536, "compression_ratio": 1.5360824742268042, "no_speech_prob": 0.06397707015275955}, {"id": 15, "seek": 8068, "start": 94.4, "end": 101.64000000000001, "text": " So let's start with the basics, what are we trying to solve, right?", "tokens": [51050, 407, 718, 311, 722, 365, 264, 14688, 11, 437, 366, 321, 1382, 281, 5039, 11, 558, 30, 51412], "temperature": 0.0, "avg_logprob": -0.24192201638523536, "compression_ratio": 1.5360824742268042, "no_speech_prob": 0.06397707015275955}, {"id": 16, "seek": 8068, "start": 101.64000000000001, "end": 105.64000000000001, "text": " There are different names for what we're trying to solve, some people call it origin, some", "tokens": [51412, 821, 366, 819, 5288, 337, 437, 321, 434, 1382, 281, 5039, 11, 512, 561, 818, 309, 4957, 11, 512, 51612], "temperature": 0.0, "avg_logprob": -0.24192201638523536, "compression_ratio": 1.5360824742268042, "no_speech_prob": 0.06397707015275955}, {"id": 17, "seek": 10564, "start": 105.64, "end": 112.0, "text": " call it providence or pedigree or things, essentially if we have a binary file and I'm", "tokens": [50364, 818, 309, 1439, 2778, 420, 5670, 328, 701, 420, 721, 11, 4476, 498, 321, 362, 257, 17434, 3991, 293, 286, 478, 50682], "temperature": 0.0, "avg_logprob": -0.19588744386713555, "compression_ratio": 1.7233009708737863, "no_speech_prob": 0.04454586282372475}, {"id": 18, "seek": 10564, "start": 112.0, "end": 118.44, "text": " talking when I say binary I mean an executable or a library, not an image, right, or a PDF", "tokens": [50682, 1417, 562, 286, 584, 17434, 286, 914, 364, 7568, 712, 420, 257, 6405, 11, 406, 364, 3256, 11, 558, 11, 420, 257, 17752, 51004], "temperature": 0.0, "avg_logprob": -0.19588744386713555, "compression_ratio": 1.7233009708737863, "no_speech_prob": 0.04454586282372475}, {"id": 19, "seek": 10564, "start": 118.44, "end": 126.84, "text": " but an object file, right, how was this created, right, what are the sources that were used", "tokens": [51004, 457, 364, 2657, 3991, 11, 558, 11, 577, 390, 341, 2942, 11, 558, 11, 437, 366, 264, 7139, 300, 645, 1143, 51424], "temperature": 0.0, "avg_logprob": -0.19588744386713555, "compression_ratio": 1.7233009708737863, "no_speech_prob": 0.04454586282372475}, {"id": 20, "seek": 10564, "start": 126.84, "end": 133.16, "text": " in order to create this binary, right, what was the process that was used in order to", "tokens": [51424, 294, 1668, 281, 1884, 341, 17434, 11, 558, 11, 437, 390, 264, 1399, 300, 390, 1143, 294, 1668, 281, 51740], "temperature": 0.0, "avg_logprob": -0.19588744386713555, "compression_ratio": 1.7233009708737863, "no_speech_prob": 0.04454586282372475}, {"id": 21, "seek": 13316, "start": 133.16, "end": 142.76, "text": " create that, essentially these two things, right, the goal is to have extra information", "tokens": [50364, 1884, 300, 11, 4476, 613, 732, 721, 11, 558, 11, 264, 3387, 307, 281, 362, 2857, 1589, 50844], "temperature": 0.0, "avg_logprob": -0.20033468049148034, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.02376796118915081}, {"id": 22, "seek": 13316, "start": 142.76, "end": 152.28, "text": " and meta information about all this stuff and so in the end you know exactly what information", "tokens": [50844, 293, 19616, 1589, 466, 439, 341, 1507, 293, 370, 294, 264, 917, 291, 458, 2293, 437, 1589, 51320], "temperature": 0.0, "avg_logprob": -0.20033468049148034, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.02376796118915081}, {"id": 23, "seek": 13316, "start": 152.28, "end": 156.76, "text": " is inside the binary, right, or was used to create it, right.", "tokens": [51320, 307, 1854, 264, 17434, 11, 558, 11, 420, 390, 1143, 281, 1884, 309, 11, 558, 13, 51544], "temperature": 0.0, "avg_logprob": -0.20033468049148034, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.02376796118915081}, {"id": 24, "seek": 15676, "start": 156.76, "end": 164.35999999999999, "text": " So think of it very simplistically, you know, if I have a command that builds a binary like", "tokens": [50364, 407, 519, 295, 309, 588, 6883, 20458, 11, 291, 458, 11, 498, 286, 362, 257, 5622, 300, 15182, 257, 17434, 411, 50744], "temperature": 0.0, "avg_logprob": -0.18837597311996832, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.024309728294610977}, {"id": 25, "seek": 15676, "start": 164.35999999999999, "end": 172.23999999999998, "text": " a compiler that gets a source file and generates an executable, I want to record, okay, there", "tokens": [50744, 257, 31958, 300, 2170, 257, 4009, 3991, 293, 23815, 364, 7568, 712, 11, 286, 528, 281, 2136, 11, 1392, 11, 456, 51138], "temperature": 0.0, "avg_logprob": -0.18837597311996832, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.024309728294610977}, {"id": 26, "seek": 15676, "start": 172.23999999999998, "end": 181.79999999999998, "text": " was this process called CC and it read the wonderful file in C and it produces an executable,", "tokens": [51138, 390, 341, 1399, 1219, 12630, 293, 309, 1401, 264, 3715, 3991, 294, 383, 293, 309, 14725, 364, 7568, 712, 11, 51616], "temperature": 0.0, "avg_logprob": -0.18837597311996832, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.024309728294610977}, {"id": 27, "seek": 15676, "start": 181.79999999999998, "end": 185.76, "text": " right, that's what we want to solve.", "tokens": [51616, 558, 11, 300, 311, 437, 321, 528, 281, 5039, 13, 51814], "temperature": 0.0, "avg_logprob": -0.18837597311996832, "compression_ratio": 1.5879396984924623, "no_speech_prob": 0.024309728294610977}, {"id": 28, "seek": 18576, "start": 185.76, "end": 192.12, "text": " And then it gets tricky because as you can imagine, you know, okay, we're not obviously", "tokens": [50364, 400, 550, 309, 2170, 12414, 570, 382, 291, 393, 3811, 11, 291, 458, 11, 1392, 11, 321, 434, 406, 2745, 50682], "temperature": 0.0, "avg_logprob": -0.2713728755353445, "compression_ratio": 1.5857142857142856, "no_speech_prob": 0.06156766042113304}, {"id": 29, "seek": 18576, "start": 192.12, "end": 196.48, "text": " looking at only things that are specified in the command line, right.", "tokens": [50682, 1237, 412, 787, 721, 300, 366, 22206, 294, 264, 5622, 1622, 11, 558, 13, 50900], "temperature": 0.0, "avg_logprob": -0.2713728755353445, "compression_ratio": 1.5857142857142856, "no_speech_prob": 0.06156766042113304}, {"id": 30, "seek": 18576, "start": 196.48, "end": 204.35999999999999, "text": " So when you do CC, the hello world dot C, maybe it includes the file, right, you see", "tokens": [50900, 407, 562, 291, 360, 12630, 11, 264, 7751, 1002, 5893, 383, 11, 1310, 309, 5974, 264, 3991, 11, 558, 11, 291, 536, 51294], "temperature": 0.0, "avg_logprob": -0.2713728755353445, "compression_ratio": 1.5857142857142856, "no_speech_prob": 0.06156766042113304}, {"id": 31, "seek": 18576, "start": 204.35999999999999, "end": 210.23999999999998, "text": " language has include, so and this might be significant, it will definitely be significant,", "tokens": [51294, 2856, 575, 4090, 11, 370, 293, 341, 1062, 312, 4776, 11, 309, 486, 2138, 312, 4776, 11, 51588], "temperature": 0.0, "avg_logprob": -0.2713728755353445, "compression_ratio": 1.5857142857142856, "no_speech_prob": 0.06156766042113304}, {"id": 32, "seek": 21024, "start": 210.24, "end": 216.64000000000001, "text": " right, so it might include, slash yourself, slash include, slash stdio dot h, so I need", "tokens": [50364, 558, 11, 370, 309, 1062, 4090, 11, 17330, 1803, 11, 17330, 4090, 11, 17330, 342, 41256, 5893, 276, 11, 370, 286, 643, 50684], "temperature": 0.0, "avg_logprob": -0.2218822830024807, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.05626889690756798}, {"id": 33, "seek": 21024, "start": 216.64000000000001, "end": 223.32000000000002, "text": " to record that this file was also used in order to produce this binary, right, and in", "tokens": [50684, 281, 2136, 300, 341, 3991, 390, 611, 1143, 294, 1668, 281, 5258, 341, 17434, 11, 558, 11, 293, 294, 51018], "temperature": 0.0, "avg_logprob": -0.2218822830024807, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.05626889690756798}, {"id": 34, "seek": 21024, "start": 223.32000000000002, "end": 230.72, "text": " the same way CC is just a program, I cannot just record the name because the name does", "tokens": [51018, 264, 912, 636, 12630, 307, 445, 257, 1461, 11, 286, 2644, 445, 2136, 264, 1315, 570, 264, 1315, 775, 51388], "temperature": 0.0, "avg_logprob": -0.2218822830024807, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.05626889690756798}, {"id": 35, "seek": 21024, "start": 230.72, "end": 237.12, "text": " not mean anything, this is definitely a file and maybe it uses other linked libraries in", "tokens": [51388, 406, 914, 1340, 11, 341, 307, 2138, 257, 3991, 293, 1310, 309, 4960, 661, 9408, 15148, 294, 51708], "temperature": 0.0, "avg_logprob": -0.2218822830024807, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.05626889690756798}, {"id": 36, "seek": 23712, "start": 237.12, "end": 245.0, "text": " order to do that and when you produce the final executable, definitely it might include", "tokens": [50364, 1668, 281, 360, 300, 293, 562, 291, 5258, 264, 2572, 7568, 712, 11, 2138, 309, 1062, 4090, 50758], "temperature": 0.0, "avg_logprob": -0.141233096520106, "compression_ratio": 1.826086956521739, "no_speech_prob": 0.0653233528137207}, {"id": 37, "seek": 23712, "start": 245.0, "end": 248.24, "text": " system libraries and you want to record all this, right.", "tokens": [50758, 1185, 15148, 293, 291, 528, 281, 2136, 439, 341, 11, 558, 13, 50920], "temperature": 0.0, "avg_logprob": -0.141233096520106, "compression_ratio": 1.826086956521739, "no_speech_prob": 0.0653233528137207}, {"id": 38, "seek": 23712, "start": 248.24, "end": 252.48000000000002, "text": " So we're not talking about, you know, parsing the command line and seeing the three files", "tokens": [50920, 407, 321, 434, 406, 1417, 466, 11, 291, 458, 11, 21156, 278, 264, 5622, 1622, 293, 2577, 264, 1045, 7098, 51132], "temperature": 0.0, "avg_logprob": -0.141233096520106, "compression_ratio": 1.826086956521739, "no_speech_prob": 0.0653233528137207}, {"id": 39, "seek": 23712, "start": 252.48000000000002, "end": 259.24, "text": " mentioned there, we want to record everything happening in there and obviously the command", "tokens": [51132, 2835, 456, 11, 321, 528, 281, 2136, 1203, 2737, 294, 456, 293, 2745, 264, 5622, 51470], "temperature": 0.0, "avg_logprob": -0.141233096520106, "compression_ratio": 1.826086956521739, "no_speech_prob": 0.0653233528137207}, {"id": 40, "seek": 23712, "start": 259.24, "end": 266.92, "text": " may not be explicit, it might just be make, right, and you want to record everything happening", "tokens": [51470, 815, 406, 312, 13691, 11, 309, 1062, 445, 312, 652, 11, 558, 11, 293, 291, 528, 281, 2136, 1203, 2737, 51854], "temperature": 0.0, "avg_logprob": -0.141233096520106, "compression_ratio": 1.826086956521739, "no_speech_prob": 0.0653233528137207}, {"id": 41, "seek": 26692, "start": 266.92, "end": 279.12, "text": " with this build command, right, is the problem clear, has anyone else, has this problem?", "tokens": [50364, 365, 341, 1322, 5622, 11, 558, 11, 307, 264, 1154, 1850, 11, 575, 2878, 1646, 11, 575, 341, 1154, 30, 50974], "temperature": 0.0, "avg_logprob": -0.22496444187807232, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.08110164850950241}, {"id": 42, "seek": 26692, "start": 279.12, "end": 285.64, "text": " So the project, the whole project was okay, let's build something like that and how do", "tokens": [50974, 407, 264, 1716, 11, 264, 1379, 1716, 390, 1392, 11, 718, 311, 1322, 746, 411, 300, 293, 577, 360, 51300], "temperature": 0.0, "avg_logprob": -0.22496444187807232, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.08110164850950241}, {"id": 43, "seek": 26692, "start": 285.64, "end": 290.04, "text": " you create a project, you say what I want to achieve and this is a functional specification,", "tokens": [51300, 291, 1884, 257, 1716, 11, 291, 584, 437, 286, 528, 281, 4584, 293, 341, 307, 257, 11745, 31256, 11, 51520], "temperature": 0.0, "avg_logprob": -0.22496444187807232, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.08110164850950241}, {"id": 44, "seek": 26692, "start": 290.04, "end": 296.32, "text": " right, so we want a minimal interface, I don't want to tell developers how you have to change", "tokens": [51520, 558, 11, 370, 321, 528, 257, 13206, 9226, 11, 286, 500, 380, 528, 281, 980, 8849, 577, 291, 362, 281, 1319, 51834], "temperature": 0.0, "avg_logprob": -0.22496444187807232, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.08110164850950241}, {"id": 45, "seek": 29632, "start": 296.32, "end": 301.15999999999997, "text": " the compiler in order to do that and I mean the first idea would be to change the compiler", "tokens": [50364, 264, 31958, 294, 1668, 281, 360, 300, 293, 286, 914, 264, 700, 1558, 576, 312, 281, 1319, 264, 31958, 50606], "temperature": 0.0, "avg_logprob": -0.17629299993100372, "compression_ratio": 1.84375, "no_speech_prob": 0.07053062319755554}, {"id": 46, "seek": 29632, "start": 301.15999999999997, "end": 309.68, "text": " but yeah, let's try to make it minimal, so ideally no changes to the command at all,", "tokens": [50606, 457, 1338, 11, 718, 311, 853, 281, 652, 309, 13206, 11, 370, 22915, 572, 2962, 281, 264, 5622, 412, 439, 11, 51032], "temperature": 0.0, "avg_logprob": -0.17629299993100372, "compression_ratio": 1.84375, "no_speech_prob": 0.07053062319755554}, {"id": 47, "seek": 29632, "start": 309.68, "end": 317.0, "text": " right, and I want to record the files being created or written, the files being read or", "tokens": [51032, 558, 11, 293, 286, 528, 281, 2136, 264, 7098, 885, 2942, 420, 3720, 11, 264, 7098, 885, 1401, 420, 51398], "temperature": 0.0, "avg_logprob": -0.17629299993100372, "compression_ratio": 1.84375, "no_speech_prob": 0.07053062319755554}, {"id": 48, "seek": 29632, "start": 317.0, "end": 324.08, "text": " the process is being run, so for each of the files I want to know the name, I want to know", "tokens": [51398, 264, 1399, 307, 885, 1190, 11, 370, 337, 1184, 295, 264, 7098, 286, 528, 281, 458, 264, 1315, 11, 286, 528, 281, 458, 51752], "temperature": 0.0, "avg_logprob": -0.17629299993100372, "compression_ratio": 1.84375, "no_speech_prob": 0.07053062319755554}, {"id": 49, "seek": 32408, "start": 324.12, "end": 329.8, "text": " the full path because there might be difference and then because I care about the, actually", "tokens": [50366, 264, 1577, 3100, 570, 456, 1062, 312, 2649, 293, 550, 570, 286, 1127, 466, 264, 11, 767, 50650], "temperature": 0.0, "avg_logprob": -0.16186541841741195, "compression_ratio": 1.8884462151394423, "no_speech_prob": 0.026866324245929718}, {"id": 50, "seek": 32408, "start": 329.8, "end": 335.35999999999996, "text": " the content, I want the hash because the same file can be in different places with the same", "tokens": [50650, 264, 2701, 11, 286, 528, 264, 22019, 570, 264, 912, 3991, 393, 312, 294, 819, 3190, 365, 264, 912, 50928], "temperature": 0.0, "avg_logprob": -0.16186541841741195, "compression_ratio": 1.8884462151394423, "no_speech_prob": 0.026866324245929718}, {"id": 51, "seek": 32408, "start": 335.35999999999996, "end": 340.64, "text": " hash so I have to know what it is and you know, extra nice information, the size of the file,", "tokens": [50928, 22019, 370, 286, 362, 281, 458, 437, 309, 307, 293, 291, 458, 11, 2857, 1481, 1589, 11, 264, 2744, 295, 264, 3991, 11, 51192], "temperature": 0.0, "avg_logprob": -0.16186541841741195, "compression_ratio": 1.8884462151394423, "no_speech_prob": 0.026866324245929718}, {"id": 52, "seek": 32408, "start": 340.64, "end": 347.03999999999996, "text": " mode of the file and stuff like that, I don't care, for every process that runs I want to know", "tokens": [51192, 4391, 295, 264, 3991, 293, 1507, 411, 300, 11, 286, 500, 380, 1127, 11, 337, 633, 1399, 300, 6676, 286, 528, 281, 458, 51512], "temperature": 0.0, "avg_logprob": -0.16186541841741195, "compression_ratio": 1.8884462151394423, "no_speech_prob": 0.026866324245929718}, {"id": 53, "seek": 32408, "start": 347.03999999999996, "end": 352.96, "text": " okay, what was the process, what were the arguments, what was the environment because as you probably", "tokens": [51512, 1392, 11, 437, 390, 264, 1399, 11, 437, 645, 264, 12869, 11, 437, 390, 264, 2823, 570, 382, 291, 1391, 51808], "temperature": 0.0, "avg_logprob": -0.16186541841741195, "compression_ratio": 1.8884462151394423, "no_speech_prob": 0.026866324245929718}, {"id": 54, "seek": 35296, "start": 353.0, "end": 358.64, "text": " know, every process reads may be different according to the environment that it finds,", "tokens": [50366, 458, 11, 633, 1399, 15700, 815, 312, 819, 4650, 281, 264, 2823, 300, 309, 10704, 11, 50648], "temperature": 0.0, "avg_logprob": -0.23719753324985504, "compression_ratio": 1.6198830409356726, "no_speech_prob": 0.006430345121771097}, {"id": 55, "seek": 35296, "start": 358.64, "end": 367.35999999999996, "text": " yeah okay, start and end times would be useful and stuff like that, right, so this is the", "tokens": [50648, 1338, 1392, 11, 722, 293, 917, 1413, 576, 312, 4420, 293, 1507, 411, 300, 11, 558, 11, 370, 341, 307, 264, 51084], "temperature": 0.0, "avg_logprob": -0.23719753324985504, "compression_ratio": 1.6198830409356726, "no_speech_prob": 0.006430345121771097}, {"id": 56, "seek": 35296, "start": 367.35999999999996, "end": 375.0, "text": " information that, this is the function specification, this is our wonderful problem, right, and then", "tokens": [51084, 1589, 300, 11, 341, 307, 264, 2445, 31256, 11, 341, 307, 527, 3715, 1154, 11, 558, 11, 293, 550, 51466], "temperature": 0.0, "avg_logprob": -0.23719753324985504, "compression_ratio": 1.6198830409356726, "no_speech_prob": 0.006430345121771097}, {"id": 57, "seek": 37500, "start": 375.0, "end": 395.88, "text": " 40 sat down and worked, well no no wait, you'll take the mic, this is, well he's not engineer yet,", "tokens": [50364, 3356, 3227, 760, 293, 2732, 11, 731, 572, 572, 1699, 11, 291, 603, 747, 264, 3123, 11, 341, 307, 11, 731, 415, 311, 406, 11403, 1939, 11, 51408], "temperature": 0.0, "avg_logprob": -0.39172722743107724, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.06896694004535675}, {"id": 58, "seek": 37500, "start": 395.88, "end": 404.44, "text": " he will become, can you hear me now, well to tackle this problem we created the command", "tokens": [51408, 415, 486, 1813, 11, 393, 291, 1568, 385, 586, 11, 731, 281, 14896, 341, 1154, 321, 2942, 264, 5622, 51836], "temperature": 0.0, "avg_logprob": -0.39172722743107724, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.06896694004535675}, {"id": 59, "seek": 40444, "start": 404.6, "end": 409.08, "text": " line tool named build recorder, which you can see right here, build underscore recorder,", "tokens": [50372, 1622, 2290, 4926, 1322, 37744, 11, 597, 291, 393, 536, 558, 510, 11, 1322, 37556, 37744, 11, 50596], "temperature": 0.0, "avg_logprob": -0.20029463334517045, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00911534670740366}, {"id": 60, "seek": 40444, "start": 409.08, "end": 415.32, "text": " which records information about the build on Linux, use it, this is rather simple, all you have to do", "tokens": [50596, 597, 7724, 1589, 466, 264, 1322, 322, 18734, 11, 764, 309, 11, 341, 307, 2831, 2199, 11, 439, 291, 362, 281, 360, 50908], "temperature": 0.0, "avg_logprob": -0.20029463334517045, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00911534670740366}, {"id": 61, "seek": 40444, "start": 415.32, "end": 423.24, "text": " is prefix your build command, whatever that is, make gcc, java compiler, with the name of the", "tokens": [50908, 307, 46969, 428, 1322, 5622, 11, 2035, 300, 307, 11, 652, 290, 1914, 11, 361, 4061, 31958, 11, 365, 264, 1315, 295, 264, 51304], "temperature": 0.0, "avg_logprob": -0.20029463334517045, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00911534670740366}, {"id": 62, "seek": 40444, "start": 423.24, "end": 427.96, "text": " executable, build recorder runs transparently in the background while your build is running,", "tokens": [51304, 7568, 712, 11, 1322, 37744, 6676, 7132, 6420, 294, 264, 3678, 1339, 428, 1322, 307, 2614, 11, 51540], "temperature": 0.0, "avg_logprob": -0.20029463334517045, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00911534670740366}, {"id": 63, "seek": 40444, "start": 427.96, "end": 432.2, "text": " you don't need to change anything in terms of your configuration, your source files or even your", "tokens": [51540, 291, 500, 380, 643, 281, 1319, 1340, 294, 2115, 295, 428, 11694, 11, 428, 4009, 7098, 420, 754, 428, 51752], "temperature": 0.0, "avg_logprob": -0.20029463334517045, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00911534670740366}, {"id": 64, "seek": 43220, "start": 432.28, "end": 436.68, "text": " build system, you can literally pick any project you like at this point in time,", "tokens": [50368, 1322, 1185, 11, 291, 393, 3736, 1888, 604, 1716, 291, 411, 412, 341, 935, 294, 565, 11, 50588], "temperature": 0.0, "avg_logprob": -0.2037575884563167, "compression_ratio": 1.7936507936507937, "no_speech_prob": 0.005149629898369312}, {"id": 65, "seek": 43220, "start": 436.68, "end": 441.15999999999997, "text": " run with build recorder and it should run, if it doesn't please file a bug report,", "tokens": [50588, 1190, 365, 1322, 37744, 293, 309, 820, 1190, 11, 498, 309, 1177, 380, 1767, 3991, 257, 7426, 2275, 11, 50812], "temperature": 0.0, "avg_logprob": -0.2037575884563167, "compression_ratio": 1.7936507936507937, "no_speech_prob": 0.005149629898369312}, {"id": 66, "seek": 43220, "start": 443.32, "end": 456.03999999999996, "text": " now as you can see build recorder, build recorder stores all of that information in an", "tokens": [50920, 586, 382, 291, 393, 536, 1322, 37744, 11, 1322, 37744, 9512, 439, 295, 300, 1589, 294, 364, 51556], "temperature": 0.0, "avg_logprob": -0.2037575884563167, "compression_ratio": 1.7936507936507937, "no_speech_prob": 0.005149629898369312}, {"id": 67, "seek": 43220, "start": 456.03999999999996, "end": 460.59999999999997, "text": " output file by default named the build does recorder dot out, but as you can see you can", "tokens": [51556, 5598, 3991, 538, 7576, 4926, 264, 1322, 775, 37744, 5893, 484, 11, 457, 382, 291, 393, 536, 291, 393, 51784], "temperature": 0.0, "avg_logprob": -0.2037575884563167, "compression_ratio": 1.7936507936507937, "no_speech_prob": 0.005149629898369312}, {"id": 68, "seek": 46060, "start": 460.6, "end": 466.92, "text": " use the does so option to actually supply an alternative file name, but what does it actually", "tokens": [50364, 764, 264, 775, 370, 3614, 281, 767, 5847, 364, 8535, 3991, 1315, 11, 457, 437, 775, 309, 767, 50680], "temperature": 0.0, "avg_logprob": -0.11685760454698042, "compression_ratio": 1.6796536796536796, "no_speech_prob": 7.382694457191974e-05}, {"id": 69, "seek": 46060, "start": 466.92, "end": 473.08000000000004, "text": " record, well pretty much everything we talked about in the functional specification, for its file", "tokens": [50680, 2136, 11, 731, 1238, 709, 1203, 321, 2825, 466, 294, 264, 11745, 31256, 11, 337, 1080, 3991, 50988], "temperature": 0.0, "avg_logprob": -0.11685760454698042, "compression_ratio": 1.6796536796536796, "no_speech_prob": 7.382694457191974e-05}, {"id": 70, "seek": 46060, "start": 473.08000000000004, "end": 479.08000000000004, "text": " we have a list of attributes, its name, its size, its sex sum of its contents as well as its absolute", "tokens": [50988, 321, 362, 257, 1329, 295, 17212, 11, 1080, 1315, 11, 1080, 2744, 11, 1080, 3260, 2408, 295, 1080, 15768, 382, 731, 382, 1080, 8236, 51288], "temperature": 0.0, "avg_logprob": -0.11685760454698042, "compression_ratio": 1.6796536796536796, "no_speech_prob": 7.382694457191974e-05}, {"id": 71, "seek": 46060, "start": 479.08000000000004, "end": 484.92, "text": " path, similarly for each process we store its command line with all its arguments, a start and", "tokens": [51288, 3100, 11, 14138, 337, 1184, 1399, 321, 3531, 1080, 5622, 1622, 365, 439, 1080, 12869, 11, 257, 722, 293, 51580], "temperature": 0.0, "avg_logprob": -0.11685760454698042, "compression_ratio": 1.6796536796536796, "no_speech_prob": 7.382694457191974e-05}, {"id": 72, "seek": 48492, "start": 484.92, "end": 491.8, "text": " end time stamp as well as the environment, we also store a list of relationships, namely a", "tokens": [50364, 917, 565, 9921, 382, 731, 382, 264, 2823, 11, 321, 611, 3531, 257, 1329, 295, 6159, 11, 20926, 257, 50708], "temperature": 0.0, "avg_logprob": -0.13539693643758585, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0012017725966870785}, {"id": 73, "seek": 48492, "start": 491.8, "end": 498.6, "text": " process creates a process that is by forking or cloning or any of their variants, as well as a", "tokens": [50708, 1399, 7829, 257, 1399, 300, 307, 538, 337, 5092, 420, 596, 16638, 420, 604, 295, 641, 21669, 11, 382, 731, 382, 257, 51048], "temperature": 0.0, "avg_logprob": -0.13539693643758585, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0012017725966870785}, {"id": 74, "seek": 48492, "start": 498.6, "end": 505.0, "text": " process opens a file for reading, a process opens a file for writing or some processes are associated", "tokens": [51048, 1399, 9870, 257, 3991, 337, 3760, 11, 257, 1399, 9870, 257, 3991, 337, 3579, 420, 512, 7555, 366, 6615, 51368], "temperature": 0.0, "avg_logprob": -0.13539693643758585, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0012017725966870785}, {"id": 75, "seek": 48492, "start": 505.0, "end": 510.44, "text": " with executables, for example if we were to run make, the system would probably run the file at", "tokens": [51368, 365, 7568, 2965, 11, 337, 1365, 498, 321, 645, 281, 1190, 652, 11, 264, 1185, 576, 1391, 1190, 264, 3991, 412, 51640], "temperature": 0.0, "avg_logprob": -0.13539693643758585, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0012017725966870785}, {"id": 76, "seek": 51044, "start": 511.24, "end": 519.64, "text": " slash user slash bin slash make, we want to record that as well, now all of this information is", "tokens": [50404, 17330, 4195, 17330, 5171, 17330, 652, 11, 321, 528, 281, 2136, 300, 382, 731, 11, 586, 439, 295, 341, 1589, 307, 50824], "temperature": 0.0, "avg_logprob": -0.17713253739951312, "compression_ratio": 1.64, "no_speech_prob": 0.00039782660314813256}, {"id": 77, "seek": 51044, "start": 519.64, "end": 525.8, "text": " stored in the output file in RTF turtle format, class is being processed in file and all of the", "tokens": [50824, 12187, 294, 264, 5598, 3991, 294, 497, 20527, 22866, 7877, 11, 1508, 307, 885, 18846, 294, 3991, 293, 439, 295, 264, 51132], "temperature": 0.0, "avg_logprob": -0.17713253739951312, "compression_ratio": 1.64, "no_speech_prob": 0.00039782660314813256}, {"id": 78, "seek": 51044, "start": 525.8, "end": 533.96, "text": " attributes as well as the relationships been the predicates, this is an example, for example we", "tokens": [51132, 17212, 382, 731, 382, 264, 6159, 668, 264, 47336, 1024, 11, 341, 307, 364, 1365, 11, 337, 1365, 321, 51540], "temperature": 0.0, "avg_logprob": -0.17713253739951312, "compression_ratio": 1.64, "no_speech_prob": 0.00039782660314813256}, {"id": 79, "seek": 53396, "start": 533.96, "end": 542.52, "text": " have a process ID 1 which is the initial compilation process, imagine gcc-fusy, it starts at the", "tokens": [50364, 362, 257, 1399, 7348, 502, 597, 307, 264, 5883, 40261, 1399, 11, 3811, 290, 1914, 12, 69, 301, 88, 11, 309, 3719, 412, 264, 50792], "temperature": 0.0, "avg_logprob": -0.2565184169345432, "compression_ratio": 1.8888888888888888, "no_speech_prob": 0.0068452260456979275}, {"id": 80, "seek": 53396, "start": 542.52, "end": 549.0, "text": " current time stamp, we have another process which is a preprocessor, the c preprocessor,", "tokens": [50792, 2190, 565, 9921, 11, 321, 362, 1071, 1399, 597, 307, 257, 2666, 340, 25432, 11, 264, 269, 2666, 340, 25432, 11, 51116], "temperature": 0.0, "avg_logprob": -0.2565184169345432, "compression_ratio": 1.8888888888888888, "no_speech_prob": 0.0068452260456979275}, {"id": 81, "seek": 53396, "start": 549.0, "end": 555.96, "text": " it starts at another time stamp, we specify that the initial compiler actually created the preprocessor", "tokens": [51116, 309, 3719, 412, 1071, 565, 9921, 11, 321, 16500, 300, 264, 5883, 31958, 767, 2942, 264, 2666, 340, 25432, 51464], "temperature": 0.0, "avg_logprob": -0.2565184169345432, "compression_ratio": 1.8888888888888888, "no_speech_prob": 0.0068452260456979275}, {"id": 82, "seek": 55596, "start": 555.96, "end": 567.5600000000001, "text": " unit and then we have the fact that the we have a file f1 foo.c which should be specified that", "tokens": [50364, 4985, 293, 550, 321, 362, 264, 1186, 300, 264, 321, 362, 257, 3991, 283, 16, 726, 78, 13, 66, 597, 820, 312, 22206, 300, 50944], "temperature": 0.0, "avg_logprob": -0.15920370275324042, "compression_ratio": 1.6583850931677018, "no_speech_prob": 0.0007990510785020888}, {"id": 83, "seek": 55596, "start": 568.52, "end": 576.6800000000001, "text": " ah pid2 reads f1, the preprocessor opens the file foo.c which has size 100 and the random", "tokens": [50992, 3716, 280, 327, 17, 15700, 283, 16, 11, 264, 2666, 340, 25432, 9870, 264, 3991, 726, 78, 13, 66, 597, 575, 2744, 2319, 293, 264, 4974, 51400], "temperature": 0.0, "avg_logprob": -0.15920370275324042, "compression_ratio": 1.6583850931677018, "no_speech_prob": 0.0007990510785020888}, {"id": 84, "seek": 55596, "start": 576.6800000000001, "end": 584.12, "text": " has of zeros, we have another f2 which is a temporary that the compiler might use,", "tokens": [51400, 575, 295, 35193, 11, 321, 362, 1071, 283, 17, 597, 307, 257, 13413, 300, 264, 31958, 1062, 764, 11, 51772], "temperature": 0.0, "avg_logprob": -0.15920370275324042, "compression_ratio": 1.6583850931677018, "no_speech_prob": 0.0007990510785020888}, {"id": 85, "seek": 58412, "start": 584.12, "end": 591.16, "text": " which as we can see the process number two actually writes on this, we have another process,", "tokens": [50364, 597, 382, 321, 393, 536, 264, 1399, 1230, 732, 767, 13657, 322, 341, 11, 321, 362, 1071, 1399, 11, 50716], "temperature": 0.0, "avg_logprob": -0.1548596637349733, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0006374140502884984}, {"id": 86, "seek": 58412, "start": 591.8, "end": 599.8, "text": " the classical cc which merges those files together the object file, yeah that's a general idea I guess,", "tokens": [50748, 264, 13735, 269, 66, 597, 3551, 2880, 729, 7098, 1214, 264, 2657, 3991, 11, 1338, 300, 311, 257, 2674, 1558, 286, 2041, 11, 51148], "temperature": 0.0, "avg_logprob": -0.1548596637349733, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0006374140502884984}, {"id": 87, "seek": 58412, "start": 601.88, "end": 608.76, "text": " well how is it implemented, how does it support all of those languages, well the basic idea is that", "tokens": [51252, 731, 577, 307, 309, 12270, 11, 577, 775, 309, 1406, 439, 295, 729, 8650, 11, 731, 264, 3875, 1558, 307, 300, 51596], "temperature": 0.0, "avg_logprob": -0.1548596637349733, "compression_ratio": 1.608695652173913, "no_speech_prob": 0.0006374140502884984}, {"id": 88, "seek": 60876, "start": 608.76, "end": 615.0, "text": " we basically want to record all of the files and processes that a process uses and now if we", "tokens": [50364, 321, 1936, 528, 281, 2136, 439, 295, 264, 7098, 293, 7555, 300, 257, 1399, 4960, 293, 586, 498, 321, 50676], "temperature": 0.0, "avg_logprob": -0.07370271853038243, "compression_ratio": 2.0565217391304347, "no_speech_prob": 0.002256915904581547}, {"id": 89, "seek": 60876, "start": 615.0, "end": 620.92, "text": " think about it all processes and files are actually handled using system calls, so if we were to look", "tokens": [50676, 519, 466, 309, 439, 7555, 293, 7098, 366, 767, 18033, 1228, 1185, 5498, 11, 370, 498, 321, 645, 281, 574, 50972], "temperature": 0.0, "avg_logprob": -0.07370271853038243, "compression_ratio": 2.0565217391304347, "no_speech_prob": 0.002256915904581547}, {"id": 90, "seek": 60876, "start": 620.92, "end": 625.96, "text": " at the system calls a process makes, we could see all of the files and processes that it uses,", "tokens": [50972, 412, 264, 1185, 5498, 257, 1399, 1669, 11, 321, 727, 536, 439, 295, 264, 7098, 293, 7555, 300, 309, 4960, 11, 51224], "temperature": 0.0, "avg_logprob": -0.07370271853038243, "compression_ratio": 2.0565217391304347, "no_speech_prob": 0.002256915904581547}, {"id": 91, "seek": 60876, "start": 625.96, "end": 630.92, "text": " for example if we look at the open family of system calls, open create and its variants,", "tokens": [51224, 337, 1365, 498, 321, 574, 412, 264, 1269, 1605, 295, 1185, 5498, 11, 1269, 1884, 293, 1080, 21669, 11, 51472], "temperature": 0.0, "avg_logprob": -0.07370271853038243, "compression_ratio": 2.0565217391304347, "no_speech_prob": 0.002256915904581547}, {"id": 92, "seek": 60876, "start": 630.92, "end": 637.0, "text": " we can easily extract the name as well as the access mode, on the same note for process all we", "tokens": [51472, 321, 393, 3612, 8947, 264, 1315, 382, 731, 382, 264, 2105, 4391, 11, 322, 264, 912, 3637, 337, 1399, 439, 321, 51776], "temperature": 0.0, "avg_logprob": -0.07370271853038243, "compression_ratio": 2.0565217391304347, "no_speech_prob": 0.002256915904581547}, {"id": 93, "seek": 63700, "start": 637.0, "end": 644.84, "text": " have to do is trace, fork, clone and its variants as well as the execution system calls to actually", "tokens": [50364, 362, 281, 360, 307, 13508, 11, 17716, 11, 26506, 293, 1080, 21669, 382, 731, 382, 264, 15058, 1185, 5498, 281, 767, 50756], "temperature": 0.0, "avg_logprob": -0.10792056282798013, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.00045933621004223824}, {"id": 94, "seek": 63700, "start": 644.84, "end": 652.12, "text": " see the process ID and the executable files, now from the information that we extracted from these", "tokens": [50756, 536, 264, 1399, 7348, 293, 264, 7568, 712, 7098, 11, 586, 490, 264, 1589, 300, 321, 34086, 490, 613, 51120], "temperature": 0.0, "avg_logprob": -0.10792056282798013, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.00045933621004223824}, {"id": 95, "seek": 63700, "start": 652.12, "end": 657.88, "text": " two we can actually get even more information like the command line, the environment, a link to a file", "tokens": [51120, 732, 321, 393, 767, 483, 754, 544, 1589, 411, 264, 5622, 1622, 11, 264, 2823, 11, 257, 2113, 281, 257, 3991, 51408], "temperature": 0.0, "avg_logprob": -0.10792056282798013, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.00045933621004223824}, {"id": 96, "seek": 63700, "start": 657.88, "end": 665.64, "text": " which from there we can get the size that has in the absolute path, yeah all of this happens", "tokens": [51408, 597, 490, 456, 321, 393, 483, 264, 2744, 300, 575, 294, 264, 8236, 3100, 11, 1338, 439, 295, 341, 2314, 51796], "temperature": 0.0, "avg_logprob": -0.10792056282798013, "compression_ratio": 1.7433628318584071, "no_speech_prob": 0.00045933621004223824}, {"id": 97, "seek": 66564, "start": 666.36, "end": 672.1999999999999, "text": " on linux, so we basically just need a way to trace system calls, under linux this is a fairly", "tokens": [50400, 322, 22896, 2449, 11, 370, 321, 1936, 445, 643, 257, 636, 281, 13508, 1185, 5498, 11, 833, 22896, 2449, 341, 307, 257, 6457, 50692], "temperature": 0.0, "avg_logprob": -0.20811618902744392, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.005622964818030596}, {"id": 98, "seek": 66564, "start": 672.1999999999999, "end": 677.3199999999999, "text": " straightforward problem, we use pitch-race which directly copy and paste it from the command line,", "tokens": [50692, 15325, 1154, 11, 321, 764, 7293, 12, 81, 617, 597, 3838, 5055, 293, 9163, 309, 490, 264, 5622, 1622, 11, 50948], "temperature": 0.0, "avg_logprob": -0.20811618902744392, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.005622964818030596}, {"id": 99, "seek": 66564, "start": 677.3199999999999, "end": 680.4399999999999, "text": " it is primarily used to implement breakpoint debugging system calls tracing,", "tokens": [50948, 309, 307, 10029, 1143, 281, 4445, 1821, 6053, 45592, 1185, 5498, 25262, 11, 51104], "temperature": 0.0, "avg_logprob": -0.20811618902744392, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.005622964818030596}, {"id": 100, "seek": 66564, "start": 684.28, "end": 687.0, "text": " now that's it, it's a very simple program,", "tokens": [51296, 586, 300, 311, 309, 11, 309, 311, 257, 588, 2199, 1461, 11, 51432], "temperature": 0.0, "avg_logprob": -0.20811618902744392, "compression_ratio": 1.5678391959798994, "no_speech_prob": 0.005622964818030596}, {"id": 101, "seek": 68700, "start": 687.96, "end": 699.24, "text": " no, for the duration of our project, okay so photos run through the slides that", "tokens": [50412, 572, 11, 337, 264, 16365, 295, 527, 1716, 11, 1392, 370, 5787, 1190, 807, 264, 9788, 300, 50976], "temperature": 0.0, "avg_logprob": -0.2997228503227234, "compression_ratio": 1.408, "no_speech_prob": 0.008751791901886463}, {"id": 102, "seek": 68700, "start": 700.12, "end": 710.36, "text": " did implement it, so we have lots of time now, so it's not perfect it has issues right, so let's", "tokens": [51020, 630, 4445, 309, 11, 370, 321, 362, 3195, 295, 565, 586, 11, 370, 309, 311, 406, 2176, 309, 575, 2663, 558, 11, 370, 718, 311, 51532], "temperature": 0.0, "avg_logprob": -0.2997228503227234, "compression_ratio": 1.408, "no_speech_prob": 0.008751791901886463}, {"id": 103, "seek": 71036, "start": 710.44, "end": 718.04, "text": " start discussing, you got the major idea of how it works right, what are the issues, the main two", "tokens": [50368, 722, 10850, 11, 291, 658, 264, 2563, 1558, 295, 577, 309, 1985, 558, 11, 437, 366, 264, 2663, 11, 264, 2135, 732, 50748], "temperature": 0.0, "avg_logprob": -0.10507939843570485, "compression_ratio": 1.691860465116279, "no_speech_prob": 0.01789230667054653}, {"id": 104, "seek": 71036, "start": 718.04, "end": 731.96, "text": " big buckets of issues are the real complexity and performance right, so real complexity, remember", "tokens": [50748, 955, 32191, 295, 2663, 366, 264, 957, 14024, 293, 3389, 558, 11, 370, 957, 14024, 11, 1604, 51444], "temperature": 0.0, "avg_logprob": -0.10507939843570485, "compression_ratio": 1.691860465116279, "no_speech_prob": 0.01789230667054653}, {"id": 105, "seek": 71036, "start": 731.96, "end": 737.88, "text": " that we said you know it's a compiler that just reads a file and creates an executable that was", "tokens": [51444, 300, 321, 848, 291, 458, 309, 311, 257, 31958, 300, 445, 15700, 257, 3991, 293, 7829, 364, 7568, 712, 300, 390, 51740], "temperature": 0.0, "avg_logprob": -0.10507939843570485, "compression_ratio": 1.691860465116279, "no_speech_prob": 0.01789230667054653}, {"id": 106, "seek": 73788, "start": 737.88, "end": 745.08, "text": " this wonderful diagram first, it's real life is not that simple right, so on the right hand side", "tokens": [50364, 341, 3715, 10686, 700, 11, 309, 311, 957, 993, 307, 406, 300, 2199, 558, 11, 370, 322, 264, 558, 1011, 1252, 50724], "temperature": 0.0, "avg_logprob": -0.10126607362614122, "compression_ratio": 1.8627450980392157, "no_speech_prob": 0.005713712889701128}, {"id": 107, "seek": 73788, "start": 745.08, "end": 751.72, "text": " you see a more typical ideal again compiler, so when you have a compiler it actually calls", "tokens": [50724, 291, 536, 257, 544, 7476, 7157, 797, 31958, 11, 370, 562, 291, 362, 257, 31958, 309, 767, 5498, 51056], "temperature": 0.0, "avg_logprob": -0.10126607362614122, "compression_ratio": 1.8627450980392157, "no_speech_prob": 0.005713712889701128}, {"id": 108, "seek": 73788, "start": 751.72, "end": 757.64, "text": " three different processes right, you call the first one the first pass that reads the C file and", "tokens": [51056, 1045, 819, 7555, 558, 11, 291, 818, 264, 700, 472, 264, 700, 1320, 300, 15700, 264, 383, 3991, 293, 51352], "temperature": 0.0, "avg_logprob": -0.10126607362614122, "compression_ratio": 1.8627450980392157, "no_speech_prob": 0.005713712889701128}, {"id": 109, "seek": 73788, "start": 757.64, "end": 764.68, "text": " creates an assembly file and then you call the assembler that reads the assembly and creates an", "tokens": [51352, 7829, 364, 12103, 3991, 293, 550, 291, 818, 264, 8438, 1918, 300, 15700, 264, 12103, 293, 7829, 364, 51704], "temperature": 0.0, "avg_logprob": -0.10126607362614122, "compression_ratio": 1.8627450980392157, "no_speech_prob": 0.005713712889701128}, {"id": 110, "seek": 76468, "start": 764.68, "end": 772.28, "text": " object file and then you have the linker loader that reads the object file and creates an executable", "tokens": [50364, 2657, 3991, 293, 550, 291, 362, 264, 2113, 260, 3677, 260, 300, 15700, 264, 2657, 3991, 293, 7829, 364, 7568, 712, 50744], "temperature": 0.0, "avg_logprob": -0.07832390329112178, "compression_ratio": 1.9303482587064678, "no_speech_prob": 0.00434210617095232}, {"id": 111, "seek": 76468, "start": 772.28, "end": 780.12, "text": " right, so this is a very abstracted and ideal world situation, we do not, real world is nothing", "tokens": [50744, 558, 11, 370, 341, 307, 257, 588, 12649, 292, 293, 7157, 1002, 2590, 11, 321, 360, 406, 11, 957, 1002, 307, 1825, 51136], "temperature": 0.0, "avg_logprob": -0.07832390329112178, "compression_ratio": 1.9303482587064678, "no_speech_prob": 0.00434210617095232}, {"id": 112, "seek": 76468, "start": 780.12, "end": 788.52, "text": " like that, real world may be like that if you have you know done your compiler courses and you", "tokens": [51136, 411, 300, 11, 957, 1002, 815, 312, 411, 300, 498, 291, 362, 291, 458, 1096, 428, 31958, 7712, 293, 291, 51556], "temperature": 0.0, "avg_logprob": -0.07832390329112178, "compression_ratio": 1.9303482587064678, "no_speech_prob": 0.00434210617095232}, {"id": 113, "seek": 76468, "start": 788.52, "end": 793.64, "text": " have seen the different passes of compiler and stuff like that and then you go to the real world", "tokens": [51556, 362, 1612, 264, 819, 11335, 295, 31958, 293, 1507, 411, 300, 293, 550, 291, 352, 281, 264, 957, 1002, 51812], "temperature": 0.0, "avg_logprob": -0.07832390329112178, "compression_ratio": 1.9303482587064678, "no_speech_prob": 0.00434210617095232}, {"id": 114, "seek": 79364, "start": 793.64, "end": 800.6, "text": " where the hello world which is just you know print hello world dot c in current Linux is this one", "tokens": [50364, 689, 264, 7751, 1002, 597, 307, 445, 291, 458, 4482, 7751, 1002, 5893, 269, 294, 2190, 18734, 307, 341, 472, 50712], "temperature": 0.0, "avg_logprob": -0.14954321914248997, "compression_ratio": 1.744047619047619, "no_speech_prob": 0.005954293999820948}, {"id": 115, "seek": 79364, "start": 801.88, "end": 807.72, "text": " right, so I'm not going to be explaining every file in that one but this is just you know the three", "tokens": [50776, 558, 11, 370, 286, 478, 406, 516, 281, 312, 13468, 633, 3991, 294, 300, 472, 457, 341, 307, 445, 291, 458, 264, 1045, 51068], "temperature": 0.0, "avg_logprob": -0.14954321914248997, "compression_ratio": 1.744047619047619, "no_speech_prob": 0.005954293999820948}, {"id": 116, "seek": 79364, "start": 807.72, "end": 819.64, "text": " lines of main hello world print hello world and if you compile it with gcc explicit, so you see", "tokens": [51068, 3876, 295, 2135, 7751, 1002, 4482, 7751, 1002, 293, 498, 291, 31413, 309, 365, 290, 1914, 13691, 11, 370, 291, 536, 51664], "temperature": 0.0, "avg_logprob": -0.14954321914248997, "compression_ratio": 1.744047619047619, "no_speech_prob": 0.005954293999820948}, {"id": 117, "seek": 81964, "start": 819.64, "end": 826.1999999999999, "text": " there are, what can I say, lots of include files been included, this is the first step of compiler", "tokens": [50364, 456, 366, 11, 437, 393, 286, 584, 11, 3195, 295, 4090, 7098, 668, 5556, 11, 341, 307, 264, 700, 1823, 295, 31958, 50692], "temperature": 0.0, "avg_logprob": -0.12627930693574005, "compression_ratio": 1.780373831775701, "no_speech_prob": 0.007238294463604689}, {"id": 118, "seek": 81964, "start": 826.1999999999999, "end": 833.96, "text": " right, the compiler first step right, so it you think that it will only read hello world dot c", "tokens": [50692, 558, 11, 264, 31958, 700, 1823, 558, 11, 370, 309, 291, 519, 300, 309, 486, 787, 1401, 7751, 1002, 5893, 269, 51080], "temperature": 0.0, "avg_logprob": -0.12627930693574005, "compression_ratio": 1.780373831775701, "no_speech_prob": 0.007238294463604689}, {"id": 119, "seek": 81964, "start": 833.96, "end": 840.04, "text": " but you have a hash include in order to include the print f definition, so and this include", "tokens": [51080, 457, 291, 362, 257, 22019, 4090, 294, 1668, 281, 4090, 264, 4482, 283, 7123, 11, 370, 293, 341, 4090, 51384], "temperature": 0.0, "avg_logprob": -0.12627930693574005, "compression_ratio": 1.780373831775701, "no_speech_prob": 0.007238294463604689}, {"id": 120, "seek": 81964, "start": 840.04, "end": 846.6, "text": " unfortunately includes you know std def and libc header start dot h and lots of other different", "tokens": [51384, 7015, 5974, 291, 458, 342, 67, 1060, 293, 22854, 66, 23117, 722, 5893, 276, 293, 3195, 295, 661, 819, 51712], "temperature": 0.0, "avg_logprob": -0.12627930693574005, "compression_ratio": 1.780373831775701, "no_speech_prob": 0.007238294463604689}, {"id": 121, "seek": 84660, "start": 846.6, "end": 855.64, "text": " files and all these are files that have been read by the first process and then it creates", "tokens": [50364, 7098, 293, 439, 613, 366, 7098, 300, 362, 668, 1401, 538, 264, 700, 1399, 293, 550, 309, 7829, 50816], "temperature": 0.0, "avg_logprob": -0.09586433263925406, "compression_ratio": 1.7515527950310559, "no_speech_prob": 0.008563097566366196}, {"id": 122, "seek": 84660, "start": 856.84, "end": 862.0400000000001, "text": " something else which I'm not sure where it is somewhere or so it creates the temporary files,", "tokens": [50876, 746, 1646, 597, 286, 478, 406, 988, 689, 309, 307, 4079, 420, 370, 309, 7829, 264, 13413, 7098, 11, 51136], "temperature": 0.0, "avg_logprob": -0.09586433263925406, "compression_ratio": 1.7515527950310559, "no_speech_prob": 0.008563097566366196}, {"id": 123, "seek": 84660, "start": 862.0400000000001, "end": 869.32, "text": " it creates the assembly there if you can see and then it creates the object files and in order to", "tokens": [51136, 309, 7829, 264, 12103, 456, 498, 291, 393, 536, 293, 550, 309, 7829, 264, 2657, 7098, 293, 294, 1668, 281, 51500], "temperature": 0.0, "avg_logprob": -0.09586433263925406, "compression_ratio": 1.7515527950310559, "no_speech_prob": 0.008563097566366196}, {"id": 124, "seek": 86932, "start": 869.32, "end": 879.08, "text": " create the final executable lots of libraries have to be included right and this is the library", "tokens": [50364, 1884, 264, 2572, 7568, 712, 3195, 295, 15148, 362, 281, 312, 5556, 558, 293, 341, 307, 264, 6405, 50852], "temperature": 0.0, "avg_logprob": -0.10123315064803413, "compression_ratio": 1.911764705882353, "no_speech_prob": 0.016845334321260452}, {"id": 125, "seek": 86932, "start": 879.08, "end": 885.08, "text": " is being included in the executable right and then we have the other set of things that in order to", "tokens": [50852, 307, 885, 5556, 294, 264, 7568, 712, 558, 293, 550, 321, 362, 264, 661, 992, 295, 721, 300, 294, 1668, 281, 51152], "temperature": 0.0, "avg_logprob": -0.10123315064803413, "compression_ratio": 1.911764705882353, "no_speech_prob": 0.016845334321260452}, {"id": 126, "seek": 86932, "start": 885.08, "end": 891.96, "text": " run cc one which is an executable so a file in the file system right, you have to load dynamically", "tokens": [51152, 1190, 269, 66, 472, 597, 307, 364, 7568, 712, 370, 257, 3991, 294, 264, 3991, 1185, 558, 11, 291, 362, 281, 3677, 43492, 51496], "temperature": 0.0, "avg_logprob": -0.10123315064803413, "compression_ratio": 1.911764705882353, "no_speech_prob": 0.016845334321260452}, {"id": 127, "seek": 86932, "start": 891.96, "end": 897.8800000000001, "text": " a number of other libraries that this executable depends on, so you have to record all these as", "tokens": [51496, 257, 1230, 295, 661, 15148, 300, 341, 7568, 712, 5946, 322, 11, 370, 291, 362, 281, 2136, 439, 613, 382, 51792], "temperature": 0.0, "avg_logprob": -0.10123315064803413, "compression_ratio": 1.911764705882353, "no_speech_prob": 0.016845334321260452}, {"id": 128, "seek": 89788, "start": 897.88, "end": 906.84, "text": " well because again you have to have an accurate record of everything being used right, so yeah", "tokens": [50364, 731, 570, 797, 291, 362, 281, 362, 364, 8559, 2136, 295, 1203, 885, 1143, 558, 11, 370, 1338, 50812], "temperature": 0.0, "avg_logprob": -0.0860654151800907, "compression_ratio": 1.6900584795321638, "no_speech_prob": 0.004046914633363485}, {"id": 129, "seek": 89788, "start": 906.84, "end": 917.8, "text": " even the hello world example is complex right and you create and record lots of files and processes", "tokens": [50812, 754, 264, 7751, 1002, 1365, 307, 3997, 558, 293, 291, 1884, 293, 2136, 3195, 295, 7098, 293, 7555, 51360], "temperature": 0.0, "avg_logprob": -0.0860654151800907, "compression_ratio": 1.6900584795321638, "no_speech_prob": 0.004046914633363485}, {"id": 130, "seek": 89788, "start": 918.4399999999999, "end": 925.4, "text": " for that one which means oh and a lot of them are going to be reused again and again and again", "tokens": [51392, 337, 300, 472, 597, 1355, 1954, 293, 257, 688, 295, 552, 366, 516, 281, 312, 319, 4717, 797, 293, 797, 293, 797, 51740], "temperature": 0.0, "avg_logprob": -0.0860654151800907, "compression_ratio": 1.6900584795321638, "no_speech_prob": 0.004046914633363485}, {"id": 131, "seek": 92540, "start": 925.4, "end": 931.88, "text": " right so when you had for example to compile two different files right they will both include for", "tokens": [50364, 558, 370, 562, 291, 632, 337, 1365, 281, 31413, 732, 819, 7098, 558, 436, 486, 1293, 4090, 337, 50688], "temperature": 0.0, "avg_logprob": -0.08427103175673374, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.010042697191238403}, {"id": 132, "seek": 92540, "start": 931.88, "end": 940.36, "text": " example stdi.h right and ideally you don't want to redo, you don't want to have another record", "tokens": [50688, 1365, 342, 4504, 13, 71, 558, 293, 22915, 291, 500, 380, 528, 281, 29956, 11, 291, 500, 380, 528, 281, 362, 1071, 2136, 51112], "temperature": 0.0, "avg_logprob": -0.08427103175673374, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.010042697191238403}, {"id": 133, "seek": 92540, "start": 940.36, "end": 946.52, "text": " another box here for the second instance of the same file on the other hand it might not be", "tokens": [51112, 1071, 2424, 510, 337, 264, 1150, 5197, 295, 264, 912, 3991, 322, 264, 661, 1011, 309, 1062, 406, 312, 51420], "temperature": 0.0, "avg_logprob": -0.08427103175673374, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.010042697191238403}, {"id": 134, "seek": 92540, "start": 946.52, "end": 950.68, "text": " the second instance of the same file because something might have changed right while you're", "tokens": [51420, 264, 1150, 5197, 295, 264, 912, 3991, 570, 746, 1062, 362, 3105, 558, 1339, 291, 434, 51628], "temperature": 0.0, "avg_logprob": -0.08427103175673374, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.010042697191238403}, {"id": 135, "seek": 95068, "start": 950.68, "end": 956.4399999999999, "text": " running somebody else is installing a new compiler and it messes up all your binaries right and it's", "tokens": [50364, 2614, 2618, 1646, 307, 20762, 257, 777, 31958, 293, 309, 2082, 279, 493, 439, 428, 5171, 4889, 558, 293, 309, 311, 50652], "temperature": 0.0, "avg_logprob": -0.11257211821419852, "compression_ratio": 1.6031746031746033, "no_speech_prob": 0.006913871504366398}, {"id": 136, "seek": 95068, "start": 956.4399999999999, "end": 963.4799999999999, "text": " different binaries in the first run on the second run and all this stuff so this brings us to having", "tokens": [50652, 819, 5171, 4889, 294, 264, 700, 1190, 322, 264, 1150, 1190, 293, 439, 341, 1507, 370, 341, 5607, 505, 281, 1419, 51004], "temperature": 0.0, "avg_logprob": -0.11257211821419852, "compression_ratio": 1.6031746031746033, "no_speech_prob": 0.006913871504366398}, {"id": 137, "seek": 95068, "start": 963.4799999999999, "end": 975.3199999999999, "text": " to do it efficiently, so you're doing performance. Well performance isn't great at the current moment", "tokens": [51004, 281, 360, 309, 19621, 11, 370, 291, 434, 884, 3389, 13, 1042, 3389, 1943, 380, 869, 412, 264, 2190, 1623, 51596], "temperature": 0.0, "avg_logprob": -0.11257211821419852, "compression_ratio": 1.6031746031746033, "no_speech_prob": 0.006913871504366398}, {"id": 138, "seek": 97532, "start": 975.32, "end": 983.24, "text": " I mean we have to stop and restart the process multiple times using ptrace like you stop the", "tokens": [50364, 286, 914, 321, 362, 281, 1590, 293, 21022, 264, 1399, 3866, 1413, 1228, 280, 6903, 617, 411, 291, 1590, 264, 50760], "temperature": 0.0, "avg_logprob": -0.1698116009051983, "compression_ratio": 1.6783625730994152, "no_speech_prob": 0.008070363663136959}, {"id": 139, "seek": 97532, "start": 983.24, "end": 992.0400000000001, "text": " process you read an entire file from disk you hash it thank you and then you restart the process", "tokens": [50760, 1399, 291, 1401, 364, 2302, 3991, 490, 12355, 291, 22019, 309, 1309, 291, 293, 550, 291, 21022, 264, 1399, 51200], "temperature": 0.0, "avg_logprob": -0.1698116009051983, "compression_ratio": 1.6783625730994152, "no_speech_prob": 0.008070363663136959}, {"id": 140, "seek": 97532, "start": 992.0400000000001, "end": 1000.36, "text": " this is relatively expensive as you can imagine the current profiling shows like when I built one", "tokens": [51200, 341, 307, 7226, 5124, 382, 291, 393, 3811, 264, 2190, 1740, 4883, 3110, 411, 562, 286, 3094, 472, 51616], "temperature": 0.0, "avg_logprob": -0.1698116009051983, "compression_ratio": 1.6783625730994152, "no_speech_prob": 0.008070363663136959}, {"id": 141, "seek": 100036, "start": 1000.36, "end": 1007.08, "text": " and my system normally took nine minutes with build recorded it took 36 minutes so yeah it depends", "tokens": [50364, 293, 452, 1185, 5646, 1890, 4949, 2077, 365, 1322, 8287, 309, 1890, 8652, 2077, 370, 1338, 309, 5946, 50700], "temperature": 0.0, "avg_logprob": -0.08317213882634669, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.0019165569683536887}, {"id": 142, "seek": 100036, "start": 1007.08, "end": 1013.48, "text": " on your hardware your hard disk pretty much but the good news are that there's a lot of room from", "tokens": [50700, 322, 428, 8837, 428, 1152, 12355, 1238, 709, 457, 264, 665, 2583, 366, 300, 456, 311, 257, 688, 295, 1808, 490, 51020], "temperature": 0.0, "avg_logprob": -0.08317213882634669, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.0019165569683536887}, {"id": 143, "seek": 100036, "start": 1013.48, "end": 1018.52, "text": " improvements because first of all we haven't optimized anything we're using plain arrays", "tokens": [51020, 13797, 570, 700, 295, 439, 321, 2378, 380, 26941, 1340, 321, 434, 1228, 11121, 41011, 51272], "temperature": 0.0, "avg_logprob": -0.08317213882634669, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.0019165569683536887}, {"id": 144, "seek": 100036, "start": 1018.52, "end": 1025.24, "text": " we will be switching them with lookup tables so we expect massive performance gain from this", "tokens": [51272, 321, 486, 312, 16493, 552, 365, 574, 1010, 8020, 370, 321, 2066, 5994, 3389, 6052, 490, 341, 51608], "temperature": 0.0, "avg_logprob": -0.08317213882634669, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.0019165569683536887}, {"id": 145, "seek": 102524, "start": 1025.24, "end": 1029.0, "text": " in fact when I tried the hash mapping limitation we dropped this to 22 minutes", "tokens": [50364, 294, 1186, 562, 286, 3031, 264, 22019, 18350, 27432, 321, 8119, 341, 281, 5853, 2077, 50552], "temperature": 0.0, "avg_logprob": -0.12868136894412158, "compression_ratio": 1.599078341013825, "no_speech_prob": 0.0018785413121804595}, {"id": 146, "seek": 102524, "start": 1029.88, "end": 1037.08, "text": " so that's optimistic and another thing to mention is that ptrace actually makes a", "tokens": [50596, 370, 300, 311, 19397, 293, 1071, 551, 281, 2152, 307, 300, 280, 6903, 617, 767, 1669, 257, 50956], "temperature": 0.0, "avg_logprob": -0.12868136894412158, "compression_ratio": 1.599078341013825, "no_speech_prob": 0.0018785413121804595}, {"id": 147, "seek": 102524, "start": 1037.08, "end": 1043.88, "text": " multi-threaded process run as a single thread which is an issue so if you run for example make", "tokens": [50956, 4825, 12, 392, 2538, 292, 1399, 1190, 382, 257, 2167, 7207, 597, 307, 364, 2734, 370, 498, 291, 1190, 337, 1365, 652, 51296], "temperature": 0.0, "avg_logprob": -0.12868136894412158, "compression_ratio": 1.599078341013825, "no_speech_prob": 0.0018785413121804595}, {"id": 148, "seek": 102524, "start": 1043.88, "end": 1052.2, "text": " dustj8 you won't actually get the performance benefits of multiple threads we have plans to", "tokens": [51296, 8634, 73, 23, 291, 1582, 380, 767, 483, 264, 3389, 5311, 295, 3866, 19314, 321, 362, 5482, 281, 51712], "temperature": 0.0, "avg_logprob": -0.12868136894412158, "compression_ratio": 1.599078341013825, "no_speech_prob": 0.0018785413121804595}, {"id": 149, "seek": 105220, "start": 1052.2, "end": 1057.72, "text": " change that as well lots of changes need to be made in fact we proposed it as another project for", "tokens": [50364, 1319, 300, 382, 731, 3195, 295, 2962, 643, 281, 312, 1027, 294, 1186, 321, 10348, 309, 382, 1071, 1716, 337, 50640], "temperature": 0.0, "avg_logprob": -0.09052244822184245, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.0006785786827094853}, {"id": 150, "seek": 105220, "start": 1057.72, "end": 1065.0, "text": " GSOC for this summer and yeah that's it pretty much we hope to see an improvement we can't really", "tokens": [50640, 460, 17188, 34, 337, 341, 4266, 293, 1338, 300, 311, 309, 1238, 709, 321, 1454, 281, 536, 364, 10444, 321, 393, 380, 534, 51004], "temperature": 0.0, "avg_logprob": -0.09052244822184245, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.0006785786827094853}, {"id": 151, "seek": 105220, "start": 1065.0, "end": 1071.32, "text": " tell how what at the end the overhead shall be like how much we can improve build recorder but", "tokens": [51004, 980, 577, 437, 412, 264, 917, 264, 19922, 4393, 312, 411, 577, 709, 321, 393, 3470, 1322, 37744, 457, 51320], "temperature": 0.0, "avg_logprob": -0.09052244822184245, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.0006785786827094853}, {"id": 152, "seek": 105220, "start": 1071.32, "end": 1080.52, "text": " we will get there now regarding future work pretty much we approve performance we plan to handle more", "tokens": [51320, 321, 486, 483, 456, 586, 8595, 2027, 589, 1238, 709, 321, 18827, 3389, 321, 1393, 281, 4813, 544, 51780], "temperature": 0.0, "avg_logprob": -0.09052244822184245, "compression_ratio": 1.6752136752136753, "no_speech_prob": 0.0006785786827094853}, {"id": 153, "seek": 108052, "start": 1080.52, "end": 1086.68, "text": " programming systems I mean you can use it with any programming language you want but if I was to", "tokens": [50364, 9410, 3652, 286, 914, 291, 393, 764, 309, 365, 604, 9410, 2856, 291, 528, 457, 498, 286, 390, 281, 50672], "temperature": 0.0, "avg_logprob": -0.0850693838936942, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0005275330622680485}, {"id": 154, "seek": 108052, "start": 1086.68, "end": 1093.32, "text": " for example compile a project in Java using a build system like Maven Maven has web dependencies", "tokens": [50672, 337, 1365, 31413, 257, 1716, 294, 10745, 1228, 257, 1322, 1185, 411, 4042, 553, 4042, 553, 575, 3670, 36606, 51004], "temperature": 0.0, "avg_logprob": -0.0850693838936942, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0005275330622680485}, {"id": 155, "seek": 108052, "start": 1093.32, "end": 1099.24, "text": " it downloads packages from repositories so ideally we would like to also record those", "tokens": [51004, 309, 36553, 17401, 490, 22283, 2083, 370, 22915, 321, 576, 411, 281, 611, 2136, 729, 51300], "temperature": 0.0, "avg_logprob": -0.0850693838936942, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0005275330622680485}, {"id": 156, "seek": 108052, "start": 1099.24, "end": 1107.0, "text": " repositories those URLs this is another proposed project for the next GSOC and next we have porting", "tokens": [51300, 22283, 2083, 729, 43267, 341, 307, 1071, 10348, 1716, 337, 264, 958, 460, 17188, 34, 293, 958, 321, 362, 2436, 278, 51688], "temperature": 0.0, "avg_logprob": -0.0850693838936942, "compression_ratio": 1.6127659574468085, "no_speech_prob": 0.0005275330622680485}, {"id": 157, "seek": 110700, "start": 1107.0, "end": 1114.84, "text": " it to non-linux systems like other unixes net bsd free bsd the list goes on the one thing that", "tokens": [50364, 309, 281, 2107, 12, 5045, 2449, 3652, 411, 661, 517, 36005, 2533, 272, 82, 67, 1737, 272, 82, 67, 264, 1329, 1709, 322, 264, 472, 551, 300, 50756], "temperature": 0.0, "avg_logprob": -0.11813812871133128, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0018835613736882806}, {"id": 158, "seek": 110700, "start": 1114.84, "end": 1119.8, "text": " wasn't mentioned is that build recorder at the current time only works with Linux kernels of", "tokens": [50756, 2067, 380, 2835, 307, 300, 1322, 37744, 412, 264, 2190, 565, 787, 1985, 365, 18734, 23434, 1625, 295, 51004], "temperature": 0.0, "avg_logprob": -0.11813812871133128, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0018835613736882806}, {"id": 159, "seek": 110700, "start": 1119.8, "end": 1130.52, "text": " version 5.3 plus reasons being reason being that we are using some system calls that make it run", "tokens": [51004, 3037, 1025, 13, 18, 1804, 4112, 885, 1778, 885, 300, 321, 366, 1228, 512, 1185, 5498, 300, 652, 309, 1190, 51540], "temperature": 0.0, "avg_logprob": -0.11813812871133128, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0018835613736882806}, {"id": 160, "seek": 110700, "start": 1130.52, "end": 1135.16, "text": " on every architecture so you can build it on a Raspberry Pi or any architecture of your like", "tokens": [51540, 322, 633, 9482, 370, 291, 393, 1322, 309, 322, 257, 41154, 17741, 420, 604, 9482, 295, 428, 411, 51772], "temperature": 0.0, "avg_logprob": -0.11813812871133128, "compression_ratio": 1.6535087719298245, "no_speech_prob": 0.0018835613736882806}, {"id": 161, "seek": 113516, "start": 1135.5600000000002, "end": 1142.68, "text": " any architecture that Linux supports in expense of not having support for prior versions", "tokens": [50384, 604, 9482, 300, 18734, 9346, 294, 18406, 295, 406, 1419, 1406, 337, 4059, 9606, 50740], "temperature": 0.0, "avg_logprob": -0.20031868327747693, "compression_ratio": 1.4330708661417322, "no_speech_prob": 0.0015625200467184186}, {"id": 162, "seek": 113516, "start": 1144.68, "end": 1154.28, "text": " that was us thank you this is the url yes but we also have a QR code if you do not trust your", "tokens": [50840, 300, 390, 505, 1309, 291, 341, 307, 264, 4038, 75, 2086, 457, 321, 611, 362, 257, 32784, 3089, 498, 291, 360, 406, 3361, 428, 51320], "temperature": 0.0, "avg_logprob": -0.20031868327747693, "compression_ratio": 1.4330708661417322, "no_speech_prob": 0.0015625200467184186}, {"id": 163, "seek": 115428, "start": 1154.28, "end": 1160.2, "text": " code you don't know you're going to be a re-crow right yeah this is not the same url", "tokens": [50364, 3089, 291, 500, 380, 458, 291, 434, 516, 281, 312, 257, 319, 12, 66, 1892, 558, 1338, 341, 307, 406, 264, 912, 4038, 75, 50660], "temperature": 0.0, "avg_logprob": -0.3741989393492003, "compression_ratio": 1.2323232323232323, "no_speech_prob": 0.024222275242209435}, {"id": 164, "seek": 115428, "start": 1163.0, "end": 1165.24, "text": " so we're plenty enough time questions", "tokens": [50800, 370, 321, 434, 7140, 1547, 565, 1651, 50912], "temperature": 0.0, "avg_logprob": -0.3741989393492003, "compression_ratio": 1.2323232323232323, "no_speech_prob": 0.024222275242209435}, {"id": 165, "seek": 116524, "start": 1165.24, "end": 1186.84, "text": " right so the question was how do you know when to hash the file because when you open it for", "tokens": [50364, 558, 370, 264, 1168, 390, 577, 360, 291, 458, 562, 281, 22019, 264, 3991, 570, 562, 291, 1269, 309, 337, 51444], "temperature": 0.0, "avg_logprob": -0.1673797501458062, "compression_ratio": 1.5447154471544715, "no_speech_prob": 0.03562336787581444}, {"id": 166, "seek": 116524, "start": 1186.84, "end": 1193.56, "text": " writing you have to know when it the modification ends and then you should hash the result that's", "tokens": [51444, 3579, 291, 362, 281, 458, 562, 309, 264, 26747, 5314, 293, 550, 291, 820, 22019, 264, 1874, 300, 311, 51780], "temperature": 0.0, "avg_logprob": -0.1673797501458062, "compression_ratio": 1.5447154471544715, "no_speech_prob": 0.03562336787581444}, {"id": 167, "seek": 119356, "start": 1193.56, "end": 1200.84, "text": " correct and the answer is well we have the file when we find the closed system call", "tokens": [50364, 3006, 293, 264, 1867, 307, 731, 321, 362, 264, 3991, 562, 321, 915, 264, 5395, 1185, 818, 50728], "temperature": 0.0, "avg_logprob": -0.08925787981818704, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0027068101335316896}, {"id": 168, "seek": 119356, "start": 1202.12, "end": 1205.6399999999999, "text": " you wait for all modifications to happen and then upon the closed system call", "tokens": [50792, 291, 1699, 337, 439, 26881, 281, 1051, 293, 550, 3564, 264, 5395, 1185, 818, 50968], "temperature": 0.0, "avg_logprob": -0.08925787981818704, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0027068101335316896}, {"id": 169, "seek": 119356, "start": 1206.44, "end": 1212.04, "text": " the process is stopped so all the stuff is in there the virtual memory and the list goes on so you", "tokens": [51008, 264, 1399, 307, 5936, 370, 439, 264, 1507, 307, 294, 456, 264, 6374, 4675, 293, 264, 1329, 1709, 322, 370, 291, 51288], "temperature": 0.0, "avg_logprob": -0.08925787981818704, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0027068101335316896}, {"id": 170, "seek": 119356, "start": 1212.04, "end": 1217.8799999999999, "text": " have the file at that time we also have the file when we open the file to see if it was seen before", "tokens": [51288, 362, 264, 3991, 412, 300, 565, 321, 611, 362, 264, 3991, 562, 321, 1269, 264, 3991, 281, 536, 498, 309, 390, 1612, 949, 51580], "temperature": 0.0, "avg_logprob": -0.08925787981818704, "compression_ratio": 1.945945945945946, "no_speech_prob": 0.0027068101335316896}, {"id": 171, "seek": 121788, "start": 1218.8400000000001, "end": 1225.4, "text": " so we can have a lot of nice graph in fact the graph is just a dependency graph in a", "tokens": [50412, 370, 321, 393, 362, 257, 688, 295, 1481, 4295, 294, 1186, 264, 4295, 307, 445, 257, 33621, 4295, 294, 257, 50740], "temperature": 0.0, "avg_logprob": -0.1732563538984819, "compression_ratio": 1.5985401459854014, "no_speech_prob": 0.01576748490333557}, {"id": 172, "seek": 121788, "start": 1225.4, "end": 1228.3600000000001, "text": " like a semantic web as one makes sense", "tokens": [50740, 411, 257, 47982, 3670, 382, 472, 1669, 2020, 50888], "temperature": 0.0, "avg_logprob": -0.1732563538984819, "compression_ratio": 1.5985401459854014, "no_speech_prob": 0.01576748490333557}, {"id": 173, "seek": 121788, "start": 1239.4, "end": 1245.48, "text": " nice so the question was how do we consume this we produce all this information and how is this", "tokens": [51440, 1481, 370, 264, 1168, 390, 577, 360, 321, 14732, 341, 321, 5258, 439, 341, 1589, 293, 577, 307, 341, 51744], "temperature": 0.0, "avg_logprob": -0.1732563538984819, "compression_ratio": 1.5985401459854014, "no_speech_prob": 0.01576748490333557}, {"id": 174, "seek": 124548, "start": 1245.48, "end": 1251.88, "text": " consumed and the answer is this is a build recorder it just records here's the information we", "tokens": [50364, 21226, 293, 264, 1867, 307, 341, 307, 257, 1322, 37744, 309, 445, 7724, 510, 311, 264, 1589, 321, 50684], "temperature": 0.0, "avg_logprob": -0.17528373767168093, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.03189544007182121}, {"id": 175, "seek": 124548, "start": 1252.76, "end": 1259.88, "text": " we have we do not consume it at all it might be used to create to enter it into an s-bomb or", "tokens": [50728, 321, 362, 321, 360, 406, 14732, 309, 412, 439, 309, 1062, 312, 1143, 281, 1884, 281, 3242, 309, 666, 364, 262, 12, 65, 3548, 420, 51084], "temperature": 0.0, "avg_logprob": -0.17528373767168093, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.03189544007182121}, {"id": 176, "seek": 124548, "start": 1259.88, "end": 1264.84, "text": " something like that that's completely out of this this is just recording all this information", "tokens": [51084, 746, 411, 300, 300, 311, 2584, 484, 295, 341, 341, 307, 445, 6613, 439, 341, 1589, 51332], "temperature": 0.0, "avg_logprob": -0.17528373767168093, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.03189544007182121}, {"id": 177, "seek": 124548, "start": 1265.4, "end": 1266.92, "text": " it's out of the scope of this project", "tokens": [51360, 309, 311, 484, 295, 264, 11923, 295, 341, 1716, 51436], "temperature": 0.0, "avg_logprob": -0.17528373767168093, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.03189544007182121}, {"id": 178, "seek": 126692, "start": 1267.64, "end": 1270.52, "text": " yeah let's see sorry", "tokens": [50400, 1338, 718, 311, 536, 2597, 50544], "temperature": 0.0, "avg_logprob": -0.23614058202626753, "compression_ratio": 1.4926470588235294, "no_speech_prob": 0.02293398603796959}, {"id": 179, "seek": 126692, "start": 1275.0800000000002, "end": 1280.28, "text": " have we tried converting the data to svdx similar question to that one no we just record", "tokens": [50772, 362, 321, 3031, 29942, 264, 1412, 281, 262, 85, 67, 87, 2531, 1168, 281, 300, 472, 572, 321, 445, 2136, 51032], "temperature": 0.0, "avg_logprob": -0.23614058202626753, "compression_ratio": 1.4926470588235294, "no_speech_prob": 0.02293398603796959}, {"id": 180, "seek": 126692, "start": 1280.28, "end": 1285.88, "text": " build this is a build recorder right another tool might read this wonderful output and create", "tokens": [51032, 1322, 341, 307, 257, 1322, 37744, 558, 1071, 2290, 1062, 1401, 341, 3715, 5598, 293, 1884, 51312], "temperature": 0.0, "avg_logprob": -0.23614058202626753, "compression_ratio": 1.4926470588235294, "no_speech_prob": 0.02293398603796959}, {"id": 181, "seek": 128588, "start": 1285.88, "end": 1289.4, "text": " whatever they want it's way on the back", "tokens": [50364, 2035, 436, 528, 309, 311, 636, 322, 264, 646, 50540], "temperature": 0.0, "avg_logprob": -0.212887094375935, "compression_ratio": 1.4684684684684686, "no_speech_prob": 0.0242496095597744}, {"id": 182, "seek": 128588, "start": 1294.8400000000001, "end": 1301.64, "text": " the question is have we explored ebb ebbf ebbf whatever you you know what i'm talking about", "tokens": [50812, 264, 1168, 307, 362, 321, 24016, 308, 6692, 308, 6692, 69, 308, 6692, 69, 2035, 291, 291, 458, 437, 741, 478, 1417, 466, 51152], "temperature": 0.0, "avg_logprob": -0.212887094375935, "compression_ratio": 1.4684684684684686, "no_speech_prob": 0.0242496095597744}, {"id": 183, "seek": 128588, "start": 1301.64, "end": 1307.72, "text": " yet the answer is no no not yet", "tokens": [51152, 1939, 264, 1867, 307, 572, 572, 406, 1939, 51456], "temperature": 0.0, "avg_logprob": -0.212887094375935, "compression_ratio": 1.4684684684684686, "no_speech_prob": 0.0242496095597744}, {"id": 184, "seek": 131588, "start": 1316.44, "end": 1321.72, "text": " sorry", "tokens": [50392, 2597, 50656], "temperature": 0.0, "avg_logprob": -0.1522817244896522, "compression_ratio": 1.496124031007752, "no_speech_prob": 0.013187389820814133}, {"id": 185, "seek": 131588, "start": 1325.4, "end": 1330.68, "text": " oh yeah sure so the question is what's the problem with maven that we said that it's going to be", "tokens": [50840, 1954, 1338, 988, 370, 264, 1168, 307, 437, 311, 264, 1154, 365, 463, 553, 300, 321, 848, 300, 309, 311, 516, 281, 312, 51104], "temperature": 0.0, "avg_logprob": -0.1522817244896522, "compression_ratio": 1.496124031007752, "no_speech_prob": 0.013187389820814133}, {"id": 186, "seek": 131588, "start": 1330.68, "end": 1337.5600000000002, "text": " handled in the future yeah on this level maven works the same right so we can't record the", "tokens": [51104, 18033, 294, 264, 2027, 1338, 322, 341, 1496, 463, 553, 1985, 264, 912, 558, 370, 321, 393, 380, 2136, 264, 51448], "temperature": 0.0, "avg_logprob": -0.1522817244896522, "compression_ratio": 1.496124031007752, "no_speech_prob": 0.013187389820814133}, {"id": 187, "seek": 133756, "start": 1337.56, "end": 1346.12, "text": " information but we will just be recording hey a jar file was just been used we would like ideally", "tokens": [50364, 1589, 457, 321, 486, 445, 312, 6613, 4177, 257, 15181, 3991, 390, 445, 668, 1143, 321, 576, 411, 22915, 50792], "temperature": 0.0, "avg_logprob": -0.049996874798303365, "compression_ratio": 1.9402985074626866, "no_speech_prob": 0.14881715178489685}, {"id": 188, "seek": 133756, "start": 1346.12, "end": 1352.6, "text": " to record because maven already downloaded it but we're just tracing the file system system calls", "tokens": [50792, 281, 2136, 570, 463, 553, 1217, 21748, 309, 457, 321, 434, 445, 25262, 264, 3991, 1185, 1185, 5498, 51116], "temperature": 0.0, "avg_logprob": -0.049996874798303365, "compression_ratio": 1.9402985074626866, "no_speech_prob": 0.14881715178489685}, {"id": 189, "seek": 133756, "start": 1352.6, "end": 1357.96, "text": " right so ideally would like also to record the information hey we're downloading from this location", "tokens": [51116, 558, 370, 22915, 576, 411, 611, 281, 2136, 264, 1589, 4177, 321, 434, 32529, 490, 341, 4914, 51384], "temperature": 0.0, "avg_logprob": -0.049996874798303365, "compression_ratio": 1.9402985074626866, "no_speech_prob": 0.14881715178489685}, {"id": 190, "seek": 133756, "start": 1357.96, "end": 1363.8, "text": " this jar file we put it there and then we use it right on the level that we're using it we can", "tokens": [51384, 341, 15181, 3991, 321, 829, 309, 456, 293, 550, 321, 764, 309, 558, 322, 264, 1496, 300, 321, 434, 1228, 309, 321, 393, 51676], "temperature": 0.0, "avg_logprob": -0.049996874798303365, "compression_ratio": 1.9402985074626866, "no_speech_prob": 0.14881715178489685}, {"id": 191, "seek": 136380, "start": 1363.8, "end": 1368.84, "text": " record it right now sorry go ahead so i missed you sorry", "tokens": [50364, 2136, 309, 558, 586, 2597, 352, 2286, 370, 741, 6721, 291, 2597, 50616], "temperature": 0.0, "avg_logprob": -0.1865798482355082, "compression_ratio": 1.5620915032679739, "no_speech_prob": 0.01238157693296671}, {"id": 192, "seek": 136380, "start": 1377.24, "end": 1383.08, "text": " the question is do we distinguish between modifications to a file or completely new", "tokens": [51036, 264, 1168, 307, 360, 321, 20206, 1296, 26881, 281, 257, 3991, 420, 2584, 777, 51328], "temperature": 0.0, "avg_logprob": -0.1865798482355082, "compression_ratio": 1.5620915032679739, "no_speech_prob": 0.01238157693296671}, {"id": 193, "seek": 136380, "start": 1383.08, "end": 1389.3999999999999, "text": " created file and written and the answer is well if we did that the performance would be even worse", "tokens": [51328, 2942, 3991, 293, 3720, 293, 264, 1867, 307, 731, 498, 321, 630, 300, 264, 3389, 576, 312, 754, 5324, 51644], "temperature": 0.0, "avg_logprob": -0.1865798482355082, "compression_ratio": 1.5620915032679739, "no_speech_prob": 0.01238157693296671}, {"id": 194, "seek": 138940, "start": 1390.2, "end": 1395.96, "text": " you can actually do it you can actually add another handler that checks for write system calls", "tokens": [50404, 291, 393, 767, 360, 309, 291, 393, 767, 909, 1071, 41967, 300, 13834, 337, 2464, 1185, 5498, 50692], "temperature": 0.0, "avg_logprob": -0.2449024200439453, "compression_ratio": 1.625, "no_speech_prob": 0.017575165256857872}, {"id": 195, "seek": 138940, "start": 1395.96, "end": 1400.6000000000001, "text": " and has the file every time but imagine if you had to has the file every time someone calls right", "tokens": [50692, 293, 575, 264, 3991, 633, 565, 457, 3811, 498, 291, 632, 281, 575, 264, 3991, 633, 565, 1580, 5498, 558, 50924], "temperature": 0.0, "avg_logprob": -0.2449024200439453, "compression_ratio": 1.625, "no_speech_prob": 0.017575165256857872}, {"id": 196, "seek": 138940, "start": 1402.2, "end": 1403.0, "text": " i don't want to", "tokens": [51004, 741, 500, 380, 528, 281, 51044], "temperature": 0.0, "avg_logprob": -0.2449024200439453, "compression_ratio": 1.625, "no_speech_prob": 0.017575165256857872}, {"id": 197, "seek": 140300, "start": 1403.88, "end": 1428.6, "text": " okay the comment was that there was a", "tokens": [50408, 1392, 264, 2871, 390, 300, 456, 390, 257, 51644], "temperature": 0.0, "avg_logprob": -0.6577361424763998, "compression_ratio": 0.9736842105263158, "no_speech_prob": 0.03788911551237106}, {"id": 198, "seek": 142860, "start": 1428.6, "end": 1436.28, "text": " yesterday talk in the golden room that they showed using ebpf instead of ptrace for a", "tokens": [50364, 5186, 751, 294, 264, 9729, 1808, 300, 436, 4712, 1228, 308, 65, 25302, 2602, 295, 280, 6903, 617, 337, 257, 50748], "temperature": 0.0, "avg_logprob": -0.20583697369224147, "compression_ratio": 1.3982300884955752, "no_speech_prob": 0.022830601781606674}, {"id": 199, "seek": 142860, "start": 1436.28, "end": 1442.1999999999998, "text": " similar work and performance was great something to explore yes go ahead", "tokens": [50748, 2531, 589, 293, 3389, 390, 869, 746, 281, 6839, 2086, 352, 2286, 51044], "temperature": 0.0, "avg_logprob": -0.20583697369224147, "compression_ratio": 1.3982300884955752, "no_speech_prob": 0.022830601781606674}, {"id": 200, "seek": 144220, "start": 1442.44, "end": 1462.44, "text": " the question is how does this compare to scan code trace code that supposed", "tokens": [50376, 264, 1168, 307, 577, 775, 341, 6794, 281, 11049, 3089, 13508, 3089, 300, 3442, 51376], "temperature": 0.0, "avg_logprob": -0.1995184063911438, "compression_ratio": 1.4482758620689655, "no_speech_prob": 0.023698437958955765}, {"id": 201, "seek": 144220, "start": 1462.44, "end": 1469.48, "text": " doing the same thing we have not measured it for that i didn't even know that you know sorry", "tokens": [51376, 884, 264, 912, 551, 321, 362, 406, 12690, 309, 337, 300, 741, 994, 380, 754, 458, 300, 291, 458, 2597, 51728], "temperature": 0.0, "avg_logprob": -0.1995184063911438, "compression_ratio": 1.4482758620689655, "no_speech_prob": 0.023698437958955765}, {"id": 202, "seek": 146948, "start": 1469.48, "end": 1476.92, "text": " oh if it runs for this race it's yeah it's the same as trace race we don't", "tokens": [50364, 1954, 498, 309, 6676, 337, 341, 4569, 309, 311, 1338, 309, 311, 264, 912, 382, 13508, 4569, 321, 500, 380, 50736], "temperature": 0.0, "avg_logprob": -0.3379293967937601, "compression_ratio": 1.236842105263158, "no_speech_prob": 0.02002141997218132}, {"id": 203, "seek": 146948, "start": 1479.48, "end": 1480.52, "text": " any other questions", "tokens": [50864, 604, 661, 1651, 50916], "temperature": 0.0, "avg_logprob": -0.3379293967937601, "compression_ratio": 1.236842105263158, "no_speech_prob": 0.02002141997218132}, {"id": 204, "seek": 148052, "start": 1480.52, "end": 1497.72, "text": " wow the question was what does it happen when you run it", "tokens": [50364, 6076, 264, 1168, 390, 437, 775, 309, 1051, 562, 291, 1190, 309, 51224], "temperature": 0.0, "avg_logprob": -0.24849602483933972, "compression_ratio": 1.303030303030303, "no_speech_prob": 0.03528665378689766}, {"id": 205, "seek": 148052, "start": 1498.76, "end": 1505.8799999999999, "text": " while building a container you mean or so again remember it just records", "tokens": [51276, 1339, 2390, 257, 10129, 291, 914, 420, 370, 797, 1604, 309, 445, 7724, 51632], "temperature": 0.0, "avg_logprob": -0.24849602483933972, "compression_ratio": 1.303030303030303, "no_speech_prob": 0.03528665378689766}, {"id": 206, "seek": 150588, "start": 1506.68, "end": 1514.92, "text": " it just records all the system calls right into the disk right so when you run it in the", "tokens": [50404, 309, 445, 7724, 439, 264, 1185, 5498, 558, 666, 264, 12355, 558, 370, 562, 291, 1190, 309, 294, 264, 50816], "temperature": 0.0, "avg_logprob": -0.23673485600671104, "compression_ratio": 1.8106796116504855, "no_speech_prob": 0.0057069966569542885}, {"id": 207, "seek": 150588, "start": 1514.92, "end": 1522.3600000000001, "text": " while you do docker build it will record all the files being used in order so if you do copy", "tokens": [50816, 1339, 291, 360, 360, 9178, 1322, 309, 486, 2136, 439, 264, 7098, 885, 1143, 294, 1668, 370, 498, 291, 360, 5055, 51188], "temperature": 0.0, "avg_logprob": -0.23673485600671104, "compression_ratio": 1.8106796116504855, "no_speech_prob": 0.0057069966569542885}, {"id": 208, "seek": 150588, "start": 1522.3600000000001, "end": 1529.5600000000002, "text": " things it will record everything being copied into the layer right stuff like that yeah go ahead", "tokens": [51188, 721, 309, 486, 2136, 1203, 885, 25365, 666, 264, 4583, 558, 1507, 411, 300, 1338, 352, 2286, 51548], "temperature": 0.0, "avg_logprob": -0.23673485600671104, "compression_ratio": 1.8106796116504855, "no_speech_prob": 0.0057069966569542885}, {"id": 209, "seek": 150588, "start": 1530.68, "end": 1535.4, "text": " to be honest the command doesn't have to be a build command you can literally plug in anything", "tokens": [51604, 281, 312, 3245, 264, 5622, 1177, 380, 362, 281, 312, 257, 1322, 5622, 291, 393, 3736, 5452, 294, 1340, 51840], "temperature": 0.0, "avg_logprob": -0.23673485600671104, "compression_ratio": 1.8106796116504855, "no_speech_prob": 0.0057069966569542885}, {"id": 210, "seek": 153540, "start": 1535.88, "end": 1541.8000000000002, "text": " in there ls or whatever i mean we are not supporting it we can promise that we will", "tokens": [50388, 294, 456, 287, 82, 420, 2035, 741, 914, 321, 366, 406, 7231, 309, 321, 393, 6228, 300, 321, 486, 50684], "temperature": 0.0, "avg_logprob": -0.0899993237994966, "compression_ratio": 1.925531914893617, "no_speech_prob": 0.0032250918447971344}, {"id": 211, "seek": 153540, "start": 1541.8000000000002, "end": 1549.0, "text": " be supporting it in the future but you can do that so anything you can imagine it will run", "tokens": [50684, 312, 7231, 309, 294, 264, 2027, 457, 291, 393, 360, 300, 370, 1340, 291, 393, 3811, 309, 486, 1190, 51044], "temperature": 0.0, "avg_logprob": -0.0899993237994966, "compression_ratio": 1.925531914893617, "no_speech_prob": 0.0032250918447971344}, {"id": 212, "seek": 153540, "start": 1549.64, "end": 1555.16, "text": " docker it will probably record that docker docker was called docker will still run all those", "tokens": [51076, 360, 9178, 309, 486, 1391, 2136, 300, 360, 9178, 360, 9178, 390, 1219, 360, 9178, 486, 920, 1190, 439, 729, 51352], "temperature": 0.0, "avg_logprob": -0.0899993237994966, "compression_ratio": 1.925531914893617, "no_speech_prob": 0.0032250918447971344}, {"id": 213, "seek": 153540, "start": 1555.16, "end": 1559.64, "text": " dependencies it will still try to compile it will still link against all those libraries which", "tokens": [51352, 36606, 309, 486, 920, 853, 281, 31413, 309, 486, 920, 2113, 1970, 439, 729, 15148, 597, 51576], "temperature": 0.0, "avg_logprob": -0.0899993237994966, "compression_ratio": 1.925531914893617, "no_speech_prob": 0.0032250918447971344}, {"id": 214, "seek": 155964, "start": 1560.3600000000001, "end": 1569.96, "text": " is anyways so yeah any thoughts about going off off linux to uh windows", "tokens": [50400, 307, 13448, 370, 1338, 604, 4598, 466, 516, 766, 766, 22896, 2449, 281, 2232, 9309, 50880], "temperature": 0.0, "avg_logprob": -0.3137195587158203, "compression_ratio": 1.3833333333333333, "no_speech_prob": 0.013688147068023682}, {"id": 215, "seek": 155964, "start": 1574.8400000000001, "end": 1584.1200000000001, "text": " we are at an open source conference repeat the question ah yes they asked if we're planning to", "tokens": [51124, 321, 366, 412, 364, 1269, 4009, 7586, 7149, 264, 1168, 3716, 2086, 436, 2351, 498, 321, 434, 5038, 281, 51588], "temperature": 0.0, "avg_logprob": -0.3137195587158203, "compression_ratio": 1.3833333333333333, "no_speech_prob": 0.013688147068023682}, {"id": 216, "seek": 158412, "start": 1584.1999999999998, "end": 1588.76, "text": " implement something like this on windows well no", "tokens": [50368, 4445, 746, 411, 341, 322, 9309, 731, 572, 50596], "temperature": 0.0, "avg_logprob": -0.14966368357340495, "compression_ratio": 1.6649214659685865, "no_speech_prob": 0.018201017752289772}, {"id": 217, "seek": 158412, "start": 1591.56, "end": 1597.3999999999999, "text": " first of all first of all it's hard the idea the idea would be great if i have developers", "tokens": [50736, 700, 295, 439, 700, 295, 439, 309, 311, 1152, 264, 1558, 264, 1558, 576, 312, 869, 498, 741, 362, 8849, 51028], "temperature": 0.0, "avg_logprob": -0.14966368357340495, "compression_ratio": 1.6649214659685865, "no_speech_prob": 0.018201017752289772}, {"id": 218, "seek": 158412, "start": 1597.3999999999999, "end": 1604.9199999999998, "text": " who can do that and know the corresponding things magic to do uh in windows pr's welcome", "tokens": [51028, 567, 393, 360, 300, 293, 458, 264, 11760, 721, 5585, 281, 360, 2232, 294, 9309, 582, 311, 2928, 51404], "temperature": 0.0, "avg_logprob": -0.14966368357340495, "compression_ratio": 1.6649214659685865, "no_speech_prob": 0.018201017752289772}, {"id": 219, "seek": 158412, "start": 1605.6399999999999, "end": 1610.6799999999998, "text": " it's an entirely different process you don't have to all the system goals and other unixes", "tokens": [51440, 309, 311, 364, 7696, 819, 1399, 291, 500, 380, 362, 281, 439, 264, 1185, 5493, 293, 661, 517, 36005, 51692], "temperature": 0.0, "avg_logprob": -0.14966368357340495, "compression_ratio": 1.6649214659685865, "no_speech_prob": 0.018201017752289772}, {"id": 220, "seek": 161068, "start": 1610.76, "end": 1623.0, "text": " we can work with that but there must be something on windows but i don't know", "tokens": [50368, 321, 393, 589, 365, 300, 457, 456, 1633, 312, 746, 322, 9309, 457, 741, 500, 380, 458, 50980], "temperature": 0.0, "avg_logprob": -0.42812472123366135, "compression_ratio": 1.1875, "no_speech_prob": 0.017885001376271248}, {"id": 221, "seek": 161068, "start": 1627.48, "end": 1636.68, "text": " no okay thank you", "tokens": [51204, 572, 1392, 1309, 291, 51664], "temperature": 0.0, "avg_logprob": -0.42812472123366135, "compression_ratio": 1.1875, "no_speech_prob": 0.017885001376271248}, {"id": 222, "seek": 164068, "start": 1640.68, "end": 1641.18, "text": " you", "tokens": [50364, 291, 50389], "temperature": 0.0, "avg_logprob": -0.7601411938667297, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.16210979223251343}], "language": "en"}