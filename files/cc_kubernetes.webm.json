{"text": " We're going to start here, we have a presentation about installation, almost presentation for NADIS, how to manage Kubernetes, we think Kubernetes. The presenters are Mohit and Malta, Malta, so big shout out to them. Thank you. Yeah, we'd like to pick up where I think Nick in his initial presentation of saying we need to have like a let's encrypt movement, we need to make confidential computing a commodity, where he started off and then Mark knows I think had a great talk showing all those bits and pieces that we need to have to bring together like the use cases, the cloud native world, the way we develop applications for the cloud and the advantages that the confidential computing technology gives us, how to bring them together and where are those little gaps and historically seen or for different kind of use cases, I would roughly split from a use case perspective of if I want to develop an application, where can CC help me, how can I apply confidential computing, I can roughly split that in three tiers if you will, I think one is definitely managing keys, having enclaves that hold your cryptographic certificates, your keys that process the crypto operations for you, very small TCB, very small kind of application, right, and then the second one is where I package my entire application inside a enclave, inside a confidential container and I think that's what we've been doing lately a lot and then I think the third thing is what Mark has described is how can we bring that together, making this orchestratable, making this manageable, deployable and I think there are different ways of getting from the tier two or the way we are to here, one is I guess what Mark has described with taking containers, making them confidential containers and then having the problems with orchestration and an orthogonal approach that we like to present now is more of the idea of having confidential clusters, so instead of isolating individual containers, isolating the nodes, the downside probably is a little bit larger TCB and the advantage is being more closely to where we are right now with deploying and developing cloud native applications. Talking about challenges for level three, definitely I think one of the biggest ones is UI UX, right, there's little hope that people will go ahead and drastically adjust the way they deploy and develop applications for the cloud just because they want to use this new type of technology, so we need to get very close to where they are and bring those worlds together and then of course there are the challenges Mark has described with orchestration, orchestration, attesting, how can we attest all those different containers that are running in my cluster and don't necessarily want to verify each and individual instance of it, right, that could be a thousand and more of the same. And then once I have a cluster, all those day two operations of updating, upgrading and doing that in a sensitive way where I can always verify what's currently being running and what are the changes and yeah, big part of what we are going to present today is the right one here where a big benefit of the cloud is actually that I can give away some of this orchestrational work and I consume managed services that are operated by someone or autonomously and I just consume them through an API or any other kind of interface. So as Nick has said, infrastructure is rolling out, we see all those confidential technologies in the cloud, AMD, SCB, we have heard so many, many today, IBM, RISC-5, most of them give us a confidential VM, which is, as we've seen, not necessarily the abstraction we want, but still we can already consume managed Kubernetes that runs on confidential VMs, at least for the worker nodes. I think Azure has it, GCP has it, yeah. So this exists, but it's not really solving the problem, I mean, it gives us runtime encryption for the stuff that works on, lives on that nodes, but all the edges, all the IO is not protected, right? The API server is not protected, we've seen that in Magnus Talk, the metadata problem, the problem of the trusted control plane, the way if you want to consume persistent volumes, is that automatically encrypted or do you need to adjust my application to encrypt before writing to storage? So the idea of a confidential cluster is that I have somebody or something that fills in those gaps, so that I have, instead of those individual confidential VMs, I have one big context that I can verify through attestation, that I can establish a secret channel, and then if I'm in that context, if I'm in that cluster, I can just use Kubernetes as I used to, and from inside there, essentially everything is trusted, right? It's a different type of approach, it just creates an envelope around my Kubernetes and isolates that as a whole. As I said, I think UX and UI and the way we use this is super important, it's not gonna work that we need a lot of adjustments, a lot of additional steps in the development workflows, so having, this is just an example of constellation here, but having a simple way of creating such a confidential cluster and then using it is important, and all those things that I showed, all the challenges we need to solve below, we need to make this more or less invisible, right? In terms of constellation, we try to make the node operating system as verifiable as possible, strip it down as much as possible, harden it, then strip them together for a cluster, we need to think about supply chain, we need to think about how we can automatically encrypt all the stuff that goes over the network, that goes to the storage. Ideally this is all open source, so constellation, if I didn't have mentioned it's open source, and it's cloud agnostic, so it can run everywhere, and then for most of confidential computing stuff, I need some way of recovery, should things go, should things go south and everything is down and need to get back into running mode. So yeah, the big problem with the confidential cluster concept is now I can create a cluster and we will see in a bit of what that means, but if I can create a cluster, I have everything verified, now I have to maintain and run it on my own, and this is I guess the biggest problem with that concept, right? People want to consume managed stuff, when they have managed Kubernetes, don't want to run their own, orchestrate their own Kubernetes, but this is a big trade-off that people are facing, and yeah, we try to work on concepts of making that as easy as possible, and yeah, Malte is going to show you how. Yeah, so thanks for the introduction. So the basic idea that we had was how can we manage Kubernetes from inside Kubernetes itself, and to kind of draft this idea, I will start by explaining what typically you can do today, so on the left side you really have the traditional on-prem model, which is you have the whole cluster in your own hand, the control plane, the worker nodes, it runs on your own hardware, which is great for security, right? Because you have full control, but it also means you are responsible for every single interaction, like scaling up the cluster, joining the nodes, performing upgrades, both on the OS level and also Kubernetes upgrades, and then on the other side you have something that is super popular, it is just let the cloud provider deal with it, and it means the cloud provider can scale your cluster up and down, just if you have a burst of traffic coming in, you get new nodes, it is all super easy, you can set it up so that the cloud provider will automatically patch your operating system, it will automatically upgrade your Kubernetes, and this is great from a DevOps perspective, it is super simple, it scales, it takes away work from the developer and the operator of the cluster, so what we thought is why don't we meet in the middle, and that is kind of like we have to run our own control plane in the confidential context, but if we do this, we lose all of these smart features from the cloud provider, so we will just reinvent them but inside the cluster, that means we can still do auto scaling, we can still join the nodes by themselves without any human interaction, we can still roll out OS updates and we can even roll out Kubernetes upgrades inside a running Kubernetes cluster, so to explain how this works, I will first go on to how Kubernetes nodes and constellation can actually join the cluster without any outside interaction, and what you have to understand here is these are all confidential VMs and they make heavy use of the measured boot chain, I think we already had some good introductions on this, but I will still show you how this works in an example, so first in the confidential VM we have the firmware, and the firmware is basically just the first part that starts up, and the main task here is to load up the first stage boot loader and to measure it, so we measure it on AMD SEV in the approach we are currently doing, it is measured into a virtual TPM, and then we load this boot loader and then we will start executing it, and the boot loader just has the task of, in our case, loading the next stage and measuring it, which is a unified kernel image, and this is a very neat trick, it is basically just one blob that contains the Linux kernel and in it RAMFS and also the kernel command line, so the nice property here is we can measure all of these in one blob and don't have to take care of the individual components, which can be quite hard to do correctly, and inside of this, in the RAMFS, we will use the kernel command line to extract the hash that we expect for the root file system, and for this we use the Emverity, which I will not go into too much detail about this, it just allows us to have a read-only root file system and we know in advance that it has not been tampered with, and we can efficiently check every block while it is read and before it is actually given to the user land, so that's how we get to the root file system, and inside of this root file system we have a small application and the task of this application is to join this node into the Kubernetes cluster. So next to the completely unmodifiable OS, we have a state disk and the only task of the state disk is to have the data for Kubernetes itself, like container images and state at runtime that has to be stored on disk, and this is initialized to be completely clean, it's encrypted, and yeah, this is like a component we need to operate. So the next question is how do we make these things possible, and for this we deploy some microservices inside of Constellation, and these are the node operator, this is responsible for actually rolling out updates, it's the join service that attests nodes that are joining the cluster and decides if they are allowed to join or not, we also have a key service that is handling encryption keys, and yeah, some more that are not really important right now. So how does a node actually join the cluster? So I mentioned there's the bootstrapper that is started inside of the confidential virtual machine and it will autonomously search for the existing Kubernetes control plan and it will perform remote attestation using attested TLS, and it will basically use the attestation statement for example from AMD SCV, SNP, and this way, so the join service already knows what measurements to expect from a correct node that is running the expected software, so it can decide at this point if the booted node is running what you wanted to run and decide if it is allowed to join the cluster. So based on this, the join service can then offer the node a join token which allows it to join the cluster and it will also hand out a permanent encryption key for the state disk. So next we will have a quick look at how updates work and on a high level, we want the administrator to be in control, we don't want to give up complete control over the update process, but we want the actual execution to be completely automatic and seamless and we do this by basically just telling the cluster what to do and the rest is done by a Kubernetes operator which is a way to give in a desired state and let the cluster handle moving towards the state. And an important thing to think about here is we are running in the cloud environment and we don't want you to depend on individual nodes, this is also what GKE and EKS and others are doing, we are saying if you want to upgrade, we will give you a new node that has the desired configuration and we will never try to do updates in place. So how does the actual update work? We basically give in custom resources that describe the desired state, so the Kubernetes version and the OS image that we want to run on and some properties to actually verify like the expected measurements for the new image and tashes for the individual Kubernetes components and the operator reads this information and basically checks if the desired state matches reality and if it detects a mismatch, it will first stop any auto-scaling operations that are happening in the cluster and then it will start replacing the nodes one by one and for this we use the different APIs by the cloud providers. So in this case, we will just spawn a new node in the correct node group that has the desired configuration. We wait for the node to autonomously join the cluster and we wait for it to become ready. Next we will cordon and drain the node which just means we will safely move over your running workloads from this node to other nodes in the cluster and only if we are sure that your running workloads moved over, we will then remove the old node from the cluster and this is basically how you can get from having outdated nodes to having updated nodes and this will just go on until your whole cluster is up to date. You can also parallelize this and when this is done, you can just restart the auto-scaler and move on with your day. All right, quick conclusion. So in summary, the fundamental ideas, we take this confidential cluster concept, enveloping the entire Kubernetes cluster instead of protecting single containers or parts, where we gain is we basically get all the orchestration for free, we need to protect the edges, all the Ion and so forth. The downside is we can't isolate inside that cluster so it's one big envelope, of course. This works already, it's an open source tool, you can check out Constellation on GitHub and try it locally or on one of the big clouds. From a Kubernetes perspective, it's just vanilla Kubernetes so not surprising that it's certified. To give out some more references, if you're interested in this whole image part, there was the image-based Linux and TPM death room, there's a lot of talks on these topics, also very interesting. There's a, so this is the last talk here, but if you're interested in more confidential computing, sneak a little advertisement here for the OC3 Open Confidential Computing Conference that's going to happen in March, it's virtual free, you can just sign up and listen to the talks if you're interested. A bunch of the folks that were here think also have a talk there. Yeah, so yeah, if you have any questions, please feel free to get in touch and that's it. Thank you. Oh, so yeah. So the question was about the Attesta TLS, when we join nodes, we establish a seek connection based on Attesta TLS. Yes, so first of all, our implementation is open source, it's part of the consolation source on GitHub. I think it's nothing fancy, we use the AMD SCV or Intel TDX and so forth, remote attestation statement to exchange a key as part of the data that's sent over. And we bind the TLS session to that attested key. I guess there are a couple of implementations for Attesta TLS, they work more or less the same. Yeah. I think to the most that I'm familiar with, there is this vulnerability in remote attestation that can be faked by a machine's whole spread and now I wonder if it is possible to fight out from the remote attestation of the whole cluster, any single machine in the cluster may make an attestation and it goes unnoticed or not, all the others are for example useful. Okay, so repeat the question. The question was there is a known vulnerability for attestation in confidential computing and if given this confidential cluster, if from the whole cluster attestation I can refer to if one of the nodes is faking attestation. I have to say there were several vulnerabilities in several of the CC technologies over time, I'm not aware of, no with what vulnerability you're referring to. Okay, so the way the cluster attestation works is you give the, let's say the first node, it has a known configuration, it will attest all other nodes based on this known attestation. If one node would be able to perfectly fake that attestation, you would not know from an outside, from a cluster attestation perspective which node this would be. But yeah, I guess that's what you can say. It is super simple but it is big TCB, do you have any plans to reduce the TCB? Yeah, we try to, as I said, this is a trade-off, yes, it's a much larger TCB than SGX, much larger TCB even than confidential containers. We of course will try to make it as minimal as possible. Biggest leverage is of course the node OS and everything we can do inside there, yeah, we'll definitely try to improve there. Yes? So you mentioned that there's some firmware at the beginning of the food processes that firmware provided by you or by the provider? Very good question. Oh, sorry. Yeah, the question is, part of the confidential VMs is the first component that's booted is the firmware. Do we have control of the firmware? Ideally we would have, but what's provided by the cloud providers right now is Azure has something in preview that allows you to do that. It's not general available and GCP does not allow you that. So the firmware for at least GCP or Azure is completely controlled by them. On OpenStack with QM or KVM, you can potentially fully control the firmware, yeah. Yes, next question. That doesn't create a huge trust problem because you have to trust the firmware to be secure. I mean, this is, of course, does this create a trust problem is the question. Yeah. I mean, this is a controversy, I fully agree with you. This is not how we would like it. This is just the best we can have.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.52, "text": " We're going to start here, we have a presentation about installation, almost presentation for", "tokens": [492, 434, 516, 281, 722, 510, 11, 321, 362, 257, 5860, 466, 13260, 11, 1920, 5860, 337], "temperature": 0.0, "avg_logprob": -0.6758752120168585, "compression_ratio": 1.4594594594594594, "no_speech_prob": 0.3506530523300171}, {"id": 1, "seek": 0, "start": 12.52, "end": 16.64, "text": " NADIS, how to manage Kubernetes, we think Kubernetes.", "tokens": [426, 6112, 2343, 11, 577, 281, 3067, 23145, 11, 321, 519, 23145, 13], "temperature": 0.0, "avg_logprob": -0.6758752120168585, "compression_ratio": 1.4594594594594594, "no_speech_prob": 0.3506530523300171}, {"id": 2, "seek": 0, "start": 16.64, "end": 24.88, "text": " The presenters are Mohit and Malta, Malta, so big shout out to them.", "tokens": [440, 36987, 366, 16123, 270, 293, 5746, 1328, 11, 5746, 1328, 11, 370, 955, 8043, 484, 281, 552, 13], "temperature": 0.0, "avg_logprob": -0.6758752120168585, "compression_ratio": 1.4594594594594594, "no_speech_prob": 0.3506530523300171}, {"id": 3, "seek": 2488, "start": 24.88, "end": 31.96, "text": " Thank you. Yeah, we'd like to pick up where I think Nick in his initial presentation of", "tokens": [1044, 291, 13, 865, 11, 321, 1116, 411, 281, 1888, 493, 689, 286, 519, 9449, 294, 702, 5883, 5860, 295], "temperature": 0.0, "avg_logprob": -0.18761627419481, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.00015060602163430303}, {"id": 4, "seek": 2488, "start": 31.96, "end": 36.519999999999996, "text": " saying we need to have like a let's encrypt movement, we need to make confidential computing", "tokens": [1566, 321, 643, 281, 362, 411, 257, 718, 311, 17972, 662, 3963, 11, 321, 643, 281, 652, 27054, 15866], "temperature": 0.0, "avg_logprob": -0.18761627419481, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.00015060602163430303}, {"id": 5, "seek": 2488, "start": 36.519999999999996, "end": 42.04, "text": " a commodity, where he started off and then Mark knows I think had a great talk showing", "tokens": [257, 29125, 11, 689, 415, 1409, 766, 293, 550, 3934, 3255, 286, 519, 632, 257, 869, 751, 4099], "temperature": 0.0, "avg_logprob": -0.18761627419481, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.00015060602163430303}, {"id": 6, "seek": 2488, "start": 42.04, "end": 46.72, "text": " all those bits and pieces that we need to have to bring together like the use cases,", "tokens": [439, 729, 9239, 293, 3755, 300, 321, 643, 281, 362, 281, 1565, 1214, 411, 264, 764, 3331, 11], "temperature": 0.0, "avg_logprob": -0.18761627419481, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.00015060602163430303}, {"id": 7, "seek": 2488, "start": 46.72, "end": 51.72, "text": " the cloud native world, the way we develop applications for the cloud and the advantages", "tokens": [264, 4588, 8470, 1002, 11, 264, 636, 321, 1499, 5821, 337, 264, 4588, 293, 264, 14906], "temperature": 0.0, "avg_logprob": -0.18761627419481, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.00015060602163430303}, {"id": 8, "seek": 5172, "start": 51.72, "end": 55.28, "text": " that the confidential computing technology gives us, how to bring them together and where", "tokens": [300, 264, 27054, 15866, 2899, 2709, 505, 11, 577, 281, 1565, 552, 1214, 293, 689], "temperature": 0.0, "avg_logprob": -0.23268841474484175, "compression_ratio": 1.6904761904761905, "no_speech_prob": 6.81223682477139e-05}, {"id": 9, "seek": 5172, "start": 55.28, "end": 63.8, "text": " are those little gaps and historically seen or for different kind of use cases, I would", "tokens": [366, 729, 707, 15031, 293, 16180, 1612, 420, 337, 819, 733, 295, 764, 3331, 11, 286, 576], "temperature": 0.0, "avg_logprob": -0.23268841474484175, "compression_ratio": 1.6904761904761905, "no_speech_prob": 6.81223682477139e-05}, {"id": 10, "seek": 5172, "start": 63.8, "end": 69.44, "text": " roughly split from a use case perspective of if I want to develop an application, where", "tokens": [9810, 7472, 490, 257, 764, 1389, 4585, 295, 498, 286, 528, 281, 1499, 364, 3861, 11, 689], "temperature": 0.0, "avg_logprob": -0.23268841474484175, "compression_ratio": 1.6904761904761905, "no_speech_prob": 6.81223682477139e-05}, {"id": 11, "seek": 5172, "start": 69.44, "end": 75.84, "text": " can CC help me, how can I apply confidential computing, I can roughly split that in three", "tokens": [393, 12630, 854, 385, 11, 577, 393, 286, 3079, 27054, 15866, 11, 286, 393, 9810, 7472, 300, 294, 1045], "temperature": 0.0, "avg_logprob": -0.23268841474484175, "compression_ratio": 1.6904761904761905, "no_speech_prob": 6.81223682477139e-05}, {"id": 12, "seek": 7584, "start": 75.84, "end": 84.0, "text": " tiers if you will, I think one is definitely managing keys, having enclaves that hold your", "tokens": [40563, 498, 291, 486, 11, 286, 519, 472, 307, 2138, 11642, 9317, 11, 1419, 20987, 5423, 300, 1797, 428], "temperature": 0.0, "avg_logprob": -0.18803184263167844, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.1326642531203106e-05}, {"id": 13, "seek": 7584, "start": 84.0, "end": 91.92, "text": " cryptographic certificates, your keys that process the crypto operations for you, very", "tokens": [9844, 12295, 32941, 11, 428, 9317, 300, 1399, 264, 17240, 7705, 337, 291, 11, 588], "temperature": 0.0, "avg_logprob": -0.18803184263167844, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.1326642531203106e-05}, {"id": 14, "seek": 7584, "start": 91.92, "end": 102.28, "text": " small TCB, very small kind of application, right, and then the second one is where I", "tokens": [1359, 34150, 33, 11, 588, 1359, 733, 295, 3861, 11, 558, 11, 293, 550, 264, 1150, 472, 307, 689, 286], "temperature": 0.0, "avg_logprob": -0.18803184263167844, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.1326642531203106e-05}, {"id": 15, "seek": 10228, "start": 102.28, "end": 108.16, "text": " package my entire application inside a enclave, inside a confidential container and I think", "tokens": [7372, 452, 2302, 3861, 1854, 257, 2058, 27995, 11, 1854, 257, 27054, 10129, 293, 286, 519], "temperature": 0.0, "avg_logprob": -0.22295777002970377, "compression_ratio": 1.727699530516432, "no_speech_prob": 3.0237677492550574e-05}, {"id": 16, "seek": 10228, "start": 108.16, "end": 115.2, "text": " that's what we've been doing lately a lot and then I think the third thing is what Mark", "tokens": [300, 311, 437, 321, 600, 668, 884, 12881, 257, 688, 293, 550, 286, 519, 264, 2636, 551, 307, 437, 3934], "temperature": 0.0, "avg_logprob": -0.22295777002970377, "compression_ratio": 1.727699530516432, "no_speech_prob": 3.0237677492550574e-05}, {"id": 17, "seek": 10228, "start": 115.2, "end": 121.12, "text": " has described is how can we bring that together, making this orchestratable, making this manageable,", "tokens": [575, 7619, 307, 577, 393, 321, 1565, 300, 1214, 11, 1455, 341, 14161, 4481, 712, 11, 1455, 341, 38798, 11], "temperature": 0.0, "avg_logprob": -0.22295777002970377, "compression_ratio": 1.727699530516432, "no_speech_prob": 3.0237677492550574e-05}, {"id": 18, "seek": 10228, "start": 121.12, "end": 128.68, "text": " deployable and I think there are different ways of getting from the tier two or the way", "tokens": [7274, 712, 293, 286, 519, 456, 366, 819, 2098, 295, 1242, 490, 264, 12362, 732, 420, 264, 636], "temperature": 0.0, "avg_logprob": -0.22295777002970377, "compression_ratio": 1.727699530516432, "no_speech_prob": 3.0237677492550574e-05}, {"id": 19, "seek": 12868, "start": 128.68, "end": 135.76000000000002, "text": " we are to here, one is I guess what Mark has described with taking containers, making them", "tokens": [321, 366, 281, 510, 11, 472, 307, 286, 2041, 437, 3934, 575, 7619, 365, 1940, 17089, 11, 1455, 552], "temperature": 0.0, "avg_logprob": -0.18497422623307738, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781813216453884e-05}, {"id": 20, "seek": 12868, "start": 135.76000000000002, "end": 141.64000000000001, "text": " confidential containers and then having the problems with orchestration and an orthogonal", "tokens": [27054, 17089, 293, 550, 1419, 264, 2740, 365, 14161, 2405, 293, 364, 41488], "temperature": 0.0, "avg_logprob": -0.18497422623307738, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781813216453884e-05}, {"id": 21, "seek": 12868, "start": 141.64000000000001, "end": 146.64000000000001, "text": " approach that we like to present now is more of the idea of having confidential clusters,", "tokens": [3109, 300, 321, 411, 281, 1974, 586, 307, 544, 295, 264, 1558, 295, 1419, 27054, 23313, 11], "temperature": 0.0, "avg_logprob": -0.18497422623307738, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781813216453884e-05}, {"id": 22, "seek": 12868, "start": 146.64000000000001, "end": 152.88, "text": " so instead of isolating individual containers, isolating the nodes, the downside probably", "tokens": [370, 2602, 295, 48912, 2609, 17089, 11, 48912, 264, 13891, 11, 264, 25060, 1391], "temperature": 0.0, "avg_logprob": -0.18497422623307738, "compression_ratio": 1.7647058823529411, "no_speech_prob": 1.0781813216453884e-05}, {"id": 23, "seek": 15288, "start": 152.88, "end": 162.24, "text": " is a little bit larger TCB and the advantage is being more closely to where we are right", "tokens": [307, 257, 707, 857, 4833, 34150, 33, 293, 264, 5002, 307, 885, 544, 8185, 281, 689, 321, 366, 558], "temperature": 0.0, "avg_logprob": -0.16926538440543162, "compression_ratio": 1.5023474178403755, "no_speech_prob": 1.9217392036807723e-05}, {"id": 24, "seek": 15288, "start": 162.24, "end": 167.68, "text": " now with deploying and developing cloud native applications.", "tokens": [586, 365, 34198, 293, 6416, 4588, 8470, 5821, 13], "temperature": 0.0, "avg_logprob": -0.16926538440543162, "compression_ratio": 1.5023474178403755, "no_speech_prob": 1.9217392036807723e-05}, {"id": 25, "seek": 15288, "start": 167.68, "end": 174.24, "text": " Talking about challenges for level three, definitely I think one of the biggest ones", "tokens": [22445, 466, 4759, 337, 1496, 1045, 11, 2138, 286, 519, 472, 295, 264, 3880, 2306], "temperature": 0.0, "avg_logprob": -0.16926538440543162, "compression_ratio": 1.5023474178403755, "no_speech_prob": 1.9217392036807723e-05}, {"id": 26, "seek": 15288, "start": 174.24, "end": 181.56, "text": " is UI UX, right, there's little hope that people will go ahead and drastically adjust", "tokens": [307, 15682, 40176, 11, 558, 11, 456, 311, 707, 1454, 300, 561, 486, 352, 2286, 293, 29673, 4369], "temperature": 0.0, "avg_logprob": -0.16926538440543162, "compression_ratio": 1.5023474178403755, "no_speech_prob": 1.9217392036807723e-05}, {"id": 27, "seek": 18156, "start": 181.56, "end": 188.16, "text": " the way they deploy and develop applications for the cloud just because they want to use", "tokens": [264, 636, 436, 7274, 293, 1499, 5821, 337, 264, 4588, 445, 570, 436, 528, 281, 764], "temperature": 0.0, "avg_logprob": -0.13974696090540936, "compression_ratio": 1.748062015503876, "no_speech_prob": 1.259950477106031e-05}, {"id": 28, "seek": 18156, "start": 188.16, "end": 194.28, "text": " this new type of technology, so we need to get very close to where they are and bring", "tokens": [341, 777, 2010, 295, 2899, 11, 370, 321, 643, 281, 483, 588, 1998, 281, 689, 436, 366, 293, 1565], "temperature": 0.0, "avg_logprob": -0.13974696090540936, "compression_ratio": 1.748062015503876, "no_speech_prob": 1.259950477106031e-05}, {"id": 29, "seek": 18156, "start": 194.28, "end": 197.28, "text": " those worlds together and then of course there are the challenges Mark has described", "tokens": [729, 13401, 1214, 293, 550, 295, 1164, 456, 366, 264, 4759, 3934, 575, 7619], "temperature": 0.0, "avg_logprob": -0.13974696090540936, "compression_ratio": 1.748062015503876, "no_speech_prob": 1.259950477106031e-05}, {"id": 30, "seek": 18156, "start": 197.28, "end": 204.0, "text": " with orchestration, orchestration, attesting, how can we attest all those different containers", "tokens": [365, 14161, 2405, 11, 14161, 2405, 11, 951, 8714, 11, 577, 393, 321, 951, 377, 439, 729, 819, 17089], "temperature": 0.0, "avg_logprob": -0.13974696090540936, "compression_ratio": 1.748062015503876, "no_speech_prob": 1.259950477106031e-05}, {"id": 31, "seek": 18156, "start": 204.0, "end": 210.8, "text": " that are running in my cluster and don't necessarily want to verify each and individual instance", "tokens": [300, 366, 2614, 294, 452, 13630, 293, 500, 380, 4725, 528, 281, 16888, 1184, 293, 2609, 5197], "temperature": 0.0, "avg_logprob": -0.13974696090540936, "compression_ratio": 1.748062015503876, "no_speech_prob": 1.259950477106031e-05}, {"id": 32, "seek": 21080, "start": 210.8, "end": 215.8, "text": " of it, right, that could be a thousand and more of the same.", "tokens": [295, 309, 11, 558, 11, 300, 727, 312, 257, 4714, 293, 544, 295, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.17486269474029542, "compression_ratio": 1.5960591133004927, "no_speech_prob": 2.585787296993658e-05}, {"id": 33, "seek": 21080, "start": 215.8, "end": 221.60000000000002, "text": " And then once I have a cluster, all those day two operations of updating, upgrading", "tokens": [400, 550, 1564, 286, 362, 257, 13630, 11, 439, 729, 786, 732, 7705, 295, 25113, 11, 36249], "temperature": 0.0, "avg_logprob": -0.17486269474029542, "compression_ratio": 1.5960591133004927, "no_speech_prob": 2.585787296993658e-05}, {"id": 34, "seek": 21080, "start": 221.60000000000002, "end": 228.0, "text": " and doing that in a sensitive way where I can always verify what's currently being running", "tokens": [293, 884, 300, 294, 257, 9477, 636, 689, 286, 393, 1009, 16888, 437, 311, 4362, 885, 2614], "temperature": 0.0, "avg_logprob": -0.17486269474029542, "compression_ratio": 1.5960591133004927, "no_speech_prob": 2.585787296993658e-05}, {"id": 35, "seek": 21080, "start": 228.0, "end": 236.08, "text": " and what are the changes and yeah, big part of what we are going to present today is the", "tokens": [293, 437, 366, 264, 2962, 293, 1338, 11, 955, 644, 295, 437, 321, 366, 516, 281, 1974, 965, 307, 264], "temperature": 0.0, "avg_logprob": -0.17486269474029542, "compression_ratio": 1.5960591133004927, "no_speech_prob": 2.585787296993658e-05}, {"id": 36, "seek": 23608, "start": 236.08, "end": 241.48000000000002, "text": " right one here where a big benefit of the cloud is actually that I can give away some", "tokens": [558, 472, 510, 689, 257, 955, 5121, 295, 264, 4588, 307, 767, 300, 286, 393, 976, 1314, 512], "temperature": 0.0, "avg_logprob": -0.10550619680670244, "compression_ratio": 1.5478260869565217, "no_speech_prob": 3.761391053558327e-05}, {"id": 37, "seek": 23608, "start": 241.48000000000002, "end": 248.0, "text": " of this orchestrational work and I consume managed services that are operated by someone", "tokens": [295, 341, 14161, 81, 1478, 589, 293, 286, 14732, 6453, 3328, 300, 366, 20826, 538, 1580], "temperature": 0.0, "avg_logprob": -0.10550619680670244, "compression_ratio": 1.5478260869565217, "no_speech_prob": 3.761391053558327e-05}, {"id": 38, "seek": 23608, "start": 248.0, "end": 257.88, "text": " or autonomously and I just consume them through an API or any other kind of interface.", "tokens": [420, 18203, 5098, 293, 286, 445, 14732, 552, 807, 364, 9362, 420, 604, 661, 733, 295, 9226, 13], "temperature": 0.0, "avg_logprob": -0.10550619680670244, "compression_ratio": 1.5478260869565217, "no_speech_prob": 3.761391053558327e-05}, {"id": 39, "seek": 23608, "start": 257.88, "end": 264.32, "text": " So as Nick has said, infrastructure is rolling out, we see all those confidential technologies", "tokens": [407, 382, 9449, 575, 848, 11, 6896, 307, 9439, 484, 11, 321, 536, 439, 729, 27054, 7943], "temperature": 0.0, "avg_logprob": -0.10550619680670244, "compression_ratio": 1.5478260869565217, "no_speech_prob": 3.761391053558327e-05}, {"id": 40, "seek": 26432, "start": 264.32, "end": 273.12, "text": " in the cloud, AMD, SCB, we have heard so many, many today, IBM, RISC-5, most of them give", "tokens": [294, 264, 4588, 11, 34808, 11, 9028, 33, 11, 321, 362, 2198, 370, 867, 11, 867, 965, 11, 23487, 11, 497, 2343, 34, 12, 20, 11, 881, 295, 552, 976], "temperature": 0.0, "avg_logprob": -0.236413090499406, "compression_ratio": 1.445414847161572, "no_speech_prob": 4.1323579353047535e-05}, {"id": 41, "seek": 26432, "start": 273.12, "end": 279.52, "text": " us a confidential VM, which is, as we've seen, not necessarily the abstraction we want,", "tokens": [505, 257, 27054, 18038, 11, 597, 307, 11, 382, 321, 600, 1612, 11, 406, 4725, 264, 37765, 321, 528, 11], "temperature": 0.0, "avg_logprob": -0.236413090499406, "compression_ratio": 1.445414847161572, "no_speech_prob": 4.1323579353047535e-05}, {"id": 42, "seek": 26432, "start": 279.52, "end": 286.15999999999997, "text": " but still we can already consume managed Kubernetes that runs on confidential VMs, at least for", "tokens": [457, 920, 321, 393, 1217, 14732, 6453, 23145, 300, 6676, 322, 27054, 18038, 82, 11, 412, 1935, 337], "temperature": 0.0, "avg_logprob": -0.236413090499406, "compression_ratio": 1.445414847161572, "no_speech_prob": 4.1323579353047535e-05}, {"id": 43, "seek": 26432, "start": 286.15999999999997, "end": 287.15999999999997, "text": " the worker nodes.", "tokens": [264, 11346, 13891, 13], "temperature": 0.0, "avg_logprob": -0.236413090499406, "compression_ratio": 1.445414847161572, "no_speech_prob": 4.1323579353047535e-05}, {"id": 44, "seek": 26432, "start": 287.15999999999997, "end": 292.0, "text": " I think Azure has it, GCP has it, yeah.", "tokens": [286, 519, 11969, 575, 309, 11, 460, 20049, 575, 309, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.236413090499406, "compression_ratio": 1.445414847161572, "no_speech_prob": 4.1323579353047535e-05}, {"id": 45, "seek": 29200, "start": 292.0, "end": 297.16, "text": " So this exists, but it's not really solving the problem, I mean, it gives us runtime encryption", "tokens": [407, 341, 8198, 11, 457, 309, 311, 406, 534, 12606, 264, 1154, 11, 286, 914, 11, 309, 2709, 505, 34474, 29575], "temperature": 0.0, "avg_logprob": -0.21102993177331011, "compression_ratio": 1.7153284671532847, "no_speech_prob": 3.268979344284162e-05}, {"id": 46, "seek": 29200, "start": 297.16, "end": 304.48, "text": " for the stuff that works on, lives on that nodes, but all the edges, all the IO is not", "tokens": [337, 264, 1507, 300, 1985, 322, 11, 2909, 322, 300, 13891, 11, 457, 439, 264, 8819, 11, 439, 264, 39839, 307, 406], "temperature": 0.0, "avg_logprob": -0.21102993177331011, "compression_ratio": 1.7153284671532847, "no_speech_prob": 3.268979344284162e-05}, {"id": 47, "seek": 29200, "start": 304.48, "end": 305.48, "text": " protected, right?", "tokens": [10594, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21102993177331011, "compression_ratio": 1.7153284671532847, "no_speech_prob": 3.268979344284162e-05}, {"id": 48, "seek": 29200, "start": 305.48, "end": 309.96, "text": " The API server is not protected, we've seen that in Magnus Talk, the metadata problem,", "tokens": [440, 9362, 7154, 307, 406, 10594, 11, 321, 600, 1612, 300, 294, 19664, 301, 8780, 11, 264, 26603, 1154, 11], "temperature": 0.0, "avg_logprob": -0.21102993177331011, "compression_ratio": 1.7153284671532847, "no_speech_prob": 3.268979344284162e-05}, {"id": 49, "seek": 29200, "start": 309.96, "end": 317.2, "text": " the problem of the trusted control plane, the way if you want to consume persistent volumes,", "tokens": [264, 1154, 295, 264, 16034, 1969, 5720, 11, 264, 636, 498, 291, 528, 281, 14732, 24315, 22219, 11], "temperature": 0.0, "avg_logprob": -0.21102993177331011, "compression_ratio": 1.7153284671532847, "no_speech_prob": 3.268979344284162e-05}, {"id": 50, "seek": 29200, "start": 317.2, "end": 321.56, "text": " is that automatically encrypted or do you need to adjust my application to encrypt before", "tokens": [307, 300, 6772, 36663, 420, 360, 291, 643, 281, 4369, 452, 3861, 281, 17972, 662, 949], "temperature": 0.0, "avg_logprob": -0.21102993177331011, "compression_ratio": 1.7153284671532847, "no_speech_prob": 3.268979344284162e-05}, {"id": 51, "seek": 32156, "start": 321.56, "end": 323.76, "text": " writing to storage?", "tokens": [3579, 281, 6725, 30], "temperature": 0.0, "avg_logprob": -0.1245464425337942, "compression_ratio": 1.7327188940092166, "no_speech_prob": 2.246928670501802e-05}, {"id": 52, "seek": 32156, "start": 323.76, "end": 330.84, "text": " So the idea of a confidential cluster is that I have somebody or something that fills in", "tokens": [407, 264, 1558, 295, 257, 27054, 13630, 307, 300, 286, 362, 2618, 420, 746, 300, 22498, 294], "temperature": 0.0, "avg_logprob": -0.1245464425337942, "compression_ratio": 1.7327188940092166, "no_speech_prob": 2.246928670501802e-05}, {"id": 53, "seek": 32156, "start": 330.84, "end": 334.88, "text": " those gaps, so that I have, instead of those individual confidential VMs, I have one big", "tokens": [729, 15031, 11, 370, 300, 286, 362, 11, 2602, 295, 729, 2609, 27054, 18038, 82, 11, 286, 362, 472, 955], "temperature": 0.0, "avg_logprob": -0.1245464425337942, "compression_ratio": 1.7327188940092166, "no_speech_prob": 2.246928670501802e-05}, {"id": 54, "seek": 32156, "start": 334.88, "end": 342.24, "text": " context that I can verify through attestation, that I can establish a secret channel, and", "tokens": [4319, 300, 286, 393, 16888, 807, 951, 377, 399, 11, 300, 286, 393, 8327, 257, 4054, 2269, 11, 293], "temperature": 0.0, "avg_logprob": -0.1245464425337942, "compression_ratio": 1.7327188940092166, "no_speech_prob": 2.246928670501802e-05}, {"id": 55, "seek": 32156, "start": 342.24, "end": 349.12, "text": " then if I'm in that context, if I'm in that cluster, I can just use Kubernetes as I used", "tokens": [550, 498, 286, 478, 294, 300, 4319, 11, 498, 286, 478, 294, 300, 13630, 11, 286, 393, 445, 764, 23145, 382, 286, 1143], "temperature": 0.0, "avg_logprob": -0.1245464425337942, "compression_ratio": 1.7327188940092166, "no_speech_prob": 2.246928670501802e-05}, {"id": 56, "seek": 34912, "start": 349.12, "end": 357.72, "text": " to, and from inside there, essentially everything is trusted, right?", "tokens": [281, 11, 293, 490, 1854, 456, 11, 4476, 1203, 307, 16034, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1806396162006217, "compression_ratio": 1.4210526315789473, "no_speech_prob": 1.165799858426908e-05}, {"id": 57, "seek": 34912, "start": 357.72, "end": 365.04, "text": " It's a different type of approach, it just creates an envelope around my Kubernetes and", "tokens": [467, 311, 257, 819, 2010, 295, 3109, 11, 309, 445, 7829, 364, 19989, 926, 452, 23145, 293], "temperature": 0.0, "avg_logprob": -0.1806396162006217, "compression_ratio": 1.4210526315789473, "no_speech_prob": 1.165799858426908e-05}, {"id": 58, "seek": 34912, "start": 365.04, "end": 368.08, "text": " isolates that as a whole.", "tokens": [7381, 1024, 300, 382, 257, 1379, 13], "temperature": 0.0, "avg_logprob": -0.1806396162006217, "compression_ratio": 1.4210526315789473, "no_speech_prob": 1.165799858426908e-05}, {"id": 59, "seek": 34912, "start": 368.08, "end": 376.76, "text": " As I said, I think UX and UI and the way we use this is super important, it's not gonna", "tokens": [1018, 286, 848, 11, 286, 519, 40176, 293, 15682, 293, 264, 636, 321, 764, 341, 307, 1687, 1021, 11, 309, 311, 406, 799], "temperature": 0.0, "avg_logprob": -0.1806396162006217, "compression_ratio": 1.4210526315789473, "no_speech_prob": 1.165799858426908e-05}, {"id": 60, "seek": 37676, "start": 376.76, "end": 381.2, "text": " work that we need a lot of adjustments, a lot of additional steps in the development", "tokens": [589, 300, 321, 643, 257, 688, 295, 18624, 11, 257, 688, 295, 4497, 4439, 294, 264, 3250], "temperature": 0.0, "avg_logprob": -0.1643073230708411, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.590833148336969e-05}, {"id": 61, "seek": 37676, "start": 381.2, "end": 387.03999999999996, "text": " workflows, so having, this is just an example of constellation here, but having a simple", "tokens": [43461, 11, 370, 1419, 11, 341, 307, 445, 364, 1365, 295, 42336, 510, 11, 457, 1419, 257, 2199], "temperature": 0.0, "avg_logprob": -0.1643073230708411, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.590833148336969e-05}, {"id": 62, "seek": 37676, "start": 387.03999999999996, "end": 393.0, "text": " way of creating such a confidential cluster and then using it is important, and all those", "tokens": [636, 295, 4084, 1270, 257, 27054, 13630, 293, 550, 1228, 309, 307, 1021, 11, 293, 439, 729], "temperature": 0.0, "avg_logprob": -0.1643073230708411, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.590833148336969e-05}, {"id": 63, "seek": 37676, "start": 393.0, "end": 397.2, "text": " things that I showed, all the challenges we need to solve below, we need to make this", "tokens": [721, 300, 286, 4712, 11, 439, 264, 4759, 321, 643, 281, 5039, 2507, 11, 321, 643, 281, 652, 341], "temperature": 0.0, "avg_logprob": -0.1643073230708411, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.590833148336969e-05}, {"id": 64, "seek": 37676, "start": 397.2, "end": 399.92, "text": " more or less invisible, right?", "tokens": [544, 420, 1570, 14603, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1643073230708411, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.590833148336969e-05}, {"id": 65, "seek": 37676, "start": 399.92, "end": 405.24, "text": " In terms of constellation, we try to make the node operating system as verifiable as", "tokens": [682, 2115, 295, 42336, 11, 321, 853, 281, 652, 264, 9984, 7447, 1185, 382, 1306, 30876, 382], "temperature": 0.0, "avg_logprob": -0.1643073230708411, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.590833148336969e-05}, {"id": 66, "seek": 40524, "start": 405.24, "end": 410.88, "text": " possible, strip it down as much as possible, harden it, then strip them together for a", "tokens": [1944, 11, 12828, 309, 760, 382, 709, 382, 1944, 11, 50203, 309, 11, 550, 12828, 552, 1214, 337, 257], "temperature": 0.0, "avg_logprob": -0.21177302369283973, "compression_ratio": 1.766798418972332, "no_speech_prob": 4.468743281904608e-05}, {"id": 67, "seek": 40524, "start": 410.88, "end": 418.0, "text": " cluster, we need to think about supply chain, we need to think about how we can automatically", "tokens": [13630, 11, 321, 643, 281, 519, 466, 5847, 5021, 11, 321, 643, 281, 519, 466, 577, 321, 393, 6772], "temperature": 0.0, "avg_logprob": -0.21177302369283973, "compression_ratio": 1.766798418972332, "no_speech_prob": 4.468743281904608e-05}, {"id": 68, "seek": 40524, "start": 418.0, "end": 423.28000000000003, "text": " encrypt all the stuff that goes over the network, that goes to the storage.", "tokens": [17972, 662, 439, 264, 1507, 300, 1709, 670, 264, 3209, 11, 300, 1709, 281, 264, 6725, 13], "temperature": 0.0, "avg_logprob": -0.21177302369283973, "compression_ratio": 1.766798418972332, "no_speech_prob": 4.468743281904608e-05}, {"id": 69, "seek": 40524, "start": 423.28000000000003, "end": 427.28000000000003, "text": " Ideally this is all open source, so constellation, if I didn't have mentioned it's open source,", "tokens": [40817, 341, 307, 439, 1269, 4009, 11, 370, 42336, 11, 498, 286, 994, 380, 362, 2835, 309, 311, 1269, 4009, 11], "temperature": 0.0, "avg_logprob": -0.21177302369283973, "compression_ratio": 1.766798418972332, "no_speech_prob": 4.468743281904608e-05}, {"id": 70, "seek": 40524, "start": 427.28000000000003, "end": 434.08, "text": " and it's cloud agnostic, so it can run everywhere, and then for most of confidential computing", "tokens": [293, 309, 311, 4588, 623, 77, 19634, 11, 370, 309, 393, 1190, 5315, 11, 293, 550, 337, 881, 295, 27054, 15866], "temperature": 0.0, "avg_logprob": -0.21177302369283973, "compression_ratio": 1.766798418972332, "no_speech_prob": 4.468743281904608e-05}, {"id": 71, "seek": 43408, "start": 434.08, "end": 439.28, "text": " stuff, I need some way of recovery, should things go, should things go south and everything", "tokens": [1507, 11, 286, 643, 512, 636, 295, 8597, 11, 820, 721, 352, 11, 820, 721, 352, 7377, 293, 1203], "temperature": 0.0, "avg_logprob": -0.1624762094937838, "compression_ratio": 1.764957264957265, "no_speech_prob": 2.8403424948919564e-05}, {"id": 72, "seek": 43408, "start": 439.28, "end": 443.96, "text": " is down and need to get back into running mode.", "tokens": [307, 760, 293, 643, 281, 483, 646, 666, 2614, 4391, 13], "temperature": 0.0, "avg_logprob": -0.1624762094937838, "compression_ratio": 1.764957264957265, "no_speech_prob": 2.8403424948919564e-05}, {"id": 73, "seek": 43408, "start": 443.96, "end": 451.88, "text": " So yeah, the big problem with the confidential cluster concept is now I can create a cluster", "tokens": [407, 1338, 11, 264, 955, 1154, 365, 264, 27054, 13630, 3410, 307, 586, 286, 393, 1884, 257, 13630], "temperature": 0.0, "avg_logprob": -0.1624762094937838, "compression_ratio": 1.764957264957265, "no_speech_prob": 2.8403424948919564e-05}, {"id": 74, "seek": 43408, "start": 451.88, "end": 457.59999999999997, "text": " and we will see in a bit of what that means, but if I can create a cluster, I have everything", "tokens": [293, 321, 486, 536, 294, 257, 857, 295, 437, 300, 1355, 11, 457, 498, 286, 393, 1884, 257, 13630, 11, 286, 362, 1203], "temperature": 0.0, "avg_logprob": -0.1624762094937838, "compression_ratio": 1.764957264957265, "no_speech_prob": 2.8403424948919564e-05}, {"id": 75, "seek": 43408, "start": 457.59999999999997, "end": 463.28, "text": " verified, now I have to maintain and run it on my own, and this is I guess the biggest", "tokens": [31197, 11, 586, 286, 362, 281, 6909, 293, 1190, 309, 322, 452, 1065, 11, 293, 341, 307, 286, 2041, 264, 3880], "temperature": 0.0, "avg_logprob": -0.1624762094937838, "compression_ratio": 1.764957264957265, "no_speech_prob": 2.8403424948919564e-05}, {"id": 76, "seek": 46328, "start": 463.28, "end": 465.2, "text": " problem with that concept, right?", "tokens": [1154, 365, 300, 3410, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.27027677560781505, "compression_ratio": 1.6170212765957446, "no_speech_prob": 6.697956996504217e-05}, {"id": 77, "seek": 46328, "start": 465.2, "end": 469.79999999999995, "text": " People want to consume managed stuff, when they have managed Kubernetes, don't want", "tokens": [3432, 528, 281, 14732, 6453, 1507, 11, 562, 436, 362, 6453, 23145, 11, 500, 380, 528], "temperature": 0.0, "avg_logprob": -0.27027677560781505, "compression_ratio": 1.6170212765957446, "no_speech_prob": 6.697956996504217e-05}, {"id": 78, "seek": 46328, "start": 469.79999999999995, "end": 477.47999999999996, "text": " to run their own, orchestrate their own Kubernetes, but this is a big trade-off that people are", "tokens": [281, 1190, 641, 1065, 11, 14161, 4404, 641, 1065, 23145, 11, 457, 341, 307, 257, 955, 4923, 12, 4506, 300, 561, 366], "temperature": 0.0, "avg_logprob": -0.27027677560781505, "compression_ratio": 1.6170212765957446, "no_speech_prob": 6.697956996504217e-05}, {"id": 79, "seek": 46328, "start": 477.47999999999996, "end": 485.32, "text": " facing, and yeah, we try to work on concepts of making that as easy as possible, and yeah,", "tokens": [7170, 11, 293, 1338, 11, 321, 853, 281, 589, 322, 10392, 295, 1455, 300, 382, 1858, 382, 1944, 11, 293, 1338, 11], "temperature": 0.0, "avg_logprob": -0.27027677560781505, "compression_ratio": 1.6170212765957446, "no_speech_prob": 6.697956996504217e-05}, {"id": 80, "seek": 48532, "start": 485.32, "end": 494.84, "text": " Malte is going to show you how.", "tokens": [5746, 975, 307, 516, 281, 855, 291, 577, 13], "temperature": 0.0, "avg_logprob": -0.24967696027057926, "compression_ratio": 1.3135593220338984, "no_speech_prob": 0.00014746600936632603}, {"id": 81, "seek": 48532, "start": 494.84, "end": 497.52, "text": " Yeah, so thanks for the introduction.", "tokens": [865, 11, 370, 3231, 337, 264, 9339, 13], "temperature": 0.0, "avg_logprob": -0.24967696027057926, "compression_ratio": 1.3135593220338984, "no_speech_prob": 0.00014746600936632603}, {"id": 82, "seek": 48532, "start": 497.52, "end": 507.28, "text": " So the basic idea that we had was how can we manage Kubernetes from inside Kubernetes", "tokens": [407, 264, 3875, 1558, 300, 321, 632, 390, 577, 393, 321, 3067, 23145, 490, 1854, 23145], "temperature": 0.0, "avg_logprob": -0.24967696027057926, "compression_ratio": 1.3135593220338984, "no_speech_prob": 0.00014746600936632603}, {"id": 83, "seek": 50728, "start": 507.28, "end": 516.8, "text": " itself, and to kind of draft this idea, I will start by explaining what typically you", "tokens": [2564, 11, 293, 281, 733, 295, 11206, 341, 1558, 11, 286, 486, 722, 538, 13468, 437, 5850, 291], "temperature": 0.0, "avg_logprob": -0.14907999736506763, "compression_ratio": 1.599009900990099, "no_speech_prob": 0.0001271199871553108}, {"id": 84, "seek": 50728, "start": 516.8, "end": 524.48, "text": " can do today, so on the left side you really have the traditional on-prem model, which", "tokens": [393, 360, 965, 11, 370, 322, 264, 1411, 1252, 291, 534, 362, 264, 5164, 322, 12, 29403, 2316, 11, 597], "temperature": 0.0, "avg_logprob": -0.14907999736506763, "compression_ratio": 1.599009900990099, "no_speech_prob": 0.0001271199871553108}, {"id": 85, "seek": 50728, "start": 524.48, "end": 531.9599999999999, "text": " is you have the whole cluster in your own hand, the control plane, the worker nodes,", "tokens": [307, 291, 362, 264, 1379, 13630, 294, 428, 1065, 1011, 11, 264, 1969, 5720, 11, 264, 11346, 13891, 11], "temperature": 0.0, "avg_logprob": -0.14907999736506763, "compression_ratio": 1.599009900990099, "no_speech_prob": 0.0001271199871553108}, {"id": 86, "seek": 50728, "start": 531.9599999999999, "end": 535.9599999999999, "text": " it runs on your own hardware, which is great for security, right?", "tokens": [309, 6676, 322, 428, 1065, 8837, 11, 597, 307, 869, 337, 3825, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.14907999736506763, "compression_ratio": 1.599009900990099, "no_speech_prob": 0.0001271199871553108}, {"id": 87, "seek": 53596, "start": 535.96, "end": 542.9200000000001, "text": " Because you have full control, but it also means you are responsible for every single", "tokens": [1436, 291, 362, 1577, 1969, 11, 457, 309, 611, 1355, 291, 366, 6250, 337, 633, 2167], "temperature": 0.0, "avg_logprob": -0.10528793817834009, "compression_ratio": 1.6571428571428573, "no_speech_prob": 8.476604125462472e-05}, {"id": 88, "seek": 53596, "start": 542.9200000000001, "end": 548.5600000000001, "text": " interaction, like scaling up the cluster, joining the nodes, performing upgrades, both", "tokens": [9285, 11, 411, 21589, 493, 264, 13630, 11, 5549, 264, 13891, 11, 10205, 24868, 11, 1293], "temperature": 0.0, "avg_logprob": -0.10528793817834009, "compression_ratio": 1.6571428571428573, "no_speech_prob": 8.476604125462472e-05}, {"id": 89, "seek": 53596, "start": 548.5600000000001, "end": 555.48, "text": " on the OS level and also Kubernetes upgrades, and then on the other side you have something", "tokens": [322, 264, 12731, 1496, 293, 611, 23145, 24868, 11, 293, 550, 322, 264, 661, 1252, 291, 362, 746], "temperature": 0.0, "avg_logprob": -0.10528793817834009, "compression_ratio": 1.6571428571428573, "no_speech_prob": 8.476604125462472e-05}, {"id": 90, "seek": 53596, "start": 555.48, "end": 562.48, "text": " that is super popular, it is just let the cloud provider deal with it, and it means", "tokens": [300, 307, 1687, 3743, 11, 309, 307, 445, 718, 264, 4588, 12398, 2028, 365, 309, 11, 293, 309, 1355], "temperature": 0.0, "avg_logprob": -0.10528793817834009, "compression_ratio": 1.6571428571428573, "no_speech_prob": 8.476604125462472e-05}, {"id": 91, "seek": 56248, "start": 562.48, "end": 568.84, "text": " the cloud provider can scale your cluster up and down, just if you have a burst of traffic", "tokens": [264, 4588, 12398, 393, 4373, 428, 13630, 493, 293, 760, 11, 445, 498, 291, 362, 257, 12712, 295, 6419], "temperature": 0.0, "avg_logprob": -0.10058954783848353, "compression_ratio": 1.6807511737089202, "no_speech_prob": 6.1009781347820535e-05}, {"id": 92, "seek": 56248, "start": 568.84, "end": 575.16, "text": " coming in, you get new nodes, it is all super easy, you can set it up so that the cloud", "tokens": [1348, 294, 11, 291, 483, 777, 13891, 11, 309, 307, 439, 1687, 1858, 11, 291, 393, 992, 309, 493, 370, 300, 264, 4588], "temperature": 0.0, "avg_logprob": -0.10058954783848353, "compression_ratio": 1.6807511737089202, "no_speech_prob": 6.1009781347820535e-05}, {"id": 93, "seek": 56248, "start": 575.16, "end": 581.08, "text": " provider will automatically patch your operating system, it will automatically upgrade your", "tokens": [12398, 486, 6772, 9972, 428, 7447, 1185, 11, 309, 486, 6772, 11484, 428], "temperature": 0.0, "avg_logprob": -0.10058954783848353, "compression_ratio": 1.6807511737089202, "no_speech_prob": 6.1009781347820535e-05}, {"id": 94, "seek": 56248, "start": 581.08, "end": 589.44, "text": " Kubernetes, and this is great from a DevOps perspective, it is super simple, it scales,", "tokens": [23145, 11, 293, 341, 307, 869, 490, 257, 43051, 4585, 11, 309, 307, 1687, 2199, 11, 309, 17408, 11], "temperature": 0.0, "avg_logprob": -0.10058954783848353, "compression_ratio": 1.6807511737089202, "no_speech_prob": 6.1009781347820535e-05}, {"id": 95, "seek": 58944, "start": 589.44, "end": 598.6800000000001, "text": " it takes away work from the developer and the operator of the cluster, so what we thought", "tokens": [309, 2516, 1314, 589, 490, 264, 10754, 293, 264, 12973, 295, 264, 13630, 11, 370, 437, 321, 1194], "temperature": 0.0, "avg_logprob": -0.11671093632193173, "compression_ratio": 1.6130952380952381, "no_speech_prob": 2.5833258405327797e-05}, {"id": 96, "seek": 58944, "start": 598.6800000000001, "end": 605.5600000000001, "text": " is why don't we meet in the middle, and that is kind of like we have to run our own control", "tokens": [307, 983, 500, 380, 321, 1677, 294, 264, 2808, 11, 293, 300, 307, 733, 295, 411, 321, 362, 281, 1190, 527, 1065, 1969], "temperature": 0.0, "avg_logprob": -0.11671093632193173, "compression_ratio": 1.6130952380952381, "no_speech_prob": 2.5833258405327797e-05}, {"id": 97, "seek": 58944, "start": 605.5600000000001, "end": 612.44, "text": " plane in the confidential context, but if we do this, we lose all of these smart features", "tokens": [5720, 294, 264, 27054, 4319, 11, 457, 498, 321, 360, 341, 11, 321, 3624, 439, 295, 613, 4069, 4122], "temperature": 0.0, "avg_logprob": -0.11671093632193173, "compression_ratio": 1.6130952380952381, "no_speech_prob": 2.5833258405327797e-05}, {"id": 98, "seek": 61244, "start": 612.44, "end": 620.5200000000001, "text": " from the cloud provider, so we will just reinvent them but inside the cluster, that means we", "tokens": [490, 264, 4588, 12398, 11, 370, 321, 486, 445, 33477, 552, 457, 1854, 264, 13630, 11, 300, 1355, 321], "temperature": 0.0, "avg_logprob": -0.13097401270790707, "compression_ratio": 1.6411764705882352, "no_speech_prob": 2.972734728245996e-05}, {"id": 99, "seek": 61244, "start": 620.5200000000001, "end": 627.44, "text": " can still do auto scaling, we can still join the nodes by themselves without any human interaction,", "tokens": [393, 920, 360, 8399, 21589, 11, 321, 393, 920, 3917, 264, 13891, 538, 2969, 1553, 604, 1952, 9285, 11], "temperature": 0.0, "avg_logprob": -0.13097401270790707, "compression_ratio": 1.6411764705882352, "no_speech_prob": 2.972734728245996e-05}, {"id": 100, "seek": 61244, "start": 627.44, "end": 634.2, "text": " we can still roll out OS updates and we can even roll out Kubernetes upgrades inside a", "tokens": [321, 393, 920, 3373, 484, 12731, 9205, 293, 321, 393, 754, 3373, 484, 23145, 24868, 1854, 257], "temperature": 0.0, "avg_logprob": -0.13097401270790707, "compression_ratio": 1.6411764705882352, "no_speech_prob": 2.972734728245996e-05}, {"id": 101, "seek": 63420, "start": 634.2, "end": 642.76, "text": " running Kubernetes cluster, so to explain how this works, I will first go on to how Kubernetes", "tokens": [2614, 23145, 13630, 11, 370, 281, 2903, 577, 341, 1985, 11, 286, 486, 700, 352, 322, 281, 577, 23145], "temperature": 0.0, "avg_logprob": -0.1330096293718387, "compression_ratio": 1.5859030837004404, "no_speech_prob": 3.8180278352228925e-05}, {"id": 102, "seek": 63420, "start": 642.76, "end": 651.44, "text": " nodes and constellation can actually join the cluster without any outside interaction,", "tokens": [13891, 293, 42336, 393, 767, 3917, 264, 13630, 1553, 604, 2380, 9285, 11], "temperature": 0.0, "avg_logprob": -0.1330096293718387, "compression_ratio": 1.5859030837004404, "no_speech_prob": 3.8180278352228925e-05}, {"id": 103, "seek": 63420, "start": 651.44, "end": 657.0400000000001, "text": " and what you have to understand here is these are all confidential VMs and they make heavy", "tokens": [293, 437, 291, 362, 281, 1223, 510, 307, 613, 366, 439, 27054, 18038, 82, 293, 436, 652, 4676], "temperature": 0.0, "avg_logprob": -0.1330096293718387, "compression_ratio": 1.5859030837004404, "no_speech_prob": 3.8180278352228925e-05}, {"id": 104, "seek": 63420, "start": 657.0400000000001, "end": 663.24, "text": " use of the measured boot chain, I think we already had some good introductions on this,", "tokens": [764, 295, 264, 12690, 11450, 5021, 11, 286, 519, 321, 1217, 632, 512, 665, 48032, 322, 341, 11], "temperature": 0.0, "avg_logprob": -0.1330096293718387, "compression_ratio": 1.5859030837004404, "no_speech_prob": 3.8180278352228925e-05}, {"id": 105, "seek": 66324, "start": 663.24, "end": 668.64, "text": " but I will still show you how this works in an example, so first in the confidential", "tokens": [457, 286, 486, 920, 855, 291, 577, 341, 1985, 294, 364, 1365, 11, 370, 700, 294, 264, 27054], "temperature": 0.0, "avg_logprob": -0.14572981034202137, "compression_ratio": 1.6682692307692308, "no_speech_prob": 8.864409028319642e-05}, {"id": 106, "seek": 66324, "start": 668.64, "end": 673.12, "text": " VM we have the firmware, and the firmware is basically just the first part that starts", "tokens": [18038, 321, 362, 264, 30289, 11, 293, 264, 30289, 307, 1936, 445, 264, 700, 644, 300, 3719], "temperature": 0.0, "avg_logprob": -0.14572981034202137, "compression_ratio": 1.6682692307692308, "no_speech_prob": 8.864409028319642e-05}, {"id": 107, "seek": 66324, "start": 673.12, "end": 684.32, "text": " up, and the main task here is to load up the first stage boot loader and to measure it,", "tokens": [493, 11, 293, 264, 2135, 5633, 510, 307, 281, 3677, 493, 264, 700, 3233, 11450, 3677, 260, 293, 281, 3481, 309, 11], "temperature": 0.0, "avg_logprob": -0.14572981034202137, "compression_ratio": 1.6682692307692308, "no_speech_prob": 8.864409028319642e-05}, {"id": 108, "seek": 66324, "start": 684.32, "end": 690.36, "text": " so we measure it on AMD SEV in the approach we are currently doing, it is measured into", "tokens": [370, 321, 3481, 309, 322, 34808, 10269, 53, 294, 264, 3109, 321, 366, 4362, 884, 11, 309, 307, 12690, 666], "temperature": 0.0, "avg_logprob": -0.14572981034202137, "compression_ratio": 1.6682692307692308, "no_speech_prob": 8.864409028319642e-05}, {"id": 109, "seek": 69036, "start": 690.36, "end": 698.4, "text": " a virtual TPM, and then we load this boot loader and then we will start executing it,", "tokens": [257, 6374, 314, 18819, 11, 293, 550, 321, 3677, 341, 11450, 3677, 260, 293, 550, 321, 486, 722, 32368, 309, 11], "temperature": 0.0, "avg_logprob": -0.18385791778564453, "compression_ratio": 1.7115384615384615, "no_speech_prob": 7.35978755983524e-05}, {"id": 110, "seek": 69036, "start": 698.4, "end": 705.64, "text": " and the boot loader just has the task of, in our case, loading the next stage and measuring", "tokens": [293, 264, 11450, 3677, 260, 445, 575, 264, 5633, 295, 11, 294, 527, 1389, 11, 15114, 264, 958, 3233, 293, 13389], "temperature": 0.0, "avg_logprob": -0.18385791778564453, "compression_ratio": 1.7115384615384615, "no_speech_prob": 7.35978755983524e-05}, {"id": 111, "seek": 69036, "start": 705.64, "end": 712.6, "text": " it, which is a unified kernel image, and this is a very neat trick, it is basically just", "tokens": [309, 11, 597, 307, 257, 26787, 28256, 3256, 11, 293, 341, 307, 257, 588, 10654, 4282, 11, 309, 307, 1936, 445], "temperature": 0.0, "avg_logprob": -0.18385791778564453, "compression_ratio": 1.7115384615384615, "no_speech_prob": 7.35978755983524e-05}, {"id": 112, "seek": 69036, "start": 712.6, "end": 719.2, "text": " one blob that contains the Linux kernel and in it RAMFS and also the kernel command line,", "tokens": [472, 46115, 300, 8306, 264, 18734, 28256, 293, 294, 309, 14561, 29318, 293, 611, 264, 28256, 5622, 1622, 11], "temperature": 0.0, "avg_logprob": -0.18385791778564453, "compression_ratio": 1.7115384615384615, "no_speech_prob": 7.35978755983524e-05}, {"id": 113, "seek": 71920, "start": 719.2, "end": 726.2, "text": " so the nice property here is we can measure all of these in one blob and don't have to", "tokens": [370, 264, 1481, 4707, 510, 307, 321, 393, 3481, 439, 295, 613, 294, 472, 46115, 293, 500, 380, 362, 281], "temperature": 0.0, "avg_logprob": -0.15821019462917163, "compression_ratio": 1.6081081081081081, "no_speech_prob": 2.1775003915536217e-05}, {"id": 114, "seek": 71920, "start": 726.2, "end": 732.88, "text": " take care of the individual components, which can be quite hard to do correctly, and inside", "tokens": [747, 1127, 295, 264, 2609, 6677, 11, 597, 393, 312, 1596, 1152, 281, 360, 8944, 11, 293, 1854], "temperature": 0.0, "avg_logprob": -0.15821019462917163, "compression_ratio": 1.6081081081081081, "no_speech_prob": 2.1775003915536217e-05}, {"id": 115, "seek": 71920, "start": 732.88, "end": 740.8000000000001, "text": " of this, in the RAMFS, we will use the kernel command line to extract the hash that we expect", "tokens": [295, 341, 11, 294, 264, 14561, 29318, 11, 321, 486, 764, 264, 28256, 5622, 1622, 281, 8947, 264, 22019, 300, 321, 2066], "temperature": 0.0, "avg_logprob": -0.15821019462917163, "compression_ratio": 1.6081081081081081, "no_speech_prob": 2.1775003915536217e-05}, {"id": 116, "seek": 71920, "start": 740.8000000000001, "end": 746.48, "text": " for the root file system, and for this we use the Emverity, which I will not go into", "tokens": [337, 264, 5593, 3991, 1185, 11, 293, 337, 341, 321, 764, 264, 3968, 331, 507, 11, 597, 286, 486, 406, 352, 666], "temperature": 0.0, "avg_logprob": -0.15821019462917163, "compression_ratio": 1.6081081081081081, "no_speech_prob": 2.1775003915536217e-05}, {"id": 117, "seek": 74648, "start": 746.48, "end": 752.76, "text": " too much detail about this, it just allows us to have a read-only root file system and", "tokens": [886, 709, 2607, 466, 341, 11, 309, 445, 4045, 505, 281, 362, 257, 1401, 12, 25202, 5593, 3991, 1185, 293], "temperature": 0.0, "avg_logprob": -0.14115770747152606, "compression_ratio": 1.7259615384615385, "no_speech_prob": 4.609581083059311e-05}, {"id": 118, "seek": 74648, "start": 752.76, "end": 761.4, "text": " we know in advance that it has not been tampered with, and we can efficiently check every block", "tokens": [321, 458, 294, 7295, 300, 309, 575, 406, 668, 7677, 40004, 365, 11, 293, 321, 393, 19621, 1520, 633, 3461], "temperature": 0.0, "avg_logprob": -0.14115770747152606, "compression_ratio": 1.7259615384615385, "no_speech_prob": 4.609581083059311e-05}, {"id": 119, "seek": 74648, "start": 761.4, "end": 770.0, "text": " while it is read and before it is actually given to the user land, so that's how we get", "tokens": [1339, 309, 307, 1401, 293, 949, 309, 307, 767, 2212, 281, 264, 4195, 2117, 11, 370, 300, 311, 577, 321, 483], "temperature": 0.0, "avg_logprob": -0.14115770747152606, "compression_ratio": 1.7259615384615385, "no_speech_prob": 4.609581083059311e-05}, {"id": 120, "seek": 74648, "start": 770.0, "end": 775.4, "text": " to the root file system, and inside of this root file system we have a small application", "tokens": [281, 264, 5593, 3991, 1185, 11, 293, 1854, 295, 341, 5593, 3991, 1185, 321, 362, 257, 1359, 3861], "temperature": 0.0, "avg_logprob": -0.14115770747152606, "compression_ratio": 1.7259615384615385, "no_speech_prob": 4.609581083059311e-05}, {"id": 121, "seek": 77540, "start": 775.4, "end": 781.88, "text": " and the task of this application is to join this node into the Kubernetes cluster.", "tokens": [293, 264, 5633, 295, 341, 3861, 307, 281, 3917, 341, 9984, 666, 264, 23145, 13630, 13], "temperature": 0.0, "avg_logprob": -0.13771983115903794, "compression_ratio": 1.6149068322981366, "no_speech_prob": 6.200587813509628e-05}, {"id": 122, "seek": 77540, "start": 781.88, "end": 792.04, "text": " So next to the completely unmodifiable OS, we have a state disk and the only task of", "tokens": [407, 958, 281, 264, 2584, 517, 8014, 30876, 12731, 11, 321, 362, 257, 1785, 12355, 293, 264, 787, 5633, 295], "temperature": 0.0, "avg_logprob": -0.13771983115903794, "compression_ratio": 1.6149068322981366, "no_speech_prob": 6.200587813509628e-05}, {"id": 123, "seek": 77540, "start": 792.04, "end": 800.04, "text": " the state disk is to have the data for Kubernetes itself, like container images and state at", "tokens": [264, 1785, 12355, 307, 281, 362, 264, 1412, 337, 23145, 2564, 11, 411, 10129, 5267, 293, 1785, 412], "temperature": 0.0, "avg_logprob": -0.13771983115903794, "compression_ratio": 1.6149068322981366, "no_speech_prob": 6.200587813509628e-05}, {"id": 124, "seek": 80004, "start": 800.04, "end": 807.3199999999999, "text": " runtime that has to be stored on disk, and this is initialized to be completely clean,", "tokens": [34474, 300, 575, 281, 312, 12187, 322, 12355, 11, 293, 341, 307, 5883, 1602, 281, 312, 2584, 2541, 11], "temperature": 0.0, "avg_logprob": -0.1603360100397988, "compression_ratio": 1.5153374233128833, "no_speech_prob": 1.7773771105566993e-05}, {"id": 125, "seek": 80004, "start": 807.3199999999999, "end": 816.36, "text": " it's encrypted, and yeah, this is like a component we need to operate.", "tokens": [309, 311, 36663, 11, 293, 1338, 11, 341, 307, 411, 257, 6542, 321, 643, 281, 9651, 13], "temperature": 0.0, "avg_logprob": -0.1603360100397988, "compression_ratio": 1.5153374233128833, "no_speech_prob": 1.7773771105566993e-05}, {"id": 126, "seek": 80004, "start": 816.36, "end": 825.12, "text": " So the next question is how do we make these things possible, and for this we deploy some", "tokens": [407, 264, 958, 1168, 307, 577, 360, 321, 652, 613, 721, 1944, 11, 293, 337, 341, 321, 7274, 512], "temperature": 0.0, "avg_logprob": -0.1603360100397988, "compression_ratio": 1.5153374233128833, "no_speech_prob": 1.7773771105566993e-05}, {"id": 127, "seek": 82512, "start": 825.12, "end": 832.04, "text": " microservices inside of Constellation, and these are the node operator, this is responsible", "tokens": [15547, 47480, 1854, 295, 8574, 898, 399, 11, 293, 613, 366, 264, 9984, 12973, 11, 341, 307, 6250], "temperature": 0.0, "avg_logprob": -0.1460039781969647, "compression_ratio": 1.6898148148148149, "no_speech_prob": 2.282333116454538e-05}, {"id": 128, "seek": 82512, "start": 832.04, "end": 840.28, "text": " for actually rolling out updates, it's the join service that attests nodes that are joining", "tokens": [337, 767, 9439, 484, 9205, 11, 309, 311, 264, 3917, 2643, 300, 951, 4409, 13891, 300, 366, 5549], "temperature": 0.0, "avg_logprob": -0.1460039781969647, "compression_ratio": 1.6898148148148149, "no_speech_prob": 2.282333116454538e-05}, {"id": 129, "seek": 82512, "start": 840.28, "end": 845.24, "text": " the cluster and decides if they are allowed to join or not, we also have a key service", "tokens": [264, 13630, 293, 14898, 498, 436, 366, 4350, 281, 3917, 420, 406, 11, 321, 611, 362, 257, 2141, 2643], "temperature": 0.0, "avg_logprob": -0.1460039781969647, "compression_ratio": 1.6898148148148149, "no_speech_prob": 2.282333116454538e-05}, {"id": 130, "seek": 82512, "start": 845.24, "end": 850.72, "text": " that is handling encryption keys, and yeah, some more that are not really important right", "tokens": [300, 307, 13175, 29575, 9317, 11, 293, 1338, 11, 512, 544, 300, 366, 406, 534, 1021, 558], "temperature": 0.0, "avg_logprob": -0.1460039781969647, "compression_ratio": 1.6898148148148149, "no_speech_prob": 2.282333116454538e-05}, {"id": 131, "seek": 82512, "start": 850.72, "end": 854.6, "text": " now.", "tokens": [586, 13], "temperature": 0.0, "avg_logprob": -0.1460039781969647, "compression_ratio": 1.6898148148148149, "no_speech_prob": 2.282333116454538e-05}, {"id": 132, "seek": 85460, "start": 854.6, "end": 858.08, "text": " So how does a node actually join the cluster?", "tokens": [407, 577, 775, 257, 9984, 767, 3917, 264, 13630, 30], "temperature": 0.0, "avg_logprob": -0.13972624687299337, "compression_ratio": 1.614213197969543, "no_speech_prob": 2.211918035754934e-05}, {"id": 133, "seek": 85460, "start": 858.08, "end": 863.64, "text": " So I mentioned there's the bootstrapper that is started inside of the confidential virtual", "tokens": [407, 286, 2835, 456, 311, 264, 11450, 19639, 3717, 300, 307, 1409, 1854, 295, 264, 27054, 6374], "temperature": 0.0, "avg_logprob": -0.13972624687299337, "compression_ratio": 1.614213197969543, "no_speech_prob": 2.211918035754934e-05}, {"id": 134, "seek": 85460, "start": 863.64, "end": 871.28, "text": " machine and it will autonomously search for the existing Kubernetes control plan and it", "tokens": [3479, 293, 309, 486, 18203, 5098, 3164, 337, 264, 6741, 23145, 1969, 1393, 293, 309], "temperature": 0.0, "avg_logprob": -0.13972624687299337, "compression_ratio": 1.614213197969543, "no_speech_prob": 2.211918035754934e-05}, {"id": 135, "seek": 85460, "start": 871.28, "end": 880.64, "text": " will perform remote attestation using attested TLS, and it will basically use the attestation", "tokens": [486, 2042, 8607, 951, 377, 399, 1228, 951, 21885, 314, 19198, 11, 293, 309, 486, 1936, 764, 264, 951, 377, 399], "temperature": 0.0, "avg_logprob": -0.13972624687299337, "compression_ratio": 1.614213197969543, "no_speech_prob": 2.211918035754934e-05}, {"id": 136, "seek": 88064, "start": 880.64, "end": 890.88, "text": " statement for example from AMD SCV, SNP, and this way, so the join service already knows", "tokens": [5629, 337, 1365, 490, 34808, 9028, 53, 11, 13955, 47, 11, 293, 341, 636, 11, 370, 264, 3917, 2643, 1217, 3255], "temperature": 0.0, "avg_logprob": -0.1398437776063618, "compression_ratio": 1.5794871794871794, "no_speech_prob": 2.709137879719492e-05}, {"id": 137, "seek": 88064, "start": 890.88, "end": 897.8, "text": " what measurements to expect from a correct node that is running the expected software,", "tokens": [437, 15383, 281, 2066, 490, 257, 3006, 9984, 300, 307, 2614, 264, 5176, 4722, 11], "temperature": 0.0, "avg_logprob": -0.1398437776063618, "compression_ratio": 1.5794871794871794, "no_speech_prob": 2.709137879719492e-05}, {"id": 138, "seek": 88064, "start": 897.8, "end": 904.56, "text": " so it can decide at this point if the booted node is running what you wanted to run and", "tokens": [370, 309, 393, 4536, 412, 341, 935, 498, 264, 11450, 292, 9984, 307, 2614, 437, 291, 1415, 281, 1190, 293], "temperature": 0.0, "avg_logprob": -0.1398437776063618, "compression_ratio": 1.5794871794871794, "no_speech_prob": 2.709137879719492e-05}, {"id": 139, "seek": 88064, "start": 904.56, "end": 907.4399999999999, "text": " decide if it is allowed to join the cluster.", "tokens": [4536, 498, 309, 307, 4350, 281, 3917, 264, 13630, 13], "temperature": 0.0, "avg_logprob": -0.1398437776063618, "compression_ratio": 1.5794871794871794, "no_speech_prob": 2.709137879719492e-05}, {"id": 140, "seek": 90744, "start": 907.44, "end": 915.0400000000001, "text": " So based on this, the join service can then offer the node a join token which allows it", "tokens": [407, 2361, 322, 341, 11, 264, 3917, 2643, 393, 550, 2626, 264, 9984, 257, 3917, 14862, 597, 4045, 309], "temperature": 0.0, "avg_logprob": -0.11618879863194057, "compression_ratio": 1.543956043956044, "no_speech_prob": 7.52561163608334e-06}, {"id": 141, "seek": 90744, "start": 915.0400000000001, "end": 920.48, "text": " to join the cluster and it will also hand out a permanent encryption key for the state", "tokens": [281, 3917, 264, 13630, 293, 309, 486, 611, 1011, 484, 257, 10996, 29575, 2141, 337, 264, 1785], "temperature": 0.0, "avg_logprob": -0.11618879863194057, "compression_ratio": 1.543956043956044, "no_speech_prob": 7.52561163608334e-06}, {"id": 142, "seek": 90744, "start": 920.48, "end": 923.7600000000001, "text": " disk.", "tokens": [12355, 13], "temperature": 0.0, "avg_logprob": -0.11618879863194057, "compression_ratio": 1.543956043956044, "no_speech_prob": 7.52561163608334e-06}, {"id": 143, "seek": 90744, "start": 923.7600000000001, "end": 931.0400000000001, "text": " So next we will have a quick look at how updates work and on a high level, we want the administrator", "tokens": [407, 958, 321, 486, 362, 257, 1702, 574, 412, 577, 9205, 589, 293, 322, 257, 1090, 1496, 11, 321, 528, 264, 25529], "temperature": 0.0, "avg_logprob": -0.11618879863194057, "compression_ratio": 1.543956043956044, "no_speech_prob": 7.52561163608334e-06}, {"id": 144, "seek": 93104, "start": 931.04, "end": 937.64, "text": " to be in control, we don't want to give up complete control over the update process,", "tokens": [281, 312, 294, 1969, 11, 321, 500, 380, 528, 281, 976, 493, 3566, 1969, 670, 264, 5623, 1399, 11], "temperature": 0.0, "avg_logprob": -0.08053724449801158, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.7100912120658904e-05}, {"id": 145, "seek": 93104, "start": 937.64, "end": 943.04, "text": " but we want the actual execution to be completely automatic and seamless and we do this by basically", "tokens": [457, 321, 528, 264, 3539, 15058, 281, 312, 2584, 12509, 293, 28677, 293, 321, 360, 341, 538, 1936], "temperature": 0.0, "avg_logprob": -0.08053724449801158, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.7100912120658904e-05}, {"id": 146, "seek": 93104, "start": 943.04, "end": 948.5999999999999, "text": " just telling the cluster what to do and the rest is done by a Kubernetes operator which", "tokens": [445, 3585, 264, 13630, 437, 281, 360, 293, 264, 1472, 307, 1096, 538, 257, 23145, 12973, 597], "temperature": 0.0, "avg_logprob": -0.08053724449801158, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.7100912120658904e-05}, {"id": 147, "seek": 93104, "start": 948.5999999999999, "end": 959.8, "text": " is a way to give in a desired state and let the cluster handle moving towards the state.", "tokens": [307, 257, 636, 281, 976, 294, 257, 14721, 1785, 293, 718, 264, 13630, 4813, 2684, 3030, 264, 1785, 13], "temperature": 0.0, "avg_logprob": -0.08053724449801158, "compression_ratio": 1.691588785046729, "no_speech_prob": 2.7100912120658904e-05}, {"id": 148, "seek": 95980, "start": 959.8, "end": 967.7199999999999, "text": " And an important thing to think about here is we are running in the cloud environment", "tokens": [400, 364, 1021, 551, 281, 519, 466, 510, 307, 321, 366, 2614, 294, 264, 4588, 2823], "temperature": 0.0, "avg_logprob": -0.17574826649257114, "compression_ratio": 1.538888888888889, "no_speech_prob": 3.8205860619200394e-05}, {"id": 149, "seek": 95980, "start": 967.7199999999999, "end": 975.76, "text": " and we don't want you to depend on individual nodes, this is also what GKE and EKS and others", "tokens": [293, 321, 500, 380, 528, 291, 281, 5672, 322, 2609, 13891, 11, 341, 307, 611, 437, 460, 8522, 293, 462, 31558, 293, 2357], "temperature": 0.0, "avg_logprob": -0.17574826649257114, "compression_ratio": 1.538888888888889, "no_speech_prob": 3.8205860619200394e-05}, {"id": 150, "seek": 95980, "start": 975.76, "end": 983.0, "text": " are doing, we are saying if you want to upgrade, we will give you a new node that has the desired", "tokens": [366, 884, 11, 321, 366, 1566, 498, 291, 528, 281, 11484, 11, 321, 486, 976, 291, 257, 777, 9984, 300, 575, 264, 14721], "temperature": 0.0, "avg_logprob": -0.17574826649257114, "compression_ratio": 1.538888888888889, "no_speech_prob": 3.8205860619200394e-05}, {"id": 151, "seek": 98300, "start": 983.0, "end": 989.8, "text": " configuration and we will never try to do updates in place.", "tokens": [11694, 293, 321, 486, 1128, 853, 281, 360, 9205, 294, 1081, 13], "temperature": 0.0, "avg_logprob": -0.11087677555699502, "compression_ratio": 1.5055555555555555, "no_speech_prob": 2.7526381018105894e-05}, {"id": 152, "seek": 98300, "start": 989.8, "end": 993.12, "text": " So how does the actual update work?", "tokens": [407, 577, 775, 264, 3539, 5623, 589, 30], "temperature": 0.0, "avg_logprob": -0.11087677555699502, "compression_ratio": 1.5055555555555555, "no_speech_prob": 2.7526381018105894e-05}, {"id": 153, "seek": 98300, "start": 993.12, "end": 999.6, "text": " We basically give in custom resources that describe the desired state, so the Kubernetes", "tokens": [492, 1936, 976, 294, 2375, 3593, 300, 6786, 264, 14721, 1785, 11, 370, 264, 23145], "temperature": 0.0, "avg_logprob": -0.11087677555699502, "compression_ratio": 1.5055555555555555, "no_speech_prob": 2.7526381018105894e-05}, {"id": 154, "seek": 98300, "start": 999.6, "end": 1008.2, "text": " version and the OS image that we want to run on and some properties to actually verify", "tokens": [3037, 293, 264, 12731, 3256, 300, 321, 528, 281, 1190, 322, 293, 512, 7221, 281, 767, 16888], "temperature": 0.0, "avg_logprob": -0.11087677555699502, "compression_ratio": 1.5055555555555555, "no_speech_prob": 2.7526381018105894e-05}, {"id": 155, "seek": 100820, "start": 1008.2, "end": 1013.36, "text": " like the expected measurements for the new image and tashes for the individual Kubernetes", "tokens": [411, 264, 5176, 15383, 337, 264, 777, 3256, 293, 256, 12808, 337, 264, 2609, 23145], "temperature": 0.0, "avg_logprob": -0.14787723444685152, "compression_ratio": 1.701834862385321, "no_speech_prob": 6.396974640665576e-05}, {"id": 156, "seek": 100820, "start": 1013.36, "end": 1022.2800000000001, "text": " components and the operator reads this information and basically checks if the desired state matches", "tokens": [6677, 293, 264, 12973, 15700, 341, 1589, 293, 1936, 13834, 498, 264, 14721, 1785, 10676], "temperature": 0.0, "avg_logprob": -0.14787723444685152, "compression_ratio": 1.701834862385321, "no_speech_prob": 6.396974640665576e-05}, {"id": 157, "seek": 100820, "start": 1022.2800000000001, "end": 1031.2, "text": " reality and if it detects a mismatch, it will first stop any auto-scaling operations that", "tokens": [4103, 293, 498, 309, 5531, 82, 257, 23220, 852, 11, 309, 486, 700, 1590, 604, 8399, 12, 4417, 4270, 7705, 300], "temperature": 0.0, "avg_logprob": -0.14787723444685152, "compression_ratio": 1.701834862385321, "no_speech_prob": 6.396974640665576e-05}, {"id": 158, "seek": 100820, "start": 1031.2, "end": 1037.96, "text": " are happening in the cluster and then it will start replacing the nodes one by one and for", "tokens": [366, 2737, 294, 264, 13630, 293, 550, 309, 486, 722, 19139, 264, 13891, 472, 538, 472, 293, 337], "temperature": 0.0, "avg_logprob": -0.14787723444685152, "compression_ratio": 1.701834862385321, "no_speech_prob": 6.396974640665576e-05}, {"id": 159, "seek": 103796, "start": 1037.96, "end": 1043.8, "text": " this we use the different APIs by the cloud providers.", "tokens": [341, 321, 764, 264, 819, 21445, 538, 264, 4588, 11330, 13], "temperature": 0.0, "avg_logprob": -0.10430251850801356, "compression_ratio": 1.6064814814814814, "no_speech_prob": 3.42534294759389e-05}, {"id": 160, "seek": 103796, "start": 1043.8, "end": 1048.72, "text": " So in this case, we will just spawn a new node in the correct node group that has the", "tokens": [407, 294, 341, 1389, 11, 321, 486, 445, 17088, 257, 777, 9984, 294, 264, 3006, 9984, 1594, 300, 575, 264], "temperature": 0.0, "avg_logprob": -0.10430251850801356, "compression_ratio": 1.6064814814814814, "no_speech_prob": 3.42534294759389e-05}, {"id": 161, "seek": 103796, "start": 1048.72, "end": 1051.04, "text": " desired configuration.", "tokens": [14721, 11694, 13], "temperature": 0.0, "avg_logprob": -0.10430251850801356, "compression_ratio": 1.6064814814814814, "no_speech_prob": 3.42534294759389e-05}, {"id": 162, "seek": 103796, "start": 1051.04, "end": 1059.88, "text": " We wait for the node to autonomously join the cluster and we wait for it to become ready.", "tokens": [492, 1699, 337, 264, 9984, 281, 18203, 5098, 3917, 264, 13630, 293, 321, 1699, 337, 309, 281, 1813, 1919, 13], "temperature": 0.0, "avg_logprob": -0.10430251850801356, "compression_ratio": 1.6064814814814814, "no_speech_prob": 3.42534294759389e-05}, {"id": 163, "seek": 103796, "start": 1059.88, "end": 1065.72, "text": " Next we will cordon and drain the node which just means we will safely move over your running", "tokens": [3087, 321, 486, 12250, 266, 293, 12339, 264, 9984, 597, 445, 1355, 321, 486, 11750, 1286, 670, 428, 2614], "temperature": 0.0, "avg_logprob": -0.10430251850801356, "compression_ratio": 1.6064814814814814, "no_speech_prob": 3.42534294759389e-05}, {"id": 164, "seek": 106572, "start": 1065.72, "end": 1071.4, "text": " workloads from this node to other nodes in the cluster and only if we are sure that your", "tokens": [32452, 490, 341, 9984, 281, 661, 13891, 294, 264, 13630, 293, 787, 498, 321, 366, 988, 300, 428], "temperature": 0.0, "avg_logprob": -0.12151096962593697, "compression_ratio": 1.788888888888889, "no_speech_prob": 6.103364285081625e-05}, {"id": 165, "seek": 106572, "start": 1071.4, "end": 1078.72, "text": " running workloads moved over, we will then remove the old node from the cluster and this", "tokens": [2614, 32452, 4259, 670, 11, 321, 486, 550, 4159, 264, 1331, 9984, 490, 264, 13630, 293, 341], "temperature": 0.0, "avg_logprob": -0.12151096962593697, "compression_ratio": 1.788888888888889, "no_speech_prob": 6.103364285081625e-05}, {"id": 166, "seek": 106572, "start": 1078.72, "end": 1088.2, "text": " is basically how you can get from having outdated nodes to having updated nodes and this will", "tokens": [307, 1936, 577, 291, 393, 483, 490, 1419, 36313, 13891, 281, 1419, 10588, 13891, 293, 341, 486], "temperature": 0.0, "avg_logprob": -0.12151096962593697, "compression_ratio": 1.788888888888889, "no_speech_prob": 6.103364285081625e-05}, {"id": 167, "seek": 106572, "start": 1088.2, "end": 1092.0, "text": " just go on until your whole cluster is up to date.", "tokens": [445, 352, 322, 1826, 428, 1379, 13630, 307, 493, 281, 4002, 13], "temperature": 0.0, "avg_logprob": -0.12151096962593697, "compression_ratio": 1.788888888888889, "no_speech_prob": 6.103364285081625e-05}, {"id": 168, "seek": 109200, "start": 1092.0, "end": 1099.96, "text": " You can also parallelize this and when this is done, you can just restart the auto-scaler", "tokens": [509, 393, 611, 8952, 1125, 341, 293, 562, 341, 307, 1096, 11, 291, 393, 445, 21022, 264, 8399, 12, 4417, 17148], "temperature": 0.0, "avg_logprob": -0.25971020245161214, "compression_ratio": 1.427710843373494, "no_speech_prob": 2.4661581846885383e-05}, {"id": 169, "seek": 109200, "start": 1099.96, "end": 1108.72, "text": " and move on with your day.", "tokens": [293, 1286, 322, 365, 428, 786, 13], "temperature": 0.0, "avg_logprob": -0.25971020245161214, "compression_ratio": 1.427710843373494, "no_speech_prob": 2.4661581846885383e-05}, {"id": 170, "seek": 109200, "start": 1108.72, "end": 1114.32, "text": " All right, quick conclusion.", "tokens": [1057, 558, 11, 1702, 10063, 13], "temperature": 0.0, "avg_logprob": -0.25971020245161214, "compression_ratio": 1.427710843373494, "no_speech_prob": 2.4661581846885383e-05}, {"id": 171, "seek": 109200, "start": 1114.32, "end": 1121.04, "text": " So in summary, the fundamental ideas, we take this confidential cluster concept, enveloping", "tokens": [407, 294, 12691, 11, 264, 8088, 3487, 11, 321, 747, 341, 27054, 13630, 3410, 11, 33860, 278], "temperature": 0.0, "avg_logprob": -0.25971020245161214, "compression_ratio": 1.427710843373494, "no_speech_prob": 2.4661581846885383e-05}, {"id": 172, "seek": 112104, "start": 1121.04, "end": 1128.92, "text": " the entire Kubernetes cluster instead of protecting single containers or parts, where", "tokens": [264, 2302, 23145, 13630, 2602, 295, 12316, 2167, 17089, 420, 3166, 11, 689], "temperature": 0.0, "avg_logprob": -0.25610333104287425, "compression_ratio": 1.59915611814346, "no_speech_prob": 3.372996434336528e-05}, {"id": 173, "seek": 112104, "start": 1128.92, "end": 1134.68, "text": " we gain is we basically get all the orchestration for free, we need to protect the edges, all", "tokens": [321, 6052, 307, 321, 1936, 483, 439, 264, 14161, 2405, 337, 1737, 11, 321, 643, 281, 2371, 264, 8819, 11, 439], "temperature": 0.0, "avg_logprob": -0.25610333104287425, "compression_ratio": 1.59915611814346, "no_speech_prob": 3.372996434336528e-05}, {"id": 174, "seek": 112104, "start": 1134.68, "end": 1137.0, "text": " the Ion and so forth.", "tokens": [264, 286, 266, 293, 370, 5220, 13], "temperature": 0.0, "avg_logprob": -0.25610333104287425, "compression_ratio": 1.59915611814346, "no_speech_prob": 3.372996434336528e-05}, {"id": 175, "seek": 112104, "start": 1137.0, "end": 1144.0, "text": " The downside is we can't isolate inside that cluster so it's one big envelope, of course.", "tokens": [440, 25060, 307, 321, 393, 380, 25660, 1854, 300, 13630, 370, 309, 311, 472, 955, 19989, 11, 295, 1164, 13], "temperature": 0.0, "avg_logprob": -0.25610333104287425, "compression_ratio": 1.59915611814346, "no_speech_prob": 3.372996434336528e-05}, {"id": 176, "seek": 112104, "start": 1144.0, "end": 1148.28, "text": " This works already, it's an open source tool, you can check out Constellation on GitHub", "tokens": [639, 1985, 1217, 11, 309, 311, 364, 1269, 4009, 2290, 11, 291, 393, 1520, 484, 8574, 898, 399, 322, 23331], "temperature": 0.0, "avg_logprob": -0.25610333104287425, "compression_ratio": 1.59915611814346, "no_speech_prob": 3.372996434336528e-05}, {"id": 177, "seek": 114828, "start": 1148.28, "end": 1152.96, "text": " and try it locally or on one of the big clouds.", "tokens": [293, 853, 309, 16143, 420, 322, 472, 295, 264, 955, 12193, 13], "temperature": 0.0, "avg_logprob": -0.24377283939095432, "compression_ratio": 1.5132743362831858, "no_speech_prob": 4.258728222339414e-05}, {"id": 178, "seek": 114828, "start": 1152.96, "end": 1161.8799999999999, "text": " From a Kubernetes perspective, it's just vanilla Kubernetes so not surprising that it's certified.", "tokens": [3358, 257, 23145, 4585, 11, 309, 311, 445, 17528, 23145, 370, 406, 8830, 300, 309, 311, 18580, 13], "temperature": 0.0, "avg_logprob": -0.24377283939095432, "compression_ratio": 1.5132743362831858, "no_speech_prob": 4.258728222339414e-05}, {"id": 179, "seek": 114828, "start": 1161.8799999999999, "end": 1165.92, "text": " To give out some more references, if you're interested in this whole image part, there", "tokens": [1407, 976, 484, 512, 544, 15400, 11, 498, 291, 434, 3102, 294, 341, 1379, 3256, 644, 11, 456], "temperature": 0.0, "avg_logprob": -0.24377283939095432, "compression_ratio": 1.5132743362831858, "no_speech_prob": 4.258728222339414e-05}, {"id": 180, "seek": 114828, "start": 1165.92, "end": 1174.16, "text": " was the image-based Linux and TPM death room, there's a lot of talks on these topics, also", "tokens": [390, 264, 3256, 12, 6032, 18734, 293, 314, 18819, 2966, 1808, 11, 456, 311, 257, 688, 295, 6686, 322, 613, 8378, 11, 611], "temperature": 0.0, "avg_logprob": -0.24377283939095432, "compression_ratio": 1.5132743362831858, "no_speech_prob": 4.258728222339414e-05}, {"id": 181, "seek": 114828, "start": 1174.16, "end": 1176.16, "text": " very interesting.", "tokens": [588, 1880, 13], "temperature": 0.0, "avg_logprob": -0.24377283939095432, "compression_ratio": 1.5132743362831858, "no_speech_prob": 4.258728222339414e-05}, {"id": 182, "seek": 117616, "start": 1176.16, "end": 1179.72, "text": " There's a, so this is the last talk here, but if you're interested in more confidential", "tokens": [821, 311, 257, 11, 370, 341, 307, 264, 1036, 751, 510, 11, 457, 498, 291, 434, 3102, 294, 544, 27054], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 183, "seek": 117616, "start": 1179.72, "end": 1185.68, "text": " computing, sneak a little advertisement here for the OC3 Open Confidential Computing Conference", "tokens": [15866, 11, 13164, 257, 707, 31370, 510, 337, 264, 42278, 18, 7238, 11701, 1078, 831, 37804, 278, 22131], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 184, "seek": 117616, "start": 1185.68, "end": 1191.16, "text": " that's going to happen in March, it's virtual free, you can just sign up and listen to the", "tokens": [300, 311, 516, 281, 1051, 294, 6129, 11, 309, 311, 6374, 1737, 11, 291, 393, 445, 1465, 493, 293, 2140, 281, 264], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 185, "seek": 117616, "start": 1191.16, "end": 1192.16, "text": " talks if you're interested.", "tokens": [6686, 498, 291, 434, 3102, 13], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 186, "seek": 117616, "start": 1192.16, "end": 1196.3600000000001, "text": " A bunch of the folks that were here think also have a talk there.", "tokens": [316, 3840, 295, 264, 4024, 300, 645, 510, 519, 611, 362, 257, 751, 456, 13], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 187, "seek": 117616, "start": 1196.3600000000001, "end": 1202.3200000000002, "text": " Yeah, so yeah, if you have any questions, please feel free to get in touch and that's", "tokens": [865, 11, 370, 1338, 11, 498, 291, 362, 604, 1651, 11, 1767, 841, 1737, 281, 483, 294, 2557, 293, 300, 311], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 188, "seek": 117616, "start": 1202.3200000000002, "end": 1203.3200000000002, "text": " it.", "tokens": [309, 13], "temperature": 0.0, "avg_logprob": -0.22663954099019368, "compression_ratio": 1.6962962962962962, "no_speech_prob": 7.022258068900555e-05}, {"id": 189, "seek": 120332, "start": 1203.32, "end": 1210.32, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.2, "avg_logprob": -0.8198654311043876, "compression_ratio": 0.7419354838709677, "no_speech_prob": 0.00098893023096025}, {"id": 190, "seek": 120332, "start": 1210.32, "end": 1230.6, "text": " Oh, so yeah.", "tokens": [876, 11, 370, 1338, 13], "temperature": 0.2, "avg_logprob": -0.8198654311043876, "compression_ratio": 0.7419354838709677, "no_speech_prob": 0.00098893023096025}, {"id": 191, "seek": 123060, "start": 1230.6, "end": 1236.1999999999998, "text": " So the question was about the Attesta TLS, when we join nodes, we establish a seek connection", "tokens": [407, 264, 1168, 390, 466, 264, 7298, 7841, 314, 19198, 11, 562, 321, 3917, 13891, 11, 321, 8327, 257, 8075, 4984], "temperature": 0.0, "avg_logprob": -0.2632118182235889, "compression_ratio": 1.5219512195121951, "no_speech_prob": 0.00014391726290341467}, {"id": 192, "seek": 123060, "start": 1236.1999999999998, "end": 1237.8, "text": " based on Attesta TLS.", "tokens": [2361, 322, 7298, 7841, 314, 19198, 13], "temperature": 0.0, "avg_logprob": -0.2632118182235889, "compression_ratio": 1.5219512195121951, "no_speech_prob": 0.00014391726290341467}, {"id": 193, "seek": 123060, "start": 1237.8, "end": 1243.24, "text": " Yes, so first of all, our implementation is open source, it's part of the consolation", "tokens": [1079, 11, 370, 700, 295, 439, 11, 527, 11420, 307, 1269, 4009, 11, 309, 311, 644, 295, 264, 16054, 399], "temperature": 0.0, "avg_logprob": -0.2632118182235889, "compression_ratio": 1.5219512195121951, "no_speech_prob": 0.00014391726290341467}, {"id": 194, "seek": 123060, "start": 1243.24, "end": 1245.0, "text": " source on GitHub.", "tokens": [4009, 322, 23331, 13], "temperature": 0.0, "avg_logprob": -0.2632118182235889, "compression_ratio": 1.5219512195121951, "no_speech_prob": 0.00014391726290341467}, {"id": 195, "seek": 123060, "start": 1245.0, "end": 1253.1999999999998, "text": " I think it's nothing fancy, we use the AMD SCV or Intel TDX and so forth, remote attestation", "tokens": [286, 519, 309, 311, 1825, 10247, 11, 321, 764, 264, 34808, 9028, 53, 420, 19762, 42606, 55, 293, 370, 5220, 11, 8607, 951, 377, 399], "temperature": 0.0, "avg_logprob": -0.2632118182235889, "compression_ratio": 1.5219512195121951, "no_speech_prob": 0.00014391726290341467}, {"id": 196, "seek": 125320, "start": 1253.2, "end": 1261.8, "text": " statement to exchange a key as part of the data that's sent over.", "tokens": [5629, 281, 7742, 257, 2141, 382, 644, 295, 264, 1412, 300, 311, 2279, 670, 13], "temperature": 0.0, "avg_logprob": -0.21118770012488733, "compression_ratio": 1.4183006535947713, "no_speech_prob": 2.0766634406754747e-05}, {"id": 197, "seek": 125320, "start": 1261.8, "end": 1267.6000000000001, "text": " And we bind the TLS session to that attested key.", "tokens": [400, 321, 14786, 264, 314, 19198, 5481, 281, 300, 951, 21885, 2141, 13], "temperature": 0.0, "avg_logprob": -0.21118770012488733, "compression_ratio": 1.4183006535947713, "no_speech_prob": 2.0766634406754747e-05}, {"id": 198, "seek": 125320, "start": 1267.6000000000001, "end": 1270.96, "text": " I guess there are a couple of implementations for Attesta TLS, they work more or less the", "tokens": [286, 2041, 456, 366, 257, 1916, 295, 4445, 763, 337, 7298, 7841, 314, 19198, 11, 436, 589, 544, 420, 1570, 264], "temperature": 0.0, "avg_logprob": -0.21118770012488733, "compression_ratio": 1.4183006535947713, "no_speech_prob": 2.0766634406754747e-05}, {"id": 199, "seek": 125320, "start": 1270.96, "end": 1271.96, "text": " same.", "tokens": [912, 13], "temperature": 0.0, "avg_logprob": -0.21118770012488733, "compression_ratio": 1.4183006535947713, "no_speech_prob": 2.0766634406754747e-05}, {"id": 200, "seek": 125320, "start": 1271.96, "end": 1272.96, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.21118770012488733, "compression_ratio": 1.4183006535947713, "no_speech_prob": 2.0766634406754747e-05}, {"id": 201, "seek": 127296, "start": 1272.96, "end": 1286.28, "text": " I think to the most that I'm familiar with, there is this vulnerability in remote attestation", "tokens": [286, 519, 281, 264, 881, 300, 286, 478, 4963, 365, 11, 456, 307, 341, 24210, 294, 8607, 951, 377, 399], "temperature": 0.0, "avg_logprob": -0.5699276619769157, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0019042338244616985}, {"id": 202, "seek": 127296, "start": 1286.28, "end": 1295.1200000000001, "text": " that can be faked by a machine's whole spread and now I wonder if it is possible to fight", "tokens": [300, 393, 312, 283, 7301, 538, 257, 3479, 311, 1379, 3974, 293, 586, 286, 2441, 498, 309, 307, 1944, 281, 2092], "temperature": 0.0, "avg_logprob": -0.5699276619769157, "compression_ratio": 1.3656716417910448, "no_speech_prob": 0.0019042338244616985}, {"id": 203, "seek": 129512, "start": 1295.12, "end": 1303.9199999999998, "text": " out from the remote attestation of the whole cluster, any single machine in the cluster", "tokens": [484, 490, 264, 8607, 951, 377, 399, 295, 264, 1379, 13630, 11, 604, 2167, 3479, 294, 264, 13630], "temperature": 0.0, "avg_logprob": -0.3556683161487318, "compression_ratio": 1.6216216216216217, "no_speech_prob": 8.322735084220767e-05}, {"id": 204, "seek": 129512, "start": 1303.9199999999998, "end": 1314.4799999999998, "text": " may make an attestation and it goes unnoticed or not, all the others are for example useful.", "tokens": [815, 652, 364, 951, 377, 399, 293, 309, 1709, 517, 2247, 4233, 420, 406, 11, 439, 264, 2357, 366, 337, 1365, 4420, 13], "temperature": 0.0, "avg_logprob": -0.3556683161487318, "compression_ratio": 1.6216216216216217, "no_speech_prob": 8.322735084220767e-05}, {"id": 205, "seek": 129512, "start": 1314.4799999999998, "end": 1315.8799999999999, "text": " Okay, so repeat the question.", "tokens": [1033, 11, 370, 7149, 264, 1168, 13], "temperature": 0.0, "avg_logprob": -0.3556683161487318, "compression_ratio": 1.6216216216216217, "no_speech_prob": 8.322735084220767e-05}, {"id": 206, "seek": 129512, "start": 1315.8799999999999, "end": 1323.36, "text": " The question was there is a known vulnerability for attestation in confidential computing", "tokens": [440, 1168, 390, 456, 307, 257, 2570, 24210, 337, 951, 377, 399, 294, 27054, 15866], "temperature": 0.0, "avg_logprob": -0.3556683161487318, "compression_ratio": 1.6216216216216217, "no_speech_prob": 8.322735084220767e-05}, {"id": 207, "seek": 132336, "start": 1323.36, "end": 1330.36, "text": " and if given this confidential cluster, if from the whole cluster attestation I can refer", "tokens": [293, 498, 2212, 341, 27054, 13630, 11, 498, 490, 264, 1379, 13630, 951, 377, 399, 286, 393, 2864], "temperature": 0.0, "avg_logprob": -0.3150020756133615, "compression_ratio": 1.6120218579234973, "no_speech_prob": 7.715170795563608e-05}, {"id": 208, "seek": 132336, "start": 1330.36, "end": 1332.84, "text": " to if one of the nodes is faking attestation.", "tokens": [281, 498, 472, 295, 264, 13891, 307, 283, 2456, 951, 377, 399, 13], "temperature": 0.0, "avg_logprob": -0.3150020756133615, "compression_ratio": 1.6120218579234973, "no_speech_prob": 7.715170795563608e-05}, {"id": 209, "seek": 132336, "start": 1332.84, "end": 1339.8799999999999, "text": " I have to say there were several vulnerabilities in several of the CC technologies over time,", "tokens": [286, 362, 281, 584, 456, 645, 2940, 37633, 294, 2940, 295, 264, 12630, 7943, 670, 565, 11], "temperature": 0.0, "avg_logprob": -0.3150020756133615, "compression_ratio": 1.6120218579234973, "no_speech_prob": 7.715170795563608e-05}, {"id": 210, "seek": 132336, "start": 1339.8799999999999, "end": 1343.7199999999998, "text": " I'm not aware of, no with what vulnerability you're referring to.", "tokens": [286, 478, 406, 3650, 295, 11, 572, 365, 437, 24210, 291, 434, 13761, 281, 13], "temperature": 0.0, "avg_logprob": -0.3150020756133615, "compression_ratio": 1.6120218579234973, "no_speech_prob": 7.715170795563608e-05}, {"id": 211, "seek": 134372, "start": 1343.72, "end": 1370.32, "text": " Okay, so the way the cluster attestation works is you give the, let's say the first", "tokens": [1033, 11, 370, 264, 636, 264, 13630, 951, 377, 399, 1985, 307, 291, 976, 264, 11, 718, 311, 584, 264, 700], "temperature": 0.0, "avg_logprob": -0.2444710350036621, "compression_ratio": 1.0921052631578947, "no_speech_prob": 3.168941111653112e-05}, {"id": 212, "seek": 137032, "start": 1370.32, "end": 1374.24, "text": " node, it has a known configuration, it will attest all other nodes based on this known", "tokens": [9984, 11, 309, 575, 257, 2570, 11694, 11, 309, 486, 951, 377, 439, 661, 13891, 2361, 322, 341, 2570], "temperature": 0.0, "avg_logprob": -0.20920038223266602, "compression_ratio": 1.6687898089171975, "no_speech_prob": 0.00016066449461504817}, {"id": 213, "seek": 137032, "start": 1374.24, "end": 1377.1599999999999, "text": " attestation.", "tokens": [951, 377, 399, 13], "temperature": 0.0, "avg_logprob": -0.20920038223266602, "compression_ratio": 1.6687898089171975, "no_speech_prob": 0.00016066449461504817}, {"id": 214, "seek": 137032, "start": 1377.1599999999999, "end": 1382.96, "text": " If one node would be able to perfectly fake that attestation, you would not know from", "tokens": [759, 472, 9984, 576, 312, 1075, 281, 6239, 7592, 300, 951, 377, 399, 11, 291, 576, 406, 458, 490], "temperature": 0.0, "avg_logprob": -0.20920038223266602, "compression_ratio": 1.6687898089171975, "no_speech_prob": 0.00016066449461504817}, {"id": 215, "seek": 137032, "start": 1382.96, "end": 1388.6799999999998, "text": " an outside, from a cluster attestation perspective which node this would be.", "tokens": [364, 2380, 11, 490, 257, 13630, 951, 377, 399, 4585, 597, 9984, 341, 576, 312, 13], "temperature": 0.0, "avg_logprob": -0.20920038223266602, "compression_ratio": 1.6687898089171975, "no_speech_prob": 0.00016066449461504817}, {"id": 216, "seek": 138868, "start": 1388.68, "end": 1405.24, "text": " But yeah, I guess that's what you can say.", "tokens": [583, 1338, 11, 286, 2041, 300, 311, 437, 291, 393, 584, 13], "temperature": 0.0, "avg_logprob": -0.2641010761260986, "compression_ratio": 1.1415094339622642, "no_speech_prob": 7.132913015084341e-05}, {"id": 217, "seek": 138868, "start": 1405.24, "end": 1413.48, "text": " It is super simple but it is big TCB, do you have any plans to reduce the TCB?", "tokens": [467, 307, 1687, 2199, 457, 309, 307, 955, 34150, 33, 11, 360, 291, 362, 604, 5482, 281, 5407, 264, 34150, 33, 30], "temperature": 0.0, "avg_logprob": -0.2641010761260986, "compression_ratio": 1.1415094339622642, "no_speech_prob": 7.132913015084341e-05}, {"id": 218, "seek": 141348, "start": 1413.48, "end": 1421.2, "text": " Yeah, we try to, as I said, this is a trade-off, yes, it's a much larger TCB than SGX, much", "tokens": [865, 11, 321, 853, 281, 11, 382, 286, 848, 11, 341, 307, 257, 4923, 12, 4506, 11, 2086, 11, 309, 311, 257, 709, 4833, 34150, 33, 813, 34520, 55, 11, 709], "temperature": 0.0, "avg_logprob": -0.27872677853232936, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.00019689004693645984}, {"id": 219, "seek": 141348, "start": 1421.2, "end": 1423.68, "text": " larger TCB even than confidential containers.", "tokens": [4833, 34150, 33, 754, 813, 27054, 17089, 13], "temperature": 0.0, "avg_logprob": -0.27872677853232936, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.00019689004693645984}, {"id": 220, "seek": 141348, "start": 1423.68, "end": 1427.84, "text": " We of course will try to make it as minimal as possible.", "tokens": [492, 295, 1164, 486, 853, 281, 652, 309, 382, 13206, 382, 1944, 13], "temperature": 0.0, "avg_logprob": -0.27872677853232936, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.00019689004693645984}, {"id": 221, "seek": 141348, "start": 1427.84, "end": 1433.1200000000001, "text": " Biggest leverage is of course the node OS and everything we can do inside there, yeah,", "tokens": [5429, 2629, 13982, 307, 295, 1164, 264, 9984, 12731, 293, 1203, 321, 393, 360, 1854, 456, 11, 1338, 11], "temperature": 0.0, "avg_logprob": -0.27872677853232936, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.00019689004693645984}, {"id": 222, "seek": 141348, "start": 1433.1200000000001, "end": 1435.1200000000001, "text": " we'll definitely try to improve there.", "tokens": [321, 603, 2138, 853, 281, 3470, 456, 13], "temperature": 0.0, "avg_logprob": -0.27872677853232936, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.00019689004693645984}, {"id": 223, "seek": 141348, "start": 1435.1200000000001, "end": 1436.1200000000001, "text": " Yes?", "tokens": [1079, 30], "temperature": 0.0, "avg_logprob": -0.27872677853232936, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.00019689004693645984}, {"id": 224, "seek": 143612, "start": 1436.12, "end": 1445.12, "text": " So you mentioned that there's some firmware at the beginning of the food processes that", "tokens": [407, 291, 2835, 300, 456, 311, 512, 30289, 412, 264, 2863, 295, 264, 1755, 7555, 300], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 225, "seek": 143612, "start": 1445.12, "end": 1446.12, "text": " firmware provided by you or by the provider?", "tokens": [30289, 5649, 538, 291, 420, 538, 264, 12398, 30], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 226, "seek": 143612, "start": 1446.12, "end": 1447.12, "text": " Very good question.", "tokens": [4372, 665, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 227, "seek": 143612, "start": 1447.12, "end": 1448.12, "text": " Oh, sorry.", "tokens": [876, 11, 2597, 13], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 228, "seek": 143612, "start": 1448.12, "end": 1455.36, "text": " Yeah, the question is, part of the confidential VMs is the first component that's booted", "tokens": [865, 11, 264, 1168, 307, 11, 644, 295, 264, 27054, 18038, 82, 307, 264, 700, 6542, 300, 311, 11450, 292], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 229, "seek": 143612, "start": 1455.36, "end": 1456.36, "text": " is the firmware.", "tokens": [307, 264, 30289, 13], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 230, "seek": 143612, "start": 1456.36, "end": 1458.52, "text": " Do we have control of the firmware?", "tokens": [1144, 321, 362, 1969, 295, 264, 30289, 30], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 231, "seek": 143612, "start": 1458.52, "end": 1463.76, "text": " Ideally we would have, but what's provided by the cloud providers right now is Azure has", "tokens": [40817, 321, 576, 362, 11, 457, 437, 311, 5649, 538, 264, 4588, 11330, 558, 586, 307, 11969, 575], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 232, "seek": 143612, "start": 1463.76, "end": 1465.84, "text": " something in preview that allows you to do that.", "tokens": [746, 294, 14281, 300, 4045, 291, 281, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.2845688203794766, "compression_ratio": 1.7372549019607844, "no_speech_prob": 0.00014173144882079214}, {"id": 233, "seek": 146584, "start": 1465.84, "end": 1470.28, "text": " It's not general available and GCP does not allow you that.", "tokens": [467, 311, 406, 2674, 2435, 293, 460, 20049, 775, 406, 2089, 291, 300, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 234, "seek": 146584, "start": 1470.28, "end": 1476.36, "text": " So the firmware for at least GCP or Azure is completely controlled by them.", "tokens": [407, 264, 30289, 337, 412, 1935, 460, 20049, 420, 11969, 307, 2584, 10164, 538, 552, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 235, "seek": 146584, "start": 1476.36, "end": 1483.0, "text": " On OpenStack with QM or KVM, you can potentially fully control the firmware, yeah.", "tokens": [1282, 7238, 4520, 501, 365, 1249, 44, 420, 591, 53, 44, 11, 291, 393, 7263, 4498, 1969, 264, 30289, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 236, "seek": 146584, "start": 1483.0, "end": 1484.0, "text": " Yes, next question.", "tokens": [1079, 11, 958, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 237, "seek": 146584, "start": 1484.0, "end": 1488.8799999999999, "text": " That doesn't create a huge trust problem because you have to trust the firmware to be secure.", "tokens": [663, 1177, 380, 1884, 257, 2603, 3361, 1154, 570, 291, 362, 281, 3361, 264, 30289, 281, 312, 7144, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 238, "seek": 146584, "start": 1488.8799999999999, "end": 1493.6399999999999, "text": " I mean, this is, of course, does this create a trust problem is the question.", "tokens": [286, 914, 11, 341, 307, 11, 295, 1164, 11, 775, 341, 1884, 257, 3361, 1154, 307, 264, 1168, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 239, "seek": 146584, "start": 1493.6399999999999, "end": 1494.6399999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2897020188053097, "compression_ratio": 1.6377952755905512, "no_speech_prob": 3.424599708523601e-05}, {"id": 240, "seek": 149464, "start": 1494.64, "end": 1497.24, "text": " I mean, this is a controversy, I fully agree with you.", "tokens": [286, 914, 11, 341, 307, 257, 22976, 11, 286, 4498, 3986, 365, 291, 13], "temperature": 0.0, "avg_logprob": -0.17560662978734726, "compression_ratio": 1.2178217821782178, "no_speech_prob": 0.00013546102854888886}, {"id": 241, "seek": 149464, "start": 1497.24, "end": 1498.88, "text": " This is not how we would like it.", "tokens": [639, 307, 406, 577, 321, 576, 411, 309, 13], "temperature": 0.0, "avg_logprob": -0.17560662978734726, "compression_ratio": 1.2178217821782178, "no_speech_prob": 0.00013546102854888886}, {"id": 242, "seek": 149888, "start": 1498.88, "end": 1528.2800000000002, "text": " This is just the best we can have.", "tokens": [50364, 639, 307, 445, 264, 1151, 321, 393, 362, 13, 51834], "temperature": 0.0, "avg_logprob": -0.37651193141937256, "compression_ratio": 0.8717948717948718, "no_speech_prob": 0.00014874922635499388}], "language": "en"}