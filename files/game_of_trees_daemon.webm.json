{"text": " Hello. Can you see my slides? Yeah. I have only wide background, so the light at the top shouldn't be a big issue. And yeah, we're good to go. Okay. Hi, I'm Stefan. I work on generally open source stuff as a freelancer, and I'm here to present something I've been working on as a site project in the last few months. This is part of the Game of Trees project, which I started in November 2017 at an OpenBSD hackathon in Berlin. It's compatible with Git repositories and the Git network protocol, but apart from that, it's not trying to replicate Git specifically, but it's just the idea to reuse these formats because they're very widely used. And they're fairly okay and well designed, so we can just keep using them and not make up our own. And yeah, because it's written on OpenBSD, it uses a lot of OpenBSD specific APIs. There's actually a portable version that's maintained by Thomas Adam, who also does the T-Max terminal multiplexer portable version, and you can install this on various systems. And I think Thomas always likes to also explore more options for other systems. If you're interested, if yours is not listed, you can talk to him. And yeah, it's ISC licensed because it aims to be basically as pleasing to OpenBSD developers as possible. That's the whole idea. Now, what we currently have is what's working really well is the client side. And this is basically sort of feature complete at this point. You might want to have some more convenience things, but all the basics are there. Everything is working. You have several frontends which I'll present in the following slides. You have a lot of code that's shared by these frontends, which I've labeled library here because it's in the lib directory of the source tree. One thing that this program does, which is very specific, is that it will not touch repository data outside of programs that are separate and are called lib exec helpers. From the programs point of view, if you use the library, you don't see this. You just like say open a repository and fetch me some objects and so on. But internally, it will actually start other programs that restricts themselves a lot using pledge and unveil and so on. And those will actually pass the repository data. This is the current list of commands. And I'm quite happy with this set actually. I've been working with this set for the last five years or so. They've slowly been added over time. But I feel very productive with these. And I don't miss anything. I know that some people would like some additional things. But at this point, we're mostly like fine tuning. And you can read the manual page on this URL if you like. You can actually read it from start to finish in order to get a good idea of how the system works and how it's supposed to be used. There's also a got admin utility which sort of mirrors CVS admin or SVN admin in the sense that if you're doing something that only requires like specific things where you do something with a repository specifically, you would use that command. This isn't complete. There are some things that I would still like to add here, which we'll go into later. But it's already prepared a lot of code for the server that I'll talk about. Because for example, dealing with pack files is necessary for the server as well as this tool. We have a curses command line, a base terminal browser thing. You can read commits with that and look at diffs and blame files and so on. It's working really well. And most recently, there's a developer Mark Jamsak who added a lot of convenience to this like vertical scrolling, diff stat display and all sorts of nice things. It doesn't work quite well on repositories that have a lot of merge commits. I found that some repositories are hard to browse if they use a lot of merges. But for simple repositories, it's really good. And if something is missing and you feel like you would like to use this on a repository with lots of merges, you can please make suggestions as to what we could improve there. You also have a web front end, which is sort of like CVS web or VUVC. And it's also using the God code internally to show you files on a web browser and commits and logs and so on. That's written by Tracy Emery. And most recently, Omar Polo has been doing a lot of refactoring there and added a templating mechanism, for example, to deal with generating the HTML, not from printf, but with something more generic. And it's quite nice. It also has RSS feeds for tags, which is probably rarely outdated, but I think it's kind of nice. You can be notified of new releases that way. Okay, so about the server. So the goal of one of the major milestones for any version control system that's ever been developed is that eventually you want to be self hosting. And so far, we've been using a Gitulite setup for this project. And that's working well, but I would really like to be able to run this on an OpenBSD server using my own code. So after putting this off for a long time, because I always thought it would be a lot of work, I finally ran out of things to do on the client side and said, okay, I'm going to look into several things now and started talking to people at Hackathons in September and summer last year, basically, and started working in September. By now, you can install it on OpenBSD current. It's not yet in the portable version. Thomas and Omar were going to look at that, but it might take some time still, but eventually it should arrive there. Now, the main use cases I want to support with this are exactly two. One is, of course, I want to be self hosting for my own open source projects and maybe also private repositories. And the other is I want to enable what OpenBSD is using now with CVS, which is anonymous distribution of source code over SSH, where you know that the server you talk to is genuine and should have the right source code for you, but the client doesn't need to authenticate. And every time I want to get source code from a platform like GitHub or GitLab or other forages that exist with God, I have to upload an SSH key because they will not accept my SSH connection. And because God only uses SSH, it doesn't implement HTTP support. This is really annoying. And it's not really a technical problem to do this. It's just basically that in their software, they didn't foresee this use case. But I think it's very nice. And you can actually go and try this now if you like. This is the code that I'm talking about running on a server and it's serving God code and God portable. You have the Husky fingerprints, which you can not take a photo of or whatever. It's also on the website. And yeah, if all of you all at the same time would now go and trigger this, you'd probably trap my SSH rate limiter, especially if HostM is behind that, which I hope not. But yeah, be gentle. Maybe if you want to clone from this repo, pick a slide number in your head from between 10 and 37. And when the slide comes up, you start your clone, then you'll be fine. So yeah, I'd like to explain a bit what the Git protocol is doing because without knowing this, you will not understand what a server should be doing. And it turns out that if you leave out HTTP and all this stuff and just concentrate on the playing it protocol, it's actually really quite simple. If you don't, if you also ignore some protocol extensions, which we haven't implemented yet. So this is like really a bare bone clone that that we will go through. It's not very complicated. The main thing to understand is that when you're using SSH, the Git client will actually go and run the login shell of the user and then give that a command to run. And Git basically hardcoded the names of these executables in its protocol. So you cannot be a Git protocol without calling Git upload pack on the server when you log in, right? Also there's Git receive pack for the other side when you're when you're when you're sending something. Anyway, if you run God clone with the dash v flag, you will see a trace that is very similar to what I'm showing now. It's I've left out a few bits. But initially, so this is only Git protocol version zero slash one Git protocol version two changed a bit some things in a good way. But I haven't implemented that. So we're seeing a version one trace. Initially, the server just sends one message which says I have one of the branches I have has this comment hash and this name. And oh, I also have some capabilities. You can see in the trace, these are hidden behind a null byte. Because I suppose very old versions of Git clients didn't really understand the capabilities yet and the null byte made them not read that part of the message. So they and also for version two, they did the same thing, hiding a version announcements behind two null bytes, because then the next kind, you know, this is a bit hacky, but seems to work. Don't worry about the capability capabilities. It's not important what they are. What's important to understand also is that each message is wrapped in a packet line, they call it. And that's simply a length plus data framing format for these messages. So then the server keeps sending messages for every branch it has. And here's one more, its main branch happens to be the same as had, because had is a similar to main, but you know, not important. And the client just keeps storing these. And eventually the server sends a flush packet, which is just a zero length packet and says, okay, I'm done. And in response to which the client will tell the server what it wants. So the client sends similar messages also includes its capabilities in the first message it's sending. And basically says, oh, yeah, I want this commit and this commit and this commit. And eventually it also sends a flush packet to terminate that list. Now if we're doing a clone, right? So we have nothing. But if we already had commits, we could now tell the server what we have by sending half lines, which look just the same as the want lines with more commit IDs. And the server then builds a second set of commits in its memory to say like, oh, okay, the client has all of these already, I don't need to send those and don't need to send any objects that are hanging off these commits. It's basically just an optimization to keep the pack file small that will be sent next, right? So you're not doing a full clone every time you do a full clone initially. And then once you have something, you tell the server what you already have. So you only fetch the new stuff. And yeah, because we're doing a clone, we're just setting a server we're done. And now the client's protocol is already finished. So this is basically the last message the client will ever send. And the server sends one more message in response, which is in this case, a knack, not acknowledged. I don't know why they chose these words, aka knack. But essentially what these do is for a knack, the server keeps sending knacks while the clients are sending half lines to say like, I haven't found a common ancestor yet, please send me more. Because without a common ancestor, the server cannot determine a subset of the commit graph to use for the pack file. Because if the client sends totally unrelated commit hashes, the server doesn't know, then the server cannot use this to optimize the pack file. So it keeps sending knack. And in another case where you would have a common ancestor, the server would send an act and commit hash. And the client would then stop sending half lines for this branch. The exact details of this part of the protocol are a bit complicated. And they kept adding extensions to this behavior. So the actual knack and act processing depends on various options that you can set in the protocol, which are all documented in the Git docs. But it's not important for us here now. Basically, the server just tells us, well, I have no common ancestors because you don't have any commits. That's fine. And then the server starts calculating the set of objects it wants to put in the pack file. And what Sony has colored, Git calls us something else. It calls us like counting and enumerate. I don't know which step does what. But what we do is we have the whole graph and we keep coloring nodes in the graph. It's kind of like mine or theirs or something like this. And then eventually we have a subsection, which in this case would be all of it. And of all the commits first, and then you go through these commits and traverse all the trees and collect all the trees and blobs that you need to include for the client. And then you have a lot of objects. And you sort them in a certain way. And you go through and check whether you already have a delta for any of these objects and whether the delta base will also be included in the packet sending so that you can avoid creating a delta for this object. You just reuse the delta that you already have somewhere, which is an optimization for performance and very important. If you don't do that, your server is going to be super slow. And then you deltify some of the rest of the objects and you're good to go. Now you know what you need to know to start generating a pack file stream. And you start sending this out to the client. And the client downloads it. Once it has everything indexes the pack, which is a step where you have the pack file, which is full of compressed and deltified objects. You don't know what's in it because the server didn't tell you anything about the objects. You just told the server, send me this. The server sends you something. Now you don't know what's in there. And to use the pack file, you always need to have an index for it, which tells you which object ID is at which offset in the pack file. So you just read the whole thing. And because Git uses intrinsic object identifiers, you can calculate the IDs yourself based on the contents of the blobs and the trees and the commits and so on. So you build that up. And then for any of the deltified objects, you also need to make sure that you can actually combine all the deltas to get the right content. And that's the last step. That takes quite a while. And then once you're done with that on a big pack anyway, it takes a long time. And then once you have that, you know, okay, I have this pack. The commit I want it is in there. All the objects that are hanging off of it are, you know, by nature of the hashing structure that Git is using are there. So that's fine, we're going to use this. Then you just create a reference for the Git client to find its initial commit and you can use the repository. In the push case, it works slightly differently. You still have this reference list announcement at the beginning. And instead of saying what it wants, the client proposes reference updates to say, oh, I would like to change the main branch to point to this commit. And I would like to change or add this tag or something like this. And then it just sends a pack file. And then the server has to index this and figure out that everything is fine. And whether it wants to change these references or not. And give feedback to the client to say, like, yes, okay, I've, you have changed this branch or you've added this tag and so on. So that's it for the protocol overview. You can find a lot of documentation in Git source tree about this. They moved the files recently. So if you have an older Git source checkout, it might still be in documentation slash technical, but in the current version, it's in documentation slash Git protocol dash packed attack system is the main one for this, but there are also others, similarly named files, which you can also read if you want to know more. Okay, another thing we need to talk about, because this is important to understand why we would need to write our own server in the first place, because there are already several server implementations, right? Why do we want our own? Well, when you write server software, especially an open BSD, there are a few design patterns that we use that are not commonly used elsewhere, I would say. I mean, I've never really seen them used widely outside this project, so it's a bit unique in that way and the way it does things, but these things are important to us. So for example, you know that SSH recently had a release where they had a double free and advisory products like yesterday, I think, or two days ago said like, oh, this is not believed to be exploitable. That is because of this. It's not because SSH code is generally great or something. It's because of the design patterns. And so we want these design patterns to be used. And so one of the things you do is that you split your program into several processes that have different tasks. And for each task, you decide what kind of system calls does this task need? And how can I make sure that a process that has network access isn't also able to start new programs or open files and so on. There's unveil which restricts the view of the file system and allows you to completely hide like your dot SSH directory, for example. And other things, basically, it says the program, for example, the God client says, I need the repository, I need the work tree, I need slash temp, that's all I need to see. And I don't need to see anything else. When you start new programs, you always fork an exec, which means that when you do the exec, the program will be restarted from scratch and OpenBSD's memory randomization will kick in and load all the code segments and text segments and stuff in different locations again, which you do for every request so that when somebody learns information about the outer space from an info league, they cannot use it on the next request. You have messages over pipes to communicate between these programs. And of course, you will have to have access to files and networks somehow, right, especially in isolated contexts. And there what you do is you pass file descriptors over these pipes so that one process opens resources and the other less privileged one is using them. So these are the these are the patterns we use. Okay, and so basically, this is what this is. It's a Git server that runs as this kind of multi process program. It only supports SSH. Git user account I mapped to regular shell accounts because I didn't want to reimplement user management. You can have a special purpose login shell for these users to restrict them, if you want. And access permissions are said per repository. I don't want to go very complicated and make it like per branch or something. It's just like, no, if you have access to the repo, you have access, which is good enough, for example, for OpenBSD's model where you get an account and you can commit anywhere. And when you configure this thing, this is basically what you need to do. You create your repositories, make sure they're owned by the right user that you run the demon as. And you have at least one repository in your configuration file, which has a path, but the repository is and access permissions for either, in this case, the example would be a group of developers, which you have in ETC groups and an anonymous user, which we can only read. Now, my initial implementation of this looked something like this. It was functional and I could write a test suite for it, which was the main part. This could actually be used to fetch and push changes. But the design wasn't very good in terms of this multiprocess aspect because the parent started, then it started a reader process and a writer process and that was it. And then all these processes were always used for every connection. It did allow us to at least get this up and running, though. And I don't know, I asked for a bit of review and got shocked responses to say like, no, you're doing this all wrong. Fork and X needs to be done per request and so on. So yeah, okay. But at least functionally, it was already quite okay. And the repository code there is reusing a lot of the code that I already had for like God admin and so on. So I mostly had to rewrite a lot of code for the parent process from scratch, which was all of this. This is what it looks now. So the parent basically encompasses or used to encompass all of this functionality and we'll go through each one by one. So right now, in this current implementation, you have the parent when it starts up, must start as root in order to be able to do certain things like open, like start the listener process as root, for example. And it uses pledge as standard IO proc exact, which means basically standard is you always want that it's like printf and stuff like this. Then you have proc and exact, which allows you to fork and execute programs. And you can also send and receive file descriptors. And that's it what it can do. It also currently does an unveil on itself. So with an X permission, so it can re execute itself with different option flags to start other versions of itself, basically that we will start later. I'm not sure if this is really sound because it used to be said that unveil would inherit to child processes. And I'm not sure what happened to this. Currently, it does not. So it does not inherit, so I can do this and not lose access to, for example, the slash temp directory in the processes I'm starting next. But if that ever changes, we would have to adapt this, but it's not a big deal. You start a listen process, which opens the actual Unix socket that this demon accepts connections on. So basically, if you're a local user on the system, you can always access it through the socket, but you would normally run this shell that we have to, which does this for you and speaks the appropriate protocol. It then drops privileges. And the listen process runs as just standard IO synaptic Unix. Unix is needed to operate on the Unix socket. It also does an unveil because the Unix pledge allows you to bind other sockets and bind would create other sockets for you somewhere. And we wanted to prevent that. So by unveiling everything, basically hiding everything with unveil, there's no way to create additional Unix sockets for this process. And this process is also, as an initial kind of dust prevention mechanism, this enforces a connection limit per UID so that not one user can just connect to the socket and spam it and prevent access for everyone else. Now, the shell is one of the most sensitive parts because this is where users log in and you actually confine them to this program. So you want this to be reasonably secure. It starts out with standard IO, receive FDN Unix to be able to connect to the Unix socket. But once it's connected, it drops that capability so it can no longer open new ones or do other things related to that. It only has a file of scripture it can talk on. And that's it. And then it starts demonstrating these packet lines that we saw to messages that are internal to the program and go over the pipe to the parent. The parent will then start an authorization process which only runs once. And what this does is it gives itself access to the password database of the system using the SCAT-PW syscall and also hides all the file system. And I think this is, this shows something very nice about Pledge and Unveil when used in combination because I'm actually reading ETC password and ETC group files, right? But Unveil, as per Unveil, I shouldn't be able to access those. But because I declared that I want to use the password database, the kernel knows that this process is okay. It's okay for this process to access those files. So it bypasses Unveil in that specific case. Which means I don't have to worry about how the security mechanism is implemented. I don't have to go and say, oh, is my libc when I ask for users going to open this file? Well, maybe I should add an exception for that. Or is it going to do this and such and such syscall? I don't have to worry. I just say like, Pledge, I will do that. And Unveil, I will do that. And they take care of it, which is great for a programmer. It's really nice to program against this. So what this process then does, of course, is matches the users that are logged in against the access rules in the config file you saw earlier and reports the result to the parent and just exits because that's all it needs to do. It's just a one-shot thing. Now, the parent starts two processes if authorization has succeeded. And the shell is kind of waiting because it's like, hey, I sent a message, but you haven't responded yet. But yeah, we're busy, we're setting up. So we start two things right now, a session process and a repository read or write process. Currently, the naming of these is horribly bad. It just was the best I could come up with. And it kind of grew organically from the initial setup with those three processes you saw earlier. But for example, the repository write process is not actually writing to the repository, which you'll see later. So I'm not very happy about this. And also, the session process is basically the most powerful component of the system right now. It's the only one that can actually read, write, the repository and create files in there. It can also do the same as slash temp. And for that, it needs all these pledges with like read path, write path, create path. And it also needs file attributes and file locking because when it changes references for clients, it needs to make sure that they get locked so that you don't have file system races where two clients commit at the same time and then you end up with a reference that's been overwritten. It also creates temporary files, which the repository process needs and gives it the file descriptors. It handles installing of the pack files and so on. And it has the git protocol state machine in it. So that's a bit, I would like to continue work there to split this up more, but because I had to have a functional implementation and I had to, like, I wanted to have something functional to clone from, which is there now, which is on the internet. That's fine. But going forward, this needs to be revisited for sure. The repository read and write process is apart from the name for repo write. I'm okay with how that's worked out. Both of them can only read from the repository. And what the reader does is it is responsible for creating a pack file and streaming the result to the God shell over a pipe that is created by the session process and handed to both the shell and the reader. And the writer is responsible for receiving a pack file and indexing it. So the indexing is almost done. So the indexing is done there. Okay. I have one minute left, one minute and a half. I quickly go through some implementation improvements. It's still like to do. So we should verify what the client has uploaded. Currently we trust it, what to do. The config file is parsed every time a process starts, which isn't ideal, which works, but it's bad if you're changing the file while the process is running. Yeah, session I already mentioned. And the state machines have some funny bugs. So these really need to be rewritten. They're basically like switch statements and if and so on. And I'd like to properly separate that out with tables and state transition functions and so on. But it was just a quick way of getting things working. But we already saw like thousands of flash packets flying through this process because an end of file on a socket triggered a flash packet and that was kind of stupid. This has been fixed, but there will still be other bugs like that. We should have some built-in checks so that commits can be verified according to project policies and things like denying merge commits if you don't want them or binary files and so on, preventing a forced push. I'd like to have commit notifications where you, for example, send an email or you can send an arbitrary HTTP request so that if you really want to have a post-commit hook script, you run it somewhere else and we'll give you information and trigger it. Yeah, also it should really keep track of what this space it has when it accepts pack files and not fill the disk and fail. We should be able to remove redundant pack files that have accumulated over time. I'd like to add SHA2 support and enable it by default once that works so that we use the SHA2 because we have zero production deployments right now and unlike it, so we can just use the new format they've already defined. Service at rebasing is another thing. I'm out of time, so I'm not going to go into that, but I think this is it. Sorry for the quick part of you. Thank you very much. I encourage you to ask a question about the hallway. Okay, good.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.36, "text": " Hello. Can you see my slides? Yeah. I have only wide background, so the light at the", "tokens": [2425, 13, 1664, 291, 536, 452, 9788, 30, 865, 13, 286, 362, 787, 4874, 3678, 11, 370, 264, 1442, 412, 264], "temperature": 0.0, "avg_logprob": -0.22024262578863846, "compression_ratio": 1.3626943005181347, "no_speech_prob": 0.1699395328760147}, {"id": 1, "seek": 0, "start": 12.36, "end": 23.52, "text": " top shouldn't be a big issue. And yeah, we're good to go. Okay. Hi, I'm Stefan. I work on", "tokens": [1192, 4659, 380, 312, 257, 955, 2734, 13, 400, 1338, 11, 321, 434, 665, 281, 352, 13, 1033, 13, 2421, 11, 286, 478, 32158, 13, 286, 589, 322], "temperature": 0.0, "avg_logprob": -0.22024262578863846, "compression_ratio": 1.3626943005181347, "no_speech_prob": 0.1699395328760147}, {"id": 2, "seek": 0, "start": 23.52, "end": 28.04, "text": " generally open source stuff as a freelancer, and I'm here to present something I've been", "tokens": [5101, 1269, 4009, 1507, 382, 257, 27931, 28347, 11, 293, 286, 478, 510, 281, 1974, 746, 286, 600, 668], "temperature": 0.0, "avg_logprob": -0.22024262578863846, "compression_ratio": 1.3626943005181347, "no_speech_prob": 0.1699395328760147}, {"id": 3, "seek": 2804, "start": 28.04, "end": 35.96, "text": " working on as a site project in the last few months. This is part of the Game of Trees project,", "tokens": [1364, 322, 382, 257, 3621, 1716, 294, 264, 1036, 1326, 2493, 13, 639, 307, 644, 295, 264, 7522, 295, 314, 4856, 1716, 11], "temperature": 0.0, "avg_logprob": -0.13802906774705456, "compression_ratio": 1.4980237154150198, "no_speech_prob": 0.00021545850904658437}, {"id": 4, "seek": 2804, "start": 35.96, "end": 43.36, "text": " which I started in November 2017 at an OpenBSD hackathon in Berlin. It's compatible with", "tokens": [597, 286, 1409, 294, 7674, 6591, 412, 364, 7238, 8176, 35, 10339, 18660, 294, 13848, 13, 467, 311, 18218, 365], "temperature": 0.0, "avg_logprob": -0.13802906774705456, "compression_ratio": 1.4980237154150198, "no_speech_prob": 0.00021545850904658437}, {"id": 5, "seek": 2804, "start": 43.36, "end": 49.56, "text": " Git repositories and the Git network protocol, but apart from that, it's not trying to replicate", "tokens": [16939, 22283, 2083, 293, 264, 16939, 3209, 10336, 11, 457, 4936, 490, 300, 11, 309, 311, 406, 1382, 281, 25356], "temperature": 0.0, "avg_logprob": -0.13802906774705456, "compression_ratio": 1.4980237154150198, "no_speech_prob": 0.00021545850904658437}, {"id": 6, "seek": 2804, "start": 49.56, "end": 55.519999999999996, "text": " Git specifically, but it's just the idea to reuse these formats because they're very widely used.", "tokens": [16939, 4682, 11, 457, 309, 311, 445, 264, 1558, 281, 26225, 613, 25879, 570, 436, 434, 588, 13371, 1143, 13], "temperature": 0.0, "avg_logprob": -0.13802906774705456, "compression_ratio": 1.4980237154150198, "no_speech_prob": 0.00021545850904658437}, {"id": 7, "seek": 5552, "start": 55.52, "end": 63.440000000000005, "text": " And they're fairly okay and well designed, so we can just keep using them and not make up our", "tokens": [400, 436, 434, 6457, 1392, 293, 731, 4761, 11, 370, 321, 393, 445, 1066, 1228, 552, 293, 406, 652, 493, 527], "temperature": 0.0, "avg_logprob": -0.12494496663411458, "compression_ratio": 1.3786407766990292, "no_speech_prob": 7.961274241097271e-05}, {"id": 8, "seek": 5552, "start": 63.440000000000005, "end": 72.04, "text": " own. And yeah, because it's written on OpenBSD, it uses a lot of OpenBSD specific APIs. There's", "tokens": [1065, 13, 400, 1338, 11, 570, 309, 311, 3720, 322, 7238, 8176, 35, 11, 309, 4960, 257, 688, 295, 7238, 8176, 35, 2685, 21445, 13, 821, 311], "temperature": 0.0, "avg_logprob": -0.12494496663411458, "compression_ratio": 1.3786407766990292, "no_speech_prob": 7.961274241097271e-05}, {"id": 9, "seek": 5552, "start": 72.04, "end": 78.52000000000001, "text": " actually a portable version that's maintained by Thomas Adam, who also does the T-Max terminal", "tokens": [767, 257, 21800, 3037, 300, 311, 17578, 538, 8500, 7938, 11, 567, 611, 775, 264, 314, 12, 36025, 14709], "temperature": 0.0, "avg_logprob": -0.12494496663411458, "compression_ratio": 1.3786407766990292, "no_speech_prob": 7.961274241097271e-05}, {"id": 10, "seek": 7852, "start": 78.52, "end": 86.64, "text": " multiplexer portable version, and you can install this on various systems. And I think Thomas always", "tokens": [3311, 2021, 260, 21800, 3037, 11, 293, 291, 393, 3625, 341, 322, 3683, 3652, 13, 400, 286, 519, 8500, 1009], "temperature": 0.0, "avg_logprob": -0.13747858232067478, "compression_ratio": 1.5220883534136547, "no_speech_prob": 3.0210474506020546e-05}, {"id": 11, "seek": 7852, "start": 86.64, "end": 91.39999999999999, "text": " likes to also explore more options for other systems. If you're interested, if yours is not", "tokens": [5902, 281, 611, 6839, 544, 3956, 337, 661, 3652, 13, 759, 291, 434, 3102, 11, 498, 6342, 307, 406], "temperature": 0.0, "avg_logprob": -0.13747858232067478, "compression_ratio": 1.5220883534136547, "no_speech_prob": 3.0210474506020546e-05}, {"id": 12, "seek": 7852, "start": 91.39999999999999, "end": 97.24, "text": " listed, you can talk to him. And yeah, it's ISC licensed because it aims to be basically as", "tokens": [10052, 11, 291, 393, 751, 281, 796, 13, 400, 1338, 11, 309, 311, 6205, 34, 25225, 570, 309, 24683, 281, 312, 1936, 382], "temperature": 0.0, "avg_logprob": -0.13747858232067478, "compression_ratio": 1.5220883534136547, "no_speech_prob": 3.0210474506020546e-05}, {"id": 13, "seek": 7852, "start": 97.24, "end": 103.84, "text": " pleasing to OpenBSD developers as possible. That's the whole idea. Now, what we currently have", "tokens": [32798, 281, 7238, 8176, 35, 8849, 382, 1944, 13, 663, 311, 264, 1379, 1558, 13, 823, 11, 437, 321, 4362, 362], "temperature": 0.0, "avg_logprob": -0.13747858232067478, "compression_ratio": 1.5220883534136547, "no_speech_prob": 3.0210474506020546e-05}, {"id": 14, "seek": 10384, "start": 103.84, "end": 111.28, "text": " is what's working really well is the client side. And this is basically sort of feature complete at", "tokens": [307, 437, 311, 1364, 534, 731, 307, 264, 6423, 1252, 13, 400, 341, 307, 1936, 1333, 295, 4111, 3566, 412], "temperature": 0.0, "avg_logprob": -0.1179140659800747, "compression_ratio": 1.7589928057553956, "no_speech_prob": 7.832223491277546e-05}, {"id": 15, "seek": 10384, "start": 111.28, "end": 116.60000000000001, "text": " this point. You might want to have some more convenience things, but all the basics are there.", "tokens": [341, 935, 13, 509, 1062, 528, 281, 362, 512, 544, 19283, 721, 11, 457, 439, 264, 14688, 366, 456, 13], "temperature": 0.0, "avg_logprob": -0.1179140659800747, "compression_ratio": 1.7589928057553956, "no_speech_prob": 7.832223491277546e-05}, {"id": 16, "seek": 10384, "start": 116.60000000000001, "end": 123.4, "text": " Everything is working. You have several frontends which I'll present in the following slides. You", "tokens": [5471, 307, 1364, 13, 509, 362, 2940, 1868, 2581, 597, 286, 603, 1974, 294, 264, 3480, 9788, 13, 509], "temperature": 0.0, "avg_logprob": -0.1179140659800747, "compression_ratio": 1.7589928057553956, "no_speech_prob": 7.832223491277546e-05}, {"id": 17, "seek": 10384, "start": 123.4, "end": 128.04, "text": " have a lot of code that's shared by these frontends, which I've labeled library here because it's in", "tokens": [362, 257, 688, 295, 3089, 300, 311, 5507, 538, 613, 1868, 2581, 11, 597, 286, 600, 21335, 6405, 510, 570, 309, 311, 294], "temperature": 0.0, "avg_logprob": -0.1179140659800747, "compression_ratio": 1.7589928057553956, "no_speech_prob": 7.832223491277546e-05}, {"id": 18, "seek": 10384, "start": 128.04, "end": 133.32, "text": " the lib directory of the source tree. One thing that this program does, which is very specific,", "tokens": [264, 22854, 21120, 295, 264, 4009, 4230, 13, 1485, 551, 300, 341, 1461, 775, 11, 597, 307, 588, 2685, 11], "temperature": 0.0, "avg_logprob": -0.1179140659800747, "compression_ratio": 1.7589928057553956, "no_speech_prob": 7.832223491277546e-05}, {"id": 19, "seek": 13332, "start": 133.32, "end": 140.35999999999999, "text": " is that it will not touch repository data outside of programs that are separate and are called", "tokens": [307, 300, 309, 486, 406, 2557, 25841, 1412, 2380, 295, 4268, 300, 366, 4994, 293, 366, 1219], "temperature": 0.0, "avg_logprob": -0.13252752282646266, "compression_ratio": 1.662280701754386, "no_speech_prob": 2.4295979528687894e-05}, {"id": 20, "seek": 13332, "start": 140.35999999999999, "end": 147.79999999999998, "text": " lib exec helpers. From the programs point of view, if you use the library, you don't see this. You", "tokens": [22854, 4454, 854, 433, 13, 3358, 264, 4268, 935, 295, 1910, 11, 498, 291, 764, 264, 6405, 11, 291, 500, 380, 536, 341, 13, 509], "temperature": 0.0, "avg_logprob": -0.13252752282646266, "compression_ratio": 1.662280701754386, "no_speech_prob": 2.4295979528687894e-05}, {"id": 21, "seek": 13332, "start": 147.79999999999998, "end": 152.51999999999998, "text": " just like say open a repository and fetch me some objects and so on. But internally, it will", "tokens": [445, 411, 584, 1269, 257, 25841, 293, 23673, 385, 512, 6565, 293, 370, 322, 13, 583, 19501, 11, 309, 486], "temperature": 0.0, "avg_logprob": -0.13252752282646266, "compression_ratio": 1.662280701754386, "no_speech_prob": 2.4295979528687894e-05}, {"id": 22, "seek": 13332, "start": 152.51999999999998, "end": 158.48, "text": " actually start other programs that restricts themselves a lot using pledge and unveil and so", "tokens": [767, 722, 661, 4268, 300, 7694, 82, 2969, 257, 688, 1228, 26819, 293, 31009, 388, 293, 370], "temperature": 0.0, "avg_logprob": -0.13252752282646266, "compression_ratio": 1.662280701754386, "no_speech_prob": 2.4295979528687894e-05}, {"id": 23, "seek": 15848, "start": 158.48, "end": 165.92, "text": " on. And those will actually pass the repository data. This is the current list of commands. And", "tokens": [322, 13, 400, 729, 486, 767, 1320, 264, 25841, 1412, 13, 639, 307, 264, 2190, 1329, 295, 16901, 13, 400], "temperature": 0.0, "avg_logprob": -0.12494730949401855, "compression_ratio": 1.6595744680851063, "no_speech_prob": 2.4677468900335953e-05}, {"id": 24, "seek": 15848, "start": 165.92, "end": 171.32, "text": " I'm quite happy with this set actually. I've been working with this set for the last five years or", "tokens": [286, 478, 1596, 2055, 365, 341, 992, 767, 13, 286, 600, 668, 1364, 365, 341, 992, 337, 264, 1036, 1732, 924, 420], "temperature": 0.0, "avg_logprob": -0.12494730949401855, "compression_ratio": 1.6595744680851063, "no_speech_prob": 2.4677468900335953e-05}, {"id": 25, "seek": 15848, "start": 171.32, "end": 178.48, "text": " so. They've slowly been added over time. But I feel very productive with these. And I don't miss", "tokens": [370, 13, 814, 600, 5692, 668, 3869, 670, 565, 13, 583, 286, 841, 588, 13304, 365, 613, 13, 400, 286, 500, 380, 1713], "temperature": 0.0, "avg_logprob": -0.12494730949401855, "compression_ratio": 1.6595744680851063, "no_speech_prob": 2.4677468900335953e-05}, {"id": 26, "seek": 15848, "start": 178.48, "end": 182.92, "text": " anything. I know that some people would like some additional things. But at this point,", "tokens": [1340, 13, 286, 458, 300, 512, 561, 576, 411, 512, 4497, 721, 13, 583, 412, 341, 935, 11], "temperature": 0.0, "avg_logprob": -0.12494730949401855, "compression_ratio": 1.6595744680851063, "no_speech_prob": 2.4677468900335953e-05}, {"id": 27, "seek": 15848, "start": 182.92, "end": 187.48, "text": " we're mostly like fine tuning. And you can read the manual page on this URL if you like.", "tokens": [321, 434, 5240, 411, 2489, 15164, 13, 400, 291, 393, 1401, 264, 9688, 3028, 322, 341, 12905, 498, 291, 411, 13], "temperature": 0.0, "avg_logprob": -0.12494730949401855, "compression_ratio": 1.6595744680851063, "no_speech_prob": 2.4677468900335953e-05}, {"id": 28, "seek": 18748, "start": 187.48, "end": 192.64, "text": " You can actually read it from start to finish in order to get a good idea of how the system works", "tokens": [509, 393, 767, 1401, 309, 490, 722, 281, 2413, 294, 1668, 281, 483, 257, 665, 1558, 295, 577, 264, 1185, 1985], "temperature": 0.0, "avg_logprob": -0.12059496145332808, "compression_ratio": 1.7, "no_speech_prob": 4.3986598029732704e-05}, {"id": 29, "seek": 18748, "start": 192.64, "end": 199.12, "text": " and how it's supposed to be used. There's also a got admin utility which sort of mirrors CVS", "tokens": [293, 577, 309, 311, 3442, 281, 312, 1143, 13, 821, 311, 611, 257, 658, 24236, 14877, 597, 1333, 295, 24238, 22995, 50], "temperature": 0.0, "avg_logprob": -0.12059496145332808, "compression_ratio": 1.7, "no_speech_prob": 4.3986598029732704e-05}, {"id": 30, "seek": 18748, "start": 199.12, "end": 204.76, "text": " admin or SVN admin in the sense that if you're doing something that only requires like specific", "tokens": [24236, 420, 31910, 45, 24236, 294, 264, 2020, 300, 498, 291, 434, 884, 746, 300, 787, 7029, 411, 2685], "temperature": 0.0, "avg_logprob": -0.12059496145332808, "compression_ratio": 1.7, "no_speech_prob": 4.3986598029732704e-05}, {"id": 31, "seek": 18748, "start": 204.76, "end": 210.51999999999998, "text": " things where you do something with a repository specifically, you would use that command. This", "tokens": [721, 689, 291, 360, 746, 365, 257, 25841, 4682, 11, 291, 576, 764, 300, 5622, 13, 639], "temperature": 0.0, "avg_logprob": -0.12059496145332808, "compression_ratio": 1.7, "no_speech_prob": 4.3986598029732704e-05}, {"id": 32, "seek": 18748, "start": 210.51999999999998, "end": 215.04, "text": " isn't complete. There are some things that I would still like to add here, which we'll go into", "tokens": [1943, 380, 3566, 13, 821, 366, 512, 721, 300, 286, 576, 920, 411, 281, 909, 510, 11, 597, 321, 603, 352, 666], "temperature": 0.0, "avg_logprob": -0.12059496145332808, "compression_ratio": 1.7, "no_speech_prob": 4.3986598029732704e-05}, {"id": 33, "seek": 21504, "start": 215.04, "end": 221.23999999999998, "text": " later. But it's already prepared a lot of code for the server that I'll talk about. Because", "tokens": [1780, 13, 583, 309, 311, 1217, 4927, 257, 688, 295, 3089, 337, 264, 7154, 300, 286, 603, 751, 466, 13, 1436], "temperature": 0.0, "avg_logprob": -0.12309815256219162, "compression_ratio": 1.5875, "no_speech_prob": 1.892220097943209e-05}, {"id": 34, "seek": 21504, "start": 221.23999999999998, "end": 227.23999999999998, "text": " for example, dealing with pack files is necessary for the server as well as this tool. We have a", "tokens": [337, 1365, 11, 6260, 365, 2844, 7098, 307, 4818, 337, 264, 7154, 382, 731, 382, 341, 2290, 13, 492, 362, 257], "temperature": 0.0, "avg_logprob": -0.12309815256219162, "compression_ratio": 1.5875, "no_speech_prob": 1.892220097943209e-05}, {"id": 35, "seek": 21504, "start": 227.23999999999998, "end": 235.23999999999998, "text": " curses command line, a base terminal browser thing. You can read commits with that and look at", "tokens": [1262, 6196, 5622, 1622, 11, 257, 3096, 14709, 11185, 551, 13, 509, 393, 1401, 48311, 365, 300, 293, 574, 412], "temperature": 0.0, "avg_logprob": -0.12309815256219162, "compression_ratio": 1.5875, "no_speech_prob": 1.892220097943209e-05}, {"id": 36, "seek": 21504, "start": 235.23999999999998, "end": 241.88, "text": " diffs and blame files and so on. It's working really well. And most recently, there's a developer", "tokens": [7593, 82, 293, 10127, 7098, 293, 370, 322, 13, 467, 311, 1364, 534, 731, 13, 400, 881, 3938, 11, 456, 311, 257, 10754], "temperature": 0.0, "avg_logprob": -0.12309815256219162, "compression_ratio": 1.5875, "no_speech_prob": 1.892220097943209e-05}, {"id": 37, "seek": 24188, "start": 241.88, "end": 246.4, "text": " Mark Jamsak who added a lot of convenience to this like vertical scrolling, diff stat display and", "tokens": [3934, 508, 4070, 514, 567, 3869, 257, 688, 295, 19283, 281, 341, 411, 9429, 29053, 11, 7593, 2219, 4674, 293], "temperature": 0.0, "avg_logprob": -0.1418792461526805, "compression_ratio": 1.7490774907749078, "no_speech_prob": 3.269530498073436e-05}, {"id": 38, "seek": 24188, "start": 246.4, "end": 251.96, "text": " all sorts of nice things. It doesn't work quite well on repositories that have a lot of merge", "tokens": [439, 7527, 295, 1481, 721, 13, 467, 1177, 380, 589, 1596, 731, 322, 22283, 2083, 300, 362, 257, 688, 295, 22183], "temperature": 0.0, "avg_logprob": -0.1418792461526805, "compression_ratio": 1.7490774907749078, "no_speech_prob": 3.269530498073436e-05}, {"id": 39, "seek": 24188, "start": 251.96, "end": 258.4, "text": " commits. I found that some repositories are hard to browse if they use a lot of merges. But for", "tokens": [48311, 13, 286, 1352, 300, 512, 22283, 2083, 366, 1152, 281, 31442, 498, 436, 764, 257, 688, 295, 3551, 2880, 13, 583, 337], "temperature": 0.0, "avg_logprob": -0.1418792461526805, "compression_ratio": 1.7490774907749078, "no_speech_prob": 3.269530498073436e-05}, {"id": 40, "seek": 24188, "start": 258.4, "end": 262.88, "text": " simple repositories, it's really good. And if something is missing and you feel like you would", "tokens": [2199, 22283, 2083, 11, 309, 311, 534, 665, 13, 400, 498, 746, 307, 5361, 293, 291, 841, 411, 291, 576], "temperature": 0.0, "avg_logprob": -0.1418792461526805, "compression_ratio": 1.7490774907749078, "no_speech_prob": 3.269530498073436e-05}, {"id": 41, "seek": 24188, "start": 262.88, "end": 267.6, "text": " like to use this on a repository with lots of merges, you can please make suggestions as to", "tokens": [411, 281, 764, 341, 322, 257, 25841, 365, 3195, 295, 3551, 2880, 11, 291, 393, 1767, 652, 13396, 382, 281], "temperature": 0.0, "avg_logprob": -0.1418792461526805, "compression_ratio": 1.7490774907749078, "no_speech_prob": 3.269530498073436e-05}, {"id": 42, "seek": 26760, "start": 267.6, "end": 273.28000000000003, "text": " what we could improve there. You also have a web front end, which is sort of like CVS web or", "tokens": [437, 321, 727, 3470, 456, 13, 509, 611, 362, 257, 3670, 1868, 917, 11, 597, 307, 1333, 295, 411, 22995, 50, 3670, 420], "temperature": 0.0, "avg_logprob": -0.13786052255069509, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.1327482904307544e-05}, {"id": 43, "seek": 26760, "start": 273.28000000000003, "end": 281.44, "text": " VUVC. And it's also using the God code internally to show you files on a web browser and commits", "tokens": [691, 52, 53, 34, 13, 400, 309, 311, 611, 1228, 264, 1265, 3089, 19501, 281, 855, 291, 7098, 322, 257, 3670, 11185, 293, 48311], "temperature": 0.0, "avg_logprob": -0.13786052255069509, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.1327482904307544e-05}, {"id": 44, "seek": 26760, "start": 281.44, "end": 287.16, "text": " and logs and so on. That's written by Tracy Emery. And most recently, Omar Polo has been doing a", "tokens": [293, 20820, 293, 370, 322, 13, 663, 311, 3720, 538, 33724, 18477, 88, 13, 400, 881, 3938, 11, 33784, 3635, 78, 575, 668, 884, 257], "temperature": 0.0, "avg_logprob": -0.13786052255069509, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.1327482904307544e-05}, {"id": 45, "seek": 26760, "start": 287.16, "end": 292.40000000000003, "text": " lot of refactoring there and added a templating mechanism, for example, to deal with generating", "tokens": [688, 295, 1895, 578, 3662, 456, 293, 3869, 257, 9100, 990, 7513, 11, 337, 1365, 11, 281, 2028, 365, 17746], "temperature": 0.0, "avg_logprob": -0.13786052255069509, "compression_ratio": 1.5158730158730158, "no_speech_prob": 4.1327482904307544e-05}, {"id": 46, "seek": 29240, "start": 292.4, "end": 298.47999999999996, "text": " the HTML, not from printf, but with something more generic. And it's quite nice. It also has", "tokens": [264, 17995, 11, 406, 490, 4482, 69, 11, 457, 365, 746, 544, 19577, 13, 400, 309, 311, 1596, 1481, 13, 467, 611, 575], "temperature": 0.0, "avg_logprob": -0.1552930329975329, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.3913844415801577e-05}, {"id": 47, "seek": 29240, "start": 298.47999999999996, "end": 303.44, "text": " RSS feeds for tags, which is probably rarely outdated, but I think it's kind of nice. You can", "tokens": [497, 21929, 23712, 337, 18632, 11, 597, 307, 1391, 13752, 36313, 11, 457, 286, 519, 309, 311, 733, 295, 1481, 13, 509, 393], "temperature": 0.0, "avg_logprob": -0.1552930329975329, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.3913844415801577e-05}, {"id": 48, "seek": 29240, "start": 303.44, "end": 315.56, "text": " be notified of new releases that way. Okay, so about the server. So the goal of one of the major", "tokens": [312, 18013, 295, 777, 16952, 300, 636, 13, 1033, 11, 370, 466, 264, 7154, 13, 407, 264, 3387, 295, 472, 295, 264, 2563], "temperature": 0.0, "avg_logprob": -0.1552930329975329, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.3913844415801577e-05}, {"id": 49, "seek": 29240, "start": 315.56, "end": 320.32, "text": " milestones for any version control system that's ever been developed is that eventually you want", "tokens": [42038, 337, 604, 3037, 1969, 1185, 300, 311, 1562, 668, 4743, 307, 300, 4728, 291, 528], "temperature": 0.0, "avg_logprob": -0.1552930329975329, "compression_ratio": 1.532258064516129, "no_speech_prob": 2.3913844415801577e-05}, {"id": 50, "seek": 32032, "start": 320.32, "end": 326.32, "text": " to be self hosting. And so far, we've been using a Gitulite setup for this project. And that's", "tokens": [281, 312, 2698, 16058, 13, 400, 370, 1400, 11, 321, 600, 668, 1228, 257, 16939, 425, 642, 8657, 337, 341, 1716, 13, 400, 300, 311], "temperature": 0.0, "avg_logprob": -0.13090147290910994, "compression_ratio": 1.6382252559726962, "no_speech_prob": 3.6471159546636045e-05}, {"id": 51, "seek": 32032, "start": 326.32, "end": 331.96, "text": " working well, but I would really like to be able to run this on an OpenBSD server using my own", "tokens": [1364, 731, 11, 457, 286, 576, 534, 411, 281, 312, 1075, 281, 1190, 341, 322, 364, 7238, 8176, 35, 7154, 1228, 452, 1065], "temperature": 0.0, "avg_logprob": -0.13090147290910994, "compression_ratio": 1.6382252559726962, "no_speech_prob": 3.6471159546636045e-05}, {"id": 52, "seek": 32032, "start": 331.96, "end": 337.4, "text": " code. So after putting this off for a long time, because I always thought it would be a lot of", "tokens": [3089, 13, 407, 934, 3372, 341, 766, 337, 257, 938, 565, 11, 570, 286, 1009, 1194, 309, 576, 312, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.13090147290910994, "compression_ratio": 1.6382252559726962, "no_speech_prob": 3.6471159546636045e-05}, {"id": 53, "seek": 32032, "start": 337.4, "end": 342.2, "text": " work, I finally ran out of things to do on the client side and said, okay, I'm going to look into", "tokens": [589, 11, 286, 2721, 5872, 484, 295, 721, 281, 360, 322, 264, 6423, 1252, 293, 848, 11, 1392, 11, 286, 478, 516, 281, 574, 666], "temperature": 0.0, "avg_logprob": -0.13090147290910994, "compression_ratio": 1.6382252559726962, "no_speech_prob": 3.6471159546636045e-05}, {"id": 54, "seek": 32032, "start": 342.2, "end": 348.76, "text": " several things now and started talking to people at Hackathons in September and summer last year,", "tokens": [2940, 721, 586, 293, 1409, 1417, 281, 561, 412, 35170, 998, 892, 294, 7216, 293, 4266, 1036, 1064, 11], "temperature": 0.0, "avg_logprob": -0.13090147290910994, "compression_ratio": 1.6382252559726962, "no_speech_prob": 3.6471159546636045e-05}, {"id": 55, "seek": 34876, "start": 348.76, "end": 355.71999999999997, "text": " basically, and started working in September. By now, you can install it on OpenBSD current. It's", "tokens": [1936, 11, 293, 1409, 1364, 294, 7216, 13, 3146, 586, 11, 291, 393, 3625, 309, 322, 7238, 8176, 35, 2190, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.13121360662032147, "compression_ratio": 1.5058823529411764, "no_speech_prob": 1.7500979083706625e-05}, {"id": 56, "seek": 34876, "start": 355.71999999999997, "end": 362.71999999999997, "text": " not yet in the portable version. Thomas and Omar were going to look at that, but it might take", "tokens": [406, 1939, 294, 264, 21800, 3037, 13, 8500, 293, 33784, 645, 516, 281, 574, 412, 300, 11, 457, 309, 1062, 747], "temperature": 0.0, "avg_logprob": -0.13121360662032147, "compression_ratio": 1.5058823529411764, "no_speech_prob": 1.7500979083706625e-05}, {"id": 57, "seek": 34876, "start": 362.71999999999997, "end": 372.2, "text": " some time still, but eventually it should arrive there. Now, the main use cases I want to support", "tokens": [512, 565, 920, 11, 457, 4728, 309, 820, 8881, 456, 13, 823, 11, 264, 2135, 764, 3331, 286, 528, 281, 1406], "temperature": 0.0, "avg_logprob": -0.13121360662032147, "compression_ratio": 1.5058823529411764, "no_speech_prob": 1.7500979083706625e-05}, {"id": 58, "seek": 34876, "start": 372.2, "end": 377.44, "text": " with this are exactly two. One is, of course, I want to be self hosting for my own open source", "tokens": [365, 341, 366, 2293, 732, 13, 1485, 307, 11, 295, 1164, 11, 286, 528, 281, 312, 2698, 16058, 337, 452, 1065, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.13121360662032147, "compression_ratio": 1.5058823529411764, "no_speech_prob": 1.7500979083706625e-05}, {"id": 59, "seek": 37744, "start": 377.44, "end": 383.32, "text": " projects and maybe also private repositories. And the other is I want to enable what OpenBSD is", "tokens": [4455, 293, 1310, 611, 4551, 22283, 2083, 13, 400, 264, 661, 307, 286, 528, 281, 9528, 437, 7238, 8176, 35, 307], "temperature": 0.0, "avg_logprob": -0.11444636608691926, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.218858182663098e-05}, {"id": 60, "seek": 37744, "start": 383.32, "end": 389.44, "text": " using now with CVS, which is anonymous distribution of source code over SSH, where you know that the", "tokens": [1228, 586, 365, 22995, 50, 11, 597, 307, 24932, 7316, 295, 4009, 3089, 670, 12238, 39, 11, 689, 291, 458, 300, 264], "temperature": 0.0, "avg_logprob": -0.11444636608691926, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.218858182663098e-05}, {"id": 61, "seek": 37744, "start": 389.44, "end": 395.32, "text": " server you talk to is genuine and should have the right source code for you, but the client doesn't", "tokens": [7154, 291, 751, 281, 307, 16699, 293, 820, 362, 264, 558, 4009, 3089, 337, 291, 11, 457, 264, 6423, 1177, 380], "temperature": 0.0, "avg_logprob": -0.11444636608691926, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.218858182663098e-05}, {"id": 62, "seek": 37744, "start": 395.32, "end": 402.28, "text": " need to authenticate. And every time I want to get source code from a platform like GitHub or", "tokens": [643, 281, 9214, 8700, 13, 400, 633, 565, 286, 528, 281, 483, 4009, 3089, 490, 257, 3663, 411, 23331, 420], "temperature": 0.0, "avg_logprob": -0.11444636608691926, "compression_ratio": 1.5853658536585367, "no_speech_prob": 3.218858182663098e-05}, {"id": 63, "seek": 40228, "start": 402.28, "end": 409.64, "text": " GitLab or other forages that exist with God, I have to upload an SSH key because they will not", "tokens": [16939, 37880, 420, 661, 337, 1660, 300, 2514, 365, 1265, 11, 286, 362, 281, 6580, 364, 12238, 39, 2141, 570, 436, 486, 406], "temperature": 0.0, "avg_logprob": -0.14289533615112304, "compression_ratio": 1.5393700787401574, "no_speech_prob": 3.590827691368759e-05}, {"id": 64, "seek": 40228, "start": 409.64, "end": 416.0, "text": " accept my SSH connection. And because God only uses SSH, it doesn't implement HTTP support. This", "tokens": [3241, 452, 12238, 39, 4984, 13, 400, 570, 1265, 787, 4960, 12238, 39, 11, 309, 1177, 380, 4445, 33283, 1406, 13, 639], "temperature": 0.0, "avg_logprob": -0.14289533615112304, "compression_ratio": 1.5393700787401574, "no_speech_prob": 3.590827691368759e-05}, {"id": 65, "seek": 40228, "start": 416.0, "end": 422.96, "text": " is really annoying. And it's not really a technical problem to do this. It's just basically that in", "tokens": [307, 534, 11304, 13, 400, 309, 311, 406, 534, 257, 6191, 1154, 281, 360, 341, 13, 467, 311, 445, 1936, 300, 294], "temperature": 0.0, "avg_logprob": -0.14289533615112304, "compression_ratio": 1.5393700787401574, "no_speech_prob": 3.590827691368759e-05}, {"id": 66, "seek": 40228, "start": 422.96, "end": 429.08, "text": " their software, they didn't foresee this use case. But I think it's very nice. And you can actually", "tokens": [641, 4722, 11, 436, 994, 380, 38736, 341, 764, 1389, 13, 583, 286, 519, 309, 311, 588, 1481, 13, 400, 291, 393, 767], "temperature": 0.0, "avg_logprob": -0.14289533615112304, "compression_ratio": 1.5393700787401574, "no_speech_prob": 3.590827691368759e-05}, {"id": 67, "seek": 42908, "start": 429.08, "end": 435.68, "text": " go and try this now if you like. This is the code that I'm talking about running on a server and", "tokens": [352, 293, 853, 341, 586, 498, 291, 411, 13, 639, 307, 264, 3089, 300, 286, 478, 1417, 466, 2614, 322, 257, 7154, 293], "temperature": 0.0, "avg_logprob": -0.17800677401348225, "compression_ratio": 1.5436507936507937, "no_speech_prob": 7.717596599832177e-05}, {"id": 68, "seek": 42908, "start": 435.68, "end": 443.2, "text": " it's serving God code and God portable. You have the Husky fingerprints, which you can not take a", "tokens": [309, 311, 8148, 1265, 3089, 293, 1265, 21800, 13, 509, 362, 264, 21282, 4133, 42170, 11, 597, 291, 393, 406, 747, 257], "temperature": 0.0, "avg_logprob": -0.17800677401348225, "compression_ratio": 1.5436507936507937, "no_speech_prob": 7.717596599832177e-05}, {"id": 69, "seek": 42908, "start": 443.2, "end": 449.68, "text": " photo of or whatever. It's also on the website. And yeah, if all of you all at the same time would", "tokens": [5052, 295, 420, 2035, 13, 467, 311, 611, 322, 264, 3144, 13, 400, 1338, 11, 498, 439, 295, 291, 439, 412, 264, 912, 565, 576], "temperature": 0.0, "avg_logprob": -0.17800677401348225, "compression_ratio": 1.5436507936507937, "no_speech_prob": 7.717596599832177e-05}, {"id": 70, "seek": 42908, "start": 449.68, "end": 457.28, "text": " now go and trigger this, you'd probably trap my SSH rate limiter, especially if HostM is behind", "tokens": [586, 352, 293, 7875, 341, 11, 291, 1116, 1391, 11487, 452, 12238, 39, 3314, 2364, 1681, 11, 2318, 498, 22047, 44, 307, 2261], "temperature": 0.0, "avg_logprob": -0.17800677401348225, "compression_ratio": 1.5436507936507937, "no_speech_prob": 7.717596599832177e-05}, {"id": 71, "seek": 45728, "start": 457.28, "end": 463.64, "text": " that, which I hope not. But yeah, be gentle. Maybe if you want to clone from this repo,", "tokens": [300, 11, 597, 286, 1454, 406, 13, 583, 1338, 11, 312, 6424, 13, 2704, 498, 291, 528, 281, 26506, 490, 341, 49040, 11], "temperature": 0.0, "avg_logprob": -0.1283093716235871, "compression_ratio": 1.506276150627615, "no_speech_prob": 7.140439265640453e-05}, {"id": 72, "seek": 45728, "start": 463.64, "end": 468.52, "text": " pick a slide number in your head from between 10 and 37. And when the slide comes up,", "tokens": [1888, 257, 4137, 1230, 294, 428, 1378, 490, 1296, 1266, 293, 13435, 13, 400, 562, 264, 4137, 1487, 493, 11], "temperature": 0.0, "avg_logprob": -0.1283093716235871, "compression_ratio": 1.506276150627615, "no_speech_prob": 7.140439265640453e-05}, {"id": 73, "seek": 45728, "start": 468.52, "end": 477.71999999999997, "text": " you start your clone, then you'll be fine. So yeah, I'd like to explain a bit what the", "tokens": [291, 722, 428, 26506, 11, 550, 291, 603, 312, 2489, 13, 407, 1338, 11, 286, 1116, 411, 281, 2903, 257, 857, 437, 264], "temperature": 0.0, "avg_logprob": -0.1283093716235871, "compression_ratio": 1.506276150627615, "no_speech_prob": 7.140439265640453e-05}, {"id": 74, "seek": 45728, "start": 477.71999999999997, "end": 483.52, "text": " Git protocol is doing because without knowing this, you will not understand what a server should be", "tokens": [16939, 10336, 307, 884, 570, 1553, 5276, 341, 11, 291, 486, 406, 1223, 437, 257, 7154, 820, 312], "temperature": 0.0, "avg_logprob": -0.1283093716235871, "compression_ratio": 1.506276150627615, "no_speech_prob": 7.140439265640453e-05}, {"id": 75, "seek": 48352, "start": 483.52, "end": 491.2, "text": " doing. And it turns out that if you leave out HTTP and all this stuff and just concentrate on the", "tokens": [884, 13, 400, 309, 4523, 484, 300, 498, 291, 1856, 484, 33283, 293, 439, 341, 1507, 293, 445, 18089, 322, 264], "temperature": 0.0, "avg_logprob": -0.11956768705133806, "compression_ratio": 1.656140350877193, "no_speech_prob": 1.6962256268016063e-05}, {"id": 76, "seek": 48352, "start": 491.2, "end": 496.56, "text": " playing it protocol, it's actually really quite simple. If you don't, if you also ignore some", "tokens": [2433, 309, 10336, 11, 309, 311, 767, 534, 1596, 2199, 13, 759, 291, 500, 380, 11, 498, 291, 611, 11200, 512], "temperature": 0.0, "avg_logprob": -0.11956768705133806, "compression_ratio": 1.656140350877193, "no_speech_prob": 1.6962256268016063e-05}, {"id": 77, "seek": 48352, "start": 496.56, "end": 500.12, "text": " protocol extensions, which we haven't implemented yet. So this is like really a bare bone clone", "tokens": [10336, 25129, 11, 597, 321, 2378, 380, 12270, 1939, 13, 407, 341, 307, 411, 534, 257, 6949, 9026, 26506], "temperature": 0.0, "avg_logprob": -0.11956768705133806, "compression_ratio": 1.656140350877193, "no_speech_prob": 1.6962256268016063e-05}, {"id": 78, "seek": 48352, "start": 500.12, "end": 505.64, "text": " that that we will go through. It's not very complicated. The main thing to understand is", "tokens": [300, 300, 321, 486, 352, 807, 13, 467, 311, 406, 588, 6179, 13, 440, 2135, 551, 281, 1223, 307], "temperature": 0.0, "avg_logprob": -0.11956768705133806, "compression_ratio": 1.656140350877193, "no_speech_prob": 1.6962256268016063e-05}, {"id": 79, "seek": 48352, "start": 505.64, "end": 511.64, "text": " that when you're using SSH, the Git client will actually go and run the login shell of the user", "tokens": [300, 562, 291, 434, 1228, 12238, 39, 11, 264, 16939, 6423, 486, 767, 352, 293, 1190, 264, 24276, 8720, 295, 264, 4195], "temperature": 0.0, "avg_logprob": -0.11956768705133806, "compression_ratio": 1.656140350877193, "no_speech_prob": 1.6962256268016063e-05}, {"id": 80, "seek": 51164, "start": 511.64, "end": 517.52, "text": " and then give that a command to run. And Git basically hardcoded the names of these executables", "tokens": [293, 550, 976, 300, 257, 5622, 281, 1190, 13, 400, 16939, 1936, 1152, 66, 12340, 264, 5288, 295, 613, 7568, 2965], "temperature": 0.0, "avg_logprob": -0.18783156077067056, "compression_ratio": 1.6768558951965065, "no_speech_prob": 3.0239480111049488e-05}, {"id": 81, "seek": 51164, "start": 517.52, "end": 523.84, "text": " in its protocol. So you cannot be a Git protocol without calling Git upload pack on the server", "tokens": [294, 1080, 10336, 13, 407, 291, 2644, 312, 257, 16939, 10336, 1553, 5141, 16939, 6580, 2844, 322, 264, 7154], "temperature": 0.0, "avg_logprob": -0.18783156077067056, "compression_ratio": 1.6768558951965065, "no_speech_prob": 3.0239480111049488e-05}, {"id": 82, "seek": 51164, "start": 523.84, "end": 530.08, "text": " when you log in, right? Also there's Git receive pack for the other side when you're when you're", "tokens": [562, 291, 3565, 294, 11, 558, 30, 2743, 456, 311, 16939, 4774, 2844, 337, 264, 661, 1252, 562, 291, 434, 562, 291, 434], "temperature": 0.0, "avg_logprob": -0.18783156077067056, "compression_ratio": 1.6768558951965065, "no_speech_prob": 3.0239480111049488e-05}, {"id": 83, "seek": 51164, "start": 530.08, "end": 537.92, "text": " when you're sending something. Anyway, if you run God clone with the dash v flag, you will see a", "tokens": [562, 291, 434, 7750, 746, 13, 5684, 11, 498, 291, 1190, 1265, 26506, 365, 264, 8240, 371, 7166, 11, 291, 486, 536, 257], "temperature": 0.0, "avg_logprob": -0.18783156077067056, "compression_ratio": 1.6768558951965065, "no_speech_prob": 3.0239480111049488e-05}, {"id": 84, "seek": 53792, "start": 537.92, "end": 546.16, "text": " trace that is very similar to what I'm showing now. It's I've left out a few bits. But initially,", "tokens": [13508, 300, 307, 588, 2531, 281, 437, 286, 478, 4099, 586, 13, 467, 311, 286, 600, 1411, 484, 257, 1326, 9239, 13, 583, 9105, 11], "temperature": 0.0, "avg_logprob": -0.13872882441470497, "compression_ratio": 1.6652173913043478, "no_speech_prob": 3.269454828114249e-05}, {"id": 85, "seek": 53792, "start": 546.16, "end": 553.04, "text": " so this is only Git protocol version zero slash one Git protocol version two changed a bit some", "tokens": [370, 341, 307, 787, 16939, 10336, 3037, 4018, 17330, 472, 16939, 10336, 3037, 732, 3105, 257, 857, 512], "temperature": 0.0, "avg_logprob": -0.13872882441470497, "compression_ratio": 1.6652173913043478, "no_speech_prob": 3.269454828114249e-05}, {"id": 86, "seek": 53792, "start": 553.04, "end": 558.4, "text": " things in a good way. But I haven't implemented that. So we're seeing a version one trace.", "tokens": [721, 294, 257, 665, 636, 13, 583, 286, 2378, 380, 12270, 300, 13, 407, 321, 434, 2577, 257, 3037, 472, 13508, 13], "temperature": 0.0, "avg_logprob": -0.13872882441470497, "compression_ratio": 1.6652173913043478, "no_speech_prob": 3.269454828114249e-05}, {"id": 87, "seek": 53792, "start": 558.4, "end": 566.9599999999999, "text": " Initially, the server just sends one message which says I have one of the branches I have has this", "tokens": [29446, 11, 264, 7154, 445, 14790, 472, 3636, 597, 1619, 286, 362, 472, 295, 264, 14770, 286, 362, 575, 341], "temperature": 0.0, "avg_logprob": -0.13872882441470497, "compression_ratio": 1.6652173913043478, "no_speech_prob": 3.269454828114249e-05}, {"id": 88, "seek": 56696, "start": 566.96, "end": 572.2800000000001, "text": " comment hash and this name. And oh, I also have some capabilities. You can see in the trace,", "tokens": [2871, 22019, 293, 341, 1315, 13, 400, 1954, 11, 286, 611, 362, 512, 10862, 13, 509, 393, 536, 294, 264, 13508, 11], "temperature": 0.0, "avg_logprob": -0.1489861629627369, "compression_ratio": 1.7132075471698114, "no_speech_prob": 3.1198262149700895e-05}, {"id": 89, "seek": 56696, "start": 572.2800000000001, "end": 579.0400000000001, "text": " these are hidden behind a null byte. Because I suppose very old versions of Git clients didn't", "tokens": [613, 366, 7633, 2261, 257, 18184, 40846, 13, 1436, 286, 7297, 588, 1331, 9606, 295, 16939, 6982, 994, 380], "temperature": 0.0, "avg_logprob": -0.1489861629627369, "compression_ratio": 1.7132075471698114, "no_speech_prob": 3.1198262149700895e-05}, {"id": 90, "seek": 56696, "start": 579.0400000000001, "end": 583.52, "text": " really understand the capabilities yet and the null byte made them not read that part of the", "tokens": [534, 1223, 264, 10862, 1939, 293, 264, 18184, 40846, 1027, 552, 406, 1401, 300, 644, 295, 264], "temperature": 0.0, "avg_logprob": -0.1489861629627369, "compression_ratio": 1.7132075471698114, "no_speech_prob": 3.1198262149700895e-05}, {"id": 91, "seek": 56696, "start": 583.52, "end": 588.24, "text": " message. So they and also for version two, they did the same thing, hiding a version", "tokens": [3636, 13, 407, 436, 293, 611, 337, 3037, 732, 11, 436, 630, 264, 912, 551, 11, 10596, 257, 3037], "temperature": 0.0, "avg_logprob": -0.1489861629627369, "compression_ratio": 1.7132075471698114, "no_speech_prob": 3.1198262149700895e-05}, {"id": 92, "seek": 56696, "start": 588.24, "end": 592.48, "text": " announcements behind two null bytes, because then the next kind, you know, this is a bit", "tokens": [23785, 2261, 732, 18184, 36088, 11, 570, 550, 264, 958, 733, 11, 291, 458, 11, 341, 307, 257, 857], "temperature": 0.0, "avg_logprob": -0.1489861629627369, "compression_ratio": 1.7132075471698114, "no_speech_prob": 3.1198262149700895e-05}, {"id": 93, "seek": 59248, "start": 592.48, "end": 598.8000000000001, "text": " hacky, but seems to work. Don't worry about the capability capabilities. It's not important what", "tokens": [10339, 88, 11, 457, 2544, 281, 589, 13, 1468, 380, 3292, 466, 264, 13759, 10862, 13, 467, 311, 406, 1021, 437], "temperature": 0.0, "avg_logprob": -0.18753751841458408, "compression_ratio": 1.6339285714285714, "no_speech_prob": 2.885051981138531e-05}, {"id": 94, "seek": 59248, "start": 598.8000000000001, "end": 604.16, "text": " they are. What's important to understand also is that each message is wrapped in a packet line,", "tokens": [436, 366, 13, 708, 311, 1021, 281, 1223, 611, 307, 300, 1184, 3636, 307, 14226, 294, 257, 20300, 1622, 11], "temperature": 0.0, "avg_logprob": -0.18753751841458408, "compression_ratio": 1.6339285714285714, "no_speech_prob": 2.885051981138531e-05}, {"id": 95, "seek": 59248, "start": 604.16, "end": 610.88, "text": " they call it. And that's simply a length plus data framing format for these messages.", "tokens": [436, 818, 309, 13, 400, 300, 311, 2935, 257, 4641, 1804, 1412, 28971, 7877, 337, 613, 7897, 13], "temperature": 0.0, "avg_logprob": -0.18753751841458408, "compression_ratio": 1.6339285714285714, "no_speech_prob": 2.885051981138531e-05}, {"id": 96, "seek": 59248, "start": 610.88, "end": 618.12, "text": " So then the server keeps sending messages for every branch it has. And here's one more,", "tokens": [407, 550, 264, 7154, 5965, 7750, 7897, 337, 633, 9819, 309, 575, 13, 400, 510, 311, 472, 544, 11], "temperature": 0.0, "avg_logprob": -0.18753751841458408, "compression_ratio": 1.6339285714285714, "no_speech_prob": 2.885051981138531e-05}, {"id": 97, "seek": 61812, "start": 618.12, "end": 623.84, "text": " its main branch happens to be the same as had, because had is a similar to main, but you know,", "tokens": [1080, 2135, 9819, 2314, 281, 312, 264, 912, 382, 632, 11, 570, 632, 307, 257, 2531, 281, 2135, 11, 457, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.2171469149382218, "compression_ratio": 1.7372262773722629, "no_speech_prob": 3.4800530556822196e-05}, {"id": 98, "seek": 61812, "start": 623.84, "end": 629.48, "text": " not important. And the client just keeps storing these. And eventually the server sends a flush", "tokens": [406, 1021, 13, 400, 264, 6423, 445, 5965, 26085, 613, 13, 400, 4728, 264, 7154, 14790, 257, 19568], "temperature": 0.0, "avg_logprob": -0.2171469149382218, "compression_ratio": 1.7372262773722629, "no_speech_prob": 3.4800530556822196e-05}, {"id": 99, "seek": 61812, "start": 629.48, "end": 636.12, "text": " packet, which is just a zero length packet and says, okay, I'm done. And in response to which", "tokens": [20300, 11, 597, 307, 445, 257, 4018, 4641, 20300, 293, 1619, 11, 1392, 11, 286, 478, 1096, 13, 400, 294, 4134, 281, 597], "temperature": 0.0, "avg_logprob": -0.2171469149382218, "compression_ratio": 1.7372262773722629, "no_speech_prob": 3.4800530556822196e-05}, {"id": 100, "seek": 61812, "start": 636.12, "end": 641.12, "text": " the client will tell the server what it wants. So the client sends similar messages also includes", "tokens": [264, 6423, 486, 980, 264, 7154, 437, 309, 2738, 13, 407, 264, 6423, 14790, 2531, 7897, 611, 5974], "temperature": 0.0, "avg_logprob": -0.2171469149382218, "compression_ratio": 1.7372262773722629, "no_speech_prob": 3.4800530556822196e-05}, {"id": 101, "seek": 61812, "start": 641.12, "end": 645.28, "text": " its capabilities in the first message it's sending. And basically says, oh, yeah, I want this", "tokens": [1080, 10862, 294, 264, 700, 3636, 309, 311, 7750, 13, 400, 1936, 1619, 11, 1954, 11, 1338, 11, 286, 528, 341], "temperature": 0.0, "avg_logprob": -0.2171469149382218, "compression_ratio": 1.7372262773722629, "no_speech_prob": 3.4800530556822196e-05}, {"id": 102, "seek": 64528, "start": 645.28, "end": 649.8, "text": " commit and this commit and this commit. And eventually it also sends a flush packet to", "tokens": [5599, 293, 341, 5599, 293, 341, 5599, 13, 400, 4728, 309, 611, 14790, 257, 19568, 20300, 281], "temperature": 0.0, "avg_logprob": -0.13283605335139426, "compression_ratio": 1.6931407942238268, "no_speech_prob": 1.5935183910187334e-05}, {"id": 103, "seek": 64528, "start": 649.8, "end": 657.9599999999999, "text": " terminate that list. Now if we're doing a clone, right? So we have nothing. But if we already", "tokens": [10761, 473, 300, 1329, 13, 823, 498, 321, 434, 884, 257, 26506, 11, 558, 30, 407, 321, 362, 1825, 13, 583, 498, 321, 1217], "temperature": 0.0, "avg_logprob": -0.13283605335139426, "compression_ratio": 1.6931407942238268, "no_speech_prob": 1.5935183910187334e-05}, {"id": 104, "seek": 64528, "start": 657.9599999999999, "end": 663.52, "text": " had commits, we could now tell the server what we have by sending half lines, which look just", "tokens": [632, 48311, 11, 321, 727, 586, 980, 264, 7154, 437, 321, 362, 538, 7750, 1922, 3876, 11, 597, 574, 445], "temperature": 0.0, "avg_logprob": -0.13283605335139426, "compression_ratio": 1.6931407942238268, "no_speech_prob": 1.5935183910187334e-05}, {"id": 105, "seek": 64528, "start": 663.52, "end": 668.92, "text": " the same as the want lines with more commit IDs. And the server then builds a second set of commits", "tokens": [264, 912, 382, 264, 528, 3876, 365, 544, 5599, 48212, 13, 400, 264, 7154, 550, 15182, 257, 1150, 992, 295, 48311], "temperature": 0.0, "avg_logprob": -0.13283605335139426, "compression_ratio": 1.6931407942238268, "no_speech_prob": 1.5935183910187334e-05}, {"id": 106, "seek": 64528, "start": 668.92, "end": 673.36, "text": " in its memory to say like, oh, okay, the client has all of these already, I don't need to send", "tokens": [294, 1080, 4675, 281, 584, 411, 11, 1954, 11, 1392, 11, 264, 6423, 575, 439, 295, 613, 1217, 11, 286, 500, 380, 643, 281, 2845], "temperature": 0.0, "avg_logprob": -0.13283605335139426, "compression_ratio": 1.6931407942238268, "no_speech_prob": 1.5935183910187334e-05}, {"id": 107, "seek": 67336, "start": 673.36, "end": 678.32, "text": " those and don't need to send any objects that are hanging off these commits. It's basically just an", "tokens": [729, 293, 500, 380, 643, 281, 2845, 604, 6565, 300, 366, 8345, 766, 613, 48311, 13, 467, 311, 1936, 445, 364], "temperature": 0.0, "avg_logprob": -0.12977131142103968, "compression_ratio": 1.7272727272727273, "no_speech_prob": 2.0142959328950383e-05}, {"id": 108, "seek": 67336, "start": 678.32, "end": 682.96, "text": " optimization to keep the pack file small that will be sent next, right? So you're not doing a full", "tokens": [19618, 281, 1066, 264, 2844, 3991, 1359, 300, 486, 312, 2279, 958, 11, 558, 30, 407, 291, 434, 406, 884, 257, 1577], "temperature": 0.0, "avg_logprob": -0.12977131142103968, "compression_ratio": 1.7272727272727273, "no_speech_prob": 2.0142959328950383e-05}, {"id": 109, "seek": 67336, "start": 682.96, "end": 687.08, "text": " clone every time you do a full clone initially. And then once you have something, you tell the", "tokens": [26506, 633, 565, 291, 360, 257, 1577, 26506, 9105, 13, 400, 550, 1564, 291, 362, 746, 11, 291, 980, 264], "temperature": 0.0, "avg_logprob": -0.12977131142103968, "compression_ratio": 1.7272727272727273, "no_speech_prob": 2.0142959328950383e-05}, {"id": 110, "seek": 67336, "start": 687.08, "end": 693.28, "text": " server what you already have. So you only fetch the new stuff. And yeah, because we're doing a clone,", "tokens": [7154, 437, 291, 1217, 362, 13, 407, 291, 787, 23673, 264, 777, 1507, 13, 400, 1338, 11, 570, 321, 434, 884, 257, 26506, 11], "temperature": 0.0, "avg_logprob": -0.12977131142103968, "compression_ratio": 1.7272727272727273, "no_speech_prob": 2.0142959328950383e-05}, {"id": 111, "seek": 67336, "start": 693.28, "end": 698.64, "text": " we're just setting a server we're done. And now the client's protocol is already finished. So this", "tokens": [321, 434, 445, 3287, 257, 7154, 321, 434, 1096, 13, 400, 586, 264, 6423, 311, 10336, 307, 1217, 4335, 13, 407, 341], "temperature": 0.0, "avg_logprob": -0.12977131142103968, "compression_ratio": 1.7272727272727273, "no_speech_prob": 2.0142959328950383e-05}, {"id": 112, "seek": 69864, "start": 698.64, "end": 704.36, "text": " is basically the last message the client will ever send. And the server sends one more message in", "tokens": [307, 1936, 264, 1036, 3636, 264, 6423, 486, 1562, 2845, 13, 400, 264, 7154, 14790, 472, 544, 3636, 294], "temperature": 0.0, "avg_logprob": -0.13940744232713131, "compression_ratio": 1.8122605363984674, "no_speech_prob": 2.4298267817357555e-05}, {"id": 113, "seek": 69864, "start": 704.36, "end": 709.1999999999999, "text": " response, which is in this case, a knack, not acknowledged. I don't know why they chose these", "tokens": [4134, 11, 597, 307, 294, 341, 1389, 11, 257, 444, 501, 11, 406, 27262, 13, 286, 500, 380, 458, 983, 436, 5111, 613], "temperature": 0.0, "avg_logprob": -0.13940744232713131, "compression_ratio": 1.8122605363984674, "no_speech_prob": 2.4298267817357555e-05}, {"id": 114, "seek": 69864, "start": 709.1999999999999, "end": 716.28, "text": " words, aka knack. But essentially what these do is for a knack, the server keeps sending knacks", "tokens": [2283, 11, 28042, 444, 501, 13, 583, 4476, 437, 613, 360, 307, 337, 257, 444, 501, 11, 264, 7154, 5965, 7750, 444, 7424], "temperature": 0.0, "avg_logprob": -0.13940744232713131, "compression_ratio": 1.8122605363984674, "no_speech_prob": 2.4298267817357555e-05}, {"id": 115, "seek": 69864, "start": 716.28, "end": 720.72, "text": " while the clients are sending half lines to say like, I haven't found a common ancestor yet,", "tokens": [1339, 264, 6982, 366, 7750, 1922, 3876, 281, 584, 411, 11, 286, 2378, 380, 1352, 257, 2689, 40032, 1939, 11], "temperature": 0.0, "avg_logprob": -0.13940744232713131, "compression_ratio": 1.8122605363984674, "no_speech_prob": 2.4298267817357555e-05}, {"id": 116, "seek": 69864, "start": 720.72, "end": 727.12, "text": " please send me more. Because without a common ancestor, the server cannot determine a subset", "tokens": [1767, 2845, 385, 544, 13, 1436, 1553, 257, 2689, 40032, 11, 264, 7154, 2644, 6997, 257, 25993], "temperature": 0.0, "avg_logprob": -0.13940744232713131, "compression_ratio": 1.8122605363984674, "no_speech_prob": 2.4298267817357555e-05}, {"id": 117, "seek": 72712, "start": 727.12, "end": 732.52, "text": " of the commit graph to use for the pack file. Because if the client sends totally unrelated", "tokens": [295, 264, 5599, 4295, 281, 764, 337, 264, 2844, 3991, 13, 1436, 498, 264, 6423, 14790, 3879, 38967], "temperature": 0.0, "avg_logprob": -0.11386612111871892, "compression_ratio": 1.8611111111111112, "no_speech_prob": 1.8056654880638234e-05}, {"id": 118, "seek": 72712, "start": 732.52, "end": 737.12, "text": " commit hashes, the server doesn't know, then the server cannot use this to optimize the pack", "tokens": [5599, 575, 8076, 11, 264, 7154, 1177, 380, 458, 11, 550, 264, 7154, 2644, 764, 341, 281, 19719, 264, 2844], "temperature": 0.0, "avg_logprob": -0.11386612111871892, "compression_ratio": 1.8611111111111112, "no_speech_prob": 1.8056654880638234e-05}, {"id": 119, "seek": 72712, "start": 737.12, "end": 743.0, "text": " file. So it keeps sending knack. And in another case where you would have a common ancestor,", "tokens": [3991, 13, 407, 309, 5965, 7750, 444, 501, 13, 400, 294, 1071, 1389, 689, 291, 576, 362, 257, 2689, 40032, 11], "temperature": 0.0, "avg_logprob": -0.11386612111871892, "compression_ratio": 1.8611111111111112, "no_speech_prob": 1.8056654880638234e-05}, {"id": 120, "seek": 72712, "start": 743.0, "end": 747.96, "text": " the server would send an act and commit hash. And the client would then stop sending half lines", "tokens": [264, 7154, 576, 2845, 364, 605, 293, 5599, 22019, 13, 400, 264, 6423, 576, 550, 1590, 7750, 1922, 3876], "temperature": 0.0, "avg_logprob": -0.11386612111871892, "compression_ratio": 1.8611111111111112, "no_speech_prob": 1.8056654880638234e-05}, {"id": 121, "seek": 72712, "start": 747.96, "end": 756.96, "text": " for this branch. The exact details of this part of the protocol are a bit complicated. And they", "tokens": [337, 341, 9819, 13, 440, 1900, 4365, 295, 341, 644, 295, 264, 10336, 366, 257, 857, 6179, 13, 400, 436], "temperature": 0.0, "avg_logprob": -0.11386612111871892, "compression_ratio": 1.8611111111111112, "no_speech_prob": 1.8056654880638234e-05}, {"id": 122, "seek": 75696, "start": 756.96, "end": 764.36, "text": " kept adding extensions to this behavior. So the actual knack and act processing depends on various", "tokens": [4305, 5127, 25129, 281, 341, 5223, 13, 407, 264, 3539, 444, 501, 293, 605, 9007, 5946, 322, 3683], "temperature": 0.0, "avg_logprob": -0.1387162104896877, "compression_ratio": 1.6024590163934427, "no_speech_prob": 1.112313930207165e-05}, {"id": 123, "seek": 75696, "start": 764.36, "end": 770.24, "text": " options that you can set in the protocol, which are all documented in the Git docs. But it's not", "tokens": [3956, 300, 291, 393, 992, 294, 264, 10336, 11, 597, 366, 439, 23007, 294, 264, 16939, 45623, 13, 583, 309, 311, 406], "temperature": 0.0, "avg_logprob": -0.1387162104896877, "compression_ratio": 1.6024590163934427, "no_speech_prob": 1.112313930207165e-05}, {"id": 124, "seek": 75696, "start": 770.24, "end": 775.24, "text": " important for us here now. Basically, the server just tells us, well, I have no common ancestors", "tokens": [1021, 337, 505, 510, 586, 13, 8537, 11, 264, 7154, 445, 5112, 505, 11, 731, 11, 286, 362, 572, 2689, 18069], "temperature": 0.0, "avg_logprob": -0.1387162104896877, "compression_ratio": 1.6024590163934427, "no_speech_prob": 1.112313930207165e-05}, {"id": 125, "seek": 75696, "start": 775.24, "end": 782.52, "text": " because you don't have any commits. That's fine. And then the server starts calculating the set of", "tokens": [570, 291, 500, 380, 362, 604, 48311, 13, 663, 311, 2489, 13, 400, 550, 264, 7154, 3719, 28258, 264, 992, 295], "temperature": 0.0, "avg_logprob": -0.1387162104896877, "compression_ratio": 1.6024590163934427, "no_speech_prob": 1.112313930207165e-05}, {"id": 126, "seek": 78252, "start": 782.52, "end": 789.8, "text": " objects it wants to put in the pack file. And what Sony has colored, Git calls us something else.", "tokens": [6565, 309, 2738, 281, 829, 294, 264, 2844, 3991, 13, 400, 437, 13575, 575, 14332, 11, 16939, 5498, 505, 746, 1646, 13], "temperature": 0.0, "avg_logprob": -0.1402163931993934, "compression_ratio": 1.7589928057553956, "no_speech_prob": 6.707644934067503e-05}, {"id": 127, "seek": 78252, "start": 789.8, "end": 795.84, "text": " It calls us like counting and enumerate. I don't know which step does what. But what we do is we", "tokens": [467, 5498, 505, 411, 13251, 293, 465, 15583, 473, 13, 286, 500, 380, 458, 597, 1823, 775, 437, 13, 583, 437, 321, 360, 307, 321], "temperature": 0.0, "avg_logprob": -0.1402163931993934, "compression_ratio": 1.7589928057553956, "no_speech_prob": 6.707644934067503e-05}, {"id": 128, "seek": 78252, "start": 795.84, "end": 801.4, "text": " have the whole graph and we keep coloring nodes in the graph. It's kind of like mine or theirs or", "tokens": [362, 264, 1379, 4295, 293, 321, 1066, 23198, 13891, 294, 264, 4295, 13, 467, 311, 733, 295, 411, 3892, 420, 22760, 420], "temperature": 0.0, "avg_logprob": -0.1402163931993934, "compression_ratio": 1.7589928057553956, "no_speech_prob": 6.707644934067503e-05}, {"id": 129, "seek": 78252, "start": 801.4, "end": 805.52, "text": " something like this. And then eventually we have a subsection, which in this case would be all of", "tokens": [746, 411, 341, 13, 400, 550, 4728, 321, 362, 257, 1422, 11963, 11, 597, 294, 341, 1389, 576, 312, 439, 295], "temperature": 0.0, "avg_logprob": -0.1402163931993934, "compression_ratio": 1.7589928057553956, "no_speech_prob": 6.707644934067503e-05}, {"id": 130, "seek": 78252, "start": 805.52, "end": 811.8, "text": " it. And of all the commits first, and then you go through these commits and traverse all the trees", "tokens": [309, 13, 400, 295, 439, 264, 48311, 700, 11, 293, 550, 291, 352, 807, 613, 48311, 293, 45674, 439, 264, 5852], "temperature": 0.0, "avg_logprob": -0.1402163931993934, "compression_ratio": 1.7589928057553956, "no_speech_prob": 6.707644934067503e-05}, {"id": 131, "seek": 81180, "start": 811.8, "end": 817.16, "text": " and collect all the trees and blobs that you need to include for the client. And then you have a", "tokens": [293, 2500, 439, 264, 5852, 293, 1749, 929, 300, 291, 643, 281, 4090, 337, 264, 6423, 13, 400, 550, 291, 362, 257], "temperature": 0.0, "avg_logprob": -0.10221267180009322, "compression_ratio": 1.842911877394636, "no_speech_prob": 1.40629581437679e-05}, {"id": 132, "seek": 81180, "start": 817.16, "end": 824.4799999999999, "text": " lot of objects. And you sort them in a certain way. And you go through and check whether you", "tokens": [688, 295, 6565, 13, 400, 291, 1333, 552, 294, 257, 1629, 636, 13, 400, 291, 352, 807, 293, 1520, 1968, 291], "temperature": 0.0, "avg_logprob": -0.10221267180009322, "compression_ratio": 1.842911877394636, "no_speech_prob": 1.40629581437679e-05}, {"id": 133, "seek": 81180, "start": 824.4799999999999, "end": 829.3199999999999, "text": " already have a delta for any of these objects and whether the delta base will also be included in", "tokens": [1217, 362, 257, 8289, 337, 604, 295, 613, 6565, 293, 1968, 264, 8289, 3096, 486, 611, 312, 5556, 294], "temperature": 0.0, "avg_logprob": -0.10221267180009322, "compression_ratio": 1.842911877394636, "no_speech_prob": 1.40629581437679e-05}, {"id": 134, "seek": 81180, "start": 829.3199999999999, "end": 835.0799999999999, "text": " the packet sending so that you can avoid creating a delta for this object. You just reuse the delta", "tokens": [264, 20300, 7750, 370, 300, 291, 393, 5042, 4084, 257, 8289, 337, 341, 2657, 13, 509, 445, 26225, 264, 8289], "temperature": 0.0, "avg_logprob": -0.10221267180009322, "compression_ratio": 1.842911877394636, "no_speech_prob": 1.40629581437679e-05}, {"id": 135, "seek": 81180, "start": 835.0799999999999, "end": 838.4399999999999, "text": " that you already have somewhere, which is an optimization for performance and very important.", "tokens": [300, 291, 1217, 362, 4079, 11, 597, 307, 364, 19618, 337, 3389, 293, 588, 1021, 13], "temperature": 0.0, "avg_logprob": -0.10221267180009322, "compression_ratio": 1.842911877394636, "no_speech_prob": 1.40629581437679e-05}, {"id": 136, "seek": 83844, "start": 838.44, "end": 843.1600000000001, "text": " If you don't do that, your server is going to be super slow. And then you deltify some of the", "tokens": [759, 291, 500, 380, 360, 300, 11, 428, 7154, 307, 516, 281, 312, 1687, 2964, 13, 400, 550, 291, 1103, 83, 2505, 512, 295, 264], "temperature": 0.0, "avg_logprob": -0.14787567638960042, "compression_ratio": 1.757462686567164, "no_speech_prob": 1.862786120909732e-05}, {"id": 137, "seek": 83844, "start": 843.1600000000001, "end": 848.2800000000001, "text": " rest of the objects and you're good to go. Now you know what you need to know to start", "tokens": [1472, 295, 264, 6565, 293, 291, 434, 665, 281, 352, 13, 823, 291, 458, 437, 291, 643, 281, 458, 281, 722], "temperature": 0.0, "avg_logprob": -0.14787567638960042, "compression_ratio": 1.757462686567164, "no_speech_prob": 1.862786120909732e-05}, {"id": 138, "seek": 83844, "start": 848.2800000000001, "end": 854.36, "text": " generating a pack file stream. And you start sending this out to the client. And the client", "tokens": [17746, 257, 2844, 3991, 4309, 13, 400, 291, 722, 7750, 341, 484, 281, 264, 6423, 13, 400, 264, 6423], "temperature": 0.0, "avg_logprob": -0.14787567638960042, "compression_ratio": 1.757462686567164, "no_speech_prob": 1.862786120909732e-05}, {"id": 139, "seek": 83844, "start": 854.36, "end": 861.6400000000001, "text": " downloads it. Once it has everything indexes the pack, which is a step where you have the pack file,", "tokens": [36553, 309, 13, 3443, 309, 575, 1203, 8186, 279, 264, 2844, 11, 597, 307, 257, 1823, 689, 291, 362, 264, 2844, 3991, 11], "temperature": 0.0, "avg_logprob": -0.14787567638960042, "compression_ratio": 1.757462686567164, "no_speech_prob": 1.862786120909732e-05}, {"id": 140, "seek": 83844, "start": 861.6400000000001, "end": 866.8000000000001, "text": " which is full of compressed and deltified objects. You don't know what's in it because the server", "tokens": [597, 307, 1577, 295, 30353, 293, 1103, 83, 2587, 6565, 13, 509, 500, 380, 458, 437, 311, 294, 309, 570, 264, 7154], "temperature": 0.0, "avg_logprob": -0.14787567638960042, "compression_ratio": 1.757462686567164, "no_speech_prob": 1.862786120909732e-05}, {"id": 141, "seek": 86680, "start": 866.8, "end": 871.1999999999999, "text": " didn't tell you anything about the objects. You just told the server, send me this. The server", "tokens": [994, 380, 980, 291, 1340, 466, 264, 6565, 13, 509, 445, 1907, 264, 7154, 11, 2845, 385, 341, 13, 440, 7154], "temperature": 0.0, "avg_logprob": -0.11072872479756674, "compression_ratio": 1.775735294117647, "no_speech_prob": 1.9522543880157173e-05}, {"id": 142, "seek": 86680, "start": 871.1999999999999, "end": 876.24, "text": " sends you something. Now you don't know what's in there. And to use the pack file, you always need", "tokens": [14790, 291, 746, 13, 823, 291, 500, 380, 458, 437, 311, 294, 456, 13, 400, 281, 764, 264, 2844, 3991, 11, 291, 1009, 643], "temperature": 0.0, "avg_logprob": -0.11072872479756674, "compression_ratio": 1.775735294117647, "no_speech_prob": 1.9522543880157173e-05}, {"id": 143, "seek": 86680, "start": 876.24, "end": 881.8399999999999, "text": " to have an index for it, which tells you which object ID is at which offset in the pack file.", "tokens": [281, 362, 364, 8186, 337, 309, 11, 597, 5112, 291, 597, 2657, 7348, 307, 412, 597, 18687, 294, 264, 2844, 3991, 13], "temperature": 0.0, "avg_logprob": -0.11072872479756674, "compression_ratio": 1.775735294117647, "no_speech_prob": 1.9522543880157173e-05}, {"id": 144, "seek": 86680, "start": 881.8399999999999, "end": 887.5999999999999, "text": " So you just read the whole thing. And because Git uses intrinsic object identifiers, you can", "tokens": [407, 291, 445, 1401, 264, 1379, 551, 13, 400, 570, 16939, 4960, 35698, 2657, 2473, 23463, 11, 291, 393], "temperature": 0.0, "avg_logprob": -0.11072872479756674, "compression_ratio": 1.775735294117647, "no_speech_prob": 1.9522543880157173e-05}, {"id": 145, "seek": 86680, "start": 888.24, "end": 892.7199999999999, "text": " calculate the IDs yourself based on the contents of the blobs and the trees and the commits and so on.", "tokens": [8873, 264, 48212, 1803, 2361, 322, 264, 15768, 295, 264, 1749, 929, 293, 264, 5852, 293, 264, 48311, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.11072872479756674, "compression_ratio": 1.775735294117647, "no_speech_prob": 1.9522543880157173e-05}, {"id": 146, "seek": 89272, "start": 892.72, "end": 900.0, "text": " So you build that up. And then for any of the deltified objects, you also need to make sure", "tokens": [407, 291, 1322, 300, 493, 13, 400, 550, 337, 604, 295, 264, 1103, 83, 2587, 6565, 11, 291, 611, 643, 281, 652, 988], "temperature": 0.0, "avg_logprob": -0.11344212934005359, "compression_ratio": 1.7845528455284554, "no_speech_prob": 4.068662747158669e-05}, {"id": 147, "seek": 89272, "start": 900.0, "end": 905.44, "text": " that you can actually combine all the deltas to get the right content. And that's the last step.", "tokens": [300, 291, 393, 767, 10432, 439, 264, 1103, 83, 296, 281, 483, 264, 558, 2701, 13, 400, 300, 311, 264, 1036, 1823, 13], "temperature": 0.0, "avg_logprob": -0.11344212934005359, "compression_ratio": 1.7845528455284554, "no_speech_prob": 4.068662747158669e-05}, {"id": 148, "seek": 89272, "start": 906.08, "end": 909.6, "text": " That takes quite a while. And then once you're done with that on a big pack anyway,", "tokens": [663, 2516, 1596, 257, 1339, 13, 400, 550, 1564, 291, 434, 1096, 365, 300, 322, 257, 955, 2844, 4033, 11], "temperature": 0.0, "avg_logprob": -0.11344212934005359, "compression_ratio": 1.7845528455284554, "no_speech_prob": 4.068662747158669e-05}, {"id": 149, "seek": 89272, "start": 909.6, "end": 912.96, "text": " it takes a long time. And then once you have that, you know, okay, I have this pack.", "tokens": [309, 2516, 257, 938, 565, 13, 400, 550, 1564, 291, 362, 300, 11, 291, 458, 11, 1392, 11, 286, 362, 341, 2844, 13], "temperature": 0.0, "avg_logprob": -0.11344212934005359, "compression_ratio": 1.7845528455284554, "no_speech_prob": 4.068662747158669e-05}, {"id": 150, "seek": 89272, "start": 913.76, "end": 918.0, "text": " The commit I want it is in there. All the objects that are hanging off of it are,", "tokens": [440, 5599, 286, 528, 309, 307, 294, 456, 13, 1057, 264, 6565, 300, 366, 8345, 766, 295, 309, 366, 11], "temperature": 0.0, "avg_logprob": -0.11344212934005359, "compression_ratio": 1.7845528455284554, "no_speech_prob": 4.068662747158669e-05}, {"id": 151, "seek": 91800, "start": 918.0, "end": 923.2, "text": " you know, by nature of the hashing structure that Git is using are there. So that's fine,", "tokens": [291, 458, 11, 538, 3687, 295, 264, 575, 571, 3877, 300, 16939, 307, 1228, 366, 456, 13, 407, 300, 311, 2489, 11], "temperature": 0.0, "avg_logprob": -0.13687730919231067, "compression_ratio": 1.5879828326180256, "no_speech_prob": 1.0615684004733339e-05}, {"id": 152, "seek": 91800, "start": 923.2, "end": 930.24, "text": " we're going to use this. Then you just create a reference for the Git client to find its initial", "tokens": [321, 434, 516, 281, 764, 341, 13, 1396, 291, 445, 1884, 257, 6408, 337, 264, 16939, 6423, 281, 915, 1080, 5883], "temperature": 0.0, "avg_logprob": -0.13687730919231067, "compression_ratio": 1.5879828326180256, "no_speech_prob": 1.0615684004733339e-05}, {"id": 153, "seek": 91800, "start": 930.24, "end": 936.56, "text": " commit and you can use the repository. In the push case, it works slightly differently.", "tokens": [5599, 293, 291, 393, 764, 264, 25841, 13, 682, 264, 2944, 1389, 11, 309, 1985, 4748, 7614, 13], "temperature": 0.0, "avg_logprob": -0.13687730919231067, "compression_ratio": 1.5879828326180256, "no_speech_prob": 1.0615684004733339e-05}, {"id": 154, "seek": 91800, "start": 938.24, "end": 944.16, "text": " You still have this reference list announcement at the beginning. And instead of saying what it", "tokens": [509, 920, 362, 341, 6408, 1329, 12847, 412, 264, 2863, 13, 400, 2602, 295, 1566, 437, 309], "temperature": 0.0, "avg_logprob": -0.13687730919231067, "compression_ratio": 1.5879828326180256, "no_speech_prob": 1.0615684004733339e-05}, {"id": 155, "seek": 94416, "start": 944.16, "end": 949.28, "text": " wants, the client proposes reference updates to say, oh, I would like to change the main branch", "tokens": [2738, 11, 264, 6423, 2365, 4201, 6408, 9205, 281, 584, 11, 1954, 11, 286, 576, 411, 281, 1319, 264, 2135, 9819], "temperature": 0.0, "avg_logprob": -0.09204904238382976, "compression_ratio": 1.8727272727272728, "no_speech_prob": 2.7964781111222692e-05}, {"id": 156, "seek": 94416, "start": 949.28, "end": 953.92, "text": " to point to this commit. And I would like to change or add this tag or something like this.", "tokens": [281, 935, 281, 341, 5599, 13, 400, 286, 576, 411, 281, 1319, 420, 909, 341, 6162, 420, 746, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.09204904238382976, "compression_ratio": 1.8727272727272728, "no_speech_prob": 2.7964781111222692e-05}, {"id": 157, "seek": 94416, "start": 954.64, "end": 958.3199999999999, "text": " And then it just sends a pack file. And then the server has to index this and", "tokens": [400, 550, 309, 445, 14790, 257, 2844, 3991, 13, 400, 550, 264, 7154, 575, 281, 8186, 341, 293], "temperature": 0.0, "avg_logprob": -0.09204904238382976, "compression_ratio": 1.8727272727272728, "no_speech_prob": 2.7964781111222692e-05}, {"id": 158, "seek": 94416, "start": 958.9599999999999, "end": 963.76, "text": " figure out that everything is fine. And whether it wants to change these references or not.", "tokens": [2573, 484, 300, 1203, 307, 2489, 13, 400, 1968, 309, 2738, 281, 1319, 613, 15400, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.09204904238382976, "compression_ratio": 1.8727272727272728, "no_speech_prob": 2.7964781111222692e-05}, {"id": 159, "seek": 94416, "start": 964.4, "end": 966.88, "text": " And give feedback to the client to say, like, yes, okay, I've,", "tokens": [400, 976, 5824, 281, 264, 6423, 281, 584, 11, 411, 11, 2086, 11, 1392, 11, 286, 600, 11], "temperature": 0.0, "avg_logprob": -0.09204904238382976, "compression_ratio": 1.8727272727272728, "no_speech_prob": 2.7964781111222692e-05}, {"id": 160, "seek": 94416, "start": 967.76, "end": 973.1999999999999, "text": " you have changed this branch or you've added this tag and so on. So that's it for the protocol", "tokens": [291, 362, 3105, 341, 9819, 420, 291, 600, 3869, 341, 6162, 293, 370, 322, 13, 407, 300, 311, 309, 337, 264, 10336], "temperature": 0.0, "avg_logprob": -0.09204904238382976, "compression_ratio": 1.8727272727272728, "no_speech_prob": 2.7964781111222692e-05}, {"id": 161, "seek": 97320, "start": 973.2, "end": 977.6, "text": " overview. You can find a lot of documentation in Git source tree about this.", "tokens": [12492, 13, 509, 393, 915, 257, 688, 295, 14333, 294, 16939, 4009, 4230, 466, 341, 13], "temperature": 0.0, "avg_logprob": -0.14200897972182472, "compression_ratio": 1.6932270916334662, "no_speech_prob": 3.4803932067006826e-05}, {"id": 162, "seek": 97320, "start": 979.6, "end": 982.1600000000001, "text": " They moved the files recently. So if you have an older", "tokens": [814, 4259, 264, 7098, 3938, 13, 407, 498, 291, 362, 364, 4906], "temperature": 0.0, "avg_logprob": -0.14200897972182472, "compression_ratio": 1.6932270916334662, "no_speech_prob": 3.4803932067006826e-05}, {"id": 163, "seek": 97320, "start": 983.0400000000001, "end": 987.0400000000001, "text": " Git source checkout, it might still be in documentation slash technical,", "tokens": [16939, 4009, 37153, 11, 309, 1062, 920, 312, 294, 14333, 17330, 6191, 11], "temperature": 0.0, "avg_logprob": -0.14200897972182472, "compression_ratio": 1.6932270916334662, "no_speech_prob": 3.4803932067006826e-05}, {"id": 164, "seek": 97320, "start": 987.6800000000001, "end": 991.2, "text": " but in the current version, it's in documentation slash Git protocol", "tokens": [457, 294, 264, 2190, 3037, 11, 309, 311, 294, 14333, 17330, 16939, 10336], "temperature": 0.0, "avg_logprob": -0.14200897972182472, "compression_ratio": 1.6932270916334662, "no_speech_prob": 3.4803932067006826e-05}, {"id": 165, "seek": 97320, "start": 991.9200000000001, "end": 995.6800000000001, "text": " dash packed attack system is the main one for this, but there are also others,", "tokens": [8240, 13265, 2690, 1185, 307, 264, 2135, 472, 337, 341, 11, 457, 456, 366, 611, 2357, 11], "temperature": 0.0, "avg_logprob": -0.14200897972182472, "compression_ratio": 1.6932270916334662, "no_speech_prob": 3.4803932067006826e-05}, {"id": 166, "seek": 97320, "start": 995.6800000000001, "end": 999.5200000000001, "text": " similarly named files, which you can also read if you want to know more.", "tokens": [14138, 4926, 7098, 11, 597, 291, 393, 611, 1401, 498, 291, 528, 281, 458, 544, 13], "temperature": 0.0, "avg_logprob": -0.14200897972182472, "compression_ratio": 1.6932270916334662, "no_speech_prob": 3.4803932067006826e-05}, {"id": 167, "seek": 99952, "start": 999.52, "end": 1007.6, "text": " Okay, another thing we need to talk about, because this is important to understand why", "tokens": [1033, 11, 1071, 551, 321, 643, 281, 751, 466, 11, 570, 341, 307, 1021, 281, 1223, 983], "temperature": 0.0, "avg_logprob": -0.11978284367975199, "compression_ratio": 1.6766917293233083, "no_speech_prob": 2.6271003662259318e-05}, {"id": 168, "seek": 99952, "start": 1008.64, "end": 1013.04, "text": " we would need to write our own server in the first place, because there are already several", "tokens": [321, 576, 643, 281, 2464, 527, 1065, 7154, 294, 264, 700, 1081, 11, 570, 456, 366, 1217, 2940], "temperature": 0.0, "avg_logprob": -0.11978284367975199, "compression_ratio": 1.6766917293233083, "no_speech_prob": 2.6271003662259318e-05}, {"id": 169, "seek": 99952, "start": 1013.04, "end": 1019.52, "text": " server implementations, right? Why do we want our own? Well, when you write server software,", "tokens": [7154, 4445, 763, 11, 558, 30, 1545, 360, 321, 528, 527, 1065, 30, 1042, 11, 562, 291, 2464, 7154, 4722, 11], "temperature": 0.0, "avg_logprob": -0.11978284367975199, "compression_ratio": 1.6766917293233083, "no_speech_prob": 2.6271003662259318e-05}, {"id": 170, "seek": 99952, "start": 1019.52, "end": 1024.0, "text": " especially an open BSD, there are a few design patterns that we use that are not", "tokens": [2318, 364, 1269, 363, 23969, 11, 456, 366, 257, 1326, 1715, 8294, 300, 321, 764, 300, 366, 406], "temperature": 0.0, "avg_logprob": -0.11978284367975199, "compression_ratio": 1.6766917293233083, "no_speech_prob": 2.6271003662259318e-05}, {"id": 171, "seek": 99952, "start": 1024.72, "end": 1028.8799999999999, "text": " commonly used elsewhere, I would say. I mean, I've never really seen them used widely outside", "tokens": [12719, 1143, 14517, 11, 286, 576, 584, 13, 286, 914, 11, 286, 600, 1128, 534, 1612, 552, 1143, 13371, 2380], "temperature": 0.0, "avg_logprob": -0.11978284367975199, "compression_ratio": 1.6766917293233083, "no_speech_prob": 2.6271003662259318e-05}, {"id": 172, "seek": 102888, "start": 1028.88, "end": 1035.0400000000002, "text": " this project, so it's a bit unique in that way and the way it does things, but these things", "tokens": [341, 1716, 11, 370, 309, 311, 257, 857, 3845, 294, 300, 636, 293, 264, 636, 309, 775, 721, 11, 457, 613, 721], "temperature": 0.0, "avg_logprob": -0.10602654529218915, "compression_ratio": 1.686832740213523, "no_speech_prob": 5.6487388064851984e-05}, {"id": 173, "seek": 102888, "start": 1035.0400000000002, "end": 1040.72, "text": " are important to us. So for example, you know that SSH recently had a release where they had a", "tokens": [366, 1021, 281, 505, 13, 407, 337, 1365, 11, 291, 458, 300, 12238, 39, 3938, 632, 257, 4374, 689, 436, 632, 257], "temperature": 0.0, "avg_logprob": -0.10602654529218915, "compression_ratio": 1.686832740213523, "no_speech_prob": 5.6487388064851984e-05}, {"id": 174, "seek": 102888, "start": 1040.72, "end": 1045.7600000000002, "text": " double free and advisory products like yesterday, I think, or two days ago said like, oh, this is", "tokens": [3834, 1737, 293, 26289, 3383, 411, 5186, 11, 286, 519, 11, 420, 732, 1708, 2057, 848, 411, 11, 1954, 11, 341, 307], "temperature": 0.0, "avg_logprob": -0.10602654529218915, "compression_ratio": 1.686832740213523, "no_speech_prob": 5.6487388064851984e-05}, {"id": 175, "seek": 102888, "start": 1045.7600000000002, "end": 1051.8400000000001, "text": " not believed to be exploitable. That is because of this. It's not because SSH code is generally", "tokens": [406, 7847, 281, 312, 12382, 16772, 13, 663, 307, 570, 295, 341, 13, 467, 311, 406, 570, 12238, 39, 3089, 307, 5101], "temperature": 0.0, "avg_logprob": -0.10602654529218915, "compression_ratio": 1.686832740213523, "no_speech_prob": 5.6487388064851984e-05}, {"id": 176, "seek": 102888, "start": 1051.8400000000001, "end": 1056.88, "text": " great or something. It's because of the design patterns. And so we want these design patterns", "tokens": [869, 420, 746, 13, 467, 311, 570, 295, 264, 1715, 8294, 13, 400, 370, 321, 528, 613, 1715, 8294], "temperature": 0.0, "avg_logprob": -0.10602654529218915, "compression_ratio": 1.686832740213523, "no_speech_prob": 5.6487388064851984e-05}, {"id": 177, "seek": 105688, "start": 1056.88, "end": 1064.72, "text": " to be used. And so one of the things you do is that you split your program into several processes", "tokens": [281, 312, 1143, 13, 400, 370, 472, 295, 264, 721, 291, 360, 307, 300, 291, 7472, 428, 1461, 666, 2940, 7555], "temperature": 0.0, "avg_logprob": -0.06753759107727936, "compression_ratio": 1.5722222222222222, "no_speech_prob": 2.21238788071787e-05}, {"id": 178, "seek": 105688, "start": 1064.72, "end": 1071.5200000000002, "text": " that have different tasks. And for each task, you decide what kind of system calls does this task", "tokens": [300, 362, 819, 9608, 13, 400, 337, 1184, 5633, 11, 291, 4536, 437, 733, 295, 1185, 5498, 775, 341, 5633], "temperature": 0.0, "avg_logprob": -0.06753759107727936, "compression_ratio": 1.5722222222222222, "no_speech_prob": 2.21238788071787e-05}, {"id": 179, "seek": 105688, "start": 1071.5200000000002, "end": 1081.7600000000002, "text": " need? And how can I make sure that a process that has network access isn't also able to", "tokens": [643, 30, 400, 577, 393, 286, 652, 988, 300, 257, 1399, 300, 575, 3209, 2105, 1943, 380, 611, 1075, 281], "temperature": 0.0, "avg_logprob": -0.06753759107727936, "compression_ratio": 1.5722222222222222, "no_speech_prob": 2.21238788071787e-05}, {"id": 180, "seek": 108176, "start": 1081.76, "end": 1087.28, "text": " start new programs or open files and so on. There's unveil which restricts the view of the file", "tokens": [722, 777, 4268, 420, 1269, 7098, 293, 370, 322, 13, 821, 311, 31009, 388, 597, 7694, 82, 264, 1910, 295, 264, 3991], "temperature": 0.0, "avg_logprob": -0.1441767467715876, "compression_ratio": 1.7835820895522387, "no_speech_prob": 3.3706957765389234e-05}, {"id": 181, "seek": 108176, "start": 1087.28, "end": 1092.48, "text": " system and allows you to completely hide like your dot SSH directory, for example. And other", "tokens": [1185, 293, 4045, 291, 281, 2584, 6479, 411, 428, 5893, 12238, 39, 21120, 11, 337, 1365, 13, 400, 661], "temperature": 0.0, "avg_logprob": -0.1441767467715876, "compression_ratio": 1.7835820895522387, "no_speech_prob": 3.3706957765389234e-05}, {"id": 182, "seek": 108176, "start": 1092.48, "end": 1096.64, "text": " things, basically, it says the program, for example, the God client says, I need the repository,", "tokens": [721, 11, 1936, 11, 309, 1619, 264, 1461, 11, 337, 1365, 11, 264, 1265, 6423, 1619, 11, 286, 643, 264, 25841, 11], "temperature": 0.0, "avg_logprob": -0.1441767467715876, "compression_ratio": 1.7835820895522387, "no_speech_prob": 3.3706957765389234e-05}, {"id": 183, "seek": 108176, "start": 1096.64, "end": 1101.04, "text": " I need the work tree, I need slash temp, that's all I need to see. And I don't need to see anything", "tokens": [286, 643, 264, 589, 4230, 11, 286, 643, 17330, 18274, 11, 300, 311, 439, 286, 643, 281, 536, 13, 400, 286, 500, 380, 643, 281, 536, 1340], "temperature": 0.0, "avg_logprob": -0.1441767467715876, "compression_ratio": 1.7835820895522387, "no_speech_prob": 3.3706957765389234e-05}, {"id": 184, "seek": 108176, "start": 1101.04, "end": 1107.44, "text": " else. When you start new programs, you always fork an exec, which means that when you do the", "tokens": [1646, 13, 1133, 291, 722, 777, 4268, 11, 291, 1009, 17716, 364, 4454, 11, 597, 1355, 300, 562, 291, 360, 264], "temperature": 0.0, "avg_logprob": -0.1441767467715876, "compression_ratio": 1.7835820895522387, "no_speech_prob": 3.3706957765389234e-05}, {"id": 185, "seek": 110744, "start": 1107.44, "end": 1112.72, "text": " exec, the program will be restarted from scratch and OpenBSD's memory randomization will kick in", "tokens": [4454, 11, 264, 1461, 486, 312, 21022, 292, 490, 8459, 293, 7238, 8176, 35, 311, 4675, 4974, 2144, 486, 4437, 294], "temperature": 0.0, "avg_logprob": -0.12106428894342161, "compression_ratio": 1.6523297491039426, "no_speech_prob": 2.5063014618353918e-05}, {"id": 186, "seek": 110744, "start": 1112.72, "end": 1116.88, "text": " and load all the code segments and text segments and stuff in different locations again,", "tokens": [293, 3677, 439, 264, 3089, 19904, 293, 2487, 19904, 293, 1507, 294, 819, 9253, 797, 11], "temperature": 0.0, "avg_logprob": -0.12106428894342161, "compression_ratio": 1.6523297491039426, "no_speech_prob": 2.5063014618353918e-05}, {"id": 187, "seek": 110744, "start": 1118.3200000000002, "end": 1122.8, "text": " which you do for every request so that when somebody learns information about the outer space", "tokens": [597, 291, 360, 337, 633, 5308, 370, 300, 562, 2618, 27152, 1589, 466, 264, 10847, 1901], "temperature": 0.0, "avg_logprob": -0.12106428894342161, "compression_ratio": 1.6523297491039426, "no_speech_prob": 2.5063014618353918e-05}, {"id": 188, "seek": 110744, "start": 1122.8, "end": 1128.8, "text": " from an info league, they cannot use it on the next request. You have messages over pipes to", "tokens": [490, 364, 13614, 14957, 11, 436, 2644, 764, 309, 322, 264, 958, 5308, 13, 509, 362, 7897, 670, 21882, 281], "temperature": 0.0, "avg_logprob": -0.12106428894342161, "compression_ratio": 1.6523297491039426, "no_speech_prob": 2.5063014618353918e-05}, {"id": 189, "seek": 110744, "start": 1128.8, "end": 1133.52, "text": " communicate between these programs. And of course, you will have to have access to files", "tokens": [7890, 1296, 613, 4268, 13, 400, 295, 1164, 11, 291, 486, 362, 281, 362, 2105, 281, 7098], "temperature": 0.0, "avg_logprob": -0.12106428894342161, "compression_ratio": 1.6523297491039426, "no_speech_prob": 2.5063014618353918e-05}, {"id": 190, "seek": 113352, "start": 1133.52, "end": 1138.24, "text": " and networks somehow, right, especially in isolated contexts. And there what you do is you pass", "tokens": [293, 9590, 6063, 11, 558, 11, 2318, 294, 14621, 30628, 13, 400, 456, 437, 291, 360, 307, 291, 1320], "temperature": 0.0, "avg_logprob": -0.1628026255854854, "compression_ratio": 1.650735294117647, "no_speech_prob": 3.882333112414926e-05}, {"id": 191, "seek": 113352, "start": 1138.24, "end": 1144.0, "text": " file descriptors over these pipes so that one process opens resources and the other", "tokens": [3991, 31280, 830, 670, 613, 21882, 370, 300, 472, 1399, 9870, 3593, 293, 264, 661], "temperature": 0.0, "avg_logprob": -0.1628026255854854, "compression_ratio": 1.650735294117647, "no_speech_prob": 3.882333112414926e-05}, {"id": 192, "seek": 113352, "start": 1144.0, "end": 1148.56, "text": " less privileged one is using them. So these are the these are the patterns we use.", "tokens": [1570, 25293, 472, 307, 1228, 552, 13, 407, 613, 366, 264, 613, 366, 264, 8294, 321, 764, 13], "temperature": 0.0, "avg_logprob": -0.1628026255854854, "compression_ratio": 1.650735294117647, "no_speech_prob": 3.882333112414926e-05}, {"id": 193, "seek": 113352, "start": 1151.04, "end": 1156.32, "text": " Okay, and so basically, this is what this is. It's a Git server that runs as this kind of", "tokens": [1033, 11, 293, 370, 1936, 11, 341, 307, 437, 341, 307, 13, 467, 311, 257, 16939, 7154, 300, 6676, 382, 341, 733, 295], "temperature": 0.0, "avg_logprob": -0.1628026255854854, "compression_ratio": 1.650735294117647, "no_speech_prob": 3.882333112414926e-05}, {"id": 194, "seek": 115632, "start": 1156.32, "end": 1163.6799999999998, "text": " multi process program. It only supports SSH. Git user account I mapped to regular shell accounts", "tokens": [4825, 1399, 1461, 13, 467, 787, 9346, 12238, 39, 13, 16939, 4195, 2696, 286, 33318, 281, 3890, 8720, 9402], "temperature": 0.0, "avg_logprob": -0.15137092994921136, "compression_ratio": 1.7106918238993711, "no_speech_prob": 2.885264802898746e-05}, {"id": 195, "seek": 115632, "start": 1163.6799999999998, "end": 1168.0, "text": " because I didn't want to reimplement user management. You can have a special purpose", "tokens": [570, 286, 994, 380, 528, 281, 33433, 43704, 4195, 4592, 13, 509, 393, 362, 257, 2121, 4334], "temperature": 0.0, "avg_logprob": -0.15137092994921136, "compression_ratio": 1.7106918238993711, "no_speech_prob": 2.885264802898746e-05}, {"id": 196, "seek": 115632, "start": 1168.0, "end": 1172.56, "text": " login shell for these users to restrict them, if you want. And access permissions are said", "tokens": [24276, 8720, 337, 613, 5022, 281, 7694, 552, 11, 498, 291, 528, 13, 400, 2105, 32723, 366, 848], "temperature": 0.0, "avg_logprob": -0.15137092994921136, "compression_ratio": 1.7106918238993711, "no_speech_prob": 2.885264802898746e-05}, {"id": 197, "seek": 115632, "start": 1172.56, "end": 1176.72, "text": " per repository. I don't want to go very complicated and make it like per branch or something. It's", "tokens": [680, 25841, 13, 286, 500, 380, 528, 281, 352, 588, 6179, 293, 652, 309, 411, 680, 9819, 420, 746, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.15137092994921136, "compression_ratio": 1.7106918238993711, "no_speech_prob": 2.885264802898746e-05}, {"id": 198, "seek": 115632, "start": 1176.72, "end": 1180.8799999999999, "text": " just like, no, if you have access to the repo, you have access, which is good enough, for example,", "tokens": [445, 411, 11, 572, 11, 498, 291, 362, 2105, 281, 264, 49040, 11, 291, 362, 2105, 11, 597, 307, 665, 1547, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.15137092994921136, "compression_ratio": 1.7106918238993711, "no_speech_prob": 2.885264802898746e-05}, {"id": 199, "seek": 115632, "start": 1180.8799999999999, "end": 1184.24, "text": " for OpenBSD's model where you get an account and you can commit anywhere.", "tokens": [337, 7238, 8176, 35, 311, 2316, 689, 291, 483, 364, 2696, 293, 291, 393, 5599, 4992, 13], "temperature": 0.0, "avg_logprob": -0.15137092994921136, "compression_ratio": 1.7106918238993711, "no_speech_prob": 2.885264802898746e-05}, {"id": 200, "seek": 118424, "start": 1184.24, "end": 1190.16, "text": " And when you configure this thing, this is basically what you need to do. You create your", "tokens": [400, 562, 291, 22162, 341, 551, 11, 341, 307, 1936, 437, 291, 643, 281, 360, 13, 509, 1884, 428], "temperature": 0.0, "avg_logprob": -0.15044311900715251, "compression_ratio": 1.6885964912280702, "no_speech_prob": 2.1777317670057528e-05}, {"id": 201, "seek": 118424, "start": 1190.16, "end": 1195.92, "text": " repositories, make sure they're owned by the right user that you run the demon as. And you have at", "tokens": [22283, 2083, 11, 652, 988, 436, 434, 11684, 538, 264, 558, 4195, 300, 291, 1190, 264, 14283, 382, 13, 400, 291, 362, 412], "temperature": 0.0, "avg_logprob": -0.15044311900715251, "compression_ratio": 1.6885964912280702, "no_speech_prob": 2.1777317670057528e-05}, {"id": 202, "seek": 118424, "start": 1195.92, "end": 1202.32, "text": " least one repository in your configuration file, which has a path, but the repository is and access", "tokens": [1935, 472, 25841, 294, 428, 11694, 3991, 11, 597, 575, 257, 3100, 11, 457, 264, 25841, 307, 293, 2105], "temperature": 0.0, "avg_logprob": -0.15044311900715251, "compression_ratio": 1.6885964912280702, "no_speech_prob": 2.1777317670057528e-05}, {"id": 203, "seek": 118424, "start": 1202.32, "end": 1206.88, "text": " permissions for either, in this case, the example would be a group of developers, which you have", "tokens": [32723, 337, 2139, 11, 294, 341, 1389, 11, 264, 1365, 576, 312, 257, 1594, 295, 8849, 11, 597, 291, 362], "temperature": 0.0, "avg_logprob": -0.15044311900715251, "compression_ratio": 1.6885964912280702, "no_speech_prob": 2.1777317670057528e-05}, {"id": 204, "seek": 120688, "start": 1206.88, "end": 1215.3600000000001, "text": " in ETC groups and an anonymous user, which we can only read. Now, my initial implementation", "tokens": [294, 462, 18238, 3935, 293, 364, 24932, 4195, 11, 597, 321, 393, 787, 1401, 13, 823, 11, 452, 5883, 11420], "temperature": 0.0, "avg_logprob": -0.13448591793284698, "compression_ratio": 1.453125, "no_speech_prob": 1.012936991173774e-05}, {"id": 205, "seek": 120688, "start": 1215.3600000000001, "end": 1222.0, "text": " of this looked something like this. It was functional and I could write a test suite for", "tokens": [295, 341, 2956, 746, 411, 341, 13, 467, 390, 11745, 293, 286, 727, 2464, 257, 1500, 14205, 337], "temperature": 0.0, "avg_logprob": -0.13448591793284698, "compression_ratio": 1.453125, "no_speech_prob": 1.012936991173774e-05}, {"id": 206, "seek": 120688, "start": 1222.0, "end": 1231.2800000000002, "text": " it, which was the main part. This could actually be used to fetch and push changes. But the design", "tokens": [309, 11, 597, 390, 264, 2135, 644, 13, 639, 727, 767, 312, 1143, 281, 23673, 293, 2944, 2962, 13, 583, 264, 1715], "temperature": 0.0, "avg_logprob": -0.13448591793284698, "compression_ratio": 1.453125, "no_speech_prob": 1.012936991173774e-05}, {"id": 207, "seek": 123128, "start": 1231.28, "end": 1237.44, "text": " wasn't very good in terms of this multiprocess aspect because the parent started, then it", "tokens": [2067, 380, 588, 665, 294, 2115, 295, 341, 3311, 340, 780, 4171, 570, 264, 2596, 1409, 11, 550, 309], "temperature": 0.0, "avg_logprob": -0.12591594854990643, "compression_ratio": 1.690909090909091, "no_speech_prob": 2.9305801945156418e-05}, {"id": 208, "seek": 123128, "start": 1237.44, "end": 1242.08, "text": " started a reader process and a writer process and that was it. And then all these processes were", "tokens": [1409, 257, 15149, 1399, 293, 257, 9936, 1399, 293, 300, 390, 309, 13, 400, 550, 439, 613, 7555, 645], "temperature": 0.0, "avg_logprob": -0.12591594854990643, "compression_ratio": 1.690909090909091, "no_speech_prob": 2.9305801945156418e-05}, {"id": 209, "seek": 123128, "start": 1242.08, "end": 1248.16, "text": " always used for every connection. It did allow us to at least get this up and running, though.", "tokens": [1009, 1143, 337, 633, 4984, 13, 467, 630, 2089, 505, 281, 412, 1935, 483, 341, 493, 293, 2614, 11, 1673, 13], "temperature": 0.0, "avg_logprob": -0.12591594854990643, "compression_ratio": 1.690909090909091, "no_speech_prob": 2.9305801945156418e-05}, {"id": 210, "seek": 123128, "start": 1248.8, "end": 1254.08, "text": " And I don't know, I asked for a bit of review and got shocked responses to say like, no,", "tokens": [400, 286, 500, 380, 458, 11, 286, 2351, 337, 257, 857, 295, 3131, 293, 658, 12763, 13019, 281, 584, 411, 11, 572, 11], "temperature": 0.0, "avg_logprob": -0.12591594854990643, "compression_ratio": 1.690909090909091, "no_speech_prob": 2.9305801945156418e-05}, {"id": 211, "seek": 123128, "start": 1254.08, "end": 1258.08, "text": " you're doing this all wrong. Fork and X needs to be done per request and so on. So yeah, okay.", "tokens": [291, 434, 884, 341, 439, 2085, 13, 1171, 74, 293, 1783, 2203, 281, 312, 1096, 680, 5308, 293, 370, 322, 13, 407, 1338, 11, 1392, 13], "temperature": 0.0, "avg_logprob": -0.12591594854990643, "compression_ratio": 1.690909090909091, "no_speech_prob": 2.9305801945156418e-05}, {"id": 212, "seek": 125808, "start": 1258.08, "end": 1266.24, "text": " But at least functionally, it was already quite okay. And the repository code there is", "tokens": [583, 412, 1935, 2445, 379, 11, 309, 390, 1217, 1596, 1392, 13, 400, 264, 25841, 3089, 456, 307], "temperature": 0.0, "avg_logprob": -0.15182229450770787, "compression_ratio": 1.5254237288135593, "no_speech_prob": 2.8408139769453555e-05}, {"id": 213, "seek": 125808, "start": 1266.24, "end": 1271.76, "text": " reusing a lot of the code that I already had for like God admin and so on. So I mostly had to", "tokens": [319, 7981, 257, 688, 295, 264, 3089, 300, 286, 1217, 632, 337, 411, 1265, 24236, 293, 370, 322, 13, 407, 286, 5240, 632, 281], "temperature": 0.0, "avg_logprob": -0.15182229450770787, "compression_ratio": 1.5254237288135593, "no_speech_prob": 2.8408139769453555e-05}, {"id": 214, "seek": 125808, "start": 1271.76, "end": 1283.28, "text": " rewrite a lot of code for the parent process from scratch, which was all of this. This is", "tokens": [28132, 257, 688, 295, 3089, 337, 264, 2596, 1399, 490, 8459, 11, 597, 390, 439, 295, 341, 13, 639, 307], "temperature": 0.0, "avg_logprob": -0.15182229450770787, "compression_ratio": 1.5254237288135593, "no_speech_prob": 2.8408139769453555e-05}, {"id": 215, "seek": 128328, "start": 1283.28, "end": 1287.92, "text": " what it looks now. So the parent basically encompasses or used to encompass all of this", "tokens": [437, 309, 1542, 586, 13, 407, 264, 2596, 1936, 49866, 420, 1143, 281, 28268, 439, 295, 341], "temperature": 0.0, "avg_logprob": -0.15743242610584607, "compression_ratio": 1.6343612334801763, "no_speech_prob": 3.320377800264396e-05}, {"id": 216, "seek": 128328, "start": 1287.92, "end": 1294.0, "text": " functionality and we'll go through each one by one. So right now, in this current implementation,", "tokens": [14980, 293, 321, 603, 352, 807, 1184, 472, 538, 472, 13, 407, 558, 586, 11, 294, 341, 2190, 11420, 11], "temperature": 0.0, "avg_logprob": -0.15743242610584607, "compression_ratio": 1.6343612334801763, "no_speech_prob": 3.320377800264396e-05}, {"id": 217, "seek": 128328, "start": 1294.0, "end": 1300.72, "text": " you have the parent when it starts up, must start as root in order to be able to do certain things", "tokens": [291, 362, 264, 2596, 562, 309, 3719, 493, 11, 1633, 722, 382, 5593, 294, 1668, 281, 312, 1075, 281, 360, 1629, 721], "temperature": 0.0, "avg_logprob": -0.15743242610584607, "compression_ratio": 1.6343612334801763, "no_speech_prob": 3.320377800264396e-05}, {"id": 218, "seek": 128328, "start": 1300.72, "end": 1309.44, "text": " like open, like start the listener process as root, for example. And it uses pledge as", "tokens": [411, 1269, 11, 411, 722, 264, 31569, 1399, 382, 5593, 11, 337, 1365, 13, 400, 309, 4960, 26819, 382], "temperature": 0.0, "avg_logprob": -0.15743242610584607, "compression_ratio": 1.6343612334801763, "no_speech_prob": 3.320377800264396e-05}, {"id": 219, "seek": 130944, "start": 1309.44, "end": 1314.0, "text": " standard IO proc exact, which means basically standard is you always want that it's like", "tokens": [3832, 39839, 9510, 1900, 11, 597, 1355, 1936, 3832, 307, 291, 1009, 528, 300, 309, 311, 411], "temperature": 0.0, "avg_logprob": -0.1696314471108573, "compression_ratio": 1.757462686567164, "no_speech_prob": 3.8826994568808004e-05}, {"id": 220, "seek": 130944, "start": 1314.0, "end": 1318.96, "text": " printf and stuff like this. Then you have proc and exact, which allows you to fork and execute", "tokens": [4482, 69, 293, 1507, 411, 341, 13, 1396, 291, 362, 9510, 293, 1900, 11, 597, 4045, 291, 281, 17716, 293, 14483], "temperature": 0.0, "avg_logprob": -0.1696314471108573, "compression_ratio": 1.757462686567164, "no_speech_prob": 3.8826994568808004e-05}, {"id": 221, "seek": 130944, "start": 1318.96, "end": 1323.8400000000001, "text": " programs. And you can also send and receive file descriptors. And that's it what it can do.", "tokens": [4268, 13, 400, 291, 393, 611, 2845, 293, 4774, 3991, 31280, 830, 13, 400, 300, 311, 309, 437, 309, 393, 360, 13], "temperature": 0.0, "avg_logprob": -0.1696314471108573, "compression_ratio": 1.757462686567164, "no_speech_prob": 3.8826994568808004e-05}, {"id": 222, "seek": 130944, "start": 1324.48, "end": 1330.0800000000002, "text": " It also currently does an unveil on itself. So with an X permission, so it can re execute itself", "tokens": [467, 611, 4362, 775, 364, 31009, 388, 322, 2564, 13, 407, 365, 364, 1783, 11226, 11, 370, 309, 393, 319, 14483, 2564], "temperature": 0.0, "avg_logprob": -0.1696314471108573, "compression_ratio": 1.757462686567164, "no_speech_prob": 3.8826994568808004e-05}, {"id": 223, "seek": 130944, "start": 1330.0800000000002, "end": 1335.2, "text": " with different option flags to start other versions of itself, basically that we will start later.", "tokens": [365, 819, 3614, 23265, 281, 722, 661, 9606, 295, 2564, 11, 1936, 300, 321, 486, 722, 1780, 13], "temperature": 0.0, "avg_logprob": -0.1696314471108573, "compression_ratio": 1.757462686567164, "no_speech_prob": 3.8826994568808004e-05}, {"id": 224, "seek": 133520, "start": 1335.2, "end": 1341.6000000000001, "text": " I'm not sure if this is really sound because it used to be said that unveil would inherit to child", "tokens": [286, 478, 406, 988, 498, 341, 307, 534, 1626, 570, 309, 1143, 281, 312, 848, 300, 31009, 388, 576, 21389, 281, 1440], "temperature": 0.0, "avg_logprob": -0.18293001119372915, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.5935605915728956e-05}, {"id": 225, "seek": 133520, "start": 1341.6000000000001, "end": 1347.6000000000001, "text": " processes. And I'm not sure what happened to this. Currently, it does not. So it does not inherit,", "tokens": [7555, 13, 400, 286, 478, 406, 988, 437, 2011, 281, 341, 13, 19964, 11, 309, 775, 406, 13, 407, 309, 775, 406, 21389, 11], "temperature": 0.0, "avg_logprob": -0.18293001119372915, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.5935605915728956e-05}, {"id": 226, "seek": 133520, "start": 1347.6000000000001, "end": 1352.72, "text": " so I can do this and not lose access to, for example, the slash temp directory in the processes I'm", "tokens": [370, 286, 393, 360, 341, 293, 406, 3624, 2105, 281, 11, 337, 1365, 11, 264, 17330, 18274, 21120, 294, 264, 7555, 286, 478], "temperature": 0.0, "avg_logprob": -0.18293001119372915, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.5935605915728956e-05}, {"id": 227, "seek": 133520, "start": 1352.72, "end": 1357.04, "text": " starting next. But if that ever changes, we would have to adapt this, but it's not a big deal.", "tokens": [2891, 958, 13, 583, 498, 300, 1562, 2962, 11, 321, 576, 362, 281, 6231, 341, 11, 457, 309, 311, 406, 257, 955, 2028, 13], "temperature": 0.0, "avg_logprob": -0.18293001119372915, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.5935605915728956e-05}, {"id": 228, "seek": 135704, "start": 1357.04, "end": 1363.92, "text": " You start a listen process, which opens the actual Unix socket that this demon accepts connections on.", "tokens": [509, 722, 257, 2140, 1399, 11, 597, 9870, 264, 3539, 1156, 970, 19741, 300, 341, 14283, 33538, 9271, 322, 13], "temperature": 0.0, "avg_logprob": -0.198423085587748, "compression_ratio": 1.6074380165289257, "no_speech_prob": 3.0707848054589704e-05}, {"id": 229, "seek": 135704, "start": 1363.92, "end": 1368.08, "text": " So basically, if you're a local user on the system, you can always access it through the socket,", "tokens": [407, 1936, 11, 498, 291, 434, 257, 2654, 4195, 322, 264, 1185, 11, 291, 393, 1009, 2105, 309, 807, 264, 19741, 11], "temperature": 0.0, "avg_logprob": -0.198423085587748, "compression_ratio": 1.6074380165289257, "no_speech_prob": 3.0707848054589704e-05}, {"id": 230, "seek": 135704, "start": 1368.08, "end": 1373.36, "text": " but you would normally run this shell that we have to, which does this for you and speaks the", "tokens": [457, 291, 576, 5646, 1190, 341, 8720, 300, 321, 362, 281, 11, 597, 775, 341, 337, 291, 293, 10789, 264], "temperature": 0.0, "avg_logprob": -0.198423085587748, "compression_ratio": 1.6074380165289257, "no_speech_prob": 3.0707848054589704e-05}, {"id": 231, "seek": 135704, "start": 1373.36, "end": 1380.72, "text": " appropriate protocol. It then drops privileges. And the listen process runs as just standard IO", "tokens": [6854, 10336, 13, 467, 550, 11438, 32588, 13, 400, 264, 2140, 1399, 6676, 382, 445, 3832, 39839], "temperature": 0.0, "avg_logprob": -0.198423085587748, "compression_ratio": 1.6074380165289257, "no_speech_prob": 3.0707848054589704e-05}, {"id": 232, "seek": 138072, "start": 1380.72, "end": 1391.44, "text": " synaptic Unix. Unix is needed to operate on the Unix socket. It also does an unveil because", "tokens": [5451, 2796, 299, 1156, 970, 13, 1156, 970, 307, 2978, 281, 9651, 322, 264, 1156, 970, 19741, 13, 467, 611, 775, 364, 31009, 388, 570], "temperature": 0.0, "avg_logprob": -0.16686191021556585, "compression_ratio": 1.6114285714285714, "no_speech_prob": 4.9070586101152e-05}, {"id": 233, "seek": 138072, "start": 1392.64, "end": 1397.52, "text": " the Unix pledge allows you to bind other sockets and bind would create other sockets for you", "tokens": [264, 1156, 970, 26819, 4045, 291, 281, 14786, 661, 370, 11984, 293, 14786, 576, 1884, 661, 370, 11984, 337, 291], "temperature": 0.0, "avg_logprob": -0.16686191021556585, "compression_ratio": 1.6114285714285714, "no_speech_prob": 4.9070586101152e-05}, {"id": 234, "seek": 138072, "start": 1397.52, "end": 1404.72, "text": " somewhere. And we wanted to prevent that. So by unveiling everything, basically hiding everything", "tokens": [4079, 13, 400, 321, 1415, 281, 4871, 300, 13, 407, 538, 31009, 4883, 1203, 11, 1936, 10596, 1203], "temperature": 0.0, "avg_logprob": -0.16686191021556585, "compression_ratio": 1.6114285714285714, "no_speech_prob": 4.9070586101152e-05}, {"id": 235, "seek": 140472, "start": 1404.72, "end": 1413.52, "text": " with unveil, there's no way to create additional Unix sockets for this process. And this process", "tokens": [365, 31009, 388, 11, 456, 311, 572, 636, 281, 1884, 4497, 1156, 970, 370, 11984, 337, 341, 1399, 13, 400, 341, 1399], "temperature": 0.0, "avg_logprob": -0.10034403958163418, "compression_ratio": 1.6196581196581197, "no_speech_prob": 1.1841953892144375e-05}, {"id": 236, "seek": 140472, "start": 1413.52, "end": 1420.16, "text": " is also, as an initial kind of dust prevention mechanism, this enforces a connection limit", "tokens": [307, 611, 11, 382, 364, 5883, 733, 295, 8634, 14630, 7513, 11, 341, 25495, 887, 257, 4984, 4948], "temperature": 0.0, "avg_logprob": -0.10034403958163418, "compression_ratio": 1.6196581196581197, "no_speech_prob": 1.1841953892144375e-05}, {"id": 237, "seek": 140472, "start": 1420.16, "end": 1425.04, "text": " per UID so that not one user can just connect to the socket and spam it and prevent access for", "tokens": [680, 624, 2777, 370, 300, 406, 472, 4195, 393, 445, 1745, 281, 264, 19741, 293, 24028, 309, 293, 4871, 2105, 337], "temperature": 0.0, "avg_logprob": -0.10034403958163418, "compression_ratio": 1.6196581196581197, "no_speech_prob": 1.1841953892144375e-05}, {"id": 238, "seek": 140472, "start": 1425.04, "end": 1433.2, "text": " everyone else. Now, the shell is one of the most sensitive parts because this is where users log", "tokens": [1518, 1646, 13, 823, 11, 264, 8720, 307, 472, 295, 264, 881, 9477, 3166, 570, 341, 307, 689, 5022, 3565], "temperature": 0.0, "avg_logprob": -0.10034403958163418, "compression_ratio": 1.6196581196581197, "no_speech_prob": 1.1841953892144375e-05}, {"id": 239, "seek": 143320, "start": 1433.2, "end": 1438.96, "text": " in and you actually confine them to this program. So you want this to be reasonably secure. It starts", "tokens": [294, 293, 291, 767, 1497, 533, 552, 281, 341, 1461, 13, 407, 291, 528, 341, 281, 312, 23551, 7144, 13, 467, 3719], "temperature": 0.0, "avg_logprob": -0.12991497072122865, "compression_ratio": 1.6808510638297873, "no_speech_prob": 9.311395115219057e-05}, {"id": 240, "seek": 143320, "start": 1438.96, "end": 1444.64, "text": " out with standard IO, receive FDN Unix to be able to connect to the Unix socket. But once it's", "tokens": [484, 365, 3832, 39839, 11, 4774, 479, 35, 45, 1156, 970, 281, 312, 1075, 281, 1745, 281, 264, 1156, 970, 19741, 13, 583, 1564, 309, 311], "temperature": 0.0, "avg_logprob": -0.12991497072122865, "compression_ratio": 1.6808510638297873, "no_speech_prob": 9.311395115219057e-05}, {"id": 241, "seek": 143320, "start": 1444.64, "end": 1449.52, "text": " connected, it drops that capability so it can no longer open new ones or do other things related", "tokens": [4582, 11, 309, 11438, 300, 13759, 370, 309, 393, 572, 2854, 1269, 777, 2306, 420, 360, 661, 721, 4077], "temperature": 0.0, "avg_logprob": -0.12991497072122865, "compression_ratio": 1.6808510638297873, "no_speech_prob": 9.311395115219057e-05}, {"id": 242, "seek": 143320, "start": 1449.52, "end": 1454.96, "text": " to that. It only has a file of scripture it can talk on. And that's it. And then it starts", "tokens": [281, 300, 13, 467, 787, 575, 257, 3991, 295, 24783, 309, 393, 751, 322, 13, 400, 300, 311, 309, 13, 400, 550, 309, 3719], "temperature": 0.0, "avg_logprob": -0.12991497072122865, "compression_ratio": 1.6808510638297873, "no_speech_prob": 9.311395115219057e-05}, {"id": 243, "seek": 143320, "start": 1454.96, "end": 1460.0800000000002, "text": " demonstrating these packet lines that we saw to messages that are internal to the program", "tokens": [29889, 613, 20300, 3876, 300, 321, 1866, 281, 7897, 300, 366, 6920, 281, 264, 1461], "temperature": 0.0, "avg_logprob": -0.12991497072122865, "compression_ratio": 1.6808510638297873, "no_speech_prob": 9.311395115219057e-05}, {"id": 244, "seek": 146008, "start": 1460.08, "end": 1470.8799999999999, "text": " and go over the pipe to the parent. The parent will then start an authorization process which", "tokens": [293, 352, 670, 264, 11240, 281, 264, 2596, 13, 440, 2596, 486, 550, 722, 364, 33697, 1399, 597], "temperature": 0.0, "avg_logprob": -0.10939854244853175, "compression_ratio": 1.441860465116279, "no_speech_prob": 2.5069974071811885e-05}, {"id": 245, "seek": 146008, "start": 1470.8799999999999, "end": 1480.96, "text": " only runs once. And what this does is it gives itself access to the password database of the", "tokens": [787, 6676, 1564, 13, 400, 437, 341, 775, 307, 309, 2709, 2564, 2105, 281, 264, 11524, 8149, 295, 264], "temperature": 0.0, "avg_logprob": -0.10939854244853175, "compression_ratio": 1.441860465116279, "no_speech_prob": 2.5069974071811885e-05}, {"id": 246, "seek": 148096, "start": 1480.96, "end": 1490.4, "text": " system using the SCAT-PW syscall and also hides all the file system. And I think this is, this", "tokens": [1185, 1228, 264, 9028, 2218, 12, 47, 54, 262, 749, 45459, 293, 611, 35953, 439, 264, 3991, 1185, 13, 400, 286, 519, 341, 307, 11, 341], "temperature": 0.0, "avg_logprob": -0.19553710418997458, "compression_ratio": 1.5524193548387097, "no_speech_prob": 1.4284474673331715e-05}, {"id": 247, "seek": 148096, "start": 1490.4, "end": 1495.6000000000001, "text": " shows something very nice about Pledge and Unveil when used in combination because I'm actually", "tokens": [3110, 746, 588, 1481, 466, 430, 3042, 293, 1156, 303, 388, 562, 1143, 294, 6562, 570, 286, 478, 767], "temperature": 0.0, "avg_logprob": -0.19553710418997458, "compression_ratio": 1.5524193548387097, "no_speech_prob": 1.4284474673331715e-05}, {"id": 248, "seek": 148096, "start": 1495.6000000000001, "end": 1501.92, "text": " reading ETC password and ETC group files, right? But Unveil, as per Unveil, I shouldn't be able to", "tokens": [3760, 462, 18238, 11524, 293, 462, 18238, 1594, 7098, 11, 558, 30, 583, 1156, 303, 388, 11, 382, 680, 1156, 303, 388, 11, 286, 4659, 380, 312, 1075, 281], "temperature": 0.0, "avg_logprob": -0.19553710418997458, "compression_ratio": 1.5524193548387097, "no_speech_prob": 1.4284474673331715e-05}, {"id": 249, "seek": 148096, "start": 1501.92, "end": 1508.0, "text": " access those. But because I declared that I want to use the password database, the kernel knows", "tokens": [2105, 729, 13, 583, 570, 286, 15489, 300, 286, 528, 281, 764, 264, 11524, 8149, 11, 264, 28256, 3255], "temperature": 0.0, "avg_logprob": -0.19553710418997458, "compression_ratio": 1.5524193548387097, "no_speech_prob": 1.4284474673331715e-05}, {"id": 250, "seek": 150800, "start": 1508.0, "end": 1513.68, "text": " that this process is okay. It's okay for this process to access those files. So it bypasses", "tokens": [300, 341, 1399, 307, 1392, 13, 467, 311, 1392, 337, 341, 1399, 281, 2105, 729, 7098, 13, 407, 309, 24996, 279], "temperature": 0.0, "avg_logprob": -0.09306134052158142, "compression_ratio": 1.7962382445141065, "no_speech_prob": 2.668546403583605e-05}, {"id": 251, "seek": 150800, "start": 1513.68, "end": 1518.4, "text": " Unveil in that specific case. Which means I don't have to worry about how the security mechanism", "tokens": [1156, 303, 388, 294, 300, 2685, 1389, 13, 3013, 1355, 286, 500, 380, 362, 281, 3292, 466, 577, 264, 3825, 7513], "temperature": 0.0, "avg_logprob": -0.09306134052158142, "compression_ratio": 1.7962382445141065, "no_speech_prob": 2.668546403583605e-05}, {"id": 252, "seek": 150800, "start": 1518.4, "end": 1523.52, "text": " is implemented. I don't have to go and say, oh, is my libc when I ask for users going to open this", "tokens": [307, 12270, 13, 286, 500, 380, 362, 281, 352, 293, 584, 11, 1954, 11, 307, 452, 22854, 66, 562, 286, 1029, 337, 5022, 516, 281, 1269, 341], "temperature": 0.0, "avg_logprob": -0.09306134052158142, "compression_ratio": 1.7962382445141065, "no_speech_prob": 2.668546403583605e-05}, {"id": 253, "seek": 150800, "start": 1523.52, "end": 1528.0, "text": " file? Well, maybe I should add an exception for that. Or is it going to do this and such and such", "tokens": [3991, 30, 1042, 11, 1310, 286, 820, 909, 364, 11183, 337, 300, 13, 1610, 307, 309, 516, 281, 360, 341, 293, 1270, 293, 1270], "temperature": 0.0, "avg_logprob": -0.09306134052158142, "compression_ratio": 1.7962382445141065, "no_speech_prob": 2.668546403583605e-05}, {"id": 254, "seek": 150800, "start": 1528.0, "end": 1533.68, "text": " syscall? I don't have to worry. I just say like, Pledge, I will do that. And Unveil, I will do", "tokens": [262, 749, 45459, 30, 286, 500, 380, 362, 281, 3292, 13, 286, 445, 584, 411, 11, 430, 3042, 11, 286, 486, 360, 300, 13, 400, 1156, 303, 388, 11, 286, 486, 360], "temperature": 0.0, "avg_logprob": -0.09306134052158142, "compression_ratio": 1.7962382445141065, "no_speech_prob": 2.668546403583605e-05}, {"id": 255, "seek": 150800, "start": 1533.68, "end": 1537.44, "text": " that. And they take care of it, which is great for a programmer. It's really nice to program", "tokens": [300, 13, 400, 436, 747, 1127, 295, 309, 11, 597, 307, 869, 337, 257, 32116, 13, 467, 311, 534, 1481, 281, 1461], "temperature": 0.0, "avg_logprob": -0.09306134052158142, "compression_ratio": 1.7962382445141065, "no_speech_prob": 2.668546403583605e-05}, {"id": 256, "seek": 153744, "start": 1537.44, "end": 1543.92, "text": " against this. So what this process then does, of course, is matches the users that are logged in", "tokens": [1970, 341, 13, 407, 437, 341, 1399, 550, 775, 11, 295, 1164, 11, 307, 10676, 264, 5022, 300, 366, 27231, 294], "temperature": 0.0, "avg_logprob": -0.09968463376037076, "compression_ratio": 1.6774193548387097, "no_speech_prob": 1.982846333703492e-05}, {"id": 257, "seek": 153744, "start": 1543.92, "end": 1548.64, "text": " against the access rules in the config file you saw earlier and reports the result to the parent", "tokens": [1970, 264, 2105, 4474, 294, 264, 6662, 3991, 291, 1866, 3071, 293, 7122, 264, 1874, 281, 264, 2596], "temperature": 0.0, "avg_logprob": -0.09968463376037076, "compression_ratio": 1.6774193548387097, "no_speech_prob": 1.982846333703492e-05}, {"id": 258, "seek": 153744, "start": 1548.64, "end": 1554.64, "text": " and just exits because that's all it needs to do. It's just a one-shot thing. Now, the parent", "tokens": [293, 445, 44183, 570, 300, 311, 439, 309, 2203, 281, 360, 13, 467, 311, 445, 257, 472, 12, 18402, 551, 13, 823, 11, 264, 2596], "temperature": 0.0, "avg_logprob": -0.09968463376037076, "compression_ratio": 1.6774193548387097, "no_speech_prob": 1.982846333703492e-05}, {"id": 259, "seek": 153744, "start": 1555.92, "end": 1561.8400000000001, "text": " starts two processes if authorization has succeeded. And the shell is kind of waiting", "tokens": [3719, 732, 7555, 498, 33697, 575, 20263, 13, 400, 264, 8720, 307, 733, 295, 3806], "temperature": 0.0, "avg_logprob": -0.09968463376037076, "compression_ratio": 1.6774193548387097, "no_speech_prob": 1.982846333703492e-05}, {"id": 260, "seek": 153744, "start": 1561.8400000000001, "end": 1565.44, "text": " because it's like, hey, I sent a message, but you haven't responded yet. But yeah, we're busy,", "tokens": [570, 309, 311, 411, 11, 4177, 11, 286, 2279, 257, 3636, 11, 457, 291, 2378, 380, 15806, 1939, 13, 583, 1338, 11, 321, 434, 5856, 11], "temperature": 0.0, "avg_logprob": -0.09968463376037076, "compression_ratio": 1.6774193548387097, "no_speech_prob": 1.982846333703492e-05}, {"id": 261, "seek": 156544, "start": 1565.44, "end": 1573.92, "text": " we're setting up. So we start two things right now, a session process and a repository read or", "tokens": [321, 434, 3287, 493, 13, 407, 321, 722, 732, 721, 558, 586, 11, 257, 5481, 1399, 293, 257, 25841, 1401, 420], "temperature": 0.0, "avg_logprob": -0.07277893490261501, "compression_ratio": 1.6724137931034482, "no_speech_prob": 3.373280196683481e-05}, {"id": 262, "seek": 156544, "start": 1573.92, "end": 1580.0800000000002, "text": " write process. Currently, the naming of these is horribly bad. It just was the best I could come", "tokens": [2464, 1399, 13, 19964, 11, 264, 25290, 295, 613, 307, 45028, 1578, 13, 467, 445, 390, 264, 1151, 286, 727, 808], "temperature": 0.0, "avg_logprob": -0.07277893490261501, "compression_ratio": 1.6724137931034482, "no_speech_prob": 3.373280196683481e-05}, {"id": 263, "seek": 156544, "start": 1580.0800000000002, "end": 1585.3600000000001, "text": " up with. And it kind of grew organically from the initial setup with those three processes you saw", "tokens": [493, 365, 13, 400, 309, 733, 295, 6109, 1798, 984, 490, 264, 5883, 8657, 365, 729, 1045, 7555, 291, 1866], "temperature": 0.0, "avg_logprob": -0.07277893490261501, "compression_ratio": 1.6724137931034482, "no_speech_prob": 3.373280196683481e-05}, {"id": 264, "seek": 156544, "start": 1585.3600000000001, "end": 1590.3200000000002, "text": " earlier. But for example, the repository write process is not actually writing to the repository,", "tokens": [3071, 13, 583, 337, 1365, 11, 264, 25841, 2464, 1399, 307, 406, 767, 3579, 281, 264, 25841, 11], "temperature": 0.0, "avg_logprob": -0.07277893490261501, "compression_ratio": 1.6724137931034482, "no_speech_prob": 3.373280196683481e-05}, {"id": 265, "seek": 159032, "start": 1590.32, "end": 1596.24, "text": " which you'll see later. So I'm not very happy about this. And also, the session process is", "tokens": [597, 291, 603, 536, 1780, 13, 407, 286, 478, 406, 588, 2055, 466, 341, 13, 400, 611, 11, 264, 5481, 1399, 307], "temperature": 0.0, "avg_logprob": -0.11584702053585567, "compression_ratio": 1.6974169741697418, "no_speech_prob": 1.30057360365754e-05}, {"id": 266, "seek": 159032, "start": 1596.24, "end": 1602.48, "text": " basically the most powerful component of the system right now. It's the only one that can", "tokens": [1936, 264, 881, 4005, 6542, 295, 264, 1185, 558, 586, 13, 467, 311, 264, 787, 472, 300, 393], "temperature": 0.0, "avg_logprob": -0.11584702053585567, "compression_ratio": 1.6974169741697418, "no_speech_prob": 1.30057360365754e-05}, {"id": 267, "seek": 159032, "start": 1602.48, "end": 1606.96, "text": " actually read, write, the repository and create files in there. It can also do the same as slash", "tokens": [767, 1401, 11, 2464, 11, 264, 25841, 293, 1884, 7098, 294, 456, 13, 467, 393, 611, 360, 264, 912, 382, 17330], "temperature": 0.0, "avg_logprob": -0.11584702053585567, "compression_ratio": 1.6974169741697418, "no_speech_prob": 1.30057360365754e-05}, {"id": 268, "seek": 159032, "start": 1606.96, "end": 1612.24, "text": " temp. And for that, it needs all these pledges with like read path, write path, create path.", "tokens": [18274, 13, 400, 337, 300, 11, 309, 2203, 439, 613, 34263, 2880, 365, 411, 1401, 3100, 11, 2464, 3100, 11, 1884, 3100, 13], "temperature": 0.0, "avg_logprob": -0.11584702053585567, "compression_ratio": 1.6974169741697418, "no_speech_prob": 1.30057360365754e-05}, {"id": 269, "seek": 159032, "start": 1612.8, "end": 1617.2, "text": " And it also needs file attributes and file locking because when it changes references for", "tokens": [400, 309, 611, 2203, 3991, 17212, 293, 3991, 23954, 570, 562, 309, 2962, 15400, 337], "temperature": 0.0, "avg_logprob": -0.11584702053585567, "compression_ratio": 1.6974169741697418, "no_speech_prob": 1.30057360365754e-05}, {"id": 270, "seek": 161720, "start": 1617.2, "end": 1621.68, "text": " clients, it needs to make sure that they get locked so that you don't have file system races", "tokens": [6982, 11, 309, 2203, 281, 652, 988, 300, 436, 483, 9376, 370, 300, 291, 500, 380, 362, 3991, 1185, 15484], "temperature": 0.0, "avg_logprob": -0.1173605051907626, "compression_ratio": 1.6702898550724639, "no_speech_prob": 2.3918435545056127e-05}, {"id": 271, "seek": 161720, "start": 1621.68, "end": 1626.4, "text": " where two clients commit at the same time and then you end up with a reference that's been", "tokens": [689, 732, 6982, 5599, 412, 264, 912, 565, 293, 550, 291, 917, 493, 365, 257, 6408, 300, 311, 668], "temperature": 0.0, "avg_logprob": -0.1173605051907626, "compression_ratio": 1.6702898550724639, "no_speech_prob": 2.3918435545056127e-05}, {"id": 272, "seek": 161720, "start": 1626.4, "end": 1633.68, "text": " overwritten. It also creates temporary files, which the repository process needs and gives it", "tokens": [670, 26859, 13, 467, 611, 7829, 13413, 7098, 11, 597, 264, 25841, 1399, 2203, 293, 2709, 309], "temperature": 0.0, "avg_logprob": -0.1173605051907626, "compression_ratio": 1.6702898550724639, "no_speech_prob": 2.3918435545056127e-05}, {"id": 273, "seek": 161720, "start": 1633.68, "end": 1639.44, "text": " the file descriptors. It handles installing of the pack files and so on. And it has the", "tokens": [264, 3991, 31280, 830, 13, 467, 18722, 20762, 295, 264, 2844, 7098, 293, 370, 322, 13, 400, 309, 575, 264], "temperature": 0.0, "avg_logprob": -0.1173605051907626, "compression_ratio": 1.6702898550724639, "no_speech_prob": 2.3918435545056127e-05}, {"id": 274, "seek": 161720, "start": 1639.44, "end": 1647.1200000000001, "text": " git protocol state machine in it. So that's a bit, I would like to continue work there to split", "tokens": [18331, 10336, 1785, 3479, 294, 309, 13, 407, 300, 311, 257, 857, 11, 286, 576, 411, 281, 2354, 589, 456, 281, 7472], "temperature": 0.0, "avg_logprob": -0.1173605051907626, "compression_ratio": 1.6702898550724639, "no_speech_prob": 2.3918435545056127e-05}, {"id": 275, "seek": 164712, "start": 1647.12, "end": 1652.2399999999998, "text": " this up more, but because I had to have a functional implementation and I had to, like,", "tokens": [341, 493, 544, 11, 457, 570, 286, 632, 281, 362, 257, 11745, 11420, 293, 286, 632, 281, 11, 411, 11], "temperature": 0.0, "avg_logprob": -0.1137369069186124, "compression_ratio": 1.7450980392156863, "no_speech_prob": 2.4678212867002003e-05}, {"id": 276, "seek": 164712, "start": 1652.2399999999998, "end": 1656.4799999999998, "text": " I wanted to have something functional to clone from, which is there now, which is on the internet.", "tokens": [286, 1415, 281, 362, 746, 11745, 281, 26506, 490, 11, 597, 307, 456, 586, 11, 597, 307, 322, 264, 4705, 13], "temperature": 0.0, "avg_logprob": -0.1137369069186124, "compression_ratio": 1.7450980392156863, "no_speech_prob": 2.4678212867002003e-05}, {"id": 277, "seek": 164712, "start": 1656.4799999999998, "end": 1660.6399999999999, "text": " That's fine. But going forward, this needs to be revisited for sure.", "tokens": [663, 311, 2489, 13, 583, 516, 2128, 11, 341, 2203, 281, 312, 20767, 1226, 337, 988, 13], "temperature": 0.0, "avg_logprob": -0.1137369069186124, "compression_ratio": 1.7450980392156863, "no_speech_prob": 2.4678212867002003e-05}, {"id": 278, "seek": 164712, "start": 1664.1599999999999, "end": 1668.6399999999999, "text": " The repository read and write process is apart from the name for repo write. I'm okay with", "tokens": [440, 25841, 1401, 293, 2464, 1399, 307, 4936, 490, 264, 1315, 337, 49040, 2464, 13, 286, 478, 1392, 365], "temperature": 0.0, "avg_logprob": -0.1137369069186124, "compression_ratio": 1.7450980392156863, "no_speech_prob": 2.4678212867002003e-05}, {"id": 279, "seek": 166864, "start": 1668.64, "end": 1676.8000000000002, "text": " how that's worked out. Both of them can only read from the repository. And what the reader does is", "tokens": [577, 300, 311, 2732, 484, 13, 6767, 295, 552, 393, 787, 1401, 490, 264, 25841, 13, 400, 437, 264, 15149, 775, 307], "temperature": 0.0, "avg_logprob": -0.08526420593261719, "compression_ratio": 1.5852272727272727, "no_speech_prob": 1.8627060853759758e-05}, {"id": 280, "seek": 166864, "start": 1677.5200000000002, "end": 1683.1200000000001, "text": " it is responsible for creating a pack file and streaming the result to the God shell over", "tokens": [309, 307, 6250, 337, 4084, 257, 2844, 3991, 293, 11791, 264, 1874, 281, 264, 1265, 8720, 670], "temperature": 0.0, "avg_logprob": -0.08526420593261719, "compression_ratio": 1.5852272727272727, "no_speech_prob": 1.8627060853759758e-05}, {"id": 281, "seek": 166864, "start": 1683.1200000000001, "end": 1688.88, "text": " a pipe that is created by the session process and handed to both the shell and the reader.", "tokens": [257, 11240, 300, 307, 2942, 538, 264, 5481, 1399, 293, 16013, 281, 1293, 264, 8720, 293, 264, 15149, 13], "temperature": 0.0, "avg_logprob": -0.08526420593261719, "compression_ratio": 1.5852272727272727, "no_speech_prob": 1.8627060853759758e-05}, {"id": 282, "seek": 168888, "start": 1688.88, "end": 1698.88, "text": " And the writer is responsible for receiving a pack file and indexing it. So the indexing", "tokens": [400, 264, 9936, 307, 6250, 337, 10040, 257, 2844, 3991, 293, 8186, 278, 309, 13, 407, 264, 8186, 278], "temperature": 0.0, "avg_logprob": -0.13833634571362569, "compression_ratio": 1.6517857142857142, "no_speech_prob": 2.4677307010279037e-05}, {"id": 283, "seek": 168888, "start": 1698.88, "end": 1707.2800000000002, "text": " is almost done. So the indexing is done there. Okay. I have one minute left, one minute and", "tokens": [307, 1920, 1096, 13, 407, 264, 8186, 278, 307, 1096, 456, 13, 1033, 13, 286, 362, 472, 3456, 1411, 11, 472, 3456, 293], "temperature": 0.0, "avg_logprob": -0.13833634571362569, "compression_ratio": 1.6517857142857142, "no_speech_prob": 2.4677307010279037e-05}, {"id": 284, "seek": 168888, "start": 1707.2800000000002, "end": 1712.64, "text": " a half. I quickly go through some implementation improvements. It's still like to do. So we should", "tokens": [257, 1922, 13, 286, 2661, 352, 807, 512, 11420, 13797, 13, 467, 311, 920, 411, 281, 360, 13, 407, 321, 820], "temperature": 0.0, "avg_logprob": -0.13833634571362569, "compression_ratio": 1.6517857142857142, "no_speech_prob": 2.4677307010279037e-05}, {"id": 285, "seek": 168888, "start": 1712.64, "end": 1717.44, "text": " verify what the client has uploaded. Currently we trust it, what to do. The config file is", "tokens": [16888, 437, 264, 6423, 575, 17135, 13, 19964, 321, 3361, 309, 11, 437, 281, 360, 13, 440, 6662, 3991, 307], "temperature": 0.0, "avg_logprob": -0.13833634571362569, "compression_ratio": 1.6517857142857142, "no_speech_prob": 2.4677307010279037e-05}, {"id": 286, "seek": 171744, "start": 1717.44, "end": 1721.28, "text": " parsed every time a process starts, which isn't ideal, which works, but it's bad if you're changing", "tokens": [21156, 292, 633, 565, 257, 1399, 3719, 11, 597, 1943, 380, 7157, 11, 597, 1985, 11, 457, 309, 311, 1578, 498, 291, 434, 4473], "temperature": 0.0, "avg_logprob": -0.13556672555428964, "compression_ratio": 1.7395209580838322, "no_speech_prob": 5.1412691391306e-05}, {"id": 287, "seek": 171744, "start": 1721.28, "end": 1727.44, "text": " the file while the process is running. Yeah, session I already mentioned. And the state machines", "tokens": [264, 3991, 1339, 264, 1399, 307, 2614, 13, 865, 11, 5481, 286, 1217, 2835, 13, 400, 264, 1785, 8379], "temperature": 0.0, "avg_logprob": -0.13556672555428964, "compression_ratio": 1.7395209580838322, "no_speech_prob": 5.1412691391306e-05}, {"id": 288, "seek": 171744, "start": 1727.44, "end": 1731.1200000000001, "text": " have some funny bugs. So these really need to be rewritten. They're basically like switch statements", "tokens": [362, 512, 4074, 15120, 13, 407, 613, 534, 643, 281, 312, 319, 26859, 13, 814, 434, 1936, 411, 3679, 12363], "temperature": 0.0, "avg_logprob": -0.13556672555428964, "compression_ratio": 1.7395209580838322, "no_speech_prob": 5.1412691391306e-05}, {"id": 289, "seek": 171744, "start": 1731.1200000000001, "end": 1735.52, "text": " and if and so on. And I'd like to properly separate that out with tables and state transition", "tokens": [293, 498, 293, 370, 322, 13, 400, 286, 1116, 411, 281, 6108, 4994, 300, 484, 365, 8020, 293, 1785, 6034], "temperature": 0.0, "avg_logprob": -0.13556672555428964, "compression_ratio": 1.7395209580838322, "no_speech_prob": 5.1412691391306e-05}, {"id": 290, "seek": 171744, "start": 1735.52, "end": 1740.56, "text": " functions and so on. But it was just a quick way of getting things working. But we already saw", "tokens": [6828, 293, 370, 322, 13, 583, 309, 390, 445, 257, 1702, 636, 295, 1242, 721, 1364, 13, 583, 321, 1217, 1866], "temperature": 0.0, "avg_logprob": -0.13556672555428964, "compression_ratio": 1.7395209580838322, "no_speech_prob": 5.1412691391306e-05}, {"id": 291, "seek": 171744, "start": 1740.56, "end": 1746.16, "text": " like thousands of flash packets flying through this process because an end of file on a socket", "tokens": [411, 5383, 295, 7319, 30364, 7137, 807, 341, 1399, 570, 364, 917, 295, 3991, 322, 257, 19741], "temperature": 0.0, "avg_logprob": -0.13556672555428964, "compression_ratio": 1.7395209580838322, "no_speech_prob": 5.1412691391306e-05}, {"id": 292, "seek": 174616, "start": 1746.16, "end": 1751.68, "text": " triggered a flash packet and that was kind of stupid. This has been fixed, but there will still", "tokens": [21710, 257, 7319, 20300, 293, 300, 390, 733, 295, 6631, 13, 639, 575, 668, 6806, 11, 457, 456, 486, 920], "temperature": 0.0, "avg_logprob": -0.11667327880859375, "compression_ratio": 1.5879828326180256, "no_speech_prob": 3.0675972084281966e-05}, {"id": 293, "seek": 174616, "start": 1751.68, "end": 1760.64, "text": " be other bugs like that. We should have some built-in checks so that commits can be verified", "tokens": [312, 661, 15120, 411, 300, 13, 492, 820, 362, 512, 3094, 12, 259, 13834, 370, 300, 48311, 393, 312, 31197], "temperature": 0.0, "avg_logprob": -0.11667327880859375, "compression_ratio": 1.5879828326180256, "no_speech_prob": 3.0675972084281966e-05}, {"id": 294, "seek": 174616, "start": 1760.64, "end": 1765.6000000000001, "text": " according to project policies and things like denying merge commits if you don't want them", "tokens": [4650, 281, 1716, 7657, 293, 721, 411, 30363, 22183, 48311, 498, 291, 500, 380, 528, 552], "temperature": 0.0, "avg_logprob": -0.11667327880859375, "compression_ratio": 1.5879828326180256, "no_speech_prob": 3.0675972084281966e-05}, {"id": 295, "seek": 174616, "start": 1765.6000000000001, "end": 1773.0400000000002, "text": " or binary files and so on, preventing a forced push. I'd like to have commit notifications", "tokens": [420, 17434, 7098, 293, 370, 322, 11, 19965, 257, 7579, 2944, 13, 286, 1116, 411, 281, 362, 5599, 13426], "temperature": 0.0, "avg_logprob": -0.11667327880859375, "compression_ratio": 1.5879828326180256, "no_speech_prob": 3.0675972084281966e-05}, {"id": 296, "seek": 177304, "start": 1773.04, "end": 1777.36, "text": " where you, for example, send an email or you can send an arbitrary HTTP request so that", "tokens": [689, 291, 11, 337, 1365, 11, 2845, 364, 3796, 420, 291, 393, 2845, 364, 23211, 33283, 5308, 370, 300], "temperature": 0.0, "avg_logprob": -0.11477447856556286, "compression_ratio": 1.6035714285714286, "no_speech_prob": 3.023783392563928e-05}, {"id": 297, "seek": 177304, "start": 1777.36, "end": 1780.6399999999999, "text": " if you really want to have a post-commit hook script, you run it somewhere else and we'll", "tokens": [498, 291, 534, 528, 281, 362, 257, 2183, 12, 1112, 3508, 6328, 5755, 11, 291, 1190, 309, 4079, 1646, 293, 321, 603], "temperature": 0.0, "avg_logprob": -0.11477447856556286, "compression_ratio": 1.6035714285714286, "no_speech_prob": 3.023783392563928e-05}, {"id": 298, "seek": 177304, "start": 1780.6399999999999, "end": 1788.6399999999999, "text": " give you information and trigger it. Yeah, also it should really keep track of what this space", "tokens": [976, 291, 1589, 293, 7875, 309, 13, 865, 11, 611, 309, 820, 534, 1066, 2837, 295, 437, 341, 1901], "temperature": 0.0, "avg_logprob": -0.11477447856556286, "compression_ratio": 1.6035714285714286, "no_speech_prob": 3.023783392563928e-05}, {"id": 299, "seek": 177304, "start": 1788.6399999999999, "end": 1794.8, "text": " it has when it accepts pack files and not fill the disk and fail. We should be able to remove", "tokens": [309, 575, 562, 309, 33538, 2844, 7098, 293, 406, 2836, 264, 12355, 293, 3061, 13, 492, 820, 312, 1075, 281, 4159], "temperature": 0.0, "avg_logprob": -0.11477447856556286, "compression_ratio": 1.6035714285714286, "no_speech_prob": 3.023783392563928e-05}, {"id": 300, "seek": 177304, "start": 1794.8, "end": 1800.08, "text": " redundant pack files that have accumulated over time. I'd like to add SHA2 support", "tokens": [40997, 2844, 7098, 300, 362, 31346, 670, 565, 13, 286, 1116, 411, 281, 909, 38820, 17, 1406], "temperature": 0.0, "avg_logprob": -0.11477447856556286, "compression_ratio": 1.6035714285714286, "no_speech_prob": 3.023783392563928e-05}, {"id": 301, "seek": 180008, "start": 1800.08, "end": 1806.3999999999999, "text": " and enable it by default once that works so that we use the SHA2 because we have zero", "tokens": [293, 9528, 309, 538, 7576, 1564, 300, 1985, 370, 300, 321, 764, 264, 38820, 17, 570, 321, 362, 4018], "temperature": 0.0, "avg_logprob": -0.16183858375026755, "compression_ratio": 1.4712041884816753, "no_speech_prob": 2.8400412702467293e-05}, {"id": 302, "seek": 180008, "start": 1806.3999999999999, "end": 1811.28, "text": " production deployments right now and unlike it, so we can just use the new format they've already", "tokens": [4265, 7274, 1117, 558, 586, 293, 8343, 309, 11, 370, 321, 393, 445, 764, 264, 777, 7877, 436, 600, 1217], "temperature": 0.0, "avg_logprob": -0.16183858375026755, "compression_ratio": 1.4712041884816753, "no_speech_prob": 2.8400412702467293e-05}, {"id": 303, "seek": 180008, "start": 1811.28, "end": 1817.04, "text": " defined. Service at rebasing is another thing. I'm out of time, so I'm not going to go into that,", "tokens": [7642, 13, 9561, 412, 12970, 3349, 307, 1071, 551, 13, 286, 478, 484, 295, 565, 11, 370, 286, 478, 406, 516, 281, 352, 666, 300, 11], "temperature": 0.0, "avg_logprob": -0.16183858375026755, "compression_ratio": 1.4712041884816753, "no_speech_prob": 2.8400412702467293e-05}, {"id": 304, "seek": 181704, "start": 1817.04, "end": 1831.12, "text": " but I think this is it. Sorry for the quick part of you. Thank you very much. I", "tokens": [457, 286, 519, 341, 307, 309, 13, 4919, 337, 264, 1702, 644, 295, 291, 13, 1044, 291, 588, 709, 13, 286], "temperature": 0.0, "avg_logprob": -0.2455841064453125, "compression_ratio": 1.025974025974026, "no_speech_prob": 0.0006895565893501043}, {"id": 305, "seek": 183112, "start": 1831.12, "end": 1847.9199999999998, "text": " encourage you to ask a question about the hallway. Okay, good.", "tokens": [50364, 5373, 291, 281, 1029, 257, 1168, 466, 264, 23903, 13, 1033, 11, 665, 13, 51204], "temperature": 0.0, "avg_logprob": -0.5026564878575942, "compression_ratio": 0.9538461538461539, "no_speech_prob": 0.0015283816028386354}], "language": "en"}