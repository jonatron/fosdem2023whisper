{"text": " Okay, so hello, I'm Pavel Majek and I'm here to talk about cameras, but you can also talk to me about clicker train horses, mobile phones, kernel, smartwatch by based on ESP32, Mobian on my molester. So first thing first, video following is not for cameras, it's for frame grabbers and they are really very different, which is basically what this talk will be about. They can do remote controls, but they cannot do autofocus for you and so on. But the interface is fairly simple, you just open depth video zero, select format and capture. Unfortunately, what you get is blurry photo, which will be either all white or all all black. This is with autofocus and auto something. Anyway, they are phones with smart sensors, one such example is pine phone and those are pretty close to the frame grabbers. They do basically everything in hardware. This used to be a pretty common design in the past, which made a good sense at that point because USB had limited bandwidth and you could not push uncompressed data through it. It's easy to sanitize, but it doesn't make much sense today. If you have like five lens on your phone, you don't want to have five JPEG encoders there. So we are moving to dump sensors, which basically do bare minimum. There you set parameters like exposure, gain, select area and so on. And it just passes the bare data over the fast bus and it usually ends up in your memory. And then you have component called ESP, which is image signal processor, which will do the JPEG conversion and such stuff. Unfortunately, in case of the interesting phones, which is official LibreM5, pine phone and pine phone pro, we either don't have the processor or we don't have drivers for that, so we can't use it. So this is how the image, this is a photo if you try to take it without the automatics. Can you recognize what's there? It's a USB connector. It's recognizable, I'd say. So what do we need to do? Nokia N900 is another example of complex design, which used to be very important historically. And actually the photos in the presentation are from N900 with open source stack. In real time, you need to do auto exposure because otherwise you will have black or white frame and you need auto exposure for autofocus. On most cameras, you really want autofocus too because you can't just focus to infinity and expect good image. And that's pretty much everything you need to do for the video recording in the real time. Then you have preview. Preview is a bit less important than the video recording, but it's also important. You need to convert from Bayer to RGB. And you need to do gamma connection because the sensors are linear in one side and exponential on the other side. GPU can help here. And then there are extensive post-processing steps like auto white balance, lens shading compensation, getting rid of bad pixels and probably many others I forgot about. Advantage of this is that this can be done after taking a photo or after recording the video. And there are quite good tools for that, including raw therapy, Euro and so on. So people were working, unlike the other parts, this got some work done before. So what we are talking, for example, on the N900, you have LED flash, which is a completely independent device. You have voice coil support for autofocus, which is again a separate device somewhere on I2C. Then you have two sensors, front and back camera. You have GPIO switch to select which camera you want. And then you have ISP, which is quite a complex piece of hardware, which will not be important for this presentation because we will do without it. So tools to use. There's great set of tools to use, but they have some limitations. One which looks very nice is G-streamer. And G-streamer is really great if you have an unlimited CPU. Unfortunately, you don't have unlimited CPU. If I was willing to hack its C code, it would be very powerful, but there's some learning curve involved in that too. And at the end, G-streamer might be right to use, but I found other tools easier. There's FFM pack, which has quite nice and very simple command line interface. So I used it at the end. I didn't really need much. Just please take these images and compress me every video from there. There's megapixels. Megapixels is a very nice application focused on mobile phone, very well optimized, but its origin is a pine phone, and they don't use live camera there. Then there's live camera. Everybody says live camera is future of video on Linux. It probably is, but there are still many steps to get there. And there's megapixels. Millipixels is fork of megapixels, which is supported to live frame 5 and to live camera more importantly. So in many ways, so megapixels actually currently looks nicer because it is based on newer GTK. On the other hand, millipixels use live camera, and that's important stuff. Okay, so this will be a bit of history and reasons and so on. I started to play with camera on pine phone, and first idea was, hey, Gstreamer is there to capture video. Let's use Gstreamer, right? Okay. I started capturing raw Bayer data because that's what should be most portable. I did some shell scripting, media control to set up the pipelines. That's not fun. And then just use Gstreamer to save the Bayer images to the disk. And I could do 200 kilopixels, which is not great, but better than no video at all maybe. And I realized that CPU can compress at 70 kilopixels images in real time, which is, well, people were doing this, but it's sometime ago. So I tried to improve. There's IUU format the camera could do, which is the Bayer tent converted to like for better processing. And I could capture up to 0.9 megapixel video with that. And if you were wanted, you could take a look there. Maybe it's useful for someone. But, well, that was the reason. The reason was called colorimetry. And someone in Gstreamer decided to do a regression basically. And all the Gstreamer stuff stopped working. And I realized that, well, perhaps it wasn't good too great to start with anyway. So I started looking around. Quickly, I found the camera, which is the future, right? And, well, it's C++. It didn't work at all on pineforms. So I had to do some quite heavy patching. I get some help on the mailing list. And I realized it has JPEG support, which is, well, you avoid a lot of stuff, because if JPEGs are already core space converted and compressed and so on. And I realized that maybe JPEG is worse having second look. So I did. You can't say data into megapixel resolution to flash, because the flash is not fast enough. But it was like almost possible. So, hey, JPEGs are four times smaller. Perhaps this could be adjusted. And saving sound is easy. So maybe we can, well, maybe we already have everything we need. And this is why how Unixic camera was born. I realized the second reason. Someone decided that placing Uncache data to user space is fun. And the camera decided that placing Uncache memory up to the application is great. I thought someone stole my CPU, because the performance penalty is about 10 times. But not. It's just the way it is. I believe this needs to be fixed. If you fight with the streamer and the performance seems too bad, this is probably why it's too bad. And I don't know, talk to your kind of person which can change it. By the way, in the old days, we used to have a read interface to get data from the camera. This is now deprecated. Of course, it is faster to read the data than to get Uncache memory, right? That's how badly Uncache memory sucks. Anyway, so Unixic camera started. Audio is really simple. You just create a small C application to sound, record sound, split it to chunks so you can have easy processing later and timestamp them, which is important for synchronization. Live camera with some small hacks can write 35 frames per second to megapixel this data to the file system. All you need to do is edit timestamp and sim links so your preview can tell you which is the latest image. Very easy. Control application, you probably don't want to start your video record from command line, but that's also very easy. You just take some GTK and Python. It creates timestamps, telling you, hey, start recording it now, and displays preview, which is the most intensive thing there. And this is basically what runs during the recording, so this is to be determined a bit optimized. Post processing is not that important, right? So you just use Python and FFM pack to compress the resulting video stream. Easy. This is something I was pretty happy about. If you want to deprecate it, you will need some setup like patching clip camera and so on, but code is out there, and there will be easier method in future. So I like this solution because I could use multiple languages to do my camera recording, write language for the job. In the end, this was few hundreds of lines of code total. And it could do some quite interesting stuff. Like you could take still pictures during recording. You simply copy the GTK one more time. Easy. In video resolution, but if you are recording it at two megapixels from phone camera, I'd say this is going to be pretty decent picture anyway. You could take photos with arbitrary delay. Like you could even take photos before the user asked for them because you are taking all of them anyway, so you just don't delete them. This was fun. Then I've got access to LibreM 5, which is different in important ways. It has damp sensors, so it won't give you JPEG. But it had better support. Let camera work there out of the box. There was megapixel application, as I explained about before, it with patched megapixels, but it had no auto exposure, auto white balance, or autofocus support. It couldn't report video. And there's more issues on LibreM 5. Canon could use some work. It only gives you 8-bit data, which is not really good enough for good photos. You can select one of these three resolutions, so megapixel, three megapixels, or 13 megapixels, and for some reason only 23.5 frames per second work. I don't know why. Hardware has face detection autofocus, which is a very cool sounding toy, and I have to thank Purism for their hardware and for the great work they did on the process of Verstek. They are heroes. That's the best photo I got with Nokia N900. Some megapixels, they are very simple application. There's small development teams, so it's easy to work with, it's plain C, it's easy to mark patches. It does all the processing on the CPU, which is great if you want to change the processing. So I started to do auto exposure because that's the most important part, and I did a very simple one. I prototyped on N900 years ago. So basically, if you have too much, too white pixels, like overexposed, you need to turn it down to exposure, right? And if you don't have enough white enough pixels, you need to turn the exposure up, and this is it, and this works well enough. It takes a few seconds to converge, can be improved, I don't know how to do that, but this is good enough to take photos. Other thing is auto white balance. This is not that important because you can do it in post processing. Anyway, they did have manual white balance, so I felt this is easy enough to do. It will need some more work. Again, if it's too blue, you make it more red. If it's too red, you make it more blue. That's it, works well enough. And in a few hundred lines of code, I had simple software only, auto exposure, and I got that merged. Next step is autofocus. Autofocus is something which deserves more respect because you really want it tuned, but well, if you want to do it simply, you just start from the infinity. You compute blurriness of each frame, and you only need to take a look at part of the image if you want to save your CPU, and you start your sweep, you start to blink the focus closer, and when the image gets more blurry, well, you stop. You might want to go a little bit back because of the physical issues of the lens, but this works well better than manual focus, and I got it merged rather quickly. Next step was video, so I decided that I like the ideas from Unixi Camera, and simply did 0.8 megapixels recording directly to the disk. I hacked millipixels to save timestamped frames, and left post-processing after the user presses the stop button. Easy to do, obvious to their disadvantages, right? You are now limited by the disk space, and maybe you could say it's not quite nice to the flash to just stream raw data to it, but hey, the flash is cheap and the phone will die anyway. Post-processing is quite long, it takes five times slower than recording, or I guess this could be optimized. This is again my old code, so I'm Python with FFmpeg. Ideally, there is hardware to do the encoding, we should use it, but I feel that doing that is awful lot of work. Anyway, this is now upstream, so if you update your LibreM5, you should be able to take video off, and I believe it's important to have something other than video recording. Next thing I want to talk about, which is very exciting, is face detection autofocus. You may want to Google it for nice explanations, but basically they have selected some blue pixels, they are special, and they are special in a way that they only take light from certain day directions. So you have a lens, and if it's focused, it's okay, the light comes and meets at the sensor, but if you are autofocus, funny set of happens, and light from the left of the image ends up at different place on the sensor than the light from the right part of the lens. But if you block the light from the direction on the chip, which is easy to do, you can use it for focus. So if you take a line from the sensor, and you have on the top you will have left special pixels, and on the bottom you have right special pixels, for example, then you will have this. The tree you will see on the line will be at different positions on different special pixels. Well, and you can use this to focus, right? You just compute correlation between the two lines, and it directly tells you how much autofocus you are, and in which direction you should focus. This was great to play with, it was like hacking. Unfortunately, it is not too usable on LibreM5. They are two issues for the special pixels are quite far apart, which they basically have to, because if you made all the pictures special, you would have, you would lose your resolution, and it only works in the high resolution mode, and you don't want to run your preview in high resolution mode. So if someone is interested in fade detection autofocus, I have the code, the code is on the, on the GitLab somewhere. It was fun experiment, it worked, but I decided, like, for real focus, you would probably have to do hybrid, like do course focus using the fade detection, and then do contrast detection on the, on the end. It seemed like a lot of work, and with the driver, which would only give you 23 frames per second, and so on. Well, I decided not to take this much. So I have some wish lists, and I think I have, like, five minutes left. So five minutes talking, or five minutes questions? Including everything. Including everything. Okay. So I have a long wish list for all of the world. I would like to have better media control support in the tools, because it just doesn't work. A piece changed, and the tools didn't catch up. I would like library to get conversions between formats, and so on. I would like better than 8B support. I would like multiple applications accessing the camera at the same time. Better support would be nice, and someone should re-resolve the caching problem, because that's bad. For lip camera, I shouldn't be really hacking millipixels. I should be hacking lip camera, but lip camera doesn't really support software ISP, and I'm not a great C++ hacker, so I could do it, but they will reject the patches if I do. So I would much prefer them to do the preparation, and then I would fill the code. And that's pretty much it. So time for questions. Sorry? We do want your work to software ISP. The comment is that they want my work on software ISP, and I guess I will want to cooperate, but lip camera is not easy to hack for me, because of the C++ stuff. So be patient, and I maybe it would be better if someone else did it. Yes, so well, there will be not be much to see. So you know, millipixels could use some work too, but I can take pictures, trust me. I didn't use autofocus for this, because, yes, I can do it. So it's now upstream, so you can just update the operating system, and you will get one, and it should be possible to do just a short video recording too, so now you have all been recorded, and now the CPU is busy converting that. Okay, so I guess.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 18.12, "text": " Okay, so hello, I'm Pavel Majek and I'm here to talk about cameras, but you can also talk", "tokens": [1033, 11, 370, 7751, 11, 286, 478, 3426, 779, 7048, 916, 293, 286, 478, 510, 281, 751, 466, 8622, 11, 457, 291, 393, 611, 751], "temperature": 0.0, "avg_logprob": -0.39504668495871803, "compression_ratio": 1.316546762589928, "no_speech_prob": 0.6948781609535217}, {"id": 1, "seek": 0, "start": 18.12, "end": 26.64, "text": " to me about clicker train horses, mobile phones, kernel, smartwatch by based on ESP32, Mobian", "tokens": [281, 385, 466, 2052, 260, 3847, 13112, 11, 6013, 10216, 11, 28256, 11, 4069, 15219, 538, 2361, 322, 12564, 47, 11440, 11, 37920, 952], "temperature": 0.0, "avg_logprob": -0.39504668495871803, "compression_ratio": 1.316546762589928, "no_speech_prob": 0.6948781609535217}, {"id": 2, "seek": 2664, "start": 26.64, "end": 36.2, "text": " on my molester. So first thing first, video following is not for cameras, it's for frame", "tokens": [322, 452, 8015, 3011, 13, 407, 700, 551, 700, 11, 960, 3480, 307, 406, 337, 8622, 11, 309, 311, 337, 3920], "temperature": 0.0, "avg_logprob": -0.21031847134442397, "compression_ratio": 1.5135135135135136, "no_speech_prob": 0.006623294670134783}, {"id": 3, "seek": 2664, "start": 36.2, "end": 42.24, "text": " grabbers and they are really very different, which is basically what this talk will be about.", "tokens": [4444, 1616, 293, 436, 366, 534, 588, 819, 11, 597, 307, 1936, 437, 341, 751, 486, 312, 466, 13], "temperature": 0.0, "avg_logprob": -0.21031847134442397, "compression_ratio": 1.5135135135135136, "no_speech_prob": 0.006623294670134783}, {"id": 4, "seek": 2664, "start": 42.24, "end": 50.84, "text": " They can do remote controls, but they cannot do autofocus for you and so on. But the interface is", "tokens": [814, 393, 360, 8607, 9003, 11, 457, 436, 2644, 360, 1476, 2670, 15206, 337, 291, 293, 370, 322, 13, 583, 264, 9226, 307], "temperature": 0.0, "avg_logprob": -0.21031847134442397, "compression_ratio": 1.5135135135135136, "no_speech_prob": 0.006623294670134783}, {"id": 5, "seek": 5084, "start": 50.84, "end": 57.480000000000004, "text": " fairly simple, you just open depth video zero, select format and capture. Unfortunately, what you", "tokens": [6457, 2199, 11, 291, 445, 1269, 7161, 960, 4018, 11, 3048, 7877, 293, 7983, 13, 8590, 11, 437, 291], "temperature": 0.0, "avg_logprob": -0.25924549932065216, "compression_ratio": 1.4974093264248705, "no_speech_prob": 0.001394965685904026}, {"id": 6, "seek": 5084, "start": 57.480000000000004, "end": 66.92, "text": " get is blurry photo, which will be either all white or all all black. This is with autofocus and", "tokens": [483, 307, 37644, 5052, 11, 597, 486, 312, 2139, 439, 2418, 420, 439, 439, 2211, 13, 639, 307, 365, 1476, 2670, 15206, 293], "temperature": 0.0, "avg_logprob": -0.25924549932065216, "compression_ratio": 1.4974093264248705, "no_speech_prob": 0.001394965685904026}, {"id": 7, "seek": 5084, "start": 66.92, "end": 75.96000000000001, "text": " auto something. Anyway, they are phones with smart sensors, one such example is pine phone and", "tokens": [8399, 746, 13, 5684, 11, 436, 366, 10216, 365, 4069, 14840, 11, 472, 1270, 1365, 307, 15113, 2593, 293], "temperature": 0.0, "avg_logprob": -0.25924549932065216, "compression_ratio": 1.4974093264248705, "no_speech_prob": 0.001394965685904026}, {"id": 8, "seek": 7596, "start": 75.96, "end": 85.08, "text": " those are pretty close to the frame grabbers. They do basically everything in hardware. This", "tokens": [729, 366, 1238, 1998, 281, 264, 3920, 4444, 1616, 13, 814, 360, 1936, 1203, 294, 8837, 13, 639], "temperature": 0.0, "avg_logprob": -0.12050316550514915, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.000525834271684289}, {"id": 9, "seek": 7596, "start": 85.08, "end": 90.52, "text": " used to be a pretty common design in the past, which made a good sense at that point because", "tokens": [1143, 281, 312, 257, 1238, 2689, 1715, 294, 264, 1791, 11, 597, 1027, 257, 665, 2020, 412, 300, 935, 570], "temperature": 0.0, "avg_logprob": -0.12050316550514915, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.000525834271684289}, {"id": 10, "seek": 7596, "start": 90.52, "end": 98.72, "text": " USB had limited bandwidth and you could not push uncompressed data through it. It's easy to", "tokens": [10109, 632, 5567, 23647, 293, 291, 727, 406, 2944, 8585, 79, 3805, 1412, 807, 309, 13, 467, 311, 1858, 281], "temperature": 0.0, "avg_logprob": -0.12050316550514915, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.000525834271684289}, {"id": 11, "seek": 9872, "start": 98.72, "end": 107.4, "text": " sanitize, but it doesn't make much sense today. If you have like five lens on your phone, you", "tokens": [24533, 1125, 11, 457, 309, 1177, 380, 652, 709, 2020, 965, 13, 759, 291, 362, 411, 1732, 6765, 322, 428, 2593, 11, 291], "temperature": 0.0, "avg_logprob": -0.2219517536652394, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.0003289566084276885}, {"id": 12, "seek": 9872, "start": 107.4, "end": 115.48, "text": " don't want to have five JPEG encoders there. So we are moving to dump sensors, which basically do", "tokens": [500, 380, 528, 281, 362, 1732, 508, 5208, 38, 2058, 378, 433, 456, 13, 407, 321, 366, 2684, 281, 11430, 14840, 11, 597, 1936, 360], "temperature": 0.0, "avg_logprob": -0.2219517536652394, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.0003289566084276885}, {"id": 13, "seek": 9872, "start": 115.48, "end": 124.6, "text": " bare minimum. There you set parameters like exposure, gain, select area and so on. And it just passes", "tokens": [6949, 7285, 13, 821, 291, 992, 9834, 411, 10420, 11, 6052, 11, 3048, 1859, 293, 370, 322, 13, 400, 309, 445, 11335], "temperature": 0.0, "avg_logprob": -0.2219517536652394, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.0003289566084276885}, {"id": 14, "seek": 12460, "start": 124.6, "end": 133.56, "text": " the bare data over the fast bus and it usually ends up in your memory. And then you have component", "tokens": [264, 6949, 1412, 670, 264, 2370, 1255, 293, 309, 2673, 5314, 493, 294, 428, 4675, 13, 400, 550, 291, 362, 6542], "temperature": 0.0, "avg_logprob": -0.19946213563283285, "compression_ratio": 1.45, "no_speech_prob": 9.492468961980194e-05}, {"id": 15, "seek": 12460, "start": 133.56, "end": 142.0, "text": " called ESP, which is image signal processor, which will do the JPEG conversion and such stuff.", "tokens": [1219, 12564, 47, 11, 597, 307, 3256, 6358, 15321, 11, 597, 486, 360, 264, 508, 5208, 38, 14298, 293, 1270, 1507, 13], "temperature": 0.0, "avg_logprob": -0.19946213563283285, "compression_ratio": 1.45, "no_speech_prob": 9.492468961980194e-05}, {"id": 16, "seek": 12460, "start": 142.0, "end": 150.32, "text": " Unfortunately, in case of the interesting phones, which is official LibreM5, pine phone and pine", "tokens": [8590, 11, 294, 1389, 295, 264, 1880, 10216, 11, 597, 307, 4783, 15834, 265, 44, 20, 11, 15113, 2593, 293, 15113], "temperature": 0.0, "avg_logprob": -0.19946213563283285, "compression_ratio": 1.45, "no_speech_prob": 9.492468961980194e-05}, {"id": 17, "seek": 15032, "start": 150.32, "end": 157.88, "text": " phone pro, we either don't have the processor or we don't have drivers for that, so we can't use it.", "tokens": [2593, 447, 11, 321, 2139, 500, 380, 362, 264, 15321, 420, 321, 500, 380, 362, 11590, 337, 300, 11, 370, 321, 393, 380, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.1693602954640108, "compression_ratio": 1.5257731958762886, "no_speech_prob": 0.0009060185984708369}, {"id": 18, "seek": 15032, "start": 157.88, "end": 165.95999999999998, "text": " So this is how the image, this is a photo if you try to take it without the automatics. Can you", "tokens": [407, 341, 307, 577, 264, 3256, 11, 341, 307, 257, 5052, 498, 291, 853, 281, 747, 309, 1553, 264, 28034, 1167, 13, 1664, 291], "temperature": 0.0, "avg_logprob": -0.1693602954640108, "compression_ratio": 1.5257731958762886, "no_speech_prob": 0.0009060185984708369}, {"id": 19, "seek": 15032, "start": 165.95999999999998, "end": 175.84, "text": " recognize what's there? It's a USB connector. It's recognizable, I'd say. So what do we need to do?", "tokens": [5521, 437, 311, 456, 30, 467, 311, 257, 10109, 19127, 13, 467, 311, 40757, 11, 286, 1116, 584, 13, 407, 437, 360, 321, 643, 281, 360, 30], "temperature": 0.0, "avg_logprob": -0.1693602954640108, "compression_ratio": 1.5257731958762886, "no_speech_prob": 0.0009060185984708369}, {"id": 20, "seek": 17584, "start": 175.84, "end": 186.04, "text": " Nokia N900 is another example of complex design, which used to be very important historically. And", "tokens": [43980, 426, 23943, 307, 1071, 1365, 295, 3997, 1715, 11, 597, 1143, 281, 312, 588, 1021, 16180, 13, 400], "temperature": 0.0, "avg_logprob": -0.17076311689434628, "compression_ratio": 1.517766497461929, "no_speech_prob": 0.0008288087556138635}, {"id": 21, "seek": 17584, "start": 186.04, "end": 194.0, "text": " actually the photos in the presentation are from N900 with open source stack. In real time, you need", "tokens": [767, 264, 5787, 294, 264, 5860, 366, 490, 426, 23943, 365, 1269, 4009, 8630, 13, 682, 957, 565, 11, 291, 643], "temperature": 0.0, "avg_logprob": -0.17076311689434628, "compression_ratio": 1.517766497461929, "no_speech_prob": 0.0008288087556138635}, {"id": 22, "seek": 17584, "start": 194.0, "end": 200.64000000000001, "text": " to do auto exposure because otherwise you will have black or white frame and you need auto exposure", "tokens": [281, 360, 8399, 10420, 570, 5911, 291, 486, 362, 2211, 420, 2418, 3920, 293, 291, 643, 8399, 10420], "temperature": 0.0, "avg_logprob": -0.17076311689434628, "compression_ratio": 1.517766497461929, "no_speech_prob": 0.0008288087556138635}, {"id": 23, "seek": 20064, "start": 200.64, "end": 206.79999999999998, "text": " for autofocus. On most cameras, you really want autofocus too because you can't just focus to", "tokens": [337, 1476, 2670, 15206, 13, 1282, 881, 8622, 11, 291, 534, 528, 1476, 2670, 15206, 886, 570, 291, 393, 380, 445, 1879, 281], "temperature": 0.0, "avg_logprob": -0.17085967525359122, "compression_ratio": 1.6327433628318584, "no_speech_prob": 0.0023860004730522633}, {"id": 24, "seek": 20064, "start": 206.79999999999998, "end": 211.83999999999997, "text": " infinity and expect good image. And that's pretty much everything you need to do for", "tokens": [13202, 293, 2066, 665, 3256, 13, 400, 300, 311, 1238, 709, 1203, 291, 643, 281, 360, 337], "temperature": 0.0, "avg_logprob": -0.17085967525359122, "compression_ratio": 1.6327433628318584, "no_speech_prob": 0.0023860004730522633}, {"id": 25, "seek": 20064, "start": 211.83999999999997, "end": 218.07999999999998, "text": " the video recording in the real time. Then you have preview. Preview is a bit less important than", "tokens": [264, 960, 6613, 294, 264, 957, 565, 13, 1396, 291, 362, 14281, 13, 6001, 1759, 307, 257, 857, 1570, 1021, 813], "temperature": 0.0, "avg_logprob": -0.17085967525359122, "compression_ratio": 1.6327433628318584, "no_speech_prob": 0.0023860004730522633}, {"id": 26, "seek": 20064, "start": 218.07999999999998, "end": 225.0, "text": " the video recording, but it's also important. You need to convert from Bayer to RGB. And you", "tokens": [264, 960, 6613, 11, 457, 309, 311, 611, 1021, 13, 509, 643, 281, 7620, 490, 7840, 260, 281, 31231, 13, 400, 291], "temperature": 0.0, "avg_logprob": -0.17085967525359122, "compression_ratio": 1.6327433628318584, "no_speech_prob": 0.0023860004730522633}, {"id": 27, "seek": 22500, "start": 225.0, "end": 230.92, "text": " need to do gamma connection because the sensors are linear in one side and exponential on the", "tokens": [643, 281, 360, 15546, 4984, 570, 264, 14840, 366, 8213, 294, 472, 1252, 293, 21510, 322, 264], "temperature": 0.0, "avg_logprob": -0.18056486498924992, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0011968666221946478}, {"id": 28, "seek": 22500, "start": 230.92, "end": 240.16, "text": " other side. GPU can help here. And then there are extensive post-processing steps like auto", "tokens": [661, 1252, 13, 18407, 393, 854, 510, 13, 400, 550, 456, 366, 13246, 2183, 12, 41075, 278, 4439, 411, 8399], "temperature": 0.0, "avg_logprob": -0.18056486498924992, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0011968666221946478}, {"id": 29, "seek": 22500, "start": 240.16, "end": 247.84, "text": " white balance, lens shading compensation, getting rid of bad pixels and probably many others I", "tokens": [2418, 4772, 11, 6765, 30556, 19644, 11, 1242, 3973, 295, 1578, 18668, 293, 1391, 867, 2357, 286], "temperature": 0.0, "avg_logprob": -0.18056486498924992, "compression_ratio": 1.4736842105263157, "no_speech_prob": 0.0011968666221946478}, {"id": 30, "seek": 24784, "start": 247.84, "end": 255.52, "text": " forgot about. Advantage of this is that this can be done after taking a photo or after recording", "tokens": [5298, 466, 13, 13634, 4370, 295, 341, 307, 300, 341, 393, 312, 1096, 934, 1940, 257, 5052, 420, 934, 6613], "temperature": 0.0, "avg_logprob": -0.18853138514927456, "compression_ratio": 1.5494505494505495, "no_speech_prob": 0.008065242320299149}, {"id": 31, "seek": 24784, "start": 255.52, "end": 263.24, "text": " the video. And there are quite good tools for that, including raw therapy, Euro and so on. So", "tokens": [264, 960, 13, 400, 456, 366, 1596, 665, 3873, 337, 300, 11, 3009, 8936, 9492, 11, 3010, 293, 370, 322, 13, 407], "temperature": 0.0, "avg_logprob": -0.18853138514927456, "compression_ratio": 1.5494505494505495, "no_speech_prob": 0.008065242320299149}, {"id": 32, "seek": 24784, "start": 263.24, "end": 273.28000000000003, "text": " people were working, unlike the other parts, this got some work done before. So what we are", "tokens": [561, 645, 1364, 11, 8343, 264, 661, 3166, 11, 341, 658, 512, 589, 1096, 949, 13, 407, 437, 321, 366], "temperature": 0.0, "avg_logprob": -0.18853138514927456, "compression_ratio": 1.5494505494505495, "no_speech_prob": 0.008065242320299149}, {"id": 33, "seek": 27328, "start": 273.28, "end": 279.52, "text": " talking, for example, on the N900, you have LED flash, which is a completely independent device.", "tokens": [1417, 11, 337, 1365, 11, 322, 264, 426, 23943, 11, 291, 362, 11261, 7319, 11, 597, 307, 257, 2584, 6695, 4302, 13], "temperature": 0.0, "avg_logprob": -0.17778717844109787, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.0003551990375854075}, {"id": 34, "seek": 27328, "start": 279.52, "end": 287.0, "text": " You have voice coil support for autofocus, which is again a separate device somewhere on", "tokens": [509, 362, 3177, 22225, 1406, 337, 1476, 2670, 15206, 11, 597, 307, 797, 257, 4994, 4302, 4079, 322], "temperature": 0.0, "avg_logprob": -0.17778717844109787, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.0003551990375854075}, {"id": 35, "seek": 27328, "start": 287.0, "end": 293.91999999999996, "text": " I2C. Then you have two sensors, front and back camera. You have GPIO switch to select which", "tokens": [286, 17, 34, 13, 1396, 291, 362, 732, 14840, 11, 1868, 293, 646, 2799, 13, 509, 362, 26039, 15167, 3679, 281, 3048, 597], "temperature": 0.0, "avg_logprob": -0.17778717844109787, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.0003551990375854075}, {"id": 36, "seek": 27328, "start": 293.91999999999996, "end": 303.15999999999997, "text": " camera you want. And then you have ISP, which is quite a complex piece of hardware, which will", "tokens": [2799, 291, 528, 13, 400, 550, 291, 362, 6205, 47, 11, 597, 307, 1596, 257, 3997, 2522, 295, 8837, 11, 597, 486], "temperature": 0.0, "avg_logprob": -0.17778717844109787, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.0003551990375854075}, {"id": 37, "seek": 30316, "start": 303.16, "end": 314.04, "text": " not be important for this presentation because we will do without it. So tools to use. There's", "tokens": [406, 312, 1021, 337, 341, 5860, 570, 321, 486, 360, 1553, 309, 13, 407, 3873, 281, 764, 13, 821, 311], "temperature": 0.0, "avg_logprob": -0.20595704692683808, "compression_ratio": 1.5, "no_speech_prob": 0.0021456966642290354}, {"id": 38, "seek": 30316, "start": 314.04, "end": 324.12, "text": " great set of tools to use, but they have some limitations. One which looks very nice is G-streamer.", "tokens": [869, 992, 295, 3873, 281, 764, 11, 457, 436, 362, 512, 15705, 13, 1485, 597, 1542, 588, 1481, 307, 460, 12, 9291, 260, 13], "temperature": 0.0, "avg_logprob": -0.20595704692683808, "compression_ratio": 1.5, "no_speech_prob": 0.0021456966642290354}, {"id": 39, "seek": 30316, "start": 324.12, "end": 330.44000000000005, "text": " And G-streamer is really great if you have an unlimited CPU. Unfortunately, you don't have", "tokens": [400, 460, 12, 9291, 260, 307, 534, 869, 498, 291, 362, 364, 21950, 13199, 13, 8590, 11, 291, 500, 380, 362], "temperature": 0.0, "avg_logprob": -0.20595704692683808, "compression_ratio": 1.5, "no_speech_prob": 0.0021456966642290354}, {"id": 40, "seek": 33044, "start": 330.44, "end": 339.08, "text": " unlimited CPU. If I was willing to hack its C code, it would be very powerful, but there's", "tokens": [21950, 13199, 13, 759, 286, 390, 4950, 281, 10339, 1080, 383, 3089, 11, 309, 576, 312, 588, 4005, 11, 457, 456, 311], "temperature": 0.0, "avg_logprob": -0.17823459006644585, "compression_ratio": 1.3794871794871795, "no_speech_prob": 0.0012045645853504539}, {"id": 41, "seek": 33044, "start": 339.08, "end": 347.08, "text": " some learning curve involved in that too. And at the end, G-streamer might be right to use,", "tokens": [512, 2539, 7605, 3288, 294, 300, 886, 13, 400, 412, 264, 917, 11, 460, 12, 9291, 260, 1062, 312, 558, 281, 764, 11], "temperature": 0.0, "avg_logprob": -0.17823459006644585, "compression_ratio": 1.3794871794871795, "no_speech_prob": 0.0012045645853504539}, {"id": 42, "seek": 33044, "start": 347.08, "end": 354.24, "text": " but I found other tools easier. There's FFM pack, which has quite nice and very simple", "tokens": [457, 286, 1352, 661, 3873, 3571, 13, 821, 311, 479, 37, 44, 2844, 11, 597, 575, 1596, 1481, 293, 588, 2199], "temperature": 0.0, "avg_logprob": -0.17823459006644585, "compression_ratio": 1.3794871794871795, "no_speech_prob": 0.0012045645853504539}, {"id": 43, "seek": 35424, "start": 354.24, "end": 362.16, "text": " command line interface. So I used it at the end. I didn't really need much. Just please", "tokens": [5622, 1622, 9226, 13, 407, 286, 1143, 309, 412, 264, 917, 13, 286, 994, 380, 534, 643, 709, 13, 1449, 1767], "temperature": 0.0, "avg_logprob": -0.1809238746984681, "compression_ratio": 1.427027027027027, "no_speech_prob": 0.0002990113280247897}, {"id": 44, "seek": 35424, "start": 362.16, "end": 368.68, "text": " take these images and compress me every video from there. There's megapixels. Megapixels", "tokens": [747, 613, 5267, 293, 14778, 385, 633, 960, 490, 456, 13, 821, 311, 34733, 970, 1625, 13, 9986, 569, 970, 1625], "temperature": 0.0, "avg_logprob": -0.1809238746984681, "compression_ratio": 1.427027027027027, "no_speech_prob": 0.0002990113280247897}, {"id": 45, "seek": 35424, "start": 368.68, "end": 375.76, "text": " is a very nice application focused on mobile phone, very well optimized, but its origin", "tokens": [307, 257, 588, 1481, 3861, 5178, 322, 6013, 2593, 11, 588, 731, 26941, 11, 457, 1080, 4957], "temperature": 0.0, "avg_logprob": -0.1809238746984681, "compression_ratio": 1.427027027027027, "no_speech_prob": 0.0002990113280247897}, {"id": 46, "seek": 37576, "start": 375.76, "end": 386.88, "text": " is a pine phone, and they don't use live camera there. Then there's live camera. Everybody", "tokens": [307, 257, 15113, 2593, 11, 293, 436, 500, 380, 764, 1621, 2799, 456, 13, 1396, 456, 311, 1621, 2799, 13, 7646], "temperature": 0.0, "avg_logprob": -0.2611791737874349, "compression_ratio": 1.5359116022099448, "no_speech_prob": 0.0025196692440658808}, {"id": 47, "seek": 37576, "start": 386.88, "end": 395.0, "text": " says live camera is future of video on Linux. It probably is, but there are still many steps", "tokens": [1619, 1621, 2799, 307, 2027, 295, 960, 322, 18734, 13, 467, 1391, 307, 11, 457, 456, 366, 920, 867, 4439], "temperature": 0.0, "avg_logprob": -0.2611791737874349, "compression_ratio": 1.5359116022099448, "no_speech_prob": 0.0025196692440658808}, {"id": 48, "seek": 37576, "start": 395.0, "end": 405.2, "text": " to get there. And there's megapixels. Millipixels is fork of megapixels, which is supported to", "tokens": [281, 483, 456, 13, 400, 456, 311, 34733, 970, 1625, 13, 7190, 647, 970, 1625, 307, 17716, 295, 34733, 970, 1625, 11, 597, 307, 8104, 281], "temperature": 0.0, "avg_logprob": -0.2611791737874349, "compression_ratio": 1.5359116022099448, "no_speech_prob": 0.0025196692440658808}, {"id": 49, "seek": 40520, "start": 405.2, "end": 413.36, "text": " live frame 5 and to live camera more importantly. So in many ways, so megapixels actually currently", "tokens": [1621, 3920, 1025, 293, 281, 1621, 2799, 544, 8906, 13, 407, 294, 867, 2098, 11, 370, 34733, 970, 1625, 767, 4362], "temperature": 0.0, "avg_logprob": -0.23591723507397797, "compression_ratio": 1.4919786096256684, "no_speech_prob": 0.0009429595666006207}, {"id": 50, "seek": 40520, "start": 413.36, "end": 419.56, "text": " looks nicer because it is based on newer GTK. On the other hand, millipixels use live camera,", "tokens": [1542, 22842, 570, 309, 307, 2361, 322, 17628, 17530, 42, 13, 1282, 264, 661, 1011, 11, 1728, 647, 970, 1625, 764, 1621, 2799, 11], "temperature": 0.0, "avg_logprob": -0.23591723507397797, "compression_ratio": 1.4919786096256684, "no_speech_prob": 0.0009429595666006207}, {"id": 51, "seek": 40520, "start": 419.56, "end": 429.88, "text": " and that's important stuff. Okay, so this will be a bit of history and reasons and so", "tokens": [293, 300, 311, 1021, 1507, 13, 1033, 11, 370, 341, 486, 312, 257, 857, 295, 2503, 293, 4112, 293, 370], "temperature": 0.0, "avg_logprob": -0.23591723507397797, "compression_ratio": 1.4919786096256684, "no_speech_prob": 0.0009429595666006207}, {"id": 52, "seek": 42988, "start": 429.88, "end": 436.96, "text": " on. I started to play with camera on pine phone, and first idea was, hey, Gstreamer is", "tokens": [322, 13, 286, 1409, 281, 862, 365, 2799, 322, 15113, 2593, 11, 293, 700, 1558, 390, 11, 4177, 11, 460, 9291, 260, 307], "temperature": 0.0, "avg_logprob": -0.20428390109661929, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.0022699707187712193}, {"id": 53, "seek": 42988, "start": 436.96, "end": 442.84, "text": " there to capture video. Let's use Gstreamer, right? Okay. I started capturing raw Bayer", "tokens": [456, 281, 7983, 960, 13, 961, 311, 764, 460, 9291, 260, 11, 558, 30, 1033, 13, 286, 1409, 23384, 8936, 7840, 260], "temperature": 0.0, "avg_logprob": -0.20428390109661929, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.0022699707187712193}, {"id": 54, "seek": 42988, "start": 442.84, "end": 451.04, "text": " data because that's what should be most portable. I did some shell scripting, media control", "tokens": [1412, 570, 300, 311, 437, 820, 312, 881, 21800, 13, 286, 630, 512, 8720, 5755, 278, 11, 3021, 1969], "temperature": 0.0, "avg_logprob": -0.20428390109661929, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.0022699707187712193}, {"id": 55, "seek": 42988, "start": 451.04, "end": 458.24, "text": " to set up the pipelines. That's not fun. And then just use Gstreamer to save the Bayer", "tokens": [281, 992, 493, 264, 40168, 13, 663, 311, 406, 1019, 13, 400, 550, 445, 764, 460, 9291, 260, 281, 3155, 264, 7840, 260], "temperature": 0.0, "avg_logprob": -0.20428390109661929, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.0022699707187712193}, {"id": 56, "seek": 45824, "start": 458.24, "end": 467.84000000000003, "text": " images to the disk. And I could do 200 kilopixels, which is not great, but better than no video", "tokens": [5267, 281, 264, 12355, 13, 400, 286, 727, 360, 2331, 5128, 404, 970, 1625, 11, 597, 307, 406, 869, 11, 457, 1101, 813, 572, 960], "temperature": 0.0, "avg_logprob": -0.17376928509406322, "compression_ratio": 1.3237410071942446, "no_speech_prob": 0.0026499240193516016}, {"id": 57, "seek": 45824, "start": 467.84000000000003, "end": 480.32, "text": " at all maybe. And I realized that CPU can compress at 70 kilopixels images in real time,", "tokens": [412, 439, 1310, 13, 400, 286, 5334, 300, 13199, 393, 14778, 412, 5285, 5128, 404, 970, 1625, 5267, 294, 957, 565, 11], "temperature": 0.0, "avg_logprob": -0.17376928509406322, "compression_ratio": 1.3237410071942446, "no_speech_prob": 0.0026499240193516016}, {"id": 58, "seek": 48032, "start": 480.32, "end": 488.44, "text": " which is, well, people were doing this, but it's sometime ago. So I tried to improve. There's", "tokens": [597, 307, 11, 731, 11, 561, 645, 884, 341, 11, 457, 309, 311, 15053, 2057, 13, 407, 286, 3031, 281, 3470, 13, 821, 311], "temperature": 0.0, "avg_logprob": -0.2866558275724712, "compression_ratio": 1.455958549222798, "no_speech_prob": 0.001545469742268324}, {"id": 59, "seek": 48032, "start": 488.44, "end": 498.96, "text": " IUU format the camera could do, which is the Bayer tent converted to like for better processing.", "tokens": [44218, 52, 7877, 264, 2799, 727, 360, 11, 597, 307, 264, 7840, 260, 7054, 16424, 281, 411, 337, 1101, 9007, 13], "temperature": 0.0, "avg_logprob": -0.2866558275724712, "compression_ratio": 1.455958549222798, "no_speech_prob": 0.001545469742268324}, {"id": 60, "seek": 48032, "start": 498.96, "end": 508.0, "text": " And I could capture up to 0.9 megapixel video with that. And if you were wanted, you could", "tokens": [400, 286, 727, 7983, 493, 281, 1958, 13, 24, 34733, 34599, 960, 365, 300, 13, 400, 498, 291, 645, 1415, 11, 291, 727], "temperature": 0.0, "avg_logprob": -0.2866558275724712, "compression_ratio": 1.455958549222798, "no_speech_prob": 0.001545469742268324}, {"id": 61, "seek": 50800, "start": 508.0, "end": 516.16, "text": " take a look there. Maybe it's useful for someone. But, well, that was the reason. The reason was", "tokens": [747, 257, 574, 456, 13, 2704, 309, 311, 4420, 337, 1580, 13, 583, 11, 731, 11, 300, 390, 264, 1778, 13, 440, 1778, 390], "temperature": 0.0, "avg_logprob": -0.21297571818033853, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0017056700307875872}, {"id": 62, "seek": 50800, "start": 516.16, "end": 525.08, "text": " called colorimetry. And someone in Gstreamer decided to do a regression basically. And all the", "tokens": [1219, 2017, 332, 9889, 13, 400, 1580, 294, 460, 9291, 260, 3047, 281, 360, 257, 24590, 1936, 13, 400, 439, 264], "temperature": 0.0, "avg_logprob": -0.21297571818033853, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0017056700307875872}, {"id": 63, "seek": 50800, "start": 525.08, "end": 532.6, "text": " Gstreamer stuff stopped working. And I realized that, well, perhaps it wasn't good too great to", "tokens": [460, 9291, 260, 1507, 5936, 1364, 13, 400, 286, 5334, 300, 11, 731, 11, 4317, 309, 2067, 380, 665, 886, 869, 281], "temperature": 0.0, "avg_logprob": -0.21297571818033853, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0017056700307875872}, {"id": 64, "seek": 53260, "start": 532.6, "end": 540.88, "text": " start with anyway. So I started looking around. Quickly, I found the camera, which is the future,", "tokens": [722, 365, 4033, 13, 407, 286, 1409, 1237, 926, 13, 31800, 11, 286, 1352, 264, 2799, 11, 597, 307, 264, 2027, 11], "temperature": 0.0, "avg_logprob": -0.21354872759650737, "compression_ratio": 1.4088669950738917, "no_speech_prob": 0.0009537019650451839}, {"id": 65, "seek": 53260, "start": 540.88, "end": 549.5600000000001, "text": " right? And, well, it's C++. It didn't work at all on pineforms. So I had to do some quite heavy", "tokens": [558, 30, 400, 11, 731, 11, 309, 311, 383, 25472, 13, 467, 994, 380, 589, 412, 439, 322, 15113, 837, 82, 13, 407, 286, 632, 281, 360, 512, 1596, 4676], "temperature": 0.0, "avg_logprob": -0.21354872759650737, "compression_ratio": 1.4088669950738917, "no_speech_prob": 0.0009537019650451839}, {"id": 66, "seek": 53260, "start": 549.5600000000001, "end": 557.4, "text": " patching. I get some help on the mailing list. And I realized it has JPEG support, which is,", "tokens": [9972, 278, 13, 286, 483, 512, 854, 322, 264, 41612, 1329, 13, 400, 286, 5334, 309, 575, 508, 5208, 38, 1406, 11, 597, 307, 11], "temperature": 0.0, "avg_logprob": -0.21354872759650737, "compression_ratio": 1.4088669950738917, "no_speech_prob": 0.0009537019650451839}, {"id": 67, "seek": 55740, "start": 557.4, "end": 566.3199999999999, "text": " well, you avoid a lot of stuff, because if JPEGs are already core space converted and compressed", "tokens": [731, 11, 291, 5042, 257, 688, 295, 1507, 11, 570, 498, 508, 5208, 33715, 366, 1217, 4965, 1901, 16424, 293, 30353], "temperature": 0.0, "avg_logprob": -0.20116926829020182, "compression_ratio": 1.4371859296482412, "no_speech_prob": 0.0024564089253544807}, {"id": 68, "seek": 55740, "start": 566.3199999999999, "end": 575.76, "text": " and so on. And I realized that maybe JPEG is worse having second look. So I did. You can't say", "tokens": [293, 370, 322, 13, 400, 286, 5334, 300, 1310, 508, 5208, 38, 307, 5324, 1419, 1150, 574, 13, 407, 286, 630, 13, 509, 393, 380, 584], "temperature": 0.0, "avg_logprob": -0.20116926829020182, "compression_ratio": 1.4371859296482412, "no_speech_prob": 0.0024564089253544807}, {"id": 69, "seek": 55740, "start": 575.76, "end": 583.3199999999999, "text": " data into megapixel resolution to flash, because the flash is not fast enough. But it was like", "tokens": [1412, 666, 34733, 34599, 8669, 281, 7319, 11, 570, 264, 7319, 307, 406, 2370, 1547, 13, 583, 309, 390, 411], "temperature": 0.0, "avg_logprob": -0.20116926829020182, "compression_ratio": 1.4371859296482412, "no_speech_prob": 0.0024564089253544807}, {"id": 70, "seek": 58332, "start": 583.32, "end": 590.7600000000001, "text": " almost possible. So, hey, JPEGs are four times smaller. Perhaps this could be adjusted. And", "tokens": [1920, 1944, 13, 407, 11, 4177, 11, 508, 5208, 33715, 366, 1451, 1413, 4356, 13, 10517, 341, 727, 312, 19871, 13, 400], "temperature": 0.0, "avg_logprob": -0.2041902012295193, "compression_ratio": 1.441025641025641, "no_speech_prob": 0.0011427643476054072}, {"id": 71, "seek": 58332, "start": 590.7600000000001, "end": 601.8000000000001, "text": " saving sound is easy. So maybe we can, well, maybe we already have everything we need. And this is", "tokens": [6816, 1626, 307, 1858, 13, 407, 1310, 321, 393, 11, 731, 11, 1310, 321, 1217, 362, 1203, 321, 643, 13, 400, 341, 307], "temperature": 0.0, "avg_logprob": -0.2041902012295193, "compression_ratio": 1.441025641025641, "no_speech_prob": 0.0011427643476054072}, {"id": 72, "seek": 58332, "start": 601.8000000000001, "end": 610.08, "text": " why how Unixic camera was born. I realized the second reason. Someone decided that placing", "tokens": [983, 577, 1156, 970, 299, 2799, 390, 4232, 13, 286, 5334, 264, 1150, 1778, 13, 8734, 3047, 300, 17221], "temperature": 0.0, "avg_logprob": -0.2041902012295193, "compression_ratio": 1.441025641025641, "no_speech_prob": 0.0011427643476054072}, {"id": 73, "seek": 61008, "start": 610.08, "end": 619.44, "text": " Uncache data to user space is fun. And the camera decided that placing Uncache memory up to the", "tokens": [1156, 66, 6000, 1412, 281, 4195, 1901, 307, 1019, 13, 400, 264, 2799, 3047, 300, 17221, 1156, 66, 6000, 4675, 493, 281, 264], "temperature": 0.0, "avg_logprob": -0.20680958515888936, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0006568894605152309}, {"id": 74, "seek": 61008, "start": 619.44, "end": 626.2, "text": " application is great. I thought someone stole my CPU, because the performance penalty is about", "tokens": [3861, 307, 869, 13, 286, 1194, 1580, 16326, 452, 13199, 11, 570, 264, 3389, 16263, 307, 466], "temperature": 0.0, "avg_logprob": -0.20680958515888936, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0006568894605152309}, {"id": 75, "seek": 61008, "start": 626.2, "end": 635.8000000000001, "text": " 10 times. But not. It's just the way it is. I believe this needs to be fixed. If you fight with", "tokens": [1266, 1413, 13, 583, 406, 13, 467, 311, 445, 264, 636, 309, 307, 13, 286, 1697, 341, 2203, 281, 312, 6806, 13, 759, 291, 2092, 365], "temperature": 0.0, "avg_logprob": -0.20680958515888936, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.0006568894605152309}, {"id": 76, "seek": 63580, "start": 635.8, "end": 643.24, "text": " the streamer and the performance seems too bad, this is probably why it's too bad. And I don't", "tokens": [264, 4309, 260, 293, 264, 3389, 2544, 886, 1578, 11, 341, 307, 1391, 983, 309, 311, 886, 1578, 13, 400, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.1870947826055833, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.004792527295649052}, {"id": 77, "seek": 63580, "start": 643.24, "end": 650.8399999999999, "text": " know, talk to your kind of person which can change it. By the way, in the old days, we used to have", "tokens": [458, 11, 751, 281, 428, 733, 295, 954, 597, 393, 1319, 309, 13, 3146, 264, 636, 11, 294, 264, 1331, 1708, 11, 321, 1143, 281, 362], "temperature": 0.0, "avg_logprob": -0.1870947826055833, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.004792527295649052}, {"id": 78, "seek": 63580, "start": 650.8399999999999, "end": 658.76, "text": " a read interface to get data from the camera. This is now deprecated. Of course, it is faster to", "tokens": [257, 1401, 9226, 281, 483, 1412, 490, 264, 2799, 13, 639, 307, 586, 1367, 13867, 770, 13, 2720, 1164, 11, 309, 307, 4663, 281], "temperature": 0.0, "avg_logprob": -0.1870947826055833, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.004792527295649052}, {"id": 79, "seek": 65876, "start": 658.76, "end": 667.12, "text": " read the data than to get Uncache memory, right? That's how badly Uncache memory sucks. Anyway,", "tokens": [1401, 264, 1412, 813, 281, 483, 1156, 66, 6000, 4675, 11, 558, 30, 663, 311, 577, 13425, 1156, 66, 6000, 4675, 15846, 13, 5684, 11], "temperature": 0.0, "avg_logprob": -0.16412064835831924, "compression_ratio": 1.4564102564102563, "no_speech_prob": 0.0008979629492387176}, {"id": 80, "seek": 65876, "start": 667.12, "end": 675.84, "text": " so Unixic camera started. Audio is really simple. You just create a small C application to sound,", "tokens": [370, 1156, 970, 299, 2799, 1409, 13, 25706, 307, 534, 2199, 13, 509, 445, 1884, 257, 1359, 383, 3861, 281, 1626, 11], "temperature": 0.0, "avg_logprob": -0.16412064835831924, "compression_ratio": 1.4564102564102563, "no_speech_prob": 0.0008979629492387176}, {"id": 81, "seek": 65876, "start": 675.84, "end": 682.52, "text": " record sound, split it to chunks so you can have easy processing later and timestamp them,", "tokens": [2136, 1626, 11, 7472, 309, 281, 24004, 370, 291, 393, 362, 1858, 9007, 1780, 293, 49108, 1215, 552, 11], "temperature": 0.0, "avg_logprob": -0.16412064835831924, "compression_ratio": 1.4564102564102563, "no_speech_prob": 0.0008979629492387176}, {"id": 82, "seek": 68252, "start": 682.52, "end": 691.8, "text": " which is important for synchronization. Live camera with some small hacks can write 35 frames per", "tokens": [597, 307, 1021, 337, 19331, 2144, 13, 10385, 2799, 365, 512, 1359, 33617, 393, 2464, 6976, 12083, 680], "temperature": 0.0, "avg_logprob": -0.22016626329564337, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.000236192558077164}, {"id": 83, "seek": 68252, "start": 691.8, "end": 698.64, "text": " second to megapixel this data to the file system. All you need to do is edit timestamp and sim", "tokens": [1150, 281, 34733, 34599, 341, 1412, 281, 264, 3991, 1185, 13, 1057, 291, 643, 281, 360, 307, 8129, 49108, 1215, 293, 1034], "temperature": 0.0, "avg_logprob": -0.22016626329564337, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.000236192558077164}, {"id": 84, "seek": 68252, "start": 698.64, "end": 705.0799999999999, "text": " links so your preview can tell you which is the latest image. Very easy. Control application,", "tokens": [6123, 370, 428, 14281, 393, 980, 291, 597, 307, 264, 6792, 3256, 13, 4372, 1858, 13, 12912, 3861, 11], "temperature": 0.0, "avg_logprob": -0.22016626329564337, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.000236192558077164}, {"id": 85, "seek": 70508, "start": 705.08, "end": 712.9200000000001, "text": " you probably don't want to start your video record from command line, but that's also very easy. You", "tokens": [291, 1391, 500, 380, 528, 281, 722, 428, 960, 2136, 490, 5622, 1622, 11, 457, 300, 311, 611, 588, 1858, 13, 509], "temperature": 0.0, "avg_logprob": -0.244865336888273, "compression_ratio": 1.4405940594059405, "no_speech_prob": 0.0009647570550441742}, {"id": 86, "seek": 70508, "start": 712.9200000000001, "end": 721.24, "text": " just take some GTK and Python. It creates timestamps, telling you, hey, start recording it now,", "tokens": [445, 747, 512, 17530, 42, 293, 15329, 13, 467, 7829, 49108, 23150, 11, 3585, 291, 11, 4177, 11, 722, 6613, 309, 586, 11], "temperature": 0.0, "avg_logprob": -0.244865336888273, "compression_ratio": 1.4405940594059405, "no_speech_prob": 0.0009647570550441742}, {"id": 87, "seek": 70508, "start": 721.24, "end": 730.48, "text": " and displays preview, which is the most intensive thing there. And this is basically what runs", "tokens": [293, 20119, 14281, 11, 597, 307, 264, 881, 18957, 551, 456, 13, 400, 341, 307, 1936, 437, 6676], "temperature": 0.0, "avg_logprob": -0.244865336888273, "compression_ratio": 1.4405940594059405, "no_speech_prob": 0.0009647570550441742}, {"id": 88, "seek": 73048, "start": 730.48, "end": 736.04, "text": " during the recording, so this is to be determined a bit optimized. Post processing is not that", "tokens": [1830, 264, 6613, 11, 370, 341, 307, 281, 312, 9540, 257, 857, 26941, 13, 10223, 9007, 307, 406, 300], "temperature": 0.0, "avg_logprob": -0.18406437352760552, "compression_ratio": 1.5418326693227091, "no_speech_prob": 7.648187602171674e-05}, {"id": 89, "seek": 73048, "start": 736.04, "end": 743.12, "text": " important, right? So you just use Python and FFM pack to compress the resulting video stream. Easy.", "tokens": [1021, 11, 558, 30, 407, 291, 445, 764, 15329, 293, 479, 37, 44, 2844, 281, 14778, 264, 16505, 960, 4309, 13, 16002, 13], "temperature": 0.0, "avg_logprob": -0.18406437352760552, "compression_ratio": 1.5418326693227091, "no_speech_prob": 7.648187602171674e-05}, {"id": 90, "seek": 73048, "start": 743.12, "end": 749.5600000000001, "text": " This is something I was pretty happy about. If you want to deprecate it, you will need some setup", "tokens": [639, 307, 746, 286, 390, 1238, 2055, 466, 13, 759, 291, 528, 281, 1367, 13867, 473, 309, 11, 291, 486, 643, 512, 8657], "temperature": 0.0, "avg_logprob": -0.18406437352760552, "compression_ratio": 1.5418326693227091, "no_speech_prob": 7.648187602171674e-05}, {"id": 91, "seek": 73048, "start": 749.5600000000001, "end": 756.44, "text": " like patching clip camera and so on, but code is out there, and there will be easier method in", "tokens": [411, 9972, 278, 7353, 2799, 293, 370, 322, 11, 457, 3089, 307, 484, 456, 11, 293, 456, 486, 312, 3571, 3170, 294], "temperature": 0.0, "avg_logprob": -0.18406437352760552, "compression_ratio": 1.5418326693227091, "no_speech_prob": 7.648187602171674e-05}, {"id": 92, "seek": 75644, "start": 756.44, "end": 764.24, "text": " future. So I like this solution because I could use multiple languages to do my camera recording,", "tokens": [2027, 13, 407, 286, 411, 341, 3827, 570, 286, 727, 764, 3866, 8650, 281, 360, 452, 2799, 6613, 11], "temperature": 0.0, "avg_logprob": -0.177740725842151, "compression_ratio": 1.5892116182572613, "no_speech_prob": 0.0009681819356046617}, {"id": 93, "seek": 75644, "start": 764.24, "end": 771.6, "text": " write language for the job. In the end, this was few hundreds of lines of code total. And it could", "tokens": [2464, 2856, 337, 264, 1691, 13, 682, 264, 917, 11, 341, 390, 1326, 6779, 295, 3876, 295, 3089, 3217, 13, 400, 309, 727], "temperature": 0.0, "avg_logprob": -0.177740725842151, "compression_ratio": 1.5892116182572613, "no_speech_prob": 0.0009681819356046617}, {"id": 94, "seek": 75644, "start": 771.6, "end": 777.24, "text": " do some quite interesting stuff. Like you could take still pictures during recording. You simply", "tokens": [360, 512, 1596, 1880, 1507, 13, 1743, 291, 727, 747, 920, 5242, 1830, 6613, 13, 509, 2935], "temperature": 0.0, "avg_logprob": -0.177740725842151, "compression_ratio": 1.5892116182572613, "no_speech_prob": 0.0009681819356046617}, {"id": 95, "seek": 75644, "start": 777.24, "end": 784.0, "text": " copy the GTK one more time. Easy. In video resolution, but if you are recording it at two", "tokens": [5055, 264, 17530, 42, 472, 544, 565, 13, 16002, 13, 682, 960, 8669, 11, 457, 498, 291, 366, 6613, 309, 412, 732], "temperature": 0.0, "avg_logprob": -0.177740725842151, "compression_ratio": 1.5892116182572613, "no_speech_prob": 0.0009681819356046617}, {"id": 96, "seek": 78400, "start": 784.0, "end": 792.32, "text": " megapixels from phone camera, I'd say this is going to be pretty decent picture anyway. You could", "tokens": [34733, 970, 1625, 490, 2593, 2799, 11, 286, 1116, 584, 341, 307, 516, 281, 312, 1238, 8681, 3036, 4033, 13, 509, 727], "temperature": 0.0, "avg_logprob": -0.12936569987863733, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0009669540449976921}, {"id": 97, "seek": 78400, "start": 792.32, "end": 797.92, "text": " take photos with arbitrary delay. Like you could even take photos before the user asked for them", "tokens": [747, 5787, 365, 23211, 8577, 13, 1743, 291, 727, 754, 747, 5787, 949, 264, 4195, 2351, 337, 552], "temperature": 0.0, "avg_logprob": -0.12936569987863733, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0009669540449976921}, {"id": 98, "seek": 78400, "start": 797.92, "end": 804.76, "text": " because you are taking all of them anyway, so you just don't delete them. This was fun.", "tokens": [570, 291, 366, 1940, 439, 295, 552, 4033, 11, 370, 291, 445, 500, 380, 12097, 552, 13, 639, 390, 1019, 13], "temperature": 0.0, "avg_logprob": -0.12936569987863733, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0009669540449976921}, {"id": 99, "seek": 80476, "start": 804.76, "end": 816.48, "text": " Then I've got access to LibreM 5, which is different in important ways. It has damp", "tokens": [1396, 286, 600, 658, 2105, 281, 15834, 265, 44, 1025, 11, 597, 307, 819, 294, 1021, 2098, 13, 467, 575, 19498], "temperature": 0.0, "avg_logprob": -0.26156598643252726, "compression_ratio": 1.3838383838383839, "no_speech_prob": 0.006973018869757652}, {"id": 100, "seek": 80476, "start": 816.48, "end": 824.24, "text": " sensors, so it won't give you JPEG. But it had better support. Let camera work there out of the", "tokens": [14840, 11, 370, 309, 1582, 380, 976, 291, 508, 5208, 38, 13, 583, 309, 632, 1101, 1406, 13, 961, 2799, 589, 456, 484, 295, 264], "temperature": 0.0, "avg_logprob": -0.26156598643252726, "compression_ratio": 1.3838383838383839, "no_speech_prob": 0.006973018869757652}, {"id": 101, "seek": 80476, "start": 824.24, "end": 831.92, "text": " box. There was megapixel application, as I explained about before, it with patched megapixels,", "tokens": [2424, 13, 821, 390, 34733, 34599, 3861, 11, 382, 286, 8825, 466, 949, 11, 309, 365, 9972, 292, 34733, 970, 1625, 11], "temperature": 0.0, "avg_logprob": -0.26156598643252726, "compression_ratio": 1.3838383838383839, "no_speech_prob": 0.006973018869757652}, {"id": 102, "seek": 83192, "start": 831.92, "end": 839.3199999999999, "text": " but it had no auto exposure, auto white balance, or autofocus support. It couldn't report video.", "tokens": [457, 309, 632, 572, 8399, 10420, 11, 8399, 2418, 4772, 11, 420, 1476, 2670, 15206, 1406, 13, 467, 2809, 380, 2275, 960, 13], "temperature": 0.0, "avg_logprob": -0.17900855917679637, "compression_ratio": 1.4371859296482412, "no_speech_prob": 0.002041109371930361}, {"id": 103, "seek": 83192, "start": 839.3199999999999, "end": 848.16, "text": " And there's more issues on LibreM 5. Canon could use some work. It only gives you 8-bit data,", "tokens": [400, 456, 311, 544, 2663, 322, 15834, 265, 44, 1025, 13, 27666, 727, 764, 512, 589, 13, 467, 787, 2709, 291, 1649, 12, 5260, 1412, 11], "temperature": 0.0, "avg_logprob": -0.17900855917679637, "compression_ratio": 1.4371859296482412, "no_speech_prob": 0.002041109371930361}, {"id": 104, "seek": 83192, "start": 848.16, "end": 854.28, "text": " which is not really good enough for good photos. You can select one of these three resolutions,", "tokens": [597, 307, 406, 534, 665, 1547, 337, 665, 5787, 13, 509, 393, 3048, 472, 295, 613, 1045, 32179, 11], "temperature": 0.0, "avg_logprob": -0.17900855917679637, "compression_ratio": 1.4371859296482412, "no_speech_prob": 0.002041109371930361}, {"id": 105, "seek": 85428, "start": 854.28, "end": 863.16, "text": " so megapixel, three megapixels, or 13 megapixels, and for some reason only 23.5 frames per second", "tokens": [370, 34733, 34599, 11, 1045, 34733, 970, 1625, 11, 420, 3705, 34733, 970, 1625, 11, 293, 337, 512, 1778, 787, 6673, 13, 20, 12083, 680, 1150], "temperature": 0.0, "avg_logprob": -0.177949770902976, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.0007562709506601095}, {"id": 106, "seek": 85428, "start": 863.16, "end": 872.4399999999999, "text": " work. I don't know why. Hardware has face detection autofocus, which is a very cool", "tokens": [589, 13, 286, 500, 380, 458, 983, 13, 11817, 3039, 575, 1851, 17784, 1476, 2670, 15206, 11, 597, 307, 257, 588, 1627], "temperature": 0.0, "avg_logprob": -0.177949770902976, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.0007562709506601095}, {"id": 107, "seek": 85428, "start": 872.4399999999999, "end": 879.24, "text": " sounding toy, and I have to thank Purism for their hardware and for the great work they did on the", "tokens": [24931, 12058, 11, 293, 286, 362, 281, 1309, 14682, 1434, 337, 641, 8837, 293, 337, 264, 869, 589, 436, 630, 322, 264], "temperature": 0.0, "avg_logprob": -0.177949770902976, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.0007562709506601095}, {"id": 108, "seek": 87924, "start": 879.24, "end": 892.6800000000001, "text": " process of Verstek. They are heroes. That's the best photo I got with Nokia N900. Some megapixels,", "tokens": [1399, 295, 4281, 372, 916, 13, 814, 366, 12332, 13, 663, 311, 264, 1151, 5052, 286, 658, 365, 43980, 426, 23943, 13, 2188, 34733, 970, 1625, 11], "temperature": 0.0, "avg_logprob": -0.26003687005293996, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.0008631364908069372}, {"id": 109, "seek": 87924, "start": 892.6800000000001, "end": 898.6, "text": " they are very simple application. There's small development teams, so it's easy to work with,", "tokens": [436, 366, 588, 2199, 3861, 13, 821, 311, 1359, 3250, 5491, 11, 370, 309, 311, 1858, 281, 589, 365, 11], "temperature": 0.0, "avg_logprob": -0.26003687005293996, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.0008631364908069372}, {"id": 110, "seek": 87924, "start": 898.6, "end": 904.8, "text": " it's plain C, it's easy to mark patches. It does all the processing on the CPU,", "tokens": [309, 311, 11121, 383, 11, 309, 311, 1858, 281, 1491, 26531, 13, 467, 775, 439, 264, 9007, 322, 264, 13199, 11], "temperature": 0.0, "avg_logprob": -0.26003687005293996, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.0008631364908069372}, {"id": 111, "seek": 90480, "start": 904.8, "end": 912.8399999999999, "text": " which is great if you want to change the processing. So I started to do auto exposure because that's", "tokens": [597, 307, 869, 498, 291, 528, 281, 1319, 264, 9007, 13, 407, 286, 1409, 281, 360, 8399, 10420, 570, 300, 311], "temperature": 0.0, "avg_logprob": -0.15893214261984523, "compression_ratio": 1.472636815920398, "no_speech_prob": 0.00018624839140102267}, {"id": 112, "seek": 90480, "start": 912.8399999999999, "end": 921.68, "text": " the most important part, and I did a very simple one. I prototyped on N900 years ago. So basically,", "tokens": [264, 881, 1021, 644, 11, 293, 286, 630, 257, 588, 2199, 472, 13, 286, 46219, 3452, 322, 426, 23943, 924, 2057, 13, 407, 1936, 11], "temperature": 0.0, "avg_logprob": -0.15893214261984523, "compression_ratio": 1.472636815920398, "no_speech_prob": 0.00018624839140102267}, {"id": 113, "seek": 90480, "start": 921.68, "end": 931.3199999999999, "text": " if you have too much, too white pixels, like overexposed, you need to turn it down to exposure,", "tokens": [498, 291, 362, 886, 709, 11, 886, 2418, 18668, 11, 411, 38657, 87, 79, 1744, 11, 291, 643, 281, 1261, 309, 760, 281, 10420, 11], "temperature": 0.0, "avg_logprob": -0.15893214261984523, "compression_ratio": 1.472636815920398, "no_speech_prob": 0.00018624839140102267}, {"id": 114, "seek": 93132, "start": 931.32, "end": 938.8000000000001, "text": " right? And if you don't have enough white enough pixels, you need to turn the exposure up,", "tokens": [558, 30, 400, 498, 291, 500, 380, 362, 1547, 2418, 1547, 18668, 11, 291, 643, 281, 1261, 264, 10420, 493, 11], "temperature": 0.0, "avg_logprob": -0.13555729514674136, "compression_ratio": 1.6069868995633187, "no_speech_prob": 0.0017791327554732561}, {"id": 115, "seek": 93132, "start": 938.8000000000001, "end": 945.7600000000001, "text": " and this is it, and this works well enough. It takes a few seconds to converge, can be improved,", "tokens": [293, 341, 307, 309, 11, 293, 341, 1985, 731, 1547, 13, 467, 2516, 257, 1326, 3949, 281, 41881, 11, 393, 312, 9689, 11], "temperature": 0.0, "avg_logprob": -0.13555729514674136, "compression_ratio": 1.6069868995633187, "no_speech_prob": 0.0017791327554732561}, {"id": 116, "seek": 93132, "start": 945.7600000000001, "end": 954.32, "text": " I don't know how to do that, but this is good enough to take photos. Other thing is auto white", "tokens": [286, 500, 380, 458, 577, 281, 360, 300, 11, 457, 341, 307, 665, 1547, 281, 747, 5787, 13, 5358, 551, 307, 8399, 2418], "temperature": 0.0, "avg_logprob": -0.13555729514674136, "compression_ratio": 1.6069868995633187, "no_speech_prob": 0.0017791327554732561}, {"id": 117, "seek": 93132, "start": 954.32, "end": 959.4000000000001, "text": " balance. This is not that important because you can do it in post processing. Anyway,", "tokens": [4772, 13, 639, 307, 406, 300, 1021, 570, 291, 393, 360, 309, 294, 2183, 9007, 13, 5684, 11], "temperature": 0.0, "avg_logprob": -0.13555729514674136, "compression_ratio": 1.6069868995633187, "no_speech_prob": 0.0017791327554732561}, {"id": 118, "seek": 95940, "start": 959.4, "end": 966.88, "text": " they did have manual white balance, so I felt this is easy enough to do. It will need some", "tokens": [436, 630, 362, 9688, 2418, 4772, 11, 370, 286, 2762, 341, 307, 1858, 1547, 281, 360, 13, 467, 486, 643, 512], "temperature": 0.0, "avg_logprob": -0.15817579811002003, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.0038696310948580503}, {"id": 119, "seek": 95940, "start": 966.88, "end": 973.9599999999999, "text": " more work. Again, if it's too blue, you make it more red. If it's too red, you make it more blue.", "tokens": [544, 589, 13, 3764, 11, 498, 309, 311, 886, 3344, 11, 291, 652, 309, 544, 2182, 13, 759, 309, 311, 886, 2182, 11, 291, 652, 309, 544, 3344, 13], "temperature": 0.0, "avg_logprob": -0.15817579811002003, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.0038696310948580503}, {"id": 120, "seek": 95940, "start": 973.9599999999999, "end": 983.6, "text": " That's it, works well enough. And in a few hundred lines of code, I had simple software only,", "tokens": [663, 311, 309, 11, 1985, 731, 1547, 13, 400, 294, 257, 1326, 3262, 3876, 295, 3089, 11, 286, 632, 2199, 4722, 787, 11], "temperature": 0.0, "avg_logprob": -0.15817579811002003, "compression_ratio": 1.540983606557377, "no_speech_prob": 0.0038696310948580503}, {"id": 121, "seek": 98360, "start": 983.6, "end": 992.84, "text": " auto exposure, and I got that merged. Next step is autofocus. Autofocus is something", "tokens": [8399, 10420, 11, 293, 286, 658, 300, 36427, 13, 3087, 1823, 307, 1476, 2670, 15206, 13, 6049, 2670, 15206, 307, 746], "temperature": 0.0, "avg_logprob": -0.14710335050310408, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.0023375258315354586}, {"id": 122, "seek": 98360, "start": 992.84, "end": 1000.88, "text": " which deserves more respect because you really want it tuned, but well, if you want to do it", "tokens": [597, 17037, 544, 3104, 570, 291, 534, 528, 309, 10870, 11, 457, 731, 11, 498, 291, 528, 281, 360, 309], "temperature": 0.0, "avg_logprob": -0.14710335050310408, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.0023375258315354586}, {"id": 123, "seek": 98360, "start": 1000.88, "end": 1008.08, "text": " simply, you just start from the infinity. You compute blurriness of each frame, and you only", "tokens": [2935, 11, 291, 445, 722, 490, 264, 13202, 13, 509, 14722, 14257, 81, 1324, 295, 1184, 3920, 11, 293, 291, 787], "temperature": 0.0, "avg_logprob": -0.14710335050310408, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.0023375258315354586}, {"id": 124, "seek": 100808, "start": 1008.08, "end": 1013.8000000000001, "text": " need to take a look at part of the image if you want to save your CPU, and you start your sweep,", "tokens": [643, 281, 747, 257, 574, 412, 644, 295, 264, 3256, 498, 291, 528, 281, 3155, 428, 13199, 11, 293, 291, 722, 428, 22169, 11], "temperature": 0.0, "avg_logprob": -0.13722589853647593, "compression_ratio": 1.595505617977528, "no_speech_prob": 0.0003732062177732587}, {"id": 125, "seek": 100808, "start": 1013.8000000000001, "end": 1021.08, "text": " you start to blink the focus closer, and when the image gets more blurry, well, you stop. You", "tokens": [291, 722, 281, 24667, 264, 1879, 4966, 11, 293, 562, 264, 3256, 2170, 544, 37644, 11, 731, 11, 291, 1590, 13, 509], "temperature": 0.0, "avg_logprob": -0.13722589853647593, "compression_ratio": 1.595505617977528, "no_speech_prob": 0.0003732062177732587}, {"id": 126, "seek": 100808, "start": 1021.08, "end": 1027.76, "text": " might want to go a little bit back because of the physical issues of the lens, but this works", "tokens": [1062, 528, 281, 352, 257, 707, 857, 646, 570, 295, 264, 4001, 2663, 295, 264, 6765, 11, 457, 341, 1985], "temperature": 0.0, "avg_logprob": -0.13722589853647593, "compression_ratio": 1.595505617977528, "no_speech_prob": 0.0003732062177732587}, {"id": 127, "seek": 102776, "start": 1027.76, "end": 1038.8, "text": " well better than manual focus, and I got it merged rather quickly. Next step was video, so I decided", "tokens": [731, 1101, 813, 9688, 1879, 11, 293, 286, 658, 309, 36427, 2831, 2661, 13, 3087, 1823, 390, 960, 11, 370, 286, 3047], "temperature": 0.0, "avg_logprob": -0.23195879082930715, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.0013847659574821591}, {"id": 128, "seek": 102776, "start": 1038.8, "end": 1048.84, "text": " that I like the ideas from Unixi Camera, and simply did 0.8 megapixels recording directly to the", "tokens": [300, 286, 411, 264, 3487, 490, 1156, 970, 72, 23734, 11, 293, 2935, 630, 1958, 13, 23, 34733, 970, 1625, 6613, 3838, 281, 264], "temperature": 0.0, "avg_logprob": -0.23195879082930715, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.0013847659574821591}, {"id": 129, "seek": 102776, "start": 1048.84, "end": 1055.32, "text": " disk. I hacked millipixels to save timestamped frames, and left post-processing after the", "tokens": [12355, 13, 286, 36218, 1728, 647, 970, 1625, 281, 3155, 49108, 36970, 12083, 11, 293, 1411, 2183, 12, 41075, 278, 934, 264], "temperature": 0.0, "avg_logprob": -0.23195879082930715, "compression_ratio": 1.4494949494949494, "no_speech_prob": 0.0013847659574821591}, {"id": 130, "seek": 105532, "start": 1055.32, "end": 1063.96, "text": " user presses the stop button. Easy to do, obvious to their disadvantages, right? You are now limited", "tokens": [4195, 40892, 264, 1590, 2960, 13, 16002, 281, 360, 11, 6322, 281, 641, 37431, 11, 558, 30, 509, 366, 586, 5567], "temperature": 0.0, "avg_logprob": -0.14091649373372395, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0002743231598287821}, {"id": 131, "seek": 105532, "start": 1063.96, "end": 1069.76, "text": " by the disk space, and maybe you could say it's not quite nice to the flash to just stream raw", "tokens": [538, 264, 12355, 1901, 11, 293, 1310, 291, 727, 584, 309, 311, 406, 1596, 1481, 281, 264, 7319, 281, 445, 4309, 8936], "temperature": 0.0, "avg_logprob": -0.14091649373372395, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0002743231598287821}, {"id": 132, "seek": 105532, "start": 1069.76, "end": 1078.24, "text": " data to it, but hey, the flash is cheap and the phone will die anyway. Post-processing is quite", "tokens": [1412, 281, 309, 11, 457, 4177, 11, 264, 7319, 307, 7084, 293, 264, 2593, 486, 978, 4033, 13, 10223, 12, 41075, 278, 307, 1596], "temperature": 0.0, "avg_logprob": -0.14091649373372395, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0002743231598287821}, {"id": 133, "seek": 107824, "start": 1078.24, "end": 1085.72, "text": " long, it takes five times slower than recording, or I guess this could be optimized. This is again", "tokens": [938, 11, 309, 2516, 1732, 1413, 14009, 813, 6613, 11, 420, 286, 2041, 341, 727, 312, 26941, 13, 639, 307, 797], "temperature": 0.0, "avg_logprob": -0.18968790548819084, "compression_ratio": 1.46, "no_speech_prob": 0.0016545013058930635}, {"id": 134, "seek": 107824, "start": 1085.72, "end": 1095.24, "text": " my old code, so I'm Python with FFmpeg. Ideally, there is hardware to do the encoding, we should", "tokens": [452, 1331, 3089, 11, 370, 286, 478, 15329, 365, 479, 37, 76, 494, 70, 13, 40817, 11, 456, 307, 8837, 281, 360, 264, 43430, 11, 321, 820], "temperature": 0.0, "avg_logprob": -0.18968790548819084, "compression_ratio": 1.46, "no_speech_prob": 0.0016545013058930635}, {"id": 135, "seek": 107824, "start": 1095.24, "end": 1103.88, "text": " use it, but I feel that doing that is awful lot of work. Anyway, this is now upstream, so if you", "tokens": [764, 309, 11, 457, 286, 841, 300, 884, 300, 307, 11232, 688, 295, 589, 13, 5684, 11, 341, 307, 586, 33915, 11, 370, 498, 291], "temperature": 0.0, "avg_logprob": -0.18968790548819084, "compression_ratio": 1.46, "no_speech_prob": 0.0016545013058930635}, {"id": 136, "seek": 110388, "start": 1103.88, "end": 1113.0800000000002, "text": " update your LibreM5, you should be able to take video off, and I believe it's important to have", "tokens": [5623, 428, 15834, 265, 44, 20, 11, 291, 820, 312, 1075, 281, 747, 960, 766, 11, 293, 286, 1697, 309, 311, 1021, 281, 362], "temperature": 0.0, "avg_logprob": -0.1398101994689082, "compression_ratio": 1.4422110552763818, "no_speech_prob": 0.0023614491801708937}, {"id": 137, "seek": 110388, "start": 1113.0800000000002, "end": 1121.1200000000001, "text": " something other than video recording. Next thing I want to talk about, which is very exciting,", "tokens": [746, 661, 813, 960, 6613, 13, 3087, 551, 286, 528, 281, 751, 466, 11, 597, 307, 588, 4670, 11], "temperature": 0.0, "avg_logprob": -0.1398101994689082, "compression_ratio": 1.4422110552763818, "no_speech_prob": 0.0023614491801708937}, {"id": 138, "seek": 110388, "start": 1121.1200000000001, "end": 1131.44, "text": " is face detection autofocus. You may want to Google it for nice explanations, but basically they", "tokens": [307, 1851, 17784, 1476, 2670, 15206, 13, 509, 815, 528, 281, 3329, 309, 337, 1481, 28708, 11, 457, 1936, 436], "temperature": 0.0, "avg_logprob": -0.1398101994689082, "compression_ratio": 1.4422110552763818, "no_speech_prob": 0.0023614491801708937}, {"id": 139, "seek": 113144, "start": 1131.44, "end": 1137.64, "text": " have selected some blue pixels, they are special, and they are special in a way that they only", "tokens": [362, 8209, 512, 3344, 18668, 11, 436, 366, 2121, 11, 293, 436, 366, 2121, 294, 257, 636, 300, 436, 787], "temperature": 0.0, "avg_logprob": -0.17966360588596292, "compression_ratio": 1.5895953757225434, "no_speech_prob": 0.0033731693401932716}, {"id": 140, "seek": 113144, "start": 1137.64, "end": 1145.24, "text": " take light from certain day directions. So you have a lens, and if it's focused, it's okay,", "tokens": [747, 1442, 490, 1629, 786, 11095, 13, 407, 291, 362, 257, 6765, 11, 293, 498, 309, 311, 5178, 11, 309, 311, 1392, 11], "temperature": 0.0, "avg_logprob": -0.17966360588596292, "compression_ratio": 1.5895953757225434, "no_speech_prob": 0.0033731693401932716}, {"id": 141, "seek": 113144, "start": 1145.24, "end": 1153.92, "text": " the light comes and meets at the sensor, but if you are autofocus, funny set of happens,", "tokens": [264, 1442, 1487, 293, 13961, 412, 264, 10200, 11, 457, 498, 291, 366, 1476, 2670, 15206, 11, 4074, 992, 295, 2314, 11], "temperature": 0.0, "avg_logprob": -0.17966360588596292, "compression_ratio": 1.5895953757225434, "no_speech_prob": 0.0033731693401932716}, {"id": 142, "seek": 115392, "start": 1153.92, "end": 1165.4, "text": " and light from the left of the image ends up at different place on the sensor than the light", "tokens": [293, 1442, 490, 264, 1411, 295, 264, 3256, 5314, 493, 412, 819, 1081, 322, 264, 10200, 813, 264, 1442], "temperature": 0.0, "avg_logprob": -0.1249657199807363, "compression_ratio": 1.705521472392638, "no_speech_prob": 0.000710945634637028}, {"id": 143, "seek": 115392, "start": 1165.4, "end": 1173.44, "text": " from the right part of the lens. But if you block the light from the direction on the chip,", "tokens": [490, 264, 558, 644, 295, 264, 6765, 13, 583, 498, 291, 3461, 264, 1442, 490, 264, 3513, 322, 264, 11409, 11], "temperature": 0.0, "avg_logprob": -0.1249657199807363, "compression_ratio": 1.705521472392638, "no_speech_prob": 0.000710945634637028}, {"id": 144, "seek": 115392, "start": 1173.44, "end": 1182.68, "text": " which is easy to do, you can use it for focus. So if you take a line from the sensor, and you", "tokens": [597, 307, 1858, 281, 360, 11, 291, 393, 764, 309, 337, 1879, 13, 407, 498, 291, 747, 257, 1622, 490, 264, 10200, 11, 293, 291], "temperature": 0.0, "avg_logprob": -0.1249657199807363, "compression_ratio": 1.705521472392638, "no_speech_prob": 0.000710945634637028}, {"id": 145, "seek": 118268, "start": 1182.68, "end": 1190.1200000000001, "text": " have on the top you will have left special pixels, and on the bottom you have right special", "tokens": [362, 322, 264, 1192, 291, 486, 362, 1411, 2121, 18668, 11, 293, 322, 264, 2767, 291, 362, 558, 2121], "temperature": 0.0, "avg_logprob": -0.1742071787516276, "compression_ratio": 1.825242718446602, "no_speech_prob": 0.0006733349291607738}, {"id": 146, "seek": 118268, "start": 1190.1200000000001, "end": 1196.2, "text": " pixels, for example, then you will have this. The tree you will see on the line will be at", "tokens": [18668, 11, 337, 1365, 11, 550, 291, 486, 362, 341, 13, 440, 4230, 291, 486, 536, 322, 264, 1622, 486, 312, 412], "temperature": 0.0, "avg_logprob": -0.1742071787516276, "compression_ratio": 1.825242718446602, "no_speech_prob": 0.0006733349291607738}, {"id": 147, "seek": 118268, "start": 1196.2, "end": 1203.52, "text": " different positions on different special pixels. Well, and you can use this to focus, right? You", "tokens": [819, 8432, 322, 819, 2121, 18668, 13, 1042, 11, 293, 291, 393, 764, 341, 281, 1879, 11, 558, 30, 509], "temperature": 0.0, "avg_logprob": -0.1742071787516276, "compression_ratio": 1.825242718446602, "no_speech_prob": 0.0006733349291607738}, {"id": 148, "seek": 118268, "start": 1203.52, "end": 1210.92, "text": " just compute correlation between the two lines, and it directly tells you how much autofocus you", "tokens": [445, 14722, 20009, 1296, 264, 732, 3876, 11, 293, 309, 3838, 5112, 291, 577, 709, 1476, 2670, 15206, 291], "temperature": 0.0, "avg_logprob": -0.1742071787516276, "compression_ratio": 1.825242718446602, "no_speech_prob": 0.0006733349291607738}, {"id": 149, "seek": 121092, "start": 1210.92, "end": 1218.68, "text": " are, and in which direction you should focus. This was great to play with, it was like hacking.", "tokens": [366, 11, 293, 294, 597, 3513, 291, 820, 1879, 13, 639, 390, 869, 281, 862, 365, 11, 309, 390, 411, 31422, 13], "temperature": 0.0, "avg_logprob": -0.20225754590101644, "compression_ratio": 1.4894736842105263, "no_speech_prob": 0.00032678930438123643}, {"id": 150, "seek": 121092, "start": 1218.68, "end": 1228.4, "text": " Unfortunately, it is not too usable on LibreM5. They are two issues for the special pixels are", "tokens": [8590, 11, 309, 307, 406, 886, 29975, 322, 15834, 265, 44, 20, 13, 814, 366, 732, 2663, 337, 264, 2121, 18668, 366], "temperature": 0.0, "avg_logprob": -0.20225754590101644, "compression_ratio": 1.4894736842105263, "no_speech_prob": 0.00032678930438123643}, {"id": 151, "seek": 121092, "start": 1228.4, "end": 1234.3200000000002, "text": " quite far apart, which they basically have to, because if you made all the pictures special,", "tokens": [1596, 1400, 4936, 11, 597, 436, 1936, 362, 281, 11, 570, 498, 291, 1027, 439, 264, 5242, 2121, 11], "temperature": 0.0, "avg_logprob": -0.20225754590101644, "compression_ratio": 1.4894736842105263, "no_speech_prob": 0.00032678930438123643}, {"id": 152, "seek": 123432, "start": 1234.32, "end": 1241.6, "text": " you would have, you would lose your resolution, and it only works in the high resolution mode,", "tokens": [291, 576, 362, 11, 291, 576, 3624, 428, 8669, 11, 293, 309, 787, 1985, 294, 264, 1090, 8669, 4391, 11], "temperature": 0.0, "avg_logprob": -0.22920952629797237, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.0015019408892840147}, {"id": 153, "seek": 123432, "start": 1241.6, "end": 1248.1599999999999, "text": " and you don't want to run your preview in high resolution mode. So if someone is interested", "tokens": [293, 291, 500, 380, 528, 281, 1190, 428, 14281, 294, 1090, 8669, 4391, 13, 407, 498, 1580, 307, 3102], "temperature": 0.0, "avg_logprob": -0.22920952629797237, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.0015019408892840147}, {"id": 154, "seek": 123432, "start": 1248.1599999999999, "end": 1253.84, "text": " in fade detection autofocus, I have the code, the code is on the, on the GitLab somewhere. It was", "tokens": [294, 21626, 17784, 1476, 2670, 15206, 11, 286, 362, 264, 3089, 11, 264, 3089, 307, 322, 264, 11, 322, 264, 16939, 37880, 4079, 13, 467, 390], "temperature": 0.0, "avg_logprob": -0.22920952629797237, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.0015019408892840147}, {"id": 155, "seek": 123432, "start": 1253.84, "end": 1262.48, "text": " fun experiment, it worked, but I decided, like, for real focus, you would probably have to do", "tokens": [1019, 5120, 11, 309, 2732, 11, 457, 286, 3047, 11, 411, 11, 337, 957, 1879, 11, 291, 576, 1391, 362, 281, 360], "temperature": 0.0, "avg_logprob": -0.22920952629797237, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.0015019408892840147}, {"id": 156, "seek": 126248, "start": 1262.48, "end": 1267.92, "text": " hybrid, like do course focus using the fade detection, and then do contrast detection on the,", "tokens": [13051, 11, 411, 360, 1164, 1879, 1228, 264, 21626, 17784, 11, 293, 550, 360, 8712, 17784, 322, 264, 11], "temperature": 0.0, "avg_logprob": -0.2289398701985677, "compression_ratio": 1.4946808510638299, "no_speech_prob": 0.0013718361733481288}, {"id": 157, "seek": 126248, "start": 1267.92, "end": 1276.24, "text": " on the end. It seemed like a lot of work, and with the driver, which would only give you 23", "tokens": [322, 264, 917, 13, 467, 6576, 411, 257, 688, 295, 589, 11, 293, 365, 264, 6787, 11, 597, 576, 787, 976, 291, 6673], "temperature": 0.0, "avg_logprob": -0.2289398701985677, "compression_ratio": 1.4946808510638299, "no_speech_prob": 0.0013718361733481288}, {"id": 158, "seek": 126248, "start": 1276.24, "end": 1289.16, "text": " frames per second, and so on. Well, I decided not to take this much. So I have some wish lists,", "tokens": [12083, 680, 1150, 11, 293, 370, 322, 13, 1042, 11, 286, 3047, 406, 281, 747, 341, 709, 13, 407, 286, 362, 512, 3172, 14511, 11], "temperature": 0.0, "avg_logprob": -0.2289398701985677, "compression_ratio": 1.4946808510638299, "no_speech_prob": 0.0013718361733481288}, {"id": 159, "seek": 128916, "start": 1289.16, "end": 1294.28, "text": " and I think I have, like, five minutes left. So five minutes talking, or five minutes questions?", "tokens": [293, 286, 519, 286, 362, 11, 411, 11, 1732, 2077, 1411, 13, 407, 1732, 2077, 1417, 11, 420, 1732, 2077, 1651, 30], "temperature": 0.0, "avg_logprob": -0.20504961731613322, "compression_ratio": 1.6812227074235808, "no_speech_prob": 0.0023231611121445894}, {"id": 160, "seek": 128916, "start": 1294.28, "end": 1301.16, "text": " Including everything. Including everything. Okay. So I have a long wish list for all of the world.", "tokens": [27137, 1203, 13, 27137, 1203, 13, 1033, 13, 407, 286, 362, 257, 938, 3172, 1329, 337, 439, 295, 264, 1002, 13], "temperature": 0.0, "avg_logprob": -0.20504961731613322, "compression_ratio": 1.6812227074235808, "no_speech_prob": 0.0023231611121445894}, {"id": 161, "seek": 128916, "start": 1301.16, "end": 1306.6000000000001, "text": " I would like to have better media control support in the tools, because it just doesn't work.", "tokens": [286, 576, 411, 281, 362, 1101, 3021, 1969, 1406, 294, 264, 3873, 11, 570, 309, 445, 1177, 380, 589, 13], "temperature": 0.0, "avg_logprob": -0.20504961731613322, "compression_ratio": 1.6812227074235808, "no_speech_prob": 0.0023231611121445894}, {"id": 162, "seek": 128916, "start": 1306.6000000000001, "end": 1313.88, "text": " A piece changed, and the tools didn't catch up. I would like library to get conversions between", "tokens": [316, 2522, 3105, 11, 293, 264, 3873, 994, 380, 3745, 493, 13, 286, 576, 411, 6405, 281, 483, 42256, 1296], "temperature": 0.0, "avg_logprob": -0.20504961731613322, "compression_ratio": 1.6812227074235808, "no_speech_prob": 0.0023231611121445894}, {"id": 163, "seek": 131388, "start": 1313.88, "end": 1320.44, "text": " formats, and so on. I would like better than 8B support. I would like multiple applications", "tokens": [25879, 11, 293, 370, 322, 13, 286, 576, 411, 1101, 813, 1649, 33, 1406, 13, 286, 576, 411, 3866, 5821], "temperature": 0.0, "avg_logprob": -0.22871680969887592, "compression_ratio": 1.7314814814814814, "no_speech_prob": 0.0020509010646492243}, {"id": 164, "seek": 131388, "start": 1321.0800000000002, "end": 1327.88, "text": " accessing the camera at the same time. Better support would be nice, and someone should", "tokens": [26440, 264, 2799, 412, 264, 912, 565, 13, 15753, 1406, 576, 312, 1481, 11, 293, 1580, 820], "temperature": 0.0, "avg_logprob": -0.22871680969887592, "compression_ratio": 1.7314814814814814, "no_speech_prob": 0.0020509010646492243}, {"id": 165, "seek": 131388, "start": 1327.88, "end": 1335.8000000000002, "text": " re-resolve the caching problem, because that's bad. For lip camera, I shouldn't be really hacking", "tokens": [319, 12, 495, 37361, 264, 269, 2834, 1154, 11, 570, 300, 311, 1578, 13, 1171, 8280, 2799, 11, 286, 4659, 380, 312, 534, 31422], "temperature": 0.0, "avg_logprob": -0.22871680969887592, "compression_ratio": 1.7314814814814814, "no_speech_prob": 0.0020509010646492243}, {"id": 166, "seek": 131388, "start": 1335.8000000000002, "end": 1341.24, "text": " millipixels. I should be hacking lip camera, but lip camera doesn't really support software ISP,", "tokens": [1728, 647, 970, 1625, 13, 286, 820, 312, 31422, 8280, 2799, 11, 457, 8280, 2799, 1177, 380, 534, 1406, 4722, 6205, 47, 11], "temperature": 0.0, "avg_logprob": -0.22871680969887592, "compression_ratio": 1.7314814814814814, "no_speech_prob": 0.0020509010646492243}, {"id": 167, "seek": 134124, "start": 1341.24, "end": 1348.68, "text": " and I'm not a great C++ hacker, so I could do it, but they will reject the patches if I do. So I", "tokens": [293, 286, 478, 406, 257, 869, 383, 25472, 38155, 11, 370, 286, 727, 360, 309, 11, 457, 436, 486, 8248, 264, 26531, 498, 286, 360, 13, 407, 286], "temperature": 0.0, "avg_logprob": -0.1576536496480306, "compression_ratio": 1.3602941176470589, "no_speech_prob": 0.0019302353030070662}, {"id": 168, "seek": 134124, "start": 1348.68, "end": 1355.48, "text": " would much prefer them to do the preparation, and then I would fill the code. And that's", "tokens": [576, 709, 4382, 552, 281, 360, 264, 13081, 11, 293, 550, 286, 576, 2836, 264, 3089, 13, 400, 300, 311], "temperature": 0.0, "avg_logprob": -0.1576536496480306, "compression_ratio": 1.3602941176470589, "no_speech_prob": 0.0019302353030070662}, {"id": 169, "seek": 135548, "start": 1355.48, "end": 1372.28, "text": " pretty much it. So time for questions.", "tokens": [1238, 709, 309, 13, 407, 565, 337, 1651, 13], "temperature": 0.0, "avg_logprob": -0.45748878347462624, "compression_ratio": 1.0246913580246915, "no_speech_prob": 0.0015495064435526729}, {"id": 170, "seek": 135548, "start": 1372.28, "end": 1372.28, "text": " Sorry?", "tokens": [4919, 30], "temperature": 0.0, "avg_logprob": -0.45748878347462624, "compression_ratio": 1.0246913580246915, "no_speech_prob": 0.0015495064435526729}, {"id": 171, "seek": 135548, "start": 1372.28, "end": 1380.28, "text": " We do want your work to software ISP.", "tokens": [492, 360, 528, 428, 589, 281, 4722, 6205, 47, 13], "temperature": 0.0, "avg_logprob": -0.45748878347462624, "compression_ratio": 1.0246913580246915, "no_speech_prob": 0.0015495064435526729}, {"id": 172, "seek": 138028, "start": 1380.28, "end": 1387.16, "text": " The comment is that they want my work on software ISP, and I guess I will want to cooperate, but", "tokens": [440, 2871, 307, 300, 436, 528, 452, 589, 322, 4722, 6205, 47, 11, 293, 286, 2041, 286, 486, 528, 281, 26667, 11, 457], "temperature": 0.0, "avg_logprob": -0.1920829332791842, "compression_ratio": 1.4085365853658536, "no_speech_prob": 0.01020438689738512}, {"id": 173, "seek": 138028, "start": 1388.52, "end": 1395.48, "text": " lip camera is not easy to hack for me, because of the C++ stuff. So be patient, and I maybe", "tokens": [8280, 2799, 307, 406, 1858, 281, 10339, 337, 385, 11, 570, 295, 264, 383, 25472, 1507, 13, 407, 312, 4537, 11, 293, 286, 1310], "temperature": 0.0, "avg_logprob": -0.1920829332791842, "compression_ratio": 1.4085365853658536, "no_speech_prob": 0.01020438689738512}, {"id": 174, "seek": 138028, "start": 1397.96, "end": 1400.04, "text": " it would be better if someone else did it.", "tokens": [309, 576, 312, 1101, 498, 1580, 1646, 630, 309, 13], "temperature": 0.0, "avg_logprob": -0.1920829332791842, "compression_ratio": 1.4085365853658536, "no_speech_prob": 0.01020438689738512}, {"id": 175, "seek": 140004, "start": 1400.04, "end": 1413.08, "text": " Yes, so well, there will be not be much to see. So you know, millipixels could use some work too,", "tokens": [1079, 11, 370, 731, 11, 456, 486, 312, 406, 312, 709, 281, 536, 13, 407, 291, 458, 11, 1728, 647, 970, 1625, 727, 764, 512, 589, 886, 11], "temperature": 0.0, "avg_logprob": -0.2619739347888577, "compression_ratio": 1.3426573426573427, "no_speech_prob": 0.0027148500084877014}, {"id": 176, "seek": 140004, "start": 1413.08, "end": 1424.44, "text": " but I can take pictures, trust me. I didn't use autofocus for this, because, yes, I can do it.", "tokens": [457, 286, 393, 747, 5242, 11, 3361, 385, 13, 286, 994, 380, 764, 1476, 2670, 15206, 337, 341, 11, 570, 11, 2086, 11, 286, 393, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.2619739347888577, "compression_ratio": 1.3426573426573427, "no_speech_prob": 0.0027148500084877014}, {"id": 177, "seek": 142444, "start": 1424.44, "end": 1437.0, "text": " So it's now upstream, so you can just update the operating system, and you will get one,", "tokens": [407, 309, 311, 586, 33915, 11, 370, 291, 393, 445, 5623, 264, 7447, 1185, 11, 293, 291, 486, 483, 472, 11], "temperature": 0.0, "avg_logprob": -0.18802993855577835, "compression_ratio": 1.4094488188976377, "no_speech_prob": 0.00036710422136820853}, {"id": 178, "seek": 142444, "start": 1437.72, "end": 1444.2, "text": " and it should be possible to do just a short video recording too, so now you have all been", "tokens": [293, 309, 820, 312, 1944, 281, 360, 445, 257, 2099, 960, 6613, 886, 11, 370, 586, 291, 362, 439, 668], "temperature": 0.0, "avg_logprob": -0.18802993855577835, "compression_ratio": 1.4094488188976377, "no_speech_prob": 0.00036710422136820853}, {"id": 179, "seek": 144420, "start": 1444.2, "end": 1454.68, "text": " recorded, and now the CPU is busy converting that.", "tokens": [8287, 11, 293, 586, 264, 13199, 307, 5856, 29942, 300, 13], "temperature": 0.0, "avg_logprob": -0.4771900610490279, "compression_ratio": 0.9066666666666666, "no_speech_prob": 0.0051313405856490135}, {"id": 180, "seek": 145468, "start": 1454.68, "end": 1471.16, "text": " Okay, so I guess.", "tokens": [50364, 1033, 11, 370, 286, 2041, 13, 51188], "temperature": 0.0, "avg_logprob": -0.7004766994052463, "compression_ratio": 0.68, "no_speech_prob": 0.0025428375229239464}], "language": "en"}