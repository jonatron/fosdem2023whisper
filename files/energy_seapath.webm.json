{"text": " Hello everyone and welcome. I will today introduce you to the C-PASS project and the virtual edition for real-time Power Grid Substitution Automation. First of all, I will present myself. I'm a consultant in open source software at Savoie which is a French and Canadian company which is an expert in open source software and we offer technical services to other companies using open source software. The company is a member of the Yoctop project, the Linux Foundation and the Linux Foundation Energy which hosts the C-PASS project. Okay, let's dive into the context. We're experiencing an energy transition mostly because of two points. The first of all, the new power production. For example, the renewable energy. You have many new power sources which are distributed around the country and not constant in power. But also because the request of electricity has changed with electric mobility with smart services and the Internet of Things. We have a new customer, a new services for the power distribution and so we need a new power grid and a power grid control architecture. We need to be much more distributed and to have a power grid that is flexible and adaptive. That goes with the idea of new and much more data management in the substation to adapt quickly to the request of the customer and the production of renewable energy. The C-PASS project comes in response to this energy transition. The vision of the project is to move from a hardware-centric model to a software-centric model. We want to abstract everything we can from hardware to software. So instead of having many pieces of hardware in the substation that dialogues together, we want to control all these hardware pieces, the hardware boxes, with main software to control them. That will offer the flexibility and scalability we want. The C-PASS project also choose to direct into the open source development. The idea behind that is not to depend on any industrial and any other company but also to offer for everyone to come and see what is developed in the C-PASS project and let everyone offer his point of view from every other industry to develop a project that will need to be not only suitable for the power grid. We need many vision for the project to grow. This is inspired by the North American model. For example, AT&T did that to develop the new 5G software, the new 5G grid. They needed this flexibility and scalability and they did this transition from hardware-centric model to software-centric model. So here comes the C-PASS project, which is a software-enabled automation platform on Artifacturine. The mission of the C-PASS project is to develop a reference design at an industrial level for all applications to dialogue with. This platform will be open source and will run a virtualized automation for each goal we want to achieve, for each piece of software for each actuator or captor. They will be virtualized and encapsulated with the platform controlling the overall action. Our needs, we have many needs in this project. First of all, we need a very high preference in terms of real-time and latency because we want the grid to be flexible, yes, but also for security because we want to react very quickly if there is a problem. We also need the C-PASS project to be adaptable in terms of security. We want to be able to deploy patches and to close security breaches really quickly. We want it to be hardware-agnostic for everyone to be used, that goes with the open source mindset, and we want it to be really customizable and adaptable. Because we use open source software, we also will follow the state of the art of what already exists. The idea is to not reinvent the wheel every time but use already existing open source software, because we can because we are an open source project, and to configure it and to benefit from the fact that they are already really well done and already certified. We don't want to rewrite an entire program ourselves. That is nonsense in terms of open source software production. To achieve this requirement, we first set up a Yocto project which allows us to create a custom Linux distribution which is entirely hardware-agnostic. We just have to recompile everything for another hardware and that allows us to have a full control of package and versions that are on our Linux distribution. That's also really good for cybersecurity because we can easily track and patch every CVE. The Yocto project informed the user if they found a new CVE in one software that it is used, and we can patch directly using the source code because everything is open source. But by doing that, we got into a problem that many industries don't want to deal with the complexity of the Yocto project, and it's much more suitable for them to use, for example, Debian. We created another way of doing the CVE project, but using Debian and a real-time kernel, of course, and an unseable to configure the already created Debian. That's much more useful and easy to use, and we saw that there is a real need here that many industries want to use Debian instead of Yocto. But the two approaches exist today, and any customers that want to implement C-Pass can choose one of them. Okay, so here is our C-Pass project. At the bottom of it, we have the hardware platform, here Intel, but that can be anything, as I said, a Linux real-time kernel above it, and as I said, all the open source software that we want to use and to configure instead of writing it ourselves. All the parts with pacemaker and self are used for distributed file system and distributed VMs between many hypervisors, because the C-Pass project will use a cluster of hypervisors. We don't want all VMs to shut down if an hypervisor is dead. We want to replicate them and relaunch them immediately, automatically. OpenVswitch is used for controlling switch, Internet switches automatically. Of course, we don't want someone to come in the substation every time we need to do changes, so we use OpenVswitch. This comes with the software-centric approach, as I described before. DPDK is basically hardware acceleration for OpenVswitch, let's say that, and of course QMU and KVM, which is the basic couple for virtualization in Linux. So this is our C-Pass project. Two things are important here. First, that the C-Pass project in itself doesn't have any software itself. It is used to configure all these already existing software and use it to benefit from them. And on top of the C-Pass project, we will have all the VMs, and for example, every industrial we work with, and if one day we want to choose to change a piece of hardware because it's deprecated, we just have to shut down the VM, call someone else, and let it write software that will go in this VM. The changing of the piece of hardware will not interfere with the rest. This is a basic idea, basic innovation, first innovation of the C-Pass project. Okay, now I have described the project. I will go a bit more technical and speak about C-Pass testing project. How do we test an open-source project when everyone can write and can propose progress, and how do we write, how do we test a project that doesn't have any software in it, that use, that propose a mainframe but doesn't have any software, because all the software will be in the VMs, the customer software will be in the VMs. I will speak here for the Debian version, because it's simpler, but I'll explain it later. As I said, C-Pass must meet many requirements and provide many guarantees, and for that, we launch the CI at every pull request. Someone propose a pull request, it is accepted by a member of C-Pass, and the CI will launch automatically from this pull request. That means the pull request must build, of course, but also all the tests must be successful. All the tests that we wrote later must be successful for the pull request to be merged. That allows us to avoid regression on one part, but also to display all future tests for the parts we haven't implemented yet. And of course, that will be visible for everyone on GitHub, and especially the man that made the pull request. To achieve that, we will generate a test report to display all tests that pass or not. This report will organize all the 1,500 tests we have between categories and between machines, for example, cybersecurity category or real-time category, and all the hypervisors we will have. It will link all tests to requirements. This is especially useful in cybersecurity, because we have a bunch of requirements to meet, and many tests will link to a single requirement, so we can patch them and see them in terms of requirements. That will separate non-regression part on future work part, as I said before, and that will be visible for everyone on GitHub. What tests, let's say now, what tests we write? As I said, there is no software itself in CPAS, because it will be in the VMs. So all customer code is in the virtual machine. We can do any functional testing. This is nonsense here. But what we do want to do is to check unit requirements, for example, for cybersecurity, system-level testing, let's say. I put some example here. For example, we want to test that the key, the RSA key has the right permission for the right users. We want to check that the root password is randomized or is encrypted. We want to check a bash timeout that SSH has some permission and doesn't allow some connection, et cetera, et cetera. So this is very basic testing, no functional long testing, but configuration testing, let's say. To achieve that, we use a software called Kukinya that I will introduce here. This is a Linux firmware validation framework, and that allows us to write human-readable tests. I put an example on the right. This is a Kukinya configuration file, and you can test, for example, if a user exists, if a process is running, if a disk is mounted, if a Python package is here, et cetera, et cetera. So all of this is human-readable and written in a simple text file. Kukinya offers the abstraction necessary and allows us to write ourselves the complicated shell command to test something and something, and we will inevitably forget an option or something. Kukinya is used and most of all used in the embedded world, because it is easily portable, it requires only a shell, not even bash, just a shell. It is written itself in shell, so it doesn't have any compilation or an installation. It's really easy, and it can extract the results for us, either in CSV, simple or in more complicated, for example, XML, with a logging on the number of tests that pass and so on, many information. And of course, it is open source. Okay, now I have described everything. This is a complete CI that we have. A poll request is made on GitHub. All sources are downloaded on a self-hosted runner. We need to host a runner because we have a cluster to build. We can do that virtually. The Debian, all hypervisors, have already a Debian version as operating system. This version is, this Debian is configured by Ansible. We then deploy Kukinya, so the testing process, and all the testing files that I described before, the tests are launched, gathered in a PDF report, which is uploaded, and the link is given on the poll request on GitHub. This is the CI we currently have on CTAS. I will now go on two points of implementation that are interesting in our CI. First of all, as I said just before, all hypervisors have already a Debian version, and they use our operating system Debian. It is already deployed and already set up that allow us to avoid two problems. First of all, the compilation. So there is no compilation in this CI yet. And the flashing problem, which is a very big problem because automatically flashing and rebooting a machine is complicated. With Debian, we do not even think about that. This is already the same operating system, and we will just configure it every time with Ansible. That means we have to control the basic state, the default state of the CI, and that this is done through Ansible, first of all, using idempotency. So just mean Ansible will not do the same thing twice. But it is not really, not totally useful in our case, because some, for example, if we move or remove files, Ansible cannot roll back to the last version. It's not possible with Ansible. So to deal with that, we will shortly, not done yet, we will shortly implement an LVM snapshot of the default Debian. So we create a snapshot of the default state of the Debian before the CI, we launch the CI, and we then roll back with LVM to the default version. This is the ID. Another problem that we encounter with this CI, is that this is a complicated CI. We don't have compilation, but we need to recover our sources, launch test, configure, launch test, gather results, generate report, upload report, and so on. So many complicated things that required the runner to be configured to do all these things. And because the CI will evaluate over time, we don't want it to, we don't want to redeploy the runner or to reconfigure the runner every time. To avoid that, we use a Docker container, and we clone, re-download the sources of the CI, the code of the CI, every time, directly in the Docker container, and launch all the commands in this container. So Ansible is the Ansible command for conceiving configuration, the report generation, the upload of the report are each launched in the Docker container. That allows us not to deal with configuring and downloading package for the runner itself every time we made the CI evaluate. To do that, we also use a small tool called CQFD, which is really useful in our case. This is a simple common line Docker wrapper, but it will allow us to launch commands directly inside the Docker container. It maps the current directory in Docker, it creates a user in Docker with the same username as ours in order to deal with permissions, and so we can recall a CQFD run Ansible command, and it will execute Ansible in the Docker container, really useful in our case. Okay. Before the end of this presentation, I will talk about a bit about future works and what we will do later. First, as I said, this is a CI for the Debian version, because it was simpler, and we want to create the same for the Yocto version. Many problems with that. First, Yocto has a very complicated compilation and a really long compilation, so we need to deploy other runners to do that, and maybe handle concurrency problem. The machine needs to be flashed every time. We cannot, as with Debian, roll back to an old snapshot. This is not possible. The flashing problem is really difficult. We already tried to use a PXE, but that doesn't work. That's absolutely not hardware, hardware that's really dependent of hardware, and that doesn't work every time. We have two ideas to deal with that. Maybe configure with an update mechanism and consider the new version that has to be flashed as an update that can do job, or with a USB gadget to present the new version with a virtual USB key, as it was with a laptop and a real USB key that would plug in it. That is possible, but we don't have a configuration yet, and we are not sure which solution we will choose. The other thing to do is to run longer tests. I didn't talk about real-time tests here, or latency tests, because it is a really long test, many days. We cannot launch it at every request, but we have to launch it at every release. That's the thing we will do in the future, and to certify, to demonstrate that we met the requirement. That will have the form of this graph, for example, with all the measures we do, the maximum latency we have, the median latency we have, and so on. That will be launched at every release of CPAS. Thank you for hearing me during this presentation. If you want to experience some more with CPAS, it is open source, so you can go on the GitHub pages of CPAS. There are also some other conferences about CPAS available on YouTube, and for myself, I am already open to answer all your questions already. We already have a question from Markus. Markus says that it looks very similar to him, and because he is a maintainer of OpenHappian, there is extension to OpenHapp, and it chooses essentially lots of advanced batch scripting on top of Debian, and they also roll out a virtual VM in a Docker container in CI on every pull request upload. Can you say something about that? I read that. I don't know the software that you are talking about, but that's interesting, because essentially, batch scripting on top of Debian is a sort of trick we found to make the CPAS project with Debian, because originally, the only CPAS version was with Yocto, which offers much more configuration over the Linux system you have, but as I said, we found out that many constructors and many industrials don't want to dive into the complexity of Yocto, and so here we are creating many batch scripts to configure Debian properly, especially for cybersecurity questions, which are a bit complicated with that. But if you go to the GitHub pages of the CPAS project, you will see that many, many problems we have with Debian are not there with the Yocto version. Okay, so I don't see any other questions for now, but I just said two or three things that are not technically correct, and I just thought of that after I uploaded the video, but I said that there is no software embedded in the CPAS project, which is not technically true. The software we want to reach, so the interesting software will be the software that controls the actuator of the captors, and that will be in the VMs, in the virtual machines, of course, but we do develop some software in the CPAS project. For example, we have a virtual machine management system written in Python, which is just to manage our virtual machine in the cluster in a simpler way, and we do develop that in the CPAS project. I also said that the Yocto project doesn't use unseable, which is also not true, so the Yocto version of the CPAS project doesn't use unseable. Of course, we use it because we want to configure a cluster, so unseable is used just to do the network configuration of the cluster, because in the Yocto project, we already have configured the Linux system, because we have built it the way we want. In the Debian version, this is not possible, we just plug a Debian USB key with a real-time kernel, and that's all we can do, so everything else has to be configured through unseable. It's a much messier, a much bigger unseable repository for the Debian version. Yes, I think Marcus knows what we are talking about. And yes, for the last correction I can add, we have thought about how to implement the CI for the Yocto version and the problem of flashing the machines, and we found that the simpler way to do that is just to use an update mechanism. So we use software updates in the Yocto project, in the Yocto version, with two double banks, so we can just upload a new version of the C pass projects, as if it was a new version, even if it is just another pre-request to test. That works pretty well, and that avoid flashing problems, PXE problems that we have. Okay, so if there isn't any questions anymore, I say goodbye, and you can see me, I will be in the first dem this afternoon, you can solve for the pink sweat and of course the hat with the text on it, I think you can find me there. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 14.0, "text": " Hello everyone and welcome. I will today introduce you to the C-PASS project and the virtual", "tokens": [50364, 2425, 1518, 293, 2928, 13, 286, 486, 965, 5366, 291, 281, 264, 383, 12, 47, 19678, 1716, 293, 264, 6374, 51064], "temperature": 0.0, "avg_logprob": -0.37670160512455175, "compression_ratio": 1.3522727272727273, "no_speech_prob": 0.13213343918323517}, {"id": 1, "seek": 0, "start": 14.0, "end": 17.88, "text": " edition for real-time Power Grid Substitution Automation.", "tokens": [51064, 11377, 337, 957, 12, 3766, 7086, 42905, 42090, 6518, 24619, 399, 13, 51258], "temperature": 0.0, "avg_logprob": -0.37670160512455175, "compression_ratio": 1.3522727272727273, "no_speech_prob": 0.13213343918323517}, {"id": 2, "seek": 0, "start": 17.88, "end": 24.16, "text": " First of all, I will present myself. I'm a consultant in open source software at Savoie", "tokens": [51258, 2386, 295, 439, 11, 286, 486, 1974, 2059, 13, 286, 478, 257, 24676, 294, 1269, 4009, 4722, 412, 12346, 78, 414, 51572], "temperature": 0.0, "avg_logprob": -0.37670160512455175, "compression_ratio": 1.3522727272727273, "no_speech_prob": 0.13213343918323517}, {"id": 3, "seek": 2416, "start": 24.52, "end": 32.92, "text": " which is a French and Canadian company which is an expert in open source software and we", "tokens": [50382, 597, 307, 257, 5522, 293, 12641, 2237, 597, 307, 364, 5844, 294, 1269, 4009, 4722, 293, 321, 50802], "temperature": 0.0, "avg_logprob": -0.29846163493830985, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.2703792154788971}, {"id": 4, "seek": 2416, "start": 32.92, "end": 39.04, "text": " offer technical services to other companies using open source software. The company is a", "tokens": [50802, 2626, 6191, 3328, 281, 661, 3431, 1228, 1269, 4009, 4722, 13, 440, 2237, 307, 257, 51108], "temperature": 0.0, "avg_logprob": -0.29846163493830985, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.2703792154788971}, {"id": 5, "seek": 2416, "start": 39.04, "end": 45.480000000000004, "text": " member of the Yoctop project, the Linux Foundation and the Linux Foundation Energy which hosts the", "tokens": [51108, 4006, 295, 264, 7616, 349, 404, 1716, 11, 264, 18734, 10335, 293, 264, 18734, 10335, 14939, 597, 21573, 264, 51430], "temperature": 0.0, "avg_logprob": -0.29846163493830985, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.2703792154788971}, {"id": 6, "seek": 2416, "start": 45.480000000000004, "end": 53.28, "text": " C-PASS project. Okay, let's dive into the context. We're experiencing an energy transition", "tokens": [51430, 383, 12, 47, 19678, 1716, 13, 1033, 11, 718, 311, 9192, 666, 264, 4319, 13, 492, 434, 11139, 364, 2281, 6034, 51820], "temperature": 0.0, "avg_logprob": -0.29846163493830985, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.2703792154788971}, {"id": 7, "seek": 5328, "start": 54.24, "end": 64.08, "text": " mostly because of two points. The first of all, the new power production. For example,", "tokens": [50412, 5240, 570, 295, 732, 2793, 13, 440, 700, 295, 439, 11, 264, 777, 1347, 4265, 13, 1171, 1365, 11, 50904], "temperature": 0.0, "avg_logprob": -0.2343888759613037, "compression_ratio": 1.5359116022099448, "no_speech_prob": 0.017776651307940483}, {"id": 8, "seek": 5328, "start": 64.08, "end": 72.32, "text": " the renewable energy. You have many new power sources which are distributed around the country", "tokens": [50904, 264, 20938, 2281, 13, 509, 362, 867, 777, 1347, 7139, 597, 366, 12631, 926, 264, 1941, 51316], "temperature": 0.0, "avg_logprob": -0.2343888759613037, "compression_ratio": 1.5359116022099448, "no_speech_prob": 0.017776651307940483}, {"id": 9, "seek": 5328, "start": 72.32, "end": 81.04, "text": " and not constant in power. But also because the request of electricity has changed with electric", "tokens": [51316, 293, 406, 5754, 294, 1347, 13, 583, 611, 570, 264, 5308, 295, 10356, 575, 3105, 365, 5210, 51752], "temperature": 0.0, "avg_logprob": -0.2343888759613037, "compression_ratio": 1.5359116022099448, "no_speech_prob": 0.017776651307940483}, {"id": 10, "seek": 8104, "start": 81.04, "end": 90.48, "text": " mobility with smart services and the Internet of Things. We have a new customer, a new services", "tokens": [50364, 16199, 365, 4069, 3328, 293, 264, 7703, 295, 9514, 13, 492, 362, 257, 777, 5474, 11, 257, 777, 3328, 50836], "temperature": 0.0, "avg_logprob": -0.23354923541729267, "compression_ratio": 1.7065868263473054, "no_speech_prob": 0.006874054670333862}, {"id": 11, "seek": 8104, "start": 90.48, "end": 98.64000000000001, "text": " for the power distribution and so we need a new power grid and a power grid control architecture.", "tokens": [50836, 337, 264, 1347, 7316, 293, 370, 321, 643, 257, 777, 1347, 10748, 293, 257, 1347, 10748, 1969, 9482, 13, 51244], "temperature": 0.0, "avg_logprob": -0.23354923541729267, "compression_ratio": 1.7065868263473054, "no_speech_prob": 0.006874054670333862}, {"id": 12, "seek": 8104, "start": 98.64000000000001, "end": 107.44000000000001, "text": " We need to be much more distributed and to have a power grid that is flexible and adaptive.", "tokens": [51244, 492, 643, 281, 312, 709, 544, 12631, 293, 281, 362, 257, 1347, 10748, 300, 307, 11358, 293, 27912, 13, 51684], "temperature": 0.0, "avg_logprob": -0.23354923541729267, "compression_ratio": 1.7065868263473054, "no_speech_prob": 0.006874054670333862}, {"id": 13, "seek": 10744, "start": 108.16, "end": 116.0, "text": " That goes with the idea of new and much more data management in the substation", "tokens": [50400, 663, 1709, 365, 264, 1558, 295, 777, 293, 709, 544, 1412, 4592, 294, 264, 4594, 399, 50792], "temperature": 0.0, "avg_logprob": -0.11866361003811077, "compression_ratio": 1.532934131736527, "no_speech_prob": 0.0010108303977176547}, {"id": 14, "seek": 10744, "start": 116.0, "end": 121.84, "text": " to adapt quickly to the request of the customer and the production of renewable energy.", "tokens": [50792, 281, 6231, 2661, 281, 264, 5308, 295, 264, 5474, 293, 264, 4265, 295, 20938, 2281, 13, 51084], "temperature": 0.0, "avg_logprob": -0.11866361003811077, "compression_ratio": 1.532934131736527, "no_speech_prob": 0.0010108303977176547}, {"id": 15, "seek": 10744, "start": 122.96, "end": 131.28, "text": " The C-PASS project comes in response to this energy transition. The vision of the project", "tokens": [51140, 440, 383, 12, 47, 19678, 1716, 1487, 294, 4134, 281, 341, 2281, 6034, 13, 440, 5201, 295, 264, 1716, 51556], "temperature": 0.0, "avg_logprob": -0.11866361003811077, "compression_ratio": 1.532934131736527, "no_speech_prob": 0.0010108303977176547}, {"id": 16, "seek": 13128, "start": 131.28, "end": 139.44, "text": " is to move from a hardware-centric model to a software-centric model. We want to abstract", "tokens": [50364, 307, 281, 1286, 490, 257, 8837, 12, 45300, 2316, 281, 257, 4722, 12, 45300, 2316, 13, 492, 528, 281, 12649, 50772], "temperature": 0.0, "avg_logprob": -0.12128480536038758, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.015184855088591576}, {"id": 17, "seek": 13128, "start": 139.44, "end": 145.44, "text": " everything we can from hardware to software. So instead of having many pieces of hardware", "tokens": [50772, 1203, 321, 393, 490, 8837, 281, 4722, 13, 407, 2602, 295, 1419, 867, 3755, 295, 8837, 51072], "temperature": 0.0, "avg_logprob": -0.12128480536038758, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.015184855088591576}, {"id": 18, "seek": 13128, "start": 145.44, "end": 153.92000000000002, "text": " in the substation that dialogues together, we want to control all these hardware pieces,", "tokens": [51072, 294, 264, 4594, 399, 300, 45551, 1214, 11, 321, 528, 281, 1969, 439, 613, 8837, 3755, 11, 51496], "temperature": 0.0, "avg_logprob": -0.12128480536038758, "compression_ratio": 1.6962025316455696, "no_speech_prob": 0.015184855088591576}, {"id": 19, "seek": 15392, "start": 153.92, "end": 163.2, "text": " the hardware boxes, with main software to control them. That will offer the flexibility", "tokens": [50364, 264, 8837, 9002, 11, 365, 2135, 4722, 281, 1969, 552, 13, 663, 486, 2626, 264, 12635, 50828], "temperature": 0.0, "avg_logprob": -0.1836068669303519, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.047265663743019104}, {"id": 20, "seek": 15392, "start": 163.2, "end": 170.23999999999998, "text": " and scalability we want. The C-PASS project also choose to direct into the open source", "tokens": [50828, 293, 15664, 2310, 321, 528, 13, 440, 383, 12, 47, 19678, 1716, 611, 2826, 281, 2047, 666, 264, 1269, 4009, 51180], "temperature": 0.0, "avg_logprob": -0.1836068669303519, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.047265663743019104}, {"id": 21, "seek": 15392, "start": 170.23999999999998, "end": 179.35999999999999, "text": " development. The idea behind that is not to depend on any industrial and any other company", "tokens": [51180, 3250, 13, 440, 1558, 2261, 300, 307, 406, 281, 5672, 322, 604, 9987, 293, 604, 661, 2237, 51636], "temperature": 0.0, "avg_logprob": -0.1836068669303519, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.047265663743019104}, {"id": 22, "seek": 17936, "start": 180.08, "end": 187.84, "text": " but also to offer for everyone to come and see what is developed in the C-PASS project", "tokens": [50400, 457, 611, 281, 2626, 337, 1518, 281, 808, 293, 536, 437, 307, 4743, 294, 264, 383, 12, 47, 19678, 1716, 50788], "temperature": 0.0, "avg_logprob": -0.06194410039417779, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.008637707680463791}, {"id": 23, "seek": 17936, "start": 187.84, "end": 195.76000000000002, "text": " and let everyone offer his point of view from every other industry to develop a project that", "tokens": [50788, 293, 718, 1518, 2626, 702, 935, 295, 1910, 490, 633, 661, 3518, 281, 1499, 257, 1716, 300, 51184], "temperature": 0.0, "avg_logprob": -0.06194410039417779, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.008637707680463791}, {"id": 24, "seek": 17936, "start": 195.76000000000002, "end": 203.84, "text": " will need to be not only suitable for the power grid. We need many vision for the project to grow.", "tokens": [51184, 486, 643, 281, 312, 406, 787, 12873, 337, 264, 1347, 10748, 13, 492, 643, 867, 5201, 337, 264, 1716, 281, 1852, 13, 51588], "temperature": 0.0, "avg_logprob": -0.06194410039417779, "compression_ratio": 1.5977011494252873, "no_speech_prob": 0.008637707680463791}, {"id": 25, "seek": 20384, "start": 204.0, "end": 214.32, "text": " This is inspired by the North American model. For example, AT&T did that to develop the new", "tokens": [50372, 639, 307, 7547, 538, 264, 4067, 2665, 2316, 13, 1171, 1365, 11, 8872, 5, 51, 630, 300, 281, 1499, 264, 777, 50888], "temperature": 0.0, "avg_logprob": -0.18990005985383066, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.0010972467716783285}, {"id": 26, "seek": 20384, "start": 214.32, "end": 222.64000000000001, "text": " 5G software, the new 5G grid. They needed this flexibility and scalability and they did this", "tokens": [50888, 1025, 38, 4722, 11, 264, 777, 1025, 38, 10748, 13, 814, 2978, 341, 12635, 293, 15664, 2310, 293, 436, 630, 341, 51304], "temperature": 0.0, "avg_logprob": -0.18990005985383066, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.0010972467716783285}, {"id": 27, "seek": 20384, "start": 222.64000000000001, "end": 226.96, "text": " transition from hardware-centric model to software-centric model.", "tokens": [51304, 6034, 490, 8837, 12, 45300, 2316, 281, 4722, 12, 45300, 2316, 13, 51520], "temperature": 0.0, "avg_logprob": -0.18990005985383066, "compression_ratio": 1.5151515151515151, "no_speech_prob": 0.0010972467716783285}, {"id": 28, "seek": 22696, "start": 227.76000000000002, "end": 234.08, "text": " So here comes the C-PASS project, which is a software-enabled automation platform on", "tokens": [50404, 407, 510, 1487, 264, 383, 12, 47, 19678, 1716, 11, 597, 307, 257, 4722, 12, 268, 8909, 17769, 3663, 322, 50720], "temperature": 0.0, "avg_logprob": -0.18182389632515286, "compression_ratio": 1.510989010989011, "no_speech_prob": 0.0009250902803614736}, {"id": 29, "seek": 22696, "start": 234.08, "end": 241.60000000000002, "text": " Artifacturine. The mission of the C-PASS project is to develop a reference design at an industrial", "tokens": [50720, 5735, 351, 578, 374, 533, 13, 440, 4447, 295, 264, 383, 12, 47, 19678, 1716, 307, 281, 1499, 257, 6408, 1715, 412, 364, 9987, 51096], "temperature": 0.0, "avg_logprob": -0.18182389632515286, "compression_ratio": 1.510989010989011, "no_speech_prob": 0.0009250902803614736}, {"id": 30, "seek": 22696, "start": 241.60000000000002, "end": 249.44, "text": " level for all applications to dialogue with. This platform will be open source and will run", "tokens": [51096, 1496, 337, 439, 5821, 281, 10221, 365, 13, 639, 3663, 486, 312, 1269, 4009, 293, 486, 1190, 51488], "temperature": 0.0, "avg_logprob": -0.18182389632515286, "compression_ratio": 1.510989010989011, "no_speech_prob": 0.0009250902803614736}, {"id": 31, "seek": 24944, "start": 249.44, "end": 257.44, "text": " a virtualized automation for each goal we want to achieve, for each piece of software for each", "tokens": [50364, 257, 6374, 1602, 17769, 337, 1184, 3387, 321, 528, 281, 4584, 11, 337, 1184, 2522, 295, 4722, 337, 1184, 50764], "temperature": 0.0, "avg_logprob": -0.1490654367389101, "compression_ratio": 1.5625, "no_speech_prob": 0.00998460128903389}, {"id": 32, "seek": 24944, "start": 257.44, "end": 267.36, "text": " actuator or captor. They will be virtualized and encapsulated with the platform controlling", "tokens": [50764, 34964, 1639, 420, 3770, 284, 13, 814, 486, 312, 6374, 1602, 293, 38745, 6987, 365, 264, 3663, 14905, 51260], "temperature": 0.0, "avg_logprob": -0.1490654367389101, "compression_ratio": 1.5625, "no_speech_prob": 0.00998460128903389}, {"id": 33, "seek": 24944, "start": 267.36, "end": 274.96, "text": " the overall action. Our needs, we have many needs in this project. First of all, we need", "tokens": [51260, 264, 4787, 3069, 13, 2621, 2203, 11, 321, 362, 867, 2203, 294, 341, 1716, 13, 2386, 295, 439, 11, 321, 643, 51640], "temperature": 0.0, "avg_logprob": -0.1490654367389101, "compression_ratio": 1.5625, "no_speech_prob": 0.00998460128903389}, {"id": 34, "seek": 27496, "start": 275.59999999999997, "end": 282.96, "text": " a very high preference in terms of real-time and latency because we want the grid to be flexible,", "tokens": [50396, 257, 588, 1090, 17502, 294, 2115, 295, 957, 12, 3766, 293, 27043, 570, 321, 528, 264, 10748, 281, 312, 11358, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11619779798719618, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.003019017167389393}, {"id": 35, "seek": 27496, "start": 282.96, "end": 290.56, "text": " yes, but also for security because we want to react very quickly if there is a problem.", "tokens": [50764, 2086, 11, 457, 611, 337, 3825, 570, 321, 528, 281, 4515, 588, 2661, 498, 456, 307, 257, 1154, 13, 51144], "temperature": 0.0, "avg_logprob": -0.11619779798719618, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.003019017167389393}, {"id": 36, "seek": 27496, "start": 292.0, "end": 298.56, "text": " We also need the C-PASS project to be adaptable in terms of security. We want to be able to", "tokens": [51216, 492, 611, 643, 264, 383, 12, 47, 19678, 1716, 281, 312, 6231, 712, 294, 2115, 295, 3825, 13, 492, 528, 281, 312, 1075, 281, 51544], "temperature": 0.0, "avg_logprob": -0.11619779798719618, "compression_ratio": 1.5919540229885059, "no_speech_prob": 0.003019017167389393}, {"id": 37, "seek": 29856, "start": 298.56, "end": 307.6, "text": " deploy patches and to close security breaches really quickly. We want it to be hardware-agnostic", "tokens": [50364, 7274, 26531, 293, 281, 1998, 3825, 1403, 13272, 534, 2661, 13, 492, 528, 309, 281, 312, 8837, 12, 4535, 19634, 50816], "temperature": 0.0, "avg_logprob": -0.1581155150683958, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.0041281855665147305}, {"id": 38, "seek": 29856, "start": 308.4, "end": 314.64, "text": " for everyone to be used, that goes with the open source mindset, and we want it to be really", "tokens": [50856, 337, 1518, 281, 312, 1143, 11, 300, 1709, 365, 264, 1269, 4009, 12543, 11, 293, 321, 528, 309, 281, 312, 534, 51168], "temperature": 0.0, "avg_logprob": -0.1581155150683958, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.0041281855665147305}, {"id": 39, "seek": 29856, "start": 314.64, "end": 325.92, "text": " customizable and adaptable. Because we use open source software, we also will follow the state", "tokens": [51168, 47922, 293, 6231, 712, 13, 1436, 321, 764, 1269, 4009, 4722, 11, 321, 611, 486, 1524, 264, 1785, 51732], "temperature": 0.0, "avg_logprob": -0.1581155150683958, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.0041281855665147305}, {"id": 40, "seek": 32592, "start": 326.0, "end": 332.16, "text": " of the art of what already exists. The idea is to not reinvent the wheel every time but use", "tokens": [50368, 295, 264, 1523, 295, 437, 1217, 8198, 13, 440, 1558, 307, 281, 406, 33477, 264, 5589, 633, 565, 457, 764, 50676], "temperature": 0.0, "avg_logprob": -0.1314945802455995, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.02520160563290119}, {"id": 41, "seek": 32592, "start": 332.16, "end": 336.88, "text": " already existing open source software, because we can because we are an open source project,", "tokens": [50676, 1217, 6741, 1269, 4009, 4722, 11, 570, 321, 393, 570, 321, 366, 364, 1269, 4009, 1716, 11, 50912], "temperature": 0.0, "avg_logprob": -0.1314945802455995, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.02520160563290119}, {"id": 42, "seek": 32592, "start": 337.68, "end": 344.64, "text": " and to configure it and to benefit from the fact that they are already really well done", "tokens": [50952, 293, 281, 22162, 309, 293, 281, 5121, 490, 264, 1186, 300, 436, 366, 1217, 534, 731, 1096, 51300], "temperature": 0.0, "avg_logprob": -0.1314945802455995, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.02520160563290119}, {"id": 43, "seek": 32592, "start": 344.64, "end": 351.68, "text": " and already certified. We don't want to rewrite an entire program ourselves. That is nonsense", "tokens": [51300, 293, 1217, 18580, 13, 492, 500, 380, 528, 281, 28132, 364, 2302, 1461, 4175, 13, 663, 307, 14925, 51652], "temperature": 0.0, "avg_logprob": -0.1314945802455995, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.02520160563290119}, {"id": 44, "seek": 35168, "start": 352.16, "end": 363.04, "text": " in terms of open source software production. To achieve this requirement, we first set up", "tokens": [50388, 294, 2115, 295, 1269, 4009, 4722, 4265, 13, 1407, 4584, 341, 11695, 11, 321, 700, 992, 493, 50932], "temperature": 0.0, "avg_logprob": -0.16634294191996257, "compression_ratio": 1.4673913043478262, "no_speech_prob": 0.0011494089849293232}, {"id": 45, "seek": 35168, "start": 363.04, "end": 369.52, "text": " a Yocto project which allows us to create a custom Linux distribution which is entirely", "tokens": [50932, 257, 7616, 349, 78, 1716, 597, 4045, 505, 281, 1884, 257, 2375, 18734, 7316, 597, 307, 7696, 51256], "temperature": 0.0, "avg_logprob": -0.16634294191996257, "compression_ratio": 1.4673913043478262, "no_speech_prob": 0.0011494089849293232}, {"id": 46, "seek": 35168, "start": 369.52, "end": 375.92, "text": " hardware-agnostic. We just have to recompile everything for another hardware and that allows", "tokens": [51256, 8837, 12, 4535, 19634, 13, 492, 445, 362, 281, 48000, 794, 1203, 337, 1071, 8837, 293, 300, 4045, 51576], "temperature": 0.0, "avg_logprob": -0.16634294191996257, "compression_ratio": 1.4673913043478262, "no_speech_prob": 0.0011494089849293232}, {"id": 47, "seek": 37592, "start": 375.92, "end": 381.68, "text": " us to have a full control of package and versions that are on our Linux distribution.", "tokens": [50364, 505, 281, 362, 257, 1577, 1969, 295, 7372, 293, 9606, 300, 366, 322, 527, 18734, 7316, 13, 50652], "temperature": 0.0, "avg_logprob": -0.0991710984563253, "compression_ratio": 1.5575221238938053, "no_speech_prob": 0.009261319413781166}, {"id": 48, "seek": 37592, "start": 383.2, "end": 389.36, "text": " That's also really good for cybersecurity because we can easily track and patch every CVE.", "tokens": [50728, 663, 311, 611, 534, 665, 337, 38765, 570, 321, 393, 3612, 2837, 293, 9972, 633, 383, 7540, 13, 51036], "temperature": 0.0, "avg_logprob": -0.0991710984563253, "compression_ratio": 1.5575221238938053, "no_speech_prob": 0.009261319413781166}, {"id": 49, "seek": 37592, "start": 390.08000000000004, "end": 396.72, "text": " The Yocto project informed the user if they found a new CVE in one software that it is used,", "tokens": [51072, 440, 7616, 349, 78, 1716, 11740, 264, 4195, 498, 436, 1352, 257, 777, 383, 7540, 294, 472, 4722, 300, 309, 307, 1143, 11, 51404], "temperature": 0.0, "avg_logprob": -0.0991710984563253, "compression_ratio": 1.5575221238938053, "no_speech_prob": 0.009261319413781166}, {"id": 50, "seek": 37592, "start": 396.72, "end": 400.96000000000004, "text": " and we can patch directly using the source code because everything is open source.", "tokens": [51404, 293, 321, 393, 9972, 3838, 1228, 264, 4009, 3089, 570, 1203, 307, 1269, 4009, 13, 51616], "temperature": 0.0, "avg_logprob": -0.0991710984563253, "compression_ratio": 1.5575221238938053, "no_speech_prob": 0.009261319413781166}, {"id": 51, "seek": 40096, "start": 401.91999999999996, "end": 410.23999999999995, "text": " But by doing that, we got into a problem that many industries don't want to deal with the", "tokens": [50412, 583, 538, 884, 300, 11, 321, 658, 666, 257, 1154, 300, 867, 13284, 500, 380, 528, 281, 2028, 365, 264, 50828], "temperature": 0.0, "avg_logprob": -0.24360557556152343, "compression_ratio": 1.4866310160427807, "no_speech_prob": 0.004205809906125069}, {"id": 52, "seek": 40096, "start": 410.23999999999995, "end": 416.88, "text": " complexity of the Yocto project, and it's much more suitable for them to use, for example,", "tokens": [50828, 14024, 295, 264, 7616, 349, 78, 1716, 11, 293, 309, 311, 709, 544, 12873, 337, 552, 281, 764, 11, 337, 1365, 11, 51160], "temperature": 0.0, "avg_logprob": -0.24360557556152343, "compression_ratio": 1.4866310160427807, "no_speech_prob": 0.004205809906125069}, {"id": 53, "seek": 40096, "start": 416.88, "end": 426.47999999999996, "text": " Debian. We created another way of doing the CVE project, but using Debian and a real-time kernel,", "tokens": [51160, 1346, 20196, 13, 492, 2942, 1071, 636, 295, 884, 264, 383, 7540, 1716, 11, 457, 1228, 1346, 20196, 293, 257, 957, 12, 3766, 28256, 11, 51640], "temperature": 0.0, "avg_logprob": -0.24360557556152343, "compression_ratio": 1.4866310160427807, "no_speech_prob": 0.004205809906125069}, {"id": 54, "seek": 42648, "start": 426.48, "end": 434.16, "text": " of course, and an unseable to configure the already created Debian. That's much more", "tokens": [50364, 295, 1164, 11, 293, 364, 517, 405, 712, 281, 22162, 264, 1217, 2942, 1346, 20196, 13, 663, 311, 709, 544, 50748], "temperature": 0.0, "avg_logprob": -0.17073394270504222, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.005796945188194513}, {"id": 55, "seek": 42648, "start": 434.96000000000004, "end": 444.08000000000004, "text": " useful and easy to use, and we saw that there is a real need here that many industries want", "tokens": [50788, 4420, 293, 1858, 281, 764, 11, 293, 321, 1866, 300, 456, 307, 257, 957, 643, 510, 300, 867, 13284, 528, 51244], "temperature": 0.0, "avg_logprob": -0.17073394270504222, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.005796945188194513}, {"id": 56, "seek": 42648, "start": 444.08000000000004, "end": 451.6, "text": " to use Debian instead of Yocto. But the two approaches exist today, and any customers", "tokens": [51244, 281, 764, 1346, 20196, 2602, 295, 7616, 349, 78, 13, 583, 264, 732, 11587, 2514, 965, 11, 293, 604, 4581, 51620], "temperature": 0.0, "avg_logprob": -0.17073394270504222, "compression_ratio": 1.5144508670520231, "no_speech_prob": 0.005796945188194513}, {"id": 57, "seek": 45160, "start": 451.6, "end": 459.44, "text": " that want to implement C-Pass can choose one of them. Okay, so here is our C-Pass project.", "tokens": [50364, 300, 528, 281, 4445, 383, 12, 39529, 393, 2826, 472, 295, 552, 13, 1033, 11, 370, 510, 307, 527, 383, 12, 39529, 1716, 13, 50756], "temperature": 0.0, "avg_logprob": -0.1306224591804273, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0056535168550908566}, {"id": 58, "seek": 45160, "start": 461.36, "end": 465.52000000000004, "text": " At the bottom of it, we have the hardware platform, here Intel, but that can be anything,", "tokens": [50852, 1711, 264, 2767, 295, 309, 11, 321, 362, 264, 8837, 3663, 11, 510, 19762, 11, 457, 300, 393, 312, 1340, 11, 51060], "temperature": 0.0, "avg_logprob": -0.1306224591804273, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0056535168550908566}, {"id": 59, "seek": 45160, "start": 465.52000000000004, "end": 474.16, "text": " as I said, a Linux real-time kernel above it, and as I said, all the open source software that we", "tokens": [51060, 382, 286, 848, 11, 257, 18734, 957, 12, 3766, 28256, 3673, 309, 11, 293, 382, 286, 848, 11, 439, 264, 1269, 4009, 4722, 300, 321, 51492], "temperature": 0.0, "avg_logprob": -0.1306224591804273, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0056535168550908566}, {"id": 60, "seek": 45160, "start": 474.16, "end": 480.72, "text": " want to use and to configure instead of writing it ourselves. All the parts with pacemaker and", "tokens": [51492, 528, 281, 764, 293, 281, 22162, 2602, 295, 3579, 309, 4175, 13, 1057, 264, 3166, 365, 15165, 49523, 293, 51820], "temperature": 0.0, "avg_logprob": -0.1306224591804273, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0056535168550908566}, {"id": 61, "seek": 48072, "start": 480.72, "end": 487.52000000000004, "text": " self are used for distributed file system and distributed VMs between many hypervisors,", "tokens": [50364, 2698, 366, 1143, 337, 12631, 3991, 1185, 293, 12631, 18038, 82, 1296, 867, 9848, 4938, 830, 11, 50704], "temperature": 0.0, "avg_logprob": -0.1705143532056487, "compression_ratio": 1.6742081447963801, "no_speech_prob": 0.005176301579922438}, {"id": 62, "seek": 48072, "start": 488.08000000000004, "end": 494.8, "text": " because the C-Pass project will use a cluster of hypervisors. We don't want all VMs to shut down", "tokens": [50732, 570, 264, 383, 12, 39529, 1716, 486, 764, 257, 13630, 295, 9848, 4938, 830, 13, 492, 500, 380, 528, 439, 18038, 82, 281, 5309, 760, 51068], "temperature": 0.0, "avg_logprob": -0.1705143532056487, "compression_ratio": 1.6742081447963801, "no_speech_prob": 0.005176301579922438}, {"id": 63, "seek": 48072, "start": 494.8, "end": 499.68, "text": " if an hypervisor is dead. We want to replicate them and relaunch them immediately, automatically.", "tokens": [51068, 498, 364, 9848, 16457, 307, 3116, 13, 492, 528, 281, 25356, 552, 293, 5195, 1680, 552, 4258, 11, 6772, 13, 51312], "temperature": 0.0, "avg_logprob": -0.1705143532056487, "compression_ratio": 1.6742081447963801, "no_speech_prob": 0.005176301579922438}, {"id": 64, "seek": 48072, "start": 501.52000000000004, "end": 508.24, "text": " OpenVswitch is used for controlling switch, Internet switches automatically. Of course,", "tokens": [51404, 7238, 53, 25884, 1549, 307, 1143, 337, 14905, 3679, 11, 7703, 19458, 6772, 13, 2720, 1164, 11, 51740], "temperature": 0.0, "avg_logprob": -0.1705143532056487, "compression_ratio": 1.6742081447963801, "no_speech_prob": 0.005176301579922438}, {"id": 65, "seek": 50824, "start": 508.32, "end": 512.8, "text": " we don't want someone to come in the substation every time we need to do changes,", "tokens": [50368, 321, 500, 380, 528, 1580, 281, 808, 294, 264, 4594, 399, 633, 565, 321, 643, 281, 360, 2962, 11, 50592], "temperature": 0.0, "avg_logprob": -0.13835949897766114, "compression_ratio": 1.487603305785124, "no_speech_prob": 0.0017988418694585562}, {"id": 66, "seek": 50824, "start": 512.8, "end": 519.28, "text": " so we use OpenVswitch. This comes with the software-centric approach, as I described before.", "tokens": [50592, 370, 321, 764, 7238, 53, 25884, 1549, 13, 639, 1487, 365, 264, 4722, 12, 45300, 3109, 11, 382, 286, 7619, 949, 13, 50916], "temperature": 0.0, "avg_logprob": -0.13835949897766114, "compression_ratio": 1.487603305785124, "no_speech_prob": 0.0017988418694585562}, {"id": 67, "seek": 50824, "start": 519.28, "end": 527.36, "text": " DPDK is basically hardware acceleration for OpenVswitch, let's say that, and of course QMU and", "tokens": [50916, 413, 17349, 42, 307, 1936, 8837, 17162, 337, 7238, 53, 25884, 1549, 11, 718, 311, 584, 300, 11, 293, 295, 1164, 1249, 44, 52, 293, 51320], "temperature": 0.0, "avg_logprob": -0.13835949897766114, "compression_ratio": 1.487603305785124, "no_speech_prob": 0.0017988418694585562}, {"id": 68, "seek": 50824, "start": 527.36, "end": 534.32, "text": " KVM, which is the basic couple for virtualization in Linux. So this is our C-Pass project.", "tokens": [51320, 591, 53, 44, 11, 597, 307, 264, 3875, 1916, 337, 6374, 2144, 294, 18734, 13, 407, 341, 307, 527, 383, 12, 39529, 1716, 13, 51668], "temperature": 0.0, "avg_logprob": -0.13835949897766114, "compression_ratio": 1.487603305785124, "no_speech_prob": 0.0017988418694585562}, {"id": 69, "seek": 53432, "start": 534.32, "end": 543.6, "text": " Two things are important here. First, that the C-Pass project in itself doesn't have any", "tokens": [50364, 4453, 721, 366, 1021, 510, 13, 2386, 11, 300, 264, 383, 12, 39529, 1716, 294, 2564, 1177, 380, 362, 604, 50828], "temperature": 0.0, "avg_logprob": -0.15955848970274994, "compression_ratio": 1.5113636363636365, "no_speech_prob": 0.006423950660973787}, {"id": 70, "seek": 53432, "start": 543.6, "end": 549.2800000000001, "text": " software itself. It is used to configure all these already existing software and use it", "tokens": [50828, 4722, 2564, 13, 467, 307, 1143, 281, 22162, 439, 613, 1217, 6741, 4722, 293, 764, 309, 51112], "temperature": 0.0, "avg_logprob": -0.15955848970274994, "compression_ratio": 1.5113636363636365, "no_speech_prob": 0.006423950660973787}, {"id": 71, "seek": 53432, "start": 549.84, "end": 556.32, "text": " to benefit from them. And on top of the C-Pass project, we will have all the VMs, and for", "tokens": [51140, 281, 5121, 490, 552, 13, 400, 322, 1192, 295, 264, 383, 12, 39529, 1716, 11, 321, 486, 362, 439, 264, 18038, 82, 11, 293, 337, 51464], "temperature": 0.0, "avg_logprob": -0.15955848970274994, "compression_ratio": 1.5113636363636365, "no_speech_prob": 0.006423950660973787}, {"id": 72, "seek": 55632, "start": 556.32, "end": 566.24, "text": " example, every industrial we work with, and if one day we want to choose to change a piece of", "tokens": [50364, 1365, 11, 633, 9987, 321, 589, 365, 11, 293, 498, 472, 786, 321, 528, 281, 2826, 281, 1319, 257, 2522, 295, 50860], "temperature": 0.0, "avg_logprob": -0.11291231235987703, "compression_ratio": 1.553072625698324, "no_speech_prob": 0.0033435486257076263}, {"id": 73, "seek": 55632, "start": 566.24, "end": 573.6800000000001, "text": " hardware because it's deprecated, we just have to shut down the VM, call someone else, and let it", "tokens": [50860, 8837, 570, 309, 311, 1367, 13867, 770, 11, 321, 445, 362, 281, 5309, 760, 264, 18038, 11, 818, 1580, 1646, 11, 293, 718, 309, 51232], "temperature": 0.0, "avg_logprob": -0.11291231235987703, "compression_ratio": 1.553072625698324, "no_speech_prob": 0.0033435486257076263}, {"id": 74, "seek": 55632, "start": 573.6800000000001, "end": 580.8800000000001, "text": " write software that will go in this VM. The changing of the piece of hardware will not", "tokens": [51232, 2464, 4722, 300, 486, 352, 294, 341, 18038, 13, 440, 4473, 295, 264, 2522, 295, 8837, 486, 406, 51592], "temperature": 0.0, "avg_logprob": -0.11291231235987703, "compression_ratio": 1.553072625698324, "no_speech_prob": 0.0033435486257076263}, {"id": 75, "seek": 58088, "start": 580.88, "end": 587.76, "text": " interfere with the rest. This is a basic idea, basic innovation, first innovation of the C-Pass", "tokens": [50364, 23946, 365, 264, 1472, 13, 639, 307, 257, 3875, 1558, 11, 3875, 8504, 11, 700, 8504, 295, 264, 383, 12, 39529, 50708], "temperature": 0.0, "avg_logprob": -0.14535984094592108, "compression_ratio": 1.5303867403314917, "no_speech_prob": 0.008608411997556686}, {"id": 76, "seek": 58088, "start": 587.76, "end": 598.16, "text": " project. Okay, now I have described the project. I will go a bit more technical and speak about", "tokens": [50708, 1716, 13, 1033, 11, 586, 286, 362, 7619, 264, 1716, 13, 286, 486, 352, 257, 857, 544, 6191, 293, 1710, 466, 51228], "temperature": 0.0, "avg_logprob": -0.14535984094592108, "compression_ratio": 1.5303867403314917, "no_speech_prob": 0.008608411997556686}, {"id": 77, "seek": 58088, "start": 598.16, "end": 604.24, "text": " C-Pass testing project. How do we test an open-source project when everyone can write", "tokens": [51228, 383, 12, 39529, 4997, 1716, 13, 1012, 360, 321, 1500, 364, 1269, 12, 41676, 1716, 562, 1518, 393, 2464, 51532], "temperature": 0.0, "avg_logprob": -0.14535984094592108, "compression_ratio": 1.5303867403314917, "no_speech_prob": 0.008608411997556686}, {"id": 78, "seek": 60424, "start": 604.88, "end": 612.96, "text": " and can propose progress, and how do we write, how do we test a project that doesn't have any", "tokens": [50396, 293, 393, 17421, 4205, 11, 293, 577, 360, 321, 2464, 11, 577, 360, 321, 1500, 257, 1716, 300, 1177, 380, 362, 604, 50800], "temperature": 0.0, "avg_logprob": -0.18940327042027524, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0143588837236166}, {"id": 79, "seek": 60424, "start": 612.96, "end": 621.12, "text": " software in it, that use, that propose a mainframe but doesn't have any software, because all the", "tokens": [50800, 4722, 294, 309, 11, 300, 764, 11, 300, 17421, 257, 2135, 17265, 457, 1177, 380, 362, 604, 4722, 11, 570, 439, 264, 51208], "temperature": 0.0, "avg_logprob": -0.18940327042027524, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0143588837236166}, {"id": 80, "seek": 60424, "start": 621.12, "end": 628.5600000000001, "text": " software will be in the VMs, the customer software will be in the VMs. I will speak here for the", "tokens": [51208, 4722, 486, 312, 294, 264, 18038, 82, 11, 264, 5474, 4722, 486, 312, 294, 264, 18038, 82, 13, 286, 486, 1710, 510, 337, 264, 51580], "temperature": 0.0, "avg_logprob": -0.18940327042027524, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0143588837236166}, {"id": 81, "seek": 62856, "start": 628.56, "end": 636.64, "text": " Debian version, because it's simpler, but I'll explain it later. As I said, C-Pass must meet many", "tokens": [50364, 1346, 20196, 3037, 11, 570, 309, 311, 18587, 11, 457, 286, 603, 2903, 309, 1780, 13, 1018, 286, 848, 11, 383, 12, 39529, 1633, 1677, 867, 50768], "temperature": 0.0, "avg_logprob": -0.11093959212303162, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.00862233154475689}, {"id": 82, "seek": 62856, "start": 636.64, "end": 643.76, "text": " requirements and provide many guarantees, and for that, we launch the CI at every pull request.", "tokens": [50768, 7728, 293, 2893, 867, 32567, 11, 293, 337, 300, 11, 321, 4025, 264, 37777, 412, 633, 2235, 5308, 13, 51124], "temperature": 0.0, "avg_logprob": -0.11093959212303162, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.00862233154475689}, {"id": 83, "seek": 62856, "start": 644.8, "end": 649.5999999999999, "text": " Someone propose a pull request, it is accepted by a member of C-Pass, and the CI will launch", "tokens": [51176, 8734, 17421, 257, 2235, 5308, 11, 309, 307, 9035, 538, 257, 4006, 295, 383, 12, 39529, 11, 293, 264, 37777, 486, 4025, 51416], "temperature": 0.0, "avg_logprob": -0.11093959212303162, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.00862233154475689}, {"id": 84, "seek": 62856, "start": 649.5999999999999, "end": 658.16, "text": " automatically from this pull request. That means the pull request must build, of course, but also", "tokens": [51416, 6772, 490, 341, 2235, 5308, 13, 663, 1355, 264, 2235, 5308, 1633, 1322, 11, 295, 1164, 11, 457, 611, 51844], "temperature": 0.0, "avg_logprob": -0.11093959212303162, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.00862233154475689}, {"id": 85, "seek": 65816, "start": 658.16, "end": 664.4, "text": " all the tests must be successful. All the tests that we wrote later must be successful for the", "tokens": [50364, 439, 264, 6921, 1633, 312, 4406, 13, 1057, 264, 6921, 300, 321, 4114, 1780, 1633, 312, 4406, 337, 264, 50676], "temperature": 0.0, "avg_logprob": -0.14675087087294636, "compression_ratio": 1.6179775280898876, "no_speech_prob": 0.001640056842006743}, {"id": 86, "seek": 65816, "start": 664.4, "end": 672.24, "text": " pull request to be merged. That allows us to avoid regression on one part, but also to display all", "tokens": [50676, 2235, 5308, 281, 312, 36427, 13, 663, 4045, 505, 281, 5042, 24590, 322, 472, 644, 11, 457, 611, 281, 4674, 439, 51068], "temperature": 0.0, "avg_logprob": -0.14675087087294636, "compression_ratio": 1.6179775280898876, "no_speech_prob": 0.001640056842006743}, {"id": 87, "seek": 65816, "start": 672.24, "end": 681.4399999999999, "text": " future tests for the parts we haven't implemented yet. And of course, that will be visible for", "tokens": [51068, 2027, 6921, 337, 264, 3166, 321, 2378, 380, 12270, 1939, 13, 400, 295, 1164, 11, 300, 486, 312, 8974, 337, 51528], "temperature": 0.0, "avg_logprob": -0.14675087087294636, "compression_ratio": 1.6179775280898876, "no_speech_prob": 0.001640056842006743}, {"id": 88, "seek": 68144, "start": 681.44, "end": 685.9200000000001, "text": " everyone on GitHub, and especially the man that made the pull request.", "tokens": [50364, 1518, 322, 23331, 11, 293, 2318, 264, 587, 300, 1027, 264, 2235, 5308, 13, 50588], "temperature": 0.0, "avg_logprob": -0.1638956069946289, "compression_ratio": 1.4887640449438202, "no_speech_prob": 0.004277166444808245}, {"id": 89, "seek": 68144, "start": 689.9200000000001, "end": 698.96, "text": " To achieve that, we will generate a test report to display all tests that pass or not. This report", "tokens": [50788, 1407, 4584, 300, 11, 321, 486, 8460, 257, 1500, 2275, 281, 4674, 439, 6921, 300, 1320, 420, 406, 13, 639, 2275, 51240], "temperature": 0.0, "avg_logprob": -0.1638956069946289, "compression_ratio": 1.4887640449438202, "no_speech_prob": 0.004277166444808245}, {"id": 90, "seek": 68144, "start": 698.96, "end": 706.8800000000001, "text": " will organize all the 1,500 tests we have between categories and between machines, for example,", "tokens": [51240, 486, 13859, 439, 264, 502, 11, 7526, 6921, 321, 362, 1296, 10479, 293, 1296, 8379, 11, 337, 1365, 11, 51636], "temperature": 0.0, "avg_logprob": -0.1638956069946289, "compression_ratio": 1.4887640449438202, "no_speech_prob": 0.004277166444808245}, {"id": 91, "seek": 70688, "start": 706.88, "end": 712.4, "text": " cybersecurity category or real-time category, and all the hypervisors we will have.", "tokens": [50364, 38765, 7719, 420, 957, 12, 3766, 7719, 11, 293, 439, 264, 9848, 4938, 830, 321, 486, 362, 13, 50640], "temperature": 0.0, "avg_logprob": -0.13572165840550474, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.004146810155361891}, {"id": 92, "seek": 70688, "start": 713.84, "end": 720.96, "text": " It will link all tests to requirements. This is especially useful in cybersecurity,", "tokens": [50712, 467, 486, 2113, 439, 6921, 281, 7728, 13, 639, 307, 2318, 4420, 294, 38765, 11, 51068], "temperature": 0.0, "avg_logprob": -0.13572165840550474, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.004146810155361891}, {"id": 93, "seek": 70688, "start": 720.96, "end": 725.84, "text": " because we have a bunch of requirements to meet, and many tests will link to a single", "tokens": [51068, 570, 321, 362, 257, 3840, 295, 7728, 281, 1677, 11, 293, 867, 6921, 486, 2113, 281, 257, 2167, 51312], "temperature": 0.0, "avg_logprob": -0.13572165840550474, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.004146810155361891}, {"id": 94, "seek": 70688, "start": 725.84, "end": 730.32, "text": " requirement, so we can patch them and see them in terms of requirements.", "tokens": [51312, 11695, 11, 370, 321, 393, 9972, 552, 293, 536, 552, 294, 2115, 295, 7728, 13, 51536], "temperature": 0.0, "avg_logprob": -0.13572165840550474, "compression_ratio": 1.7433155080213905, "no_speech_prob": 0.004146810155361891}, {"id": 95, "seek": 73032, "start": 730.6400000000001, "end": 736.0, "text": " That will separate non-regression part on future work part, as I said before,", "tokens": [50380, 663, 486, 4994, 2107, 12, 265, 13338, 644, 322, 2027, 589, 644, 11, 382, 286, 848, 949, 11, 50648], "temperature": 0.0, "avg_logprob": -0.2061042326042451, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.00647071423009038}, {"id": 96, "seek": 73032, "start": 736.6400000000001, "end": 739.0400000000001, "text": " and that will be visible for everyone on GitHub.", "tokens": [50680, 293, 300, 486, 312, 8974, 337, 1518, 322, 23331, 13, 50800], "temperature": 0.0, "avg_logprob": -0.2061042326042451, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.00647071423009038}, {"id": 97, "seek": 73032, "start": 743.36, "end": 750.6400000000001, "text": " What tests, let's say now, what tests we write? As I said, there is no software", "tokens": [51016, 708, 6921, 11, 718, 311, 584, 586, 11, 437, 6921, 321, 2464, 30, 1018, 286, 848, 11, 456, 307, 572, 4722, 51380], "temperature": 0.0, "avg_logprob": -0.2061042326042451, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.00647071423009038}, {"id": 98, "seek": 73032, "start": 752.0, "end": 758.4000000000001, "text": " itself in CPAS, because it will be in the VMs. So all customer code is in the virtual machine.", "tokens": [51448, 2564, 294, 22431, 3160, 11, 570, 309, 486, 312, 294, 264, 18038, 82, 13, 407, 439, 5474, 3089, 307, 294, 264, 6374, 3479, 13, 51768], "temperature": 0.0, "avg_logprob": -0.2061042326042451, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.00647071423009038}, {"id": 99, "seek": 75840, "start": 758.4, "end": 764.48, "text": " We can do any functional testing. This is nonsense here. But what we do want to do is to", "tokens": [50364, 492, 393, 360, 604, 11745, 4997, 13, 639, 307, 14925, 510, 13, 583, 437, 321, 360, 528, 281, 360, 307, 281, 50668], "temperature": 0.0, "avg_logprob": -0.17783418614813623, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0047625466249883175}, {"id": 100, "seek": 75840, "start": 765.12, "end": 770.72, "text": " check unit requirements, for example, for cybersecurity, system-level testing, let's say.", "tokens": [50700, 1520, 4985, 7728, 11, 337, 1365, 11, 337, 38765, 11, 1185, 12, 12418, 4997, 11, 718, 311, 584, 13, 50980], "temperature": 0.0, "avg_logprob": -0.17783418614813623, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0047625466249883175}, {"id": 101, "seek": 75840, "start": 771.84, "end": 779.4399999999999, "text": " I put some example here. For example, we want to test that the key, the RSA key has the right", "tokens": [51036, 286, 829, 512, 1365, 510, 13, 1171, 1365, 11, 321, 528, 281, 1500, 300, 264, 2141, 11, 264, 497, 8886, 2141, 575, 264, 558, 51416], "temperature": 0.0, "avg_logprob": -0.17783418614813623, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0047625466249883175}, {"id": 102, "seek": 75840, "start": 779.4399999999999, "end": 784.16, "text": " permission for the right users. We want to check that the root password is randomized or is encrypted.", "tokens": [51416, 11226, 337, 264, 558, 5022, 13, 492, 528, 281, 1520, 300, 264, 5593, 11524, 307, 38513, 420, 307, 36663, 13, 51652], "temperature": 0.0, "avg_logprob": -0.17783418614813623, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.0047625466249883175}, {"id": 103, "seek": 78416, "start": 784.7199999999999, "end": 792.88, "text": " We want to check a bash timeout that SSH has some permission and doesn't allow some connection,", "tokens": [50392, 492, 528, 281, 1520, 257, 46183, 565, 346, 300, 12238, 39, 575, 512, 11226, 293, 1177, 380, 2089, 512, 4984, 11, 50800], "temperature": 0.0, "avg_logprob": -0.21896517617361885, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0010814173147082329}, {"id": 104, "seek": 78416, "start": 792.88, "end": 801.76, "text": " et cetera, et cetera. So this is very basic testing, no functional long testing, but", "tokens": [50800, 1030, 11458, 11, 1030, 11458, 13, 407, 341, 307, 588, 3875, 4997, 11, 572, 11745, 938, 4997, 11, 457, 51244], "temperature": 0.0, "avg_logprob": -0.21896517617361885, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0010814173147082329}, {"id": 105, "seek": 78416, "start": 801.76, "end": 810.9599999999999, "text": " configuration testing, let's say. To achieve that, we use a software called Kukinya that I will", "tokens": [51244, 11694, 4997, 11, 718, 311, 584, 13, 1407, 4584, 300, 11, 321, 764, 257, 4722, 1219, 591, 2034, 28507, 300, 286, 486, 51704], "temperature": 0.0, "avg_logprob": -0.21896517617361885, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0010814173147082329}, {"id": 106, "seek": 81096, "start": 810.96, "end": 821.12, "text": " introduce here. This is a Linux firmware validation framework, and that allows us to write human-readable", "tokens": [50364, 5366, 510, 13, 639, 307, 257, 18734, 30289, 24071, 8388, 11, 293, 300, 4045, 505, 281, 2464, 1952, 12, 2538, 712, 50872], "temperature": 0.0, "avg_logprob": -0.11786945144851486, "compression_ratio": 1.546875, "no_speech_prob": 0.008220698684453964}, {"id": 107, "seek": 81096, "start": 821.12, "end": 827.12, "text": " tests. I put an example on the right. This is a Kukinya configuration file, and you can test,", "tokens": [50872, 6921, 13, 286, 829, 364, 1365, 322, 264, 558, 13, 639, 307, 257, 591, 2034, 28507, 11694, 3991, 11, 293, 291, 393, 1500, 11, 51172], "temperature": 0.0, "avg_logprob": -0.11786945144851486, "compression_ratio": 1.546875, "no_speech_prob": 0.008220698684453964}, {"id": 108, "seek": 81096, "start": 827.12, "end": 834.8000000000001, "text": " for example, if a user exists, if a process is running, if a disk is mounted, if a Python package", "tokens": [51172, 337, 1365, 11, 498, 257, 4195, 8198, 11, 498, 257, 1399, 307, 2614, 11, 498, 257, 12355, 307, 19138, 11, 498, 257, 15329, 7372, 51556], "temperature": 0.0, "avg_logprob": -0.11786945144851486, "compression_ratio": 1.546875, "no_speech_prob": 0.008220698684453964}, {"id": 109, "seek": 83480, "start": 834.88, "end": 840.9599999999999, "text": " is here, et cetera, et cetera. So all of this is human-readable and written in a simple text file.", "tokens": [50368, 307, 510, 11, 1030, 11458, 11, 1030, 11458, 13, 407, 439, 295, 341, 307, 1952, 12, 2538, 712, 293, 3720, 294, 257, 2199, 2487, 3991, 13, 50672], "temperature": 0.0, "avg_logprob": -0.14528519359987174, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.006509845610707998}, {"id": 110, "seek": 83480, "start": 842.64, "end": 849.52, "text": " Kukinya offers the abstraction necessary and allows us to write ourselves the complicated", "tokens": [50756, 591, 2034, 28507, 7736, 264, 37765, 4818, 293, 4045, 505, 281, 2464, 4175, 264, 6179, 51100], "temperature": 0.0, "avg_logprob": -0.14528519359987174, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.006509845610707998}, {"id": 111, "seek": 83480, "start": 849.52, "end": 856.0, "text": " shell command to test something and something, and we will inevitably forget an option or something.", "tokens": [51100, 8720, 5622, 281, 1500, 746, 293, 746, 11, 293, 321, 486, 28171, 2870, 364, 3614, 420, 746, 13, 51424], "temperature": 0.0, "avg_logprob": -0.14528519359987174, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.006509845610707998}, {"id": 112, "seek": 85600, "start": 856.96, "end": 864.64, "text": " Kukinya is used and most of all used in the embedded world, because it is easily portable,", "tokens": [50412, 591, 2034, 28507, 307, 1143, 293, 881, 295, 439, 1143, 294, 264, 16741, 1002, 11, 570, 309, 307, 3612, 21800, 11, 50796], "temperature": 0.0, "avg_logprob": -0.20633041858673096, "compression_ratio": 1.5217391304347827, "no_speech_prob": 0.016627078875899315}, {"id": 113, "seek": 85600, "start": 864.64, "end": 872.72, "text": " it requires only a shell, not even bash, just a shell. It is written itself in shell, so it", "tokens": [50796, 309, 7029, 787, 257, 8720, 11, 406, 754, 46183, 11, 445, 257, 8720, 13, 467, 307, 3720, 2564, 294, 8720, 11, 370, 309, 51200], "temperature": 0.0, "avg_logprob": -0.20633041858673096, "compression_ratio": 1.5217391304347827, "no_speech_prob": 0.016627078875899315}, {"id": 114, "seek": 85600, "start": 872.72, "end": 878.88, "text": " doesn't have any compilation or an installation. It's really easy, and it can extract the results", "tokens": [51200, 1177, 380, 362, 604, 40261, 420, 364, 13260, 13, 467, 311, 534, 1858, 11, 293, 309, 393, 8947, 264, 3542, 51508], "temperature": 0.0, "avg_logprob": -0.20633041858673096, "compression_ratio": 1.5217391304347827, "no_speech_prob": 0.016627078875899315}, {"id": 115, "seek": 87888, "start": 878.88, "end": 886.8, "text": " for us, either in CSV, simple or in more complicated, for example, XML, with a logging on the number", "tokens": [50364, 337, 505, 11, 2139, 294, 48814, 11, 2199, 420, 294, 544, 6179, 11, 337, 1365, 11, 43484, 11, 365, 257, 27991, 322, 264, 1230, 50760], "temperature": 0.0, "avg_logprob": -0.16539850542622228, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.004516912158578634}, {"id": 116, "seek": 87888, "start": 886.8, "end": 891.76, "text": " of tests that pass and so on, many information. And of course, it is open source.", "tokens": [50760, 295, 6921, 300, 1320, 293, 370, 322, 11, 867, 1589, 13, 400, 295, 1164, 11, 309, 307, 1269, 4009, 13, 51008], "temperature": 0.0, "avg_logprob": -0.16539850542622228, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.004516912158578634}, {"id": 117, "seek": 87888, "start": 894.48, "end": 899.6, "text": " Okay, now I have described everything. This is a complete CI that we have.", "tokens": [51144, 1033, 11, 586, 286, 362, 7619, 1203, 13, 639, 307, 257, 3566, 37777, 300, 321, 362, 13, 51400], "temperature": 0.0, "avg_logprob": -0.16539850542622228, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.004516912158578634}, {"id": 118, "seek": 87888, "start": 900.72, "end": 907.52, "text": " A poll request is made on GitHub. All sources are downloaded on a self-hosted runner. We need", "tokens": [51456, 316, 6418, 5308, 307, 1027, 322, 23331, 13, 1057, 7139, 366, 21748, 322, 257, 2698, 12, 6037, 292, 24376, 13, 492, 643, 51796], "temperature": 0.0, "avg_logprob": -0.16539850542622228, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.004516912158578634}, {"id": 119, "seek": 90752, "start": 907.52, "end": 914.64, "text": " to host a runner because we have a cluster to build. We can do that virtually. The Debian,", "tokens": [50364, 281, 3975, 257, 24376, 570, 321, 362, 257, 13630, 281, 1322, 13, 492, 393, 360, 300, 14103, 13, 440, 1346, 20196, 11, 50720], "temperature": 0.0, "avg_logprob": -0.1779226652333434, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.002009826712310314}, {"id": 120, "seek": 90752, "start": 916.0799999999999, "end": 924.0, "text": " all hypervisors, have already a Debian version as operating system. This version is,", "tokens": [50792, 439, 9848, 4938, 830, 11, 362, 1217, 257, 1346, 20196, 3037, 382, 7447, 1185, 13, 639, 3037, 307, 11, 51188], "temperature": 0.0, "avg_logprob": -0.1779226652333434, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.002009826712310314}, {"id": 121, "seek": 90752, "start": 924.0, "end": 931.52, "text": " this Debian is configured by Ansible. We then deploy Kukinya, so the testing process, and", "tokens": [51188, 341, 1346, 20196, 307, 30538, 538, 14590, 964, 13, 492, 550, 7274, 591, 2034, 28507, 11, 370, 264, 4997, 1399, 11, 293, 51564], "temperature": 0.0, "avg_logprob": -0.1779226652333434, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.002009826712310314}, {"id": 122, "seek": 93152, "start": 931.52, "end": 937.1999999999999, "text": " all the testing files that I described before, the tests are launched,", "tokens": [50364, 439, 264, 4997, 7098, 300, 286, 7619, 949, 11, 264, 6921, 366, 8730, 11, 50648], "temperature": 0.0, "avg_logprob": -0.15015119314193726, "compression_ratio": 1.4065934065934067, "no_speech_prob": 0.00865101721137762}, {"id": 123, "seek": 93152, "start": 938.0, "end": 943.84, "text": " gathered in a PDF report, which is uploaded, and the link is given on the poll request on GitHub.", "tokens": [50688, 13032, 294, 257, 17752, 2275, 11, 597, 307, 17135, 11, 293, 264, 2113, 307, 2212, 322, 264, 6418, 5308, 322, 23331, 13, 50980], "temperature": 0.0, "avg_logprob": -0.15015119314193726, "compression_ratio": 1.4065934065934067, "no_speech_prob": 0.00865101721137762}, {"id": 124, "seek": 93152, "start": 945.28, "end": 955.36, "text": " This is the CI we currently have on CTAS. I will now go on two points of implementation", "tokens": [51052, 639, 307, 264, 37777, 321, 4362, 362, 322, 19529, 3160, 13, 286, 486, 586, 352, 322, 732, 2793, 295, 11420, 51556], "temperature": 0.0, "avg_logprob": -0.15015119314193726, "compression_ratio": 1.4065934065934067, "no_speech_prob": 0.00865101721137762}, {"id": 125, "seek": 95536, "start": 955.36, "end": 959.92, "text": " that are interesting in our CI. First of all, as I said just before,", "tokens": [50364, 300, 366, 1880, 294, 527, 37777, 13, 2386, 295, 439, 11, 382, 286, 848, 445, 949, 11, 50592], "temperature": 0.0, "avg_logprob": -0.1668579662547392, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.008556206710636616}, {"id": 126, "seek": 95536, "start": 961.04, "end": 969.44, "text": " all hypervisors have already a Debian version, and they use our operating system Debian.", "tokens": [50648, 439, 9848, 4938, 830, 362, 1217, 257, 1346, 20196, 3037, 11, 293, 436, 764, 527, 7447, 1185, 1346, 20196, 13, 51068], "temperature": 0.0, "avg_logprob": -0.1668579662547392, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.008556206710636616}, {"id": 127, "seek": 95536, "start": 970.08, "end": 976.88, "text": " It is already deployed and already set up that allow us to avoid two problems. First of all,", "tokens": [51100, 467, 307, 1217, 17826, 293, 1217, 992, 493, 300, 2089, 505, 281, 5042, 732, 2740, 13, 2386, 295, 439, 11, 51440], "temperature": 0.0, "avg_logprob": -0.1668579662547392, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.008556206710636616}, {"id": 128, "seek": 95536, "start": 976.88, "end": 983.04, "text": " the compilation. So there is no compilation in this CI yet. And the flashing problem,", "tokens": [51440, 264, 40261, 13, 407, 456, 307, 572, 40261, 294, 341, 37777, 1939, 13, 400, 264, 31049, 1154, 11, 51748], "temperature": 0.0, "avg_logprob": -0.1668579662547392, "compression_ratio": 1.6231884057971016, "no_speech_prob": 0.008556206710636616}, {"id": 129, "seek": 98304, "start": 983.04, "end": 989.92, "text": " which is a very big problem because automatically flashing and rebooting a machine is complicated.", "tokens": [50364, 597, 307, 257, 588, 955, 1154, 570, 6772, 31049, 293, 26802, 17001, 257, 3479, 307, 6179, 13, 50708], "temperature": 0.0, "avg_logprob": -0.09184605887766635, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0026012153830379248}, {"id": 130, "seek": 98304, "start": 990.88, "end": 996.48, "text": " With Debian, we do not even think about that. This is already the same operating system,", "tokens": [50756, 2022, 1346, 20196, 11, 321, 360, 406, 754, 519, 466, 300, 13, 639, 307, 1217, 264, 912, 7447, 1185, 11, 51036], "temperature": 0.0, "avg_logprob": -0.09184605887766635, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0026012153830379248}, {"id": 131, "seek": 98304, "start": 996.48, "end": 1003.4399999999999, "text": " and we will just configure it every time with Ansible. That means we have to control the basic", "tokens": [51036, 293, 321, 486, 445, 22162, 309, 633, 565, 365, 14590, 964, 13, 663, 1355, 321, 362, 281, 1969, 264, 3875, 51384], "temperature": 0.0, "avg_logprob": -0.09184605887766635, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0026012153830379248}, {"id": 132, "seek": 98304, "start": 1003.4399999999999, "end": 1012.0, "text": " state, the default state of the CI, and that this is done through Ansible, first of all,", "tokens": [51384, 1785, 11, 264, 7576, 1785, 295, 264, 37777, 11, 293, 300, 341, 307, 1096, 807, 14590, 964, 11, 700, 295, 439, 11, 51812], "temperature": 0.0, "avg_logprob": -0.09184605887766635, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0026012153830379248}, {"id": 133, "seek": 101200, "start": 1012.0, "end": 1017.52, "text": " using idempotency. So just mean Ansible will not do the same thing twice.", "tokens": [50364, 1228, 4496, 15970, 310, 3020, 13, 407, 445, 914, 14590, 964, 486, 406, 360, 264, 912, 551, 6091, 13, 50640], "temperature": 0.0, "avg_logprob": -0.14837819205390082, "compression_ratio": 1.645, "no_speech_prob": 0.005013027228415012}, {"id": 134, "seek": 101200, "start": 1019.12, "end": 1024.72, "text": " But it is not really, not totally useful in our case, because some,", "tokens": [50720, 583, 309, 307, 406, 534, 11, 406, 3879, 4420, 294, 527, 1389, 11, 570, 512, 11, 51000], "temperature": 0.0, "avg_logprob": -0.14837819205390082, "compression_ratio": 1.645, "no_speech_prob": 0.005013027228415012}, {"id": 135, "seek": 101200, "start": 1027.04, "end": 1032.4, "text": " for example, if we move or remove files, Ansible cannot roll back to the last version. It's not", "tokens": [51116, 337, 1365, 11, 498, 321, 1286, 420, 4159, 7098, 11, 14590, 964, 2644, 3373, 646, 281, 264, 1036, 3037, 13, 467, 311, 406, 51384], "temperature": 0.0, "avg_logprob": -0.14837819205390082, "compression_ratio": 1.645, "no_speech_prob": 0.005013027228415012}, {"id": 136, "seek": 101200, "start": 1032.4, "end": 1039.92, "text": " possible with Ansible. So to deal with that, we will shortly, not done yet, we will shortly", "tokens": [51384, 1944, 365, 14590, 964, 13, 407, 281, 2028, 365, 300, 11, 321, 486, 13392, 11, 406, 1096, 1939, 11, 321, 486, 13392, 51760], "temperature": 0.0, "avg_logprob": -0.14837819205390082, "compression_ratio": 1.645, "no_speech_prob": 0.005013027228415012}, {"id": 137, "seek": 103992, "start": 1039.92, "end": 1046.88, "text": " implement an LVM snapshot of the default Debian. So we create a snapshot of the", "tokens": [50364, 4445, 364, 441, 53, 44, 30163, 295, 264, 7576, 1346, 20196, 13, 407, 321, 1884, 257, 30163, 295, 264, 50712], "temperature": 0.0, "avg_logprob": -0.13500755855015345, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.002065635984763503}, {"id": 138, "seek": 103992, "start": 1046.88, "end": 1053.04, "text": " default state of the Debian before the CI, we launch the CI, and we then roll back with LVM", "tokens": [50712, 7576, 1785, 295, 264, 1346, 20196, 949, 264, 37777, 11, 321, 4025, 264, 37777, 11, 293, 321, 550, 3373, 646, 365, 441, 53, 44, 51020], "temperature": 0.0, "avg_logprob": -0.13500755855015345, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.002065635984763503}, {"id": 139, "seek": 103992, "start": 1053.04, "end": 1062.64, "text": " to the default version. This is the ID. Another problem that we encounter with this CI,", "tokens": [51020, 281, 264, 7576, 3037, 13, 639, 307, 264, 7348, 13, 3996, 1154, 300, 321, 8593, 365, 341, 37777, 11, 51500], "temperature": 0.0, "avg_logprob": -0.13500755855015345, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.002065635984763503}, {"id": 140, "seek": 106264, "start": 1063.44, "end": 1070.64, "text": " is that this is a complicated CI. We don't have compilation, but we need to", "tokens": [50404, 307, 300, 341, 307, 257, 6179, 37777, 13, 492, 500, 380, 362, 40261, 11, 457, 321, 643, 281, 50764], "temperature": 0.0, "avg_logprob": -0.2024673926524627, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00584340700879693}, {"id": 141, "seek": 106264, "start": 1071.68, "end": 1077.6000000000001, "text": " recover our sources, launch test, configure, launch test, gather results, generate report,", "tokens": [50816, 8114, 527, 7139, 11, 4025, 1500, 11, 22162, 11, 4025, 1500, 11, 5448, 3542, 11, 8460, 2275, 11, 51112], "temperature": 0.0, "avg_logprob": -0.2024673926524627, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00584340700879693}, {"id": 142, "seek": 106264, "start": 1077.6000000000001, "end": 1084.0800000000002, "text": " upload report, and so on. So many complicated things that required the runner to be", "tokens": [51112, 6580, 2275, 11, 293, 370, 322, 13, 407, 867, 6179, 721, 300, 4739, 264, 24376, 281, 312, 51436], "temperature": 0.0, "avg_logprob": -0.2024673926524627, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00584340700879693}, {"id": 143, "seek": 106264, "start": 1086.0800000000002, "end": 1091.92, "text": " configured to do all these things. And because the CI will evaluate over time,", "tokens": [51536, 30538, 281, 360, 439, 613, 721, 13, 400, 570, 264, 37777, 486, 13059, 670, 565, 11, 51828], "temperature": 0.0, "avg_logprob": -0.2024673926524627, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.00584340700879693}, {"id": 144, "seek": 109264, "start": 1092.64, "end": 1099.3600000000001, "text": " we don't want it to, we don't want to redeploy the runner or to reconfigure the runner every time.", "tokens": [50364, 321, 500, 380, 528, 309, 281, 11, 321, 500, 380, 528, 281, 14328, 2384, 264, 24376, 420, 281, 9993, 20646, 540, 264, 24376, 633, 565, 13, 50700], "temperature": 0.0, "avg_logprob": -0.2279539204607106, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.000625654764007777}, {"id": 145, "seek": 109264, "start": 1101.1200000000001, "end": 1107.8400000000001, "text": " To avoid that, we use a Docker container, and we clone, re-download the sources of the CI,", "tokens": [50788, 1407, 5042, 300, 11, 321, 764, 257, 33772, 10129, 11, 293, 321, 26506, 11, 319, 12, 5093, 2907, 264, 7139, 295, 264, 37777, 11, 51124], "temperature": 0.0, "avg_logprob": -0.2279539204607106, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.000625654764007777}, {"id": 146, "seek": 109264, "start": 1107.8400000000001, "end": 1113.76, "text": " the code of the CI, every time, directly in the Docker container, and launch all the commands", "tokens": [51124, 264, 3089, 295, 264, 37777, 11, 633, 565, 11, 3838, 294, 264, 33772, 10129, 11, 293, 4025, 439, 264, 16901, 51420], "temperature": 0.0, "avg_logprob": -0.2279539204607106, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.000625654764007777}, {"id": 147, "seek": 109264, "start": 1113.76, "end": 1118.88, "text": " in this container. So Ansible is the Ansible command for conceiving configuration, the report", "tokens": [51420, 294, 341, 10129, 13, 407, 14590, 964, 307, 264, 14590, 964, 5622, 337, 10413, 2123, 11694, 11, 264, 2275, 51676], "temperature": 0.0, "avg_logprob": -0.2279539204607106, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.000625654764007777}, {"id": 148, "seek": 111888, "start": 1118.88, "end": 1126.3200000000002, "text": " generation, the upload of the report are each launched in the Docker container. That allows us", "tokens": [50364, 5125, 11, 264, 6580, 295, 264, 2275, 366, 1184, 8730, 294, 264, 33772, 10129, 13, 663, 4045, 505, 50736], "temperature": 0.0, "avg_logprob": -0.14092550384864377, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.0017230951925739646}, {"id": 149, "seek": 111888, "start": 1126.3200000000002, "end": 1133.44, "text": " not to deal with configuring and downloading package for the runner itself every time we", "tokens": [50736, 406, 281, 2028, 365, 6662, 1345, 293, 32529, 7372, 337, 264, 24376, 2564, 633, 565, 321, 51092], "temperature": 0.0, "avg_logprob": -0.14092550384864377, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.0017230951925739646}, {"id": 150, "seek": 111888, "start": 1134.0, "end": 1142.0800000000002, "text": " made the CI evaluate. To do that, we also use a small tool called CQFD, which is really useful", "tokens": [51120, 1027, 264, 37777, 13059, 13, 1407, 360, 300, 11, 321, 611, 764, 257, 1359, 2290, 1219, 383, 48, 37, 35, 11, 597, 307, 534, 4420, 51524], "temperature": 0.0, "avg_logprob": -0.14092550384864377, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.0017230951925739646}, {"id": 151, "seek": 111888, "start": 1142.0800000000002, "end": 1147.8400000000001, "text": " in our case. This is a simple common line Docker wrapper, but it will allow us to launch", "tokens": [51524, 294, 527, 1389, 13, 639, 307, 257, 2199, 2689, 1622, 33772, 46906, 11, 457, 309, 486, 2089, 505, 281, 4025, 51812], "temperature": 0.0, "avg_logprob": -0.14092550384864377, "compression_ratio": 1.555084745762712, "no_speech_prob": 0.0017230951925739646}, {"id": 152, "seek": 114784, "start": 1147.84, "end": 1154.48, "text": " commands directly inside the Docker container. It maps the current directory in Docker,", "tokens": [50364, 16901, 3838, 1854, 264, 33772, 10129, 13, 467, 11317, 264, 2190, 21120, 294, 33772, 11, 50696], "temperature": 0.0, "avg_logprob": -0.11673652424531825, "compression_ratio": 1.6729857819905214, "no_speech_prob": 0.0017240889137610793}, {"id": 153, "seek": 114784, "start": 1154.48, "end": 1160.6399999999999, "text": " it creates a user in Docker with the same username as ours in order to deal with permissions,", "tokens": [50696, 309, 7829, 257, 4195, 294, 33772, 365, 264, 912, 30351, 382, 11896, 294, 1668, 281, 2028, 365, 32723, 11, 51004], "temperature": 0.0, "avg_logprob": -0.11673652424531825, "compression_ratio": 1.6729857819905214, "no_speech_prob": 0.0017240889137610793}, {"id": 154, "seek": 114784, "start": 1160.6399999999999, "end": 1167.9199999999998, "text": " and so we can recall a CQFD run Ansible command, and it will execute Ansible in the", "tokens": [51004, 293, 370, 321, 393, 9901, 257, 383, 48, 37, 35, 1190, 14590, 964, 5622, 11, 293, 309, 486, 14483, 14590, 964, 294, 264, 51368], "temperature": 0.0, "avg_logprob": -0.11673652424531825, "compression_ratio": 1.6729857819905214, "no_speech_prob": 0.0017240889137610793}, {"id": 155, "seek": 114784, "start": 1167.9199999999998, "end": 1176.1599999999999, "text": " Docker container, really useful in our case. Okay. Before the end of this presentation,", "tokens": [51368, 33772, 10129, 11, 534, 4420, 294, 527, 1389, 13, 1033, 13, 4546, 264, 917, 295, 341, 5860, 11, 51780], "temperature": 0.0, "avg_logprob": -0.11673652424531825, "compression_ratio": 1.6729857819905214, "no_speech_prob": 0.0017240889137610793}, {"id": 156, "seek": 117616, "start": 1176.16, "end": 1183.8400000000001, "text": " I will talk about a bit about future works and what we will do later. First, as I said,", "tokens": [50364, 286, 486, 751, 466, 257, 857, 466, 2027, 1985, 293, 437, 321, 486, 360, 1780, 13, 2386, 11, 382, 286, 848, 11, 50748], "temperature": 0.0, "avg_logprob": -0.13900413115819296, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.002539781155064702}, {"id": 157, "seek": 117616, "start": 1183.8400000000001, "end": 1190.16, "text": " this is a CI for the Debian version, because it was simpler, and we want to create the same", "tokens": [50748, 341, 307, 257, 37777, 337, 264, 1346, 20196, 3037, 11, 570, 309, 390, 18587, 11, 293, 321, 528, 281, 1884, 264, 912, 51064], "temperature": 0.0, "avg_logprob": -0.13900413115819296, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.002539781155064702}, {"id": 158, "seek": 117616, "start": 1190.16, "end": 1196.96, "text": " for the Yocto version. Many problems with that. First, Yocto has a very complicated compilation", "tokens": [51064, 337, 264, 7616, 349, 78, 3037, 13, 5126, 2740, 365, 300, 13, 2386, 11, 7616, 349, 78, 575, 257, 588, 6179, 40261, 51404], "temperature": 0.0, "avg_logprob": -0.13900413115819296, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.002539781155064702}, {"id": 159, "seek": 117616, "start": 1196.96, "end": 1204.0, "text": " and a really long compilation, so we need to deploy other runners to do that, and maybe handle", "tokens": [51404, 293, 257, 534, 938, 40261, 11, 370, 321, 643, 281, 7274, 661, 33892, 281, 360, 300, 11, 293, 1310, 4813, 51756], "temperature": 0.0, "avg_logprob": -0.13900413115819296, "compression_ratio": 1.6444444444444444, "no_speech_prob": 0.002539781155064702}, {"id": 160, "seek": 120400, "start": 1204.0, "end": 1211.12, "text": " concurrency problem. The machine needs to be flashed every time. We cannot, as with Debian,", "tokens": [50364, 23702, 10457, 1154, 13, 440, 3479, 2203, 281, 312, 7319, 292, 633, 565, 13, 492, 2644, 11, 382, 365, 1346, 20196, 11, 50720], "temperature": 0.0, "avg_logprob": -0.16885311707206394, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0018933587707579136}, {"id": 161, "seek": 120400, "start": 1211.12, "end": 1217.68, "text": " roll back to an old snapshot. This is not possible. The flashing problem is really", "tokens": [50720, 3373, 646, 281, 364, 1331, 30163, 13, 639, 307, 406, 1944, 13, 440, 31049, 1154, 307, 534, 51048], "temperature": 0.0, "avg_logprob": -0.16885311707206394, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0018933587707579136}, {"id": 162, "seek": 120400, "start": 1217.68, "end": 1226.16, "text": " difficult. We already tried to use a PXE, but that doesn't work. That's absolutely not hardware,", "tokens": [51048, 2252, 13, 492, 1217, 3031, 281, 764, 257, 430, 55, 36, 11, 457, 300, 1177, 380, 589, 13, 663, 311, 3122, 406, 8837, 11, 51472], "temperature": 0.0, "avg_logprob": -0.16885311707206394, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0018933587707579136}, {"id": 163, "seek": 120400, "start": 1226.16, "end": 1232.24, "text": " hardware that's really dependent of hardware, and that doesn't work every time. We have two", "tokens": [51472, 8837, 300, 311, 534, 12334, 295, 8837, 11, 293, 300, 1177, 380, 589, 633, 565, 13, 492, 362, 732, 51776], "temperature": 0.0, "avg_logprob": -0.16885311707206394, "compression_ratio": 1.6575342465753424, "no_speech_prob": 0.0018933587707579136}, {"id": 164, "seek": 123224, "start": 1232.24, "end": 1238.64, "text": " ideas to deal with that. Maybe configure with an update mechanism and consider the new version", "tokens": [50364, 3487, 281, 2028, 365, 300, 13, 2704, 22162, 365, 364, 5623, 7513, 293, 1949, 264, 777, 3037, 50684], "temperature": 0.0, "avg_logprob": -0.17812690469953749, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.006694519426673651}, {"id": 165, "seek": 123224, "start": 1240.56, "end": 1248.56, "text": " that has to be flashed as an update that can do job, or with a USB gadget to present the new", "tokens": [50780, 300, 575, 281, 312, 7319, 292, 382, 364, 5623, 300, 393, 360, 1691, 11, 420, 365, 257, 10109, 38090, 281, 1974, 264, 777, 51180], "temperature": 0.0, "avg_logprob": -0.17812690469953749, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.006694519426673651}, {"id": 166, "seek": 123224, "start": 1248.56, "end": 1256.8, "text": " version with a virtual USB key, as it was with a laptop and a real USB key that would plug in it.", "tokens": [51180, 3037, 365, 257, 6374, 10109, 2141, 11, 382, 309, 390, 365, 257, 10732, 293, 257, 957, 10109, 2141, 300, 576, 5452, 294, 309, 13, 51592], "temperature": 0.0, "avg_logprob": -0.17812690469953749, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.006694519426673651}, {"id": 167, "seek": 125680, "start": 1256.8, "end": 1262.0, "text": " That is possible, but we don't have a configuration yet, and we are not sure which", "tokens": [50364, 663, 307, 1944, 11, 457, 321, 500, 380, 362, 257, 11694, 1939, 11, 293, 321, 366, 406, 988, 597, 50624], "temperature": 0.0, "avg_logprob": -0.13453118655146384, "compression_ratio": 1.6771300448430493, "no_speech_prob": 0.0036770214792340994}, {"id": 168, "seek": 125680, "start": 1262.0, "end": 1268.8, "text": " solution we will choose. The other thing to do is to run longer tests. I didn't talk about real-time", "tokens": [50624, 3827, 321, 486, 2826, 13, 440, 661, 551, 281, 360, 307, 281, 1190, 2854, 6921, 13, 286, 994, 380, 751, 466, 957, 12, 3766, 50964], "temperature": 0.0, "avg_logprob": -0.13453118655146384, "compression_ratio": 1.6771300448430493, "no_speech_prob": 0.0036770214792340994}, {"id": 169, "seek": 125680, "start": 1268.8, "end": 1276.8, "text": " tests here, or latency tests, because it is a really long test, many days. We cannot launch it", "tokens": [50964, 6921, 510, 11, 420, 27043, 6921, 11, 570, 309, 307, 257, 534, 938, 1500, 11, 867, 1708, 13, 492, 2644, 4025, 309, 51364], "temperature": 0.0, "avg_logprob": -0.13453118655146384, "compression_ratio": 1.6771300448430493, "no_speech_prob": 0.0036770214792340994}, {"id": 170, "seek": 125680, "start": 1276.8, "end": 1283.2, "text": " at every request, but we have to launch it at every release. That's the thing we will do in the", "tokens": [51364, 412, 633, 5308, 11, 457, 321, 362, 281, 4025, 309, 412, 633, 4374, 13, 663, 311, 264, 551, 321, 486, 360, 294, 264, 51684], "temperature": 0.0, "avg_logprob": -0.13453118655146384, "compression_ratio": 1.6771300448430493, "no_speech_prob": 0.0036770214792340994}, {"id": 171, "seek": 128320, "start": 1283.2, "end": 1291.8400000000001, "text": " future, and to certify, to demonstrate that we met the requirement. That will have the form of", "tokens": [50364, 2027, 11, 293, 281, 5351, 2505, 11, 281, 11698, 300, 321, 1131, 264, 11695, 13, 663, 486, 362, 264, 1254, 295, 50796], "temperature": 0.0, "avg_logprob": -0.13700982411702475, "compression_ratio": 1.5828877005347595, "no_speech_prob": 0.004207557532936335}, {"id": 172, "seek": 128320, "start": 1291.8400000000001, "end": 1298.24, "text": " this graph, for example, with all the measures we do, the maximum latency we have, the median latency", "tokens": [50796, 341, 4295, 11, 337, 1365, 11, 365, 439, 264, 8000, 321, 360, 11, 264, 6674, 27043, 321, 362, 11, 264, 26779, 27043, 51116], "temperature": 0.0, "avg_logprob": -0.13700982411702475, "compression_ratio": 1.5828877005347595, "no_speech_prob": 0.004207557532936335}, {"id": 173, "seek": 128320, "start": 1298.24, "end": 1307.52, "text": " we have, and so on. That will be launched at every release of CPAS. Thank you for hearing me during", "tokens": [51116, 321, 362, 11, 293, 370, 322, 13, 663, 486, 312, 8730, 412, 633, 4374, 295, 22431, 3160, 13, 1044, 291, 337, 4763, 385, 1830, 51580], "temperature": 0.0, "avg_logprob": -0.13700982411702475, "compression_ratio": 1.5828877005347595, "no_speech_prob": 0.004207557532936335}, {"id": 174, "seek": 130752, "start": 1307.52, "end": 1314.16, "text": " this presentation. If you want to experience some more with CPAS, it is open source, so you can go", "tokens": [50364, 341, 5860, 13, 759, 291, 528, 281, 1752, 512, 544, 365, 22431, 3160, 11, 309, 307, 1269, 4009, 11, 370, 291, 393, 352, 50696], "temperature": 0.0, "avg_logprob": -0.14384565931377988, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.06923847645521164}, {"id": 175, "seek": 130752, "start": 1314.16, "end": 1320.96, "text": " on the GitHub pages of CPAS. There are also some other conferences about CPAS available on YouTube,", "tokens": [50696, 322, 264, 23331, 7183, 295, 22431, 3160, 13, 821, 366, 611, 512, 661, 22032, 466, 22431, 3160, 2435, 322, 3088, 11, 51036], "temperature": 0.0, "avg_logprob": -0.14384565931377988, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.06923847645521164}, {"id": 176, "seek": 130752, "start": 1321.68, "end": 1329.36, "text": " and for myself, I am already open to answer all your questions already.", "tokens": [51072, 293, 337, 2059, 11, 286, 669, 1217, 1269, 281, 1867, 439, 428, 1651, 1217, 13, 51456], "temperature": 0.0, "avg_logprob": -0.14384565931377988, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.06923847645521164}, {"id": 177, "seek": 133752, "start": 1338.24, "end": 1348.08, "text": " We already have a question from Markus. Markus says that it looks very similar to him,", "tokens": [50400, 492, 1217, 362, 257, 1168, 490, 45041, 13, 45041, 1619, 300, 309, 1542, 588, 2531, 281, 796, 11, 50892], "temperature": 0.0, "avg_logprob": -0.3125256129673549, "compression_ratio": 1.4759358288770053, "no_speech_prob": 0.00984205026179552}, {"id": 178, "seek": 133752, "start": 1348.6399999999999, "end": 1356.56, "text": " and because he is a maintainer of OpenHappian, there is extension to OpenHapp, and it chooses", "tokens": [50920, 293, 570, 415, 307, 257, 6909, 260, 295, 7238, 39, 1746, 952, 11, 456, 307, 10320, 281, 7238, 39, 1746, 11, 293, 309, 25963, 51316], "temperature": 0.0, "avg_logprob": -0.3125256129673549, "compression_ratio": 1.4759358288770053, "no_speech_prob": 0.00984205026179552}, {"id": 179, "seek": 133752, "start": 1356.56, "end": 1362.56, "text": " essentially lots of advanced batch scripting on top of Debian, and they also roll out a virtual", "tokens": [51316, 4476, 3195, 295, 7339, 15245, 5755, 278, 322, 1192, 295, 1346, 20196, 11, 293, 436, 611, 3373, 484, 257, 6374, 51616], "temperature": 0.0, "avg_logprob": -0.3125256129673549, "compression_ratio": 1.4759358288770053, "no_speech_prob": 0.00984205026179552}, {"id": 180, "seek": 136256, "start": 1363.04, "end": 1372.6399999999999, "text": " VM in a Docker container in CI on every pull request upload. Can you say something about that?", "tokens": [50388, 18038, 294, 257, 33772, 10129, 294, 37777, 322, 633, 2235, 5308, 6580, 13, 1664, 291, 584, 746, 466, 300, 30, 50868], "temperature": 0.0, "avg_logprob": -0.24442295317954205, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.019608596339821815}, {"id": 181, "seek": 136256, "start": 1373.52, "end": 1382.96, "text": " I read that. I don't know the software that you are talking about, but that's interesting,", "tokens": [50912, 286, 1401, 300, 13, 286, 500, 380, 458, 264, 4722, 300, 291, 366, 1417, 466, 11, 457, 300, 311, 1880, 11, 51384], "temperature": 0.0, "avg_logprob": -0.24442295317954205, "compression_ratio": 1.3405797101449275, "no_speech_prob": 0.019608596339821815}, {"id": 182, "seek": 138296, "start": 1382.96, "end": 1394.96, "text": " because essentially, batch scripting on top of Debian is a sort of trick we found to make the", "tokens": [50364, 570, 4476, 11, 15245, 5755, 278, 322, 1192, 295, 1346, 20196, 307, 257, 1333, 295, 4282, 321, 1352, 281, 652, 264, 50964], "temperature": 0.0, "avg_logprob": -0.1623924819516464, "compression_ratio": 1.4684210526315788, "no_speech_prob": 0.03198845311999321}, {"id": 183, "seek": 138296, "start": 1394.96, "end": 1400.56, "text": " CPAS project with Debian, because originally, the only CPAS version was with Yocto, which", "tokens": [50964, 22431, 3160, 1716, 365, 1346, 20196, 11, 570, 7993, 11, 264, 787, 22431, 3160, 3037, 390, 365, 7616, 349, 78, 11, 597, 51244], "temperature": 0.0, "avg_logprob": -0.1623924819516464, "compression_ratio": 1.4684210526315788, "no_speech_prob": 0.03198845311999321}, {"id": 184, "seek": 138296, "start": 1400.56, "end": 1408.0, "text": " offers much more configuration over the Linux system you have, but as I said, we found out that", "tokens": [51244, 7736, 709, 544, 11694, 670, 264, 18734, 1185, 291, 362, 11, 457, 382, 286, 848, 11, 321, 1352, 484, 300, 51616], "temperature": 0.0, "avg_logprob": -0.1623924819516464, "compression_ratio": 1.4684210526315788, "no_speech_prob": 0.03198845311999321}, {"id": 185, "seek": 140800, "start": 1408.08, "end": 1415.28, "text": " many constructors and many industrials don't want to dive into the complexity of Yocto, and so", "tokens": [50368, 867, 7690, 830, 293, 867, 49005, 1124, 500, 380, 528, 281, 9192, 666, 264, 14024, 295, 7616, 349, 78, 11, 293, 370, 50728], "temperature": 0.0, "avg_logprob": -0.17626970269706813, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.001723835477605462}, {"id": 186, "seek": 140800, "start": 1416.16, "end": 1422.24, "text": " here we are creating many batch scripts to configure Debian properly, especially for", "tokens": [50772, 510, 321, 366, 4084, 867, 15245, 23294, 281, 22162, 1346, 20196, 6108, 11, 2318, 337, 51076], "temperature": 0.0, "avg_logprob": -0.17626970269706813, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.001723835477605462}, {"id": 187, "seek": 140800, "start": 1422.24, "end": 1429.44, "text": " cybersecurity questions, which are a bit complicated with that. But if you go to the GitHub pages of", "tokens": [51076, 38765, 1651, 11, 597, 366, 257, 857, 6179, 365, 300, 13, 583, 498, 291, 352, 281, 264, 23331, 7183, 295, 51436], "temperature": 0.0, "avg_logprob": -0.17626970269706813, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.001723835477605462}, {"id": 188, "seek": 140800, "start": 1429.44, "end": 1436.64, "text": " the CPAS project, you will see that many, many problems we have with Debian are not there with", "tokens": [51436, 264, 22431, 3160, 1716, 11, 291, 486, 536, 300, 867, 11, 867, 2740, 321, 362, 365, 1346, 20196, 366, 406, 456, 365, 51796], "temperature": 0.0, "avg_logprob": -0.17626970269706813, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.001723835477605462}, {"id": 189, "seek": 143664, "start": 1436.64, "end": 1450.88, "text": " the Yocto version. Okay, so I don't see any other questions for now, but I just said two or three", "tokens": [50364, 264, 7616, 349, 78, 3037, 13, 1033, 11, 370, 286, 500, 380, 536, 604, 661, 1651, 337, 586, 11, 457, 286, 445, 848, 732, 420, 1045, 51076], "temperature": 0.0, "avg_logprob": -0.09379225151211608, "compression_ratio": 1.3687943262411348, "no_speech_prob": 0.0023926144931465387}, {"id": 190, "seek": 143664, "start": 1450.88, "end": 1458.3200000000002, "text": " things that are not technically correct, and I just thought of that after I uploaded the video,", "tokens": [51076, 721, 300, 366, 406, 12120, 3006, 11, 293, 286, 445, 1194, 295, 300, 934, 286, 17135, 264, 960, 11, 51448], "temperature": 0.0, "avg_logprob": -0.09379225151211608, "compression_ratio": 1.3687943262411348, "no_speech_prob": 0.0023926144931465387}, {"id": 191, "seek": 145832, "start": 1458.32, "end": 1468.6399999999999, "text": " but I said that there is no software embedded in the CPAS project, which is not technically true.", "tokens": [50364, 457, 286, 848, 300, 456, 307, 572, 4722, 16741, 294, 264, 22431, 3160, 1716, 11, 597, 307, 406, 12120, 2074, 13, 50880], "temperature": 0.0, "avg_logprob": -0.10207767896754767, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0005785974208265543}, {"id": 192, "seek": 145832, "start": 1469.36, "end": 1476.08, "text": " The software we want to reach, so the interesting software will be the software that controls the", "tokens": [50916, 440, 4722, 321, 528, 281, 2524, 11, 370, 264, 1880, 4722, 486, 312, 264, 4722, 300, 9003, 264, 51252], "temperature": 0.0, "avg_logprob": -0.10207767896754767, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0005785974208265543}, {"id": 193, "seek": 145832, "start": 1476.08, "end": 1481.04, "text": " actuator of the captors, and that will be in the VMs, in the virtual machines, of course,", "tokens": [51252, 34964, 1639, 295, 264, 3770, 830, 11, 293, 300, 486, 312, 294, 264, 18038, 82, 11, 294, 264, 6374, 8379, 11, 295, 1164, 11, 51500], "temperature": 0.0, "avg_logprob": -0.10207767896754767, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0005785974208265543}, {"id": 194, "seek": 145832, "start": 1481.04, "end": 1488.24, "text": " but we do develop some software in the CPAS project. For example, we have a virtual machine", "tokens": [51500, 457, 321, 360, 1499, 512, 4722, 294, 264, 22431, 3160, 1716, 13, 1171, 1365, 11, 321, 362, 257, 6374, 3479, 51860], "temperature": 0.0, "avg_logprob": -0.10207767896754767, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0005785974208265543}, {"id": 195, "seek": 148824, "start": 1488.32, "end": 1495.52, "text": " management system written in Python, which is just to manage our virtual machine in the cluster", "tokens": [50368, 4592, 1185, 3720, 294, 15329, 11, 597, 307, 445, 281, 3067, 527, 6374, 3479, 294, 264, 13630, 50728], "temperature": 0.0, "avg_logprob": -0.14131220304048978, "compression_ratio": 1.467065868263473, "no_speech_prob": 0.0008674089913256466}, {"id": 196, "seek": 148824, "start": 1496.56, "end": 1500.24, "text": " in a simpler way, and we do develop that in the CPAS project.", "tokens": [50780, 294, 257, 18587, 636, 11, 293, 321, 360, 1499, 300, 294, 264, 22431, 3160, 1716, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14131220304048978, "compression_ratio": 1.467065868263473, "no_speech_prob": 0.0008674089913256466}, {"id": 197, "seek": 148824, "start": 1503.44, "end": 1514.56, "text": " I also said that the Yocto project doesn't use unseable, which is also not true, so the", "tokens": [51124, 286, 611, 848, 300, 264, 7616, 349, 78, 1716, 1177, 380, 764, 517, 405, 712, 11, 597, 307, 611, 406, 2074, 11, 370, 264, 51680], "temperature": 0.0, "avg_logprob": -0.14131220304048978, "compression_ratio": 1.467065868263473, "no_speech_prob": 0.0008674089913256466}, {"id": 198, "seek": 151456, "start": 1514.72, "end": 1519.36, "text": " Yocto version of the CPAS project doesn't use unseable. Of course, we use it because we want to", "tokens": [50372, 7616, 349, 78, 3037, 295, 264, 22431, 3160, 1716, 1177, 380, 764, 517, 405, 712, 13, 2720, 1164, 11, 321, 764, 309, 570, 321, 528, 281, 50604], "temperature": 0.0, "avg_logprob": -0.10231867790222168, "compression_ratio": 1.6905829596412556, "no_speech_prob": 0.0019462300697341561}, {"id": 199, "seek": 151456, "start": 1519.36, "end": 1525.44, "text": " configure a cluster, so unseable is used just to do the network configuration of the cluster,", "tokens": [50604, 22162, 257, 13630, 11, 370, 517, 405, 712, 307, 1143, 445, 281, 360, 264, 3209, 11694, 295, 264, 13630, 11, 50908], "temperature": 0.0, "avg_logprob": -0.10231867790222168, "compression_ratio": 1.6905829596412556, "no_speech_prob": 0.0019462300697341561}, {"id": 200, "seek": 151456, "start": 1526.08, "end": 1532.1599999999999, "text": " because in the Yocto project, we already have configured the Linux system, because we have", "tokens": [50940, 570, 294, 264, 7616, 349, 78, 1716, 11, 321, 1217, 362, 30538, 264, 18734, 1185, 11, 570, 321, 362, 51244], "temperature": 0.0, "avg_logprob": -0.10231867790222168, "compression_ratio": 1.6905829596412556, "no_speech_prob": 0.0019462300697341561}, {"id": 201, "seek": 151456, "start": 1532.1599999999999, "end": 1538.48, "text": " built it the way we want. In the Debian version, this is not possible, we just plug a Debian USB", "tokens": [51244, 3094, 309, 264, 636, 321, 528, 13, 682, 264, 1346, 20196, 3037, 11, 341, 307, 406, 1944, 11, 321, 445, 5452, 257, 1346, 20196, 10109, 51560], "temperature": 0.0, "avg_logprob": -0.10231867790222168, "compression_ratio": 1.6905829596412556, "no_speech_prob": 0.0019462300697341561}, {"id": 202, "seek": 153848, "start": 1538.48, "end": 1545.28, "text": " key with a real-time kernel, and that's all we can do, so everything else has to be configured", "tokens": [50364, 2141, 365, 257, 957, 12, 3766, 28256, 11, 293, 300, 311, 439, 321, 393, 360, 11, 370, 1203, 1646, 575, 281, 312, 30538, 50704], "temperature": 0.0, "avg_logprob": -0.16054250575878, "compression_ratio": 1.3642857142857143, "no_speech_prob": 0.004831461235880852}, {"id": 203, "seek": 153848, "start": 1545.28, "end": 1552.72, "text": " through unseable. It's a much messier, a much bigger unseable repository for the Debian version.", "tokens": [50704, 807, 517, 405, 712, 13, 467, 311, 257, 709, 2082, 811, 11, 257, 709, 3801, 517, 405, 712, 25841, 337, 264, 1346, 20196, 3037, 13, 51076], "temperature": 0.0, "avg_logprob": -0.16054250575878, "compression_ratio": 1.3642857142857143, "no_speech_prob": 0.004831461235880852}, {"id": 204, "seek": 155272, "start": 1553.68, "end": 1560.96, "text": " Yes, I think Marcus knows what we are talking about.", "tokens": [50412, 1079, 11, 286, 519, 26574, 3255, 437, 321, 366, 1417, 466, 13, 50776], "temperature": 0.0, "avg_logprob": -0.3910410321992019, "compression_ratio": 1.0666666666666667, "no_speech_prob": 0.01041458360850811}, {"id": 205, "seek": 155272, "start": 1571.28, "end": 1574.88, "text": " And yes, for the last correction I can add,", "tokens": [51292, 400, 2086, 11, 337, 264, 1036, 19984, 286, 393, 909, 11, 51472], "temperature": 0.0, "avg_logprob": -0.3910410321992019, "compression_ratio": 1.0666666666666667, "no_speech_prob": 0.01041458360850811}, {"id": 206, "seek": 157488, "start": 1575.2800000000002, "end": 1586.48, "text": " we have thought about how to implement the CI for the Yocto version and the problem of flashing", "tokens": [50384, 321, 362, 1194, 466, 577, 281, 4445, 264, 37777, 337, 264, 7616, 349, 78, 3037, 293, 264, 1154, 295, 31049, 50944], "temperature": 0.0, "avg_logprob": -0.16914244873882972, "compression_ratio": 1.632183908045977, "no_speech_prob": 0.004794434178620577}, {"id": 207, "seek": 157488, "start": 1586.48, "end": 1594.48, "text": " the machines, and we found that the simpler way to do that is just to use an update mechanism.", "tokens": [50944, 264, 8379, 11, 293, 321, 1352, 300, 264, 18587, 636, 281, 360, 300, 307, 445, 281, 764, 364, 5623, 7513, 13, 51344], "temperature": 0.0, "avg_logprob": -0.16914244873882972, "compression_ratio": 1.632183908045977, "no_speech_prob": 0.004794434178620577}, {"id": 208, "seek": 157488, "start": 1594.48, "end": 1600.4, "text": " So we use software updates in the Yocto project, in the Yocto version, with two double banks,", "tokens": [51344, 407, 321, 764, 4722, 9205, 294, 264, 7616, 349, 78, 1716, 11, 294, 264, 7616, 349, 78, 3037, 11, 365, 732, 3834, 10237, 11, 51640], "temperature": 0.0, "avg_logprob": -0.16914244873882972, "compression_ratio": 1.632183908045977, "no_speech_prob": 0.004794434178620577}, {"id": 209, "seek": 160040, "start": 1601.2800000000002, "end": 1608.16, "text": " so we can just upload a new version of the C pass projects, as if it was a new version,", "tokens": [50408, 370, 321, 393, 445, 6580, 257, 777, 3037, 295, 264, 383, 1320, 4455, 11, 382, 498, 309, 390, 257, 777, 3037, 11, 50752], "temperature": 0.0, "avg_logprob": -0.1591694200193727, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0021315698977559805}, {"id": 210, "seek": 160040, "start": 1608.16, "end": 1614.64, "text": " even if it is just another pre-request to test. That works pretty well, and that avoid flashing", "tokens": [50752, 754, 498, 309, 307, 445, 1071, 659, 12, 265, 20343, 281, 1500, 13, 663, 1985, 1238, 731, 11, 293, 300, 5042, 31049, 51076], "temperature": 0.0, "avg_logprob": -0.1591694200193727, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0021315698977559805}, {"id": 211, "seek": 160040, "start": 1614.64, "end": 1629.0400000000002, "text": " problems, PXE problems that we have. Okay, so if there isn't any questions anymore, I say goodbye,", "tokens": [51076, 2740, 11, 430, 55, 36, 2740, 300, 321, 362, 13, 1033, 11, 370, 498, 456, 1943, 380, 604, 1651, 3602, 11, 286, 584, 12084, 11, 51796], "temperature": 0.0, "avg_logprob": -0.1591694200193727, "compression_ratio": 1.492063492063492, "no_speech_prob": 0.0021315698977559805}, {"id": 212, "seek": 162904, "start": 1629.04, "end": 1635.68, "text": " and you can see me, I will be in the first dem this afternoon, you can solve for the pink", "tokens": [50364, 293, 291, 393, 536, 385, 11, 286, 486, 312, 294, 264, 700, 1371, 341, 6499, 11, 291, 393, 5039, 337, 264, 7022, 50696], "temperature": 0.0, "avg_logprob": -0.3103789710998535, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.011187517084181309}, {"id": 213, "seek": 162904, "start": 1636.96, "end": 1646.8799999999999, "text": " sweat and of course the hat with the text on it, I think you can find me there. Thank you.", "tokens": [50760, 11872, 293, 295, 1164, 264, 2385, 365, 264, 2487, 322, 309, 11, 286, 519, 291, 393, 915, 385, 456, 13, 1044, 291, 13, 51256], "temperature": 0.0, "avg_logprob": -0.3103789710998535, "compression_ratio": 1.4516129032258065, "no_speech_prob": 0.011187517084181309}], "language": "en"}