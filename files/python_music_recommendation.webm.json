{"text": " And welcome to Sam for his talk on Music Recommendations in Python. Welcome. Thank you. Can you hear me? Yes. Good. Okay. So I'm a system software developer, actually, and this is a hobby that I like to make music playlists and play around with Python. I'm also a musician and a music fan. And I also used to be a teacher. I think that's relevant. That's going to come into play later. Thanks to my player code think for sponsoring the travel and allowing me to be here. So as a music fan, I used to make a lot of playlists. I still do. And I'm quite old, so when I first started making playlists, they look like this. And very convenient to share. Just give someone else the piece of plastic and they have a machine that plays it. But quite difficult to make because you have to, you remember, you have to line up all the songs, just write, press record, press play. The 2000s came and we all moved to digital music. If you were cool, you had like a win-amp skin. If you were really cool, you had XMMS. And these playlists, much easier to make, you just drag and drop. But they were more difficult to share because nobody else had the same MP3s as you. So you couldn't give the playlist to your friend anymore quite so easily. But if you ask someone now to make a playlist, probably they're going to think of this. They're going to make you a playlist on Spotify or YouTube and send you a link. And that's even better, right? It's super easy to make. You drag and drop. It's easy to share. You send someone the link. And it even recommends you songs to put on the list. So what's not to like? Honestly, I don't actually want that song on the list. So the recommendations aren't always helpful. Spotify is fine. You can use it. It has a great team of researchers. There are some negative things about the company. I mean, it's a private company. The duty theater investors is to minimize the amount that they pay out to musicians and pay that to investors instead. And they've been steadily doing that and reducing the rates they pay to musicians. And they kind of focus on passive listening, right? So you put on an album, it finishes, but they put on more songs for you. People actually now adapt to their music to fit the Spotify algorithm. So the first 10 or 20 seconds are very important. So songs don't have long intros anymore. That's been done to please the Spotify algorithm. So I started to think, what would the opposite look like? And I came up with, it would have to be something DIY, something that doesn't have a profit motive behind it. It would focus on having local music and going to artist websites, buying music from Bandcamp, from paying them on Petrion. It would also involve working with open data. So when I say open data, I don't necessarily mean public data that everyone can see, but data where it's hosted by you or by an entity you trust. And you can choose if it's open or private. You can download it, export it, et cetera. So I have no idea really what I'm doing, but back in 2016 I started experimenting with some ideas. And I was inspired by one or two other projects. So has anyone heard of Dynamic Land? That's a shame. So note that down if you have a notebook. It's something very interesting to research about. Out of scope for this talk. It's a project where the room, the whole room is a computer. Each of these pieces of paper has a program on it or some data, and you can interact with them by moving them around physically. Now, I can't create that myself, but I like the idea of having a program that fits on a sheet of A4 paper. You know, the philosophy is if your program doesn't fit on the paper, then it's too big and it needs to become smaller. And I like that as a philosophy. I feel like the playlist generators that I want to write should also fit on a piece of A4 paper or on a slide deck. And it should be a process that people can participate in. Okay, another thing that really inspired me was Git. That might seem counterintuitive, but Git, Linus Torvalds recently said he's better known actually for Git than for Linux, despite having basically created Git in a month. And quite an achievement, right? So there were a few key ideas. Git's data model is really well defined. It's simple. You have refs and commits. You work with those directly. And then your commits are made of trees and your trees have blobs. And you work with this directly. Like, you get your hands dirty. Git is also a multi-core binary, which has a really nice advantage that you can write one part of it in Perl and then another part of it in TCL and then another part of it in C. So you don't have to keep rewriting. You can have different people working on small components. And I had this idea of having the user interface commands, they call the porcelain, and the innards, like the plumbing. But it's all available, right? So if you have Git on your laptop, you can build a commit using the lowest level commands that you want. And that's a huge advantage in getting people involved. Git is a real DIY project. It's not some shiny thing that just magically works. You push a button and have a nice day. It's something that you really have to get involved with. It'll break. You have to learn how it works. And that's the secret to its success, I think. And of course, Git, the interface to Git is the command line, right? So you can build a website around it in Ruby. You can build a website around it in Python. You can build extensions. Very inspiring. I set out to build a similar tool, but for playlists. And the first thing I thought about was the data model. And I realized that actually everything is a playlist. You know, a music collection is just a playlist where the order doesn't really matter. Metadata can be stored as metadata in the playlist. So everything is a playlist. I wanted to write a multi-core binary. This is called CPE. The tool I wrote is called Calliope, by the way. I'm not really here to show off about the tool, actually. You can look at it, and it's fun, but the ideas are the thing I'm more excited about. I'd like people to re-implement this in other languages and go forth with the ideas and do stuff I never thought of, or contribute to the project itself. So it has a multi-core binary. Currently everything's written in Python. That could change if somebody decides to write a new tool in Haskell or whatever. The main interface is the command line. So you can create a recommendation pipeline as a shell pipeline. Or you can do stuff in Python directly for greater control. And it's optimized for ease of maintenance, right? Because I'm lazy. I have one hour a weekend to spend on this, so it has to be easy to maintain. Okay, so the data model, as simple as possible. Here's a playlist item. It's a Python dictionary, which we can represent as JSON, and it has key value pairs. And then a playlist is a list of playlist items. One quite key decision is that, notice I haven't represented this as a JSON list. It's a JSON lines document. So that's JSON objects separated by a new line. And this is really cool, because you can process it with shell pipeline tools. You can process it with JSON tools, but you can also process it with line-based processing tools. Think if we had a JSON list, and this playlist was 10,000 items long, then we stream it, and you have to wait for the closing parenthesis before the next process can read it. But this way, the processes can read a line at a time, and you can have an infinite-length playlist and start processing the beginning of it before it's even, before it's finished. Okay, so that's the data model. Those key value pairs, creator and title, those on arbitrary, those come from an existing playlist format called SPF, which has been around since 2006 and is almost perfect. Like, they got the design almost perfect. One of the flaws was choosing XML, which was a good idea in 2006. And the other tweak I made was representing it as JSON lines, but the data model is effectively the same as SPF. So we can already do some fun stuff with this playlist, right? Let me quickly show you what you can do. Here's a playlist. These songs aren't real, obviously. We can shuffle it. I have to give it a file name, and the file name is standard in. Okay, so now it's shuffled. I can export it to a different playlist format. So now I've converted it into an actual SPF playlist, so you can put it into rhythm box. But we don't even need to use calliope tools, right? I could use head to get the first item. I could shuffle it using sort. Okay. And I can use data-oriented tools as well. So this is actually new shell, which is a data-oriented shell. So I can also load it into new shell, and now I have JSON, and now I can sort it by the artist's name or by the title. So just by defining a data format, you get all this stuff for free. Like, I didn't even have to write any code yet, and we can already shuffle a playlist. So what's next? Well, these aren't even real songs, right? You can't play them. There's no content. So the next step is get some content so we can actually listen to the playlist. The developers of the SPF format have thought of this, and they designed SPF with a portable design where when you go to play the music, you resolve it at that moment. So you search based on the metadata, like creator and title, and then you find a URL where you can actually play it. So I implemented that, and I can demo that as well. Okay, so here's three. These are real songs now, and if I pipe it to the Spotify sub-command, they get resolved to actual tracks on Spotify. So over here somewhere is a URL, and you can click it and listen to the track. This is all done using the Spotify API, so you need a Spotify API key to do that. You can get it for free, but it's a little bit of an effort. And it works by searching based on creator, title, and ranking the results. Or I can resolve it to tracks on my local machine. So I'm a GNOME developer, so I have the tracker search engine installed, and tracker can match against my local music collection and return the URL. Let me make that pretty. Okay, so it's resolved to URLs on my local machine. This one, I seem to have deleted the Madonna album, but the other two are here. And then you see here I exported it as an M3U playlist as well, now that we have URLs. So this is the basics of how you can make playlists in Python, right? What's next? So I promised music recommendations, right, and we haven't actually done any recommendations yet. So the next thing I'm going to talk about is a program I made that generates me a playlist every day. And that's as far as I've got with this, because actually I quite like the playlists it generates, so I haven't needed to make any other recommenders yet. I'm still happy with this one. Soon I shall look at some more. But a recommendation algorithm is basically this. You have a very big playlist on the left, which is all the possible music you could listen to, and then some sort of algorithm happens, and on the right you have a shorter playlist, which is hopefully better, and that's the one you listen to. So the algorithm I came up with, I called it the Special Mix, and its goal is to create a one-hour playlist of music that I already know, and there's three ingredients for that. All of these are Python libraries. One is PyListenBrains, which is an interface to the ListenBrains database. One is the Beats Music Organiser, which is a great tool for maintaining a local music collection. And one is the Python SimpleAI module, which gives you really basic AI algorithms that let you do constraint solving. So I'll go through those one at a time. I'll go have a little drink first. So if you want to do music recommendations, it's a good idea to save the history of what you listen to. Spotify already does that, although they make it a little difficult for you to then get at the data. Lastfm does that, and ListenBrains, which I recommend that solution because it's open. It's an open source platform. It's open data. So you can get a browser extension, or phone apps and music players that will save everything you listen to into the ListenBrains database, and then ListenBrains gives you charts and graphs to show what a great taste you have. And Python ListenBrains and the Kaliot ListenBrains command let you access the data. So... I would run the ListenBrains history command, put my username, and fetch all the listens. This does something kind of dumb. It just syncs all of the listens into a local SQLI database. And then I've dumped the first one here to show the kind of metadata you get. So you get a timestamp, you get an ID for the track, and then you get the creator and the title and the album. And in this case, the URL of where I listened to it, because it came from the web scrubbler. So that's useful. And then because it saved in a local SQL database, we can do things like calculate a histogram of which years I actually listened to music. We can select tracks based on, okay, it was first listened to in 2019, or it was first listened to in 2020. So that's what I did. And now I have a playlist, right? So the first thing the special mix does is it chooses one year out of this histogram, so a year where I did actually listen to music, and then it selects all the tracks that I listened to where the first listen is in that year. So songs I discovered in 2019 or discovered in 2021, for example. And now we have a playlist, but it's very long. So the next step is... The next step would be to select tracks from it. However, we want to know a bit more about the songs first. So actually the next step here is to resolve the tracks to local content. This is where I keep my music collection. It's a hi-tech home server. And I manage it with a Python program called Beats. This is a command line tool that lets you take music that you've got from Bandcamp or wherever and import it into a database and it fixes the tags using MusicBrains. So it's always correct. It has nice apostrophe characters. You can use any content resolver in theory. You can generate playlists against Spotify and upload them to Spotify, but that's not my goal here. So using Beats, I can resolve the tracks in the playlist to actual mp3 files on my music server. That's actually a lie. I haven't implemented that yet and I use Tracker. But because Beats is written in Python, we'll pretend that I use Beats. Either way, now I have a playlist where the track location is set to a file and we also know the duration of every song. So we have a bit of more metadata. And now we can select which tracks go in the playlist. Okay, so here's the fun part. All the parts are fun, but maybe this is the most fun part. The approach I took was to try and do constraint solving. Now, this is a pretty old area of AI, right? People have been looking at constraint solving for years and years, so the fashion at the moment is to solve everything with machine learning and lots and lots of GPUs. And that works. It produces nice results, but it's hard to reproduce in an hour on the weekend on your old laptop, whereas the constraint solving approach is pretty simple. You can run it on, you know, a Raspberry Pi with no issues. This was inspired by a paper that I found, which, again, is from 2008. It's nothing too futuristic. And in this paper, they define a constraint model. So this looks kind of academic if you're not a mathematician. But these are ways of making constraints on a playlist, such as I want the playlist for whatever reason to be 20% or more Stevie Wonder songs. And they can express that as a function. And the key is that you can apply this function to a playlist. So let's say I have a playlist and it has 100 Stevie Wonder songs. This constraint function would return a score of one for that playlist because every song is Stevie Wonder, so the constraint is completely satisfied. Now let's say I have another playlist, which is entirely Death Metal. This constraint function would return zero because none of the tracks are by Stevie Wonder. And if we had a playlist that was 10% Stevie Wonder songs, then we would assume this function would return 0.5 because the playlist kind of half satisfies the constraint. So the first step in constraint solving like this is to define a constraint function that can score any playlist. And then we use a local search algorithm to find a playlist that best matches the constraints. So local search is a kind of try it, try, try, try, try again until you get bored and then pick the best solution that you found. You set a fixed number of iterations like 10,000 and you kind of go, OK, well, this works, this one's a bit better, this one's worse, and choose the best one that you found. So I'm going to do a quick worked example of this with two constraints. And the constraints I'm going to put are the songs must be, each song must be two to four minutes long and the playlist as a whole must be 10 minutes. And here's a demo of solving that constraint problem. As promised, it fits on a sheet of A4 paper. This is the whole program. So here I've defined two constraints. One of them is an item duration constraint saying that the duration of each item should be between two and four minutes. And here's a playlist duration constraint saying that the overall duration should be between 10 and 10 minutes. I know exactly what I want. And then here is the input, which is a playlist made up of four fake songs. I haven't used real songs here because it's too complicated. Notice they have vastly different lengths, so it's quite hard to solve this problem. There's not an obvious solution. And we're going to use the Kaliope Select module, which internally uses simple AI. So the only thing that's required in this playlist, the only required piece of metadata is an ID. In this case, I've put emojis because they're pretty, but normally you'd have an integer or something. And these constraints will look at the duration field. So the duration field is also required because otherwise we can't calculate the score, right? Because we need to know the duration of each item. So if I've got time, how are we doing for time? Okay, I think I have time to show you a live demo of solving this constraint problem. And the good news is, Simple AI, the Simple AI module, has a web viewer that can give us a kind of graphical view of what's going on here. So with luck, yeah, with luck this will load, and it's going to step through each step of the local search algorithm to find the best playlist. So in the beginning we have an empty playlist and the score is zero because it doesn't satisfy either of the constraints. We take a step. Each step it can choose to do different actions that will change the playlist. So here it's chosen actions of adding a song because that's all it can do. So we can add this song which was quite long and the score is now 0.4 because one of the songs is too long. Or if we have the really short song, the score is lower. Or if we add this seven-minute ambient tune, then, ah, it's very difficult to get the scale right. There we go. So this one has the highest score, no, this one has the highest score actually. So probably it's going to choose this one. Yeah, so the next step we have a playlist which is just this song. What song was that? Amazing tune. So we have amazing tune in the list and now the score is 0.6. Let's take the next step. Okay, so now one of the possible actions is removing the song again, but we won't do that because the score is back down to zero. Or we can add one of these other songs and this one seems to be the playlist that best matches the constraint. Okay, so now we've got a playlist of two items. Now we can take some more actions. We can add another song or remove either of those songs. And we've added another song. Probably at this point it's going to say, okay, so it can't find any actions that increase the score, so the algorithm has said, right, it's done. That's the best playlist you're going to get. And that is how you can create a playlist in a page full of Python. So pretty short on time. We can export this playlist. And I have a jelly-fin music player set up and that's how I listen to it. That's a recap of what we've just seen. So what's next? I don't know, really. We have a couple of minutes for questions. Maybe you can answer the question of what's next. APPLAUSE Thank you, Sam. We have two minutes for questions. I will repeat the questions then. Yeah, so if I want to actually use this project like, for example, Francis, how much time would it take me to set up the project and find constraints that actually match and replace music given that I'm fairly familiar with Python or setting up some projects? So how much time would it take to set up the whole project and find the constraints and so on? Yeah, interesting question, actually. So, I mean, setting up the project is fairly easy. You pip install. After that... I don't know, it wouldn't be quick. I'll tell you that. You would have to enjoy getting your hands dirty a bit at this stage. My general goal is to create a folder of example recommenders. So hopefully in future you'd be able to... And you can actually run the examples as modules as well. So hopefully in the future you'd be able to kind of run an existing example and get started fairly quickly and just tweak a few values. One more over there. Or one over here. So depending on the number of times you have used this recommendation system, how often has it repeated the same set of music, same set of songs or very similar tasting songs? Yeah, how long has it repeated? It's never come up with two playlists the same, actually. What it does sometimes do, though, is it'll take an album and kind of give me four or five songs of the same album in one playlist. So maybe I need to tweak the constraints a bit there. But there's infinite possibilities, really. Yeah, I haven't got bored of it so far. If your input is very short, then it will get repetitive. One more question? Thanks for the very interesting talk. Just a quick question. How easy would it be to implement? So say if you wanted to search for different performances or different interpretations of a particular piece of music, so if you had classical music, some symphony with a bunch of different recordings, how easy would it be to implement that in the current? How familiar are you with music brains? Not at all. So the tool you would use would be music brains. Yeah, talk to this guy. He'll bring you up to speed. Thank you again, Sam. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.0, "text": " And welcome to Sam for his talk on Music Recommendations in Python.", "tokens": [50364, 400, 2928, 281, 4832, 337, 702, 751, 322, 7609, 49545, 521, 763, 294, 15329, 13, 50864], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 1, "seek": 0, "start": 10.0, "end": 11.0, "text": " Welcome.", "tokens": [50864, 4027, 13, 50914], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 2, "seek": 0, "start": 11.0, "end": 12.0, "text": " Thank you.", "tokens": [50914, 1044, 291, 13, 50964], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 3, "seek": 0, "start": 12.0, "end": 13.0, "text": " Can you hear me?", "tokens": [50964, 1664, 291, 1568, 385, 30, 51014], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 4, "seek": 0, "start": 13.0, "end": 14.0, "text": " Yes.", "tokens": [51014, 1079, 13, 51064], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 5, "seek": 0, "start": 14.0, "end": 15.0, "text": " Good.", "tokens": [51064, 2205, 13, 51114], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 6, "seek": 0, "start": 15.0, "end": 16.0, "text": " Okay.", "tokens": [51114, 1033, 13, 51164], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 7, "seek": 0, "start": 16.0, "end": 28.0, "text": " So I'm a system software developer, actually, and this is a hobby that I like to make music", "tokens": [51164, 407, 286, 478, 257, 1185, 4722, 10754, 11, 767, 11, 293, 341, 307, 257, 18240, 300, 286, 411, 281, 652, 1318, 51764], "temperature": 0.0, "avg_logprob": -0.30989069257463725, "compression_ratio": 1.298780487804878, "no_speech_prob": 0.40840744972229004}, {"id": 8, "seek": 2800, "start": 28.0, "end": 30.0, "text": " playlists and play around with Python.", "tokens": [50364, 862, 36693, 293, 862, 926, 365, 15329, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 9, "seek": 2800, "start": 30.0, "end": 33.0, "text": " I'm also a musician and a music fan.", "tokens": [50464, 286, 478, 611, 257, 19570, 293, 257, 1318, 3429, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 10, "seek": 2800, "start": 33.0, "end": 35.0, "text": " And I also used to be a teacher.", "tokens": [50614, 400, 286, 611, 1143, 281, 312, 257, 5027, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 11, "seek": 2800, "start": 35.0, "end": 36.0, "text": " I think that's relevant.", "tokens": [50714, 286, 519, 300, 311, 7340, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 12, "seek": 2800, "start": 36.0, "end": 38.0, "text": " That's going to come into play later.", "tokens": [50764, 663, 311, 516, 281, 808, 666, 862, 1780, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 13, "seek": 2800, "start": 38.0, "end": 45.0, "text": " Thanks to my player code think for sponsoring the travel and allowing me to be here.", "tokens": [50864, 2561, 281, 452, 4256, 3089, 519, 337, 30311, 264, 3147, 293, 8293, 385, 281, 312, 510, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 14, "seek": 2800, "start": 45.0, "end": 48.0, "text": " So as a music fan, I used to make a lot of playlists.", "tokens": [51214, 407, 382, 257, 1318, 3429, 11, 286, 1143, 281, 652, 257, 688, 295, 862, 36693, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 15, "seek": 2800, "start": 48.0, "end": 49.0, "text": " I still do.", "tokens": [51364, 286, 920, 360, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 16, "seek": 2800, "start": 49.0, "end": 53.0, "text": " And I'm quite old, so when I first started making playlists, they look like this.", "tokens": [51414, 400, 286, 478, 1596, 1331, 11, 370, 562, 286, 700, 1409, 1455, 862, 36693, 11, 436, 574, 411, 341, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 17, "seek": 2800, "start": 53.0, "end": 55.0, "text": " And very convenient to share.", "tokens": [51614, 400, 588, 10851, 281, 2073, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1117423500601701, "compression_ratio": 1.6953125, "no_speech_prob": 0.38106030225753784}, {"id": 18, "seek": 5500, "start": 55.0, "end": 59.0, "text": " Just give someone else the piece of plastic and they have a machine that plays it.", "tokens": [50364, 1449, 976, 1580, 1646, 264, 2522, 295, 5900, 293, 436, 362, 257, 3479, 300, 5749, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 19, "seek": 5500, "start": 59.0, "end": 64.0, "text": " But quite difficult to make because you have to, you remember, you have to line up all the songs,", "tokens": [50564, 583, 1596, 2252, 281, 652, 570, 291, 362, 281, 11, 291, 1604, 11, 291, 362, 281, 1622, 493, 439, 264, 5781, 11, 50814], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 20, "seek": 5500, "start": 64.0, "end": 67.0, "text": " just write, press record, press play.", "tokens": [50814, 445, 2464, 11, 1886, 2136, 11, 1886, 862, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 21, "seek": 5500, "start": 67.0, "end": 70.0, "text": " The 2000s came and we all moved to digital music.", "tokens": [50964, 440, 8132, 82, 1361, 293, 321, 439, 4259, 281, 4562, 1318, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 22, "seek": 5500, "start": 70.0, "end": 73.0, "text": " If you were cool, you had like a win-amp skin.", "tokens": [51114, 759, 291, 645, 1627, 11, 291, 632, 411, 257, 1942, 12, 1215, 3178, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 23, "seek": 5500, "start": 73.0, "end": 76.0, "text": " If you were really cool, you had XMMS.", "tokens": [51264, 759, 291, 645, 534, 1627, 11, 291, 632, 1783, 44, 10288, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 24, "seek": 5500, "start": 76.0, "end": 80.0, "text": " And these playlists, much easier to make, you just drag and drop.", "tokens": [51414, 400, 613, 862, 36693, 11, 709, 3571, 281, 652, 11, 291, 445, 5286, 293, 3270, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 25, "seek": 5500, "start": 80.0, "end": 84.0, "text": " But they were more difficult to share because nobody else had the same MP3s as you.", "tokens": [51614, 583, 436, 645, 544, 2252, 281, 2073, 570, 5079, 1646, 632, 264, 912, 14146, 18, 82, 382, 291, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13862266814965996, "compression_ratio": 1.75, "no_speech_prob": 0.07008284330368042}, {"id": 26, "seek": 8400, "start": 84.0, "end": 88.0, "text": " So you couldn't give the playlist to your friend anymore quite so easily.", "tokens": [50364, 407, 291, 2809, 380, 976, 264, 16788, 281, 428, 1277, 3602, 1596, 370, 3612, 13, 50564], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 27, "seek": 8400, "start": 88.0, "end": 93.0, "text": " But if you ask someone now to make a playlist, probably they're going to think of this.", "tokens": [50564, 583, 498, 291, 1029, 1580, 586, 281, 652, 257, 16788, 11, 1391, 436, 434, 516, 281, 519, 295, 341, 13, 50814], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 28, "seek": 8400, "start": 93.0, "end": 97.0, "text": " They're going to make you a playlist on Spotify or YouTube and send you a link.", "tokens": [50814, 814, 434, 516, 281, 652, 291, 257, 16788, 322, 29036, 420, 3088, 293, 2845, 291, 257, 2113, 13, 51014], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 29, "seek": 8400, "start": 97.0, "end": 100.0, "text": " And that's even better, right?", "tokens": [51014, 400, 300, 311, 754, 1101, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 30, "seek": 8400, "start": 100.0, "end": 101.0, "text": " It's super easy to make.", "tokens": [51164, 467, 311, 1687, 1858, 281, 652, 13, 51214], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 31, "seek": 8400, "start": 101.0, "end": 102.0, "text": " You drag and drop.", "tokens": [51214, 509, 5286, 293, 3270, 13, 51264], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 32, "seek": 8400, "start": 102.0, "end": 103.0, "text": " It's easy to share.", "tokens": [51264, 467, 311, 1858, 281, 2073, 13, 51314], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 33, "seek": 8400, "start": 103.0, "end": 104.0, "text": " You send someone the link.", "tokens": [51314, 509, 2845, 1580, 264, 2113, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 34, "seek": 8400, "start": 104.0, "end": 108.0, "text": " And it even recommends you songs to put on the list.", "tokens": [51364, 400, 309, 754, 34556, 291, 5781, 281, 829, 322, 264, 1329, 13, 51564], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 35, "seek": 8400, "start": 108.0, "end": 110.0, "text": " So what's not to like?", "tokens": [51564, 407, 437, 311, 406, 281, 411, 30, 51664], "temperature": 0.0, "avg_logprob": -0.06921938487461635, "compression_ratio": 1.742063492063492, "no_speech_prob": 0.005253232084214687}, {"id": 36, "seek": 11000, "start": 110.0, "end": 112.0, "text": " Honestly, I don't actually want that song on the list.", "tokens": [50364, 12348, 11, 286, 500, 380, 767, 528, 300, 2153, 322, 264, 1329, 13, 50464], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 37, "seek": 11000, "start": 112.0, "end": 117.0, "text": " So the recommendations aren't always helpful.", "tokens": [50464, 407, 264, 10434, 3212, 380, 1009, 4961, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 38, "seek": 11000, "start": 117.0, "end": 119.0, "text": " Spotify is fine.", "tokens": [50714, 29036, 307, 2489, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 39, "seek": 11000, "start": 119.0, "end": 120.0, "text": " You can use it.", "tokens": [50814, 509, 393, 764, 309, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 40, "seek": 11000, "start": 120.0, "end": 121.0, "text": " It has a great team of researchers.", "tokens": [50864, 467, 575, 257, 869, 1469, 295, 10309, 13, 50914], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 41, "seek": 11000, "start": 121.0, "end": 123.0, "text": " There are some negative things about the company.", "tokens": [50914, 821, 366, 512, 3671, 721, 466, 264, 2237, 13, 51014], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 42, "seek": 11000, "start": 123.0, "end": 125.0, "text": " I mean, it's a private company.", "tokens": [51014, 286, 914, 11, 309, 311, 257, 4551, 2237, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 43, "seek": 11000, "start": 125.0, "end": 129.0, "text": " The duty theater investors is to minimize the amount that they pay out to musicians", "tokens": [51114, 440, 9776, 10612, 11519, 307, 281, 17522, 264, 2372, 300, 436, 1689, 484, 281, 16916, 51314], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 44, "seek": 11000, "start": 129.0, "end": 132.0, "text": " and pay that to investors instead.", "tokens": [51314, 293, 1689, 300, 281, 11519, 2602, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 45, "seek": 11000, "start": 132.0, "end": 136.0, "text": " And they've been steadily doing that and reducing the rates they pay to musicians.", "tokens": [51464, 400, 436, 600, 668, 36129, 884, 300, 293, 12245, 264, 6846, 436, 1689, 281, 16916, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 46, "seek": 11000, "start": 136.0, "end": 138.0, "text": " And they kind of focus on passive listening, right?", "tokens": [51664, 400, 436, 733, 295, 1879, 322, 14975, 4764, 11, 558, 30, 51764], "temperature": 0.0, "avg_logprob": -0.07141269269839738, "compression_ratio": 1.7118644067796611, "no_speech_prob": 0.0159965381026268}, {"id": 47, "seek": 13800, "start": 138.0, "end": 143.0, "text": " So you put on an album, it finishes, but they put on more songs for you.", "tokens": [50364, 407, 291, 829, 322, 364, 6030, 11, 309, 23615, 11, 457, 436, 829, 322, 544, 5781, 337, 291, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 48, "seek": 13800, "start": 143.0, "end": 147.0, "text": " People actually now adapt to their music to fit the Spotify algorithm.", "tokens": [50614, 3432, 767, 586, 6231, 281, 641, 1318, 281, 3318, 264, 29036, 9284, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 49, "seek": 13800, "start": 147.0, "end": 150.0, "text": " So the first 10 or 20 seconds are very important.", "tokens": [50814, 407, 264, 700, 1266, 420, 945, 3949, 366, 588, 1021, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 50, "seek": 13800, "start": 150.0, "end": 153.0, "text": " So songs don't have long intros anymore.", "tokens": [50964, 407, 5781, 500, 380, 362, 938, 560, 2635, 3602, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 51, "seek": 13800, "start": 153.0, "end": 156.0, "text": " That's been done to please the Spotify algorithm.", "tokens": [51114, 663, 311, 668, 1096, 281, 1767, 264, 29036, 9284, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 52, "seek": 13800, "start": 156.0, "end": 159.0, "text": " So I started to think, what would the opposite look like?", "tokens": [51264, 407, 286, 1409, 281, 519, 11, 437, 576, 264, 6182, 574, 411, 30, 51414], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 53, "seek": 13800, "start": 159.0, "end": 163.0, "text": " And I came up with, it would have to be something DIY,", "tokens": [51414, 400, 286, 1361, 493, 365, 11, 309, 576, 362, 281, 312, 746, 22194, 11, 51614], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 54, "seek": 13800, "start": 163.0, "end": 166.0, "text": " something that doesn't have a profit motive behind it.", "tokens": [51614, 746, 300, 1177, 380, 362, 257, 7475, 28827, 2261, 309, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08451058684276934, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.0076064360328018665}, {"id": 55, "seek": 16600, "start": 166.0, "end": 172.0, "text": " It would focus on having local music and going to artist websites,", "tokens": [50364, 467, 576, 1879, 322, 1419, 2654, 1318, 293, 516, 281, 5748, 12891, 11, 50664], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 56, "seek": 16600, "start": 172.0, "end": 176.0, "text": " buying music from Bandcamp, from paying them on Petrion.", "tokens": [50664, 6382, 1318, 490, 15462, 24640, 11, 490, 6229, 552, 322, 10472, 81, 313, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 57, "seek": 16600, "start": 176.0, "end": 179.0, "text": " It would also involve working with open data.", "tokens": [50864, 467, 576, 611, 9494, 1364, 365, 1269, 1412, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 58, "seek": 16600, "start": 179.0, "end": 184.0, "text": " So when I say open data, I don't necessarily mean public data that everyone can see,", "tokens": [51014, 407, 562, 286, 584, 1269, 1412, 11, 286, 500, 380, 4725, 914, 1908, 1412, 300, 1518, 393, 536, 11, 51264], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 59, "seek": 16600, "start": 184.0, "end": 188.0, "text": " but data where it's hosted by you or by an entity you trust.", "tokens": [51264, 457, 1412, 689, 309, 311, 19204, 538, 291, 420, 538, 364, 13977, 291, 3361, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 60, "seek": 16600, "start": 188.0, "end": 191.0, "text": " And you can choose if it's open or private.", "tokens": [51464, 400, 291, 393, 2826, 498, 309, 311, 1269, 420, 4551, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 61, "seek": 16600, "start": 191.0, "end": 195.0, "text": " You can download it, export it, et cetera.", "tokens": [51614, 509, 393, 5484, 309, 11, 10725, 309, 11, 1030, 11458, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10247180196974012, "compression_ratio": 1.6144578313253013, "no_speech_prob": 0.007369041442871094}, {"id": 62, "seek": 19500, "start": 195.0, "end": 198.0, "text": " So I have no idea really what I'm doing,", "tokens": [50364, 407, 286, 362, 572, 1558, 534, 437, 286, 478, 884, 11, 50514], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 63, "seek": 19500, "start": 198.0, "end": 203.0, "text": " but back in 2016 I started experimenting with some ideas.", "tokens": [50514, 457, 646, 294, 6549, 286, 1409, 29070, 365, 512, 3487, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 64, "seek": 19500, "start": 203.0, "end": 206.0, "text": " And I was inspired by one or two other projects.", "tokens": [50764, 400, 286, 390, 7547, 538, 472, 420, 732, 661, 4455, 13, 50914], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 65, "seek": 19500, "start": 206.0, "end": 210.0, "text": " So has anyone heard of Dynamic Land?", "tokens": [50914, 407, 575, 2878, 2198, 295, 45440, 6607, 30, 51114], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 66, "seek": 19500, "start": 210.0, "end": 212.0, "text": " That's a shame.", "tokens": [51114, 663, 311, 257, 10069, 13, 51214], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 67, "seek": 19500, "start": 212.0, "end": 214.0, "text": " So note that down if you have a notebook.", "tokens": [51214, 407, 3637, 300, 760, 498, 291, 362, 257, 21060, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 68, "seek": 19500, "start": 214.0, "end": 217.0, "text": " It's something very interesting to research about.", "tokens": [51314, 467, 311, 746, 588, 1880, 281, 2132, 466, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 69, "seek": 19500, "start": 217.0, "end": 219.0, "text": " Out of scope for this talk.", "tokens": [51464, 5925, 295, 11923, 337, 341, 751, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 70, "seek": 19500, "start": 219.0, "end": 222.0, "text": " It's a project where the room, the whole room is a computer.", "tokens": [51564, 467, 311, 257, 1716, 689, 264, 1808, 11, 264, 1379, 1808, 307, 257, 3820, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07968677092935438, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.0006175425951369107}, {"id": 71, "seek": 22200, "start": 222.0, "end": 226.0, "text": " Each of these pieces of paper has a program on it or some data,", "tokens": [50364, 6947, 295, 613, 3755, 295, 3035, 575, 257, 1461, 322, 309, 420, 512, 1412, 11, 50564], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 72, "seek": 22200, "start": 226.0, "end": 230.0, "text": " and you can interact with them by moving them around physically.", "tokens": [50564, 293, 291, 393, 4648, 365, 552, 538, 2684, 552, 926, 9762, 13, 50764], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 73, "seek": 22200, "start": 230.0, "end": 232.0, "text": " Now, I can't create that myself,", "tokens": [50764, 823, 11, 286, 393, 380, 1884, 300, 2059, 11, 50864], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 74, "seek": 22200, "start": 232.0, "end": 236.0, "text": " but I like the idea of having a program that fits on a sheet of A4 paper.", "tokens": [50864, 457, 286, 411, 264, 1558, 295, 1419, 257, 1461, 300, 9001, 322, 257, 8193, 295, 316, 19, 3035, 13, 51064], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 75, "seek": 22200, "start": 236.0, "end": 239.0, "text": " You know, the philosophy is if your program doesn't fit on the paper,", "tokens": [51064, 509, 458, 11, 264, 10675, 307, 498, 428, 1461, 1177, 380, 3318, 322, 264, 3035, 11, 51214], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 76, "seek": 22200, "start": 239.0, "end": 242.0, "text": " then it's too big and it needs to become smaller.", "tokens": [51214, 550, 309, 311, 886, 955, 293, 309, 2203, 281, 1813, 4356, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 77, "seek": 22200, "start": 242.0, "end": 244.0, "text": " And I like that as a philosophy.", "tokens": [51364, 400, 286, 411, 300, 382, 257, 10675, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 78, "seek": 22200, "start": 244.0, "end": 247.0, "text": " I feel like the playlist generators that I want to write", "tokens": [51464, 286, 841, 411, 264, 16788, 38662, 300, 286, 528, 281, 2464, 51614], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 79, "seek": 22200, "start": 247.0, "end": 251.0, "text": " should also fit on a piece of A4 paper or on a slide deck.", "tokens": [51614, 820, 611, 3318, 322, 257, 2522, 295, 316, 19, 3035, 420, 322, 257, 4137, 9341, 13, 51814], "temperature": 0.0, "avg_logprob": -0.06573305268218552, "compression_ratio": 1.7622377622377623, "no_speech_prob": 0.008186634629964828}, {"id": 80, "seek": 25100, "start": 251.0, "end": 255.0, "text": " And it should be a process that people can participate in.", "tokens": [50364, 400, 309, 820, 312, 257, 1399, 300, 561, 393, 8197, 294, 13, 50564], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 81, "seek": 25100, "start": 255.0, "end": 258.0, "text": " Okay, another thing that really inspired me was Git.", "tokens": [50564, 1033, 11, 1071, 551, 300, 534, 7547, 385, 390, 16939, 13, 50714], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 82, "seek": 25100, "start": 258.0, "end": 261.0, "text": " That might seem counterintuitive,", "tokens": [50714, 663, 1062, 1643, 5682, 686, 48314, 11, 50864], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 83, "seek": 25100, "start": 261.0, "end": 266.0, "text": " but Git, Linus Torvalds recently said he's better known actually for Git than for Linux,", "tokens": [50864, 457, 16939, 11, 9355, 301, 7160, 3337, 16063, 3938, 848, 415, 311, 1101, 2570, 767, 337, 16939, 813, 337, 18734, 11, 51114], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 84, "seek": 25100, "start": 266.0, "end": 271.0, "text": " despite having basically created Git in a month.", "tokens": [51114, 7228, 1419, 1936, 2942, 16939, 294, 257, 1618, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 85, "seek": 25100, "start": 271.0, "end": 273.0, "text": " And quite an achievement, right?", "tokens": [51364, 400, 1596, 364, 15838, 11, 558, 30, 51464], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 86, "seek": 25100, "start": 273.0, "end": 276.0, "text": " So there were a few key ideas.", "tokens": [51464, 407, 456, 645, 257, 1326, 2141, 3487, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 87, "seek": 25100, "start": 276.0, "end": 279.0, "text": " Git's data model is really well defined.", "tokens": [51614, 16939, 311, 1412, 2316, 307, 534, 731, 7642, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12172795277015835, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0003567004459910095}, {"id": 88, "seek": 27900, "start": 279.0, "end": 282.0, "text": " It's simple. You have refs and commits.", "tokens": [50364, 467, 311, 2199, 13, 509, 362, 1895, 82, 293, 48311, 13, 50514], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 89, "seek": 27900, "start": 282.0, "end": 284.0, "text": " You work with those directly.", "tokens": [50514, 509, 589, 365, 729, 3838, 13, 50614], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 90, "seek": 27900, "start": 284.0, "end": 288.0, "text": " And then your commits are made of trees and your trees have blobs.", "tokens": [50614, 400, 550, 428, 48311, 366, 1027, 295, 5852, 293, 428, 5852, 362, 1749, 929, 13, 50814], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 91, "seek": 27900, "start": 288.0, "end": 292.0, "text": " And you work with this directly. Like, you get your hands dirty.", "tokens": [50814, 400, 291, 589, 365, 341, 3838, 13, 1743, 11, 291, 483, 428, 2377, 9360, 13, 51014], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 92, "seek": 27900, "start": 292.0, "end": 294.0, "text": " Git is also a multi-core binary,", "tokens": [51014, 16939, 307, 611, 257, 4825, 12, 12352, 17434, 11, 51114], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 93, "seek": 27900, "start": 294.0, "end": 298.0, "text": " which has a really nice advantage that you can write one part of it in Perl", "tokens": [51114, 597, 575, 257, 534, 1481, 5002, 300, 291, 393, 2464, 472, 644, 295, 309, 294, 3026, 75, 51314], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 94, "seek": 27900, "start": 298.0, "end": 302.0, "text": " and then another part of it in TCL and then another part of it in C.", "tokens": [51314, 293, 550, 1071, 644, 295, 309, 294, 314, 22458, 293, 550, 1071, 644, 295, 309, 294, 383, 13, 51514], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 95, "seek": 27900, "start": 302.0, "end": 304.0, "text": " So you don't have to keep rewriting.", "tokens": [51514, 407, 291, 500, 380, 362, 281, 1066, 319, 19868, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 96, "seek": 27900, "start": 304.0, "end": 308.0, "text": " You can have different people working on small components.", "tokens": [51614, 509, 393, 362, 819, 561, 1364, 322, 1359, 6677, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0848934595821468, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.003803316503763199}, {"id": 97, "seek": 30800, "start": 308.0, "end": 312.0, "text": " And I had this idea of having the user interface commands,", "tokens": [50364, 400, 286, 632, 341, 1558, 295, 1419, 264, 4195, 9226, 16901, 11, 50564], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 98, "seek": 30800, "start": 312.0, "end": 315.0, "text": " they call the porcelain, and the innards, like the plumbing.", "tokens": [50564, 436, 818, 264, 1515, 4933, 491, 11, 293, 264, 7714, 2287, 11, 411, 264, 39993, 13, 50714], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 99, "seek": 30800, "start": 315.0, "end": 317.0, "text": " But it's all available, right?", "tokens": [50714, 583, 309, 311, 439, 2435, 11, 558, 30, 50814], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 100, "seek": 30800, "start": 317.0, "end": 319.0, "text": " So if you have Git on your laptop,", "tokens": [50814, 407, 498, 291, 362, 16939, 322, 428, 10732, 11, 50914], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 101, "seek": 30800, "start": 319.0, "end": 323.0, "text": " you can build a commit using the lowest level commands that you want.", "tokens": [50914, 291, 393, 1322, 257, 5599, 1228, 264, 12437, 1496, 16901, 300, 291, 528, 13, 51114], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 102, "seek": 30800, "start": 323.0, "end": 326.0, "text": " And that's a huge advantage in getting people involved.", "tokens": [51114, 400, 300, 311, 257, 2603, 5002, 294, 1242, 561, 3288, 13, 51264], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 103, "seek": 30800, "start": 326.0, "end": 328.0, "text": " Git is a real DIY project.", "tokens": [51264, 16939, 307, 257, 957, 22194, 1716, 13, 51364], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 104, "seek": 30800, "start": 328.0, "end": 331.0, "text": " It's not some shiny thing that just magically works.", "tokens": [51364, 467, 311, 406, 512, 16997, 551, 300, 445, 39763, 1985, 13, 51514], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 105, "seek": 30800, "start": 331.0, "end": 333.0, "text": " You push a button and have a nice day.", "tokens": [51514, 509, 2944, 257, 2960, 293, 362, 257, 1481, 786, 13, 51614], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 106, "seek": 30800, "start": 333.0, "end": 335.0, "text": " It's something that you really have to get involved with.", "tokens": [51614, 467, 311, 746, 300, 291, 534, 362, 281, 483, 3288, 365, 13, 51714], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 107, "seek": 30800, "start": 335.0, "end": 337.0, "text": " It'll break. You have to learn how it works.", "tokens": [51714, 467, 603, 1821, 13, 509, 362, 281, 1466, 577, 309, 1985, 13, 51814], "temperature": 0.0, "avg_logprob": -0.04415997413739766, "compression_ratio": 1.7138263665594855, "no_speech_prob": 0.00022797021665610373}, {"id": 108, "seek": 33700, "start": 337.0, "end": 340.0, "text": " And that's the secret to its success, I think.", "tokens": [50364, 400, 300, 311, 264, 4054, 281, 1080, 2245, 11, 286, 519, 13, 50514], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 109, "seek": 33700, "start": 340.0, "end": 344.0, "text": " And of course, Git, the interface to Git is the command line, right?", "tokens": [50514, 400, 295, 1164, 11, 16939, 11, 264, 9226, 281, 16939, 307, 264, 5622, 1622, 11, 558, 30, 50714], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 110, "seek": 33700, "start": 344.0, "end": 346.0, "text": " So you can build a website around it in Ruby.", "tokens": [50714, 407, 291, 393, 1322, 257, 3144, 926, 309, 294, 19907, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 111, "seek": 33700, "start": 346.0, "end": 349.0, "text": " You can build a website around it in Python.", "tokens": [50814, 509, 393, 1322, 257, 3144, 926, 309, 294, 15329, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 112, "seek": 33700, "start": 349.0, "end": 351.0, "text": " You can build extensions.", "tokens": [50964, 509, 393, 1322, 25129, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 113, "seek": 33700, "start": 351.0, "end": 352.0, "text": " Very inspiring.", "tokens": [51064, 4372, 15883, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 114, "seek": 33700, "start": 352.0, "end": 358.0, "text": " I set out to build a similar tool, but for playlists.", "tokens": [51114, 286, 992, 484, 281, 1322, 257, 2531, 2290, 11, 457, 337, 862, 36693, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 115, "seek": 33700, "start": 361.0, "end": 365.0, "text": " And the first thing I thought about was the data model.", "tokens": [51564, 400, 264, 700, 551, 286, 1194, 466, 390, 264, 1412, 2316, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07825813106462068, "compression_ratio": 1.6574074074074074, "no_speech_prob": 0.00043088788515888155}, {"id": 116, "seek": 36500, "start": 365.0, "end": 368.0, "text": " And I realized that actually everything is a playlist.", "tokens": [50364, 400, 286, 5334, 300, 767, 1203, 307, 257, 16788, 13, 50514], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 117, "seek": 36500, "start": 368.0, "end": 371.0, "text": " You know, a music collection is just a playlist", "tokens": [50514, 509, 458, 11, 257, 1318, 5765, 307, 445, 257, 16788, 50664], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 118, "seek": 36500, "start": 371.0, "end": 374.0, "text": " where the order doesn't really matter.", "tokens": [50664, 689, 264, 1668, 1177, 380, 534, 1871, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 119, "seek": 36500, "start": 374.0, "end": 377.0, "text": " Metadata can be stored as metadata in the playlist.", "tokens": [50814, 6377, 24695, 393, 312, 12187, 382, 26603, 294, 264, 16788, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 120, "seek": 36500, "start": 377.0, "end": 380.0, "text": " So everything is a playlist.", "tokens": [50964, 407, 1203, 307, 257, 16788, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 121, "seek": 36500, "start": 380.0, "end": 382.0, "text": " I wanted to write a multi-core binary.", "tokens": [51114, 286, 1415, 281, 2464, 257, 4825, 12, 12352, 17434, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 122, "seek": 36500, "start": 382.0, "end": 384.0, "text": " This is called CPE.", "tokens": [51214, 639, 307, 1219, 383, 5208, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 123, "seek": 36500, "start": 384.0, "end": 386.0, "text": " The tool I wrote is called Calliope, by the way.", "tokens": [51314, 440, 2290, 286, 4114, 307, 1219, 7807, 72, 1114, 11, 538, 264, 636, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 124, "seek": 36500, "start": 386.0, "end": 389.0, "text": " I'm not really here to show off about the tool, actually.", "tokens": [51414, 286, 478, 406, 534, 510, 281, 855, 766, 466, 264, 2290, 11, 767, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 125, "seek": 36500, "start": 389.0, "end": 391.0, "text": " You can look at it, and it's fun,", "tokens": [51564, 509, 393, 574, 412, 309, 11, 293, 309, 311, 1019, 11, 51664], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 126, "seek": 36500, "start": 391.0, "end": 394.0, "text": " but the ideas are the thing I'm more excited about.", "tokens": [51664, 457, 264, 3487, 366, 264, 551, 286, 478, 544, 2919, 466, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08380710377412684, "compression_ratio": 1.7426470588235294, "no_speech_prob": 0.0005233092815615237}, {"id": 127, "seek": 39400, "start": 394.0, "end": 396.0, "text": " I'd like people to re-implement this in other languages", "tokens": [50364, 286, 1116, 411, 561, 281, 319, 12, 332, 43704, 341, 294, 661, 8650, 50464], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 128, "seek": 39400, "start": 396.0, "end": 399.0, "text": " and go forth with the ideas and do stuff I never thought of,", "tokens": [50464, 293, 352, 5220, 365, 264, 3487, 293, 360, 1507, 286, 1128, 1194, 295, 11, 50614], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 129, "seek": 39400, "start": 399.0, "end": 402.0, "text": " or contribute to the project itself.", "tokens": [50614, 420, 10586, 281, 264, 1716, 2564, 13, 50764], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 130, "seek": 39400, "start": 402.0, "end": 404.0, "text": " So it has a multi-core binary.", "tokens": [50764, 407, 309, 575, 257, 4825, 12, 12352, 17434, 13, 50864], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 131, "seek": 39400, "start": 404.0, "end": 406.0, "text": " Currently everything's written in Python.", "tokens": [50864, 19964, 1203, 311, 3720, 294, 15329, 13, 50964], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 132, "seek": 39400, "start": 406.0, "end": 412.0, "text": " That could change if somebody decides to write a new tool in Haskell or whatever.", "tokens": [50964, 663, 727, 1319, 498, 2618, 14898, 281, 2464, 257, 777, 2290, 294, 8646, 43723, 420, 2035, 13, 51264], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 133, "seek": 39400, "start": 412.0, "end": 414.0, "text": " The main interface is the command line.", "tokens": [51264, 440, 2135, 9226, 307, 264, 5622, 1622, 13, 51364], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 134, "seek": 39400, "start": 414.0, "end": 420.0, "text": " So you can create a recommendation pipeline as a shell pipeline.", "tokens": [51364, 407, 291, 393, 1884, 257, 11879, 15517, 382, 257, 8720, 15517, 13, 51664], "temperature": 0.0, "avg_logprob": -0.0890772229149228, "compression_ratio": 1.570342205323194, "no_speech_prob": 0.0006576279411092401}, {"id": 135, "seek": 42000, "start": 420.0, "end": 424.0, "text": " Or you can do stuff in Python directly for greater control.", "tokens": [50364, 1610, 291, 393, 360, 1507, 294, 15329, 3838, 337, 5044, 1969, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 136, "seek": 42000, "start": 424.0, "end": 426.0, "text": " And it's optimized for ease of maintenance, right?", "tokens": [50564, 400, 309, 311, 26941, 337, 12708, 295, 11258, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 137, "seek": 42000, "start": 426.0, "end": 427.0, "text": " Because I'm lazy.", "tokens": [50664, 1436, 286, 478, 14847, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 138, "seek": 42000, "start": 427.0, "end": 429.0, "text": " I have one hour a weekend to spend on this,", "tokens": [50714, 286, 362, 472, 1773, 257, 6711, 281, 3496, 322, 341, 11, 50814], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 139, "seek": 42000, "start": 429.0, "end": 434.0, "text": " so it has to be easy to maintain.", "tokens": [50814, 370, 309, 575, 281, 312, 1858, 281, 6909, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 140, "seek": 42000, "start": 434.0, "end": 438.0, "text": " Okay, so the data model, as simple as possible.", "tokens": [51064, 1033, 11, 370, 264, 1412, 2316, 11, 382, 2199, 382, 1944, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 141, "seek": 42000, "start": 438.0, "end": 439.0, "text": " Here's a playlist item.", "tokens": [51264, 1692, 311, 257, 16788, 3174, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 142, "seek": 42000, "start": 439.0, "end": 442.0, "text": " It's a Python dictionary, which we can represent as JSON,", "tokens": [51314, 467, 311, 257, 15329, 25890, 11, 597, 321, 393, 2906, 382, 31828, 11, 51464], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 143, "seek": 42000, "start": 442.0, "end": 446.0, "text": " and it has key value pairs.", "tokens": [51464, 293, 309, 575, 2141, 2158, 15494, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09385279889376659, "compression_ratio": 1.4918032786885247, "no_speech_prob": 0.0012590085389092565}, {"id": 144, "seek": 44600, "start": 446.0, "end": 450.0, "text": " And then a playlist is a list of playlist items.", "tokens": [50364, 400, 550, 257, 16788, 307, 257, 1329, 295, 16788, 4754, 13, 50564], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 145, "seek": 44600, "start": 450.0, "end": 452.0, "text": " One quite key decision is that,", "tokens": [50564, 1485, 1596, 2141, 3537, 307, 300, 11, 50664], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 146, "seek": 44600, "start": 452.0, "end": 456.0, "text": " notice I haven't represented this as a JSON list.", "tokens": [50664, 3449, 286, 2378, 380, 10379, 341, 382, 257, 31828, 1329, 13, 50864], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 147, "seek": 44600, "start": 456.0, "end": 458.0, "text": " It's a JSON lines document.", "tokens": [50864, 467, 311, 257, 31828, 3876, 4166, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 148, "seek": 44600, "start": 458.0, "end": 462.0, "text": " So that's JSON objects separated by a new line.", "tokens": [50964, 407, 300, 311, 31828, 6565, 12005, 538, 257, 777, 1622, 13, 51164], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 149, "seek": 44600, "start": 462.0, "end": 463.0, "text": " And this is really cool,", "tokens": [51164, 400, 341, 307, 534, 1627, 11, 51214], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 150, "seek": 44600, "start": 463.0, "end": 466.0, "text": " because you can process it with shell pipeline tools.", "tokens": [51214, 570, 291, 393, 1399, 309, 365, 8720, 15517, 3873, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 151, "seek": 44600, "start": 466.0, "end": 467.0, "text": " You can process it with JSON tools,", "tokens": [51364, 509, 393, 1399, 309, 365, 31828, 3873, 11, 51414], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 152, "seek": 44600, "start": 467.0, "end": 473.0, "text": " but you can also process it with line-based processing tools.", "tokens": [51414, 457, 291, 393, 611, 1399, 309, 365, 1622, 12, 6032, 9007, 3873, 13, 51714], "temperature": 0.0, "avg_logprob": -0.06459596523871788, "compression_ratio": 1.740909090909091, "no_speech_prob": 0.0020914701744914055}, {"id": 153, "seek": 47300, "start": 473.0, "end": 475.0, "text": " Think if we had a JSON list,", "tokens": [50364, 6557, 498, 321, 632, 257, 31828, 1329, 11, 50464], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 154, "seek": 47300, "start": 475.0, "end": 477.0, "text": " and this playlist was 10,000 items long,", "tokens": [50464, 293, 341, 16788, 390, 1266, 11, 1360, 4754, 938, 11, 50564], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 155, "seek": 47300, "start": 477.0, "end": 478.0, "text": " then we stream it,", "tokens": [50564, 550, 321, 4309, 309, 11, 50614], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 156, "seek": 47300, "start": 478.0, "end": 480.0, "text": " and you have to wait for the closing parenthesis", "tokens": [50614, 293, 291, 362, 281, 1699, 337, 264, 10377, 23350, 9374, 50714], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 157, "seek": 47300, "start": 480.0, "end": 482.0, "text": " before the next process can read it.", "tokens": [50714, 949, 264, 958, 1399, 393, 1401, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 158, "seek": 47300, "start": 482.0, "end": 485.0, "text": " But this way, the processes can read a line at a time,", "tokens": [50814, 583, 341, 636, 11, 264, 7555, 393, 1401, 257, 1622, 412, 257, 565, 11, 50964], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 159, "seek": 47300, "start": 485.0, "end": 488.0, "text": " and you can have an infinite-length playlist", "tokens": [50964, 293, 291, 393, 362, 364, 13785, 12, 45390, 16788, 51114], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 160, "seek": 47300, "start": 488.0, "end": 491.0, "text": " and start processing the beginning of it", "tokens": [51114, 293, 722, 9007, 264, 2863, 295, 309, 51264], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 161, "seek": 47300, "start": 491.0, "end": 494.0, "text": " before it's even, before it's finished.", "tokens": [51264, 949, 309, 311, 754, 11, 949, 309, 311, 4335, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 162, "seek": 47300, "start": 494.0, "end": 498.0, "text": " Okay, so that's the data model.", "tokens": [51414, 1033, 11, 370, 300, 311, 264, 1412, 2316, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 163, "seek": 47300, "start": 498.0, "end": 500.0, "text": " Those key value pairs, creator and title,", "tokens": [51614, 3950, 2141, 2158, 15494, 11, 14181, 293, 4876, 11, 51714], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 164, "seek": 47300, "start": 500.0, "end": 501.0, "text": " those on arbitrary,", "tokens": [51714, 729, 322, 23211, 11, 51764], "temperature": 0.0, "avg_logprob": -0.08631883665572765, "compression_ratio": 1.6816479400749065, "no_speech_prob": 0.00048022388364188373}, {"id": 165, "seek": 50100, "start": 501.0, "end": 504.0, "text": " those come from an existing playlist format called SPF,", "tokens": [50364, 729, 808, 490, 364, 6741, 16788, 7877, 1219, 8420, 37, 11, 50514], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 166, "seek": 50100, "start": 504.0, "end": 509.0, "text": " which has been around since 2006 and is almost perfect.", "tokens": [50514, 597, 575, 668, 926, 1670, 14062, 293, 307, 1920, 2176, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 167, "seek": 50100, "start": 509.0, "end": 511.0, "text": " Like, they got the design almost perfect.", "tokens": [50764, 1743, 11, 436, 658, 264, 1715, 1920, 2176, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 168, "seek": 50100, "start": 511.0, "end": 512.0, "text": " One of the flaws was choosing XML,", "tokens": [50864, 1485, 295, 264, 27108, 390, 10875, 43484, 11, 50914], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 169, "seek": 50100, "start": 512.0, "end": 515.0, "text": " which was a good idea in 2006.", "tokens": [50914, 597, 390, 257, 665, 1558, 294, 14062, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 170, "seek": 50100, "start": 515.0, "end": 519.0, "text": " And the other tweak I made was representing it as JSON lines,", "tokens": [51064, 400, 264, 661, 29879, 286, 1027, 390, 13460, 309, 382, 31828, 3876, 11, 51264], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 171, "seek": 50100, "start": 519.0, "end": 525.0, "text": " but the data model is effectively the same as SPF.", "tokens": [51264, 457, 264, 1412, 2316, 307, 8659, 264, 912, 382, 8420, 37, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 172, "seek": 50100, "start": 525.0, "end": 528.0, "text": " So we can already do some fun stuff with this playlist, right?", "tokens": [51564, 407, 321, 393, 1217, 360, 512, 1019, 1507, 365, 341, 16788, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.11338951954474816, "compression_ratio": 1.5310077519379846, "no_speech_prob": 0.002160119591280818}, {"id": 173, "seek": 52800, "start": 528.0, "end": 532.0, "text": " Let me quickly show you what you can do.", "tokens": [50364, 961, 385, 2661, 855, 291, 437, 291, 393, 360, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 174, "seek": 52800, "start": 532.0, "end": 534.0, "text": " Here's a playlist.", "tokens": [50564, 1692, 311, 257, 16788, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 175, "seek": 52800, "start": 534.0, "end": 539.0, "text": " These songs aren't real, obviously.", "tokens": [50664, 1981, 5781, 3212, 380, 957, 11, 2745, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 176, "seek": 52800, "start": 539.0, "end": 541.0, "text": " We can shuffle it.", "tokens": [50914, 492, 393, 39426, 309, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 177, "seek": 52800, "start": 541.0, "end": 543.0, "text": " I have to give it a file name,", "tokens": [51014, 286, 362, 281, 976, 309, 257, 3991, 1315, 11, 51114], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 178, "seek": 52800, "start": 543.0, "end": 544.0, "text": " and the file name is standard in.", "tokens": [51114, 293, 264, 3991, 1315, 307, 3832, 294, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 179, "seek": 52800, "start": 544.0, "end": 547.0, "text": " Okay, so now it's shuffled.", "tokens": [51164, 1033, 11, 370, 586, 309, 311, 402, 33974, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 180, "seek": 52800, "start": 547.0, "end": 551.0, "text": " I can export it to a different playlist format.", "tokens": [51314, 286, 393, 10725, 309, 281, 257, 819, 16788, 7877, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 181, "seek": 52800, "start": 551.0, "end": 554.0, "text": " So now I've converted it into an actual SPF playlist,", "tokens": [51514, 407, 586, 286, 600, 16424, 309, 666, 364, 3539, 8420, 37, 16788, 11, 51664], "temperature": 0.0, "avg_logprob": -0.10484317897521343, "compression_ratio": 1.5, "no_speech_prob": 0.003688573371618986}, {"id": 182, "seek": 55400, "start": 554.0, "end": 558.0, "text": " so you can put it into rhythm box.", "tokens": [50364, 370, 291, 393, 829, 309, 666, 11801, 2424, 13, 50564], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 183, "seek": 55400, "start": 558.0, "end": 560.0, "text": " But we don't even need to use calliope tools, right?", "tokens": [50564, 583, 321, 500, 380, 754, 643, 281, 764, 818, 72, 1114, 3873, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 184, "seek": 55400, "start": 560.0, "end": 566.0, "text": " I could use head to get the first item.", "tokens": [50664, 286, 727, 764, 1378, 281, 483, 264, 700, 3174, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 185, "seek": 55400, "start": 566.0, "end": 570.0, "text": " I could shuffle it using sort.", "tokens": [50964, 286, 727, 39426, 309, 1228, 1333, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 186, "seek": 55400, "start": 570.0, "end": 573.0, "text": " Okay.", "tokens": [51164, 1033, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 187, "seek": 55400, "start": 573.0, "end": 575.0, "text": " And I can use data-oriented tools as well.", "tokens": [51314, 400, 286, 393, 764, 1412, 12, 27414, 3873, 382, 731, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 188, "seek": 55400, "start": 575.0, "end": 576.0, "text": " So this is actually new shell,", "tokens": [51414, 407, 341, 307, 767, 777, 8720, 11, 51464], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 189, "seek": 55400, "start": 576.0, "end": 578.0, "text": " which is a data-oriented shell.", "tokens": [51464, 597, 307, 257, 1412, 12, 27414, 8720, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14513304041719985, "compression_ratio": 1.4917127071823204, "no_speech_prob": 0.0035289369989186525}, {"id": 190, "seek": 57800, "start": 578.0, "end": 583.0, "text": " So I can also load it into new shell,", "tokens": [50364, 407, 286, 393, 611, 3677, 309, 666, 777, 8720, 11, 50614], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 191, "seek": 57800, "start": 583.0, "end": 585.0, "text": " and now I have JSON,", "tokens": [50614, 293, 586, 286, 362, 31828, 11, 50714], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 192, "seek": 57800, "start": 585.0, "end": 589.0, "text": " and now I can sort it by the artist's name or by the title.", "tokens": [50714, 293, 586, 286, 393, 1333, 309, 538, 264, 5748, 311, 1315, 420, 538, 264, 4876, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 193, "seek": 57800, "start": 589.0, "end": 591.0, "text": " So just by defining a data format,", "tokens": [50914, 407, 445, 538, 17827, 257, 1412, 7877, 11, 51014], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 194, "seek": 57800, "start": 591.0, "end": 593.0, "text": " you get all this stuff for free.", "tokens": [51014, 291, 483, 439, 341, 1507, 337, 1737, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 195, "seek": 57800, "start": 593.0, "end": 595.0, "text": " Like, I didn't even have to write any code yet,", "tokens": [51114, 1743, 11, 286, 994, 380, 754, 362, 281, 2464, 604, 3089, 1939, 11, 51214], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 196, "seek": 57800, "start": 595.0, "end": 599.0, "text": " and we can already shuffle a playlist.", "tokens": [51214, 293, 321, 393, 1217, 39426, 257, 16788, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 197, "seek": 57800, "start": 599.0, "end": 602.0, "text": " So what's next?", "tokens": [51414, 407, 437, 311, 958, 30, 51564], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 198, "seek": 57800, "start": 602.0, "end": 605.0, "text": " Well, these aren't even real songs, right?", "tokens": [51564, 1042, 11, 613, 3212, 380, 754, 957, 5781, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 199, "seek": 57800, "start": 605.0, "end": 606.0, "text": " You can't play them.", "tokens": [51714, 509, 393, 380, 862, 552, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08026670776637254, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.0020989379845559597}, {"id": 200, "seek": 60600, "start": 606.0, "end": 608.0, "text": " There's no content.", "tokens": [50364, 821, 311, 572, 2701, 13, 50464], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 201, "seek": 60600, "start": 608.0, "end": 610.0, "text": " So the next step is get some content", "tokens": [50464, 407, 264, 958, 1823, 307, 483, 512, 2701, 50564], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 202, "seek": 60600, "start": 610.0, "end": 614.0, "text": " so we can actually listen to the playlist.", "tokens": [50564, 370, 321, 393, 767, 2140, 281, 264, 16788, 13, 50764], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 203, "seek": 60600, "start": 614.0, "end": 616.0, "text": " The developers of the SPF format have thought of this,", "tokens": [50764, 440, 8849, 295, 264, 8420, 37, 7877, 362, 1194, 295, 341, 11, 50864], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 204, "seek": 60600, "start": 616.0, "end": 621.0, "text": " and they designed SPF with a portable design", "tokens": [50864, 293, 436, 4761, 8420, 37, 365, 257, 21800, 1715, 51114], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 205, "seek": 60600, "start": 621.0, "end": 623.0, "text": " where when you go to play the music,", "tokens": [51114, 689, 562, 291, 352, 281, 862, 264, 1318, 11, 51214], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 206, "seek": 60600, "start": 623.0, "end": 625.0, "text": " you resolve it at that moment.", "tokens": [51214, 291, 14151, 309, 412, 300, 1623, 13, 51314], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 207, "seek": 60600, "start": 625.0, "end": 629.0, "text": " So you search based on the metadata, like creator and title,", "tokens": [51314, 407, 291, 3164, 2361, 322, 264, 26603, 11, 411, 14181, 293, 4876, 11, 51514], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 208, "seek": 60600, "start": 629.0, "end": 633.0, "text": " and then you find a URL where you can actually play it.", "tokens": [51514, 293, 550, 291, 915, 257, 12905, 689, 291, 393, 767, 862, 309, 13, 51714], "temperature": 0.0, "avg_logprob": -0.0708751814705985, "compression_ratio": 1.6768558951965065, "no_speech_prob": 0.005261445418000221}, {"id": 209, "seek": 63300, "start": 633.0, "end": 636.0, "text": " So I implemented that,", "tokens": [50364, 407, 286, 12270, 300, 11, 50514], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 210, "seek": 63300, "start": 636.0, "end": 638.0, "text": " and I can demo that as well.", "tokens": [50514, 293, 286, 393, 10723, 300, 382, 731, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 211, "seek": 63300, "start": 638.0, "end": 640.0, "text": " Okay, so here's three.", "tokens": [50614, 1033, 11, 370, 510, 311, 1045, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 212, "seek": 63300, "start": 640.0, "end": 642.0, "text": " These are real songs now,", "tokens": [50714, 1981, 366, 957, 5781, 586, 11, 50814], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 213, "seek": 63300, "start": 642.0, "end": 650.0, "text": " and if I pipe it to the Spotify sub-command,", "tokens": [50814, 293, 498, 286, 11240, 309, 281, 264, 29036, 1422, 12, 13278, 474, 11, 51214], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 214, "seek": 63300, "start": 650.0, "end": 653.0, "text": " they get resolved to actual tracks on Spotify.", "tokens": [51214, 436, 483, 20772, 281, 3539, 10218, 322, 29036, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 215, "seek": 63300, "start": 653.0, "end": 655.0, "text": " So over here somewhere is a URL,", "tokens": [51364, 407, 670, 510, 4079, 307, 257, 12905, 11, 51464], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 216, "seek": 63300, "start": 655.0, "end": 659.0, "text": " and you can click it and listen to the track.", "tokens": [51464, 293, 291, 393, 2052, 309, 293, 2140, 281, 264, 2837, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 217, "seek": 63300, "start": 659.0, "end": 661.0, "text": " This is all done using the Spotify API,", "tokens": [51664, 639, 307, 439, 1096, 1228, 264, 29036, 9362, 11, 51764], "temperature": 0.0, "avg_logprob": -0.08992823958396912, "compression_ratio": 1.5170731707317073, "no_speech_prob": 0.0005773334414698184}, {"id": 218, "seek": 66100, "start": 661.0, "end": 663.0, "text": " so you need a Spotify API key to do that.", "tokens": [50364, 370, 291, 643, 257, 29036, 9362, 2141, 281, 360, 300, 13, 50464], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 219, "seek": 66100, "start": 663.0, "end": 666.0, "text": " You can get it for free, but it's a little bit of an effort.", "tokens": [50464, 509, 393, 483, 309, 337, 1737, 11, 457, 309, 311, 257, 707, 857, 295, 364, 4630, 13, 50614], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 220, "seek": 66100, "start": 666.0, "end": 670.0, "text": " And it works by searching based on creator, title,", "tokens": [50614, 400, 309, 1985, 538, 10808, 2361, 322, 14181, 11, 4876, 11, 50814], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 221, "seek": 66100, "start": 670.0, "end": 672.0, "text": " and ranking the results.", "tokens": [50814, 293, 17833, 264, 3542, 13, 50914], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 222, "seek": 66100, "start": 672.0, "end": 675.0, "text": " Or I can resolve it to tracks on my local machine.", "tokens": [50914, 1610, 286, 393, 14151, 309, 281, 10218, 322, 452, 2654, 3479, 13, 51064], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 223, "seek": 66100, "start": 675.0, "end": 677.0, "text": " So I'm a GNOME developer,", "tokens": [51064, 407, 286, 478, 257, 46411, 23344, 10754, 11, 51164], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 224, "seek": 66100, "start": 677.0, "end": 680.0, "text": " so I have the tracker search engine installed,", "tokens": [51164, 370, 286, 362, 264, 37516, 3164, 2848, 8899, 11, 51314], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 225, "seek": 66100, "start": 680.0, "end": 683.0, "text": " and tracker can match against my local music collection", "tokens": [51314, 293, 37516, 393, 2995, 1970, 452, 2654, 1318, 5765, 51464], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 226, "seek": 66100, "start": 683.0, "end": 686.0, "text": " and return the URL.", "tokens": [51464, 293, 2736, 264, 12905, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 227, "seek": 66100, "start": 686.0, "end": 689.0, "text": " Let me make that pretty.", "tokens": [51614, 961, 385, 652, 300, 1238, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0649344195490298, "compression_ratio": 1.55, "no_speech_prob": 0.002565310336649418}, {"id": 228, "seek": 68900, "start": 689.0, "end": 693.0, "text": " Okay, so it's resolved to URLs on my local machine.", "tokens": [50364, 1033, 11, 370, 309, 311, 20772, 281, 43267, 322, 452, 2654, 3479, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 229, "seek": 68900, "start": 693.0, "end": 696.0, "text": " This one, I seem to have deleted the Madonna album,", "tokens": [50564, 639, 472, 11, 286, 1643, 281, 362, 22981, 264, 49540, 6030, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 230, "seek": 68900, "start": 696.0, "end": 698.0, "text": " but the other two are here.", "tokens": [50714, 457, 264, 661, 732, 366, 510, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 231, "seek": 68900, "start": 698.0, "end": 701.0, "text": " And then you see here I exported it as an M3U playlist as well,", "tokens": [50814, 400, 550, 291, 536, 510, 286, 42055, 309, 382, 364, 376, 18, 52, 16788, 382, 731, 11, 50964], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 232, "seek": 68900, "start": 701.0, "end": 704.0, "text": " now that we have URLs.", "tokens": [50964, 586, 300, 321, 362, 43267, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 233, "seek": 68900, "start": 704.0, "end": 709.0, "text": " So this is the basics of how you can make playlists in Python, right?", "tokens": [51114, 407, 341, 307, 264, 14688, 295, 577, 291, 393, 652, 862, 36693, 294, 15329, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 234, "seek": 68900, "start": 709.0, "end": 712.0, "text": " What's next?", "tokens": [51364, 708, 311, 958, 30, 51514], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 235, "seek": 68900, "start": 712.0, "end": 714.0, "text": " So I promised music recommendations, right,", "tokens": [51514, 407, 286, 10768, 1318, 10434, 11, 558, 11, 51614], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 236, "seek": 68900, "start": 714.0, "end": 717.0, "text": " and we haven't actually done any recommendations yet.", "tokens": [51614, 293, 321, 2378, 380, 767, 1096, 604, 10434, 1939, 13, 51764], "temperature": 0.0, "avg_logprob": -0.09216987877561335, "compression_ratio": 1.55859375, "no_speech_prob": 0.0008322949288412929}, {"id": 237, "seek": 71700, "start": 717.0, "end": 722.0, "text": " So the next thing I'm going to talk about is a program I made", "tokens": [50364, 407, 264, 958, 551, 286, 478, 516, 281, 751, 466, 307, 257, 1461, 286, 1027, 50614], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 238, "seek": 71700, "start": 722.0, "end": 725.0, "text": " that generates me a playlist every day.", "tokens": [50614, 300, 23815, 385, 257, 16788, 633, 786, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 239, "seek": 71700, "start": 725.0, "end": 728.0, "text": " And that's as far as I've got with this,", "tokens": [50764, 400, 300, 311, 382, 1400, 382, 286, 600, 658, 365, 341, 11, 50914], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 240, "seek": 71700, "start": 728.0, "end": 731.0, "text": " because actually I quite like the playlists it generates,", "tokens": [50914, 570, 767, 286, 1596, 411, 264, 862, 36693, 309, 23815, 11, 51064], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 241, "seek": 71700, "start": 731.0, "end": 734.0, "text": " so I haven't needed to make any other recommenders yet.", "tokens": [51064, 370, 286, 2378, 380, 2978, 281, 652, 604, 661, 2748, 433, 1939, 13, 51214], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 242, "seek": 71700, "start": 734.0, "end": 736.0, "text": " I'm still happy with this one.", "tokens": [51214, 286, 478, 920, 2055, 365, 341, 472, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 243, "seek": 71700, "start": 736.0, "end": 738.0, "text": " Soon I shall look at some more.", "tokens": [51314, 17610, 286, 4393, 574, 412, 512, 544, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 244, "seek": 71700, "start": 738.0, "end": 740.0, "text": " But a recommendation algorithm is basically this.", "tokens": [51414, 583, 257, 11879, 9284, 307, 1936, 341, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 245, "seek": 71700, "start": 740.0, "end": 743.0, "text": " You have a very big playlist on the left,", "tokens": [51514, 509, 362, 257, 588, 955, 16788, 322, 264, 1411, 11, 51664], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 246, "seek": 71700, "start": 743.0, "end": 745.0, "text": " which is all the possible music you could listen to,", "tokens": [51664, 597, 307, 439, 264, 1944, 1318, 291, 727, 2140, 281, 11, 51764], "temperature": 0.0, "avg_logprob": -0.07315281459263392, "compression_ratio": 1.6630824372759856, "no_speech_prob": 0.0008929197792895138}, {"id": 247, "seek": 74500, "start": 745.0, "end": 748.0, "text": " and then some sort of algorithm happens,", "tokens": [50364, 293, 550, 512, 1333, 295, 9284, 2314, 11, 50514], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 248, "seek": 74500, "start": 748.0, "end": 750.0, "text": " and on the right you have a shorter playlist,", "tokens": [50514, 293, 322, 264, 558, 291, 362, 257, 11639, 16788, 11, 50614], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 249, "seek": 74500, "start": 750.0, "end": 755.0, "text": " which is hopefully better, and that's the one you listen to.", "tokens": [50614, 597, 307, 4696, 1101, 11, 293, 300, 311, 264, 472, 291, 2140, 281, 13, 50864], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 250, "seek": 74500, "start": 755.0, "end": 760.0, "text": " So the algorithm I came up with, I called it the Special Mix,", "tokens": [50864, 407, 264, 9284, 286, 1361, 493, 365, 11, 286, 1219, 309, 264, 11863, 12769, 11, 51114], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 251, "seek": 74500, "start": 760.0, "end": 765.0, "text": " and its goal is to create a one-hour playlist of music that I already know,", "tokens": [51114, 293, 1080, 3387, 307, 281, 1884, 257, 472, 12, 18048, 16788, 295, 1318, 300, 286, 1217, 458, 11, 51364], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 252, "seek": 74500, "start": 765.0, "end": 767.0, "text": " and there's three ingredients for that.", "tokens": [51364, 293, 456, 311, 1045, 6952, 337, 300, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 253, "seek": 74500, "start": 767.0, "end": 769.0, "text": " All of these are Python libraries.", "tokens": [51464, 1057, 295, 613, 366, 15329, 15148, 13, 51564], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 254, "seek": 74500, "start": 769.0, "end": 771.0, "text": " One is PyListenBrains,", "tokens": [51564, 1485, 307, 9953, 35819, 45606, 1292, 11, 51664], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 255, "seek": 74500, "start": 771.0, "end": 774.0, "text": " which is an interface to the ListenBrains database.", "tokens": [51664, 597, 307, 364, 9226, 281, 264, 7501, 45606, 1292, 8149, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0842863422329143, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.0004486237303353846}, {"id": 256, "seek": 77400, "start": 774.0, "end": 776.0, "text": " One is the Beats Music Organiser,", "tokens": [50364, 1485, 307, 264, 879, 1720, 7609, 12538, 6694, 11, 50464], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 257, "seek": 77400, "start": 776.0, "end": 779.0, "text": " which is a great tool for maintaining a local music collection.", "tokens": [50464, 597, 307, 257, 869, 2290, 337, 14916, 257, 2654, 1318, 5765, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 258, "seek": 77400, "start": 779.0, "end": 782.0, "text": " And one is the Python SimpleAI module,", "tokens": [50614, 400, 472, 307, 264, 15329, 21532, 48698, 10088, 11, 50764], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 259, "seek": 77400, "start": 782.0, "end": 785.0, "text": " which gives you really basic AI algorithms", "tokens": [50764, 597, 2709, 291, 534, 3875, 7318, 14642, 50914], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 260, "seek": 77400, "start": 785.0, "end": 788.0, "text": " that let you do constraint solving.", "tokens": [50914, 300, 718, 291, 360, 25534, 12606, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 261, "seek": 77400, "start": 788.0, "end": 790.0, "text": " So I'll go through those one at a time.", "tokens": [51064, 407, 286, 603, 352, 807, 729, 472, 412, 257, 565, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 262, "seek": 77400, "start": 790.0, "end": 792.0, "text": " I'll go have a little drink first.", "tokens": [51164, 286, 603, 352, 362, 257, 707, 2822, 700, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 263, "seek": 77400, "start": 796.0, "end": 800.0, "text": " So if you want to do music recommendations,", "tokens": [51464, 407, 498, 291, 528, 281, 360, 1318, 10434, 11, 51664], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 264, "seek": 77400, "start": 800.0, "end": 803.0, "text": " it's a good idea to save the history of what you listen to.", "tokens": [51664, 309, 311, 257, 665, 1558, 281, 3155, 264, 2503, 295, 437, 291, 2140, 281, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08089513248867458, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.00037167491973377764}, {"id": 265, "seek": 80300, "start": 803.0, "end": 805.0, "text": " Spotify already does that,", "tokens": [50364, 29036, 1217, 775, 300, 11, 50464], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 266, "seek": 80300, "start": 805.0, "end": 809.0, "text": " although they make it a little difficult for you to then get at the data.", "tokens": [50464, 4878, 436, 652, 309, 257, 707, 2252, 337, 291, 281, 550, 483, 412, 264, 1412, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 267, "seek": 80300, "start": 809.0, "end": 812.0, "text": " Lastfm does that, and ListenBrains,", "tokens": [50664, 5264, 69, 76, 775, 300, 11, 293, 7501, 45606, 1292, 11, 50814], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 268, "seek": 80300, "start": 812.0, "end": 815.0, "text": " which I recommend that solution because it's open.", "tokens": [50814, 597, 286, 2748, 300, 3827, 570, 309, 311, 1269, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 269, "seek": 80300, "start": 815.0, "end": 817.0, "text": " It's an open source platform.", "tokens": [50964, 467, 311, 364, 1269, 4009, 3663, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 270, "seek": 80300, "start": 817.0, "end": 819.0, "text": " It's open data.", "tokens": [51064, 467, 311, 1269, 1412, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 271, "seek": 80300, "start": 819.0, "end": 822.0, "text": " So you can get a browser extension,", "tokens": [51164, 407, 291, 393, 483, 257, 11185, 10320, 11, 51314], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 272, "seek": 80300, "start": 822.0, "end": 824.0, "text": " or phone apps and music players", "tokens": [51314, 420, 2593, 7733, 293, 1318, 4150, 51414], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 273, "seek": 80300, "start": 824.0, "end": 826.0, "text": " that will save everything you listen to", "tokens": [51414, 300, 486, 3155, 1203, 291, 2140, 281, 51514], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 274, "seek": 80300, "start": 826.0, "end": 828.0, "text": " into the ListenBrains database,", "tokens": [51514, 666, 264, 7501, 45606, 1292, 8149, 11, 51614], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 275, "seek": 80300, "start": 828.0, "end": 831.0, "text": " and then ListenBrains gives you charts and graphs", "tokens": [51614, 293, 550, 7501, 45606, 1292, 2709, 291, 17767, 293, 24877, 51764], "temperature": 0.0, "avg_logprob": -0.11075813194801068, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.0006657635094597936}, {"id": 276, "seek": 83100, "start": 831.0, "end": 833.0, "text": " to show what a great taste you have.", "tokens": [50364, 281, 855, 437, 257, 869, 3939, 291, 362, 13, 50464], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 277, "seek": 83100, "start": 833.0, "end": 837.0, "text": " And Python ListenBrains and the Kaliot ListenBrains command", "tokens": [50464, 400, 15329, 7501, 45606, 1292, 293, 264, 591, 5103, 310, 7501, 45606, 1292, 5622, 50664], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 278, "seek": 83100, "start": 837.0, "end": 839.0, "text": " let you access the data.", "tokens": [50664, 718, 291, 2105, 264, 1412, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 279, "seek": 83100, "start": 841.0, "end": 843.0, "text": " So...", "tokens": [50864, 407, 485, 50964], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 280, "seek": 83100, "start": 845.0, "end": 848.0, "text": " I would run the ListenBrains history command,", "tokens": [51064, 286, 576, 1190, 264, 7501, 45606, 1292, 2503, 5622, 11, 51214], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 281, "seek": 83100, "start": 848.0, "end": 850.0, "text": " put my username,", "tokens": [51214, 829, 452, 30351, 11, 51314], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 282, "seek": 83100, "start": 850.0, "end": 852.0, "text": " and fetch all the listens.", "tokens": [51314, 293, 23673, 439, 264, 35959, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 283, "seek": 83100, "start": 852.0, "end": 854.0, "text": " This does something kind of dumb.", "tokens": [51414, 639, 775, 746, 733, 295, 10316, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 284, "seek": 83100, "start": 854.0, "end": 857.0, "text": " It just syncs all of the listens into a local SQLI database.", "tokens": [51514, 467, 445, 5451, 14368, 439, 295, 264, 35959, 666, 257, 2654, 19200, 40, 8149, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 285, "seek": 83100, "start": 857.0, "end": 859.0, "text": " And then I've dumped the first one here", "tokens": [51664, 400, 550, 286, 600, 32131, 264, 700, 472, 510, 51764], "temperature": 0.0, "avg_logprob": -0.13786322336930495, "compression_ratio": 1.614678899082569, "no_speech_prob": 0.0005521129933185875}, {"id": 286, "seek": 85900, "start": 859.0, "end": 861.0, "text": " to show the kind of metadata you get.", "tokens": [50364, 281, 855, 264, 733, 295, 26603, 291, 483, 13, 50464], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 287, "seek": 85900, "start": 861.0, "end": 864.0, "text": " So you get a timestamp, you get an ID for the track,", "tokens": [50464, 407, 291, 483, 257, 49108, 1215, 11, 291, 483, 364, 7348, 337, 264, 2837, 11, 50614], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 288, "seek": 85900, "start": 864.0, "end": 867.0, "text": " and then you get the creator and the title and the album.", "tokens": [50614, 293, 550, 291, 483, 264, 14181, 293, 264, 4876, 293, 264, 6030, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 289, "seek": 85900, "start": 867.0, "end": 869.0, "text": " And in this case, the URL of where I listened to it,", "tokens": [50764, 400, 294, 341, 1389, 11, 264, 12905, 295, 689, 286, 13207, 281, 309, 11, 50864], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 290, "seek": 85900, "start": 869.0, "end": 871.0, "text": " because it came from the web scrubbler.", "tokens": [50864, 570, 309, 1361, 490, 264, 3670, 5918, 836, 65, 1918, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 291, "seek": 85900, "start": 871.0, "end": 873.0, "text": " So that's useful.", "tokens": [50964, 407, 300, 311, 4420, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 292, "seek": 85900, "start": 873.0, "end": 876.0, "text": " And then because it saved in a local SQL database,", "tokens": [51064, 400, 550, 570, 309, 6624, 294, 257, 2654, 19200, 8149, 11, 51214], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 293, "seek": 85900, "start": 876.0, "end": 879.0, "text": " we can do things like calculate a histogram", "tokens": [51214, 321, 393, 360, 721, 411, 8873, 257, 49816, 51364], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 294, "seek": 85900, "start": 879.0, "end": 882.0, "text": " of which years I actually listened to music.", "tokens": [51364, 295, 597, 924, 286, 767, 13207, 281, 1318, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 295, "seek": 85900, "start": 882.0, "end": 885.0, "text": " We can select tracks based on,", "tokens": [51514, 492, 393, 3048, 10218, 2361, 322, 11, 51664], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 296, "seek": 85900, "start": 885.0, "end": 888.0, "text": " okay, it was first listened to in 2019,", "tokens": [51664, 1392, 11, 309, 390, 700, 13207, 281, 294, 6071, 11, 51814], "temperature": 0.0, "avg_logprob": -0.10214051078347598, "compression_ratio": 1.7028985507246377, "no_speech_prob": 0.0015966572100296617}, {"id": 297, "seek": 88800, "start": 888.0, "end": 891.0, "text": " or it was first listened to in 2020.", "tokens": [50364, 420, 309, 390, 700, 13207, 281, 294, 4808, 13, 50514], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 298, "seek": 88800, "start": 891.0, "end": 893.0, "text": " So that's what I did.", "tokens": [50514, 407, 300, 311, 437, 286, 630, 13, 50614], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 299, "seek": 88800, "start": 893.0, "end": 895.0, "text": " And now I have a playlist, right?", "tokens": [50614, 400, 586, 286, 362, 257, 16788, 11, 558, 30, 50714], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 300, "seek": 88800, "start": 895.0, "end": 897.0, "text": " So the first thing the special mix does", "tokens": [50714, 407, 264, 700, 551, 264, 2121, 2890, 775, 50814], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 301, "seek": 88800, "start": 897.0, "end": 901.0, "text": " is it chooses one year out of this histogram,", "tokens": [50814, 307, 309, 25963, 472, 1064, 484, 295, 341, 49816, 11, 51014], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 302, "seek": 88800, "start": 901.0, "end": 904.0, "text": " so a year where I did actually listen to music,", "tokens": [51014, 370, 257, 1064, 689, 286, 630, 767, 2140, 281, 1318, 11, 51164], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 303, "seek": 88800, "start": 904.0, "end": 907.0, "text": " and then it selects all the tracks", "tokens": [51164, 293, 550, 309, 3048, 82, 439, 264, 10218, 51314], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 304, "seek": 88800, "start": 907.0, "end": 909.0, "text": " that I listened to", "tokens": [51314, 300, 286, 13207, 281, 51414], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 305, "seek": 88800, "start": 909.0, "end": 911.0, "text": " where the first listen is in that year.", "tokens": [51414, 689, 264, 700, 2140, 307, 294, 300, 1064, 13, 51514], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 306, "seek": 88800, "start": 911.0, "end": 913.0, "text": " So songs I discovered in 2019", "tokens": [51514, 407, 5781, 286, 6941, 294, 6071, 51614], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 307, "seek": 88800, "start": 913.0, "end": 916.0, "text": " or discovered in 2021, for example.", "tokens": [51614, 420, 6941, 294, 7201, 11, 337, 1365, 13, 51764], "temperature": 0.0, "avg_logprob": -0.06524478861715942, "compression_ratio": 1.670995670995671, "no_speech_prob": 0.0005440139211714268}, {"id": 308, "seek": 91600, "start": 916.0, "end": 919.0, "text": " And now we have a playlist, but it's very long.", "tokens": [50364, 400, 586, 321, 362, 257, 16788, 11, 457, 309, 311, 588, 938, 13, 50514], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 309, "seek": 91600, "start": 919.0, "end": 923.0, "text": " So the next step is...", "tokens": [50514, 407, 264, 958, 1823, 307, 485, 50714], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 310, "seek": 91600, "start": 923.0, "end": 926.0, "text": " The next step would be to select tracks from it.", "tokens": [50714, 440, 958, 1823, 576, 312, 281, 3048, 10218, 490, 309, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 311, "seek": 91600, "start": 926.0, "end": 929.0, "text": " However, we want to know a bit more about the songs first.", "tokens": [50864, 2908, 11, 321, 528, 281, 458, 257, 857, 544, 466, 264, 5781, 700, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 312, "seek": 91600, "start": 929.0, "end": 931.0, "text": " So actually the next step here", "tokens": [51014, 407, 767, 264, 958, 1823, 510, 51114], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 313, "seek": 91600, "start": 931.0, "end": 935.0, "text": " is to resolve the tracks to local content.", "tokens": [51114, 307, 281, 14151, 264, 10218, 281, 2654, 2701, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 314, "seek": 91600, "start": 935.0, "end": 937.0, "text": " This is where I keep my music collection.", "tokens": [51314, 639, 307, 689, 286, 1066, 452, 1318, 5765, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 315, "seek": 91600, "start": 937.0, "end": 939.0, "text": " It's a hi-tech home server.", "tokens": [51414, 467, 311, 257, 4879, 12, 25970, 1280, 7154, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 316, "seek": 91600, "start": 939.0, "end": 942.0, "text": " And I manage it with a Python program called Beats.", "tokens": [51514, 400, 286, 3067, 309, 365, 257, 15329, 1461, 1219, 879, 1720, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 317, "seek": 91600, "start": 942.0, "end": 945.0, "text": " This is a command line tool that lets you", "tokens": [51664, 639, 307, 257, 5622, 1622, 2290, 300, 6653, 291, 51814], "temperature": 0.0, "avg_logprob": -0.08590104579925537, "compression_ratio": 1.606177606177606, "no_speech_prob": 0.0007028079126030207}, {"id": 318, "seek": 94500, "start": 946.0, "end": 948.0, "text": " take music that you've got from Bandcamp or wherever", "tokens": [50414, 747, 1318, 300, 291, 600, 658, 490, 15462, 24640, 420, 8660, 50514], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 319, "seek": 94500, "start": 948.0, "end": 950.0, "text": " and import it into a database", "tokens": [50514, 293, 974, 309, 666, 257, 8149, 50614], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 320, "seek": 94500, "start": 950.0, "end": 952.0, "text": " and it fixes the tags using MusicBrains.", "tokens": [50614, 293, 309, 32539, 264, 18632, 1228, 7609, 45606, 1292, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 321, "seek": 94500, "start": 952.0, "end": 954.0, "text": " So it's always correct.", "tokens": [50714, 407, 309, 311, 1009, 3006, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 322, "seek": 94500, "start": 954.0, "end": 956.0, "text": " It has nice apostrophe characters.", "tokens": [50814, 467, 575, 1481, 19484, 27194, 4342, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 323, "seek": 94500, "start": 956.0, "end": 960.0, "text": " You can use any content resolver in theory.", "tokens": [50914, 509, 393, 764, 604, 2701, 34480, 294, 5261, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 324, "seek": 94500, "start": 960.0, "end": 962.0, "text": " You can generate playlists against Spotify", "tokens": [51114, 509, 393, 8460, 862, 36693, 1970, 29036, 51214], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 325, "seek": 94500, "start": 962.0, "end": 964.0, "text": " and upload them to Spotify,", "tokens": [51214, 293, 6580, 552, 281, 29036, 11, 51314], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 326, "seek": 94500, "start": 964.0, "end": 966.0, "text": " but that's not my goal here.", "tokens": [51314, 457, 300, 311, 406, 452, 3387, 510, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 327, "seek": 94500, "start": 966.0, "end": 970.0, "text": " So using Beats, I can resolve the tracks in the playlist", "tokens": [51414, 407, 1228, 879, 1720, 11, 286, 393, 14151, 264, 10218, 294, 264, 16788, 51614], "temperature": 0.0, "avg_logprob": -0.09779672168550037, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.0007520081126131117}, {"id": 328, "seek": 97000, "start": 970.0, "end": 974.0, "text": " to actual mp3 files on my music server.", "tokens": [50364, 281, 3539, 275, 79, 18, 7098, 322, 452, 1318, 7154, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 329, "seek": 97000, "start": 974.0, "end": 976.0, "text": " That's actually a lie.", "tokens": [50564, 663, 311, 767, 257, 4544, 13, 50664], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 330, "seek": 97000, "start": 976.0, "end": 978.0, "text": " I haven't implemented that yet and I use Tracker.", "tokens": [50664, 286, 2378, 380, 12270, 300, 1939, 293, 286, 764, 1765, 23599, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 331, "seek": 97000, "start": 978.0, "end": 980.0, "text": " But because Beats is written in Python,", "tokens": [50764, 583, 570, 879, 1720, 307, 3720, 294, 15329, 11, 50864], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 332, "seek": 97000, "start": 980.0, "end": 982.0, "text": " we'll pretend that I use Beats.", "tokens": [50864, 321, 603, 11865, 300, 286, 764, 879, 1720, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 333, "seek": 97000, "start": 982.0, "end": 985.0, "text": " Either way, now I have a playlist", "tokens": [50964, 13746, 636, 11, 586, 286, 362, 257, 16788, 51114], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 334, "seek": 97000, "start": 985.0, "end": 988.0, "text": " where the track location is set to a file", "tokens": [51114, 689, 264, 2837, 4914, 307, 992, 281, 257, 3991, 51264], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 335, "seek": 97000, "start": 988.0, "end": 991.0, "text": " and we also know the duration of every song.", "tokens": [51264, 293, 321, 611, 458, 264, 16365, 295, 633, 2153, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 336, "seek": 97000, "start": 991.0, "end": 994.0, "text": " So we have a bit of more metadata.", "tokens": [51414, 407, 321, 362, 257, 857, 295, 544, 26603, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 337, "seek": 97000, "start": 994.0, "end": 998.0, "text": " And now we can select", "tokens": [51564, 400, 586, 321, 393, 3048, 51764], "temperature": 0.0, "avg_logprob": -0.08709648305719549, "compression_ratio": 1.5603448275862069, "no_speech_prob": 0.005162805784493685}, {"id": 338, "seek": 99800, "start": 998.0, "end": 1001.0, "text": " which tracks go in the playlist.", "tokens": [50364, 597, 10218, 352, 294, 264, 16788, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 339, "seek": 99800, "start": 1001.0, "end": 1003.0, "text": " Okay, so here's the fun part.", "tokens": [50514, 1033, 11, 370, 510, 311, 264, 1019, 644, 13, 50614], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 340, "seek": 99800, "start": 1003.0, "end": 1005.0, "text": " All the parts are fun,", "tokens": [50614, 1057, 264, 3166, 366, 1019, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 341, "seek": 99800, "start": 1005.0, "end": 1007.0, "text": " but maybe this is the most fun part.", "tokens": [50714, 457, 1310, 341, 307, 264, 881, 1019, 644, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 342, "seek": 99800, "start": 1009.0, "end": 1014.0, "text": " The approach I took was to try and do constraint solving.", "tokens": [50914, 440, 3109, 286, 1890, 390, 281, 853, 293, 360, 25534, 12606, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 343, "seek": 99800, "start": 1014.0, "end": 1017.0, "text": " Now, this is a pretty old area of AI, right?", "tokens": [51164, 823, 11, 341, 307, 257, 1238, 1331, 1859, 295, 7318, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 344, "seek": 99800, "start": 1017.0, "end": 1019.0, "text": " People have been looking at constraint solving", "tokens": [51314, 3432, 362, 668, 1237, 412, 25534, 12606, 51414], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 345, "seek": 99800, "start": 1019.0, "end": 1021.0, "text": " for years and years, so the fashion at the moment", "tokens": [51414, 337, 924, 293, 924, 11, 370, 264, 6700, 412, 264, 1623, 51514], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 346, "seek": 99800, "start": 1021.0, "end": 1023.0, "text": " is to solve everything with machine learning", "tokens": [51514, 307, 281, 5039, 1203, 365, 3479, 2539, 51614], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 347, "seek": 99800, "start": 1023.0, "end": 1025.0, "text": " and lots and lots of GPUs.", "tokens": [51614, 293, 3195, 293, 3195, 295, 18407, 82, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 348, "seek": 99800, "start": 1025.0, "end": 1027.0, "text": " And that works. It produces nice results,", "tokens": [51714, 400, 300, 1985, 13, 467, 14725, 1481, 3542, 11, 51814], "temperature": 0.0, "avg_logprob": -0.09966735370823594, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.0019715537782758474}, {"id": 349, "seek": 102700, "start": 1027.0, "end": 1029.0, "text": " but it's hard to reproduce in an hour", "tokens": [50364, 457, 309, 311, 1152, 281, 29501, 294, 364, 1773, 50464], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 350, "seek": 102700, "start": 1029.0, "end": 1032.0, "text": " on the weekend on your old laptop,", "tokens": [50464, 322, 264, 6711, 322, 428, 1331, 10732, 11, 50614], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 351, "seek": 102700, "start": 1032.0, "end": 1035.0, "text": " whereas the constraint solving approach is pretty simple.", "tokens": [50614, 9735, 264, 25534, 12606, 3109, 307, 1238, 2199, 13, 50764], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 352, "seek": 102700, "start": 1035.0, "end": 1039.0, "text": " You can run it on, you know, a Raspberry Pi with no issues.", "tokens": [50764, 509, 393, 1190, 309, 322, 11, 291, 458, 11, 257, 41154, 17741, 365, 572, 2663, 13, 50964], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 353, "seek": 102700, "start": 1041.0, "end": 1044.0, "text": " This was inspired by a paper that I found,", "tokens": [51064, 639, 390, 7547, 538, 257, 3035, 300, 286, 1352, 11, 51214], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 354, "seek": 102700, "start": 1044.0, "end": 1046.0, "text": " which, again, is from 2008.", "tokens": [51214, 597, 11, 797, 11, 307, 490, 10389, 13, 51314], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 355, "seek": 102700, "start": 1046.0, "end": 1048.0, "text": " It's nothing too futuristic.", "tokens": [51314, 467, 311, 1825, 886, 44932, 13, 51414], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 356, "seek": 102700, "start": 1048.0, "end": 1052.0, "text": " And in this paper, they define a constraint model.", "tokens": [51414, 400, 294, 341, 3035, 11, 436, 6964, 257, 25534, 2316, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 357, "seek": 102700, "start": 1052.0, "end": 1055.0, "text": " So this looks kind of academic if you're not a mathematician.", "tokens": [51614, 407, 341, 1542, 733, 295, 7778, 498, 291, 434, 406, 257, 48281, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0830768498507413, "compression_ratio": 1.5093632958801497, "no_speech_prob": 0.0003927147772628814}, {"id": 358, "seek": 105500, "start": 1055.0, "end": 1060.0, "text": " But these are ways of making constraints on a playlist,", "tokens": [50364, 583, 613, 366, 2098, 295, 1455, 18491, 322, 257, 16788, 11, 50614], "temperature": 0.0, "avg_logprob": -0.09852584011583443, "compression_ratio": 1.6648936170212767, "no_speech_prob": 0.0028890969697386026}, {"id": 359, "seek": 105500, "start": 1060.0, "end": 1062.0, "text": " such as I want the playlist for whatever reason", "tokens": [50614, 1270, 382, 286, 528, 264, 16788, 337, 2035, 1778, 50714], "temperature": 0.0, "avg_logprob": -0.09852584011583443, "compression_ratio": 1.6648936170212767, "no_speech_prob": 0.0028890969697386026}, {"id": 360, "seek": 105500, "start": 1062.0, "end": 1065.0, "text": " to be 20% or more Stevie Wonder songs.", "tokens": [50714, 281, 312, 945, 4, 420, 544, 47499, 13224, 5781, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09852584011583443, "compression_ratio": 1.6648936170212767, "no_speech_prob": 0.0028890969697386026}, {"id": 361, "seek": 105500, "start": 1065.0, "end": 1070.0, "text": " And they can express that as a function.", "tokens": [50864, 400, 436, 393, 5109, 300, 382, 257, 2445, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09852584011583443, "compression_ratio": 1.6648936170212767, "no_speech_prob": 0.0028890969697386026}, {"id": 362, "seek": 105500, "start": 1070.0, "end": 1074.0, "text": " And the key is that you can apply this function to a playlist.", "tokens": [51114, 400, 264, 2141, 307, 300, 291, 393, 3079, 341, 2445, 281, 257, 16788, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09852584011583443, "compression_ratio": 1.6648936170212767, "no_speech_prob": 0.0028890969697386026}, {"id": 363, "seek": 105500, "start": 1074.0, "end": 1080.0, "text": " So let's say I have a playlist and it has 100 Stevie Wonder songs.", "tokens": [51314, 407, 718, 311, 584, 286, 362, 257, 16788, 293, 309, 575, 2319, 47499, 13224, 5781, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09852584011583443, "compression_ratio": 1.6648936170212767, "no_speech_prob": 0.0028890969697386026}, {"id": 364, "seek": 108000, "start": 1081.0, "end": 1085.0, "text": " This constraint function would return a score of one", "tokens": [50414, 639, 25534, 2445, 576, 2736, 257, 6175, 295, 472, 50614], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 365, "seek": 108000, "start": 1085.0, "end": 1088.0, "text": " for that playlist because every song is Stevie Wonder,", "tokens": [50614, 337, 300, 16788, 570, 633, 2153, 307, 47499, 13224, 11, 50764], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 366, "seek": 108000, "start": 1088.0, "end": 1090.0, "text": " so the constraint is completely satisfied.", "tokens": [50764, 370, 264, 25534, 307, 2584, 11239, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 367, "seek": 108000, "start": 1090.0, "end": 1092.0, "text": " Now let's say I have another playlist,", "tokens": [50864, 823, 718, 311, 584, 286, 362, 1071, 16788, 11, 50964], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 368, "seek": 108000, "start": 1092.0, "end": 1094.0, "text": " which is entirely Death Metal.", "tokens": [50964, 597, 307, 7696, 13703, 23488, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 369, "seek": 108000, "start": 1094.0, "end": 1097.0, "text": " This constraint function would return zero", "tokens": [51064, 639, 25534, 2445, 576, 2736, 4018, 51214], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 370, "seek": 108000, "start": 1097.0, "end": 1100.0, "text": " because none of the tracks are by Stevie Wonder.", "tokens": [51214, 570, 6022, 295, 264, 10218, 366, 538, 47499, 13224, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 371, "seek": 108000, "start": 1100.0, "end": 1103.0, "text": " And if we had a playlist that was 10% Stevie Wonder songs,", "tokens": [51364, 400, 498, 321, 632, 257, 16788, 300, 390, 1266, 4, 47499, 13224, 5781, 11, 51514], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 372, "seek": 108000, "start": 1103.0, "end": 1107.0, "text": " then we would assume this function would return 0.5", "tokens": [51514, 550, 321, 576, 6552, 341, 2445, 576, 2736, 1958, 13, 20, 51714], "temperature": 0.0, "avg_logprob": -0.09276623819388595, "compression_ratio": 1.8076923076923077, "no_speech_prob": 0.0006387108005583286}, {"id": 373, "seek": 110700, "start": 1107.0, "end": 1111.0, "text": " because the playlist kind of half satisfies the constraint.", "tokens": [50364, 570, 264, 16788, 733, 295, 1922, 44271, 264, 25534, 13, 50564], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 374, "seek": 110700, "start": 1111.0, "end": 1114.0, "text": " So the first step in constraint solving like this", "tokens": [50564, 407, 264, 700, 1823, 294, 25534, 12606, 411, 341, 50714], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 375, "seek": 110700, "start": 1114.0, "end": 1119.0, "text": " is to define a constraint function that can score any playlist.", "tokens": [50714, 307, 281, 6964, 257, 25534, 2445, 300, 393, 6175, 604, 16788, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 376, "seek": 110700, "start": 1119.0, "end": 1122.0, "text": " And then we use a local search algorithm", "tokens": [50964, 400, 550, 321, 764, 257, 2654, 3164, 9284, 51114], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 377, "seek": 110700, "start": 1122.0, "end": 1126.0, "text": " to find a playlist that best matches the constraints.", "tokens": [51114, 281, 915, 257, 16788, 300, 1151, 10676, 264, 18491, 13, 51314], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 378, "seek": 110700, "start": 1126.0, "end": 1129.0, "text": " So local search is a kind of try it,", "tokens": [51314, 407, 2654, 3164, 307, 257, 733, 295, 853, 309, 11, 51464], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 379, "seek": 110700, "start": 1129.0, "end": 1132.0, "text": " try, try, try, try again until you get bored", "tokens": [51464, 853, 11, 853, 11, 853, 11, 853, 797, 1826, 291, 483, 13521, 51614], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 380, "seek": 110700, "start": 1132.0, "end": 1135.0, "text": " and then pick the best solution that you found.", "tokens": [51614, 293, 550, 1888, 264, 1151, 3827, 300, 291, 1352, 13, 51764], "temperature": 0.0, "avg_logprob": -0.06140684840655086, "compression_ratio": 1.8598130841121496, "no_speech_prob": 0.002279970794916153}, {"id": 381, "seek": 113500, "start": 1135.0, "end": 1138.0, "text": " You set a fixed number of iterations like 10,000", "tokens": [50364, 509, 992, 257, 6806, 1230, 295, 36540, 411, 1266, 11, 1360, 50514], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 382, "seek": 113500, "start": 1138.0, "end": 1140.0, "text": " and you kind of go, OK, well, this works,", "tokens": [50514, 293, 291, 733, 295, 352, 11, 2264, 11, 731, 11, 341, 1985, 11, 50614], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 383, "seek": 113500, "start": 1140.0, "end": 1142.0, "text": " this one's a bit better, this one's worse,", "tokens": [50614, 341, 472, 311, 257, 857, 1101, 11, 341, 472, 311, 5324, 11, 50714], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 384, "seek": 113500, "start": 1142.0, "end": 1145.0, "text": " and choose the best one that you found.", "tokens": [50714, 293, 2826, 264, 1151, 472, 300, 291, 1352, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 385, "seek": 113500, "start": 1145.0, "end": 1149.0, "text": " So I'm going to do a quick worked example of this", "tokens": [50864, 407, 286, 478, 516, 281, 360, 257, 1702, 2732, 1365, 295, 341, 51064], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 386, "seek": 113500, "start": 1149.0, "end": 1151.0, "text": " with two constraints.", "tokens": [51064, 365, 732, 18491, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 387, "seek": 113500, "start": 1151.0, "end": 1153.0, "text": " And the constraints I'm going to put are", "tokens": [51164, 400, 264, 18491, 286, 478, 516, 281, 829, 366, 51264], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 388, "seek": 113500, "start": 1153.0, "end": 1155.0, "text": " the songs must be,", "tokens": [51264, 264, 5781, 1633, 312, 11, 51364], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 389, "seek": 113500, "start": 1155.0, "end": 1158.0, "text": " each song must be two to four minutes long", "tokens": [51364, 1184, 2153, 1633, 312, 732, 281, 1451, 2077, 938, 51514], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 390, "seek": 113500, "start": 1158.0, "end": 1161.0, "text": " and the playlist as a whole must be 10 minutes.", "tokens": [51514, 293, 264, 16788, 382, 257, 1379, 1633, 312, 1266, 2077, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10747359349177434, "compression_ratio": 1.6779661016949152, "no_speech_prob": 0.0004975762567482889}, {"id": 391, "seek": 116100, "start": 1161.0, "end": 1169.0, "text": " And here's a demo of solving that constraint problem.", "tokens": [50364, 400, 510, 311, 257, 10723, 295, 12606, 300, 25534, 1154, 13, 50764], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 392, "seek": 116100, "start": 1169.0, "end": 1171.0, "text": " As promised, it fits on a sheet of A4 paper.", "tokens": [50764, 1018, 10768, 11, 309, 9001, 322, 257, 8193, 295, 316, 19, 3035, 13, 50864], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 393, "seek": 116100, "start": 1171.0, "end": 1173.0, "text": " This is the whole program.", "tokens": [50864, 639, 307, 264, 1379, 1461, 13, 50964], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 394, "seek": 116100, "start": 1173.0, "end": 1176.0, "text": " So here I've defined two constraints.", "tokens": [50964, 407, 510, 286, 600, 7642, 732, 18491, 13, 51114], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 395, "seek": 116100, "start": 1176.0, "end": 1179.0, "text": " One of them is an item duration constraint", "tokens": [51114, 1485, 295, 552, 307, 364, 3174, 16365, 25534, 51264], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 396, "seek": 116100, "start": 1179.0, "end": 1181.0, "text": " saying that the duration of each item", "tokens": [51264, 1566, 300, 264, 16365, 295, 1184, 3174, 51364], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 397, "seek": 116100, "start": 1181.0, "end": 1184.0, "text": " should be between two and four minutes.", "tokens": [51364, 820, 312, 1296, 732, 293, 1451, 2077, 13, 51514], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 398, "seek": 116100, "start": 1184.0, "end": 1186.0, "text": " And here's a playlist duration constraint", "tokens": [51514, 400, 510, 311, 257, 16788, 16365, 25534, 51614], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 399, "seek": 116100, "start": 1186.0, "end": 1188.0, "text": " saying that the overall duration should be", "tokens": [51614, 1566, 300, 264, 4787, 16365, 820, 312, 51714], "temperature": 0.0, "avg_logprob": -0.04942133050215872, "compression_ratio": 1.7912621359223302, "no_speech_prob": 0.0007331783417612314}, {"id": 400, "seek": 118800, "start": 1188.0, "end": 1190.0, "text": " between 10 and 10 minutes.", "tokens": [50364, 1296, 1266, 293, 1266, 2077, 13, 50464], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 401, "seek": 118800, "start": 1190.0, "end": 1192.0, "text": " I know exactly what I want.", "tokens": [50464, 286, 458, 2293, 437, 286, 528, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 402, "seek": 118800, "start": 1192.0, "end": 1195.0, "text": " And then here is the input,", "tokens": [50564, 400, 550, 510, 307, 264, 4846, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 403, "seek": 118800, "start": 1195.0, "end": 1198.0, "text": " which is a playlist made up of four fake songs.", "tokens": [50714, 597, 307, 257, 16788, 1027, 493, 295, 1451, 7592, 5781, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 404, "seek": 118800, "start": 1198.0, "end": 1203.0, "text": " I haven't used real songs here because it's too complicated.", "tokens": [50864, 286, 2378, 380, 1143, 957, 5781, 510, 570, 309, 311, 886, 6179, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 405, "seek": 118800, "start": 1203.0, "end": 1205.0, "text": " Notice they have vastly different lengths,", "tokens": [51114, 13428, 436, 362, 41426, 819, 26329, 11, 51214], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 406, "seek": 118800, "start": 1205.0, "end": 1207.0, "text": " so it's quite hard to solve this problem.", "tokens": [51214, 370, 309, 311, 1596, 1152, 281, 5039, 341, 1154, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 407, "seek": 118800, "start": 1207.0, "end": 1210.0, "text": " There's not an obvious solution.", "tokens": [51314, 821, 311, 406, 364, 6322, 3827, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 408, "seek": 118800, "start": 1210.0, "end": 1213.0, "text": " And we're going to use the Kaliope Select module,", "tokens": [51464, 400, 321, 434, 516, 281, 764, 264, 591, 5103, 1114, 13638, 10088, 11, 51614], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 409, "seek": 118800, "start": 1213.0, "end": 1216.0, "text": " which internally uses simple AI.", "tokens": [51614, 597, 19501, 4960, 2199, 7318, 13, 51764], "temperature": 0.0, "avg_logprob": -0.09566962390864661, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.003426608629524708}, {"id": 410, "seek": 121600, "start": 1216.0, "end": 1221.0, "text": " So the only thing that's required in this playlist,", "tokens": [50364, 407, 264, 787, 551, 300, 311, 4739, 294, 341, 16788, 11, 50614], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 411, "seek": 121600, "start": 1221.0, "end": 1223.0, "text": " the only required piece of metadata is an ID.", "tokens": [50614, 264, 787, 4739, 2522, 295, 26603, 307, 364, 7348, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 412, "seek": 121600, "start": 1223.0, "end": 1226.0, "text": " In this case, I've put emojis because they're pretty,", "tokens": [50714, 682, 341, 1389, 11, 286, 600, 829, 19611, 40371, 570, 436, 434, 1238, 11, 50864], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 413, "seek": 121600, "start": 1226.0, "end": 1228.0, "text": " but normally you'd have an integer or something.", "tokens": [50864, 457, 5646, 291, 1116, 362, 364, 24922, 420, 746, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 414, "seek": 121600, "start": 1228.0, "end": 1231.0, "text": " And these constraints will look at the duration field.", "tokens": [50964, 400, 613, 18491, 486, 574, 412, 264, 16365, 2519, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 415, "seek": 121600, "start": 1231.0, "end": 1233.0, "text": " So the duration field is also required", "tokens": [51114, 407, 264, 16365, 2519, 307, 611, 4739, 51214], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 416, "seek": 121600, "start": 1233.0, "end": 1236.0, "text": " because otherwise we can't calculate the score, right?", "tokens": [51214, 570, 5911, 321, 393, 380, 8873, 264, 6175, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 417, "seek": 121600, "start": 1236.0, "end": 1239.0, "text": " Because we need to know the duration of each item.", "tokens": [51364, 1436, 321, 643, 281, 458, 264, 16365, 295, 1184, 3174, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 418, "seek": 121600, "start": 1239.0, "end": 1242.0, "text": " So if I've got time, how are we doing for time?", "tokens": [51514, 407, 498, 286, 600, 658, 565, 11, 577, 366, 321, 884, 337, 565, 30, 51664], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 419, "seek": 121600, "start": 1242.0, "end": 1245.0, "text": " Okay, I think I have time to show you", "tokens": [51664, 1033, 11, 286, 519, 286, 362, 565, 281, 855, 291, 51814], "temperature": 0.0, "avg_logprob": -0.07541671166053185, "compression_ratio": 1.7112676056338028, "no_speech_prob": 0.0007180279353633523}, {"id": 420, "seek": 124500, "start": 1245.0, "end": 1249.0, "text": " a live demo of solving this constraint problem.", "tokens": [50364, 257, 1621, 10723, 295, 12606, 341, 25534, 1154, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 421, "seek": 124500, "start": 1249.0, "end": 1252.0, "text": " And the good news is,", "tokens": [50564, 400, 264, 665, 2583, 307, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 422, "seek": 124500, "start": 1252.0, "end": 1254.0, "text": " Simple AI, the Simple AI module,", "tokens": [50714, 21532, 7318, 11, 264, 21532, 7318, 10088, 11, 50814], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 423, "seek": 124500, "start": 1254.0, "end": 1258.0, "text": " has a web viewer that can give us a kind of graphical view", "tokens": [50814, 575, 257, 3670, 16767, 300, 393, 976, 505, 257, 733, 295, 35942, 1910, 51014], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 424, "seek": 124500, "start": 1258.0, "end": 1260.0, "text": " of what's going on here.", "tokens": [51014, 295, 437, 311, 516, 322, 510, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 425, "seek": 124500, "start": 1260.0, "end": 1264.0, "text": " So with luck, yeah, with luck this will load,", "tokens": [51114, 407, 365, 3668, 11, 1338, 11, 365, 3668, 341, 486, 3677, 11, 51314], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 426, "seek": 124500, "start": 1264.0, "end": 1267.0, "text": " and it's going to step through", "tokens": [51314, 293, 309, 311, 516, 281, 1823, 807, 51464], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 427, "seek": 124500, "start": 1267.0, "end": 1269.0, "text": " each step of the local search algorithm", "tokens": [51464, 1184, 1823, 295, 264, 2654, 3164, 9284, 51564], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 428, "seek": 124500, "start": 1269.0, "end": 1271.0, "text": " to find the best playlist.", "tokens": [51564, 281, 915, 264, 1151, 16788, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09740097648219058, "compression_ratio": 1.5865384615384615, "no_speech_prob": 0.0007557248463854194}, {"id": 429, "seek": 127100, "start": 1271.0, "end": 1276.0, "text": " So in the beginning we have an empty playlist", "tokens": [50364, 407, 294, 264, 2863, 321, 362, 364, 6707, 16788, 50614], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 430, "seek": 127100, "start": 1276.0, "end": 1278.0, "text": " and the score is zero because it doesn't satisfy", "tokens": [50614, 293, 264, 6175, 307, 4018, 570, 309, 1177, 380, 19319, 50714], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 431, "seek": 127100, "start": 1278.0, "end": 1281.0, "text": " either of the constraints.", "tokens": [50714, 2139, 295, 264, 18491, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 432, "seek": 127100, "start": 1281.0, "end": 1284.0, "text": " We take a step.", "tokens": [50864, 492, 747, 257, 1823, 13, 51014], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 433, "seek": 127100, "start": 1284.0, "end": 1287.0, "text": " Each step it can choose to do different actions", "tokens": [51014, 6947, 1823, 309, 393, 2826, 281, 360, 819, 5909, 51164], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 434, "seek": 127100, "start": 1287.0, "end": 1289.0, "text": " that will change the playlist.", "tokens": [51164, 300, 486, 1319, 264, 16788, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 435, "seek": 127100, "start": 1289.0, "end": 1293.0, "text": " So here it's chosen actions of adding a song", "tokens": [51264, 407, 510, 309, 311, 8614, 5909, 295, 5127, 257, 2153, 51464], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 436, "seek": 127100, "start": 1293.0, "end": 1295.0, "text": " because that's all it can do.", "tokens": [51464, 570, 300, 311, 439, 309, 393, 360, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 437, "seek": 127100, "start": 1295.0, "end": 1297.0, "text": " So we can add this song which was quite long", "tokens": [51564, 407, 321, 393, 909, 341, 2153, 597, 390, 1596, 938, 51664], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 438, "seek": 127100, "start": 1297.0, "end": 1300.0, "text": " and the score is now 0.4 because one of the songs is too long.", "tokens": [51664, 293, 264, 6175, 307, 586, 1958, 13, 19, 570, 472, 295, 264, 5781, 307, 886, 938, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09407261685208157, "compression_ratio": 1.7124463519313304, "no_speech_prob": 0.001127696828916669}, {"id": 439, "seek": 130000, "start": 1300.0, "end": 1303.0, "text": " Or if we have the really short song, the score is lower.", "tokens": [50364, 1610, 498, 321, 362, 264, 534, 2099, 2153, 11, 264, 6175, 307, 3126, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 440, "seek": 130000, "start": 1303.0, "end": 1308.0, "text": " Or if we add this seven-minute ambient tune,", "tokens": [50514, 1610, 498, 321, 909, 341, 3407, 12, 18256, 22997, 10864, 11, 50764], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 441, "seek": 130000, "start": 1308.0, "end": 1312.0, "text": " then, ah, it's very difficult to get the scale right.", "tokens": [50764, 550, 11, 3716, 11, 309, 311, 588, 2252, 281, 483, 264, 4373, 558, 13, 50964], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 442, "seek": 130000, "start": 1312.0, "end": 1316.0, "text": " There we go.", "tokens": [50964, 821, 321, 352, 13, 51164], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 443, "seek": 130000, "start": 1316.0, "end": 1318.0, "text": " So this one has the highest score,", "tokens": [51164, 407, 341, 472, 575, 264, 6343, 6175, 11, 51264], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 444, "seek": 130000, "start": 1318.0, "end": 1320.0, "text": " no, this one has the highest score actually.", "tokens": [51264, 572, 11, 341, 472, 575, 264, 6343, 6175, 767, 13, 51364], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 445, "seek": 130000, "start": 1320.0, "end": 1323.0, "text": " So probably it's going to choose this one.", "tokens": [51364, 407, 1391, 309, 311, 516, 281, 2826, 341, 472, 13, 51514], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 446, "seek": 130000, "start": 1323.0, "end": 1325.0, "text": " Yeah, so the next step we have a playlist", "tokens": [51514, 865, 11, 370, 264, 958, 1823, 321, 362, 257, 16788, 51614], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 447, "seek": 130000, "start": 1325.0, "end": 1327.0, "text": " which is just this song.", "tokens": [51614, 597, 307, 445, 341, 2153, 13, 51714], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 448, "seek": 130000, "start": 1327.0, "end": 1328.0, "text": " What song was that?", "tokens": [51714, 708, 2153, 390, 300, 30, 51764], "temperature": 0.0, "avg_logprob": -0.16639500333551774, "compression_ratio": 1.695067264573991, "no_speech_prob": 0.0012813662178814411}, {"id": 449, "seek": 132800, "start": 1328.0, "end": 1330.0, "text": " Amazing tune.", "tokens": [50364, 14165, 10864, 13, 50464], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 450, "seek": 132800, "start": 1330.0, "end": 1332.0, "text": " So we have amazing tune in the list", "tokens": [50464, 407, 321, 362, 2243, 10864, 294, 264, 1329, 50564], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 451, "seek": 132800, "start": 1332.0, "end": 1334.0, "text": " and now the score is 0.6.", "tokens": [50564, 293, 586, 264, 6175, 307, 1958, 13, 21, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 452, "seek": 132800, "start": 1334.0, "end": 1337.0, "text": " Let's take the next step.", "tokens": [50664, 961, 311, 747, 264, 958, 1823, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 453, "seek": 132800, "start": 1337.0, "end": 1340.0, "text": " Okay, so now one of the possible actions", "tokens": [50814, 1033, 11, 370, 586, 472, 295, 264, 1944, 5909, 50964], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 454, "seek": 132800, "start": 1340.0, "end": 1342.0, "text": " is removing the song again,", "tokens": [50964, 307, 12720, 264, 2153, 797, 11, 51064], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 455, "seek": 132800, "start": 1342.0, "end": 1345.0, "text": " but we won't do that because the score is back down to zero.", "tokens": [51064, 457, 321, 1582, 380, 360, 300, 570, 264, 6175, 307, 646, 760, 281, 4018, 13, 51214], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 456, "seek": 132800, "start": 1345.0, "end": 1347.0, "text": " Or we can add one of these other songs", "tokens": [51214, 1610, 321, 393, 909, 472, 295, 613, 661, 5781, 51314], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 457, "seek": 132800, "start": 1347.0, "end": 1350.0, "text": " and this one seems to be the playlist", "tokens": [51314, 293, 341, 472, 2544, 281, 312, 264, 16788, 51464], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 458, "seek": 132800, "start": 1350.0, "end": 1354.0, "text": " that best matches the constraint.", "tokens": [51464, 300, 1151, 10676, 264, 25534, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 459, "seek": 132800, "start": 1354.0, "end": 1357.0, "text": " Okay, so now we've got a playlist of two items.", "tokens": [51664, 1033, 11, 370, 586, 321, 600, 658, 257, 16788, 295, 732, 4754, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07584783766004774, "compression_ratio": 1.703056768558952, "no_speech_prob": 0.0029952703043818474}, {"id": 460, "seek": 135700, "start": 1358.0, "end": 1360.0, "text": " Now we can take some more actions.", "tokens": [50414, 823, 321, 393, 747, 512, 544, 5909, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 461, "seek": 135700, "start": 1360.0, "end": 1364.0, "text": " We can add another song or remove either of those songs.", "tokens": [50514, 492, 393, 909, 1071, 2153, 420, 4159, 2139, 295, 729, 5781, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 462, "seek": 135700, "start": 1364.0, "end": 1367.0, "text": " And we've added another song.", "tokens": [50714, 400, 321, 600, 3869, 1071, 2153, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 463, "seek": 135700, "start": 1367.0, "end": 1370.0, "text": " Probably at this point it's going to say,", "tokens": [50864, 9210, 412, 341, 935, 309, 311, 516, 281, 584, 11, 51014], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 464, "seek": 135700, "start": 1370.0, "end": 1373.0, "text": " okay, so it can't find any actions that increase the score,", "tokens": [51014, 1392, 11, 370, 309, 393, 380, 915, 604, 5909, 300, 3488, 264, 6175, 11, 51164], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 465, "seek": 135700, "start": 1373.0, "end": 1375.0, "text": " so the algorithm has said, right, it's done.", "tokens": [51164, 370, 264, 9284, 575, 848, 11, 558, 11, 309, 311, 1096, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 466, "seek": 135700, "start": 1375.0, "end": 1377.0, "text": " That's the best playlist you're going to get.", "tokens": [51264, 663, 311, 264, 1151, 16788, 291, 434, 516, 281, 483, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 467, "seek": 135700, "start": 1377.0, "end": 1380.0, "text": " And that is how you can create a playlist", "tokens": [51364, 400, 300, 307, 577, 291, 393, 1884, 257, 16788, 51514], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 468, "seek": 135700, "start": 1380.0, "end": 1383.0, "text": " in a page full of Python.", "tokens": [51514, 294, 257, 3028, 1577, 295, 15329, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 469, "seek": 135700, "start": 1383.0, "end": 1386.0, "text": " So pretty short on time.", "tokens": [51664, 407, 1238, 2099, 322, 565, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09041626978728731, "compression_ratio": 1.6477732793522266, "no_speech_prob": 0.0012844196753576398}, {"id": 470, "seek": 138600, "start": 1387.0, "end": 1389.0, "text": " We can export this playlist.", "tokens": [50414, 492, 393, 10725, 341, 16788, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 471, "seek": 138600, "start": 1389.0, "end": 1392.0, "text": " And I have a jelly-fin music player set up", "tokens": [50514, 400, 286, 362, 257, 17186, 12, 5194, 1318, 4256, 992, 493, 50664], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 472, "seek": 138600, "start": 1392.0, "end": 1395.0, "text": " and that's how I listen to it.", "tokens": [50664, 293, 300, 311, 577, 286, 2140, 281, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 473, "seek": 138600, "start": 1395.0, "end": 1398.0, "text": " That's a recap of what we've just seen.", "tokens": [50814, 663, 311, 257, 20928, 295, 437, 321, 600, 445, 1612, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 474, "seek": 138600, "start": 1398.0, "end": 1400.0, "text": " So what's next? I don't know, really.", "tokens": [50964, 407, 437, 311, 958, 30, 286, 500, 380, 458, 11, 534, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 475, "seek": 138600, "start": 1400.0, "end": 1402.0, "text": " We have a couple of minutes for questions.", "tokens": [51064, 492, 362, 257, 1916, 295, 2077, 337, 1651, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 476, "seek": 138600, "start": 1402.0, "end": 1405.0, "text": " Maybe you can answer the question of what's next.", "tokens": [51164, 2704, 291, 393, 1867, 264, 1168, 295, 437, 311, 958, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11216582129983341, "compression_ratio": 1.4756756756756757, "no_speech_prob": 0.00026370742125436664}, {"id": 477, "seek": 140500, "start": 1406.0, "end": 1409.0, "text": " APPLAUSE", "tokens": [50414, 35298, 50564], "temperature": 0.0, "avg_logprob": -0.2414142697356468, "compression_ratio": 1.165289256198347, "no_speech_prob": 0.02317179925739765}, {"id": 478, "seek": 140500, "start": 1421.0, "end": 1423.0, "text": " Thank you, Sam.", "tokens": [51164, 1044, 291, 11, 4832, 13, 51264], "temperature": 0.0, "avg_logprob": -0.2414142697356468, "compression_ratio": 1.165289256198347, "no_speech_prob": 0.02317179925739765}, {"id": 479, "seek": 140500, "start": 1423.0, "end": 1426.0, "text": " We have two minutes for questions.", "tokens": [51264, 492, 362, 732, 2077, 337, 1651, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2414142697356468, "compression_ratio": 1.165289256198347, "no_speech_prob": 0.02317179925739765}, {"id": 480, "seek": 140500, "start": 1426.0, "end": 1429.0, "text": " I will repeat the questions then.", "tokens": [51414, 286, 486, 7149, 264, 1651, 550, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2414142697356468, "compression_ratio": 1.165289256198347, "no_speech_prob": 0.02317179925739765}, {"id": 481, "seek": 140500, "start": 1429.0, "end": 1434.0, "text": " Yeah, so if I want to actually use this project", "tokens": [51564, 865, 11, 370, 498, 286, 528, 281, 767, 764, 341, 1716, 51814], "temperature": 0.0, "avg_logprob": -0.2414142697356468, "compression_ratio": 1.165289256198347, "no_speech_prob": 0.02317179925739765}, {"id": 482, "seek": 143400, "start": 1434.0, "end": 1436.0, "text": " like, for example, Francis,", "tokens": [50364, 411, 11, 337, 1365, 11, 19648, 11, 50464], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 483, "seek": 143400, "start": 1436.0, "end": 1440.0, "text": " how much time would it take me to set up the project", "tokens": [50464, 577, 709, 565, 576, 309, 747, 385, 281, 992, 493, 264, 1716, 50664], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 484, "seek": 143400, "start": 1440.0, "end": 1445.0, "text": " and find constraints that actually match and replace music", "tokens": [50664, 293, 915, 18491, 300, 767, 2995, 293, 7406, 1318, 50914], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 485, "seek": 143400, "start": 1445.0, "end": 1448.0, "text": " given that I'm fairly familiar with Python", "tokens": [50914, 2212, 300, 286, 478, 6457, 4963, 365, 15329, 51064], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 486, "seek": 143400, "start": 1448.0, "end": 1450.0, "text": " or setting up some projects?", "tokens": [51064, 420, 3287, 493, 512, 4455, 30, 51164], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 487, "seek": 143400, "start": 1450.0, "end": 1453.0, "text": " So how much time would it take to set up the whole project", "tokens": [51164, 407, 577, 709, 565, 576, 309, 747, 281, 992, 493, 264, 1379, 1716, 51314], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 488, "seek": 143400, "start": 1453.0, "end": 1455.0, "text": " and find the constraints and so on?", "tokens": [51314, 293, 915, 264, 18491, 293, 370, 322, 30, 51414], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 489, "seek": 143400, "start": 1455.0, "end": 1457.0, "text": " Yeah, interesting question, actually.", "tokens": [51414, 865, 11, 1880, 1168, 11, 767, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 490, "seek": 143400, "start": 1457.0, "end": 1459.0, "text": " So, I mean, setting up the project is fairly easy.", "tokens": [51514, 407, 11, 286, 914, 11, 3287, 493, 264, 1716, 307, 6457, 1858, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 491, "seek": 143400, "start": 1459.0, "end": 1461.0, "text": " You pip install.", "tokens": [51614, 509, 8489, 3625, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1948934957521771, "compression_ratio": 1.7991266375545851, "no_speech_prob": 0.019174223765730858}, {"id": 492, "seek": 146100, "start": 1462.0, "end": 1464.0, "text": " After that...", "tokens": [50414, 2381, 300, 485, 50514], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 493, "seek": 146100, "start": 1464.0, "end": 1466.0, "text": " I don't know, it wouldn't be quick.", "tokens": [50514, 286, 500, 380, 458, 11, 309, 2759, 380, 312, 1702, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 494, "seek": 146100, "start": 1466.0, "end": 1468.0, "text": " I'll tell you that.", "tokens": [50614, 286, 603, 980, 291, 300, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 495, "seek": 146100, "start": 1468.0, "end": 1471.0, "text": " You would have to enjoy getting your hands dirty a bit at this stage.", "tokens": [50714, 509, 576, 362, 281, 2103, 1242, 428, 2377, 9360, 257, 857, 412, 341, 3233, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 496, "seek": 146100, "start": 1471.0, "end": 1475.0, "text": " My general goal is to create a folder of example recommenders.", "tokens": [50864, 1222, 2674, 3387, 307, 281, 1884, 257, 10820, 295, 1365, 2748, 433, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 497, "seek": 146100, "start": 1475.0, "end": 1477.0, "text": " So hopefully in future you'd be able to...", "tokens": [51064, 407, 4696, 294, 2027, 291, 1116, 312, 1075, 281, 485, 51164], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 498, "seek": 146100, "start": 1477.0, "end": 1480.0, "text": " And you can actually run the examples as modules as well.", "tokens": [51164, 400, 291, 393, 767, 1190, 264, 5110, 382, 16679, 382, 731, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 499, "seek": 146100, "start": 1480.0, "end": 1483.0, "text": " So hopefully in the future you'd be able to kind of run", "tokens": [51314, 407, 4696, 294, 264, 2027, 291, 1116, 312, 1075, 281, 733, 295, 1190, 51464], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 500, "seek": 146100, "start": 1483.0, "end": 1486.0, "text": " an existing example and get started fairly quickly", "tokens": [51464, 364, 6741, 1365, 293, 483, 1409, 6457, 2661, 51614], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 501, "seek": 146100, "start": 1486.0, "end": 1488.0, "text": " and just tweak a few values.", "tokens": [51614, 293, 445, 29879, 257, 1326, 4190, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10931229791721377, "compression_ratio": 1.7015503875968991, "no_speech_prob": 0.0015266512054949999}, {"id": 502, "seek": 149100, "start": 1492.0, "end": 1495.0, "text": " One more over there.", "tokens": [50414, 1485, 544, 670, 456, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 503, "seek": 149100, "start": 1495.0, "end": 1497.0, "text": " Or one over here.", "tokens": [50564, 1610, 472, 670, 510, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 504, "seek": 149100, "start": 1497.0, "end": 1501.0, "text": " So depending on the number of times you have used", "tokens": [50664, 407, 5413, 322, 264, 1230, 295, 1413, 291, 362, 1143, 50864], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 505, "seek": 149100, "start": 1501.0, "end": 1503.0, "text": " this recommendation system,", "tokens": [50864, 341, 11879, 1185, 11, 50964], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 506, "seek": 149100, "start": 1503.0, "end": 1506.0, "text": " how often has it repeated the same set of music,", "tokens": [50964, 577, 2049, 575, 309, 10477, 264, 912, 992, 295, 1318, 11, 51114], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 507, "seek": 149100, "start": 1506.0, "end": 1510.0, "text": " same set of songs or very similar tasting songs?", "tokens": [51114, 912, 992, 295, 5781, 420, 588, 2531, 26223, 5781, 30, 51314], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 508, "seek": 149100, "start": 1510.0, "end": 1512.0, "text": " Yeah, how long has it repeated?", "tokens": [51314, 865, 11, 577, 938, 575, 309, 10477, 30, 51414], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 509, "seek": 149100, "start": 1512.0, "end": 1515.0, "text": " It's never come up with two playlists the same, actually.", "tokens": [51414, 467, 311, 1128, 808, 493, 365, 732, 862, 36693, 264, 912, 11, 767, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 510, "seek": 149100, "start": 1515.0, "end": 1517.0, "text": " What it does sometimes do, though, is it'll take an album", "tokens": [51564, 708, 309, 775, 2171, 360, 11, 1673, 11, 307, 309, 603, 747, 364, 6030, 51664], "temperature": 0.0, "avg_logprob": -0.11393772729552619, "compression_ratio": 1.6160714285714286, "no_speech_prob": 0.015883641317486763}, {"id": 511, "seek": 151700, "start": 1517.0, "end": 1520.0, "text": " and kind of give me four or five songs of the same album", "tokens": [50364, 293, 733, 295, 976, 385, 1451, 420, 1732, 5781, 295, 264, 912, 6030, 50514], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 512, "seek": 151700, "start": 1520.0, "end": 1522.0, "text": " in one playlist.", "tokens": [50514, 294, 472, 16788, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 513, "seek": 151700, "start": 1522.0, "end": 1524.0, "text": " So maybe I need to tweak the constraints a bit there.", "tokens": [50614, 407, 1310, 286, 643, 281, 29879, 264, 18491, 257, 857, 456, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 514, "seek": 151700, "start": 1524.0, "end": 1527.0, "text": " But there's infinite possibilities, really.", "tokens": [50714, 583, 456, 311, 13785, 12178, 11, 534, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 515, "seek": 151700, "start": 1527.0, "end": 1530.0, "text": " Yeah, I haven't got bored of it so far.", "tokens": [50864, 865, 11, 286, 2378, 380, 658, 13521, 295, 309, 370, 1400, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 516, "seek": 151700, "start": 1530.0, "end": 1533.0, "text": " If your input is very short, then it will get repetitive.", "tokens": [51014, 759, 428, 4846, 307, 588, 2099, 11, 550, 309, 486, 483, 29404, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 517, "seek": 151700, "start": 1533.0, "end": 1535.0, "text": " One more question?", "tokens": [51164, 1485, 544, 1168, 30, 51264], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 518, "seek": 151700, "start": 1541.0, "end": 1543.0, "text": " Thanks for the very interesting talk.", "tokens": [51564, 2561, 337, 264, 588, 1880, 751, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 519, "seek": 151700, "start": 1543.0, "end": 1545.0, "text": " Just a quick question.", "tokens": [51664, 1449, 257, 1702, 1168, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08091280411700813, "compression_ratio": 1.4851063829787234, "no_speech_prob": 0.05258582904934883}, {"id": 520, "seek": 154500, "start": 1545.0, "end": 1547.0, "text": " How easy would it be to implement?", "tokens": [50364, 1012, 1858, 576, 309, 312, 281, 4445, 30, 50464], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 521, "seek": 154500, "start": 1547.0, "end": 1552.0, "text": " So say if you wanted to search for different performances", "tokens": [50464, 407, 584, 498, 291, 1415, 281, 3164, 337, 819, 16087, 50714], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 522, "seek": 154500, "start": 1552.0, "end": 1555.0, "text": " or different interpretations of a particular piece of music,", "tokens": [50714, 420, 819, 37547, 295, 257, 1729, 2522, 295, 1318, 11, 50864], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 523, "seek": 154500, "start": 1555.0, "end": 1558.0, "text": " so if you had classical music, some symphony", "tokens": [50864, 370, 498, 291, 632, 13735, 1318, 11, 512, 6697, 28616, 51014], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 524, "seek": 154500, "start": 1558.0, "end": 1560.0, "text": " with a bunch of different recordings,", "tokens": [51014, 365, 257, 3840, 295, 819, 25162, 11, 51114], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 525, "seek": 154500, "start": 1560.0, "end": 1562.0, "text": " how easy would it be to implement that in the current?", "tokens": [51114, 577, 1858, 576, 309, 312, 281, 4445, 300, 294, 264, 2190, 30, 51214], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 526, "seek": 154500, "start": 1562.0, "end": 1565.0, "text": " How familiar are you with music brains?", "tokens": [51214, 1012, 4963, 366, 291, 365, 1318, 15442, 30, 51364], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 527, "seek": 154500, "start": 1565.0, "end": 1566.0, "text": " Not at all.", "tokens": [51364, 1726, 412, 439, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 528, "seek": 154500, "start": 1566.0, "end": 1568.0, "text": " So the tool you would use would be music brains.", "tokens": [51414, 407, 264, 2290, 291, 576, 764, 576, 312, 1318, 15442, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 529, "seek": 154500, "start": 1568.0, "end": 1570.0, "text": " Yeah, talk to this guy.", "tokens": [51514, 865, 11, 751, 281, 341, 2146, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 530, "seek": 154500, "start": 1570.0, "end": 1572.0, "text": " He'll bring you up to speed.", "tokens": [51614, 634, 603, 1565, 291, 493, 281, 3073, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 531, "seek": 154500, "start": 1572.0, "end": 1574.0, "text": " Thank you again, Sam.", "tokens": [51714, 1044, 291, 797, 11, 4832, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13017728009561855, "compression_ratio": 1.7756653992395437, "no_speech_prob": 0.13570500910282135}, {"id": 532, "seek": 157400, "start": 1574.0, "end": 1576.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.20220792293548584, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.4548085033893585}], "language": "en"}