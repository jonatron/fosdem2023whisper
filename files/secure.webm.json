{"text": " Hello, everybody. Can you hear me? That's cool. I'm Andrei Yenich. I will talk today about situ by accident and the slides are to be published under the Creative Commons Attribution 4.0 license. I am a freelancer since last month. I'm doing web development and consulting. I'm available on Mastodon, for example. I'm on other places. So if you have questions, please get in touch with me either afterwards, preferably outside or on Mastodon. Who is the target audience? I expect you to have some knowledge about Angular, about TypeScript and Webpack, because I can't go into this. It's not enough time for it. I'm interested in security and performance. If you are, we are in a good shape. What will you learn today? I'm going to something which I will get to in a minute, and I show you which steps I take to reproduce it, help you to understand the results of a Webpack build, and then go into more details, because you could see the child routes from Angular in the result, and I want to mention how you can protect them, what benefits it can have, and how code splitting works and helps in that. A few words about how that came to be. I was approached by Pechida last year, and was researching something for security and had questions about Angular, because that's not her expertise area. I explained how Angular works, what the different files are meant, how to read it, and learned about which information you better not include in an Angular build without prior authentication and authorization. So we have four more seats here. This presentation will focus on Angular, but the issue at hand is not limited to Angular. It will help you react as well. It's not something the framework can help you with, because it's a responsibility that lies with you as an app developer. I used Angular for this presentation. It's a minimal application, and to help me read the webpack build, I used Pretia, which is also quite nice. So I started with a brand new Angular project, used the recommended approach to use ng new, called foster, because that was something I had in mind when I was writing the slides, and because we have to deal with Angular, the documentation isn't complete, so I had to install some more dependencies to be able to generate a build on Dev Server environment. As a result from the build, we get several files. For this presentation, I just looked at the JavaScript files, but I can also quickly go through what are the files meant for them. We have several files, for example, in HTML, that is a minimal app, so that means it contains a bare minimum of HTML you need to know to have to load the Angular files and some CSS, and have the JavaScript file loaded we saw before. Then we have some size.something.css, which is empty because at that point, we don't have styles applied to components, otherwise they would go in here. The hash is generated by a webpack at that point. We have a runtime file that contains the Angular runtime that is that those parts Angular needs to pass the template and manage the dependency injection and everything. Mostly not interesting from what we are interested in. We have polyfills that contain something like the zones, certain promises features as polyfills, so if some browser doesn't support it, it gets added to the global namespace, and we have the main file, which is mainly what we as an app developer wrote, but also some boilerplate code for example for RHS or some other template parsing elements. So what's the case right now? I looked at the routing file, the routing module, that's how it's generated by Angular, and we are mainly interested in that routes variable over here. So I looked up what is the type strip definition for a route that's not complete, it's just a partial of it. We are mainly interested in those properties pass, especially the pass and the component, which is basically used if you don't use child routes or just have a mapping from a pass segment to a component, but that's also helpful to have RyderX, it's also something you will add early on to have a catch all route or RyderX to a 404 page. What is interesting for this presentation is also the children property, which is another area of routes, and load children, which is used for lazy loading other route segments, so you can activate in front of it to guard it, that means you have some check if the currently user allowed to access that route. If you then load into what is produced by Angular, you get some Java profile and can look for something with ng generate component, because that's part of the index HTML that gets generated, and that's the main app component that gets generated by the boilerplate code, and that's the entry point above that line, it's Java webpack boilerplate code, so you can just ignore it for now. Below that is that what you as an author wrote. Next, I created some components a patient found, I thought about two more components, for example, the speaker component and the slides component, and let's say we want to protect the speaker component for some reason, if you then generate a new build, you will see no other changes to it, so it's identically why, because the build gets reshaken by a webpack, that means that if you don't load those components, they will not be part of the build. Let's include them then, we want to have them as routes, so I extend the routing module, declare a route for the slides and for the speakers, right now just without children, therefore I also have to import them. I added the imports because when I look at Angular documentation, I often find that the documentation isn't complete, which is a bummer, so if you want to reproduce it yourself, I give you the necessary hints to follow along. So I added that route, I just re-run the Angular build command and gbuild and look into the results and then, for example, I see that the JavaScript now contains some more lines, the variable names or identifiers might change because Angular on repack is mainly in the variables, but it has something like this structure, for example, for the slides or directly below the speakers, so that's what Angular makes out of your route definition. We also have a mapping from the path to the components, the components where the function calls before and that's how you can read it. So if you are a security researcher, that is what you would look at and try to make sense of it. I feel it's helpful to have, okay, we have the result now, how would I translate it back? Reverse engineer, so to speak. So the next thing we can add is general catch all paths that redirects to the slides page to some kind of landing page or index page or for everything else that can't be mapped, we have a page not found component. So now I want to go into more details about how I would actually see the components that I had and the index that the component HTML really bloated and it tells you with an HTML command that you can drop certain paths and if you just remove everything within that diff container with the road of main, with something more semantically, you could actually see, okay, what's happening here. So now we have updated our component. Now we have updated our component. Now we have our own HTML and I can look into the guarding and into defining child routes and I would like to have some kind of model. So I'm going with a template-driven form here. It might also be possible to use a reactive form, but most of the Angular applications I worked with use the template-driven form, so I'm more familiar with that. And just defined a model here. It's called auth with some string that is used as password. It's just for demonstration purposes. You wouldn't use this kind in actual application, I hope. Now we have defined it in the components part. We should also update the template and here it's like I removed that speaker work and replaced it with some basic HTML. Still no styling because that's not relevant for what I'm doing here. I added a form element and basic here and input and to demonstrate, okay, we have something working here. I show the link to the access to the slide subpath once a form is valid. And here we have a template here with a type of password. So the browser is using that obfuscation with dots or stars or what have you. And you have a model that's helpful for Angular as well. So it's a two-way data binding. And once it's valid, you get access to that anchor. So last thing you should have is because when you have child routes, you should have a route outlet that tells Angular where to display that child route. So now we have updated the template. The next step will be to also update the route definition. So back to the routing module. I extended that speaker route. It's now not having a mapping from past component, but it's also declared, okay, we have some child components here in this application. It would be slash speaker slash slide to access that child component. It's still rendering the parent, the speaker component, but also the slide component in the route outlet. So at that point, it will still be possible to look at the bundle and see, okay, we can animate, we can animate every route in the application. So as a security researcher, I know, okay, this is the places I have to look at and check for security. Going more into protecting the thing, the first thing I would do is defining a new route for the speaker module because that's part of the application I want to protect. Angular CLI offers you a new way to generate the boilerplate for that as well with the ng-generate module, which is the name of the module. I want to have a router as well, and I want to have it as a sub-module of app module. Once that speaker routing module is defined, you can update the routing module of the app and replace everything with your head there with just the path and then tell it to lazy load the speaker module. I will get to that in a minute, later on. So now I lazy load the whole speaker module, and I have to redo the slide sub-path there. So I go into that, load the slides component, and okay, I want to have the slides module as a sub-component of the speaker module, and the path for the speaker module is here, is an empty string because I already am in the speaker path from the parent component. It's also important to remove that speaker component from the app module definition because otherwise Angular will be set, it can't have that in two places. So once I generate a new build, I will now see that I have a second part about lazy shine files which has some hash and some other hash. I come back to that as well, and it has a speaker module because that's what we defined, and we have some sizes. So I can tell, okay, right now I really have some part of my application that gets lazy loaded. So that means it will only be loaded once that path segment is entered. Now I told you that I would like to protect that path segment, so I define a route in guard, and GCLI has a guard schema for that as well, so I run ng generate or ngg guard and name it something. Here it's usually something that can activate, can deactivate, or the other types of guards you have. You get a small interactive prompt for what do you want the guard to be able to do, and here it's for protecting the speaker. What I receive is that I get some boilerplate code provided by the GCLI again, and I follow the documentation about how to define guards, define the user token and permissions stuff, right now it's just returning to always, you would have some more checks here. For example, is there some JSON token set in the local search or whatever you want. I also described that the documentation isn't complete here, because either you have to export those two classes, or you have to declare them as injectable. Once those two classes are defined, you can have them somewhere else, you need to inject them into the guard itself, declare that the guard implements a can activate interface, that means it has to have a public function called can activate, that takes active route snapshot as the one part, and returns an observable whatever, not relevant for our case. I just want to use that injected permissions here and check that can activate a method on it and handle the current user and route patterns. That's some way you can do, and then you can check the case. I want to enter that route with the user, is he or she allowed to do that? In our case for demonstration, I just return true, so it's always allowed, but you can also set it to false to test it on your thing and discover that you get redirected to the index page, those slides. Now that we have a guard, I have to update the app routing module, because I want to protect the speaker, and that means it gets a new line for the can activate, which is a list of guards, in our case only one, and I also have to tell us that there are some providers for those injected dependencies, therefore it's important to have those two classes, permissions and user tokens exported as well, otherwise I couldn't use them here. And now I'm at the part where I would like to use the name chunk, magic comments from repack, and after my pitch and I got accepted, I discovered hey, Angular doesn't support that, but you can turn on the AngularJSON property in the, or the name chunk property in AngularJSON, which would give you not the hashes, but the whole filename that you would have in a depth server, and therefore you could then apply some more security measures, I will get to that on the next slide. For those of you who don't know what name chunk is, when you have that import statement for lazy loading, you can have a JavaScript comment, which is called repack name chunk, and declare another name and repack will use that one instead of the generated hash. So my idea is that you have certain files that are on your server then as static applications, and you can add HTTP headers, for example, content security policy, you can also look at the documentation about Angular and it says you have to have especially unsafe inline for strips, which is bad, because it allows more for attacks. If you can't use content security policy, you still have the ability to declare it as a char hash or as a nonce, which is a bit more labor, but in my experience, I work with companies who deploy it every other week or so, that's doable to compute a hash and add it to the HTML. The idea is that nobody else is able to crawl that route of the JavaScript chunk and look at two more, because for example, you could have a list of certain passwords, that was the case of Percadia, and if you would like to attack that application, you can just exclude those passwords, because they won't be valid anyway, and therefore you would aid with credential stuffing that is trying out passwords and credentials you found somewhere else, or you can exclude your brute force attack, because you know it has to have this length or the special characters are allowed or not allowed, and therefore you would make the criminal's life easier, so I would like to have that not part of the bottle, but loaded from some JSON file or something else, which is then be able to be protected. So basically having some authorization for certain information and only give more information once that user is authenticated, for example, by an authorization header and the response. So what have you learned today? I hope you get a bit better understanding about how the result looks like, what Angular is producing, what name chunks are in Angular, you learned a bit about content security policy, which is really important, there's a documentation on MDN as well, and learned about some ways to secure static files. I used creative comments images and provide the resources with the exception of the profile picture of Percadia, but I got the written permission that I am allowed to use that one. Thank you. Do you have questions?", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 14.36, "text": " Hello, everybody. Can you hear me? That's cool. I'm Andrei Yenich. I will talk today", "tokens": [50364, 2425, 11, 2201, 13, 1664, 291, 1568, 385, 30, 663, 311, 1627, 13, 286, 478, 400, 10271, 398, 268, 480, 13, 286, 486, 751, 965, 51082], "temperature": 0.0, "avg_logprob": -0.34155576125435205, "compression_ratio": 1.2611940298507462, "no_speech_prob": 0.10626855492591858}, {"id": 1, "seek": 0, "start": 14.36, "end": 20.36, "text": " about situ by accident and the slides are to be published under the Creative Commons", "tokens": [51082, 466, 2054, 538, 6398, 293, 264, 9788, 366, 281, 312, 6572, 833, 264, 26598, 34894, 51382], "temperature": 0.0, "avg_logprob": -0.34155576125435205, "compression_ratio": 1.2611940298507462, "no_speech_prob": 0.10626855492591858}, {"id": 2, "seek": 2036, "start": 20.36, "end": 31.439999999999998, "text": " Attribution 4.0 license. I am a freelancer since last month. I'm doing web development", "tokens": [50364, 7298, 30783, 1017, 13, 15, 10476, 13, 286, 669, 257, 27931, 28347, 1670, 1036, 1618, 13, 286, 478, 884, 3670, 3250, 50918], "temperature": 0.0, "avg_logprob": -0.2894607765087183, "compression_ratio": 1.403225806451613, "no_speech_prob": 0.04863237217068672}, {"id": 3, "seek": 2036, "start": 31.439999999999998, "end": 38.32, "text": " and consulting. I'm available on Mastodon, for example. I'm on other places. So if you", "tokens": [50918, 293, 23682, 13, 286, 478, 2435, 322, 376, 525, 378, 266, 11, 337, 1365, 13, 286, 478, 322, 661, 3190, 13, 407, 498, 291, 51262], "temperature": 0.0, "avg_logprob": -0.2894607765087183, "compression_ratio": 1.403225806451613, "no_speech_prob": 0.04863237217068672}, {"id": 4, "seek": 2036, "start": 38.32, "end": 44.16, "text": " have questions, please get in touch with me either afterwards, preferably outside or on", "tokens": [51262, 362, 1651, 11, 1767, 483, 294, 2557, 365, 385, 2139, 10543, 11, 45916, 2380, 420, 322, 51554], "temperature": 0.0, "avg_logprob": -0.2894607765087183, "compression_ratio": 1.403225806451613, "no_speech_prob": 0.04863237217068672}, {"id": 5, "seek": 4416, "start": 44.16, "end": 53.199999999999996, "text": " Mastodon. Who is the target audience? I expect you to have some knowledge about Angular,", "tokens": [50364, 376, 525, 378, 266, 13, 2102, 307, 264, 3779, 4034, 30, 286, 2066, 291, 281, 362, 512, 3601, 466, 34107, 11, 50816], "temperature": 0.0, "avg_logprob": -0.19156105877601937, "compression_ratio": 1.390625, "no_speech_prob": 0.01628776267170906}, {"id": 6, "seek": 4416, "start": 53.199999999999996, "end": 59.959999999999994, "text": " about TypeScript and Webpack, because I can't go into this. It's not enough time for it.", "tokens": [50816, 466, 15576, 14237, 293, 9573, 9539, 11, 570, 286, 393, 380, 352, 666, 341, 13, 467, 311, 406, 1547, 565, 337, 309, 13, 51154], "temperature": 0.0, "avg_logprob": -0.19156105877601937, "compression_ratio": 1.390625, "no_speech_prob": 0.01628776267170906}, {"id": 7, "seek": 4416, "start": 59.959999999999994, "end": 67.28, "text": " I'm interested in security and performance. If you are, we are in a good shape. What will", "tokens": [51154, 286, 478, 3102, 294, 3825, 293, 3389, 13, 759, 291, 366, 11, 321, 366, 294, 257, 665, 3909, 13, 708, 486, 51520], "temperature": 0.0, "avg_logprob": -0.19156105877601937, "compression_ratio": 1.390625, "no_speech_prob": 0.01628776267170906}, {"id": 8, "seek": 6728, "start": 67.36, "end": 74.4, "text": " you learn today? I'm going to something which I will get to in a minute, and I show you", "tokens": [50368, 291, 1466, 965, 30, 286, 478, 516, 281, 746, 597, 286, 486, 483, 281, 294, 257, 3456, 11, 293, 286, 855, 291, 50720], "temperature": 0.0, "avg_logprob": -0.21068063422815123, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.006451576016843319}, {"id": 9, "seek": 6728, "start": 74.4, "end": 81.56, "text": " which steps I take to reproduce it, help you to understand the results of a Webpack build,", "tokens": [50720, 597, 4439, 286, 747, 281, 29501, 309, 11, 854, 291, 281, 1223, 264, 3542, 295, 257, 9573, 9539, 1322, 11, 51078], "temperature": 0.0, "avg_logprob": -0.21068063422815123, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.006451576016843319}, {"id": 10, "seek": 6728, "start": 81.56, "end": 88.24000000000001, "text": " and then go into more details, because you could see the child routes from Angular in", "tokens": [51078, 293, 550, 352, 666, 544, 4365, 11, 570, 291, 727, 536, 264, 1440, 18242, 490, 34107, 294, 51412], "temperature": 0.0, "avg_logprob": -0.21068063422815123, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.006451576016843319}, {"id": 11, "seek": 8824, "start": 88.24, "end": 97.44, "text": " the result, and I want to mention how you can protect them, what benefits it can have,", "tokens": [50364, 264, 1874, 11, 293, 286, 528, 281, 2152, 577, 291, 393, 2371, 552, 11, 437, 5311, 309, 393, 362, 11, 50824], "temperature": 0.0, "avg_logprob": -0.23641309004563552, "compression_ratio": 1.5146198830409356, "no_speech_prob": 0.0031564533710479736}, {"id": 12, "seek": 8824, "start": 97.44, "end": 108.64, "text": " and how code splitting works and helps in that. A few words about how that came to be.", "tokens": [50824, 293, 577, 3089, 30348, 1985, 293, 3665, 294, 300, 13, 316, 1326, 2283, 466, 577, 300, 1361, 281, 312, 13, 51384], "temperature": 0.0, "avg_logprob": -0.23641309004563552, "compression_ratio": 1.5146198830409356, "no_speech_prob": 0.0031564533710479736}, {"id": 13, "seek": 8824, "start": 108.64, "end": 115.84, "text": " I was approached by Pechida last year, and was researching something for security and", "tokens": [51384, 286, 390, 17247, 538, 2396, 339, 2887, 1036, 1064, 11, 293, 390, 24176, 746, 337, 3825, 293, 51744], "temperature": 0.0, "avg_logprob": -0.23641309004563552, "compression_ratio": 1.5146198830409356, "no_speech_prob": 0.0031564533710479736}, {"id": 14, "seek": 11584, "start": 115.84, "end": 123.0, "text": " had questions about Angular, because that's not her expertise area. I explained how Angular", "tokens": [50364, 632, 1651, 466, 34107, 11, 570, 300, 311, 406, 720, 11769, 1859, 13, 286, 8825, 577, 34107, 50722], "temperature": 0.0, "avg_logprob": -0.20798900127410888, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0014509822940453887}, {"id": 15, "seek": 11584, "start": 123.0, "end": 129.24, "text": " works, what the different files are meant, how to read it, and learned about which information", "tokens": [50722, 1985, 11, 437, 264, 819, 7098, 366, 4140, 11, 577, 281, 1401, 309, 11, 293, 3264, 466, 597, 1589, 51034], "temperature": 0.0, "avg_logprob": -0.20798900127410888, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0014509822940453887}, {"id": 16, "seek": 11584, "start": 129.24, "end": 134.4, "text": " you better not include in an Angular build without prior authentication and authorization.", "tokens": [51034, 291, 1101, 406, 4090, 294, 364, 34107, 1322, 1553, 4059, 26643, 293, 33697, 13, 51292], "temperature": 0.0, "avg_logprob": -0.20798900127410888, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0014509822940453887}, {"id": 17, "seek": 11584, "start": 134.4, "end": 145.16, "text": " So we have four more seats here. This presentation will focus on Angular, but the issue at hand", "tokens": [51292, 407, 321, 362, 1451, 544, 11069, 510, 13, 639, 5860, 486, 1879, 322, 34107, 11, 457, 264, 2734, 412, 1011, 51830], "temperature": 0.0, "avg_logprob": -0.20798900127410888, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0014509822940453887}, {"id": 18, "seek": 14516, "start": 145.2, "end": 151.07999999999998, "text": " is not limited to Angular. It will help you react as well. It's not something the framework", "tokens": [50366, 307, 406, 5567, 281, 34107, 13, 467, 486, 854, 291, 4515, 382, 731, 13, 467, 311, 406, 746, 264, 8388, 50660], "temperature": 0.0, "avg_logprob": -0.2848917741041917, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0009982135379686952}, {"id": 19, "seek": 14516, "start": 151.07999999999998, "end": 160.07999999999998, "text": " can help you with, because it's a responsibility that lies with you as an app developer. I", "tokens": [50660, 393, 854, 291, 365, 11, 570, 309, 311, 257, 6357, 300, 9134, 365, 291, 382, 364, 724, 10754, 13, 286, 51110], "temperature": 0.0, "avg_logprob": -0.2848917741041917, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0009982135379686952}, {"id": 20, "seek": 14516, "start": 160.07999999999998, "end": 166.4, "text": " used Angular for this presentation. It's a minimal application, and to help me read", "tokens": [51110, 1143, 34107, 337, 341, 5860, 13, 467, 311, 257, 13206, 3861, 11, 293, 281, 854, 385, 1401, 51426], "temperature": 0.0, "avg_logprob": -0.2848917741041917, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0009982135379686952}, {"id": 21, "seek": 16640, "start": 166.44, "end": 171.84, "text": " the webpack build, I used Pretia, which is also quite nice.", "tokens": [50366, 264, 3670, 9539, 1322, 11, 286, 1143, 9739, 654, 11, 597, 307, 611, 1596, 1481, 13, 50636], "temperature": 0.0, "avg_logprob": -0.32545911529917776, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01147419959306717}, {"id": 22, "seek": 16640, "start": 171.84, "end": 180.84, "text": " So I started with a brand new Angular project, used the recommended approach to use ng new,", "tokens": [50636, 407, 286, 1409, 365, 257, 3360, 777, 34107, 1716, 11, 1143, 264, 9628, 3109, 281, 764, 6415, 777, 11, 51086], "temperature": 0.0, "avg_logprob": -0.32545911529917776, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01147419959306717}, {"id": 23, "seek": 16640, "start": 180.84, "end": 187.52, "text": " called foster, because that was something I had in mind when I was writing the slides,", "tokens": [51086, 1219, 17114, 11, 570, 300, 390, 746, 286, 632, 294, 1575, 562, 286, 390, 3579, 264, 9788, 11, 51420], "temperature": 0.0, "avg_logprob": -0.32545911529917776, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01147419959306717}, {"id": 24, "seek": 16640, "start": 187.52, "end": 191.72, "text": " and because we have to deal with Angular, the documentation isn't complete, so I had", "tokens": [51420, 293, 570, 321, 362, 281, 2028, 365, 34107, 11, 264, 14333, 1943, 380, 3566, 11, 370, 286, 632, 51630], "temperature": 0.0, "avg_logprob": -0.32545911529917776, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.01147419959306717}, {"id": 25, "seek": 19172, "start": 191.76, "end": 198.76, "text": " to install some more dependencies to be able to generate a build on Dev Server environment.", "tokens": [50366, 281, 3625, 512, 544, 36606, 281, 312, 1075, 281, 8460, 257, 1322, 322, 9096, 25684, 2823, 13, 50716], "temperature": 0.0, "avg_logprob": -0.2083221822977066, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0011831950396299362}, {"id": 26, "seek": 19172, "start": 201.76, "end": 207.32, "text": " As a result from the build, we get several files. For this presentation, I just looked", "tokens": [50866, 1018, 257, 1874, 490, 264, 1322, 11, 321, 483, 2940, 7098, 13, 1171, 341, 5860, 11, 286, 445, 2956, 51144], "temperature": 0.0, "avg_logprob": -0.2083221822977066, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0011831950396299362}, {"id": 27, "seek": 19172, "start": 207.32, "end": 214.32, "text": " at the JavaScript files, but I can also quickly go through what are the files meant for them.", "tokens": [51144, 412, 264, 15778, 7098, 11, 457, 286, 393, 611, 2661, 352, 807, 437, 366, 264, 7098, 4140, 337, 552, 13, 51494], "temperature": 0.0, "avg_logprob": -0.2083221822977066, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.0011831950396299362}, {"id": 28, "seek": 21432, "start": 215.32, "end": 224.32, "text": " We have several files, for example, in HTML, that is a minimal app, so that means it contains", "tokens": [50414, 492, 362, 2940, 7098, 11, 337, 1365, 11, 294, 17995, 11, 300, 307, 257, 13206, 724, 11, 370, 300, 1355, 309, 8306, 50864], "temperature": 0.0, "avg_logprob": -0.3455771325339734, "compression_ratio": 1.4835164835164836, "no_speech_prob": 0.0004368686641100794}, {"id": 29, "seek": 21432, "start": 224.48, "end": 231.48, "text": " a bare minimum of HTML you need to know to have to load the Angular files and some CSS,", "tokens": [50872, 257, 6949, 7285, 295, 17995, 291, 643, 281, 458, 281, 362, 281, 3677, 264, 34107, 7098, 293, 512, 24387, 11, 51222], "temperature": 0.0, "avg_logprob": -0.3455771325339734, "compression_ratio": 1.4835164835164836, "no_speech_prob": 0.0004368686641100794}, {"id": 30, "seek": 21432, "start": 233.51999999999998, "end": 240.51999999999998, "text": " and have the JavaScript file loaded we saw before. Then we have some size.something.css,", "tokens": [51324, 293, 362, 264, 15778, 3991, 13210, 321, 1866, 949, 13, 1396, 321, 362, 512, 2744, 13, 31681, 13, 66, 3810, 11, 51674], "temperature": 0.0, "avg_logprob": -0.3455771325339734, "compression_ratio": 1.4835164835164836, "no_speech_prob": 0.0004368686641100794}, {"id": 31, "seek": 24052, "start": 241.36, "end": 248.36, "text": " which is empty because at that point, we don't have styles applied to components, otherwise", "tokens": [50406, 597, 307, 6707, 570, 412, 300, 935, 11, 321, 500, 380, 362, 13273, 6456, 281, 6677, 11, 5911, 50756], "temperature": 0.0, "avg_logprob": -0.2823623222640798, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0005516602541320026}, {"id": 32, "seek": 24052, "start": 249.44, "end": 255.94, "text": " they would go in here. The hash is generated by a webpack at that point. We have a runtime", "tokens": [50810, 436, 576, 352, 294, 510, 13, 440, 22019, 307, 10833, 538, 257, 3670, 9539, 412, 300, 935, 13, 492, 362, 257, 34474, 51135], "temperature": 0.0, "avg_logprob": -0.2823623222640798, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0005516602541320026}, {"id": 33, "seek": 24052, "start": 255.94, "end": 262.94, "text": " file that contains the Angular runtime that is that those parts Angular needs to pass", "tokens": [51135, 3991, 300, 8306, 264, 34107, 34474, 300, 307, 300, 729, 3166, 34107, 2203, 281, 1320, 51485], "temperature": 0.0, "avg_logprob": -0.2823623222640798, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0005516602541320026}, {"id": 34, "seek": 24052, "start": 264.36, "end": 269.84000000000003, "text": " the template and manage the dependency injection and everything. Mostly not interesting from", "tokens": [51556, 264, 12379, 293, 3067, 264, 33621, 22873, 293, 1203, 13, 29035, 406, 1880, 490, 51830], "temperature": 0.0, "avg_logprob": -0.2823623222640798, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0005516602541320026}, {"id": 35, "seek": 26984, "start": 269.84, "end": 276.84, "text": " what we are interested in. We have polyfills that contain something like the zones, certain", "tokens": [50364, 437, 321, 366, 3102, 294, 13, 492, 362, 6754, 69, 2565, 300, 5304, 746, 411, 264, 16025, 11, 1629, 50714], "temperature": 0.0, "avg_logprob": -0.2650608735926011, "compression_ratio": 1.511111111111111, "no_speech_prob": 0.000813342456240207}, {"id": 36, "seek": 26984, "start": 277.47999999999996, "end": 284.47999999999996, "text": " promises features as polyfills, so if some browser doesn't support it, it gets added", "tokens": [50746, 16403, 4122, 382, 6754, 69, 2565, 11, 370, 498, 512, 11185, 1177, 380, 1406, 309, 11, 309, 2170, 3869, 51096], "temperature": 0.0, "avg_logprob": -0.2650608735926011, "compression_ratio": 1.511111111111111, "no_speech_prob": 0.000813342456240207}, {"id": 37, "seek": 26984, "start": 284.47999999999996, "end": 291.47999999999996, "text": " to the global namespace, and we have the main file, which is mainly what we as an app developer", "tokens": [51096, 281, 264, 4338, 5288, 17940, 11, 293, 321, 362, 264, 2135, 3991, 11, 597, 307, 8704, 437, 321, 382, 364, 724, 10754, 51446], "temperature": 0.0, "avg_logprob": -0.2650608735926011, "compression_ratio": 1.511111111111111, "no_speech_prob": 0.000813342456240207}, {"id": 38, "seek": 29148, "start": 292.48, "end": 299.48, "text": " wrote, but also some boilerplate code for example for RHS or some other template parsing elements.", "tokens": [50414, 4114, 11, 457, 611, 512, 39228, 37008, 3089, 337, 1365, 337, 497, 12527, 420, 512, 661, 12379, 21156, 278, 4959, 13, 50764], "temperature": 0.0, "avg_logprob": -0.3157896598180135, "compression_ratio": 1.4015151515151516, "no_speech_prob": 0.00036703754449263215}, {"id": 39, "seek": 29148, "start": 303.56, "end": 310.56, "text": " So what's the case right now? I looked at the routing file, the routing module, that's", "tokens": [50968, 407, 437, 311, 264, 1389, 558, 586, 30, 286, 2956, 412, 264, 32722, 3991, 11, 264, 32722, 10088, 11, 300, 311, 51318], "temperature": 0.0, "avg_logprob": -0.3157896598180135, "compression_ratio": 1.4015151515151516, "no_speech_prob": 0.00036703754449263215}, {"id": 40, "seek": 31056, "start": 311.12, "end": 318.12, "text": " how it's generated by Angular, and we are mainly interested in that routes variable over here.", "tokens": [50392, 577, 309, 311, 10833, 538, 34107, 11, 293, 321, 366, 8704, 3102, 294, 300, 18242, 7006, 670, 510, 13, 50742], "temperature": 0.0, "avg_logprob": -0.2814814640925481, "compression_ratio": 1.5747126436781609, "no_speech_prob": 0.00022664954303763807}, {"id": 41, "seek": 31056, "start": 325.2, "end": 330.28, "text": " So I looked up what is the type strip definition for a route that's not complete, it's just", "tokens": [51096, 407, 286, 2956, 493, 437, 307, 264, 2010, 12828, 7123, 337, 257, 7955, 300, 311, 406, 3566, 11, 309, 311, 445, 51350], "temperature": 0.0, "avg_logprob": -0.2814814640925481, "compression_ratio": 1.5747126436781609, "no_speech_prob": 0.00022664954303763807}, {"id": 42, "seek": 31056, "start": 330.28, "end": 337.28, "text": " a partial of it. We are mainly interested in those properties pass, especially the pass", "tokens": [51350, 257, 14641, 295, 309, 13, 492, 366, 8704, 3102, 294, 729, 7221, 1320, 11, 2318, 264, 1320, 51700], "temperature": 0.0, "avg_logprob": -0.2814814640925481, "compression_ratio": 1.5747126436781609, "no_speech_prob": 0.00022664954303763807}, {"id": 43, "seek": 33728, "start": 337.96, "end": 344.96, "text": " and the component, which is basically used if you don't use child routes or just have", "tokens": [50398, 293, 264, 6542, 11, 597, 307, 1936, 1143, 498, 291, 500, 380, 764, 1440, 18242, 420, 445, 362, 50748], "temperature": 0.0, "avg_logprob": -0.2817895942264133, "compression_ratio": 1.5085714285714287, "no_speech_prob": 0.00037884412449784577}, {"id": 44, "seek": 33728, "start": 346.0, "end": 353.0, "text": " a mapping from a pass segment to a component, but that's also helpful to have RyderX, it's", "tokens": [50800, 257, 18350, 490, 257, 1320, 9469, 281, 257, 6542, 11, 457, 300, 311, 611, 4961, 281, 362, 13654, 1068, 55, 11, 309, 311, 51150], "temperature": 0.0, "avg_logprob": -0.2817895942264133, "compression_ratio": 1.5085714285714287, "no_speech_prob": 0.00037884412449784577}, {"id": 45, "seek": 33728, "start": 353.08, "end": 360.08, "text": " also something you will add early on to have a catch all route or RyderX to a 404 page.", "tokens": [51154, 611, 746, 291, 486, 909, 2440, 322, 281, 362, 257, 3745, 439, 7955, 420, 13654, 1068, 55, 281, 257, 3356, 19, 3028, 13, 51504], "temperature": 0.0, "avg_logprob": -0.2817895942264133, "compression_ratio": 1.5085714285714287, "no_speech_prob": 0.00037884412449784577}, {"id": 46, "seek": 36008, "start": 360.59999999999997, "end": 367.59999999999997, "text": " What is interesting for this presentation is also the children property, which is another", "tokens": [50390, 708, 307, 1880, 337, 341, 5860, 307, 611, 264, 2227, 4707, 11, 597, 307, 1071, 50740], "temperature": 0.0, "avg_logprob": -0.2538535056575652, "compression_ratio": 1.6058823529411765, "no_speech_prob": 0.0014744802610948682}, {"id": 47, "seek": 36008, "start": 368.59999999999997, "end": 375.59999999999997, "text": " area of routes, and load children, which is used for lazy loading other route segments,", "tokens": [50790, 1859, 295, 18242, 11, 293, 3677, 2227, 11, 597, 307, 1143, 337, 14847, 15114, 661, 7955, 19904, 11, 51140], "temperature": 0.0, "avg_logprob": -0.2538535056575652, "compression_ratio": 1.6058823529411765, "no_speech_prob": 0.0014744802610948682}, {"id": 48, "seek": 36008, "start": 379.0, "end": 386.0, "text": " so you can activate in front of it to guard it, that means you have some check if the currently", "tokens": [51310, 370, 291, 393, 13615, 294, 1868, 295, 309, 281, 6290, 309, 11, 300, 1355, 291, 362, 512, 1520, 498, 264, 4362, 51660], "temperature": 0.0, "avg_logprob": -0.2538535056575652, "compression_ratio": 1.6058823529411765, "no_speech_prob": 0.0014744802610948682}, {"id": 49, "seek": 38600, "start": 386.56, "end": 393.56, "text": " user allowed to access that route. If you then load into what is produced by Angular,", "tokens": [50392, 4195, 4350, 281, 2105, 300, 7955, 13, 759, 291, 550, 3677, 666, 437, 307, 7126, 538, 34107, 11, 50742], "temperature": 0.0, "avg_logprob": -0.27828191941784275, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.0004717440460808575}, {"id": 50, "seek": 38600, "start": 395.96, "end": 401.48, "text": " you get some Java profile and can look for something with ng generate component, because", "tokens": [50862, 291, 483, 512, 10745, 7964, 293, 393, 574, 337, 746, 365, 6415, 8460, 6542, 11, 570, 51138], "temperature": 0.0, "avg_logprob": -0.27828191941784275, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.0004717440460808575}, {"id": 51, "seek": 38600, "start": 401.48, "end": 408.48, "text": " that's part of the index HTML that gets generated, and that's the main app component that gets", "tokens": [51138, 300, 311, 644, 295, 264, 8186, 17995, 300, 2170, 10833, 11, 293, 300, 311, 264, 2135, 724, 6542, 300, 2170, 51488], "temperature": 0.0, "avg_logprob": -0.27828191941784275, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.0004717440460808575}, {"id": 52, "seek": 40848, "start": 408.48, "end": 415.48, "text": " generated by the boilerplate code, and that's the entry point above that line, it's Java", "tokens": [50364, 10833, 538, 264, 39228, 37008, 3089, 11, 293, 300, 311, 264, 8729, 935, 3673, 300, 1622, 11, 309, 311, 10745, 50714], "temperature": 0.0, "avg_logprob": -0.3304407623992569, "compression_ratio": 1.6777251184834123, "no_speech_prob": 0.00045721244532614946}, {"id": 53, "seek": 40848, "start": 418.76, "end": 424.76, "text": " webpack boilerplate code, so you can just ignore it for now. Below that is that what", "tokens": [50878, 3670, 9539, 39228, 37008, 3089, 11, 370, 291, 393, 445, 11200, 309, 337, 586, 13, 36261, 300, 307, 300, 437, 51178], "temperature": 0.0, "avg_logprob": -0.3304407623992569, "compression_ratio": 1.6777251184834123, "no_speech_prob": 0.00045721244532614946}, {"id": 54, "seek": 40848, "start": 424.76, "end": 431.76, "text": " you as an author wrote. Next, I created some components a patient found, I thought about", "tokens": [51178, 291, 382, 364, 3793, 4114, 13, 3087, 11, 286, 2942, 512, 6677, 257, 4537, 1352, 11, 286, 1194, 466, 51528], "temperature": 0.0, "avg_logprob": -0.3304407623992569, "compression_ratio": 1.6777251184834123, "no_speech_prob": 0.00045721244532614946}, {"id": 55, "seek": 40848, "start": 433.16, "end": 437.44, "text": " two more components, for example, the speaker component and the slides component, and let's", "tokens": [51598, 732, 544, 6677, 11, 337, 1365, 11, 264, 8145, 6542, 293, 264, 9788, 6542, 11, 293, 718, 311, 51812], "temperature": 0.0, "avg_logprob": -0.3304407623992569, "compression_ratio": 1.6777251184834123, "no_speech_prob": 0.00045721244532614946}, {"id": 56, "seek": 43744, "start": 437.48, "end": 443.52, "text": " say we want to protect the speaker component for some reason, if you then generate a new", "tokens": [50366, 584, 321, 528, 281, 2371, 264, 8145, 6542, 337, 512, 1778, 11, 498, 291, 550, 8460, 257, 777, 50668], "temperature": 0.0, "avg_logprob": -0.20131023893965053, "compression_ratio": 1.6495327102803738, "no_speech_prob": 0.00032951062894426286}, {"id": 57, "seek": 43744, "start": 443.52, "end": 449.64, "text": " build, you will see no other changes to it, so it's identically why, because the build", "tokens": [50668, 1322, 11, 291, 486, 536, 572, 661, 2962, 281, 309, 11, 370, 309, 311, 2473, 984, 983, 11, 570, 264, 1322, 50974], "temperature": 0.0, "avg_logprob": -0.20131023893965053, "compression_ratio": 1.6495327102803738, "no_speech_prob": 0.00032951062894426286}, {"id": 58, "seek": 43744, "start": 449.64, "end": 455.2, "text": " gets reshaken by a webpack, that means that if you don't load those components, they will", "tokens": [50974, 2170, 725, 71, 9846, 538, 257, 3670, 9539, 11, 300, 1355, 300, 498, 291, 500, 380, 3677, 729, 6677, 11, 436, 486, 51252], "temperature": 0.0, "avg_logprob": -0.20131023893965053, "compression_ratio": 1.6495327102803738, "no_speech_prob": 0.00032951062894426286}, {"id": 59, "seek": 43744, "start": 455.2, "end": 462.2, "text": " not be part of the build. Let's include them then, we want to have them as routes, so I", "tokens": [51252, 406, 312, 644, 295, 264, 1322, 13, 961, 311, 4090, 552, 550, 11, 321, 528, 281, 362, 552, 382, 18242, 11, 370, 286, 51602], "temperature": 0.0, "avg_logprob": -0.20131023893965053, "compression_ratio": 1.6495327102803738, "no_speech_prob": 0.00032951062894426286}, {"id": 60, "seek": 46220, "start": 463.2, "end": 470.2, "text": " extend the routing module, declare a route for the slides and for the speakers, right", "tokens": [50414, 10101, 264, 32722, 10088, 11, 19710, 257, 7955, 337, 264, 9788, 293, 337, 264, 9518, 11, 558, 50764], "temperature": 0.0, "avg_logprob": -0.2841537793477376, "compression_ratio": 1.5491329479768785, "no_speech_prob": 0.0012216769391670823}, {"id": 61, "seek": 46220, "start": 472.4, "end": 479.4, "text": " now just without children, therefore I also have to import them. I added the imports because", "tokens": [50874, 586, 445, 1553, 2227, 11, 4412, 286, 611, 362, 281, 974, 552, 13, 286, 3869, 264, 41596, 570, 51224], "temperature": 0.0, "avg_logprob": -0.2841537793477376, "compression_ratio": 1.5491329479768785, "no_speech_prob": 0.0012216769391670823}, {"id": 62, "seek": 46220, "start": 479.91999999999996, "end": 486.28, "text": " when I look at Angular documentation, I often find that the documentation isn't complete,", "tokens": [51250, 562, 286, 574, 412, 34107, 14333, 11, 286, 2049, 915, 300, 264, 14333, 1943, 380, 3566, 11, 51568], "temperature": 0.0, "avg_logprob": -0.2841537793477376, "compression_ratio": 1.5491329479768785, "no_speech_prob": 0.0012216769391670823}, {"id": 63, "seek": 48628, "start": 486.28, "end": 493.28, "text": " which is a bummer, so if you want to reproduce it yourself, I give you the necessary hints", "tokens": [50364, 597, 307, 257, 13309, 936, 11, 370, 498, 291, 528, 281, 29501, 309, 1803, 11, 286, 976, 291, 264, 4818, 27271, 50714], "temperature": 0.0, "avg_logprob": -0.2417463120960054, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.000655074545647949}, {"id": 64, "seek": 48628, "start": 494.28, "end": 501.28, "text": " to follow along. So I added that route, I just re-run the Angular build command and", "tokens": [50764, 281, 1524, 2051, 13, 407, 286, 3869, 300, 7955, 11, 286, 445, 319, 12, 12997, 264, 34107, 1322, 5622, 293, 51114], "temperature": 0.0, "avg_logprob": -0.2417463120960054, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.000655074545647949}, {"id": 65, "seek": 48628, "start": 503.2, "end": 509.2, "text": " gbuild and look into the results and then, for example, I see that the JavaScript now", "tokens": [51210, 290, 11516, 293, 574, 666, 264, 3542, 293, 550, 11, 337, 1365, 11, 286, 536, 300, 264, 15778, 586, 51510], "temperature": 0.0, "avg_logprob": -0.2417463120960054, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.000655074545647949}, {"id": 66, "seek": 48628, "start": 509.2, "end": 516.1999999999999, "text": " contains some more lines, the variable names or identifiers might change because Angular", "tokens": [51510, 8306, 512, 544, 3876, 11, 264, 7006, 5288, 420, 2473, 23463, 1062, 1319, 570, 34107, 51860], "temperature": 0.0, "avg_logprob": -0.2417463120960054, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.000655074545647949}, {"id": 67, "seek": 51628, "start": 516.28, "end": 520.8, "text": " on repack is mainly in the variables, but it has something like this structure, for", "tokens": [50364, 322, 1085, 501, 307, 8704, 294, 264, 9102, 11, 457, 309, 575, 746, 411, 341, 3877, 11, 337, 50590], "temperature": 0.0, "avg_logprob": -0.3252668845944288, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.00024064940225798637}, {"id": 68, "seek": 51628, "start": 520.8, "end": 527.3199999999999, "text": " example, for the slides or directly below the speakers, so that's what Angular makes", "tokens": [50590, 1365, 11, 337, 264, 9788, 420, 3838, 2507, 264, 9518, 11, 370, 300, 311, 437, 34107, 1669, 50916], "temperature": 0.0, "avg_logprob": -0.3252668845944288, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.00024064940225798637}, {"id": 69, "seek": 51628, "start": 527.3199999999999, "end": 534.3199999999999, "text": " out of your route definition. We also have a mapping from the path to the components,", "tokens": [50916, 484, 295, 428, 7955, 7123, 13, 492, 611, 362, 257, 18350, 490, 264, 3100, 281, 264, 6677, 11, 51266], "temperature": 0.0, "avg_logprob": -0.3252668845944288, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.00024064940225798637}, {"id": 70, "seek": 51628, "start": 534.36, "end": 540.48, "text": " the components where the function calls before and that's how you can read it. So if you", "tokens": [51268, 264, 6677, 689, 264, 2445, 5498, 949, 293, 300, 311, 577, 291, 393, 1401, 309, 13, 407, 498, 291, 51574], "temperature": 0.0, "avg_logprob": -0.3252668845944288, "compression_ratio": 1.573394495412844, "no_speech_prob": 0.00024064940225798637}, {"id": 71, "seek": 54048, "start": 540.5600000000001, "end": 547.5600000000001, "text": " are a security researcher, that is what you would look at and try to make sense of it.", "tokens": [50368, 366, 257, 3825, 21751, 11, 300, 307, 437, 291, 576, 574, 412, 293, 853, 281, 652, 2020, 295, 309, 13, 50718], "temperature": 0.0, "avg_logprob": -0.26273488326811456, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0001632347994018346}, {"id": 72, "seek": 54048, "start": 548.36, "end": 554.36, "text": " I feel it's helpful to have, okay, we have the result now, how would I translate it back?", "tokens": [50758, 286, 841, 309, 311, 4961, 281, 362, 11, 1392, 11, 321, 362, 264, 1874, 586, 11, 577, 576, 286, 13799, 309, 646, 30, 51058], "temperature": 0.0, "avg_logprob": -0.26273488326811456, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0001632347994018346}, {"id": 73, "seek": 54048, "start": 554.36, "end": 561.36, "text": " Reverse engineer, so to speak. So the next thing we can add is general catch all paths", "tokens": [51058, 26314, 405, 11403, 11, 370, 281, 1710, 13, 407, 264, 958, 551, 321, 393, 909, 307, 2674, 3745, 439, 14518, 51408], "temperature": 0.0, "avg_logprob": -0.26273488326811456, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0001632347994018346}, {"id": 74, "seek": 56136, "start": 561.48, "end": 568.48, "text": " that redirects to the slides page to some kind of landing page or index page or for everything", "tokens": [50370, 300, 29066, 82, 281, 264, 9788, 3028, 281, 512, 733, 295, 11202, 3028, 420, 8186, 3028, 420, 337, 1203, 50720], "temperature": 0.0, "avg_logprob": -0.24048882997952975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 0.0003510064852889627}, {"id": 75, "seek": 56136, "start": 571.48, "end": 578.48, "text": " else that can't be mapped, we have a page not found component. So now I want to go into", "tokens": [50870, 1646, 300, 393, 380, 312, 33318, 11, 321, 362, 257, 3028, 406, 1352, 6542, 13, 407, 586, 286, 528, 281, 352, 666, 51220], "temperature": 0.0, "avg_logprob": -0.24048882997952975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 0.0003510064852889627}, {"id": 76, "seek": 56136, "start": 583.96, "end": 590.96, "text": " more details about how I would actually see the components that I had and the index that", "tokens": [51494, 544, 4365, 466, 577, 286, 576, 767, 536, 264, 6677, 300, 286, 632, 293, 264, 8186, 300, 51844], "temperature": 0.0, "avg_logprob": -0.24048882997952975, "compression_ratio": 1.5664739884393064, "no_speech_prob": 0.0003510064852889627}, {"id": 77, "seek": 59136, "start": 591.44, "end": 597.32, "text": " the component HTML really bloated and it tells you with an HTML command that you can drop", "tokens": [50368, 264, 6542, 17995, 534, 1749, 770, 293, 309, 5112, 291, 365, 364, 17995, 5622, 300, 291, 393, 3270, 50662], "temperature": 0.0, "avg_logprob": -0.3837346315383911, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00042254384607076645}, {"id": 78, "seek": 59136, "start": 597.32, "end": 602.32, "text": " certain paths and if you just remove everything within that diff container with the road", "tokens": [50662, 1629, 14518, 293, 498, 291, 445, 4159, 1203, 1951, 300, 7593, 10129, 365, 264, 3060, 50912], "temperature": 0.0, "avg_logprob": -0.3837346315383911, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00042254384607076645}, {"id": 79, "seek": 59136, "start": 602.32, "end": 607.32, "text": " of main, with something more semantically, you could actually see, okay, what's happening", "tokens": [50912, 295, 2135, 11, 365, 746, 544, 4361, 49505, 11, 291, 727, 767, 536, 11, 1392, 11, 437, 311, 2737, 51162], "temperature": 0.0, "avg_logprob": -0.3837346315383911, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00042254384607076645}, {"id": 80, "seek": 59136, "start": 607.32, "end": 614.32, "text": " here. So now we have updated our component. Now we have updated our component. Now we", "tokens": [51162, 510, 13, 407, 586, 321, 362, 10588, 527, 6542, 13, 823, 321, 362, 10588, 527, 6542, 13, 823, 321, 51512], "temperature": 0.0, "avg_logprob": -0.3837346315383911, "compression_ratio": 1.7352941176470589, "no_speech_prob": 0.00042254384607076645}, {"id": 81, "seek": 62136, "start": 621.36, "end": 628.36, "text": " have our own HTML and I can look into the guarding and into defining child routes and", "tokens": [50364, 362, 527, 1065, 17995, 293, 286, 393, 574, 666, 264, 44077, 293, 666, 17827, 1440, 18242, 293, 50714], "temperature": 0.0, "avg_logprob": -0.2406727373600006, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0019526388496160507}, {"id": 82, "seek": 62136, "start": 631.88, "end": 638.88, "text": " I would like to have some kind of model. So I'm going with a template-driven form here.", "tokens": [50890, 286, 576, 411, 281, 362, 512, 733, 295, 2316, 13, 407, 286, 478, 516, 365, 257, 12379, 12, 25456, 1254, 510, 13, 51240], "temperature": 0.0, "avg_logprob": -0.2406727373600006, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0019526388496160507}, {"id": 83, "seek": 62136, "start": 643.44, "end": 650.12, "text": " It might also be possible to use a reactive form, but most of the Angular applications", "tokens": [51468, 467, 1062, 611, 312, 1944, 281, 764, 257, 28897, 1254, 11, 457, 881, 295, 264, 34107, 5821, 51802], "temperature": 0.0, "avg_logprob": -0.2406727373600006, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0019526388496160507}, {"id": 84, "seek": 65012, "start": 650.16, "end": 655.68, "text": " I worked with use the template-driven form, so I'm more familiar with that. And just", "tokens": [50366, 286, 2732, 365, 764, 264, 12379, 12, 25456, 1254, 11, 370, 286, 478, 544, 4963, 365, 300, 13, 400, 445, 50642], "temperature": 0.0, "avg_logprob": -0.28475861216700354, "compression_ratio": 1.5758928571428572, "no_speech_prob": 0.00020297191804274917}, {"id": 85, "seek": 65012, "start": 655.68, "end": 660.84, "text": " defined a model here. It's called auth with some string that is used as password. It's", "tokens": [50642, 7642, 257, 2316, 510, 13, 467, 311, 1219, 6979, 365, 512, 6798, 300, 307, 1143, 382, 11524, 13, 467, 311, 50900], "temperature": 0.0, "avg_logprob": -0.28475861216700354, "compression_ratio": 1.5758928571428572, "no_speech_prob": 0.00020297191804274917}, {"id": 86, "seek": 65012, "start": 660.84, "end": 667.84, "text": " just for demonstration purposes. You wouldn't use this kind in actual application, I hope.", "tokens": [50900, 445, 337, 16520, 9932, 13, 509, 2759, 380, 764, 341, 733, 294, 3539, 3861, 11, 286, 1454, 13, 51250], "temperature": 0.0, "avg_logprob": -0.28475861216700354, "compression_ratio": 1.5758928571428572, "no_speech_prob": 0.00020297191804274917}, {"id": 87, "seek": 65012, "start": 671.96, "end": 677.04, "text": " Now we have defined it in the components part. We should also update the template and here", "tokens": [51456, 823, 321, 362, 7642, 309, 294, 264, 6677, 644, 13, 492, 820, 611, 5623, 264, 12379, 293, 510, 51710], "temperature": 0.0, "avg_logprob": -0.28475861216700354, "compression_ratio": 1.5758928571428572, "no_speech_prob": 0.00020297191804274917}, {"id": 88, "seek": 67704, "start": 677.12, "end": 684.12, "text": " it's like I removed that speaker work and replaced it with some basic HTML. Still no", "tokens": [50368, 309, 311, 411, 286, 7261, 300, 8145, 589, 293, 10772, 309, 365, 512, 3875, 17995, 13, 8291, 572, 50718], "temperature": 0.0, "avg_logprob": -0.41943261789721115, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0009076782735064626}, {"id": 89, "seek": 67704, "start": 684.4, "end": 691.4, "text": " styling because that's not relevant for what I'm doing here. I added a form element and", "tokens": [50732, 27944, 570, 300, 311, 406, 7340, 337, 437, 286, 478, 884, 510, 13, 286, 3869, 257, 1254, 4478, 293, 51082], "temperature": 0.0, "avg_logprob": -0.41943261789721115, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0009076782735064626}, {"id": 90, "seek": 67704, "start": 691.64, "end": 698.64, "text": " basic here and input and to demonstrate, okay, we have something working here. I show the", "tokens": [51094, 3875, 510, 293, 4846, 293, 281, 11698, 11, 1392, 11, 321, 362, 746, 1364, 510, 13, 286, 855, 264, 51444], "temperature": 0.0, "avg_logprob": -0.41943261789721115, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0009076782735064626}, {"id": 91, "seek": 67704, "start": 698.64, "end": 705.64, "text": " link to the access to the slide subpath once a form is valid. And here we have a template", "tokens": [51444, 2113, 281, 264, 2105, 281, 264, 4137, 1422, 31852, 1564, 257, 1254, 307, 7363, 13, 400, 510, 321, 362, 257, 12379, 51794], "temperature": 0.0, "avg_logprob": -0.41943261789721115, "compression_ratio": 1.5855855855855856, "no_speech_prob": 0.0009076782735064626}, {"id": 92, "seek": 70704, "start": 708.04, "end": 715.04, "text": " here with a type of password. So the browser is using that obfuscation with dots or stars", "tokens": [50414, 510, 365, 257, 2010, 295, 11524, 13, 407, 264, 11185, 307, 1228, 300, 1111, 69, 32601, 399, 365, 15026, 420, 6105, 50764], "temperature": 0.0, "avg_logprob": -0.2302030603936378, "compression_ratio": 1.669767441860465, "no_speech_prob": 0.00010865733202081174}, {"id": 93, "seek": 70704, "start": 715.3199999999999, "end": 722.3199999999999, "text": " or what have you. And you have a model that's helpful for Angular as well. So it's a two-way", "tokens": [50778, 420, 437, 362, 291, 13, 400, 291, 362, 257, 2316, 300, 311, 4961, 337, 34107, 382, 731, 13, 407, 309, 311, 257, 732, 12, 676, 51128], "temperature": 0.0, "avg_logprob": -0.2302030603936378, "compression_ratio": 1.669767441860465, "no_speech_prob": 0.00010865733202081174}, {"id": 94, "seek": 70704, "start": 722.64, "end": 729.64, "text": " data binding. And once it's valid, you get access to that anchor. So last thing you should", "tokens": [51144, 1412, 17359, 13, 400, 1564, 309, 311, 7363, 11, 291, 483, 2105, 281, 300, 18487, 13, 407, 1036, 551, 291, 820, 51494], "temperature": 0.0, "avg_logprob": -0.2302030603936378, "compression_ratio": 1.669767441860465, "no_speech_prob": 0.00010865733202081174}, {"id": 95, "seek": 70704, "start": 730.7199999999999, "end": 735.7199999999999, "text": " have is because when you have child routes, you should have a route outlet that tells", "tokens": [51548, 362, 307, 570, 562, 291, 362, 1440, 18242, 11, 291, 820, 362, 257, 7955, 20656, 300, 5112, 51798], "temperature": 0.0, "avg_logprob": -0.2302030603936378, "compression_ratio": 1.669767441860465, "no_speech_prob": 0.00010865733202081174}, {"id": 96, "seek": 73572, "start": 735.72, "end": 742.72, "text": " Angular where to display that child route. So now we have updated the template. The next", "tokens": [50364, 34107, 689, 281, 4674, 300, 1440, 7955, 13, 407, 586, 321, 362, 10588, 264, 12379, 13, 440, 958, 50714], "temperature": 0.0, "avg_logprob": -0.21311461925506592, "compression_ratio": 1.5317919075144508, "no_speech_prob": 0.00010060196655103937}, {"id": 97, "seek": 73572, "start": 744.5600000000001, "end": 751.5600000000001, "text": " step will be to also update the route definition. So back to the routing module. I extended", "tokens": [50806, 1823, 486, 312, 281, 611, 5623, 264, 7955, 7123, 13, 407, 646, 281, 264, 32722, 10088, 13, 286, 10913, 51156], "temperature": 0.0, "avg_logprob": -0.21311461925506592, "compression_ratio": 1.5317919075144508, "no_speech_prob": 0.00010060196655103937}, {"id": 98, "seek": 73572, "start": 753.44, "end": 760.44, "text": " that speaker route. It's now not having a mapping from past component, but it's also", "tokens": [51250, 300, 8145, 7955, 13, 467, 311, 586, 406, 1419, 257, 18350, 490, 1791, 6542, 11, 457, 309, 311, 611, 51600], "temperature": 0.0, "avg_logprob": -0.21311461925506592, "compression_ratio": 1.5317919075144508, "no_speech_prob": 0.00010060196655103937}, {"id": 99, "seek": 76044, "start": 760.8800000000001, "end": 767.8800000000001, "text": " declared, okay, we have some child components here in this application. It would be slash", "tokens": [50386, 15489, 11, 1392, 11, 321, 362, 512, 1440, 6677, 510, 294, 341, 3861, 13, 467, 576, 312, 17330, 50736], "temperature": 0.0, "avg_logprob": -0.26673791522071477, "compression_ratio": 1.795, "no_speech_prob": 0.0002776429464574903}, {"id": 100, "seek": 76044, "start": 768.08, "end": 773.8800000000001, "text": " speaker slash slide to access that child component. It's still rendering the parent, the speaker", "tokens": [50746, 8145, 17330, 4137, 281, 2105, 300, 1440, 6542, 13, 467, 311, 920, 22407, 264, 2596, 11, 264, 8145, 51036], "temperature": 0.0, "avg_logprob": -0.26673791522071477, "compression_ratio": 1.795, "no_speech_prob": 0.0002776429464574903}, {"id": 101, "seek": 76044, "start": 773.8800000000001, "end": 780.8800000000001, "text": " component, but also the slide component in the route outlet. So at that point, it will", "tokens": [51036, 6542, 11, 457, 611, 264, 4137, 6542, 294, 264, 7955, 20656, 13, 407, 412, 300, 935, 11, 309, 486, 51386], "temperature": 0.0, "avg_logprob": -0.26673791522071477, "compression_ratio": 1.795, "no_speech_prob": 0.0002776429464574903}, {"id": 102, "seek": 76044, "start": 782.84, "end": 789.84, "text": " still be possible to look at the bundle and see, okay, we can animate, we can animate", "tokens": [51484, 920, 312, 1944, 281, 574, 412, 264, 24438, 293, 536, 11, 1392, 11, 321, 393, 36439, 11, 321, 393, 36439, 51834], "temperature": 0.0, "avg_logprob": -0.26673791522071477, "compression_ratio": 1.795, "no_speech_prob": 0.0002776429464574903}, {"id": 103, "seek": 79044, "start": 790.6, "end": 796.08, "text": " every route in the application. So as a security researcher, I know, okay, this is the places", "tokens": [50372, 633, 7955, 294, 264, 3861, 13, 407, 382, 257, 3825, 21751, 11, 286, 458, 11, 1392, 11, 341, 307, 264, 3190, 50646], "temperature": 0.0, "avg_logprob": -0.15631366330523824, "compression_ratio": 1.6090909090909091, "no_speech_prob": 0.0001439554471289739}, {"id": 104, "seek": 79044, "start": 796.08, "end": 803.08, "text": " I have to look at and check for security. Going more into protecting the thing, the first", "tokens": [50646, 286, 362, 281, 574, 412, 293, 1520, 337, 3825, 13, 10963, 544, 666, 12316, 264, 551, 11, 264, 700, 50996], "temperature": 0.0, "avg_logprob": -0.15631366330523824, "compression_ratio": 1.6090909090909091, "no_speech_prob": 0.0001439554471289739}, {"id": 105, "seek": 79044, "start": 803.6, "end": 809.6, "text": " thing I would do is defining a new route for the speaker module because that's part of", "tokens": [51022, 551, 286, 576, 360, 307, 17827, 257, 777, 7955, 337, 264, 8145, 10088, 570, 300, 311, 644, 295, 51322], "temperature": 0.0, "avg_logprob": -0.15631366330523824, "compression_ratio": 1.6090909090909091, "no_speech_prob": 0.0001439554471289739}, {"id": 106, "seek": 79044, "start": 809.6, "end": 816.6, "text": " the application I want to protect. Angular CLI offers you a new way to generate the", "tokens": [51322, 264, 3861, 286, 528, 281, 2371, 13, 34107, 12855, 40, 7736, 291, 257, 777, 636, 281, 8460, 264, 51672], "temperature": 0.0, "avg_logprob": -0.15631366330523824, "compression_ratio": 1.6090909090909091, "no_speech_prob": 0.0001439554471289739}, {"id": 107, "seek": 81660, "start": 817.6, "end": 824.6, "text": " boilerplate for that as well with the ng-generate module, which is the name of the module. I", "tokens": [50414, 39228, 37008, 337, 300, 382, 731, 365, 264, 6415, 12, 21848, 473, 10088, 11, 597, 307, 264, 1315, 295, 264, 10088, 13, 286, 50764], "temperature": 0.0, "avg_logprob": -0.2706530322767284, "compression_ratio": 1.7307692307692308, "no_speech_prob": 0.0001763078907970339}, {"id": 108, "seek": 81660, "start": 824.8000000000001, "end": 831.8000000000001, "text": " want to have a router as well, and I want to have it as a sub-module of app module. Once", "tokens": [50774, 528, 281, 362, 257, 22492, 382, 731, 11, 293, 286, 528, 281, 362, 309, 382, 257, 1422, 12, 8014, 2271, 295, 724, 10088, 13, 3443, 51124], "temperature": 0.0, "avg_logprob": -0.2706530322767284, "compression_ratio": 1.7307692307692308, "no_speech_prob": 0.0001763078907970339}, {"id": 109, "seek": 81660, "start": 832.48, "end": 839.48, "text": " that speaker routing module is defined, you can update the routing module of the app and", "tokens": [51158, 300, 8145, 32722, 10088, 307, 7642, 11, 291, 393, 5623, 264, 32722, 10088, 295, 264, 724, 293, 51508], "temperature": 0.0, "avg_logprob": -0.2706530322767284, "compression_ratio": 1.7307692307692308, "no_speech_prob": 0.0001763078907970339}, {"id": 110, "seek": 83948, "start": 840.48, "end": 847.48, "text": " replace everything with your head there with just the path and then tell it to lazy load", "tokens": [50414, 7406, 1203, 365, 428, 1378, 456, 365, 445, 264, 3100, 293, 550, 980, 309, 281, 14847, 3677, 50764], "temperature": 0.0, "avg_logprob": -0.2834547069710745, "compression_ratio": 1.654320987654321, "no_speech_prob": 0.0019825941417366266}, {"id": 111, "seek": 83948, "start": 848.48, "end": 855.48, "text": " the speaker module. I will get to that in a minute, later on. So now I lazy load the whole", "tokens": [50814, 264, 8145, 10088, 13, 286, 486, 483, 281, 300, 294, 257, 3456, 11, 1780, 322, 13, 407, 586, 286, 14847, 3677, 264, 1379, 51164], "temperature": 0.0, "avg_logprob": -0.2834547069710745, "compression_ratio": 1.654320987654321, "no_speech_prob": 0.0019825941417366266}, {"id": 112, "seek": 83948, "start": 859.48, "end": 866.48, "text": " speaker module, and I have to redo the slide sub-path there. So I go into that, load the", "tokens": [51364, 8145, 10088, 11, 293, 286, 362, 281, 29956, 264, 4137, 1422, 12, 31852, 456, 13, 407, 286, 352, 666, 300, 11, 3677, 264, 51714], "temperature": 0.0, "avg_logprob": -0.2834547069710745, "compression_ratio": 1.654320987654321, "no_speech_prob": 0.0019825941417366266}, {"id": 113, "seek": 86648, "start": 867.48, "end": 874.48, "text": " slides component, and okay, I want to have the slides module as a sub-component of the", "tokens": [50414, 9788, 6542, 11, 293, 1392, 11, 286, 528, 281, 362, 264, 9788, 10088, 382, 257, 1422, 12, 21541, 30365, 295, 264, 50764], "temperature": 0.0, "avg_logprob": -0.19601961282583383, "compression_ratio": 1.7032258064516128, "no_speech_prob": 0.00016573032189626247}, {"id": 114, "seek": 86648, "start": 877.48, "end": 883.48, "text": " speaker module, and the path for the speaker module is here, is an empty string because", "tokens": [50914, 8145, 10088, 11, 293, 264, 3100, 337, 264, 8145, 10088, 307, 510, 11, 307, 364, 6707, 6798, 570, 51214], "temperature": 0.0, "avg_logprob": -0.19601961282583383, "compression_ratio": 1.7032258064516128, "no_speech_prob": 0.00016573032189626247}, {"id": 115, "seek": 86648, "start": 883.48, "end": 890.48, "text": " I already am in the speaker path from the parent component. It's also important to remove", "tokens": [51214, 286, 1217, 669, 294, 264, 8145, 3100, 490, 264, 2596, 6542, 13, 467, 311, 611, 1021, 281, 4159, 51564], "temperature": 0.0, "avg_logprob": -0.19601961282583383, "compression_ratio": 1.7032258064516128, "no_speech_prob": 0.00016573032189626247}, {"id": 116, "seek": 89048, "start": 891.48, "end": 896.48, "text": " that speaker component from the app module definition because otherwise Angular will be", "tokens": [50414, 300, 8145, 6542, 490, 264, 724, 10088, 7123, 570, 5911, 34107, 486, 312, 50664], "temperature": 0.0, "avg_logprob": -0.17475958604079025, "compression_ratio": 1.4754098360655739, "no_speech_prob": 8.338309271493927e-05}, {"id": 117, "seek": 89048, "start": 897.48, "end": 904.48, "text": " set, it can't have that in two places. So once I generate a new build, I will now see that I", "tokens": [50714, 992, 11, 309, 393, 380, 362, 300, 294, 732, 3190, 13, 407, 1564, 286, 8460, 257, 777, 1322, 11, 286, 486, 586, 536, 300, 286, 51064], "temperature": 0.0, "avg_logprob": -0.17475958604079025, "compression_ratio": 1.4754098360655739, "no_speech_prob": 8.338309271493927e-05}, {"id": 118, "seek": 89048, "start": 908.48, "end": 914.48, "text": " have a second part about lazy shine files which has some hash and some other hash. I come", "tokens": [51264, 362, 257, 1150, 644, 466, 14847, 12207, 7098, 597, 575, 512, 22019, 293, 512, 661, 22019, 13, 286, 808, 51564], "temperature": 0.0, "avg_logprob": -0.17475958604079025, "compression_ratio": 1.4754098360655739, "no_speech_prob": 8.338309271493927e-05}, {"id": 119, "seek": 91448, "start": 915.48, "end": 920.48, "text": " back to that as well, and it has a speaker module because that's what we defined, and we have", "tokens": [50414, 646, 281, 300, 382, 731, 11, 293, 309, 575, 257, 8145, 10088, 570, 300, 311, 437, 321, 7642, 11, 293, 321, 362, 50664], "temperature": 0.0, "avg_logprob": -0.17661855678365687, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.00029544494464062154}, {"id": 120, "seek": 91448, "start": 921.48, "end": 926.48, "text": " some sizes. So I can tell, okay, right now I really have some part of my application that gets lazy", "tokens": [50714, 512, 11602, 13, 407, 286, 393, 980, 11, 1392, 11, 558, 586, 286, 534, 362, 512, 644, 295, 452, 3861, 300, 2170, 14847, 50964], "temperature": 0.0, "avg_logprob": -0.17661855678365687, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.00029544494464062154}, {"id": 121, "seek": 91448, "start": 927.48, "end": 934.48, "text": " loaded. So that means it will only be loaded once that path segment is entered. Now I told you", "tokens": [51014, 13210, 13, 407, 300, 1355, 309, 486, 787, 312, 13210, 1564, 300, 3100, 9469, 307, 9065, 13, 823, 286, 1907, 291, 51364], "temperature": 0.0, "avg_logprob": -0.17661855678365687, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.00029544494464062154}, {"id": 122, "seek": 91448, "start": 936.48, "end": 942.48, "text": " that I would like to protect that path segment, so I define a route in guard, and GCLI has", "tokens": [51464, 300, 286, 576, 411, 281, 2371, 300, 3100, 9469, 11, 370, 286, 6964, 257, 7955, 294, 6290, 11, 293, 460, 22458, 40, 575, 51764], "temperature": 0.0, "avg_logprob": -0.17661855678365687, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.00029544494464062154}, {"id": 123, "seek": 94248, "start": 943.48, "end": 950.48, "text": " a guard schema for that as well, so I run ng generate or ngg guard and name it something. Here", "tokens": [50414, 257, 6290, 34078, 337, 300, 382, 731, 11, 370, 286, 1190, 6415, 8460, 420, 6415, 70, 6290, 293, 1315, 309, 746, 13, 1692, 50764], "temperature": 0.0, "avg_logprob": -0.18051455772086367, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.00018498205463401973}, {"id": 124, "seek": 94248, "start": 951.48, "end": 956.48, "text": " it's usually something that can activate, can deactivate, or the other types of guards you", "tokens": [50814, 309, 311, 2673, 746, 300, 393, 13615, 11, 393, 45428, 473, 11, 420, 264, 661, 3467, 295, 17652, 291, 51064], "temperature": 0.0, "avg_logprob": -0.18051455772086367, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.00018498205463401973}, {"id": 125, "seek": 94248, "start": 957.48, "end": 963.48, "text": " have. You get a small interactive prompt for what do you want the guard to be able to do, and here", "tokens": [51114, 362, 13, 509, 483, 257, 1359, 15141, 12391, 337, 437, 360, 291, 528, 264, 6290, 281, 312, 1075, 281, 360, 11, 293, 510, 51414], "temperature": 0.0, "avg_logprob": -0.18051455772086367, "compression_ratio": 1.6045197740112995, "no_speech_prob": 0.00018498205463401973}, {"id": 126, "seek": 96348, "start": 964.48, "end": 972.48, "text": " it's for protecting the speaker. What I receive is that I get some boilerplate code provided by the", "tokens": [50414, 309, 311, 337, 12316, 264, 8145, 13, 708, 286, 4774, 307, 300, 286, 483, 512, 39228, 37008, 3089, 5649, 538, 264, 50814], "temperature": 0.0, "avg_logprob": -0.25651231493268695, "compression_ratio": 1.47, "no_speech_prob": 0.0009372470667585731}, {"id": 127, "seek": 96348, "start": 973.48, "end": 979.48, "text": " GCLI again, and I follow the documentation about how to define guards, define the user token", "tokens": [50864, 460, 22458, 40, 797, 11, 293, 286, 1524, 264, 14333, 466, 577, 281, 6964, 17652, 11, 6964, 264, 4195, 14862, 51164], "temperature": 0.0, "avg_logprob": -0.25651231493268695, "compression_ratio": 1.47, "no_speech_prob": 0.0009372470667585731}, {"id": 128, "seek": 96348, "start": 980.48, "end": 986.48, "text": " and permissions stuff, right now it's just returning to always, you would have some more checks here.", "tokens": [51214, 293, 32723, 1507, 11, 558, 586, 309, 311, 445, 12678, 281, 1009, 11, 291, 576, 362, 512, 544, 13834, 510, 13, 51514], "temperature": 0.0, "avg_logprob": -0.25651231493268695, "compression_ratio": 1.47, "no_speech_prob": 0.0009372470667585731}, {"id": 129, "seek": 98648, "start": 987.48, "end": 994.48, "text": " For example, is there some JSON token set in the local search or whatever you want. I also", "tokens": [50414, 1171, 1365, 11, 307, 456, 512, 31828, 14862, 992, 294, 264, 2654, 3164, 420, 2035, 291, 528, 13, 286, 611, 50764], "temperature": 0.0, "avg_logprob": -0.15109099203081272, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.003366903867572546}, {"id": 130, "seek": 98648, "start": 995.48, "end": 999.48, "text": " described that the documentation isn't complete here, because either you have to export those two", "tokens": [50814, 7619, 300, 264, 14333, 1943, 380, 3566, 510, 11, 570, 2139, 291, 362, 281, 10725, 729, 732, 51014], "temperature": 0.0, "avg_logprob": -0.15109099203081272, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.003366903867572546}, {"id": 131, "seek": 98648, "start": 1000.48, "end": 1008.48, "text": " classes, or you have to declare them as injectable. Once those two classes are defined, you can have", "tokens": [51064, 5359, 11, 420, 291, 362, 281, 19710, 552, 382, 10711, 712, 13, 3443, 729, 732, 5359, 366, 7642, 11, 291, 393, 362, 51464], "temperature": 0.0, "avg_logprob": -0.15109099203081272, "compression_ratio": 1.553763440860215, "no_speech_prob": 0.003366903867572546}, {"id": 132, "seek": 100848, "start": 1009.48, "end": 1015.48, "text": " them somewhere else, you need to inject them into the guard itself, declare that the guard", "tokens": [50414, 552, 4079, 1646, 11, 291, 643, 281, 10711, 552, 666, 264, 6290, 2564, 11, 19710, 300, 264, 6290, 50714], "temperature": 0.0, "avg_logprob": -0.23542186617851257, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.0025872616097331047}, {"id": 133, "seek": 100848, "start": 1016.48, "end": 1022.48, "text": " implements a can activate interface, that means it has to have a public function called can", "tokens": [50764, 704, 17988, 257, 393, 13615, 9226, 11, 300, 1355, 309, 575, 281, 362, 257, 1908, 2445, 1219, 393, 51064], "temperature": 0.0, "avg_logprob": -0.23542186617851257, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.0025872616097331047}, {"id": 134, "seek": 100848, "start": 1023.48, "end": 1032.48, "text": " activate, that takes active route snapshot as the one part, and returns an observable whatever, not", "tokens": [51114, 13615, 11, 300, 2516, 4967, 7955, 30163, 382, 264, 472, 644, 11, 293, 11247, 364, 9951, 712, 2035, 11, 406, 51564], "temperature": 0.0, "avg_logprob": -0.23542186617851257, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.0025872616097331047}, {"id": 135, "seek": 103248, "start": 1032.48, "end": 1038.48, "text": " relevant for our case. I just want to use that injected permissions here and check that can", "tokens": [50364, 7340, 337, 527, 1389, 13, 286, 445, 528, 281, 764, 300, 36967, 32723, 510, 293, 1520, 300, 393, 50664], "temperature": 0.0, "avg_logprob": -0.2516364107037535, "compression_ratio": 1.7510917030567685, "no_speech_prob": 0.0023046457208693027}, {"id": 136, "seek": 103248, "start": 1039.48, "end": 1045.48, "text": " activate a method on it and handle the current user and route patterns. That's some way you can do, and", "tokens": [50714, 13615, 257, 3170, 322, 309, 293, 4813, 264, 2190, 4195, 293, 7955, 8294, 13, 663, 311, 512, 636, 291, 393, 360, 11, 293, 51014], "temperature": 0.0, "avg_logprob": -0.2516364107037535, "compression_ratio": 1.7510917030567685, "no_speech_prob": 0.0023046457208693027}, {"id": 137, "seek": 103248, "start": 1046.48, "end": 1052.48, "text": " then you can check the case. I want to enter that route with the user, is he or she allowed to do that?", "tokens": [51064, 550, 291, 393, 1520, 264, 1389, 13, 286, 528, 281, 3242, 300, 7955, 365, 264, 4195, 11, 307, 415, 420, 750, 4350, 281, 360, 300, 30, 51364], "temperature": 0.0, "avg_logprob": -0.2516364107037535, "compression_ratio": 1.7510917030567685, "no_speech_prob": 0.0023046457208693027}, {"id": 138, "seek": 103248, "start": 1053.48, "end": 1059.48, "text": " In our case for demonstration, I just return true, so it's always allowed, but you can also set it to", "tokens": [51414, 682, 527, 1389, 337, 16520, 11, 286, 445, 2736, 2074, 11, 370, 309, 311, 1009, 4350, 11, 457, 291, 393, 611, 992, 309, 281, 51714], "temperature": 0.0, "avg_logprob": -0.2516364107037535, "compression_ratio": 1.7510917030567685, "no_speech_prob": 0.0023046457208693027}, {"id": 139, "seek": 105948, "start": 1059.48, "end": 1068.48, "text": " false to test it on your thing and discover that you get redirected to the index page, those slides.", "tokens": [50364, 7908, 281, 1500, 309, 322, 428, 551, 293, 4411, 300, 291, 483, 29066, 292, 281, 264, 8186, 3028, 11, 729, 9788, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1459599545127467, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0001632947678444907}, {"id": 140, "seek": 105948, "start": 1069.48, "end": 1075.48, "text": " Now that we have a guard, I have to update the app routing module, because I want to protect the", "tokens": [50864, 823, 300, 321, 362, 257, 6290, 11, 286, 362, 281, 5623, 264, 724, 32722, 10088, 11, 570, 286, 528, 281, 2371, 264, 51164], "temperature": 0.0, "avg_logprob": -0.1459599545127467, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0001632947678444907}, {"id": 141, "seek": 105948, "start": 1076.48, "end": 1086.48, "text": " speaker, and that means it gets a new line for the can activate, which is a list of guards, in our", "tokens": [51214, 8145, 11, 293, 300, 1355, 309, 2170, 257, 777, 1622, 337, 264, 393, 13615, 11, 597, 307, 257, 1329, 295, 17652, 11, 294, 527, 51714], "temperature": 0.0, "avg_logprob": -0.1459599545127467, "compression_ratio": 1.549738219895288, "no_speech_prob": 0.0001632947678444907}, {"id": 142, "seek": 108648, "start": 1086.48, "end": 1093.48, "text": " case only one, and I also have to tell us that there are some providers for those injected", "tokens": [50364, 1389, 787, 472, 11, 293, 286, 611, 362, 281, 980, 505, 300, 456, 366, 512, 11330, 337, 729, 36967, 50714], "temperature": 0.0, "avg_logprob": -0.16366531599813433, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0006344144348986447}, {"id": 143, "seek": 108648, "start": 1094.48, "end": 1099.48, "text": " dependencies, therefore it's important to have those two classes, permissions and user tokens", "tokens": [50764, 36606, 11, 4412, 309, 311, 1021, 281, 362, 729, 732, 5359, 11, 32723, 293, 4195, 22667, 51014], "temperature": 0.0, "avg_logprob": -0.16366531599813433, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0006344144348986447}, {"id": 144, "seek": 108648, "start": 1100.48, "end": 1109.48, "text": " exported as well, otherwise I couldn't use them here. And now I'm at the part where I would like to", "tokens": [51064, 42055, 382, 731, 11, 5911, 286, 2809, 380, 764, 552, 510, 13, 400, 586, 286, 478, 412, 264, 644, 689, 286, 576, 411, 281, 51514], "temperature": 0.0, "avg_logprob": -0.16366531599813433, "compression_ratio": 1.5351351351351352, "no_speech_prob": 0.0006344144348986447}, {"id": 145, "seek": 110948, "start": 1109.48, "end": 1116.48, "text": " use the name chunk, magic comments from repack, and after my pitch and I got accepted, I discovered", "tokens": [50364, 764, 264, 1315, 16635, 11, 5585, 3053, 490, 1085, 501, 11, 293, 934, 452, 7293, 293, 286, 658, 9035, 11, 286, 6941, 50714], "temperature": 0.0, "avg_logprob": -0.23375229957776192, "compression_ratio": 1.5989304812834224, "no_speech_prob": 0.0013021820923313498}, {"id": 146, "seek": 110948, "start": 1117.48, "end": 1125.48, "text": " hey, Angular doesn't support that, but you can turn on the AngularJSON property in the, or the name", "tokens": [50764, 4177, 11, 34107, 1177, 380, 1406, 300, 11, 457, 291, 393, 1261, 322, 264, 34107, 41, 10388, 4707, 294, 264, 11, 420, 264, 1315, 51164], "temperature": 0.0, "avg_logprob": -0.23375229957776192, "compression_ratio": 1.5989304812834224, "no_speech_prob": 0.0013021820923313498}, {"id": 147, "seek": 110948, "start": 1126.48, "end": 1131.48, "text": " chunk property in AngularJSON, which would give you not the hashes, but the whole filename that you", "tokens": [51214, 16635, 4707, 294, 34107, 41, 10388, 11, 597, 576, 976, 291, 406, 264, 575, 8076, 11, 457, 264, 1379, 1387, 268, 529, 300, 291, 51464], "temperature": 0.0, "avg_logprob": -0.23375229957776192, "compression_ratio": 1.5989304812834224, "no_speech_prob": 0.0013021820923313498}, {"id": 148, "seek": 113148, "start": 1132.48, "end": 1140.48, "text": " would have in a depth server, and therefore you could then apply some more security measures, I will", "tokens": [50414, 576, 362, 294, 257, 7161, 7154, 11, 293, 4412, 291, 727, 550, 3079, 512, 544, 3825, 8000, 11, 286, 486, 50814], "temperature": 0.0, "avg_logprob": -0.15504545778841586, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.005898220464587212}, {"id": 149, "seek": 113148, "start": 1141.48, "end": 1147.48, "text": " get to that on the next slide. For those of you who don't know what name chunk is, when you have that", "tokens": [50864, 483, 281, 300, 322, 264, 958, 4137, 13, 1171, 729, 295, 291, 567, 500, 380, 458, 437, 1315, 16635, 307, 11, 562, 291, 362, 300, 51164], "temperature": 0.0, "avg_logprob": -0.15504545778841586, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.005898220464587212}, {"id": 150, "seek": 113148, "start": 1148.48, "end": 1155.48, "text": " import statement for lazy loading, you can have a JavaScript comment, which is called repack name chunk,", "tokens": [51214, 974, 5629, 337, 14847, 15114, 11, 291, 393, 362, 257, 15778, 2871, 11, 597, 307, 1219, 1085, 501, 1315, 16635, 11, 51564], "temperature": 0.0, "avg_logprob": -0.15504545778841586, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.005898220464587212}, {"id": 151, "seek": 115548, "start": 1155.48, "end": 1165.48, "text": " and declare another name and repack will use that one instead of the generated hash. So my idea is that", "tokens": [50364, 293, 19710, 1071, 1315, 293, 1085, 501, 486, 764, 300, 472, 2602, 295, 264, 10833, 22019, 13, 407, 452, 1558, 307, 300, 50864], "temperature": 0.0, "avg_logprob": -0.19370742554360248, "compression_ratio": 1.4184397163120568, "no_speech_prob": 0.0016722200671210885}, {"id": 152, "seek": 115548, "start": 1166.48, "end": 1175.48, "text": " you have certain files that are on your server then as static applications, and you can add HTTP", "tokens": [50914, 291, 362, 1629, 7098, 300, 366, 322, 428, 7154, 550, 382, 13437, 5821, 11, 293, 291, 393, 909, 33283, 51364], "temperature": 0.0, "avg_logprob": -0.19370742554360248, "compression_ratio": 1.4184397163120568, "no_speech_prob": 0.0016722200671210885}, {"id": 153, "seek": 117548, "start": 1175.48, "end": 1185.48, "text": " headers, for example, content security policy, you can also look at the documentation about Angular and", "tokens": [50364, 45101, 11, 337, 1365, 11, 2701, 3825, 3897, 11, 291, 393, 611, 574, 412, 264, 14333, 466, 34107, 293, 50864], "temperature": 0.0, "avg_logprob": -0.15387544631958008, "compression_ratio": 1.6290322580645162, "no_speech_prob": 0.0024634224828332663}, {"id": 154, "seek": 117548, "start": 1186.48, "end": 1193.48, "text": " it says you have to have especially unsafe inline for strips, which is bad, because it allows more for", "tokens": [50914, 309, 1619, 291, 362, 281, 362, 2318, 35948, 294, 1889, 337, 19842, 11, 597, 307, 1578, 11, 570, 309, 4045, 544, 337, 51264], "temperature": 0.0, "avg_logprob": -0.15387544631958008, "compression_ratio": 1.6290322580645162, "no_speech_prob": 0.0024634224828332663}, {"id": 155, "seek": 117548, "start": 1194.48, "end": 1201.48, "text": " attacks. If you can't use content security policy, you still have the ability to declare it as a", "tokens": [51314, 8122, 13, 759, 291, 393, 380, 764, 2701, 3825, 3897, 11, 291, 920, 362, 264, 3485, 281, 19710, 309, 382, 257, 51664], "temperature": 0.0, "avg_logprob": -0.15387544631958008, "compression_ratio": 1.6290322580645162, "no_speech_prob": 0.0024634224828332663}, {"id": 156, "seek": 120148, "start": 1201.48, "end": 1208.48, "text": " char hash or as a nonce, which is a bit more labor, but in my experience, I work with companies who", "tokens": [50364, 1290, 22019, 420, 382, 257, 2107, 384, 11, 597, 307, 257, 857, 544, 5938, 11, 457, 294, 452, 1752, 11, 286, 589, 365, 3431, 567, 50714], "temperature": 0.0, "avg_logprob": -0.19447854198986972, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.001406530267558992}, {"id": 157, "seek": 120148, "start": 1209.48, "end": 1217.48, "text": " deploy it every other week or so, that's doable to compute a hash and add it to the HTML. The idea is that", "tokens": [50764, 7274, 309, 633, 661, 1243, 420, 370, 11, 300, 311, 41183, 281, 14722, 257, 22019, 293, 909, 309, 281, 264, 17995, 13, 440, 1558, 307, 300, 51164], "temperature": 0.0, "avg_logprob": -0.19447854198986972, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.001406530267558992}, {"id": 158, "seek": 120148, "start": 1218.48, "end": 1224.48, "text": " nobody else is able to crawl that route of the JavaScript chunk and look at two more, because for", "tokens": [51214, 5079, 1646, 307, 1075, 281, 24767, 300, 7955, 295, 264, 15778, 16635, 293, 574, 412, 732, 544, 11, 570, 337, 51514], "temperature": 0.0, "avg_logprob": -0.19447854198986972, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.001406530267558992}, {"id": 159, "seek": 122448, "start": 1224.48, "end": 1231.48, "text": " example, you could have a list of certain passwords, that was the case of Percadia, and if you would like to attack", "tokens": [50364, 1365, 11, 291, 727, 362, 257, 1329, 295, 1629, 33149, 11, 300, 390, 264, 1389, 295, 430, 2869, 42343, 11, 293, 498, 291, 576, 411, 281, 2690, 50714], "temperature": 0.0, "avg_logprob": -0.21386687609614158, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.004524162504822016}, {"id": 160, "seek": 122448, "start": 1232.48, "end": 1237.48, "text": " that application, you can just exclude those passwords, because they won't be valid anyway, and therefore you", "tokens": [50764, 300, 3861, 11, 291, 393, 445, 33536, 729, 33149, 11, 570, 436, 1582, 380, 312, 7363, 4033, 11, 293, 4412, 291, 51014], "temperature": 0.0, "avg_logprob": -0.21386687609614158, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.004524162504822016}, {"id": 161, "seek": 122448, "start": 1238.48, "end": 1244.48, "text": " would aid with credential stuffing that is trying out passwords and credentials you found somewhere else, or", "tokens": [51064, 576, 9418, 365, 22034, 36046, 300, 307, 1382, 484, 33149, 293, 27404, 291, 1352, 4079, 1646, 11, 420, 51364], "temperature": 0.0, "avg_logprob": -0.21386687609614158, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.004524162504822016}, {"id": 162, "seek": 122448, "start": 1245.48, "end": 1251.48, "text": " you can exclude your brute force attack, because you know it has to have this length or the special characters are", "tokens": [51414, 291, 393, 33536, 428, 47909, 3464, 2690, 11, 570, 291, 458, 309, 575, 281, 362, 341, 4641, 420, 264, 2121, 4342, 366, 51714], "temperature": 0.0, "avg_logprob": -0.21386687609614158, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.004524162504822016}, {"id": 163, "seek": 125148, "start": 1251.48, "end": 1258.48, "text": " allowed or not allowed, and therefore you would make the criminal's life easier, so I would like to have that not", "tokens": [50364, 4350, 420, 406, 4350, 11, 293, 4412, 291, 576, 652, 264, 8628, 311, 993, 3571, 11, 370, 286, 576, 411, 281, 362, 300, 406, 50714], "temperature": 0.0, "avg_logprob": -0.218737522761027, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.0004095305339433253}, {"id": 164, "seek": 125148, "start": 1259.48, "end": 1266.48, "text": " part of the bottle, but loaded from some JSON file or something else, which is then be able to be protected.", "tokens": [50764, 644, 295, 264, 7817, 11, 457, 13210, 490, 512, 31828, 3991, 420, 746, 1646, 11, 597, 307, 550, 312, 1075, 281, 312, 10594, 13, 51114], "temperature": 0.0, "avg_logprob": -0.218737522761027, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.0004095305339433253}, {"id": 165, "seek": 125148, "start": 1269.48, "end": 1277.48, "text": " So basically having some authorization for certain information and only give more information once that user", "tokens": [51264, 407, 1936, 1419, 512, 33697, 337, 1629, 1589, 293, 787, 976, 544, 1589, 1564, 300, 4195, 51664], "temperature": 0.0, "avg_logprob": -0.218737522761027, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.0004095305339433253}, {"id": 166, "seek": 127748, "start": 1277.48, "end": 1288.48, "text": " is authenticated, for example, by an authorization header and the response. So what have you learned today?", "tokens": [50364, 307, 9214, 3587, 11, 337, 1365, 11, 538, 364, 33697, 23117, 293, 264, 4134, 13, 407, 437, 362, 291, 3264, 965, 30, 50914], "temperature": 0.0, "avg_logprob": -0.19766184748435506, "compression_ratio": 1.4078947368421053, "no_speech_prob": 0.00041186698945239186}, {"id": 167, "seek": 127748, "start": 1290.48, "end": 1298.48, "text": " I hope you get a bit better understanding about how the result looks like, what Angular is producing, what", "tokens": [51014, 286, 1454, 291, 483, 257, 857, 1101, 3701, 466, 577, 264, 1874, 1542, 411, 11, 437, 34107, 307, 10501, 11, 437, 51414], "temperature": 0.0, "avg_logprob": -0.19766184748435506, "compression_ratio": 1.4078947368421053, "no_speech_prob": 0.00041186698945239186}, {"id": 168, "seek": 129848, "start": 1298.48, "end": 1306.48, "text": " name chunks are in Angular, you learned a bit about content security policy, which is really important, there's", "tokens": [50364, 1315, 24004, 366, 294, 34107, 11, 291, 3264, 257, 857, 466, 2701, 3825, 3897, 11, 597, 307, 534, 1021, 11, 456, 311, 50764], "temperature": 0.0, "avg_logprob": -0.17727247873942056, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.007514829281717539}, {"id": 169, "seek": 129848, "start": 1307.48, "end": 1316.48, "text": " a documentation on MDN as well, and learned about some ways to secure static files. I used creative comments images", "tokens": [50814, 257, 14333, 322, 22521, 45, 382, 731, 11, 293, 3264, 466, 512, 2098, 281, 7144, 13437, 7098, 13, 286, 1143, 5880, 3053, 5267, 51264], "temperature": 0.0, "avg_logprob": -0.17727247873942056, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.007514829281717539}, {"id": 170, "seek": 129848, "start": 1317.48, "end": 1324.48, "text": " and provide the resources with the exception of the profile picture of Percadia, but I got the written permission that I am", "tokens": [51314, 293, 2893, 264, 3593, 365, 264, 11183, 295, 264, 7964, 3036, 295, 430, 2869, 42343, 11, 457, 286, 658, 264, 3720, 11226, 300, 286, 669, 51664], "temperature": 0.0, "avg_logprob": -0.17727247873942056, "compression_ratio": 1.5260869565217392, "no_speech_prob": 0.007514829281717539}, {"id": 171, "seek": 132448, "start": 1324.48, "end": 1328.48, "text": " allowed to use that one. Thank you. Do you have questions?", "tokens": [50364, 4350, 281, 764, 300, 472, 13, 1044, 291, 13, 1144, 291, 362, 1651, 30, 50564], "temperature": 0.0, "avg_logprob": -0.14355986258562872, "compression_ratio": 0.9206349206349206, "no_speech_prob": 0.009056578390300274}], "language": "en"}