{"text": " Okay. Thank you. So, my name is Jos van Dijk. Disclaimer, I work for a commercial company called Ubico. So, maybe you've heard of Ubikis. Ubico produces those Ubikis. But I'm not going to talk about Ubikis. I'm going to talk about a technology called FIDO. And many of you will have seen the previous presentation that was about an application of FIDO. So, the goal of this presentation is to move on to the next slide somehow. Yeah. To explain what FIDO is. So, I give a quick introduction to FIDO. And then what you can use it for. And many people will already have seen it. For example, authentication. But I'm going to talk about things that are. So, authentication on the web primarily. I'm going to talk about things that are. That FIDO can be used for that is not involving a web browser. And these things are less or well known. So, I think it's interesting to have a look at the applications. And I'll give examples of open source software that you can use today that are actually using FIDO to do things that don't involve a browser. So, let me first explain about FIDO. So, FIDO is actually a set of specifications. One is by the World Wide Web Consortium. That's about using it in a web browser primarily. And the other one is using security keys. So, the tokens like this that are typically in your key ring. This is called a roaming authenticator in FIDO. And the idea is that you protect your private keys on a piece of hardware that has protection against extracting key material. So, this protocol is called CTAP. And that's by different organizations called FIDO Alliance. And so, this is specifically talking to authenticators like this one. So, how does that work? So, I'm simplifying things because there's a lot of details that I don't want to get into because that takes too much time. So, if we have some relying party. So, let's first look at the web authentication part. So, using a web browser typically. So, a relying party that will be typically a web server. And authentication works like many authentication protocols. You use a challenge response mechanism where you use asymmetric cryptography to sign a challenge. And then you do the verifier. So, the relying party can check the signature. And if it works out, then you're authenticating. So, the idea is that these two protocols, the web of N is basically used in a web setting. So, for example, the web server can send a challenge to a browser. And then the browser uses the web of N API, which is simply a JavaScript API to initiate the registration of a public key or authentication using that public key. So, that's what web of N, that's in the web part. And then on the back end, your web browser will communicate with a security key. So, this roaming authenticator. Just relaying that challenge, asking the key to sign it. And then the response is passed on to the relying party and we'll verify it. So, what's all the fuss with the pass keys and Fido and anti-fishing? Well, that's the merit of Fido too. It has phishing protection. And that is because in this challenge, the web browser can help you secure things by injecting the origin of the site that you are authenticating with. So, this is included in the signature. So, if you end up at the phishing site, the signature will match because it will have a different identifier for the better. So, this is why Fido is phishing, protecting you against phishing. But actually, I'm not going to talk about this use case. I'm going to talk about the right part of this image where we use CTAP to communicate with an authenticator. So, these are all kinds of authenticators. So, yeah, I work for a company that produces these authenticators, but it's an open standard. So, anyone can build a security key. So, I'm using security key and roaming authenticator interchangeably, but these are all security keys by different vendors. So, of course, my employer is there, but there's also Feixion, for example, Google, Nitro key, Solo keys. And that's interesting because that's actually also open source hardware. So, anyone can build a Solo key. The firmware is open source, everything. Nitro key actually uses the same software base, a firmware base. So, these are all, anything I talk about in this talk will work with any of these security keys. So, how does this protocol work? So, I'm focusing on CTAP, the back end. So, talking to a authenticator. Well, the idea is that first you have to register. So, registration is just to register your public key with this verifier, this relying party, whoever it is. And then later you can use that public key for authentication. So, there's two steps, registration, authentication. And so, in the registration steps, so I'm not going to talk about all the details, but you just register your public key with a relying party. And this is including something called the relying party ID. So, in Web of N, this is the identifier of the web server. But in other applications, it can be anything. But the idea is that it is included in any signature that you generate. And you set, so you fix this relying party ID when you register. And later with authentication, this relying party ID is included in the signature so you can, as a relying party, verify that it is used for your application. So, you cannot use the same public key for some other application with a different relying party ID. So, I'm not going into too much detail. Now, you might think, well, I can do this stuff with PGP. I can do it with smart cards. So, what is different about securities if you're not using it in a web browser? Well, actually, many of the things that I'm talking about will also work with PGP or other technologies, although there are some specific features that are not always included. And one of them is attestation. So, attestation means that you can prove that some signature was generated with a security key. So, of course, if you know that the public key is generated on a security key, then obviously that is the case. But if you're dealing with someone that claims to have a security key but you're not sure, you can actually verify it by this process called attestation. So, you can prove that someone uses, let's say, a Google Titan key to generate the signature. So, this is what called attestation. And there's a service hosted by the FIDO Alliance or the organization that actually produces those specifications. And they host metadata. So, if you have a security key, it will have a unique identifier. So, not unique for that particular Yubiqui but unique for the MAKA model. So, any, let's say, any Titan key or any Facion key or any Yubiqui that is of a particular MAKA model will have the same identifier. And in the specs, it says that at least 100,000 keys need to use that same identifier if they are the same MAKA model. So, we can be sure that, let's say, that the signature is generated by a Titan key. And that is also interesting. So, attestation together with the metadata, they really add something to this process. So, here's an example of the metadata. So, someone built a nice web view of the metadata. So, you can look up things like, of course, who's the vendor of this Yubiqui or this security key. But also, is it using protected hardware? And is it certified to a certain security web? So, all these things you can actually use in, actually, yeah. So, I'm not going to do any demo. So, I include all my demo slides for you to try yourself. So, we don't have time here. But, I'm just leaving them in the slides so you can actually try. So, this is a way to extract metadata. So, it's a bit technical. But, if you want to try it, please do. Then, about open source software. So, Yubico publishes a FIDO library. And it's actually used by a lot of open source projects. So, this is open source, although it's produced by Yubico. And, yeah, if you look at, for example, GitHub and you look at all the projects that use this library, then there's lots of interesting projects that do it. And that means that you can use a security key, any security key by any vendor, using that software. And, yeah, what I'll do in this, and the rest of the talk is give you some examples. But, because it's interesting that, although FIDO was primarily intended to do authentication, you can actually do other things. You can do encryption. You can do signing. And you can actually store things on the YubiKey. So, I'll give an example of all these features. So, let's start with a very simple example, like a pluggable authentication module. So, that's another open source library that is included in many Linux distributions. And the idea is that you can...... you you you you you Open source software, you can try it out yourself, but let's give a practical example. Let's say that you want to encrypt your hard disk. You're on a Linux system, you're using a Lux, and typically this is done using a password. Instead of using a password, you can also use a security key, a FIDO key, that instead of deriving some encryption key from your password, it will derive the encryption key from this extra key that is generated on your security key. So this means that if you want to decrypt your hard disk, you just need to insert your security key, so this is what you have factor to get some extra confidence that only you can decrypt that hard disk. So worth looking at. Then there's another extension called large blocks, and this is for storing things on your security key. So it doesn't have a lot of space, but this is typically used for storing certificates. So let's say you're using SSH, and you use SSH with SSH certificates. These are small files, and it's feasible to store them on your security key. So this is an extension that is not very often implemented at the moment. I think there are a couple of vendors that actually implement this, but it means that if you move to a different system and you want to log in there, you can actually take your security key and extract both the public key and the certificates. Of course, the private key stays on your key and your security key, and then log into a remote server from there, so everything is contained in the same security key. Here's an example how you do this with the tools. Do it yourself if you have a key that supports it. Finally, last example about this attestation. So if you generate an SSH key that is backed by a security key, you can actually ask the security key to provide attestation. So there's this extra parameter in SSH key gen that will extract the attestation data, it is called, that you can look up in the FIDO metadata service, and this way you can prove that the signature was generated by some security key, and you can look up exactly which one, and you're certain that this is done with secure hardware. Okay, you can try it out. So, getting to a conclusion, so I'm not saying you have to stop using PGP or anything, but this is an alternative to doing things with secure hardware, and the idea is now that since all the big vendors, like Apple, Google, and Microsoft, they've jumped on the FIDO bandwagon so we can see a lot more support for FIDO in the future. That means that a lot more people will own a FIDO security key. For example, I already mentioned this morning, if you have an Apple iOS device, you can protect your Apple ID using a FIDO security key. So it's built into iOS 16.3, I think. So this means that it is a viable alternative that's actually also a lot cheaper than many of the other hardware keys that you can buy, like a smart card. So I think for 20 or 30 barbs you can buy a FIDO security key, whereas smart cards are usually, especially if you consider all the middleware and everything else that you need to get it working, that can be a lot more expensive. So, just a list of resources. If you want to look up things, of course, you can also contact me. I'll be here all day and happy to take questions if there are any. Hi, I have a question about the attestation process and open implementations of FIDO 2. If you have an open implementation, is it possible to get that certified with FIDO 2 Alliance? My understanding is that in order to enable the people to compile their own binaries to put on their own open keys, is that possible or is it not? Yes, so as a line party, there's a certification process that you can use to test if you are compatible with the FIDO standards. So there's different certification programs. The most heavy ones are for the actual security keys. So there you have to actually do a lot of work to get it certified. But there's also a self-certification toolkit, I think, that you can use to see if you are compatible with FIDO standards. So there's a lot of tests you can run against your own line party software. Can you do something? Yeah, yeah, yeah. Any other questions? What is publicly known about hardware tokens failure rates, at least for popular models, and how many identical devices would you enroll for the most important things personally? The question is, I think, two-fold. First is about failure rates. Actually, I don't know about failure rates, but of course there's different ways to do user verification, and I skipped over it a bit, but to use a security key you need to either touch it and sometimes also prove that you are using it. And this is done typically with a pin or with a biometric. So I don't think... I've never seen a security key fail, except when it's using biometrics, because of course that is a less... So every biometric has a false acceptance rate and a false rejection rate. And yeah, I don't know numbers, but it differs with different vendors. So I think Apple doesn't say anything about their false acceptance rate, for example. So I guess you just have to trust them, and that is with many vendors. Then this... I missed the second part of your question. This... Oh yeah, so already mentioned, if you use your security key you have a problem, so you want to have multiple public keys registered, and how many, that depends on the relying party. So some relying parties initially only allow you to register one, so that's pretty useless, because if you lose that one, then you're out of business. So usually there are several, and yeah, I think for example on an Apple iOS device you can now register six, but that's really depending on the line party. So some have an infinite number, so you can just register as many as you like, but that's really depending on the relying party. Okay, we've got time for our next question. There is an IC hand here. So I guess we have now a single point of failure with the USB socket, especially if we are travelling. So are there any plans to have implementation for the Bluetooth final standards? So we don't... We can still work if USB is broken, maybe at the phone or whatever. Give it a little quiet, but I have trouble hearing the question. Are there any plans for the Bluetooth support in the libraries? Because when... Especially let's see if I'm travelling, I often have problems with USB sockets, so I would have a single point of failure there. So you're saying if you have problems with your USB sockets, then you cannot use a key, so is there an alternative? And I would prefer to have some Bluetooth fallback then. And the FIDO standard also specifies FIDO over Bluetooth, but I don't see it's only implemented on Windows and Android but not on the Linux libraries. Sorry, Bluetooth, yeah. So Bluetooth support is not in this FIDO 2, it only has USB and NFC. No Bluetooth, but there may be an addition. In the next version of CTAP, there will be a way to... And maybe you've seen it in Google Chrome. You can generate a QR code so that you can use your phone. So if you have enlisted your phone as an authenticator, you can do it over Bluetooth Low Energy, but the Bluetooth channel is only used for proximity. It's not used to actually transfer anything. For example, if you register a key, your public key is not submitted over Bluetooth. But that will be in the next version of CTAP. Okay, thank you for the talk. We are out of the time, so applause. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.96, "text": " Okay. Thank you. So, my name is Jos van Dijk. Disclaimer, I work for a commercial company", "tokens": [1033, 13, 1044, 291, 13, 407, 11, 452, 1315, 307, 18541, 3161, 413, 6940, 13, 19839, 35220, 11, 286, 589, 337, 257, 6841, 2237], "temperature": 0.0, "avg_logprob": -0.3373272677502, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.22790244221687317}, {"id": 1, "seek": 0, "start": 15.96, "end": 21.88, "text": " called Ubico. So, maybe you've heard of Ubikis. Ubico produces those Ubikis. But I'm not", "tokens": [1219, 30230, 2789, 13, 407, 11, 1310, 291, 600, 2198, 295, 30230, 1035, 271, 13, 30230, 2789, 14725, 729, 30230, 1035, 271, 13, 583, 286, 478, 406], "temperature": 0.0, "avg_logprob": -0.3373272677502, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.22790244221687317}, {"id": 2, "seek": 0, "start": 21.88, "end": 26.8, "text": " going to talk about Ubikis. I'm going to talk about a technology called FIDO. And many of", "tokens": [516, 281, 751, 466, 30230, 1035, 271, 13, 286, 478, 516, 281, 751, 466, 257, 2899, 1219, 479, 2777, 46, 13, 400, 867, 295], "temperature": 0.0, "avg_logprob": -0.3373272677502, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.22790244221687317}, {"id": 3, "seek": 2680, "start": 26.8, "end": 32.92, "text": " you will have seen the previous presentation that was about an application of FIDO. So, the", "tokens": [291, 486, 362, 1612, 264, 3894, 5860, 300, 390, 466, 364, 3861, 295, 479, 2777, 46, 13, 407, 11, 264], "temperature": 0.0, "avg_logprob": -0.14790235106478034, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.00011978307156823575}, {"id": 4, "seek": 2680, "start": 32.92, "end": 40.480000000000004, "text": " goal of this presentation is to move on to the next slide somehow. Yeah. To explain what FIDO", "tokens": [3387, 295, 341, 5860, 307, 281, 1286, 322, 281, 264, 958, 4137, 6063, 13, 865, 13, 1407, 2903, 437, 479, 2777, 46], "temperature": 0.0, "avg_logprob": -0.14790235106478034, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.00011978307156823575}, {"id": 5, "seek": 2680, "start": 40.480000000000004, "end": 46.120000000000005, "text": " is. So, I give a quick introduction to FIDO. And then what you can use it for. And many people", "tokens": [307, 13, 407, 11, 286, 976, 257, 1702, 9339, 281, 479, 2777, 46, 13, 400, 550, 437, 291, 393, 764, 309, 337, 13, 400, 867, 561], "temperature": 0.0, "avg_logprob": -0.14790235106478034, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.00011978307156823575}, {"id": 6, "seek": 2680, "start": 46.120000000000005, "end": 51.760000000000005, "text": " will already have seen it. For example, authentication. But I'm going to talk about things", "tokens": [486, 1217, 362, 1612, 309, 13, 1171, 1365, 11, 26643, 13, 583, 286, 478, 516, 281, 751, 466, 721], "temperature": 0.0, "avg_logprob": -0.14790235106478034, "compression_ratio": 1.606060606060606, "no_speech_prob": 0.00011978307156823575}, {"id": 7, "seek": 5176, "start": 51.76, "end": 58.72, "text": " that are. So, authentication on the web primarily. I'm going to talk about things that are. That", "tokens": [300, 366, 13, 407, 11, 26643, 322, 264, 3670, 10029, 13, 286, 478, 516, 281, 751, 466, 721, 300, 366, 13, 663], "temperature": 0.0, "avg_logprob": -0.18081606814735815, "compression_ratio": 1.6103896103896105, "no_speech_prob": 3.771473348024301e-05}, {"id": 8, "seek": 5176, "start": 58.72, "end": 64.0, "text": " FIDO can be used for that is not involving a web browser. And these things are less or", "tokens": [479, 2777, 46, 393, 312, 1143, 337, 300, 307, 406, 17030, 257, 3670, 11185, 13, 400, 613, 721, 366, 1570, 420], "temperature": 0.0, "avg_logprob": -0.18081606814735815, "compression_ratio": 1.6103896103896105, "no_speech_prob": 3.771473348024301e-05}, {"id": 9, "seek": 5176, "start": 64.0, "end": 68.75999999999999, "text": " well known. So, I think it's interesting to have a look at the applications. And I'll give", "tokens": [731, 2570, 13, 407, 11, 286, 519, 309, 311, 1880, 281, 362, 257, 574, 412, 264, 5821, 13, 400, 286, 603, 976], "temperature": 0.0, "avg_logprob": -0.18081606814735815, "compression_ratio": 1.6103896103896105, "no_speech_prob": 3.771473348024301e-05}, {"id": 10, "seek": 5176, "start": 68.75999999999999, "end": 76.4, "text": " examples of open source software that you can use today that are actually using FIDO to do things", "tokens": [5110, 295, 1269, 4009, 4722, 300, 291, 393, 764, 965, 300, 366, 767, 1228, 479, 2777, 46, 281, 360, 721], "temperature": 0.0, "avg_logprob": -0.18081606814735815, "compression_ratio": 1.6103896103896105, "no_speech_prob": 3.771473348024301e-05}, {"id": 11, "seek": 7640, "start": 76.4, "end": 86.48, "text": " that don't involve a browser. So, let me first explain about FIDO. So, FIDO is actually a set of", "tokens": [300, 500, 380, 9494, 257, 11185, 13, 407, 11, 718, 385, 700, 2903, 466, 479, 2777, 46, 13, 407, 11, 479, 2777, 46, 307, 767, 257, 992, 295], "temperature": 0.0, "avg_logprob": -0.1313377094268799, "compression_ratio": 1.5588235294117647, "no_speech_prob": 2.565046634117607e-05}, {"id": 12, "seek": 7640, "start": 86.48, "end": 90.56, "text": " specifications. One is by the World Wide Web Consortium. That's about using it in a web", "tokens": [29448, 13, 1485, 307, 538, 264, 3937, 42543, 9573, 31719, 2197, 13, 663, 311, 466, 1228, 309, 294, 257, 3670], "temperature": 0.0, "avg_logprob": -0.1313377094268799, "compression_ratio": 1.5588235294117647, "no_speech_prob": 2.565046634117607e-05}, {"id": 13, "seek": 7640, "start": 90.56, "end": 98.32000000000001, "text": " browser primarily. And the other one is using security keys. So, the tokens like this that are", "tokens": [11185, 10029, 13, 400, 264, 661, 472, 307, 1228, 3825, 9317, 13, 407, 11, 264, 22667, 411, 341, 300, 366], "temperature": 0.0, "avg_logprob": -0.1313377094268799, "compression_ratio": 1.5588235294117647, "no_speech_prob": 2.565046634117607e-05}, {"id": 14, "seek": 7640, "start": 98.32000000000001, "end": 104.04, "text": " typically in your key ring. This is called a roaming authenticator in FIDO. And the idea is", "tokens": [5850, 294, 428, 2141, 4875, 13, 639, 307, 1219, 257, 42680, 12466, 1639, 294, 479, 2777, 46, 13, 400, 264, 1558, 307], "temperature": 0.0, "avg_logprob": -0.1313377094268799, "compression_ratio": 1.5588235294117647, "no_speech_prob": 2.565046634117607e-05}, {"id": 15, "seek": 10404, "start": 104.04, "end": 111.60000000000001, "text": " that you protect your private keys on a piece of hardware that has protection against extracting", "tokens": [300, 291, 2371, 428, 4551, 9317, 322, 257, 2522, 295, 8837, 300, 575, 6334, 1970, 49844], "temperature": 0.0, "avg_logprob": -0.13934788007414742, "compression_ratio": 1.5720338983050848, "no_speech_prob": 2.1731224478571676e-05}, {"id": 16, "seek": 10404, "start": 111.60000000000001, "end": 120.16000000000001, "text": " key material. So, this protocol is called CTAP. And that's by different organizations called", "tokens": [2141, 2527, 13, 407, 11, 341, 10336, 307, 1219, 19529, 4715, 13, 400, 300, 311, 538, 819, 6150, 1219], "temperature": 0.0, "avg_logprob": -0.13934788007414742, "compression_ratio": 1.5720338983050848, "no_speech_prob": 2.1731224478571676e-05}, {"id": 17, "seek": 10404, "start": 120.16000000000001, "end": 127.04, "text": " FIDO Alliance. And so, this is specifically talking to authenticators like this one. So,", "tokens": [479, 2777, 46, 21859, 13, 400, 370, 11, 341, 307, 4682, 1417, 281, 12466, 3391, 411, 341, 472, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.13934788007414742, "compression_ratio": 1.5720338983050848, "no_speech_prob": 2.1731224478571676e-05}, {"id": 18, "seek": 10404, "start": 127.04, "end": 132.4, "text": " how does that work? So, I'm simplifying things because there's a lot of details that I don't", "tokens": [577, 775, 300, 589, 30, 407, 11, 286, 478, 6883, 5489, 721, 570, 456, 311, 257, 688, 295, 4365, 300, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.13934788007414742, "compression_ratio": 1.5720338983050848, "no_speech_prob": 2.1731224478571676e-05}, {"id": 19, "seek": 13240, "start": 132.4, "end": 138.24, "text": " want to get into because that takes too much time. So, if we have some relying party. So,", "tokens": [528, 281, 483, 666, 570, 300, 2516, 886, 709, 565, 13, 407, 11, 498, 321, 362, 512, 24140, 3595, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.1502572734181474, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.00010463823127793148}, {"id": 20, "seek": 13240, "start": 138.24, "end": 146.44, "text": " let's first look at the web authentication part. So, using a web browser typically. So,", "tokens": [718, 311, 700, 574, 412, 264, 3670, 26643, 644, 13, 407, 11, 1228, 257, 3670, 11185, 5850, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.1502572734181474, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.00010463823127793148}, {"id": 21, "seek": 13240, "start": 146.44, "end": 153.12, "text": " a relying party that will be typically a web server. And authentication works like many", "tokens": [257, 24140, 3595, 300, 486, 312, 5850, 257, 3670, 7154, 13, 400, 26643, 1985, 411, 867], "temperature": 0.0, "avg_logprob": -0.1502572734181474, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.00010463823127793148}, {"id": 22, "seek": 13240, "start": 153.12, "end": 158.20000000000002, "text": " authentication protocols. You use a challenge response mechanism where you use asymmetric", "tokens": [26643, 20618, 13, 509, 764, 257, 3430, 4134, 7513, 689, 291, 764, 37277, 17475], "temperature": 0.0, "avg_logprob": -0.1502572734181474, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.00010463823127793148}, {"id": 23, "seek": 15820, "start": 158.2, "end": 165.07999999999998, "text": " cryptography to sign a challenge. And then you do the verifier. So, the relying party can check", "tokens": [9844, 5820, 281, 1465, 257, 3430, 13, 400, 550, 291, 360, 264, 1306, 9902, 13, 407, 11, 264, 24140, 3595, 393, 1520], "temperature": 0.0, "avg_logprob": -0.1856543731689453, "compression_ratio": 1.7227272727272727, "no_speech_prob": 3.6902831197949126e-05}, {"id": 24, "seek": 15820, "start": 165.07999999999998, "end": 171.6, "text": " the signature. And if it works out, then you're authenticating. So, the idea is that these two", "tokens": [264, 13397, 13, 400, 498, 309, 1985, 484, 11, 550, 291, 434, 12466, 990, 13, 407, 11, 264, 1558, 307, 300, 613, 732], "temperature": 0.0, "avg_logprob": -0.1856543731689453, "compression_ratio": 1.7227272727272727, "no_speech_prob": 3.6902831197949126e-05}, {"id": 25, "seek": 15820, "start": 171.6, "end": 178.67999999999998, "text": " protocols, the web of N is basically used in a web setting. So, for example, the web server can", "tokens": [20618, 11, 264, 3670, 295, 426, 307, 1936, 1143, 294, 257, 3670, 3287, 13, 407, 11, 337, 1365, 11, 264, 3670, 7154, 393], "temperature": 0.0, "avg_logprob": -0.1856543731689453, "compression_ratio": 1.7227272727272727, "no_speech_prob": 3.6902831197949126e-05}, {"id": 26, "seek": 15820, "start": 178.67999999999998, "end": 185.79999999999998, "text": " send a challenge to a browser. And then the browser uses the web of N API, which is simply a", "tokens": [2845, 257, 3430, 281, 257, 11185, 13, 400, 550, 264, 11185, 4960, 264, 3670, 295, 426, 9362, 11, 597, 307, 2935, 257], "temperature": 0.0, "avg_logprob": -0.1856543731689453, "compression_ratio": 1.7227272727272727, "no_speech_prob": 3.6902831197949126e-05}, {"id": 27, "seek": 18580, "start": 185.8, "end": 191.96, "text": " JavaScript API to initiate the registration of a public key or authentication using that public", "tokens": [15778, 9362, 281, 31574, 264, 16847, 295, 257, 1908, 2141, 420, 26643, 1228, 300, 1908], "temperature": 0.0, "avg_logprob": -0.15619217081272857, "compression_ratio": 1.7155555555555555, "no_speech_prob": 3.263504186179489e-05}, {"id": 28, "seek": 18580, "start": 191.96, "end": 200.52, "text": " key. So, that's what web of N, that's in the web part. And then on the back end, your web browser", "tokens": [2141, 13, 407, 11, 300, 311, 437, 3670, 295, 426, 11, 300, 311, 294, 264, 3670, 644, 13, 400, 550, 322, 264, 646, 917, 11, 428, 3670, 11185], "temperature": 0.0, "avg_logprob": -0.15619217081272857, "compression_ratio": 1.7155555555555555, "no_speech_prob": 3.263504186179489e-05}, {"id": 29, "seek": 18580, "start": 200.52, "end": 207.68, "text": " will communicate with a security key. So, this roaming authenticator. Just relaying that challenge,", "tokens": [486, 7890, 365, 257, 3825, 2141, 13, 407, 11, 341, 42680, 12466, 1639, 13, 1449, 24214, 278, 300, 3430, 11], "temperature": 0.0, "avg_logprob": -0.15619217081272857, "compression_ratio": 1.7155555555555555, "no_speech_prob": 3.263504186179489e-05}, {"id": 30, "seek": 18580, "start": 207.68, "end": 214.48000000000002, "text": " asking the key to sign it. And then the response is passed on to the relying party and we'll", "tokens": [3365, 264, 2141, 281, 1465, 309, 13, 400, 550, 264, 4134, 307, 4678, 322, 281, 264, 24140, 3595, 293, 321, 603], "temperature": 0.0, "avg_logprob": -0.15619217081272857, "compression_ratio": 1.7155555555555555, "no_speech_prob": 3.263504186179489e-05}, {"id": 31, "seek": 21448, "start": 214.48, "end": 222.28, "text": " verify it. So, what's all the fuss with the pass keys and Fido and anti-fishing? Well, that's the", "tokens": [16888, 309, 13, 407, 11, 437, 311, 439, 264, 34792, 365, 264, 1320, 9317, 293, 479, 2925, 293, 6061, 12, 69, 3807, 30, 1042, 11, 300, 311, 264], "temperature": 0.0, "avg_logprob": -0.1494878753413999, "compression_ratio": 1.7416974169741697, "no_speech_prob": 4.003326466772705e-05}, {"id": 32, "seek": 21448, "start": 222.28, "end": 226.95999999999998, "text": " merit of Fido too. It has phishing protection. And that is because in this challenge, the web", "tokens": [24527, 295, 479, 2925, 886, 13, 467, 575, 903, 3807, 6334, 13, 400, 300, 307, 570, 294, 341, 3430, 11, 264, 3670], "temperature": 0.0, "avg_logprob": -0.1494878753413999, "compression_ratio": 1.7416974169741697, "no_speech_prob": 4.003326466772705e-05}, {"id": 33, "seek": 21448, "start": 226.95999999999998, "end": 232.2, "text": " browser can help you secure things by injecting the origin of the site that you are authenticating", "tokens": [11185, 393, 854, 291, 7144, 721, 538, 10711, 278, 264, 4957, 295, 264, 3621, 300, 291, 366, 12466, 990], "temperature": 0.0, "avg_logprob": -0.1494878753413999, "compression_ratio": 1.7416974169741697, "no_speech_prob": 4.003326466772705e-05}, {"id": 34, "seek": 21448, "start": 232.2, "end": 237.07999999999998, "text": " with. So, this is included in the signature. So, if you end up at the phishing site, the", "tokens": [365, 13, 407, 11, 341, 307, 5556, 294, 264, 13397, 13, 407, 11, 498, 291, 917, 493, 412, 264, 903, 3807, 3621, 11, 264], "temperature": 0.0, "avg_logprob": -0.1494878753413999, "compression_ratio": 1.7416974169741697, "no_speech_prob": 4.003326466772705e-05}, {"id": 35, "seek": 21448, "start": 237.07999999999998, "end": 243.32, "text": " signature will match because it will have a different identifier for the better. So, this is", "tokens": [13397, 486, 2995, 570, 309, 486, 362, 257, 819, 45690, 337, 264, 1101, 13, 407, 11, 341, 307], "temperature": 0.0, "avg_logprob": -0.1494878753413999, "compression_ratio": 1.7416974169741697, "no_speech_prob": 4.003326466772705e-05}, {"id": 36, "seek": 24332, "start": 243.32, "end": 251.23999999999998, "text": " why Fido is phishing, protecting you against phishing. But actually, I'm not going to talk about", "tokens": [983, 479, 2925, 307, 903, 3807, 11, 12316, 291, 1970, 903, 3807, 13, 583, 767, 11, 286, 478, 406, 516, 281, 751, 466], "temperature": 0.0, "avg_logprob": -0.18579839455960978, "compression_ratio": 1.6814159292035398, "no_speech_prob": 4.18013078160584e-05}, {"id": 37, "seek": 24332, "start": 251.23999999999998, "end": 255.76, "text": " this use case. I'm going to talk about the right part of this image where we use CTAP to", "tokens": [341, 764, 1389, 13, 286, 478, 516, 281, 751, 466, 264, 558, 644, 295, 341, 3256, 689, 321, 764, 19529, 4715, 281], "temperature": 0.0, "avg_logprob": -0.18579839455960978, "compression_ratio": 1.6814159292035398, "no_speech_prob": 4.18013078160584e-05}, {"id": 38, "seek": 24332, "start": 255.76, "end": 263.03999999999996, "text": " communicate with an authenticator. So, these are all kinds of authenticators. So, yeah, I work for", "tokens": [7890, 365, 364, 12466, 1639, 13, 407, 11, 613, 366, 439, 3685, 295, 12466, 3391, 13, 407, 11, 1338, 11, 286, 589, 337], "temperature": 0.0, "avg_logprob": -0.18579839455960978, "compression_ratio": 1.6814159292035398, "no_speech_prob": 4.18013078160584e-05}, {"id": 39, "seek": 24332, "start": 263.03999999999996, "end": 270.12, "text": " a company that produces these authenticators, but it's an open standard. So, anyone can build a", "tokens": [257, 2237, 300, 14725, 613, 12466, 3391, 11, 457, 309, 311, 364, 1269, 3832, 13, 407, 11, 2878, 393, 1322, 257], "temperature": 0.0, "avg_logprob": -0.18579839455960978, "compression_ratio": 1.6814159292035398, "no_speech_prob": 4.18013078160584e-05}, {"id": 40, "seek": 27012, "start": 270.12, "end": 276.16, "text": " security key. So, I'm using security key and roaming authenticator interchangeably, but these are", "tokens": [3825, 2141, 13, 407, 11, 286, 478, 1228, 3825, 2141, 293, 42680, 12466, 1639, 30358, 1188, 11, 457, 613, 366], "temperature": 0.0, "avg_logprob": -0.20951243528385752, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.00010365914204157889}, {"id": 41, "seek": 27012, "start": 276.16, "end": 282.52, "text": " all security keys by different vendors. So, of course, my employer is there, but there's also", "tokens": [439, 3825, 9317, 538, 819, 22056, 13, 407, 11, 295, 1164, 11, 452, 16205, 307, 456, 11, 457, 456, 311, 611], "temperature": 0.0, "avg_logprob": -0.20951243528385752, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.00010365914204157889}, {"id": 42, "seek": 27012, "start": 282.52, "end": 289.72, "text": " Feixion, for example, Google, Nitro key, Solo keys. And that's interesting because that's actually", "tokens": [3697, 970, 313, 11, 337, 1365, 11, 3329, 11, 37942, 340, 2141, 11, 26452, 9317, 13, 400, 300, 311, 1880, 570, 300, 311, 767], "temperature": 0.0, "avg_logprob": -0.20951243528385752, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.00010365914204157889}, {"id": 43, "seek": 27012, "start": 289.72, "end": 295.16, "text": " also open source hardware. So, anyone can build a Solo key. The firmware is open source, everything.", "tokens": [611, 1269, 4009, 8837, 13, 407, 11, 2878, 393, 1322, 257, 26452, 2141, 13, 440, 30289, 307, 1269, 4009, 11, 1203, 13], "temperature": 0.0, "avg_logprob": -0.20951243528385752, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.00010365914204157889}, {"id": 44, "seek": 29516, "start": 295.16, "end": 303.44, "text": " Nitro key actually uses the same software base, a firmware base. So, these are all, anything I", "tokens": [37942, 340, 2141, 767, 4960, 264, 912, 4722, 3096, 11, 257, 30289, 3096, 13, 407, 11, 613, 366, 439, 11, 1340, 286], "temperature": 0.0, "avg_logprob": -0.15987260525043195, "compression_ratio": 1.4947368421052631, "no_speech_prob": 5.353964661480859e-05}, {"id": 45, "seek": 29516, "start": 303.44, "end": 309.96000000000004, "text": " talk about in this talk will work with any of these security keys. So, how does this protocol", "tokens": [751, 466, 294, 341, 751, 486, 589, 365, 604, 295, 613, 3825, 9317, 13, 407, 11, 577, 775, 341, 10336], "temperature": 0.0, "avg_logprob": -0.15987260525043195, "compression_ratio": 1.4947368421052631, "no_speech_prob": 5.353964661480859e-05}, {"id": 46, "seek": 29516, "start": 309.96000000000004, "end": 317.48, "text": " work? So, I'm focusing on CTAP, the back end. So, talking to a authenticator. Well, the idea is", "tokens": [589, 30, 407, 11, 286, 478, 8416, 322, 19529, 4715, 11, 264, 646, 917, 13, 407, 11, 1417, 281, 257, 12466, 1639, 13, 1042, 11, 264, 1558, 307], "temperature": 0.0, "avg_logprob": -0.15987260525043195, "compression_ratio": 1.4947368421052631, "no_speech_prob": 5.353964661480859e-05}, {"id": 47, "seek": 31748, "start": 317.48, "end": 325.24, "text": " that first you have to register. So, registration is just to register your public key with this", "tokens": [300, 700, 291, 362, 281, 7280, 13, 407, 11, 16847, 307, 445, 281, 7280, 428, 1908, 2141, 365, 341], "temperature": 0.0, "avg_logprob": -0.17308660083346897, "compression_ratio": 1.8663366336633664, "no_speech_prob": 3.750804899027571e-05}, {"id": 48, "seek": 31748, "start": 325.24, "end": 331.08000000000004, "text": " verifier, this relying party, whoever it is. And then later you can use that public key for", "tokens": [1306, 9902, 11, 341, 24140, 3595, 11, 11387, 309, 307, 13, 400, 550, 1780, 291, 393, 764, 300, 1908, 2141, 337], "temperature": 0.0, "avg_logprob": -0.17308660083346897, "compression_ratio": 1.8663366336633664, "no_speech_prob": 3.750804899027571e-05}, {"id": 49, "seek": 31748, "start": 331.08000000000004, "end": 335.6, "text": " authentication. So, there's two steps, registration, authentication. And so, in the registration", "tokens": [26643, 13, 407, 11, 456, 311, 732, 4439, 11, 16847, 11, 26643, 13, 400, 370, 11, 294, 264, 16847], "temperature": 0.0, "avg_logprob": -0.17308660083346897, "compression_ratio": 1.8663366336633664, "no_speech_prob": 3.750804899027571e-05}, {"id": 50, "seek": 31748, "start": 335.6, "end": 341.28000000000003, "text": " steps, so I'm not going to talk about all the details, but you just register your public key", "tokens": [4439, 11, 370, 286, 478, 406, 516, 281, 751, 466, 439, 264, 4365, 11, 457, 291, 445, 7280, 428, 1908, 2141], "temperature": 0.0, "avg_logprob": -0.17308660083346897, "compression_ratio": 1.8663366336633664, "no_speech_prob": 3.750804899027571e-05}, {"id": 51, "seek": 34128, "start": 341.28, "end": 351.55999999999995, "text": " with a relying party. And this is including something called the relying party ID. So, in", "tokens": [365, 257, 24140, 3595, 13, 400, 341, 307, 3009, 746, 1219, 264, 24140, 3595, 7348, 13, 407, 11, 294], "temperature": 0.0, "avg_logprob": -0.1998044995294101, "compression_ratio": 1.5872093023255813, "no_speech_prob": 2.277144267281983e-05}, {"id": 52, "seek": 34128, "start": 351.55999999999995, "end": 358.91999999999996, "text": " Web of N, this is the identifier of the web server. But in other applications, it can be", "tokens": [9573, 295, 426, 11, 341, 307, 264, 45690, 295, 264, 3670, 7154, 13, 583, 294, 661, 5821, 11, 309, 393, 312], "temperature": 0.0, "avg_logprob": -0.1998044995294101, "compression_ratio": 1.5872093023255813, "no_speech_prob": 2.277144267281983e-05}, {"id": 53, "seek": 34128, "start": 358.91999999999996, "end": 365.84, "text": " anything. But the idea is that it is included in any signature that you generate. And you set,", "tokens": [1340, 13, 583, 264, 1558, 307, 300, 309, 307, 5556, 294, 604, 13397, 300, 291, 8460, 13, 400, 291, 992, 11], "temperature": 0.0, "avg_logprob": -0.1998044995294101, "compression_ratio": 1.5872093023255813, "no_speech_prob": 2.277144267281983e-05}, {"id": 54, "seek": 36584, "start": 365.84, "end": 371.71999999999997, "text": " so you fix this relying party ID when you register. And later with authentication, this", "tokens": [370, 291, 3191, 341, 24140, 3595, 7348, 562, 291, 7280, 13, 400, 1780, 365, 26643, 11, 341], "temperature": 0.0, "avg_logprob": -0.14558881123860676, "compression_ratio": 1.759433962264151, "no_speech_prob": 1.831938607210759e-05}, {"id": 55, "seek": 36584, "start": 371.71999999999997, "end": 376.67999999999995, "text": " relying party ID is included in the signature so you can, as a relying party, verify that it is", "tokens": [24140, 3595, 7348, 307, 5556, 294, 264, 13397, 370, 291, 393, 11, 382, 257, 24140, 3595, 11, 16888, 300, 309, 307], "temperature": 0.0, "avg_logprob": -0.14558881123860676, "compression_ratio": 1.759433962264151, "no_speech_prob": 1.831938607210759e-05}, {"id": 56, "seek": 36584, "start": 376.67999999999995, "end": 382.03999999999996, "text": " used for your application. So, you cannot use the same public key for some other application", "tokens": [1143, 337, 428, 3861, 13, 407, 11, 291, 2644, 764, 264, 912, 1908, 2141, 337, 512, 661, 3861], "temperature": 0.0, "avg_logprob": -0.14558881123860676, "compression_ratio": 1.759433962264151, "no_speech_prob": 1.831938607210759e-05}, {"id": 57, "seek": 36584, "start": 382.03999999999996, "end": 391.35999999999996, "text": " with a different relying party ID. So, I'm not going into too much detail. Now, you might think,", "tokens": [365, 257, 819, 24140, 3595, 7348, 13, 407, 11, 286, 478, 406, 516, 666, 886, 709, 2607, 13, 823, 11, 291, 1062, 519, 11], "temperature": 0.0, "avg_logprob": -0.14558881123860676, "compression_ratio": 1.759433962264151, "no_speech_prob": 1.831938607210759e-05}, {"id": 58, "seek": 39136, "start": 391.36, "end": 397.04, "text": " well, I can do this stuff with PGP. I can do it with smart cards. So, what is different about", "tokens": [731, 11, 286, 393, 360, 341, 1507, 365, 40975, 47, 13, 286, 393, 360, 309, 365, 4069, 5632, 13, 407, 11, 437, 307, 819, 466], "temperature": 0.0, "avg_logprob": -0.13210226825832092, "compression_ratio": 1.5732217573221758, "no_speech_prob": 4.060153150931001e-05}, {"id": 59, "seek": 39136, "start": 397.04, "end": 405.8, "text": " securities if you're not using it in a web browser? Well, actually, many of the things that I'm", "tokens": [38597, 498, 291, 434, 406, 1228, 309, 294, 257, 3670, 11185, 30, 1042, 11, 767, 11, 867, 295, 264, 721, 300, 286, 478], "temperature": 0.0, "avg_logprob": -0.13210226825832092, "compression_ratio": 1.5732217573221758, "no_speech_prob": 4.060153150931001e-05}, {"id": 60, "seek": 39136, "start": 405.8, "end": 411.40000000000003, "text": " talking about will also work with PGP or other technologies, although there are some specific", "tokens": [1417, 466, 486, 611, 589, 365, 40975, 47, 420, 661, 7943, 11, 4878, 456, 366, 512, 2685], "temperature": 0.0, "avg_logprob": -0.13210226825832092, "compression_ratio": 1.5732217573221758, "no_speech_prob": 4.060153150931001e-05}, {"id": 61, "seek": 39136, "start": 411.40000000000003, "end": 416.72, "text": " features that are not always included. And one of them is attestation. So, attestation means", "tokens": [4122, 300, 366, 406, 1009, 5556, 13, 400, 472, 295, 552, 307, 951, 377, 399, 13, 407, 11, 951, 377, 399, 1355], "temperature": 0.0, "avg_logprob": -0.13210226825832092, "compression_ratio": 1.5732217573221758, "no_speech_prob": 4.060153150931001e-05}, {"id": 62, "seek": 41672, "start": 416.72, "end": 424.64000000000004, "text": " that you can prove that some signature was generated with a security key. So, of course,", "tokens": [300, 291, 393, 7081, 300, 512, 13397, 390, 10833, 365, 257, 3825, 2141, 13, 407, 11, 295, 1164, 11], "temperature": 0.0, "avg_logprob": -0.10704962066982103, "compression_ratio": 1.7819905213270142, "no_speech_prob": 3.239900979679078e-05}, {"id": 63, "seek": 41672, "start": 424.64000000000004, "end": 430.8, "text": " if you know that the public key is generated on a security key, then obviously that is the case.", "tokens": [498, 291, 458, 300, 264, 1908, 2141, 307, 10833, 322, 257, 3825, 2141, 11, 550, 2745, 300, 307, 264, 1389, 13], "temperature": 0.0, "avg_logprob": -0.10704962066982103, "compression_ratio": 1.7819905213270142, "no_speech_prob": 3.239900979679078e-05}, {"id": 64, "seek": 41672, "start": 430.8, "end": 436.40000000000003, "text": " But if you're dealing with someone that claims to have a security key but you're not sure,", "tokens": [583, 498, 291, 434, 6260, 365, 1580, 300, 9441, 281, 362, 257, 3825, 2141, 457, 291, 434, 406, 988, 11], "temperature": 0.0, "avg_logprob": -0.10704962066982103, "compression_ratio": 1.7819905213270142, "no_speech_prob": 3.239900979679078e-05}, {"id": 65, "seek": 41672, "start": 436.40000000000003, "end": 442.48, "text": " you can actually verify it by this process called attestation. So, you can prove that someone uses,", "tokens": [291, 393, 767, 16888, 309, 538, 341, 1399, 1219, 951, 377, 399, 13, 407, 11, 291, 393, 7081, 300, 1580, 4960, 11], "temperature": 0.0, "avg_logprob": -0.10704962066982103, "compression_ratio": 1.7819905213270142, "no_speech_prob": 3.239900979679078e-05}, {"id": 66, "seek": 44248, "start": 442.48, "end": 450.40000000000003, "text": " let's say, a Google Titan key to generate the signature. So, this is what called attestation.", "tokens": [718, 311, 584, 11, 257, 3329, 17731, 2141, 281, 8460, 264, 13397, 13, 407, 11, 341, 307, 437, 1219, 951, 377, 399, 13], "temperature": 0.0, "avg_logprob": -0.20748205283253462, "compression_ratio": 1.5864978902953586, "no_speech_prob": 4.1876177419908345e-05}, {"id": 67, "seek": 44248, "start": 450.40000000000003, "end": 456.48, "text": " And there's a service hosted by the FIDO Alliance or the organization that actually produces those", "tokens": [400, 456, 311, 257, 2643, 19204, 538, 264, 479, 2777, 46, 21859, 420, 264, 4475, 300, 767, 14725, 729], "temperature": 0.0, "avg_logprob": -0.20748205283253462, "compression_ratio": 1.5864978902953586, "no_speech_prob": 4.1876177419908345e-05}, {"id": 68, "seek": 44248, "start": 456.48, "end": 463.96000000000004, "text": " specifications. And they host metadata. So, if you have a security key, it will have a unique", "tokens": [29448, 13, 400, 436, 3975, 26603, 13, 407, 11, 498, 291, 362, 257, 3825, 2141, 11, 309, 486, 362, 257, 3845], "temperature": 0.0, "avg_logprob": -0.20748205283253462, "compression_ratio": 1.5864978902953586, "no_speech_prob": 4.1876177419908345e-05}, {"id": 69, "seek": 44248, "start": 463.96000000000004, "end": 470.96000000000004, "text": " identifier. So, not unique for that particular Yubiqui but unique for the MAKA model. So,", "tokens": [45690, 13, 407, 11, 406, 3845, 337, 300, 1729, 398, 836, 3221, 72, 457, 3845, 337, 264, 376, 5340, 32, 2316, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.20748205283253462, "compression_ratio": 1.5864978902953586, "no_speech_prob": 4.1876177419908345e-05}, {"id": 70, "seek": 47096, "start": 470.96, "end": 480.52, "text": " any, let's say, any Titan key or any Facion key or any Yubiqui that is of a particular MAKA", "tokens": [604, 11, 718, 311, 584, 11, 604, 17731, 2141, 420, 604, 17667, 313, 2141, 420, 604, 398, 836, 3221, 72, 300, 307, 295, 257, 1729, 376, 5340, 32], "temperature": 0.0, "avg_logprob": -0.1378857930501302, "compression_ratio": 1.705607476635514, "no_speech_prob": 4.268968950782437e-06}, {"id": 71, "seek": 47096, "start": 480.52, "end": 486.15999999999997, "text": " model will have the same identifier. And in the specs, it says that at least 100,000 keys", "tokens": [2316, 486, 362, 264, 912, 45690, 13, 400, 294, 264, 27911, 11, 309, 1619, 300, 412, 1935, 2319, 11, 1360, 9317], "temperature": 0.0, "avg_logprob": -0.1378857930501302, "compression_ratio": 1.705607476635514, "no_speech_prob": 4.268968950782437e-06}, {"id": 72, "seek": 47096, "start": 486.15999999999997, "end": 491.4, "text": " need to use that same identifier if they are the same MAKA model. So, we can be sure that,", "tokens": [643, 281, 764, 300, 912, 45690, 498, 436, 366, 264, 912, 376, 5340, 32, 2316, 13, 407, 11, 321, 393, 312, 988, 300, 11], "temperature": 0.0, "avg_logprob": -0.1378857930501302, "compression_ratio": 1.705607476635514, "no_speech_prob": 4.268968950782437e-06}, {"id": 73, "seek": 47096, "start": 491.4, "end": 496.96, "text": " let's say, that the signature is generated by a Titan key. And that is also interesting. So,", "tokens": [718, 311, 584, 11, 300, 264, 13397, 307, 10833, 538, 257, 17731, 2141, 13, 400, 300, 307, 611, 1880, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.1378857930501302, "compression_ratio": 1.705607476635514, "no_speech_prob": 4.268968950782437e-06}, {"id": 74, "seek": 49696, "start": 496.96, "end": 505.52, "text": " attestation together with the metadata, they really add something to this process. So,", "tokens": [951, 377, 399, 1214, 365, 264, 26603, 11, 436, 534, 909, 746, 281, 341, 1399, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.14362359046936035, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.387724478263408e-05}, {"id": 75, "seek": 49696, "start": 505.52, "end": 511.32, "text": " here's an example of the metadata. So, someone built a nice web view of the metadata. So,", "tokens": [510, 311, 364, 1365, 295, 264, 26603, 13, 407, 11, 1580, 3094, 257, 1481, 3670, 1910, 295, 264, 26603, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.14362359046936035, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.387724478263408e-05}, {"id": 76, "seek": 49696, "start": 511.32, "end": 516.8, "text": " you can look up things like, of course, who's the vendor of this Yubiqui or this security key.", "tokens": [291, 393, 574, 493, 721, 411, 11, 295, 1164, 11, 567, 311, 264, 24321, 295, 341, 398, 836, 3221, 72, 420, 341, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.14362359046936035, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.387724478263408e-05}, {"id": 77, "seek": 49696, "start": 516.8, "end": 525.12, "text": " But also, is it using protected hardware? And is it certified to a certain security web? So,", "tokens": [583, 611, 11, 307, 309, 1228, 10594, 8837, 30, 400, 307, 309, 18580, 281, 257, 1629, 3825, 3670, 30, 407, 11], "temperature": 0.0, "avg_logprob": -0.14362359046936035, "compression_ratio": 1.6470588235294117, "no_speech_prob": 1.387724478263408e-05}, {"id": 78, "seek": 52512, "start": 525.12, "end": 532.16, "text": " all these things you can actually use in, actually, yeah. So, I'm not going to do any demo. So,", "tokens": [439, 613, 721, 291, 393, 767, 764, 294, 11, 767, 11, 1338, 13, 407, 11, 286, 478, 406, 516, 281, 360, 604, 10723, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.1512963506910536, "compression_ratio": 1.690909090909091, "no_speech_prob": 3.571040360839106e-05}, {"id": 79, "seek": 52512, "start": 532.16, "end": 536.5600000000001, "text": " I include all my demo slides for you to try yourself. So, we don't have time here. But,", "tokens": [286, 4090, 439, 452, 10723, 9788, 337, 291, 281, 853, 1803, 13, 407, 11, 321, 500, 380, 362, 565, 510, 13, 583, 11], "temperature": 0.0, "avg_logprob": -0.1512963506910536, "compression_ratio": 1.690909090909091, "no_speech_prob": 3.571040360839106e-05}, {"id": 80, "seek": 52512, "start": 536.5600000000001, "end": 542.96, "text": " I'm just leaving them in the slides so you can actually try. So, this is a way to extract", "tokens": [286, 478, 445, 5012, 552, 294, 264, 9788, 370, 291, 393, 767, 853, 13, 407, 11, 341, 307, 257, 636, 281, 8947], "temperature": 0.0, "avg_logprob": -0.1512963506910536, "compression_ratio": 1.690909090909091, "no_speech_prob": 3.571040360839106e-05}, {"id": 81, "seek": 52512, "start": 542.96, "end": 552.8, "text": " metadata. So, it's a bit technical. But, if you want to try it, please do. Then, about open source", "tokens": [26603, 13, 407, 11, 309, 311, 257, 857, 6191, 13, 583, 11, 498, 291, 528, 281, 853, 309, 11, 1767, 360, 13, 1396, 11, 466, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.1512963506910536, "compression_ratio": 1.690909090909091, "no_speech_prob": 3.571040360839106e-05}, {"id": 82, "seek": 55280, "start": 552.8, "end": 561.16, "text": " software. So, Yubico publishes a FIDO library. And it's actually used by a lot of open source", "tokens": [4722, 13, 407, 11, 398, 836, 2789, 11374, 279, 257, 479, 2777, 46, 6405, 13, 400, 309, 311, 767, 1143, 538, 257, 688, 295, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.1327668274983321, "compression_ratio": 1.6383928571428572, "no_speech_prob": 9.529211820336059e-05}, {"id": 83, "seek": 55280, "start": 561.16, "end": 566.8, "text": " projects. So, this is open source, although it's produced by Yubico. And, yeah, if you look at,", "tokens": [4455, 13, 407, 11, 341, 307, 1269, 4009, 11, 4878, 309, 311, 7126, 538, 398, 836, 2789, 13, 400, 11, 1338, 11, 498, 291, 574, 412, 11], "temperature": 0.0, "avg_logprob": -0.1327668274983321, "compression_ratio": 1.6383928571428572, "no_speech_prob": 9.529211820336059e-05}, {"id": 84, "seek": 55280, "start": 566.8, "end": 571.4799999999999, "text": " for example, GitHub and you look at all the projects that use this library, then there's", "tokens": [337, 1365, 11, 23331, 293, 291, 574, 412, 439, 264, 4455, 300, 764, 341, 6405, 11, 550, 456, 311], "temperature": 0.0, "avg_logprob": -0.1327668274983321, "compression_ratio": 1.6383928571428572, "no_speech_prob": 9.529211820336059e-05}, {"id": 85, "seek": 55280, "start": 571.4799999999999, "end": 576.7199999999999, "text": " lots of interesting projects that do it. And that means that you can use a security key,", "tokens": [3195, 295, 1880, 4455, 300, 360, 309, 13, 400, 300, 1355, 300, 291, 393, 764, 257, 3825, 2141, 11], "temperature": 0.0, "avg_logprob": -0.1327668274983321, "compression_ratio": 1.6383928571428572, "no_speech_prob": 9.529211820336059e-05}, {"id": 86, "seek": 57672, "start": 576.72, "end": 584.08, "text": " any security key by any vendor, using that software. And, yeah, what I'll do in this,", "tokens": [604, 3825, 2141, 538, 604, 24321, 11, 1228, 300, 4722, 13, 400, 11, 1338, 11, 437, 286, 603, 360, 294, 341, 11], "temperature": 0.0, "avg_logprob": -0.14325484251364684, "compression_ratio": 1.637037037037037, "no_speech_prob": 3.689779623528011e-05}, {"id": 87, "seek": 57672, "start": 584.08, "end": 587.6, "text": " and the rest of the talk is give you some examples. But, because it's interesting that,", "tokens": [293, 264, 1472, 295, 264, 751, 307, 976, 291, 512, 5110, 13, 583, 11, 570, 309, 311, 1880, 300, 11], "temperature": 0.0, "avg_logprob": -0.14325484251364684, "compression_ratio": 1.637037037037037, "no_speech_prob": 3.689779623528011e-05}, {"id": 88, "seek": 57672, "start": 587.6, "end": 593.48, "text": " although FIDO was primarily intended to do authentication, you can actually do other", "tokens": [4878, 479, 2777, 46, 390, 10029, 10226, 281, 360, 26643, 11, 291, 393, 767, 360, 661], "temperature": 0.0, "avg_logprob": -0.14325484251364684, "compression_ratio": 1.637037037037037, "no_speech_prob": 3.689779623528011e-05}, {"id": 89, "seek": 57672, "start": 593.48, "end": 597.44, "text": " things. You can do encryption. You can do signing. And you can actually store things on the", "tokens": [721, 13, 509, 393, 360, 29575, 13, 509, 393, 360, 13393, 13, 400, 291, 393, 767, 3531, 721, 322, 264], "temperature": 0.0, "avg_logprob": -0.14325484251364684, "compression_ratio": 1.637037037037037, "no_speech_prob": 3.689779623528011e-05}, {"id": 90, "seek": 57672, "start": 597.44, "end": 604.32, "text": " YubiKey. So, I'll give an example of all these features. So, let's start with a very simple", "tokens": [398, 836, 72, 42, 2030, 13, 407, 11, 286, 603, 976, 364, 1365, 295, 439, 613, 4122, 13, 407, 11, 718, 311, 722, 365, 257, 588, 2199], "temperature": 0.0, "avg_logprob": -0.14325484251364684, "compression_ratio": 1.637037037037037, "no_speech_prob": 3.689779623528011e-05}, {"id": 91, "seek": 60432, "start": 604.32, "end": 610.84, "text": " example, like a pluggable authentication module. So, that's another open source library that is", "tokens": [1365, 11, 411, 257, 499, 3562, 712, 26643, 10088, 13, 407, 11, 300, 311, 1071, 1269, 4009, 6405, 300, 307], "temperature": 0.0, "avg_logprob": -0.19994552318866438, "compression_ratio": 1.2890625, "no_speech_prob": 0.0002610722731333226}, {"id": 92, "seek": 61084, "start": 610.84, "end": 638.36, "text": " included in many Linux distributions. And the idea is that you can...", "tokens": [5556, 294, 867, 18734, 37870, 13, 400, 264, 1558, 307, 300, 291, 393, 485], "temperature": 0.2, "avg_logprob": -0.3227313624487983, "compression_ratio": 0.9857142857142858, "no_speech_prob": 0.00027746905107051134}, {"id": 93, "seek": 63836, "start": 638.36, "end": 649.5, "text": "...", "tokens": [1097], "temperature": 1.0, "avg_logprob": -2.3454479217529296, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.0004050832649227232}, {"id": 94, "seek": 64950, "start": 649.5, "end": 651.56, "text": " you", "tokens": [50364, 291, 50467], "temperature": 0.0, "avg_logprob": -0.5458500981330872, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.9442904591560364}, {"id": 95, "seek": 67950, "start": 679.5, "end": 681.56, "text": " you", "tokens": [50364, 291, 50467], "temperature": 0.0, "avg_logprob": -0.8291592001914978, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.8384156227111816}, {"id": 96, "seek": 70950, "start": 709.5, "end": 711.56, "text": " you", "tokens": [50364, 291, 50467], "temperature": 0.0, "avg_logprob": -0.8709495067596436, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.7874593138694763}, {"id": 97, "seek": 73950, "start": 739.5, "end": 741.56, "text": " you", "tokens": [50364, 291, 50467], "temperature": 0.0, "avg_logprob": -0.9364416599273682, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.7413519620895386}, {"id": 98, "seek": 94950, "start": 949.5, "end": 978.5, "text": " you", "tokens": [291], "temperature": 1.0, "avg_logprob": -1.3961395263671874, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.5010215044021606}, {"id": 99, "seek": 97850, "start": 978.5, "end": 983.5, "text": " Open source software, you can try it out yourself,", "tokens": [7238, 4009, 4722, 11, 291, 393, 853, 309, 484, 1803, 11], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 100, "seek": 97850, "start": 983.5, "end": 985.5, "text": " but let's give a practical example.", "tokens": [457, 718, 311, 976, 257, 8496, 1365, 13], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 101, "seek": 97850, "start": 985.5, "end": 988.5, "text": " Let's say that you want to encrypt your hard disk.", "tokens": [961, 311, 584, 300, 291, 528, 281, 17972, 662, 428, 1152, 12355, 13], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 102, "seek": 97850, "start": 988.5, "end": 990.5, "text": " You're on a Linux system, you're using a Lux,", "tokens": [509, 434, 322, 257, 18734, 1185, 11, 291, 434, 1228, 257, 25767, 11], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 103, "seek": 97850, "start": 990.5, "end": 993.5, "text": " and typically this is done using a password.", "tokens": [293, 5850, 341, 307, 1096, 1228, 257, 11524, 13], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 104, "seek": 97850, "start": 993.5, "end": 997.5, "text": " Instead of using a password, you can also use a security key,", "tokens": [7156, 295, 1228, 257, 11524, 11, 291, 393, 611, 764, 257, 3825, 2141, 11], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 105, "seek": 97850, "start": 997.5, "end": 1003.5, "text": " a FIDO key, that instead of deriving some encryption key", "tokens": [257, 479, 2777, 46, 2141, 11, 300, 2602, 295, 1163, 2123, 512, 29575, 2141], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 106, "seek": 97850, "start": 1003.5, "end": 1006.5, "text": " from your password, it will derive the encryption key", "tokens": [490, 428, 11524, 11, 309, 486, 28446, 264, 29575, 2141], "temperature": 0.0, "avg_logprob": -0.16577424136075106, "compression_ratio": 1.7210300429184548, "no_speech_prob": 0.19012543559074402}, {"id": 107, "seek": 100650, "start": 1006.5, "end": 1011.5, "text": " from this extra key that is generated on your security key.", "tokens": [490, 341, 2857, 2141, 300, 307, 10833, 322, 428, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 108, "seek": 100650, "start": 1011.5, "end": 1014.5, "text": " So this means that if you want to decrypt your hard disk,", "tokens": [407, 341, 1355, 300, 498, 291, 528, 281, 979, 627, 662, 428, 1152, 12355, 11], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 109, "seek": 100650, "start": 1014.5, "end": 1017.5, "text": " you just need to insert your security key,", "tokens": [291, 445, 643, 281, 8969, 428, 3825, 2141, 11], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 110, "seek": 100650, "start": 1017.5, "end": 1022.5, "text": " so this is what you have factor to get some extra confidence", "tokens": [370, 341, 307, 437, 291, 362, 5952, 281, 483, 512, 2857, 6687], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 111, "seek": 100650, "start": 1022.5, "end": 1025.5, "text": " that only you can decrypt that hard disk.", "tokens": [300, 787, 291, 393, 979, 627, 662, 300, 1152, 12355, 13], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 112, "seek": 100650, "start": 1025.5, "end": 1029.5, "text": " So worth looking at.", "tokens": [407, 3163, 1237, 412, 13], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 113, "seek": 100650, "start": 1029.5, "end": 1033.5, "text": " Then there's another extension called large blocks,", "tokens": [1396, 456, 311, 1071, 10320, 1219, 2416, 8474, 11], "temperature": 0.0, "avg_logprob": -0.126354388976365, "compression_ratio": 1.68, "no_speech_prob": 2.1935413315077312e-05}, {"id": 114, "seek": 103350, "start": 1033.5, "end": 1037.5, "text": " and this is for storing things on your security key.", "tokens": [293, 341, 307, 337, 26085, 721, 322, 428, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 115, "seek": 103350, "start": 1037.5, "end": 1040.5, "text": " So it doesn't have a lot of space,", "tokens": [407, 309, 1177, 380, 362, 257, 688, 295, 1901, 11], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 116, "seek": 103350, "start": 1040.5, "end": 1043.5, "text": " but this is typically used for storing certificates.", "tokens": [457, 341, 307, 5850, 1143, 337, 26085, 32941, 13], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 117, "seek": 103350, "start": 1043.5, "end": 1045.5, "text": " So let's say you're using SSH,", "tokens": [407, 718, 311, 584, 291, 434, 1228, 12238, 39, 11], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 118, "seek": 103350, "start": 1045.5, "end": 1048.5, "text": " and you use SSH with SSH certificates.", "tokens": [293, 291, 764, 12238, 39, 365, 12238, 39, 32941, 13], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 119, "seek": 103350, "start": 1048.5, "end": 1052.5, "text": " These are small files, and it's feasible to store them", "tokens": [1981, 366, 1359, 7098, 11, 293, 309, 311, 26648, 281, 3531, 552], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 120, "seek": 103350, "start": 1052.5, "end": 1054.5, "text": " on your security key.", "tokens": [322, 428, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 121, "seek": 103350, "start": 1054.5, "end": 1058.5, "text": " So this is an extension that is not very often implemented", "tokens": [407, 341, 307, 364, 10320, 300, 307, 406, 588, 2049, 12270], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 122, "seek": 103350, "start": 1058.5, "end": 1060.5, "text": " at the moment.", "tokens": [412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.10049152374267578, "compression_ratio": 1.7272727272727273, "no_speech_prob": 6.547229713760316e-05}, {"id": 123, "seek": 106050, "start": 1060.5, "end": 1063.5, "text": " I think there are a couple of vendors", "tokens": [286, 519, 456, 366, 257, 1916, 295, 22056], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 124, "seek": 106050, "start": 1063.5, "end": 1065.5, "text": " that actually implement this,", "tokens": [300, 767, 4445, 341, 11], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 125, "seek": 106050, "start": 1065.5, "end": 1069.5, "text": " but it means that if you move to a different system", "tokens": [457, 309, 1355, 300, 498, 291, 1286, 281, 257, 819, 1185], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 126, "seek": 106050, "start": 1069.5, "end": 1071.5, "text": " and you want to log in there,", "tokens": [293, 291, 528, 281, 3565, 294, 456, 11], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 127, "seek": 106050, "start": 1071.5, "end": 1073.5, "text": " you can actually take your security key", "tokens": [291, 393, 767, 747, 428, 3825, 2141], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 128, "seek": 106050, "start": 1073.5, "end": 1076.5, "text": " and extract both the public key and the certificates.", "tokens": [293, 8947, 1293, 264, 1908, 2141, 293, 264, 32941, 13], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 129, "seek": 106050, "start": 1076.5, "end": 1079.5, "text": " Of course, the private key stays on your key and your security key,", "tokens": [2720, 1164, 11, 264, 4551, 2141, 10834, 322, 428, 2141, 293, 428, 3825, 2141, 11], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 130, "seek": 106050, "start": 1079.5, "end": 1082.5, "text": " and then log into a remote server from there,", "tokens": [293, 550, 3565, 666, 257, 8607, 7154, 490, 456, 11], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 131, "seek": 106050, "start": 1082.5, "end": 1088.5, "text": " so everything is contained in the same security key.", "tokens": [370, 1203, 307, 16212, 294, 264, 912, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.08451021634615384, "compression_ratio": 1.8222222222222222, "no_speech_prob": 4.795528730028309e-05}, {"id": 132, "seek": 108850, "start": 1088.5, "end": 1091.5, "text": " Here's an example how you do this with the tools.", "tokens": [1692, 311, 364, 1365, 577, 291, 360, 341, 365, 264, 3873, 13], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 133, "seek": 108850, "start": 1091.5, "end": 1095.5, "text": " Do it yourself if you have a key that supports it.", "tokens": [1144, 309, 1803, 498, 291, 362, 257, 2141, 300, 9346, 309, 13], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 134, "seek": 108850, "start": 1095.5, "end": 1099.5, "text": " Finally, last example about this attestation.", "tokens": [6288, 11, 1036, 1365, 466, 341, 951, 377, 399, 13], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 135, "seek": 108850, "start": 1099.5, "end": 1103.5, "text": " So if you generate an SSH key that is backed by a security key,", "tokens": [407, 498, 291, 8460, 364, 12238, 39, 2141, 300, 307, 20391, 538, 257, 3825, 2141, 11], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 136, "seek": 108850, "start": 1103.5, "end": 1107.5, "text": " you can actually ask the security key to provide attestation.", "tokens": [291, 393, 767, 1029, 264, 3825, 2141, 281, 2893, 951, 377, 399, 13], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 137, "seek": 108850, "start": 1107.5, "end": 1110.5, "text": " So there's this extra parameter in SSH key gen", "tokens": [407, 456, 311, 341, 2857, 13075, 294, 12238, 39, 2141, 1049], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 138, "seek": 108850, "start": 1110.5, "end": 1114.5, "text": " that will extract the attestation data, it is called,", "tokens": [300, 486, 8947, 264, 951, 377, 399, 1412, 11, 309, 307, 1219, 11], "temperature": 0.0, "avg_logprob": -0.11459026521849401, "compression_ratio": 1.7348837209302326, "no_speech_prob": 1.4372818441188429e-05}, {"id": 139, "seek": 111450, "start": 1114.5, "end": 1118.5, "text": " that you can look up in the FIDO metadata service,", "tokens": [300, 291, 393, 574, 493, 294, 264, 479, 2777, 46, 26603, 2643, 11], "temperature": 0.0, "avg_logprob": -0.1443551220471346, "compression_ratio": 1.548913043478261, "no_speech_prob": 1.1732820894394536e-05}, {"id": 140, "seek": 111450, "start": 1118.5, "end": 1123.5, "text": " and this way you can prove that the signature was generated", "tokens": [293, 341, 636, 291, 393, 7081, 300, 264, 13397, 390, 10833], "temperature": 0.0, "avg_logprob": -0.1443551220471346, "compression_ratio": 1.548913043478261, "no_speech_prob": 1.1732820894394536e-05}, {"id": 141, "seek": 111450, "start": 1123.5, "end": 1128.5, "text": " by some security key, and you can look up exactly which one,", "tokens": [538, 512, 3825, 2141, 11, 293, 291, 393, 574, 493, 2293, 597, 472, 11], "temperature": 0.0, "avg_logprob": -0.1443551220471346, "compression_ratio": 1.548913043478261, "no_speech_prob": 1.1732820894394536e-05}, {"id": 142, "seek": 111450, "start": 1128.5, "end": 1134.5, "text": " and you're certain that this is done with secure hardware.", "tokens": [293, 291, 434, 1629, 300, 341, 307, 1096, 365, 7144, 8837, 13], "temperature": 0.0, "avg_logprob": -0.1443551220471346, "compression_ratio": 1.548913043478261, "no_speech_prob": 1.1732820894394536e-05}, {"id": 143, "seek": 111450, "start": 1134.5, "end": 1138.5, "text": " Okay, you can try it out.", "tokens": [1033, 11, 291, 393, 853, 309, 484, 13], "temperature": 0.0, "avg_logprob": -0.1443551220471346, "compression_ratio": 1.548913043478261, "no_speech_prob": 1.1732820894394536e-05}, {"id": 144, "seek": 111450, "start": 1138.5, "end": 1142.5, "text": " So, getting to a conclusion,", "tokens": [407, 11, 1242, 281, 257, 10063, 11], "temperature": 0.0, "avg_logprob": -0.1443551220471346, "compression_ratio": 1.548913043478261, "no_speech_prob": 1.1732820894394536e-05}, {"id": 145, "seek": 114250, "start": 1142.5, "end": 1145.5, "text": " so I'm not saying you have to stop using PGP or anything,", "tokens": [370, 286, 478, 406, 1566, 291, 362, 281, 1590, 1228, 40975, 47, 420, 1340, 11], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 146, "seek": 114250, "start": 1145.5, "end": 1151.5, "text": " but this is an alternative to doing things with secure hardware,", "tokens": [457, 341, 307, 364, 8535, 281, 884, 721, 365, 7144, 8837, 11], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 147, "seek": 114250, "start": 1151.5, "end": 1156.5, "text": " and the idea is now that since all the big vendors,", "tokens": [293, 264, 1558, 307, 586, 300, 1670, 439, 264, 955, 22056, 11], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 148, "seek": 114250, "start": 1156.5, "end": 1158.5, "text": " like Apple, Google, and Microsoft,", "tokens": [411, 6373, 11, 3329, 11, 293, 8116, 11], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 149, "seek": 114250, "start": 1158.5, "end": 1161.5, "text": " they've jumped on the FIDO bandwagon", "tokens": [436, 600, 13864, 322, 264, 479, 2777, 46, 4116, 86, 6709], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 150, "seek": 114250, "start": 1161.5, "end": 1164.5, "text": " so we can see a lot more support for FIDO in the future.", "tokens": [370, 321, 393, 536, 257, 688, 544, 1406, 337, 479, 2777, 46, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 151, "seek": 114250, "start": 1164.5, "end": 1169.5, "text": " That means that a lot more people will own a FIDO security key.", "tokens": [663, 1355, 300, 257, 688, 544, 561, 486, 1065, 257, 479, 2777, 46, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.09286059973374852, "compression_ratio": 1.5355648535564854, "no_speech_prob": 5.687379598384723e-05}, {"id": 152, "seek": 116950, "start": 1169.5, "end": 1172.5, "text": " For example, I already mentioned this morning,", "tokens": [1171, 1365, 11, 286, 1217, 2835, 341, 2446, 11], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 153, "seek": 116950, "start": 1172.5, "end": 1174.5, "text": " if you have an Apple iOS device,", "tokens": [498, 291, 362, 364, 6373, 17430, 4302, 11], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 154, "seek": 116950, "start": 1174.5, "end": 1179.5, "text": " you can protect your Apple ID using a FIDO security key.", "tokens": [291, 393, 2371, 428, 6373, 7348, 1228, 257, 479, 2777, 46, 3825, 2141, 13], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 155, "seek": 116950, "start": 1179.5, "end": 1186.5, "text": " So it's built into iOS 16.3, I think.", "tokens": [407, 309, 311, 3094, 666, 17430, 3165, 13, 18, 11, 286, 519, 13], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 156, "seek": 116950, "start": 1186.5, "end": 1189.5, "text": " So this means that it is a viable alternative", "tokens": [407, 341, 1355, 300, 309, 307, 257, 22024, 8535], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 157, "seek": 116950, "start": 1189.5, "end": 1194.5, "text": " that's actually also a lot cheaper than many of the other hardware keys", "tokens": [300, 311, 767, 611, 257, 688, 12284, 813, 867, 295, 264, 661, 8837, 9317], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 158, "seek": 116950, "start": 1194.5, "end": 1197.5, "text": " that you can buy, like a smart card.", "tokens": [300, 291, 393, 2256, 11, 411, 257, 4069, 2920, 13], "temperature": 0.0, "avg_logprob": -0.09820516647831086, "compression_ratio": 1.4753363228699552, "no_speech_prob": 2.2647249352303334e-05}, {"id": 159, "seek": 119750, "start": 1197.5, "end": 1201.5, "text": " So I think for 20 or 30 barbs you can buy a FIDO security key,", "tokens": [407, 286, 519, 337, 945, 420, 2217, 2159, 929, 291, 393, 2256, 257, 479, 2777, 46, 3825, 2141, 11], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 160, "seek": 119750, "start": 1201.5, "end": 1205.5, "text": " whereas smart cards are usually,", "tokens": [9735, 4069, 5632, 366, 2673, 11], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 161, "seek": 119750, "start": 1205.5, "end": 1207.5, "text": " especially if you consider all the middleware", "tokens": [2318, 498, 291, 1949, 439, 264, 2808, 3039], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 162, "seek": 119750, "start": 1207.5, "end": 1210.5, "text": " and everything else that you need to get it working,", "tokens": [293, 1203, 1646, 300, 291, 643, 281, 483, 309, 1364, 11], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 163, "seek": 119750, "start": 1210.5, "end": 1214.5, "text": " that can be a lot more expensive.", "tokens": [300, 393, 312, 257, 688, 544, 5124, 13], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 164, "seek": 119750, "start": 1214.5, "end": 1218.5, "text": " So, just a list of resources.", "tokens": [407, 11, 445, 257, 1329, 295, 3593, 13], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 165, "seek": 119750, "start": 1218.5, "end": 1220.5, "text": " If you want to look up things, of course, you can also contact me.", "tokens": [759, 291, 528, 281, 574, 493, 721, 11, 295, 1164, 11, 291, 393, 611, 3385, 385, 13], "temperature": 0.0, "avg_logprob": -0.11248103992359058, "compression_ratio": 1.5411764705882354, "no_speech_prob": 4.88517944177147e-05}, {"id": 166, "seek": 122050, "start": 1220.5, "end": 1229.5, "text": " I'll be here all day and happy to take questions if there are any.", "tokens": [286, 603, 312, 510, 439, 786, 293, 2055, 281, 747, 1651, 498, 456, 366, 604, 13], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 167, "seek": 122050, "start": 1229.5, "end": 1232.5, "text": " Hi, I have a question about the attestation process", "tokens": [2421, 11, 286, 362, 257, 1168, 466, 264, 951, 377, 399, 1399], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 168, "seek": 122050, "start": 1232.5, "end": 1236.5, "text": " and open implementations of FIDO 2.", "tokens": [293, 1269, 4445, 763, 295, 479, 2777, 46, 568, 13], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 169, "seek": 122050, "start": 1236.5, "end": 1238.5, "text": " If you have an open implementation,", "tokens": [759, 291, 362, 364, 1269, 11420, 11], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 170, "seek": 122050, "start": 1238.5, "end": 1242.5, "text": " is it possible to get that certified with FIDO 2 Alliance?", "tokens": [307, 309, 1944, 281, 483, 300, 18580, 365, 479, 2777, 46, 568, 21859, 30], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 171, "seek": 122050, "start": 1242.5, "end": 1245.5, "text": " My understanding is that in order to enable the people", "tokens": [1222, 3701, 307, 300, 294, 1668, 281, 9528, 264, 561], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 172, "seek": 122050, "start": 1245.5, "end": 1248.5, "text": " to compile their own binaries to put on their own open keys,", "tokens": [281, 31413, 641, 1065, 5171, 4889, 281, 829, 322, 641, 1065, 1269, 9317, 11], "temperature": 0.0, "avg_logprob": -0.08156366059274385, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.00012973307457286865}, {"id": 173, "seek": 124850, "start": 1248.5, "end": 1250.5, "text": " is that possible or is it not?", "tokens": [307, 300, 1944, 420, 307, 309, 406, 30], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 174, "seek": 124850, "start": 1250.5, "end": 1253.5, "text": " Yes, so as a line party,", "tokens": [1079, 11, 370, 382, 257, 1622, 3595, 11], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 175, "seek": 124850, "start": 1253.5, "end": 1257.5, "text": " there's a certification process that you can use to test", "tokens": [456, 311, 257, 21775, 1399, 300, 291, 393, 764, 281, 1500], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 176, "seek": 124850, "start": 1257.5, "end": 1261.5, "text": " if you are compatible with the FIDO standards.", "tokens": [498, 291, 366, 18218, 365, 264, 479, 2777, 46, 7787, 13], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 177, "seek": 124850, "start": 1261.5, "end": 1267.5, "text": " So there's different certification programs.", "tokens": [407, 456, 311, 819, 21775, 4268, 13], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 178, "seek": 124850, "start": 1267.5, "end": 1271.5, "text": " The most heavy ones are for the actual security keys.", "tokens": [440, 881, 4676, 2306, 366, 337, 264, 3539, 3825, 9317, 13], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 179, "seek": 124850, "start": 1271.5, "end": 1275.5, "text": " So there you have to actually do a lot of work to get it certified.", "tokens": [407, 456, 291, 362, 281, 767, 360, 257, 688, 295, 589, 281, 483, 309, 18580, 13], "temperature": 0.0, "avg_logprob": -0.14914801987734708, "compression_ratio": 1.5825242718446602, "no_speech_prob": 0.00023315231373999268}, {"id": 180, "seek": 127550, "start": 1275.5, "end": 1279.5, "text": " But there's also a self-certification toolkit, I think,", "tokens": [583, 456, 311, 611, 257, 2698, 12, 48999, 3774, 40167, 11, 286, 519, 11], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 181, "seek": 127550, "start": 1279.5, "end": 1283.5, "text": " that you can use to see if you are compatible with FIDO standards.", "tokens": [300, 291, 393, 764, 281, 536, 498, 291, 366, 18218, 365, 479, 2777, 46, 7787, 13], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 182, "seek": 127550, "start": 1283.5, "end": 1287.5, "text": " So there's a lot of tests you can run against your own line party software.", "tokens": [407, 456, 311, 257, 688, 295, 6921, 291, 393, 1190, 1970, 428, 1065, 1622, 3595, 4722, 13], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 183, "seek": 127550, "start": 1287.5, "end": 1289.5, "text": " Can you do something?", "tokens": [1664, 291, 360, 746, 30], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 184, "seek": 127550, "start": 1289.5, "end": 1292.5, "text": " Yeah, yeah, yeah.", "tokens": [865, 11, 1338, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 185, "seek": 127550, "start": 1292.5, "end": 1294.5, "text": " Any other questions?", "tokens": [2639, 661, 1651, 30], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 186, "seek": 127550, "start": 1294.5, "end": 1299.5, "text": " What is publicly known about hardware tokens failure rates,", "tokens": [708, 307, 14843, 2570, 466, 8837, 22667, 7763, 6846, 11], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 187, "seek": 127550, "start": 1299.5, "end": 1302.5, "text": " at least for popular models,", "tokens": [412, 1935, 337, 3743, 5245, 11], "temperature": 0.0, "avg_logprob": -0.14810505509376526, "compression_ratio": 1.4871794871794872, "no_speech_prob": 0.0004989299923181534}, {"id": 188, "seek": 130250, "start": 1302.5, "end": 1306.5, "text": " and how many identical devices would you enroll", "tokens": [293, 577, 867, 14800, 5759, 576, 291, 12266], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 189, "seek": 130250, "start": 1306.5, "end": 1309.5, "text": " for the most important things personally?", "tokens": [337, 264, 881, 1021, 721, 5665, 30], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 190, "seek": 130250, "start": 1309.5, "end": 1312.5, "text": " The question is, I think, two-fold.", "tokens": [440, 1168, 307, 11, 286, 519, 11, 732, 12, 18353, 13], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 191, "seek": 130250, "start": 1312.5, "end": 1315.5, "text": " First is about failure rates.", "tokens": [2386, 307, 466, 7763, 6846, 13], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 192, "seek": 130250, "start": 1315.5, "end": 1317.5, "text": " Actually, I don't know about failure rates,", "tokens": [5135, 11, 286, 500, 380, 458, 466, 7763, 6846, 11], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 193, "seek": 130250, "start": 1317.5, "end": 1321.5, "text": " but of course there's different ways to do user verification,", "tokens": [457, 295, 1164, 456, 311, 819, 2098, 281, 360, 4195, 30206, 11], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 194, "seek": 130250, "start": 1321.5, "end": 1323.5, "text": " and I skipped over it a bit,", "tokens": [293, 286, 30193, 670, 309, 257, 857, 11], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 195, "seek": 130250, "start": 1323.5, "end": 1326.5, "text": " but to use a security key you need to either touch it", "tokens": [457, 281, 764, 257, 3825, 2141, 291, 643, 281, 2139, 2557, 309], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 196, "seek": 130250, "start": 1326.5, "end": 1329.5, "text": " and sometimes also prove that you are using it.", "tokens": [293, 2171, 611, 7081, 300, 291, 366, 1228, 309, 13], "temperature": 0.0, "avg_logprob": -0.1026849838403555, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.0005234355921857059}, {"id": 197, "seek": 132950, "start": 1329.5, "end": 1333.5, "text": " And this is done typically with a pin or with a biometric.", "tokens": [400, 341, 307, 1096, 5850, 365, 257, 5447, 420, 365, 257, 3228, 29470, 13], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 198, "seek": 132950, "start": 1333.5, "end": 1335.5, "text": " So I don't think...", "tokens": [407, 286, 500, 380, 519, 485], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 199, "seek": 132950, "start": 1335.5, "end": 1338.5, "text": " I've never seen a security key fail,", "tokens": [286, 600, 1128, 1612, 257, 3825, 2141, 3061, 11], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 200, "seek": 132950, "start": 1338.5, "end": 1340.5, "text": " except when it's using biometrics,", "tokens": [3993, 562, 309, 311, 1228, 3228, 649, 10716, 11], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 201, "seek": 132950, "start": 1340.5, "end": 1343.5, "text": " because of course that is a less...", "tokens": [570, 295, 1164, 300, 307, 257, 1570, 485], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 202, "seek": 132950, "start": 1343.5, "end": 1347.5, "text": " So every biometric has a false acceptance rate", "tokens": [407, 633, 3228, 29470, 575, 257, 7908, 20351, 3314], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 203, "seek": 132950, "start": 1347.5, "end": 1350.5, "text": " and a false rejection rate.", "tokens": [293, 257, 7908, 26044, 3314, 13], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 204, "seek": 132950, "start": 1350.5, "end": 1354.5, "text": " And yeah, I don't know numbers,", "tokens": [400, 1338, 11, 286, 500, 380, 458, 3547, 11], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 205, "seek": 132950, "start": 1354.5, "end": 1357.5, "text": " but it differs with different vendors.", "tokens": [457, 309, 37761, 365, 819, 22056, 13], "temperature": 0.0, "avg_logprob": -0.10401204689261839, "compression_ratio": 1.5809523809523809, "no_speech_prob": 6.082260006223805e-05}, {"id": 206, "seek": 135750, "start": 1357.5, "end": 1360.5, "text": " So I think Apple doesn't say anything", "tokens": [407, 286, 519, 6373, 1177, 380, 584, 1340], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 207, "seek": 135750, "start": 1360.5, "end": 1363.5, "text": " about their false acceptance rate, for example.", "tokens": [466, 641, 7908, 20351, 3314, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 208, "seek": 135750, "start": 1363.5, "end": 1365.5, "text": " So I guess you just have to trust them,", "tokens": [407, 286, 2041, 291, 445, 362, 281, 3361, 552, 11], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 209, "seek": 135750, "start": 1365.5, "end": 1368.5, "text": " and that is with many vendors.", "tokens": [293, 300, 307, 365, 867, 22056, 13], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 210, "seek": 135750, "start": 1368.5, "end": 1371.5, "text": " Then this... I missed the second part of your question.", "tokens": [1396, 341, 485, 286, 6721, 264, 1150, 644, 295, 428, 1168, 13], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 211, "seek": 135750, "start": 1371.5, "end": 1373.5, "text": " This...", "tokens": [639, 485], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 212, "seek": 135750, "start": 1377.5, "end": 1379.5, "text": " Oh yeah, so already mentioned,", "tokens": [876, 1338, 11, 370, 1217, 2835, 11], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 213, "seek": 135750, "start": 1379.5, "end": 1381.5, "text": " if you use your security key you have a problem,", "tokens": [498, 291, 764, 428, 3825, 2141, 291, 362, 257, 1154, 11], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 214, "seek": 135750, "start": 1381.5, "end": 1385.5, "text": " so you want to have multiple public keys registered,", "tokens": [370, 291, 528, 281, 362, 3866, 1908, 9317, 13968, 11], "temperature": 0.0, "avg_logprob": -0.16791184743245444, "compression_ratio": 1.5414847161572052, "no_speech_prob": 0.00036119247670285404}, {"id": 215, "seek": 138550, "start": 1385.5, "end": 1389.5, "text": " and how many, that depends on the relying party.", "tokens": [293, 577, 867, 11, 300, 5946, 322, 264, 24140, 3595, 13], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 216, "seek": 138550, "start": 1389.5, "end": 1395.5, "text": " So some relying parties initially only allow you to register one,", "tokens": [407, 512, 24140, 8265, 9105, 787, 2089, 291, 281, 7280, 472, 11], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 217, "seek": 138550, "start": 1395.5, "end": 1398.5, "text": " so that's pretty useless, because if you lose that one,", "tokens": [370, 300, 311, 1238, 14115, 11, 570, 498, 291, 3624, 300, 472, 11], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 218, "seek": 138550, "start": 1398.5, "end": 1400.5, "text": " then you're out of business.", "tokens": [550, 291, 434, 484, 295, 1606, 13], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 219, "seek": 138550, "start": 1400.5, "end": 1403.5, "text": " So usually there are several,", "tokens": [407, 2673, 456, 366, 2940, 11], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 220, "seek": 138550, "start": 1403.5, "end": 1407.5, "text": " and yeah, I think for example on an Apple iOS device", "tokens": [293, 1338, 11, 286, 519, 337, 1365, 322, 364, 6373, 17430, 4302], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 221, "seek": 138550, "start": 1407.5, "end": 1409.5, "text": " you can now register six,", "tokens": [291, 393, 586, 7280, 2309, 11], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 222, "seek": 138550, "start": 1409.5, "end": 1411.5, "text": " but that's really depending on the line party.", "tokens": [457, 300, 311, 534, 5413, 322, 264, 1622, 3595, 13], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 223, "seek": 138550, "start": 1411.5, "end": 1413.5, "text": " So some have an infinite number,", "tokens": [407, 512, 362, 364, 13785, 1230, 11], "temperature": 0.0, "avg_logprob": -0.14494462196643537, "compression_ratio": 1.6724137931034482, "no_speech_prob": 0.0003053798864129931}, {"id": 224, "seek": 141350, "start": 1413.5, "end": 1417.5, "text": " so you can just register as many as you like,", "tokens": [370, 291, 393, 445, 7280, 382, 867, 382, 291, 411, 11], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 225, "seek": 141350, "start": 1417.5, "end": 1420.5, "text": " but that's really depending on the relying party.", "tokens": [457, 300, 311, 534, 5413, 322, 264, 24140, 3595, 13], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 226, "seek": 141350, "start": 1420.5, "end": 1422.5, "text": " Okay, we've got time for our next question.", "tokens": [1033, 11, 321, 600, 658, 565, 337, 527, 958, 1168, 13], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 227, "seek": 141350, "start": 1422.5, "end": 1424.5, "text": " There is an IC hand here.", "tokens": [821, 307, 364, 14360, 1011, 510, 13], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 228, "seek": 141350, "start": 1428.5, "end": 1433.5, "text": " So I guess we have now a single point of failure", "tokens": [407, 286, 2041, 321, 362, 586, 257, 2167, 935, 295, 7763], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 229, "seek": 141350, "start": 1433.5, "end": 1435.5, "text": " with the USB socket,", "tokens": [365, 264, 10109, 19741, 11], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 230, "seek": 141350, "start": 1435.5, "end": 1437.5, "text": " especially if we are travelling.", "tokens": [2318, 498, 321, 366, 20515, 13], "temperature": 0.0, "avg_logprob": -0.17795193659794795, "compression_ratio": 1.4031413612565444, "no_speech_prob": 0.0016085526440292597}, {"id": 231, "seek": 143750, "start": 1437.5, "end": 1444.5, "text": " So are there any plans to have implementation", "tokens": [407, 366, 456, 604, 5482, 281, 362, 11420], "temperature": 0.0, "avg_logprob": -0.20431818068027496, "compression_ratio": 1.3410404624277457, "no_speech_prob": 0.0019546737894415855}, {"id": 232, "seek": 143750, "start": 1444.5, "end": 1449.5, "text": " for the Bluetooth final standards?", "tokens": [337, 264, 20286, 2572, 7787, 30], "temperature": 0.0, "avg_logprob": -0.20431818068027496, "compression_ratio": 1.3410404624277457, "no_speech_prob": 0.0019546737894415855}, {"id": 233, "seek": 143750, "start": 1449.5, "end": 1452.5, "text": " So we don't...", "tokens": [407, 321, 500, 380, 485], "temperature": 0.0, "avg_logprob": -0.20431818068027496, "compression_ratio": 1.3410404624277457, "no_speech_prob": 0.0019546737894415855}, {"id": 234, "seek": 143750, "start": 1452.5, "end": 1457.5, "text": " We can still work if USB is broken,", "tokens": [492, 393, 920, 589, 498, 10109, 307, 5463, 11], "temperature": 0.0, "avg_logprob": -0.20431818068027496, "compression_ratio": 1.3410404624277457, "no_speech_prob": 0.0019546737894415855}, {"id": 235, "seek": 143750, "start": 1457.5, "end": 1459.5, "text": " maybe at the phone or whatever.", "tokens": [1310, 412, 264, 2593, 420, 2035, 13], "temperature": 0.0, "avg_logprob": -0.20431818068027496, "compression_ratio": 1.3410404624277457, "no_speech_prob": 0.0019546737894415855}, {"id": 236, "seek": 143750, "start": 1459.5, "end": 1461.5, "text": " Give it a little quiet,", "tokens": [5303, 309, 257, 707, 5677, 11], "temperature": 0.0, "avg_logprob": -0.20431818068027496, "compression_ratio": 1.3410404624277457, "no_speech_prob": 0.0019546737894415855}, {"id": 237, "seek": 146150, "start": 1461.5, "end": 1468.5, "text": " but I have trouble hearing the question.", "tokens": [457, 286, 362, 5253, 4763, 264, 1168, 13], "temperature": 0.0, "avg_logprob": -0.17073890398133476, "compression_ratio": 1.2903225806451613, "no_speech_prob": 0.000991332926787436}, {"id": 238, "seek": 146150, "start": 1468.5, "end": 1476.5, "text": " Are there any plans for the Bluetooth support in the libraries?", "tokens": [2014, 456, 604, 5482, 337, 264, 20286, 1406, 294, 264, 15148, 30], "temperature": 0.0, "avg_logprob": -0.17073890398133476, "compression_ratio": 1.2903225806451613, "no_speech_prob": 0.000991332926787436}, {"id": 239, "seek": 146150, "start": 1476.5, "end": 1479.5, "text": " Because when...", "tokens": [1436, 562, 485], "temperature": 0.0, "avg_logprob": -0.17073890398133476, "compression_ratio": 1.2903225806451613, "no_speech_prob": 0.000991332926787436}, {"id": 240, "seek": 146150, "start": 1479.5, "end": 1483.5, "text": " Especially let's see if I'm travelling,", "tokens": [8545, 718, 311, 536, 498, 286, 478, 20515, 11], "temperature": 0.0, "avg_logprob": -0.17073890398133476, "compression_ratio": 1.2903225806451613, "no_speech_prob": 0.000991332926787436}, {"id": 241, "seek": 146150, "start": 1483.5, "end": 1487.5, "text": " I often have problems with USB sockets,", "tokens": [286, 2049, 362, 2740, 365, 10109, 370, 11984, 11], "temperature": 0.0, "avg_logprob": -0.17073890398133476, "compression_ratio": 1.2903225806451613, "no_speech_prob": 0.000991332926787436}, {"id": 242, "seek": 148750, "start": 1487.5, "end": 1494.5, "text": " so I would have a single point of failure there.", "tokens": [370, 286, 576, 362, 257, 2167, 935, 295, 7763, 456, 13], "temperature": 0.0, "avg_logprob": -0.15391709009806315, "compression_ratio": 1.5045871559633028, "no_speech_prob": 0.0007934870081953704}, {"id": 243, "seek": 148750, "start": 1494.5, "end": 1497.5, "text": " So you're saying if you have problems with your USB sockets,", "tokens": [407, 291, 434, 1566, 498, 291, 362, 2740, 365, 428, 10109, 370, 11984, 11], "temperature": 0.0, "avg_logprob": -0.15391709009806315, "compression_ratio": 1.5045871559633028, "no_speech_prob": 0.0007934870081953704}, {"id": 244, "seek": 148750, "start": 1497.5, "end": 1500.5, "text": " then you cannot use a key, so is there an alternative?", "tokens": [550, 291, 2644, 764, 257, 2141, 11, 370, 307, 456, 364, 8535, 30], "temperature": 0.0, "avg_logprob": -0.15391709009806315, "compression_ratio": 1.5045871559633028, "no_speech_prob": 0.0007934870081953704}, {"id": 245, "seek": 148750, "start": 1500.5, "end": 1504.5, "text": " And I would prefer to have some Bluetooth fallback then.", "tokens": [400, 286, 576, 4382, 281, 362, 512, 20286, 2100, 3207, 550, 13], "temperature": 0.0, "avg_logprob": -0.15391709009806315, "compression_ratio": 1.5045871559633028, "no_speech_prob": 0.0007934870081953704}, {"id": 246, "seek": 148750, "start": 1504.5, "end": 1510.5, "text": " And the FIDO standard also specifies FIDO over Bluetooth,", "tokens": [400, 264, 479, 2777, 46, 3832, 611, 1608, 11221, 479, 2777, 46, 670, 20286, 11], "temperature": 0.0, "avg_logprob": -0.15391709009806315, "compression_ratio": 1.5045871559633028, "no_speech_prob": 0.0007934870081953704}, {"id": 247, "seek": 148750, "start": 1510.5, "end": 1514.5, "text": " but I don't see it's only implemented on Windows", "tokens": [457, 286, 500, 380, 536, 309, 311, 787, 12270, 322, 8591], "temperature": 0.0, "avg_logprob": -0.15391709009806315, "compression_ratio": 1.5045871559633028, "no_speech_prob": 0.0007934870081953704}, {"id": 248, "seek": 151450, "start": 1514.5, "end": 1522.5, "text": " and Android but not on the Linux libraries.", "tokens": [293, 8853, 457, 406, 322, 264, 18734, 15148, 13], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 249, "seek": 151450, "start": 1522.5, "end": 1525.5, "text": " Sorry, Bluetooth, yeah.", "tokens": [4919, 11, 20286, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 250, "seek": 151450, "start": 1525.5, "end": 1527.5, "text": " So Bluetooth support is not in this FIDO 2,", "tokens": [407, 20286, 1406, 307, 406, 294, 341, 479, 2777, 46, 568, 11], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 251, "seek": 151450, "start": 1527.5, "end": 1530.5, "text": " it only has USB and NFC.", "tokens": [309, 787, 575, 10109, 293, 13576, 34, 13], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 252, "seek": 151450, "start": 1530.5, "end": 1533.5, "text": " No Bluetooth, but there may be an addition.", "tokens": [883, 20286, 11, 457, 456, 815, 312, 364, 4500, 13], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 253, "seek": 151450, "start": 1533.5, "end": 1535.5, "text": " In the next version of CTAP,", "tokens": [682, 264, 958, 3037, 295, 19529, 4715, 11], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 254, "seek": 151450, "start": 1535.5, "end": 1537.5, "text": " there will be a way to...", "tokens": [456, 486, 312, 257, 636, 281, 485], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 255, "seek": 151450, "start": 1537.5, "end": 1539.5, "text": " And maybe you've seen it in Google Chrome.", "tokens": [400, 1310, 291, 600, 1612, 309, 294, 3329, 15327, 13], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 256, "seek": 151450, "start": 1539.5, "end": 1542.5, "text": " You can generate a QR code so that you can use your phone.", "tokens": [509, 393, 8460, 257, 32784, 3089, 370, 300, 291, 393, 764, 428, 2593, 13], "temperature": 0.0, "avg_logprob": -0.2191635828751784, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.001318430993705988}, {"id": 257, "seek": 154250, "start": 1542.5, "end": 1546.5, "text": " So if you have enlisted your phone as an authenticator,", "tokens": [407, 498, 291, 362, 465, 34890, 428, 2593, 382, 364, 12466, 1639, 11], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 258, "seek": 154250, "start": 1546.5, "end": 1548.5, "text": " you can do it over Bluetooth Low Energy,", "tokens": [291, 393, 360, 309, 670, 20286, 17078, 14939, 11], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 259, "seek": 154250, "start": 1548.5, "end": 1550.5, "text": " but the Bluetooth channel is only used for proximity.", "tokens": [457, 264, 20286, 2269, 307, 787, 1143, 337, 27632, 13], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 260, "seek": 154250, "start": 1550.5, "end": 1554.5, "text": " It's not used to actually transfer anything.", "tokens": [467, 311, 406, 1143, 281, 767, 5003, 1340, 13], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 261, "seek": 154250, "start": 1554.5, "end": 1556.5, "text": " For example, if you register a key,", "tokens": [1171, 1365, 11, 498, 291, 7280, 257, 2141, 11], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 262, "seek": 154250, "start": 1556.5, "end": 1560.5, "text": " your public key is not submitted over Bluetooth.", "tokens": [428, 1908, 2141, 307, 406, 14405, 670, 20286, 13], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 263, "seek": 154250, "start": 1560.5, "end": 1562.5, "text": " But that will be in the next version of CTAP.", "tokens": [583, 300, 486, 312, 294, 264, 958, 3037, 295, 19529, 4715, 13], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 264, "seek": 154250, "start": 1562.5, "end": 1564.5, "text": " Okay, thank you for the talk.", "tokens": [1033, 11, 1309, 291, 337, 264, 751, 13], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 265, "seek": 154250, "start": 1564.5, "end": 1566.5, "text": " We are out of the time, so applause.", "tokens": [492, 366, 484, 295, 264, 565, 11, 370, 9969, 13], "temperature": 0.0, "avg_logprob": -0.12661098340235719, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.000830009812489152}, {"id": 266, "seek": 156650, "start": 1566.5, "end": 1576.5, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50864], "temperature": 0.0, "avg_logprob": -0.4796244303385417, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.00735468789935112}], "language": "en"}