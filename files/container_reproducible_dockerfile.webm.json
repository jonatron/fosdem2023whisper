{"text": " Hi, I'm Akihiro Suda from NTT Corporation at JEPRAN, in this session, I talk about a bit-for-bit reproducible build with Dockerfile, focusing on the determinies of the timestamps and the abstract partition versions. I have a demo, and you can reproduce my demo by yourselves using this github.com. Let's begin with what are reproducible builds. Each means producing exactly the same binary when you have the same source. For containers, this source means Dockerfile and every source code files that are referred from the Dockerfile, and the binary means OCR images, including the tar layers and the metadata JSONs. This reproducibility has to be attestable by anybody at any time, but not necessarily on any machine, because typically your machine has to have a specific version of tool chains, and sometimes you have to use a specific version of the host operating system, and with a specific file system, and with a specific CPU, so this limitation is very far from ideal, but this is sometimes inevitable. So why do we need reproducible builds? It's because we want to verify the actual source code of the binary, not the claimed source code. The actual source code may differ from the claimed source code when the build environment, such as the developer's laptop, or the city server, such as Jenkins, or the action is compromised, or when the developer simply has malicious intent. So we want to be sure whether we have the actual source code, and if the builds are reproducible, we can be sure that we have the actual source code. Otherwise we are not sure whether we have the actual source code or not, and maybe we are using some compromised source code. So reproducible builds is really great, but it's not a panacea, especially reproducibility has nothing to do with whether the source code is safe to use. The source code may still contain malicious codes, so reproducible builds make sense only when you actually review the source code by yourself. So it's a very time-taking job, and very few people are motivated to bother doing that, but this problem is beyond scope of my talk. So maybe this task can be automated using some AI in the next couple of years, but it's beyond scope of this talk. I don't know. And it was hard to make the builds reproducible, especially with Docker files, so there were three major changes. The most obvious one is time stamps, such as the time stamps of the files in OCI TAR layers, and other time stamps in OCI sessions, such as the OALJ OpenContinent.images.created. And we also have time stamps in the image histories, so it's going to be printable with joker history commands. So the time stamp problem is the most obvious one, but the time stamp problem is relatively easy to solve. So the biggest problem is not time stamps, and the biggest problem is non-determinants of after-git. So when you run after-git, the package version that is installable with after-git changes every time. And of course, this is not specific to after-git. So the same problem exists in DNF, APK, ZIPR, Pac-Man, and almost all package managers. Actually, NICS, Partition Manager, has solved this issue with a branch-on-paying system called Flix, but NICS is very complex and still hard for most people to run. And NICS is also similar, but NICS is still complex and very hard, so most people still want to use after-git or DNF or APK. And the third problem shown here is characteristics of the file systems, such as hard links and X attributes. So these special characteristics may differ across file systems. So re-positional builds were really hard in the ecosystem of ZOKA file, but it's now supported in Build-Git version 0.11. Build-Git is a modern image-building framework made for ZOKA and MOBI, and it has been embedded in the ZOKA demo since ZOKA version 18.06. But it's not specific to ZOKA and MOBI, so it can be also used as a sound-alonged demo called Build-Git D, and Build-Git D can be executed inside Q-Valentice or NADCTA or POTMA or any other control engines that support OCI specs. Build-Git version 11 was released the last month with the built-in support for reproducing time stamps, thanks to Tony Stiggy for the contribution of this work. And this version 0.11 still needs really complex ZOKA files, but the next version 0.12 is likely to require less complex ZOKA files. And reproducing time stamps is supported using a special build org called Source-State-Epoch. This build org conforms to the reproducible-builds.org's Source-State-Epoch spec, which is available under hdbs.com. The reproducible-builds.org spec's Source-State-Epoch. And argument value is usually expected to be set to the unix epoch representation of the git commit dates using git log dash 1 dash dash pretty equal passivity. So you get an integer number that corresponds to the seconds since 1970, generally first. The Source-State-Epoch is exposed to the run instruction of the Docker file as the environment is variable, and in addition, it's also consumed by build git itself for the time stamps in the OCI JSONs. But not for the time stamps in the OCI, not for the time stamps in the OCI Tyrayas and build git version 0.11. This is planned to be improved in version 0.12. So as I mentioned in the previous slide, there is a bunch of capabilities in version 0.11. So especially the file time stamps currently has to be explicitly touched with using the find commands, XRs commands, and the touch commands like this very complex script. That already takes more than three lines. And also, you have to squash all the layers to eliminate all the fs files that are created on removing the files in the containers because the time stamps of the whiteouts are not reproducible in build git version 0.11. And also there's a restriction on the mount point trajectories. So cache mount points can be only created under TMP fs such as thrush div. And also hard links are not reproducible depending on the file system stamp shooter. So in this version, we still have a bunch of capabilities, but these capabilities are already being improved in my product list 3560. It's not merged in the master branch yet, but I hope that this product will be merged in the next version 0.12 in the next couple of weeks or maybe in the next couple of months. The next topic is reproducing package versions. This is the most important topic of this talk. The package versions are hard to reproduce because most of the distributions do not retain all the packages. For example, Ubuntu does not retain all the packages as far as I can see. DBN does, but the package archives are not mirrored widely. And basically we only have the central snapshot.dbn.orz and only a few mirrors. This is causing too much load on the central server snapshot.dbn.orz. So basically this snapshot.dbn.orz server can't be used in the CI environments because it's really slow and it's really freaky. And this slowness and the freakiest problem will get even worse when more people begin to make their bills reproducible. This situation is very similar for Fedora and Arc Linux as well. And reprogate is my solution for this problem. This is a decentralized and reproducible front-end for Aftergate, DNF, APK, and Parkmar. The package version can be locked with SHA256 sums file. And packages can be fetched from several transports such as HLGP, OCR, OCR3s, IPFS, local five systems, and NFS. By default, reprogate attempts to fetch the packages from dev.dbn.orz using the package name. The dev.dbn.orz server is fast, but it's ephemeral. It doesn't regain all the packages. So for all packages, reprogate automatically forced back to dev.n.set.fr using SHA256 hash. This is relatively slow, but this server provides persistent snapshots of all the packages. You can also configure reprogate to use OCR3s, IPFS, and local five systems. Reprogate currently supports the five distributions, dev.dbn.orz, Fedora, ArcBind, and Arc Linux. Reprogate is expected to be used in continuous, but can be used with noncontinental environments as well. The command user is like this. So you run reprogate hash generate to generate the hash file, and run after get install hello to install hello packages, and reprogate hash generate again, and you will get SHA256 stamps file like this. And inside the containers, you can run reprogate install with SHA256 stamps file, and reprogate this package from HTTP after get to repo, or maybe from OCR3, or maybe from IPFS, or maybe from NFS, depending on the configuration. And here is the demo. So to reproduce this demo, you have to run specific version of build kit, version 0.11.0. And in this directory, I have SHA256 stamps file like this. This is mostly for running GCC. And Docker file is a country really complex, it's machine generated, and it has a bunch of workarounds like this for sausage epoch stuff, and you can use this to test reproducibility. This takes a few minutes, but the result is like this. So you will get the same fast 0, AS3BC, FEB67C85 on any machine, such as on DTIB actions, or local laptops, so you can try this by yourself on your own machine. And the future works includes simplifying Docker files and cache management. I'm also trying to implement with 20-stages xxopt and xxapk for cross-compilation. And also, reproducibility should be testable with SSF, such as provenances, ideally just with a single click, and probably more contribution is welcome for these topics. And here is the wrap up of my talk. So reproducible build helps testing the true origin of the binary, and challenges like non-deterministic timestamps and partitions, and basically the partitions 0.11 adds programming and support for source data epoch, and the reproducibility can be used for reproducing the partitions with 5, 6 sums. And I think, sorry, the demo is still running, so I can't show the result of the demo, but that should be like this result. Any questions? Would it be fair to say that this sacrifice is security in favor of reproducibility, because you would have to keep that list of hashes maintained to make sure that the packages downloaded are always like the most secure ones? So your question was how to make these hash files, right? How do you make sure the list of package hashes is always pointing to the most secure versions of a package? So you can use replicate hash data command to scan installed packages, and make the hash file like this, but you can also create a hash file by yourself, by just with text editor, or maybe just your own NSR tool to maintain this hash file. Okay, we're out of time. Thank you for the talk. Thanks everyone for attending.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 24.32, "text": " Hi, I'm Akihiro Suda from NTT Corporation at JEPRAN, in this session, I talk about", "tokens": [50364, 2421, 11, 286, 478, 9629, 4247, 5182, 318, 11152, 490, 426, 28178, 26464, 412, 508, 8929, 49, 1770, 11, 294, 341, 5481, 11, 286, 751, 466, 51580], "temperature": 0.0, "avg_logprob": -0.857624371846517, "compression_ratio": 0.9647058823529412, "no_speech_prob": 0.601510226726532}, {"id": 1, "seek": 2432, "start": 24.32, "end": 33.36, "text": " a bit-for-bit reproducible build with Dockerfile, focusing on the determinies of the timestamps", "tokens": [50364, 257, 857, 12, 2994, 12, 5260, 11408, 32128, 1322, 365, 33772, 69, 794, 11, 8416, 322, 264, 15957, 530, 295, 264, 49108, 23150, 50816], "temperature": 0.0, "avg_logprob": -0.5281027760998956, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.7726645469665527}, {"id": 2, "seek": 2432, "start": 33.36, "end": 37.24, "text": " and the abstract partition versions.", "tokens": [50816, 293, 264, 12649, 24808, 9606, 13, 51010], "temperature": 0.0, "avg_logprob": -0.5281027760998956, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.7726645469665527}, {"id": 3, "seek": 2432, "start": 37.24, "end": 46.08, "text": " I have a demo, and you can reproduce my demo by yourselves using this github.com.", "tokens": [51010, 286, 362, 257, 10723, 11, 293, 291, 393, 29501, 452, 10723, 538, 14791, 1228, 341, 290, 355, 836, 13, 1112, 13, 51452], "temperature": 0.0, "avg_logprob": -0.5281027760998956, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.7726645469665527}, {"id": 4, "seek": 4608, "start": 46.08, "end": 57.519999999999996, "text": " Let's begin with what are reproducible builds.", "tokens": [50364, 961, 311, 1841, 365, 437, 366, 11408, 32128, 15182, 13, 50936], "temperature": 0.0, "avg_logprob": -0.315727778843471, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.3430017828941345}, {"id": 5, "seek": 4608, "start": 57.519999999999996, "end": 65.32, "text": " Each means producing exactly the same binary when you have the same source.", "tokens": [50936, 6947, 1355, 10501, 2293, 264, 912, 17434, 562, 291, 362, 264, 912, 4009, 13, 51326], "temperature": 0.0, "avg_logprob": -0.315727778843471, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.3430017828941345}, {"id": 6, "seek": 4608, "start": 65.32, "end": 73.96, "text": " For containers, this source means Dockerfile and every source code files that are referred", "tokens": [51326, 1171, 17089, 11, 341, 4009, 1355, 33772, 69, 794, 293, 633, 4009, 3089, 7098, 300, 366, 10839, 51758], "temperature": 0.0, "avg_logprob": -0.315727778843471, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.3430017828941345}, {"id": 7, "seek": 7396, "start": 73.96, "end": 83.32, "text": " from the Dockerfile, and the binary means OCR images, including the tar layers and the", "tokens": [50364, 490, 264, 33772, 69, 794, 11, 293, 264, 17434, 1355, 422, 18547, 5267, 11, 3009, 264, 3112, 7914, 293, 264, 50832], "temperature": 0.0, "avg_logprob": -0.3003558012155386, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.041051048785448074}, {"id": 8, "seek": 7396, "start": 83.32, "end": 86.52, "text": " metadata JSONs.", "tokens": [50832, 26603, 31828, 82, 13, 50992], "temperature": 0.0, "avg_logprob": -0.3003558012155386, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.041051048785448074}, {"id": 9, "seek": 7396, "start": 86.52, "end": 97.16, "text": " This reproducibility has to be attestable by anybody at any time, but not necessarily on", "tokens": [50992, 639, 11408, 537, 39802, 575, 281, 312, 951, 377, 712, 538, 4472, 412, 604, 565, 11, 457, 406, 4725, 322, 51524], "temperature": 0.0, "avg_logprob": -0.3003558012155386, "compression_ratio": 1.3082191780821917, "no_speech_prob": 0.041051048785448074}, {"id": 10, "seek": 9716, "start": 97.16, "end": 105.6, "text": " any machine, because typically your machine has to have a specific version of tool chains,", "tokens": [50364, 604, 3479, 11, 570, 5850, 428, 3479, 575, 281, 362, 257, 2685, 3037, 295, 2290, 12626, 11, 50786], "temperature": 0.0, "avg_logprob": -0.26316569192068917, "compression_ratio": 1.7471264367816093, "no_speech_prob": 0.22768659889698029}, {"id": 11, "seek": 9716, "start": 105.6, "end": 112.96, "text": " and sometimes you have to use a specific version of the host operating system, and with a specific", "tokens": [50786, 293, 2171, 291, 362, 281, 764, 257, 2685, 3037, 295, 264, 3975, 7447, 1185, 11, 293, 365, 257, 2685, 51154], "temperature": 0.0, "avg_logprob": -0.26316569192068917, "compression_ratio": 1.7471264367816093, "no_speech_prob": 0.22768659889698029}, {"id": 12, "seek": 9716, "start": 112.96, "end": 121.4, "text": " file system, and with a specific CPU, so this limitation is very far from ideal, but this", "tokens": [51154, 3991, 1185, 11, 293, 365, 257, 2685, 13199, 11, 370, 341, 27432, 307, 588, 1400, 490, 7157, 11, 457, 341, 51576], "temperature": 0.0, "avg_logprob": -0.26316569192068917, "compression_ratio": 1.7471264367816093, "no_speech_prob": 0.22768659889698029}, {"id": 13, "seek": 9716, "start": 121.4, "end": 126.56, "text": " is sometimes inevitable.", "tokens": [51576, 307, 2171, 21451, 13, 51834], "temperature": 0.0, "avg_logprob": -0.26316569192068917, "compression_ratio": 1.7471264367816093, "no_speech_prob": 0.22768659889698029}, {"id": 14, "seek": 12656, "start": 126.56, "end": 131.12, "text": " So why do we need reproducible builds?", "tokens": [50364, 407, 983, 360, 321, 643, 11408, 32128, 15182, 30, 50592], "temperature": 0.0, "avg_logprob": -0.32108558752597904, "compression_ratio": 1.7197802197802199, "no_speech_prob": 0.0699920505285263}, {"id": 15, "seek": 12656, "start": 131.12, "end": 137.16, "text": " It's because we want to verify the actual source code of the binary, not the claimed source", "tokens": [50592, 467, 311, 570, 321, 528, 281, 16888, 264, 3539, 4009, 3089, 295, 264, 17434, 11, 406, 264, 12941, 4009, 50894], "temperature": 0.0, "avg_logprob": -0.32108558752597904, "compression_ratio": 1.7197802197802199, "no_speech_prob": 0.0699920505285263}, {"id": 16, "seek": 12656, "start": 137.16, "end": 139.24, "text": " code.", "tokens": [50894, 3089, 13, 50998], "temperature": 0.0, "avg_logprob": -0.32108558752597904, "compression_ratio": 1.7197802197802199, "no_speech_prob": 0.0699920505285263}, {"id": 17, "seek": 12656, "start": 139.24, "end": 147.04, "text": " The actual source code may differ from the claimed source code when the build environment,", "tokens": [50998, 440, 3539, 4009, 3089, 815, 743, 490, 264, 12941, 4009, 3089, 562, 264, 1322, 2823, 11, 51388], "temperature": 0.0, "avg_logprob": -0.32108558752597904, "compression_ratio": 1.7197802197802199, "no_speech_prob": 0.0699920505285263}, {"id": 18, "seek": 12656, "start": 147.04, "end": 154.2, "text": " such as the developer's laptop, or the city server, such as Jenkins, or the action is", "tokens": [51388, 1270, 382, 264, 10754, 311, 10732, 11, 420, 264, 2307, 7154, 11, 1270, 382, 41273, 11, 420, 264, 3069, 307, 51746], "temperature": 0.0, "avg_logprob": -0.32108558752597904, "compression_ratio": 1.7197802197802199, "no_speech_prob": 0.0699920505285263}, {"id": 19, "seek": 15420, "start": 155.04, "end": 163.92, "text": " compromised, or when the developer simply has malicious intent.", "tokens": [50406, 32463, 11, 420, 562, 264, 10754, 2935, 575, 33496, 8446, 13, 50850], "temperature": 0.0, "avg_logprob": -0.231625935802721, "compression_ratio": 1.8571428571428572, "no_speech_prob": 0.15562355518341064}, {"id": 20, "seek": 15420, "start": 163.92, "end": 170.48, "text": " So we want to be sure whether we have the actual source code, and if the builds are", "tokens": [50850, 407, 321, 528, 281, 312, 988, 1968, 321, 362, 264, 3539, 4009, 3089, 11, 293, 498, 264, 15182, 366, 51178], "temperature": 0.0, "avg_logprob": -0.231625935802721, "compression_ratio": 1.8571428571428572, "no_speech_prob": 0.15562355518341064}, {"id": 21, "seek": 15420, "start": 170.48, "end": 176.56, "text": " reproducible, we can be sure that we have the actual source code.", "tokens": [51178, 11408, 32128, 11, 321, 393, 312, 988, 300, 321, 362, 264, 3539, 4009, 3089, 13, 51482], "temperature": 0.0, "avg_logprob": -0.231625935802721, "compression_ratio": 1.8571428571428572, "no_speech_prob": 0.15562355518341064}, {"id": 22, "seek": 15420, "start": 176.56, "end": 182.79999999999998, "text": " Otherwise we are not sure whether we have the actual source code or not, and maybe we", "tokens": [51482, 10328, 321, 366, 406, 988, 1968, 321, 362, 264, 3539, 4009, 3089, 420, 406, 11, 293, 1310, 321, 51794], "temperature": 0.0, "avg_logprob": -0.231625935802721, "compression_ratio": 1.8571428571428572, "no_speech_prob": 0.15562355518341064}, {"id": 23, "seek": 18280, "start": 182.8, "end": 189.52, "text": " are using some compromised source code.", "tokens": [50364, 366, 1228, 512, 32463, 4009, 3089, 13, 50700], "temperature": 0.0, "avg_logprob": -0.22106625052059398, "compression_ratio": 1.6745562130177514, "no_speech_prob": 0.04920157045125961}, {"id": 24, "seek": 18280, "start": 189.52, "end": 197.12, "text": " So reproducible builds is really great, but it's not a panacea, especially reproducibility", "tokens": [50700, 407, 11408, 32128, 15182, 307, 534, 869, 11, 457, 309, 311, 406, 257, 2462, 617, 64, 11, 2318, 11408, 537, 39802, 51080], "temperature": 0.0, "avg_logprob": -0.22106625052059398, "compression_ratio": 1.6745562130177514, "no_speech_prob": 0.04920157045125961}, {"id": 25, "seek": 18280, "start": 197.12, "end": 203.28, "text": " has nothing to do with whether the source code is safe to use.", "tokens": [51080, 575, 1825, 281, 360, 365, 1968, 264, 4009, 3089, 307, 3273, 281, 764, 13, 51388], "temperature": 0.0, "avg_logprob": -0.22106625052059398, "compression_ratio": 1.6745562130177514, "no_speech_prob": 0.04920157045125961}, {"id": 26, "seek": 18280, "start": 203.28, "end": 211.04000000000002, "text": " The source code may still contain malicious codes, so reproducible builds make sense only", "tokens": [51388, 440, 4009, 3089, 815, 920, 5304, 33496, 14211, 11, 370, 11408, 32128, 15182, 652, 2020, 787, 51776], "temperature": 0.0, "avg_logprob": -0.22106625052059398, "compression_ratio": 1.6745562130177514, "no_speech_prob": 0.04920157045125961}, {"id": 27, "seek": 21104, "start": 211.12, "end": 215.72, "text": " when you actually review the source code by yourself.", "tokens": [50368, 562, 291, 767, 3131, 264, 4009, 3089, 538, 1803, 13, 50598], "temperature": 0.0, "avg_logprob": -0.24631943501217266, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.04294193163514137}, {"id": 28, "seek": 21104, "start": 215.72, "end": 226.88, "text": " So it's a very time-taking job, and very few people are motivated to bother doing that,", "tokens": [50598, 407, 309, 311, 257, 588, 565, 12, 48625, 1691, 11, 293, 588, 1326, 561, 366, 14515, 281, 8677, 884, 300, 11, 51156], "temperature": 0.0, "avg_logprob": -0.24631943501217266, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.04294193163514137}, {"id": 29, "seek": 21104, "start": 226.88, "end": 231.68, "text": " but this problem is beyond scope of my talk.", "tokens": [51156, 457, 341, 1154, 307, 4399, 11923, 295, 452, 751, 13, 51396], "temperature": 0.0, "avg_logprob": -0.24631943501217266, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.04294193163514137}, {"id": 30, "seek": 21104, "start": 231.68, "end": 239.79999999999998, "text": " So maybe this task can be automated using some AI in the next couple of years, but it's", "tokens": [51396, 407, 1310, 341, 5633, 393, 312, 18473, 1228, 512, 7318, 294, 264, 958, 1916, 295, 924, 11, 457, 309, 311, 51802], "temperature": 0.0, "avg_logprob": -0.24631943501217266, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.04294193163514137}, {"id": 31, "seek": 23980, "start": 240.04000000000002, "end": 241.76000000000002, "text": " beyond scope of this talk.", "tokens": [50376, 4399, 11923, 295, 341, 751, 13, 50462], "temperature": 0.0, "avg_logprob": -0.29782863096757367, "compression_ratio": 1.2419354838709677, "no_speech_prob": 0.019946811720728874}, {"id": 32, "seek": 23980, "start": 241.76000000000002, "end": 245.76000000000002, "text": " I don't know.", "tokens": [50462, 286, 500, 380, 458, 13, 50662], "temperature": 0.0, "avg_logprob": -0.29782863096757367, "compression_ratio": 1.2419354838709677, "no_speech_prob": 0.019946811720728874}, {"id": 33, "seek": 23980, "start": 245.76000000000002, "end": 256.40000000000003, "text": " And it was hard to make the builds reproducible, especially with Docker files, so there were", "tokens": [50662, 400, 309, 390, 1152, 281, 652, 264, 15182, 11408, 32128, 11, 2318, 365, 33772, 7098, 11, 370, 456, 645, 51194], "temperature": 0.0, "avg_logprob": -0.29782863096757367, "compression_ratio": 1.2419354838709677, "no_speech_prob": 0.019946811720728874}, {"id": 34, "seek": 23980, "start": 256.40000000000003, "end": 259.84000000000003, "text": " three major changes.", "tokens": [51194, 1045, 2563, 2962, 13, 51366], "temperature": 0.0, "avg_logprob": -0.29782863096757367, "compression_ratio": 1.2419354838709677, "no_speech_prob": 0.019946811720728874}, {"id": 35, "seek": 25984, "start": 259.84, "end": 270.84, "text": " The most obvious one is time stamps, such as the time stamps of the files in OCI TAR", "tokens": [50364, 440, 881, 6322, 472, 307, 565, 30800, 11, 1270, 382, 264, 565, 30800, 295, 264, 7098, 294, 422, 25240, 314, 1899, 50914], "temperature": 0.0, "avg_logprob": -0.5499424404568143, "compression_ratio": 1.424, "no_speech_prob": 0.11829770356416702}, {"id": 36, "seek": 25984, "start": 270.84, "end": 283.08, "text": " layers, and other time stamps in OCI sessions, such as the OALJ OpenContinent.images.created.", "tokens": [50914, 7914, 11, 293, 661, 565, 30800, 294, 422, 25240, 11081, 11, 1270, 382, 264, 422, 3427, 41, 7238, 29821, 11058, 13, 332, 1660, 13, 66, 26559, 13, 51526], "temperature": 0.0, "avg_logprob": -0.5499424404568143, "compression_ratio": 1.424, "no_speech_prob": 0.11829770356416702}, {"id": 37, "seek": 28308, "start": 283.08, "end": 291.91999999999996, "text": " And we also have time stamps in the image histories, so it's going to be printable with", "tokens": [50364, 400, 321, 611, 362, 565, 30800, 294, 264, 3256, 30631, 11, 370, 309, 311, 516, 281, 312, 4482, 712, 365, 50806], "temperature": 0.0, "avg_logprob": -0.30145517985026044, "compression_ratio": 1.822857142857143, "no_speech_prob": 0.04534667730331421}, {"id": 38, "seek": 28308, "start": 291.91999999999996, "end": 294.64, "text": " joker history commands.", "tokens": [50806, 361, 16722, 2503, 16901, 13, 50942], "temperature": 0.0, "avg_logprob": -0.30145517985026044, "compression_ratio": 1.822857142857143, "no_speech_prob": 0.04534667730331421}, {"id": 39, "seek": 28308, "start": 294.64, "end": 301.68, "text": " So the time stamp problem is the most obvious one, but the time stamp problem is relatively", "tokens": [50942, 407, 264, 565, 9921, 1154, 307, 264, 881, 6322, 472, 11, 457, 264, 565, 9921, 1154, 307, 7226, 51294], "temperature": 0.0, "avg_logprob": -0.30145517985026044, "compression_ratio": 1.822857142857143, "no_speech_prob": 0.04534667730331421}, {"id": 40, "seek": 28308, "start": 301.68, "end": 304.12, "text": " easy to solve.", "tokens": [51294, 1858, 281, 5039, 13, 51416], "temperature": 0.0, "avg_logprob": -0.30145517985026044, "compression_ratio": 1.822857142857143, "no_speech_prob": 0.04534667730331421}, {"id": 41, "seek": 28308, "start": 304.12, "end": 308.68, "text": " So the biggest problem is not time stamps, and the biggest problem is non-determinants", "tokens": [51416, 407, 264, 3880, 1154, 307, 406, 565, 30800, 11, 293, 264, 3880, 1154, 307, 2107, 12, 67, 35344, 259, 1719, 51644], "temperature": 0.0, "avg_logprob": -0.30145517985026044, "compression_ratio": 1.822857142857143, "no_speech_prob": 0.04534667730331421}, {"id": 42, "seek": 28308, "start": 308.68, "end": 311.08, "text": " of after-git.", "tokens": [51644, 295, 934, 12, 70, 270, 13, 51764], "temperature": 0.0, "avg_logprob": -0.30145517985026044, "compression_ratio": 1.822857142857143, "no_speech_prob": 0.04534667730331421}, {"id": 43, "seek": 31108, "start": 311.08, "end": 318.4, "text": " So when you run after-git, the package version that is installable with after-git changes", "tokens": [50364, 407, 562, 291, 1190, 934, 12, 70, 270, 11, 264, 7372, 3037, 300, 307, 3625, 712, 365, 934, 12, 70, 270, 2962, 50730], "temperature": 0.0, "avg_logprob": -0.2531659189860026, "compression_ratio": 1.3815028901734103, "no_speech_prob": 0.04483487457036972}, {"id": 44, "seek": 31108, "start": 318.4, "end": 320.24, "text": " every time.", "tokens": [50730, 633, 565, 13, 50822], "temperature": 0.0, "avg_logprob": -0.2531659189860026, "compression_ratio": 1.3815028901734103, "no_speech_prob": 0.04483487457036972}, {"id": 45, "seek": 31108, "start": 320.24, "end": 323.12, "text": " And of course, this is not specific to after-git.", "tokens": [50822, 400, 295, 1164, 11, 341, 307, 406, 2685, 281, 934, 12, 70, 270, 13, 50966], "temperature": 0.0, "avg_logprob": -0.2531659189860026, "compression_ratio": 1.3815028901734103, "no_speech_prob": 0.04483487457036972}, {"id": 46, "seek": 31108, "start": 323.12, "end": 335.12, "text": " So the same problem exists in DNF, APK, ZIPR, Pac-Man, and almost all package managers.", "tokens": [50966, 407, 264, 912, 1154, 8198, 294, 21500, 37, 11, 5372, 42, 11, 1176, 9139, 49, 11, 10702, 12, 6652, 11, 293, 1920, 439, 7372, 14084, 13, 51566], "temperature": 0.0, "avg_logprob": -0.2531659189860026, "compression_ratio": 1.3815028901734103, "no_speech_prob": 0.04483487457036972}, {"id": 47, "seek": 33512, "start": 335.12, "end": 342.96, "text": " Actually, NICS, Partition Manager, has solved this issue with a branch-on-paying system", "tokens": [50364, 5135, 11, 426, 2532, 50, 11, 4100, 849, 13821, 11, 575, 13041, 341, 2734, 365, 257, 9819, 12, 266, 12, 22038, 278, 1185, 50756], "temperature": 0.0, "avg_logprob": -0.28555132891680746, "compression_ratio": 1.5272727272727273, "no_speech_prob": 0.4482247233390808}, {"id": 48, "seek": 33512, "start": 342.96, "end": 351.56, "text": " called Flix, but NICS is very complex and still hard for most people to run.", "tokens": [50756, 1219, 3235, 970, 11, 457, 426, 2532, 50, 307, 588, 3997, 293, 920, 1152, 337, 881, 561, 281, 1190, 13, 51186], "temperature": 0.0, "avg_logprob": -0.28555132891680746, "compression_ratio": 1.5272727272727273, "no_speech_prob": 0.4482247233390808}, {"id": 49, "seek": 33512, "start": 351.56, "end": 359.44, "text": " And NICS is also similar, but NICS is still complex and very hard, so most people still", "tokens": [51186, 400, 426, 2532, 50, 307, 611, 2531, 11, 457, 426, 2532, 50, 307, 920, 3997, 293, 588, 1152, 11, 370, 881, 561, 920, 51580], "temperature": 0.0, "avg_logprob": -0.28555132891680746, "compression_ratio": 1.5272727272727273, "no_speech_prob": 0.4482247233390808}, {"id": 50, "seek": 35944, "start": 359.44, "end": 365.8, "text": " want to use after-git or DNF or APK.", "tokens": [50364, 528, 281, 764, 934, 12, 70, 270, 420, 21500, 37, 420, 5372, 42, 13, 50682], "temperature": 0.0, "avg_logprob": -0.2809002454890761, "compression_ratio": 1.1869918699186992, "no_speech_prob": 0.6422211527824402}, {"id": 51, "seek": 35944, "start": 365.8, "end": 375.72, "text": " And the third problem shown here is characteristics of the file systems, such as hard links and", "tokens": [50682, 400, 264, 2636, 1154, 4898, 510, 307, 10891, 295, 264, 3991, 3652, 11, 1270, 382, 1152, 6123, 293, 51178], "temperature": 0.0, "avg_logprob": -0.2809002454890761, "compression_ratio": 1.1869918699186992, "no_speech_prob": 0.6422211527824402}, {"id": 52, "seek": 35944, "start": 375.72, "end": 377.72, "text": " X attributes.", "tokens": [51178, 1783, 17212, 13, 51278], "temperature": 0.0, "avg_logprob": -0.2809002454890761, "compression_ratio": 1.1869918699186992, "no_speech_prob": 0.6422211527824402}, {"id": 53, "seek": 37772, "start": 377.72, "end": 392.32000000000005, "text": " So these special characteristics may differ across file systems.", "tokens": [50364, 407, 613, 2121, 10891, 815, 743, 2108, 3991, 3652, 13, 51094], "temperature": 0.0, "avg_logprob": -0.42809009552001953, "compression_ratio": 1.2416666666666667, "no_speech_prob": 0.03185761719942093}, {"id": 54, "seek": 37772, "start": 392.32000000000005, "end": 402.88000000000005, "text": " So re-positional builds were really hard in the ecosystem of ZOKA file, but it's now", "tokens": [51094, 407, 319, 12, 30010, 2628, 15182, 645, 534, 1152, 294, 264, 11311, 295, 1176, 9443, 32, 3991, 11, 457, 309, 311, 586, 51622], "temperature": 0.0, "avg_logprob": -0.42809009552001953, "compression_ratio": 1.2416666666666667, "no_speech_prob": 0.03185761719942093}, {"id": 55, "seek": 40288, "start": 403.12, "end": 408.56, "text": " supported in Build-Git version 0.11.", "tokens": [50376, 8104, 294, 11875, 12, 38, 270, 3037, 1958, 13, 5348, 13, 50648], "temperature": 0.0, "avg_logprob": -0.280654560435902, "compression_ratio": 1.4636871508379887, "no_speech_prob": 0.5855442881584167}, {"id": 56, "seek": 40288, "start": 408.56, "end": 417.08, "text": " Build-Git is a modern image-building framework made for ZOKA and MOBI, and it has been embedded", "tokens": [50648, 11875, 12, 38, 270, 307, 257, 4363, 3256, 12, 28126, 8388, 1027, 337, 1176, 9443, 32, 293, 19290, 11291, 11, 293, 309, 575, 668, 16741, 51074], "temperature": 0.0, "avg_logprob": -0.280654560435902, "compression_ratio": 1.4636871508379887, "no_speech_prob": 0.5855442881584167}, {"id": 57, "seek": 40288, "start": 417.08, "end": 422.76, "text": " in the ZOKA demo since ZOKA version 18.06.", "tokens": [51074, 294, 264, 1176, 9443, 32, 10723, 1670, 1176, 9443, 32, 3037, 2443, 13, 12791, 13, 51358], "temperature": 0.0, "avg_logprob": -0.280654560435902, "compression_ratio": 1.4636871508379887, "no_speech_prob": 0.5855442881584167}, {"id": 58, "seek": 40288, "start": 422.76, "end": 428.84, "text": " But it's not specific to ZOKA and MOBI, so it can be also used as a sound-alonged demo", "tokens": [51358, 583, 309, 311, 406, 2685, 281, 1176, 9443, 32, 293, 19290, 11291, 11, 370, 309, 393, 312, 611, 1143, 382, 257, 1626, 12, 304, 556, 292, 10723, 51662], "temperature": 0.0, "avg_logprob": -0.280654560435902, "compression_ratio": 1.4636871508379887, "no_speech_prob": 0.5855442881584167}, {"id": 59, "seek": 42884, "start": 428.84, "end": 438.35999999999996, "text": " called Build-Git D, and Build-Git D can be executed inside Q-Valentice or NADCTA or POTMA", "tokens": [50364, 1219, 11875, 12, 38, 270, 413, 11, 293, 11875, 12, 38, 270, 413, 393, 312, 17577, 1854, 1249, 12, 53, 304, 317, 573, 420, 426, 6112, 34, 8241, 420, 430, 5068, 9998, 50840], "temperature": 0.0, "avg_logprob": -0.42988067949321906, "compression_ratio": 1.378698224852071, "no_speech_prob": 0.2747333347797394}, {"id": 60, "seek": 42884, "start": 438.35999999999996, "end": 444.28, "text": " or any other control engines that support OCI specs.", "tokens": [50840, 420, 604, 661, 1969, 12982, 300, 1406, 422, 25240, 27911, 13, 51136], "temperature": 0.0, "avg_logprob": -0.42988067949321906, "compression_ratio": 1.378698224852071, "no_speech_prob": 0.2747333347797394}, {"id": 61, "seek": 42884, "start": 444.28, "end": 452.91999999999996, "text": " Build-Git version 11 was released the last month with the built-in support for reproducing", "tokens": [51136, 11875, 12, 38, 270, 3037, 2975, 390, 4736, 264, 1036, 1618, 365, 264, 3094, 12, 259, 1406, 337, 11408, 2175, 51568], "temperature": 0.0, "avg_logprob": -0.42988067949321906, "compression_ratio": 1.378698224852071, "no_speech_prob": 0.2747333347797394}, {"id": 62, "seek": 45292, "start": 452.92, "end": 460.84000000000003, "text": " time stamps, thanks to Tony Stiggy for the contribution of this work.", "tokens": [50364, 565, 30800, 11, 3231, 281, 10902, 745, 328, 1480, 337, 264, 13150, 295, 341, 589, 13, 50760], "temperature": 0.0, "avg_logprob": -0.2916227630946947, "compression_ratio": 1.2671755725190839, "no_speech_prob": 0.07531245052814484}, {"id": 63, "seek": 45292, "start": 460.84000000000003, "end": 472.16, "text": " And this version 0.11 still needs really complex ZOKA files, but the next version 0.12 is likely", "tokens": [50760, 400, 341, 3037, 1958, 13, 5348, 920, 2203, 534, 3997, 1176, 9443, 32, 7098, 11, 457, 264, 958, 3037, 1958, 13, 4762, 307, 3700, 51326], "temperature": 0.0, "avg_logprob": -0.2916227630946947, "compression_ratio": 1.2671755725190839, "no_speech_prob": 0.07531245052814484}, {"id": 64, "seek": 47216, "start": 472.24, "end": 484.88000000000005, "text": " to require less complex ZOKA files.", "tokens": [50368, 281, 3651, 1570, 3997, 1176, 9443, 32, 7098, 13, 51000], "temperature": 0.0, "avg_logprob": -0.38592874681627426, "compression_ratio": 1.1517857142857142, "no_speech_prob": 0.226588174700737}, {"id": 65, "seek": 47216, "start": 484.88000000000005, "end": 493.88, "text": " And reproducing time stamps is supported using a special build org called Source-State-Epoch.", "tokens": [51000, 400, 11408, 2175, 565, 30800, 307, 8104, 1228, 257, 2121, 1322, 14045, 1219, 29629, 12, 4520, 473, 12, 36, 2259, 339, 13, 51450], "temperature": 0.0, "avg_logprob": -0.38592874681627426, "compression_ratio": 1.1517857142857142, "no_speech_prob": 0.226588174700737}, {"id": 66, "seek": 49388, "start": 493.88, "end": 502.56, "text": " This build org conforms to the reproducible-builds.org's Source-State-Epoch spec, which is available", "tokens": [50364, 639, 1322, 14045, 18975, 82, 281, 264, 11408, 32128, 12, 11516, 82, 13, 4646, 311, 29629, 12, 4520, 473, 12, 36, 2259, 339, 1608, 11, 597, 307, 2435, 50798], "temperature": 0.0, "avg_logprob": -0.31807350818021796, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.2847578227519989}, {"id": 67, "seek": 49388, "start": 502.56, "end": 504.2, "text": " under hdbs.com.", "tokens": [50798, 833, 276, 67, 929, 13, 1112, 13, 50880], "temperature": 0.0, "avg_logprob": -0.31807350818021796, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.2847578227519989}, {"id": 68, "seek": 49388, "start": 504.2, "end": 510.44, "text": " The reproducible-builds.org spec's Source-State-Epoch.", "tokens": [50880, 440, 11408, 32128, 12, 11516, 82, 13, 4646, 1608, 311, 29629, 12, 4520, 473, 12, 36, 2259, 339, 13, 51192], "temperature": 0.0, "avg_logprob": -0.31807350818021796, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.2847578227519989}, {"id": 69, "seek": 49388, "start": 510.44, "end": 518.2, "text": " And argument value is usually expected to be set to the unix epoch representation of", "tokens": [51192, 400, 6770, 2158, 307, 2673, 5176, 281, 312, 992, 281, 264, 517, 970, 30992, 339, 10290, 295, 51580], "temperature": 0.0, "avg_logprob": -0.31807350818021796, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.2847578227519989}, {"id": 70, "seek": 51820, "start": 518.2, "end": 525.9200000000001, "text": " the git commit dates using git log dash 1 dash dash pretty equal passivity.", "tokens": [50364, 264, 18331, 5599, 11691, 1228, 18331, 3565, 8240, 502, 8240, 8240, 1238, 2681, 1320, 4253, 13, 50750], "temperature": 0.0, "avg_logprob": -0.3686615777394128, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.07945652306079865}, {"id": 71, "seek": 51820, "start": 525.9200000000001, "end": 539.96, "text": " So you get an integer number that corresponds to the seconds since 1970, generally first.", "tokens": [50750, 407, 291, 483, 364, 24922, 1230, 300, 23249, 281, 264, 3949, 1670, 14577, 11, 5101, 700, 13, 51452], "temperature": 0.0, "avg_logprob": -0.3686615777394128, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.07945652306079865}, {"id": 72, "seek": 51820, "start": 539.96, "end": 547.88, "text": " The Source-State-Epoch is exposed to the run instruction of the Docker file as the environment", "tokens": [51452, 440, 29629, 12, 4520, 473, 12, 36, 2259, 339, 307, 9495, 281, 264, 1190, 10951, 295, 264, 33772, 3991, 382, 264, 2823, 51848], "temperature": 0.0, "avg_logprob": -0.3686615777394128, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.07945652306079865}, {"id": 73, "seek": 54788, "start": 547.88, "end": 555.84, "text": " is variable, and in addition, it's also consumed by build git itself for the time stamps in", "tokens": [50364, 307, 7006, 11, 293, 294, 4500, 11, 309, 311, 611, 21226, 538, 1322, 18331, 2564, 337, 264, 565, 30800, 294, 50762], "temperature": 0.0, "avg_logprob": -0.4672663674425723, "compression_ratio": 1.643939393939394, "no_speech_prob": 0.07802309840917587}, {"id": 74, "seek": 54788, "start": 555.84, "end": 559.4399999999999, "text": " the OCI JSONs.", "tokens": [50762, 264, 422, 25240, 31828, 82, 13, 50942], "temperature": 0.0, "avg_logprob": -0.4672663674425723, "compression_ratio": 1.643939393939394, "no_speech_prob": 0.07802309840917587}, {"id": 75, "seek": 54788, "start": 559.4399999999999, "end": 566.92, "text": " But not for the time stamps in the OCI, not for the time stamps in the OCI Tyrayas and", "tokens": [50942, 583, 406, 337, 264, 565, 30800, 294, 264, 422, 25240, 11, 406, 337, 264, 565, 30800, 294, 264, 422, 25240, 5569, 3458, 296, 293, 51316], "temperature": 0.0, "avg_logprob": -0.4672663674425723, "compression_ratio": 1.643939393939394, "no_speech_prob": 0.07802309840917587}, {"id": 76, "seek": 54788, "start": 566.92, "end": 571.36, "text": " build git version 0.11.", "tokens": [51316, 1322, 18331, 3037, 1958, 13, 5348, 13, 51538], "temperature": 0.0, "avg_logprob": -0.4672663674425723, "compression_ratio": 1.643939393939394, "no_speech_prob": 0.07802309840917587}, {"id": 77, "seek": 57136, "start": 571.36, "end": 580.5600000000001, "text": " This is planned to be improved in version 0.12.", "tokens": [50364, 639, 307, 8589, 281, 312, 9689, 294, 3037, 1958, 13, 4762, 13, 50824], "temperature": 0.0, "avg_logprob": -0.28164708614349365, "compression_ratio": 1.455128205128205, "no_speech_prob": 0.3044232130050659}, {"id": 78, "seek": 57136, "start": 580.5600000000001, "end": 587.92, "text": " So as I mentioned in the previous slide, there is a bunch of capabilities in version 0.11.", "tokens": [50824, 407, 382, 286, 2835, 294, 264, 3894, 4137, 11, 456, 307, 257, 3840, 295, 10862, 294, 3037, 1958, 13, 5348, 13, 51192], "temperature": 0.0, "avg_logprob": -0.28164708614349365, "compression_ratio": 1.455128205128205, "no_speech_prob": 0.3044232130050659}, {"id": 79, "seek": 57136, "start": 587.92, "end": 597.4, "text": " So especially the file time stamps currently has to be explicitly touched with using the", "tokens": [51192, 407, 2318, 264, 3991, 565, 30800, 4362, 575, 281, 312, 20803, 9828, 365, 1228, 264, 51666], "temperature": 0.0, "avg_logprob": -0.28164708614349365, "compression_ratio": 1.455128205128205, "no_speech_prob": 0.3044232130050659}, {"id": 80, "seek": 59740, "start": 597.4, "end": 608.4, "text": " find commands, XRs commands, and the touch commands like this very complex script.", "tokens": [50364, 915, 16901, 11, 1783, 49, 82, 16901, 11, 293, 264, 2557, 16901, 411, 341, 588, 3997, 5755, 13, 50914], "temperature": 0.0, "avg_logprob": -0.40767623760082106, "compression_ratio": 1.4726027397260273, "no_speech_prob": 0.27988991141319275}, {"id": 81, "seek": 59740, "start": 608.4, "end": 613.92, "text": " That already takes more than three lines.", "tokens": [50914, 663, 1217, 2516, 544, 813, 1045, 3876, 13, 51190], "temperature": 0.0, "avg_logprob": -0.40767623760082106, "compression_ratio": 1.4726027397260273, "no_speech_prob": 0.27988991141319275}, {"id": 82, "seek": 59740, "start": 613.92, "end": 622.0799999999999, "text": " And also, you have to squash all the layers to eliminate all the fs files that are created", "tokens": [51190, 400, 611, 11, 291, 362, 281, 30725, 439, 264, 7914, 281, 13819, 439, 264, 283, 82, 7098, 300, 366, 2942, 51598], "temperature": 0.0, "avg_logprob": -0.40767623760082106, "compression_ratio": 1.4726027397260273, "no_speech_prob": 0.27988991141319275}, {"id": 83, "seek": 62208, "start": 622.08, "end": 631.6800000000001, "text": " on removing the files in the containers because the time stamps of the whiteouts are not reproducible", "tokens": [50364, 322, 12720, 264, 7098, 294, 264, 17089, 570, 264, 565, 30800, 295, 264, 2418, 7711, 366, 406, 11408, 32128, 50844], "temperature": 0.0, "avg_logprob": -0.26075343290964764, "compression_ratio": 1.381294964028777, "no_speech_prob": 0.19124746322631836}, {"id": 84, "seek": 62208, "start": 631.6800000000001, "end": 635.6, "text": " in build git version 0.11.", "tokens": [50844, 294, 1322, 18331, 3037, 1958, 13, 5348, 13, 51040], "temperature": 0.0, "avg_logprob": -0.26075343290964764, "compression_ratio": 1.381294964028777, "no_speech_prob": 0.19124746322631836}, {"id": 85, "seek": 62208, "start": 635.6, "end": 642.0400000000001, "text": " And also there's a restriction on the mount point trajectories.", "tokens": [51040, 400, 611, 456, 311, 257, 29529, 322, 264, 3746, 935, 18257, 2083, 13, 51362], "temperature": 0.0, "avg_logprob": -0.26075343290964764, "compression_ratio": 1.381294964028777, "no_speech_prob": 0.19124746322631836}, {"id": 86, "seek": 64204, "start": 642.04, "end": 650.68, "text": " So cache mount points can be only created under TMP fs such as thrush div.", "tokens": [50364, 407, 19459, 3746, 2793, 393, 312, 787, 2942, 833, 314, 12224, 283, 82, 1270, 382, 739, 1498, 3414, 13, 50796], "temperature": 0.0, "avg_logprob": -0.31841087341308594, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.17914552986621857}, {"id": 87, "seek": 64204, "start": 650.68, "end": 658.8, "text": " And also hard links are not reproducible depending on the file system stamp shooter.", "tokens": [50796, 400, 611, 1152, 6123, 366, 406, 11408, 32128, 5413, 322, 264, 3991, 1185, 9921, 24680, 13, 51202], "temperature": 0.0, "avg_logprob": -0.31841087341308594, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.17914552986621857}, {"id": 88, "seek": 64204, "start": 658.8, "end": 665.52, "text": " So in this version, we still have a bunch of capabilities, but these capabilities are already", "tokens": [51202, 407, 294, 341, 3037, 11, 321, 920, 362, 257, 3840, 295, 10862, 11, 457, 613, 10862, 366, 1217, 51538], "temperature": 0.0, "avg_logprob": -0.31841087341308594, "compression_ratio": 1.4293785310734464, "no_speech_prob": 0.17914552986621857}, {"id": 89, "seek": 66552, "start": 665.52, "end": 673.56, "text": " being improved in my product list 3560.", "tokens": [50364, 885, 9689, 294, 452, 1674, 1329, 6976, 4550, 13, 50766], "temperature": 0.0, "avg_logprob": -0.2280003777865706, "compression_ratio": 1.5390070921985815, "no_speech_prob": 0.502510130405426}, {"id": 90, "seek": 66552, "start": 673.56, "end": 681.3199999999999, "text": " It's not merged in the master branch yet, but I hope that this product will be merged", "tokens": [50766, 467, 311, 406, 36427, 294, 264, 4505, 9819, 1939, 11, 457, 286, 1454, 300, 341, 1674, 486, 312, 36427, 51154], "temperature": 0.0, "avg_logprob": -0.2280003777865706, "compression_ratio": 1.5390070921985815, "no_speech_prob": 0.502510130405426}, {"id": 91, "seek": 66552, "start": 681.3199999999999, "end": 693.72, "text": " in the next version 0.12 in the next couple of weeks or maybe in the next couple of months.", "tokens": [51154, 294, 264, 958, 3037, 1958, 13, 4762, 294, 264, 958, 1916, 295, 3259, 420, 1310, 294, 264, 958, 1916, 295, 2493, 13, 51774], "temperature": 0.0, "avg_logprob": -0.2280003777865706, "compression_ratio": 1.5390070921985815, "no_speech_prob": 0.502510130405426}, {"id": 92, "seek": 69372, "start": 693.72, "end": 697.52, "text": " The next topic is reproducing package versions.", "tokens": [50364, 440, 958, 4829, 307, 11408, 2175, 7372, 9606, 13, 50554], "temperature": 0.0, "avg_logprob": -0.24584436416625977, "compression_ratio": 1.7098765432098766, "no_speech_prob": 0.13797566294670105}, {"id": 93, "seek": 69372, "start": 697.52, "end": 701.08, "text": " This is the most important topic of this talk.", "tokens": [50554, 639, 307, 264, 881, 1021, 4829, 295, 341, 751, 13, 50732], "temperature": 0.0, "avg_logprob": -0.24584436416625977, "compression_ratio": 1.7098765432098766, "no_speech_prob": 0.13797566294670105}, {"id": 94, "seek": 69372, "start": 701.08, "end": 708.12, "text": " The package versions are hard to reproduce because most of the distributions do not retain", "tokens": [50732, 440, 7372, 9606, 366, 1152, 281, 29501, 570, 881, 295, 264, 37870, 360, 406, 18340, 51084], "temperature": 0.0, "avg_logprob": -0.24584436416625977, "compression_ratio": 1.7098765432098766, "no_speech_prob": 0.13797566294670105}, {"id": 95, "seek": 69372, "start": 708.12, "end": 710.6800000000001, "text": " all the packages.", "tokens": [51084, 439, 264, 17401, 13, 51212], "temperature": 0.0, "avg_logprob": -0.24584436416625977, "compression_ratio": 1.7098765432098766, "no_speech_prob": 0.13797566294670105}, {"id": 96, "seek": 69372, "start": 710.6800000000001, "end": 717.52, "text": " For example, Ubuntu does not retain all the packages as far as I can see.", "tokens": [51212, 1171, 1365, 11, 30230, 45605, 775, 406, 18340, 439, 264, 17401, 382, 1400, 382, 286, 393, 536, 13, 51554], "temperature": 0.0, "avg_logprob": -0.24584436416625977, "compression_ratio": 1.7098765432098766, "no_speech_prob": 0.13797566294670105}, {"id": 97, "seek": 71752, "start": 717.52, "end": 723.6, "text": " DBN does, but the package archives are not mirrored widely.", "tokens": [50364, 26754, 45, 775, 11, 457, 264, 7372, 25607, 366, 406, 3149, 340, 986, 13371, 13, 50668], "temperature": 0.0, "avg_logprob": -0.2920233711363777, "compression_ratio": 1.4513888888888888, "no_speech_prob": 0.3959636390209198}, {"id": 98, "seek": 71752, "start": 723.6, "end": 733.0799999999999, "text": " And basically we only have the central snapshot.dbn.orz and only a few mirrors.", "tokens": [50668, 400, 1936, 321, 787, 362, 264, 5777, 30163, 13, 67, 65, 77, 13, 284, 89, 293, 787, 257, 1326, 24238, 13, 51142], "temperature": 0.0, "avg_logprob": -0.2920233711363777, "compression_ratio": 1.4513888888888888, "no_speech_prob": 0.3959636390209198}, {"id": 99, "seek": 71752, "start": 733.0799999999999, "end": 742.12, "text": " This is causing too much load on the central server snapshot.dbn.orz.", "tokens": [51142, 639, 307, 9853, 886, 709, 3677, 322, 264, 5777, 7154, 30163, 13, 67, 65, 77, 13, 284, 89, 13, 51594], "temperature": 0.0, "avg_logprob": -0.2920233711363777, "compression_ratio": 1.4513888888888888, "no_speech_prob": 0.3959636390209198}, {"id": 100, "seek": 74212, "start": 742.12, "end": 749.72, "text": " So basically this snapshot.dbn.orz server can't be used in the CI environments because", "tokens": [50364, 407, 1936, 341, 30163, 13, 67, 65, 77, 13, 284, 89, 7154, 393, 380, 312, 1143, 294, 264, 37777, 12388, 570, 50744], "temperature": 0.0, "avg_logprob": -0.2663431167602539, "compression_ratio": 1.4588235294117646, "no_speech_prob": 0.2414548695087433}, {"id": 101, "seek": 74212, "start": 749.72, "end": 754.32, "text": " it's really slow and it's really freaky.", "tokens": [50744, 309, 311, 534, 2964, 293, 309, 311, 534, 2130, 15681, 13, 50974], "temperature": 0.0, "avg_logprob": -0.2663431167602539, "compression_ratio": 1.4588235294117646, "no_speech_prob": 0.2414548695087433}, {"id": 102, "seek": 74212, "start": 754.32, "end": 759.64, "text": " And this slowness and the freakiest problem will get even worse when more people begin", "tokens": [50974, 400, 341, 1061, 648, 442, 293, 264, 2130, 514, 6495, 1154, 486, 483, 754, 5324, 562, 544, 561, 1841, 51240], "temperature": 0.0, "avg_logprob": -0.2663431167602539, "compression_ratio": 1.4588235294117646, "no_speech_prob": 0.2414548695087433}, {"id": 103, "seek": 74212, "start": 759.64, "end": 764.12, "text": " to make their bills reproducible.", "tokens": [51240, 281, 652, 641, 12433, 11408, 32128, 13, 51464], "temperature": 0.0, "avg_logprob": -0.2663431167602539, "compression_ratio": 1.4588235294117646, "no_speech_prob": 0.2414548695087433}, {"id": 104, "seek": 76412, "start": 764.12, "end": 774.12, "text": " This situation is very similar for Fedora and Arc Linux as well.", "tokens": [50364, 639, 2590, 307, 588, 2531, 337, 7772, 3252, 293, 21727, 18734, 382, 731, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3591441104286595, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.2808874249458313}, {"id": 105, "seek": 76412, "start": 774.12, "end": 778.16, "text": " And reprogate is my solution for this problem.", "tokens": [50864, 400, 1085, 6675, 473, 307, 452, 3827, 337, 341, 1154, 13, 51066], "temperature": 0.0, "avg_logprob": -0.3591441104286595, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.2808874249458313}, {"id": 106, "seek": 76412, "start": 778.16, "end": 788.2, "text": " This is a decentralized and reproducible front-end for Aftergate, DNF, APK, and Parkmar.", "tokens": [51066, 639, 307, 257, 32870, 293, 11408, 32128, 1868, 12, 521, 337, 2381, 22514, 11, 21500, 37, 11, 5372, 42, 11, 293, 4964, 6209, 13, 51568], "temperature": 0.0, "avg_logprob": -0.3591441104286595, "compression_ratio": 1.3333333333333333, "no_speech_prob": 0.2808874249458313}, {"id": 107, "seek": 78820, "start": 788.2, "end": 793.6800000000001, "text": " The package version can be locked with SHA256 sums file.", "tokens": [50364, 440, 7372, 3037, 393, 312, 9376, 365, 38820, 6074, 21, 34499, 3991, 13, 50638], "temperature": 0.0, "avg_logprob": -0.3720094446550336, "compression_ratio": 1.207142857142857, "no_speech_prob": 0.10440411418676376}, {"id": 108, "seek": 78820, "start": 793.6800000000001, "end": 805.8000000000001, "text": " And packages can be fetched from several transports such as HLGP, OCR, OCR3s, IPFS, local five", "tokens": [50638, 400, 17401, 393, 312, 23673, 292, 490, 2940, 5495, 82, 1270, 382, 389, 43, 38, 47, 11, 422, 18547, 11, 422, 18547, 18, 82, 11, 8671, 29318, 11, 2654, 1732, 51244], "temperature": 0.0, "avg_logprob": -0.3720094446550336, "compression_ratio": 1.207142857142857, "no_speech_prob": 0.10440411418676376}, {"id": 109, "seek": 78820, "start": 805.8000000000001, "end": 810.5200000000001, "text": " systems, and NFS.", "tokens": [51244, 3652, 11, 293, 13576, 50, 13, 51480], "temperature": 0.0, "avg_logprob": -0.3720094446550336, "compression_ratio": 1.207142857142857, "no_speech_prob": 0.10440411418676376}, {"id": 110, "seek": 81052, "start": 810.52, "end": 818.76, "text": " By default, reprogate attempts to fetch the packages from dev.dbn.orz using the package", "tokens": [50364, 3146, 7576, 11, 1085, 6675, 473, 15257, 281, 23673, 264, 17401, 490, 1905, 13, 67, 65, 77, 13, 284, 89, 1228, 264, 7372, 50776], "temperature": 0.0, "avg_logprob": -0.25276450505332343, "compression_ratio": 1.4251968503937007, "no_speech_prob": 0.3008278012275696}, {"id": 111, "seek": 81052, "start": 818.76, "end": 820.76, "text": " name.", "tokens": [50776, 1315, 13, 50876], "temperature": 0.0, "avg_logprob": -0.25276450505332343, "compression_ratio": 1.4251968503937007, "no_speech_prob": 0.3008278012275696}, {"id": 112, "seek": 81052, "start": 820.76, "end": 827.0799999999999, "text": " The dev.dbn.orz server is fast, but it's ephemeral.", "tokens": [50876, 440, 1905, 13, 67, 65, 77, 13, 284, 89, 7154, 307, 2370, 11, 457, 309, 311, 308, 41245, 2790, 13, 51192], "temperature": 0.0, "avg_logprob": -0.25276450505332343, "compression_ratio": 1.4251968503937007, "no_speech_prob": 0.3008278012275696}, {"id": 113, "seek": 81052, "start": 827.0799999999999, "end": 830.36, "text": " It doesn't regain all the packages.", "tokens": [51192, 467, 1177, 380, 35336, 439, 264, 17401, 13, 51356], "temperature": 0.0, "avg_logprob": -0.25276450505332343, "compression_ratio": 1.4251968503937007, "no_speech_prob": 0.3008278012275696}, {"id": 114, "seek": 83036, "start": 830.36, "end": 845.72, "text": " So for all packages, reprogate automatically forced back to dev.n.set.fr using SHA256 hash.", "tokens": [50364, 407, 337, 439, 17401, 11, 1085, 6675, 473, 6772, 7579, 646, 281, 1905, 13, 77, 13, 3854, 13, 5779, 1228, 38820, 6074, 21, 22019, 13, 51132], "temperature": 0.0, "avg_logprob": -0.2720096508661906, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.19500915706157684}, {"id": 115, "seek": 83036, "start": 845.72, "end": 856.6800000000001, "text": " This is relatively slow, but this server provides persistent snapshots of all the packages.", "tokens": [51132, 639, 307, 7226, 2964, 11, 457, 341, 7154, 6417, 24315, 19206, 27495, 295, 439, 264, 17401, 13, 51680], "temperature": 0.0, "avg_logprob": -0.2720096508661906, "compression_ratio": 1.2887323943661972, "no_speech_prob": 0.19500915706157684}, {"id": 116, "seek": 85668, "start": 856.68, "end": 866.92, "text": " You can also configure reprogate to use OCR3s, IPFS, and local five systems.", "tokens": [50364, 509, 393, 611, 22162, 1085, 6675, 473, 281, 764, 422, 18547, 18, 82, 11, 8671, 29318, 11, 293, 2654, 1732, 3652, 13, 50876], "temperature": 0.0, "avg_logprob": -0.24352037338983445, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.2723381221294403}, {"id": 117, "seek": 85668, "start": 866.92, "end": 875.2399999999999, "text": " Reprogate currently supports the five distributions, dev.dbn.orz, Fedora, ArcBind, and Arc Linux.", "tokens": [50876, 3696, 6675, 473, 4362, 9346, 264, 1732, 37870, 11, 1905, 13, 67, 65, 77, 13, 284, 89, 11, 7772, 3252, 11, 21727, 33, 471, 11, 293, 21727, 18734, 13, 51292], "temperature": 0.0, "avg_logprob": -0.24352037338983445, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.2723381221294403}, {"id": 118, "seek": 85668, "start": 875.2399999999999, "end": 881.68, "text": " Reprogate is expected to be used in continuous, but can be used with noncontinental environments", "tokens": [51292, 3696, 6675, 473, 307, 5176, 281, 312, 1143, 294, 10957, 11, 457, 393, 312, 1143, 365, 2107, 9000, 38653, 12388, 51614], "temperature": 0.0, "avg_logprob": -0.24352037338983445, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.2723381221294403}, {"id": 119, "seek": 85668, "start": 881.68, "end": 884.4399999999999, "text": " as well.", "tokens": [51614, 382, 731, 13, 51752], "temperature": 0.0, "avg_logprob": -0.24352037338983445, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.2723381221294403}, {"id": 120, "seek": 88444, "start": 884.44, "end": 886.72, "text": " The command user is like this.", "tokens": [50364, 440, 5622, 4195, 307, 411, 341, 13, 50478], "temperature": 0.0, "avg_logprob": -0.4213112224232067, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.5636821389198303}, {"id": 121, "seek": 88444, "start": 886.72, "end": 893.2800000000001, "text": " So you run reprogate hash generate to generate the hash file, and run after get install hello", "tokens": [50478, 407, 291, 1190, 1085, 6675, 473, 22019, 8460, 281, 8460, 264, 22019, 3991, 11, 293, 1190, 934, 483, 3625, 7751, 50806], "temperature": 0.0, "avg_logprob": -0.4213112224232067, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.5636821389198303}, {"id": 122, "seek": 88444, "start": 893.2800000000001, "end": 902.4000000000001, "text": " to install hello packages, and reprogate hash generate again, and you will get SHA256", "tokens": [50806, 281, 3625, 7751, 17401, 11, 293, 1085, 6675, 473, 22019, 8460, 797, 11, 293, 291, 486, 483, 38820, 6074, 21, 51262], "temperature": 0.0, "avg_logprob": -0.4213112224232067, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.5636821389198303}, {"id": 123, "seek": 90240, "start": 902.4, "end": 916.0799999999999, "text": " stamps file like this.", "tokens": [50364, 30800, 3991, 411, 341, 13, 51048], "temperature": 0.0, "avg_logprob": -0.41803626453175263, "compression_ratio": 1.2040816326530612, "no_speech_prob": 0.6934700608253479}, {"id": 124, "seek": 90240, "start": 916.0799999999999, "end": 925.28, "text": " And inside the containers, you can run reprogate install with SHA256 stamps file, and reprogate", "tokens": [51048, 400, 1854, 264, 17089, 11, 291, 393, 1190, 1085, 6675, 473, 3625, 365, 38820, 6074, 21, 30800, 3991, 11, 293, 1085, 6675, 473, 51508], "temperature": 0.0, "avg_logprob": -0.41803626453175263, "compression_ratio": 1.2040816326530612, "no_speech_prob": 0.6934700608253479}, {"id": 125, "seek": 92528, "start": 925.28, "end": 934.8, "text": " this package from HTTP after get to repo, or maybe from OCR3, or maybe from IPFS, or", "tokens": [50364, 341, 7372, 490, 33283, 934, 483, 281, 49040, 11, 420, 1310, 490, 422, 18547, 18, 11, 420, 1310, 490, 8671, 29318, 11, 420, 50840], "temperature": 0.0, "avg_logprob": -0.28243621190388996, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.6219435334205627}, {"id": 126, "seek": 92528, "start": 934.8, "end": 940.72, "text": " maybe from NFS, depending on the configuration.", "tokens": [50840, 1310, 490, 13576, 50, 11, 5413, 322, 264, 11694, 13, 51136], "temperature": 0.0, "avg_logprob": -0.28243621190388996, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.6219435334205627}, {"id": 127, "seek": 92528, "start": 940.72, "end": 943.16, "text": " And here is the demo.", "tokens": [51136, 400, 510, 307, 264, 10723, 13, 51258], "temperature": 0.0, "avg_logprob": -0.28243621190388996, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.6219435334205627}, {"id": 128, "seek": 92528, "start": 943.16, "end": 951.72, "text": " So to reproduce this demo, you have to run specific version of build kit, version 0.11.0.", "tokens": [51258, 407, 281, 29501, 341, 10723, 11, 291, 362, 281, 1190, 2685, 3037, 295, 1322, 8260, 11, 3037, 1958, 13, 5348, 13, 15, 13, 51686], "temperature": 0.0, "avg_logprob": -0.28243621190388996, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.6219435334205627}, {"id": 129, "seek": 95172, "start": 951.72, "end": 965.76, "text": " And in this directory, I have SHA256 stamps file like this.", "tokens": [50364, 400, 294, 341, 21120, 11, 286, 362, 38820, 6074, 21, 30800, 3991, 411, 341, 13, 51066], "temperature": 0.0, "avg_logprob": -0.35194690704345705, "compression_ratio": 1.2344827586206897, "no_speech_prob": 0.4503602385520935}, {"id": 130, "seek": 95172, "start": 965.76, "end": 973.5600000000001, "text": " This is mostly for running GCC.", "tokens": [51066, 639, 307, 5240, 337, 2614, 460, 11717, 13, 51456], "temperature": 0.0, "avg_logprob": -0.35194690704345705, "compression_ratio": 1.2344827586206897, "no_speech_prob": 0.4503602385520935}, {"id": 131, "seek": 95172, "start": 973.5600000000001, "end": 980.88, "text": " And Docker file is a country really complex, it's machine generated, and it has a bunch", "tokens": [51456, 400, 33772, 3991, 307, 257, 1941, 534, 3997, 11, 309, 311, 3479, 10833, 11, 293, 309, 575, 257, 3840, 51822], "temperature": 0.0, "avg_logprob": -0.35194690704345705, "compression_ratio": 1.2344827586206897, "no_speech_prob": 0.4503602385520935}, {"id": 132, "seek": 98088, "start": 980.88, "end": 1008.32, "text": " of workarounds like this for sausage epoch stuff, and you can use this to test reproducibility.", "tokens": [50364, 295, 589, 289, 4432, 411, 341, 337, 20526, 30992, 339, 1507, 11, 293, 291, 393, 764, 341, 281, 1500, 11408, 537, 39802, 13, 51736], "temperature": 0.0, "avg_logprob": -0.5340855563128436, "compression_ratio": 1.1585365853658536, "no_speech_prob": 0.4946673810482025}, {"id": 133, "seek": 100832, "start": 1008.32, "end": 1015.32, "text": " This takes a few minutes, but the result is like this.", "tokens": [50364, 639, 2516, 257, 1326, 2077, 11, 457, 264, 1874, 307, 411, 341, 13, 50714], "temperature": 0.0, "avg_logprob": -0.411302490234375, "compression_ratio": 1.1484375, "no_speech_prob": 0.693820595741272}, {"id": 134, "seek": 100832, "start": 1015.32, "end": 1029.76, "text": " So you will get the same fast 0, AS3BC, FEB67C85 on any machine, such as on DTIB actions, or", "tokens": [50714, 407, 291, 486, 483, 264, 912, 2370, 1958, 11, 7469, 18, 7869, 11, 31778, 33, 22452, 34, 19287, 322, 604, 3479, 11, 1270, 382, 322, 413, 5422, 33, 5909, 11, 420, 51436], "temperature": 0.0, "avg_logprob": -0.411302490234375, "compression_ratio": 1.1484375, "no_speech_prob": 0.693820595741272}, {"id": 135, "seek": 102976, "start": 1029.76, "end": 1039.08, "text": " local laptops, so you can try this by yourself on your own machine.", "tokens": [50364, 2654, 27642, 11, 370, 291, 393, 853, 341, 538, 1803, 322, 428, 1065, 3479, 13, 50830], "temperature": 0.0, "avg_logprob": -0.36079894519243083, "compression_ratio": 1.3511904761904763, "no_speech_prob": 0.630660355091095}, {"id": 136, "seek": 102976, "start": 1039.08, "end": 1045.2, "text": " And the future works includes simplifying Docker files and cache management.", "tokens": [50830, 400, 264, 2027, 1985, 5974, 6883, 5489, 33772, 7098, 293, 19459, 4592, 13, 51136], "temperature": 0.0, "avg_logprob": -0.36079894519243083, "compression_ratio": 1.3511904761904763, "no_speech_prob": 0.630660355091095}, {"id": 137, "seek": 102976, "start": 1045.2, "end": 1053.92, "text": " I'm also trying to implement with 20-stages xxopt and xxapk for cross-compilation.", "tokens": [51136, 286, 478, 611, 1382, 281, 4445, 365, 945, 12, 372, 1660, 2031, 87, 5747, 293, 2031, 87, 569, 74, 337, 3278, 12, 21541, 16067, 13, 51572], "temperature": 0.0, "avg_logprob": -0.36079894519243083, "compression_ratio": 1.3511904761904763, "no_speech_prob": 0.630660355091095}, {"id": 138, "seek": 105392, "start": 1053.92, "end": 1061.5600000000002, "text": " And also, reproducibility should be testable with SSF, such as provenances, ideally just", "tokens": [50364, 400, 611, 11, 11408, 537, 39802, 820, 312, 1500, 712, 365, 12238, 37, 11, 1270, 382, 12785, 2676, 11, 22915, 445, 50746], "temperature": 0.0, "avg_logprob": -0.3918239010704888, "compression_ratio": 1.489795918367347, "no_speech_prob": 0.28699925541877747}, {"id": 139, "seek": 105392, "start": 1061.5600000000002, "end": 1067.96, "text": " with a single click, and probably more contribution is welcome for these topics.", "tokens": [50746, 365, 257, 2167, 2052, 11, 293, 1391, 544, 13150, 307, 2928, 337, 613, 8378, 13, 51066], "temperature": 0.0, "avg_logprob": -0.3918239010704888, "compression_ratio": 1.489795918367347, "no_speech_prob": 0.28699925541877747}, {"id": 140, "seek": 105392, "start": 1067.96, "end": 1071.8000000000002, "text": " And here is the wrap up of my talk.", "tokens": [51066, 400, 510, 307, 264, 7019, 493, 295, 452, 751, 13, 51258], "temperature": 0.0, "avg_logprob": -0.3918239010704888, "compression_ratio": 1.489795918367347, "no_speech_prob": 0.28699925541877747}, {"id": 141, "seek": 105392, "start": 1071.8000000000002, "end": 1079.72, "text": " So reproducible build helps testing the true origin of the binary, and challenges like", "tokens": [51258, 407, 11408, 32128, 1322, 3665, 4997, 264, 2074, 4957, 295, 264, 17434, 11, 293, 4759, 411, 51654], "temperature": 0.0, "avg_logprob": -0.3918239010704888, "compression_ratio": 1.489795918367347, "no_speech_prob": 0.28699925541877747}, {"id": 142, "seek": 107972, "start": 1079.72, "end": 1086.6000000000001, "text": " non-deterministic timestamps and partitions, and basically the partitions 0.11 adds programming", "tokens": [50364, 2107, 12, 49136, 259, 3142, 49108, 23150, 293, 644, 2451, 11, 293, 1936, 264, 644, 2451, 1958, 13, 5348, 10860, 9410, 50708], "temperature": 0.0, "avg_logprob": -0.4901986639183688, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.546092689037323}, {"id": 143, "seek": 107972, "start": 1086.6000000000001, "end": 1094.1200000000001, "text": " and support for source data epoch, and the reproducibility can be used for reproducing", "tokens": [50708, 293, 1406, 337, 4009, 1412, 30992, 339, 11, 293, 264, 11408, 537, 39802, 393, 312, 1143, 337, 11408, 2175, 51084], "temperature": 0.0, "avg_logprob": -0.4901986639183688, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.546092689037323}, {"id": 144, "seek": 107972, "start": 1094.1200000000001, "end": 1099.0, "text": " the partitions with 5, 6 sums.", "tokens": [51084, 264, 644, 2451, 365, 1025, 11, 1386, 34499, 13, 51328], "temperature": 0.0, "avg_logprob": -0.4901986639183688, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.546092689037323}, {"id": 145, "seek": 107972, "start": 1099.0, "end": 1105.56, "text": " And I think, sorry, the demo is still running, so I can't show the result of the demo, but", "tokens": [51328, 400, 286, 519, 11, 2597, 11, 264, 10723, 307, 920, 2614, 11, 370, 286, 393, 380, 855, 264, 1874, 295, 264, 10723, 11, 457, 51656], "temperature": 0.0, "avg_logprob": -0.4901986639183688, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.546092689037323}, {"id": 146, "seek": 110556, "start": 1105.56, "end": 1110.8799999999999, "text": " that should be like this result.", "tokens": [50364, 300, 820, 312, 411, 341, 1874, 13, 50630], "temperature": 0.0, "avg_logprob": -0.294708251953125, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.33811408281326294}, {"id": 147, "seek": 110556, "start": 1110.8799999999999, "end": 1118.36, "text": " Any questions?", "tokens": [50630, 2639, 1651, 30, 51004], "temperature": 0.0, "avg_logprob": -0.294708251953125, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.33811408281326294}, {"id": 148, "seek": 110556, "start": 1118.36, "end": 1123.96, "text": " Would it be fair to say that this sacrifice is security in favor of reproducibility, because", "tokens": [51004, 6068, 309, 312, 3143, 281, 584, 300, 341, 11521, 307, 3825, 294, 2294, 295, 11408, 537, 39802, 11, 570, 51284], "temperature": 0.0, "avg_logprob": -0.294708251953125, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.33811408281326294}, {"id": 149, "seek": 110556, "start": 1123.96, "end": 1128.72, "text": " you would have to keep that list of hashes maintained to make sure that the packages", "tokens": [51284, 291, 576, 362, 281, 1066, 300, 1329, 295, 575, 8076, 17578, 281, 652, 988, 300, 264, 17401, 51522], "temperature": 0.0, "avg_logprob": -0.294708251953125, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.33811408281326294}, {"id": 150, "seek": 110556, "start": 1128.72, "end": 1132.04, "text": " downloaded are always like the most secure ones?", "tokens": [51522, 21748, 366, 1009, 411, 264, 881, 7144, 2306, 30, 51688], "temperature": 0.0, "avg_logprob": -0.294708251953125, "compression_ratio": 1.5138121546961325, "no_speech_prob": 0.33811408281326294}, {"id": 151, "seek": 113204, "start": 1132.04, "end": 1136.24, "text": " So your question was how to make these hash files, right?", "tokens": [50364, 407, 428, 1168, 390, 577, 281, 652, 613, 22019, 7098, 11, 558, 30, 50574], "temperature": 0.0, "avg_logprob": -0.3181980980767144, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.31536591053009033}, {"id": 152, "seek": 113204, "start": 1136.24, "end": 1143.72, "text": " How do you make sure the list of package hashes is always pointing to the most secure versions", "tokens": [50574, 1012, 360, 291, 652, 988, 264, 1329, 295, 7372, 575, 8076, 307, 1009, 12166, 281, 264, 881, 7144, 9606, 50948], "temperature": 0.0, "avg_logprob": -0.3181980980767144, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.31536591053009033}, {"id": 153, "seek": 113204, "start": 1143.72, "end": 1147.24, "text": " of a package?", "tokens": [50948, 295, 257, 7372, 30, 51124], "temperature": 0.0, "avg_logprob": -0.3181980980767144, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.31536591053009033}, {"id": 154, "seek": 113204, "start": 1147.24, "end": 1156.0, "text": " So you can use replicate hash data command to scan installed packages, and make the hash", "tokens": [51124, 407, 291, 393, 764, 25356, 22019, 1412, 5622, 281, 11049, 8899, 17401, 11, 293, 652, 264, 22019, 51562], "temperature": 0.0, "avg_logprob": -0.3181980980767144, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.31536591053009033}, {"id": 155, "seek": 115600, "start": 1156.0, "end": 1166.52, "text": " file like this, but you can also create a hash file by yourself, by just with text editor,", "tokens": [50364, 3991, 411, 341, 11, 457, 291, 393, 611, 1884, 257, 22019, 3991, 538, 1803, 11, 538, 445, 365, 2487, 9839, 11, 50890], "temperature": 0.0, "avg_logprob": -0.34738524485442596, "compression_ratio": 1.3724137931034484, "no_speech_prob": 0.4780142903327942}, {"id": 156, "seek": 115600, "start": 1166.52, "end": 1173.36, "text": " or maybe just your own NSR tool to maintain this hash file.", "tokens": [50890, 420, 1310, 445, 428, 1065, 15943, 49, 2290, 281, 6909, 341, 22019, 3991, 13, 51232], "temperature": 0.0, "avg_logprob": -0.34738524485442596, "compression_ratio": 1.3724137931034484, "no_speech_prob": 0.4780142903327942}, {"id": 157, "seek": 115600, "start": 1173.36, "end": 1177.96, "text": " Okay, we're out of time.", "tokens": [51232, 1033, 11, 321, 434, 484, 295, 565, 13, 51462], "temperature": 0.0, "avg_logprob": -0.34738524485442596, "compression_ratio": 1.3724137931034484, "no_speech_prob": 0.4780142903327942}, {"id": 158, "seek": 115600, "start": 1177.96, "end": 1180.0, "text": " Thank you for the talk.", "tokens": [51462, 1044, 291, 337, 264, 751, 13, 51564], "temperature": 0.0, "avg_logprob": -0.34738524485442596, "compression_ratio": 1.3724137931034484, "no_speech_prob": 0.4780142903327942}, {"id": 159, "seek": 118000, "start": 1180.0, "end": 1181.0, "text": " Thanks everyone for attending.", "tokens": [50364, 2561, 1518, 337, 15862, 13, 50414], "temperature": 0.0, "avg_logprob": -0.5656598210334778, "compression_ratio": 0.7894736842105263, "no_speech_prob": 0.8881246447563171}], "language": "en"}