{"text": " So, hello everyone, first of all, this is not my talk. I've been receiving this talk because my colleague didn't make it to get the visa on time. So I'm sorry, I don't know anything about Kubernetes. I'm usually more into low-level stuff, kernel, and embedded. But I will deliver the talk with the notes that I received, and if you have questions, you can directly direct it by email to my colleague. I wouldn't be able to answer. I'm sorry for this in advance. Okay. So before getting to the architecture and principle of the QBOS, let's define what it's all. So there is a cloud-native development that is encouraged by Docker Kubernetes communities. And many infrastructure is being cloudified. But some of the problems with the general-purpose operating systems reappear in this cloud-native environment. So you have container management, workloads scheduling, automatic service deployment, rollbacks of updates, and so on. That's all capabilities that are provided by Kubernetes, but it is unable to control the cluster-node operating system directly. So the first problem in cloud-native environments is the desynchronization between OS and Kubernetes that are managed and controlled completely separately. Also Kubernetes, like the operating system management, needs a key, upgrades, user access control, all these things. And then you can have like the ops operation guys or patient people, sorry, that need to complain ridden and task between the two systems. The maintenance are therefore poorly synchronized usually, and the greater modification of the OS components can affect the availability of the OS and which require additional monitoring from Kubernetes. So an example is that you have operation staff that must block the nodes to stop new workloads from arriving in order to upgrade the OS without interfering with the Kubernetes. And after everything is clear and everything is updated, you can unblock the node again. So this makes it complicated and expensive. So another issue is the OS version management. So if you have a standard package manager and you can add, remove, modify packages independently on the OS, at the beginning you have an image which is clean, but then you start differing from your different instances. So you have like what they call OS version splitting. So you will have different packages installed on different nodes. The version of these packages can also differ, security updates and all that stuff. So you have this divergence that appear over time. So if you want some integrity and consistency that you want to ensure for your OS nodes, this can harm this constraint. And yes, so if you want also to update to a major version, it's also more difficult. So other people have worked on this problem. So rebuilding the operating system is an approach that has been taken to solve these problems. So previously you have many technology packages that are part of the OS that are moving to containers. So the old guest OS is less reliant. We rely less on the guest OS so it can be replaced by a lightweight operating system with less services that are on and so on. So container OS is a lightweight operating system designed to run containers. And so like on the figure on the right, there is an OS OS and it's not the OS running inside the container. So you have three important aspects, minimalism, usability and atomic updates. It means that you will only include what you really need as components in the host OS. So the container OS requires a Linux kernel, container engines like Docker, container D, and security mechanisms such as SE Linux to ensure the security. And other applications that are running containers are running containers because you don't need it in the host. And this can also reduce the attack surface because you have less in the host OS. Emutability is that you use a read-only file system that can be configured at the start of the deployment and also reduce the risk. And the atomic update is that you do the upgrade for the entire OS and not individually for packages. So the core OS was started in 2013 and was the first widely used container operating system. You also have a system like AWS bottle rocket, flat car, and container optimized OS. So QBOS, it's a container operating system built on OpenOiler, which is a distribution maintained by Huawei. So QBOS main design concept is to use Kubernetes to manage the operating systems. Once you have QBOS that has been installed on a cluster, the user only knew the Qube control command and YAML file on the master node. The OS of the cluster worker node can be managed. And this OS on QBOS is connected to the cluster as a Kubernetes component, putting it in the same position as the other resources in the clusters. And containers and operating system can just be matched in a unified way through Kubernetes. So OpenOiler based reconstruction is used so that the operating system can be updated optimally, like to avoid the problems I introduced before. So now we are going to go a little bit in more depth about QBOS. So the first feature is the ability to manage the OS through directly Kubernetes. So we use API extension, custom resource, CRD, to design and registering in the cluster. We use Kubernetes operating framework to create customized controller for the OS to monitor and manage it. Then this Kubernetes operating framework, we use it to create customers. So the user only need to modify this CR, enter the expected OS status to the cluster, and the QBOS and Kubernetes handle this, and you only have to manage it in the control plane. So the next one is atomicity management of the OS. QBOS upgrade is an atomic dual zone upgrade. It does not include packet manager. The change of each software package corresponds to the change of the operating system version. Then the OS version corresponds to a specific OS image or RPM package combination. Each software update as shown in this diagram is an OS version update. So you avoid the version splitting problems, and the cluster nodes remain consistent at all times. So QBOS is lightweight with unnecessary components removed to reduce the attack surface and enable faster start-up and upgrade. So this is a diagram of the QBOS overall architecture. So you have two main parts. The first with three different components, OS operator, OS proxy, and OS agent. In the red box above the diagram, which are used for Kubernetes cluster docking, complete OS monitoring and management. And the second part is the QBOS image creation tool. The user can use QBOS scripts to generate QBOS images from the open or lower repo source, which supports the generation of container image, virtual machine image, and so on. So the three main components I mentioned, like OS operator, proxy, and agent, are critical to the ability to manage cluster using Kubernetes. The OS operator and proxy are the operators we mentioned earlier. The OS operator will be deployed in the cluster as deployment and daemon set, and will communicate with Kubernetes to issue upgrade instructions. The operator is a global OS manager that monitors all cluster nodes. When a new version of the OS information is configured by the user, it determines whether to upgrade and send a great task to each node. The proxy is a single node operating system manager that monitors the current node information. When the operator sends a great notification, it will lock the node to expel the pods and forward the OS information to the agent. The agent is not included in the Kubernetes cluster. The real executor of the OS management communicates with the proxy via Unix domain sockets, receive a message from the proxy, and perform the upgrade rollback and configuration operations. So the upgrade process, we will use the work process as an explaining example. So we consider how the different components communicate and interact. First the user configures the OS information to be upgraded via Qt control and enable files, such as OS version, address of the OS image, number of nodes to be upgraded concurrently, and so on. Then when the OS instance changes, the operator begins the upgrade process, labels the nodes that must be upgraded, and limits the number of nodes to be upgraded each time to the number specified by the user. Then the proxy checks to see if the current node is marked as an upgrade node, locks the nodes to expel the pods, and retrieves the OS information from the cluster before sending it to the OS agent. After receiving the message, the agents will download the upgraded package from the address specified by the user, complete the upgrade, and restart. After restarting, the proxy will detect that the node OS version has reached the expected version and will unlock the node and remove the upgrade level of the node. So this is the complete upgrade process. Then finally the file system. So how do we design and upgrade the file system in QBOS? It adopts a dual-area upgrade, like mentioned earlier, to upgrade the OS, so you have two root partitions, the upgrade of partition A is to download the updated image for the partition B, and then modify the default bootloader as the B partition after, and then you restart from the B by default, and the opposite happens for the next upgrade. So it's a classical dual image thing. The file system of QBOS is recently, which improved the security, but we also support persistent data partitions. The union path, which is mounted as an overlay, and the files in the image other than the user change can still be seen. There is a writable path, which has a writable file layer to the image using the bind mounts. The files in the image are not displayed, only user data is stored, and there is also the boot partition, which contains the bootloader files. So we determine the main concept of QBOS and design, and implemented a set of components to complete the OS management, and we intend to continue completing more functions based on this process. One thing is the ability to provide a configuration, like in the grid process, the configuration is delivered to the node via the Kubernetes cluster on the cluster control plane to ensure the consistency of the configurations of the nodes, and given that some of the configuration must be complete before the nodes join the cluster, more configuration capabilities to the QBOS image creation are planned. Then there is the improved upgrade capability. We have realized the function-based OS upgrade, and we will provide upgrade strategies that user can customize, such as upgrading based on the cluster node label to provide more upgrade solutions. In addition to the rich functions, we intend to improve the usability of QBOS by displaying the upgrade of configuration process and improving the image creation tool so that user can more easily customize the image. Okay, and that's it. Sorry again for the functions, but for the question, you can always shoot the colleague in the middle.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 18.76, "text": " So, hello everyone, first of all, this is not my talk.", "tokens": [407, 11, 7751, 1518, 11, 700, 295, 439, 11, 341, 307, 406, 452, 751, 13], "temperature": 0.0, "avg_logprob": -0.2925622122628348, "compression_ratio": 1.3537414965986394, "no_speech_prob": 0.3198119103908539}, {"id": 1, "seek": 0, "start": 18.76, "end": 24.84, "text": " I've been receiving this talk because my colleague didn't make it to get the visa on time.", "tokens": [286, 600, 668, 10040, 341, 751, 570, 452, 13532, 994, 380, 652, 309, 281, 483, 264, 18589, 322, 565, 13], "temperature": 0.0, "avg_logprob": -0.2925622122628348, "compression_ratio": 1.3537414965986394, "no_speech_prob": 0.3198119103908539}, {"id": 2, "seek": 0, "start": 24.84, "end": 27.88, "text": " So I'm sorry, I don't know anything about Kubernetes.", "tokens": [407, 286, 478, 2597, 11, 286, 500, 380, 458, 1340, 466, 23145, 13], "temperature": 0.0, "avg_logprob": -0.2925622122628348, "compression_ratio": 1.3537414965986394, "no_speech_prob": 0.3198119103908539}, {"id": 3, "seek": 2788, "start": 27.88, "end": 31.919999999999998, "text": " I'm usually more into low-level stuff, kernel, and embedded.", "tokens": [286, 478, 2673, 544, 666, 2295, 12, 12418, 1507, 11, 28256, 11, 293, 16741, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 4, "seek": 2788, "start": 31.919999999999998, "end": 35.6, "text": " But I will deliver the talk with the notes that I received, and if you have questions,", "tokens": [583, 286, 486, 4239, 264, 751, 365, 264, 5570, 300, 286, 4613, 11, 293, 498, 291, 362, 1651, 11], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 5, "seek": 2788, "start": 35.6, "end": 38.2, "text": " you can directly direct it by email to my colleague.", "tokens": [291, 393, 3838, 2047, 309, 538, 3796, 281, 452, 13532, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 6, "seek": 2788, "start": 38.2, "end": 40.2, "text": " I wouldn't be able to answer.", "tokens": [286, 2759, 380, 312, 1075, 281, 1867, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 7, "seek": 2788, "start": 40.2, "end": 42.64, "text": " I'm sorry for this in advance.", "tokens": [286, 478, 2597, 337, 341, 294, 7295, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 8, "seek": 2788, "start": 42.64, "end": 43.96, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 9, "seek": 2788, "start": 43.96, "end": 50.879999999999995, "text": " So before getting to the architecture and principle of the QBOS, let's define what", "tokens": [407, 949, 1242, 281, 264, 9482, 293, 8665, 295, 264, 1249, 33, 4367, 11, 718, 311, 6964, 437], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 10, "seek": 2788, "start": 50.879999999999995, "end": 51.879999999999995, "text": " it's all.", "tokens": [309, 311, 439, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 11, "seek": 2788, "start": 51.879999999999995, "end": 57.68, "text": " So there is a cloud-native development that is encouraged by Docker Kubernetes communities.", "tokens": [407, 456, 307, 257, 4588, 12, 77, 1166, 3250, 300, 307, 14658, 538, 33772, 23145, 4456, 13], "temperature": 0.0, "avg_logprob": -0.25264416366327, "compression_ratio": 1.5532646048109966, "no_speech_prob": 0.0005762890796177089}, {"id": 12, "seek": 5768, "start": 57.68, "end": 62.72, "text": " And many infrastructure is being cloudified.", "tokens": [400, 867, 6896, 307, 885, 4588, 2587, 13], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 13, "seek": 5768, "start": 62.72, "end": 67.76, "text": " But some of the problems with the general-purpose operating systems reappear in this cloud-native", "tokens": [583, 512, 295, 264, 2740, 365, 264, 2674, 12, 42601, 7447, 3652, 35638, 14881, 294, 341, 4588, 12, 77, 1166], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 14, "seek": 5768, "start": 67.76, "end": 68.76, "text": " environment.", "tokens": [2823, 13], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 15, "seek": 5768, "start": 68.76, "end": 74.32, "text": " So you have container management, workloads scheduling, automatic service deployment,", "tokens": [407, 291, 362, 10129, 4592, 11, 32452, 29055, 11, 12509, 2643, 19317, 11], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 16, "seek": 5768, "start": 74.32, "end": 76.72, "text": " rollbacks of updates, and so on.", "tokens": [3373, 17758, 295, 9205, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 17, "seek": 5768, "start": 76.72, "end": 83.48, "text": " That's all capabilities that are provided by Kubernetes, but it is unable to control", "tokens": [663, 311, 439, 10862, 300, 366, 5649, 538, 23145, 11, 457, 309, 307, 11299, 281, 1969], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 18, "seek": 5768, "start": 83.48, "end": 86.88, "text": " the cluster-node operating system directly.", "tokens": [264, 13630, 12, 77, 1429, 7447, 1185, 3838, 13], "temperature": 0.0, "avg_logprob": -0.21302863090269028, "compression_ratio": 1.57421875, "no_speech_prob": 8.877256914274767e-05}, {"id": 19, "seek": 8688, "start": 86.88, "end": 93.52, "text": " So the first problem in cloud-native environments is the desynchronization between OS and Kubernetes", "tokens": [407, 264, 700, 1154, 294, 4588, 12, 77, 1166, 12388, 307, 264, 730, 36420, 2144, 1296, 12731, 293, 23145], "temperature": 0.0, "avg_logprob": -0.21621007095148534, "compression_ratio": 1.6116071428571428, "no_speech_prob": 5.6573611800558865e-05}, {"id": 20, "seek": 8688, "start": 93.52, "end": 98.6, "text": " that are managed and controlled completely separately.", "tokens": [300, 366, 6453, 293, 10164, 2584, 14759, 13], "temperature": 0.0, "avg_logprob": -0.21621007095148534, "compression_ratio": 1.6116071428571428, "no_speech_prob": 5.6573611800558865e-05}, {"id": 21, "seek": 8688, "start": 98.6, "end": 103.0, "text": " Also Kubernetes, like the operating system management, needs a key, upgrades, user access", "tokens": [2743, 23145, 11, 411, 264, 7447, 1185, 4592, 11, 2203, 257, 2141, 11, 24868, 11, 4195, 2105], "temperature": 0.0, "avg_logprob": -0.21621007095148534, "compression_ratio": 1.6116071428571428, "no_speech_prob": 5.6573611800558865e-05}, {"id": 22, "seek": 8688, "start": 103.0, "end": 105.91999999999999, "text": " control, all these things.", "tokens": [1969, 11, 439, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.21621007095148534, "compression_ratio": 1.6116071428571428, "no_speech_prob": 5.6573611800558865e-05}, {"id": 23, "seek": 8688, "start": 105.91999999999999, "end": 113.0, "text": " And then you can have like the ops operation guys or patient people, sorry, that need to", "tokens": [400, 550, 291, 393, 362, 411, 264, 44663, 6916, 1074, 420, 4537, 561, 11, 2597, 11, 300, 643, 281], "temperature": 0.0, "avg_logprob": -0.21621007095148534, "compression_ratio": 1.6116071428571428, "no_speech_prob": 5.6573611800558865e-05}, {"id": 24, "seek": 11300, "start": 113.0, "end": 117.12, "text": " complain ridden and task between the two systems.", "tokens": [11024, 3973, 1556, 293, 5633, 1296, 264, 732, 3652, 13], "temperature": 0.0, "avg_logprob": -0.2367223103841146, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.895760452607647e-05}, {"id": 25, "seek": 11300, "start": 117.12, "end": 123.36, "text": " The maintenance are therefore poorly synchronized usually, and the greater modification of the", "tokens": [440, 11258, 366, 4412, 22271, 19331, 1602, 2673, 11, 293, 264, 5044, 26747, 295, 264], "temperature": 0.0, "avg_logprob": -0.2367223103841146, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.895760452607647e-05}, {"id": 26, "seek": 11300, "start": 123.36, "end": 129.8, "text": " OS components can affect the availability of the OS and which require additional monitoring", "tokens": [12731, 6677, 393, 3345, 264, 17945, 295, 264, 12731, 293, 597, 3651, 4497, 11028], "temperature": 0.0, "avg_logprob": -0.2367223103841146, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.895760452607647e-05}, {"id": 27, "seek": 11300, "start": 129.8, "end": 131.88, "text": " from Kubernetes.", "tokens": [490, 23145, 13], "temperature": 0.0, "avg_logprob": -0.2367223103841146, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.895760452607647e-05}, {"id": 28, "seek": 11300, "start": 131.88, "end": 138.68, "text": " So an example is that you have operation staff that must block the nodes to stop new workloads", "tokens": [407, 364, 1365, 307, 300, 291, 362, 6916, 3525, 300, 1633, 3461, 264, 13891, 281, 1590, 777, 32452], "temperature": 0.0, "avg_logprob": -0.2367223103841146, "compression_ratio": 1.5398230088495575, "no_speech_prob": 6.895760452607647e-05}, {"id": 29, "seek": 13868, "start": 138.68, "end": 143.88, "text": " from arriving in order to upgrade the OS without interfering with the Kubernetes.", "tokens": [490, 22436, 294, 1668, 281, 11484, 264, 12731, 1553, 48721, 365, 264, 23145, 13], "temperature": 0.0, "avg_logprob": -0.1505559662641105, "compression_ratio": 1.5, "no_speech_prob": 0.00014990819909144193}, {"id": 30, "seek": 13868, "start": 143.88, "end": 150.0, "text": " And after everything is clear and everything is updated, you can unblock the node again.", "tokens": [400, 934, 1203, 307, 1850, 293, 1203, 307, 10588, 11, 291, 393, 517, 28830, 264, 9984, 797, 13], "temperature": 0.0, "avg_logprob": -0.1505559662641105, "compression_ratio": 1.5, "no_speech_prob": 0.00014990819909144193}, {"id": 31, "seek": 13868, "start": 150.0, "end": 155.04000000000002, "text": " So this makes it complicated and expensive.", "tokens": [407, 341, 1669, 309, 6179, 293, 5124, 13], "temperature": 0.0, "avg_logprob": -0.1505559662641105, "compression_ratio": 1.5, "no_speech_prob": 0.00014990819909144193}, {"id": 32, "seek": 13868, "start": 155.04000000000002, "end": 159.92000000000002, "text": " So another issue is the OS version management.", "tokens": [407, 1071, 2734, 307, 264, 12731, 3037, 4592, 13], "temperature": 0.0, "avg_logprob": -0.1505559662641105, "compression_ratio": 1.5, "no_speech_prob": 0.00014990819909144193}, {"id": 33, "seek": 15992, "start": 159.92, "end": 169.56, "text": " So if you have a standard package manager and you can add, remove, modify packages independently", "tokens": [407, 498, 291, 362, 257, 3832, 7372, 6598, 293, 291, 393, 909, 11, 4159, 11, 16927, 17401, 21761], "temperature": 0.0, "avg_logprob": -0.18508644593067658, "compression_ratio": 1.7512953367875648, "no_speech_prob": 8.325365342898294e-05}, {"id": 34, "seek": 15992, "start": 169.56, "end": 173.64, "text": " on the OS, at the beginning you have an image which is clean, but then you start differing", "tokens": [322, 264, 12731, 11, 412, 264, 2863, 291, 362, 364, 3256, 597, 307, 2541, 11, 457, 550, 291, 722, 743, 278], "temperature": 0.0, "avg_logprob": -0.18508644593067658, "compression_ratio": 1.7512953367875648, "no_speech_prob": 8.325365342898294e-05}, {"id": 35, "seek": 15992, "start": 173.64, "end": 176.23999999999998, "text": " from your different instances.", "tokens": [490, 428, 819, 14519, 13], "temperature": 0.0, "avg_logprob": -0.18508644593067658, "compression_ratio": 1.7512953367875648, "no_speech_prob": 8.325365342898294e-05}, {"id": 36, "seek": 15992, "start": 176.23999999999998, "end": 180.11999999999998, "text": " So you have like what they call OS version splitting.", "tokens": [407, 291, 362, 411, 437, 436, 818, 12731, 3037, 30348, 13], "temperature": 0.0, "avg_logprob": -0.18508644593067658, "compression_ratio": 1.7512953367875648, "no_speech_prob": 8.325365342898294e-05}, {"id": 37, "seek": 15992, "start": 180.11999999999998, "end": 184.44, "text": " So you will have different packages installed on different nodes.", "tokens": [407, 291, 486, 362, 819, 17401, 8899, 322, 819, 13891, 13], "temperature": 0.0, "avg_logprob": -0.18508644593067658, "compression_ratio": 1.7512953367875648, "no_speech_prob": 8.325365342898294e-05}, {"id": 38, "seek": 18444, "start": 184.44, "end": 190.96, "text": " The version of these packages can also differ, security updates and all that stuff.", "tokens": [440, 3037, 295, 613, 17401, 393, 611, 743, 11, 3825, 9205, 293, 439, 300, 1507, 13], "temperature": 0.0, "avg_logprob": -0.14439729897372694, "compression_ratio": 1.6298076923076923, "no_speech_prob": 3.956405271310359e-05}, {"id": 39, "seek": 18444, "start": 190.96, "end": 194.12, "text": " So you have this divergence that appear over time.", "tokens": [407, 291, 362, 341, 47387, 300, 4204, 670, 565, 13], "temperature": 0.0, "avg_logprob": -0.14439729897372694, "compression_ratio": 1.6298076923076923, "no_speech_prob": 3.956405271310359e-05}, {"id": 40, "seek": 18444, "start": 194.12, "end": 200.32, "text": " So if you want some integrity and consistency that you want to ensure for your OS nodes,", "tokens": [407, 498, 291, 528, 512, 16000, 293, 14416, 300, 291, 528, 281, 5586, 337, 428, 12731, 13891, 11], "temperature": 0.0, "avg_logprob": -0.14439729897372694, "compression_ratio": 1.6298076923076923, "no_speech_prob": 3.956405271310359e-05}, {"id": 41, "seek": 18444, "start": 200.32, "end": 205.64, "text": " this can harm this constraint.", "tokens": [341, 393, 6491, 341, 25534, 13], "temperature": 0.0, "avg_logprob": -0.14439729897372694, "compression_ratio": 1.6298076923076923, "no_speech_prob": 3.956405271310359e-05}, {"id": 42, "seek": 18444, "start": 205.64, "end": 212.36, "text": " And yes, so if you want also to update to a major version, it's also more difficult.", "tokens": [400, 2086, 11, 370, 498, 291, 528, 611, 281, 5623, 281, 257, 2563, 3037, 11, 309, 311, 611, 544, 2252, 13], "temperature": 0.0, "avg_logprob": -0.14439729897372694, "compression_ratio": 1.6298076923076923, "no_speech_prob": 3.956405271310359e-05}, {"id": 43, "seek": 21236, "start": 212.36, "end": 216.32000000000002, "text": " So other people have worked on this problem.", "tokens": [407, 661, 561, 362, 2732, 322, 341, 1154, 13], "temperature": 0.0, "avg_logprob": -0.1722845533000889, "compression_ratio": 1.558659217877095, "no_speech_prob": 0.00013037190365139395}, {"id": 44, "seek": 21236, "start": 216.32000000000002, "end": 227.68, "text": " So rebuilding the operating system is an approach that has been taken to solve these problems.", "tokens": [407, 36717, 264, 7447, 1185, 307, 364, 3109, 300, 575, 668, 2726, 281, 5039, 613, 2740, 13], "temperature": 0.0, "avg_logprob": -0.1722845533000889, "compression_ratio": 1.558659217877095, "no_speech_prob": 0.00013037190365139395}, {"id": 45, "seek": 21236, "start": 227.68, "end": 232.88000000000002, "text": " So previously you have many technology packages that are part of the OS that are moving to", "tokens": [407, 8046, 291, 362, 867, 2899, 17401, 300, 366, 644, 295, 264, 12731, 300, 366, 2684, 281], "temperature": 0.0, "avg_logprob": -0.1722845533000889, "compression_ratio": 1.558659217877095, "no_speech_prob": 0.00013037190365139395}, {"id": 46, "seek": 21236, "start": 232.88000000000002, "end": 234.08, "text": " containers.", "tokens": [17089, 13], "temperature": 0.0, "avg_logprob": -0.1722845533000889, "compression_ratio": 1.558659217877095, "no_speech_prob": 0.00013037190365139395}, {"id": 47, "seek": 21236, "start": 234.08, "end": 238.44000000000003, "text": " So the old guest OS is less reliant.", "tokens": [407, 264, 1331, 8341, 12731, 307, 1570, 1039, 5798, 13], "temperature": 0.0, "avg_logprob": -0.1722845533000889, "compression_ratio": 1.558659217877095, "no_speech_prob": 0.00013037190365139395}, {"id": 48, "seek": 23844, "start": 238.44, "end": 243.0, "text": " We rely less on the guest OS so it can be replaced by a lightweight operating system", "tokens": [492, 10687, 1570, 322, 264, 8341, 12731, 370, 309, 393, 312, 10772, 538, 257, 22052, 7447, 1185], "temperature": 0.0, "avg_logprob": -0.2040050707365337, "compression_ratio": 1.7455357142857142, "no_speech_prob": 4.892630749964155e-05}, {"id": 49, "seek": 23844, "start": 243.0, "end": 246.04, "text": " with less services that are on and so on.", "tokens": [365, 1570, 3328, 300, 366, 322, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.2040050707365337, "compression_ratio": 1.7455357142857142, "no_speech_prob": 4.892630749964155e-05}, {"id": 50, "seek": 23844, "start": 246.04, "end": 253.04, "text": " So container OS is a lightweight operating system designed to run containers.", "tokens": [407, 10129, 12731, 307, 257, 22052, 7447, 1185, 4761, 281, 1190, 17089, 13], "temperature": 0.0, "avg_logprob": -0.2040050707365337, "compression_ratio": 1.7455357142857142, "no_speech_prob": 4.892630749964155e-05}, {"id": 51, "seek": 23844, "start": 253.04, "end": 259.08, "text": " And so like on the figure on the right, there is an OS OS and it's not the OS running inside", "tokens": [400, 370, 411, 322, 264, 2573, 322, 264, 558, 11, 456, 307, 364, 12731, 12731, 293, 309, 311, 406, 264, 12731, 2614, 1854], "temperature": 0.0, "avg_logprob": -0.2040050707365337, "compression_ratio": 1.7455357142857142, "no_speech_prob": 4.892630749964155e-05}, {"id": 52, "seek": 23844, "start": 259.08, "end": 260.24, "text": " the container.", "tokens": [264, 10129, 13], "temperature": 0.0, "avg_logprob": -0.2040050707365337, "compression_ratio": 1.7455357142857142, "no_speech_prob": 4.892630749964155e-05}, {"id": 53, "seek": 23844, "start": 260.24, "end": 266.64, "text": " So you have three important aspects, minimalism, usability and atomic updates.", "tokens": [407, 291, 362, 1045, 1021, 7270, 11, 13206, 1434, 11, 46878, 293, 22275, 9205, 13], "temperature": 0.0, "avg_logprob": -0.2040050707365337, "compression_ratio": 1.7455357142857142, "no_speech_prob": 4.892630749964155e-05}, {"id": 54, "seek": 26664, "start": 266.64, "end": 276.84, "text": " It means that you will only include what you really need as components in the host OS.", "tokens": [467, 1355, 300, 291, 486, 787, 4090, 437, 291, 534, 643, 382, 6677, 294, 264, 3975, 12731, 13], "temperature": 0.0, "avg_logprob": -0.22450444668154174, "compression_ratio": 1.721951219512195, "no_speech_prob": 5.18109773111064e-05}, {"id": 55, "seek": 26664, "start": 276.84, "end": 283.28, "text": " So the container OS requires a Linux kernel, container engines like Docker, container D,", "tokens": [407, 264, 10129, 12731, 7029, 257, 18734, 28256, 11, 10129, 12982, 411, 33772, 11, 10129, 413, 11], "temperature": 0.0, "avg_logprob": -0.22450444668154174, "compression_ratio": 1.721951219512195, "no_speech_prob": 5.18109773111064e-05}, {"id": 56, "seek": 26664, "start": 283.28, "end": 287.8, "text": " and security mechanisms such as SE Linux to ensure the security.", "tokens": [293, 3825, 15902, 1270, 382, 10269, 18734, 281, 5586, 264, 3825, 13], "temperature": 0.0, "avg_logprob": -0.22450444668154174, "compression_ratio": 1.721951219512195, "no_speech_prob": 5.18109773111064e-05}, {"id": 57, "seek": 26664, "start": 287.8, "end": 292.84, "text": " And other applications that are running containers are running containers because you don't need", "tokens": [400, 661, 5821, 300, 366, 2614, 17089, 366, 2614, 17089, 570, 291, 500, 380, 643], "temperature": 0.0, "avg_logprob": -0.22450444668154174, "compression_ratio": 1.721951219512195, "no_speech_prob": 5.18109773111064e-05}, {"id": 58, "seek": 26664, "start": 292.84, "end": 295.88, "text": " it in the host.", "tokens": [309, 294, 264, 3975, 13], "temperature": 0.0, "avg_logprob": -0.22450444668154174, "compression_ratio": 1.721951219512195, "no_speech_prob": 5.18109773111064e-05}, {"id": 59, "seek": 29588, "start": 295.88, "end": 301.04, "text": " And this can also reduce the attack surface because you have less in the host OS.", "tokens": [400, 341, 393, 611, 5407, 264, 2690, 3753, 570, 291, 362, 1570, 294, 264, 3975, 12731, 13], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 60, "seek": 29588, "start": 301.04, "end": 306.28, "text": " Emutability is that you use a read-only file system that can be configured at the start", "tokens": [3968, 325, 2310, 307, 300, 291, 764, 257, 1401, 12, 25202, 3991, 1185, 300, 393, 312, 30538, 412, 264, 722], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 61, "seek": 29588, "start": 306.28, "end": 309.44, "text": " of the deployment and also reduce the risk.", "tokens": [295, 264, 19317, 293, 611, 5407, 264, 3148, 13], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 62, "seek": 29588, "start": 309.44, "end": 314.36, "text": " And the atomic update is that you do the upgrade for the entire OS and not individually for", "tokens": [400, 264, 22275, 5623, 307, 300, 291, 360, 264, 11484, 337, 264, 2302, 12731, 293, 406, 16652, 337], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 63, "seek": 29588, "start": 314.36, "end": 316.64, "text": " packages.", "tokens": [17401, 13], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 64, "seek": 29588, "start": 316.64, "end": 322.71999999999997, "text": " So the core OS was started in 2013 and was the first widely used container operating", "tokens": [407, 264, 4965, 12731, 390, 1409, 294, 9012, 293, 390, 264, 700, 13371, 1143, 10129, 7447], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 65, "seek": 29588, "start": 322.71999999999997, "end": 323.71999999999997, "text": " system.", "tokens": [1185, 13], "temperature": 0.0, "avg_logprob": -0.1656966972351074, "compression_ratio": 1.6518218623481782, "no_speech_prob": 2.284713991684839e-05}, {"id": 66, "seek": 32372, "start": 323.72, "end": 335.6, "text": " You also have a system like AWS bottle rocket, flat car, and container optimized OS.", "tokens": [509, 611, 362, 257, 1185, 411, 17650, 7817, 13012, 11, 4962, 1032, 11, 293, 10129, 26941, 12731, 13], "temperature": 0.0, "avg_logprob": -0.28071380943380375, "compression_ratio": 1.565217391304348, "no_speech_prob": 6.37775010545738e-05}, {"id": 67, "seek": 32372, "start": 335.6, "end": 340.8, "text": " So QBOS, it's a container operating system built on OpenOiler, which is a distribution", "tokens": [407, 1249, 33, 4367, 11, 309, 311, 257, 10129, 7447, 1185, 3094, 322, 7238, 46, 5441, 11, 597, 307, 257, 7316], "temperature": 0.0, "avg_logprob": -0.28071380943380375, "compression_ratio": 1.565217391304348, "no_speech_prob": 6.37775010545738e-05}, {"id": 68, "seek": 32372, "start": 340.8, "end": 342.72, "text": " maintained by Huawei.", "tokens": [17578, 538, 28542, 13], "temperature": 0.0, "avg_logprob": -0.28071380943380375, "compression_ratio": 1.565217391304348, "no_speech_prob": 6.37775010545738e-05}, {"id": 69, "seek": 32372, "start": 342.72, "end": 347.40000000000003, "text": " So QBOS main design concept is to use Kubernetes to manage the operating systems.", "tokens": [407, 1249, 33, 4367, 2135, 1715, 3410, 307, 281, 764, 23145, 281, 3067, 264, 7447, 3652, 13], "temperature": 0.0, "avg_logprob": -0.28071380943380375, "compression_ratio": 1.565217391304348, "no_speech_prob": 6.37775010545738e-05}, {"id": 70, "seek": 32372, "start": 347.40000000000003, "end": 352.68, "text": " Once you have QBOS that has been installed on a cluster, the user only knew the Qube", "tokens": [3443, 291, 362, 1249, 33, 4367, 300, 575, 668, 8899, 322, 257, 13630, 11, 264, 4195, 787, 2586, 264, 1249, 1977], "temperature": 0.0, "avg_logprob": -0.28071380943380375, "compression_ratio": 1.565217391304348, "no_speech_prob": 6.37775010545738e-05}, {"id": 71, "seek": 35268, "start": 352.68, "end": 355.52, "text": " control command and YAML file on the master node.", "tokens": [1969, 5622, 293, 398, 2865, 43, 3991, 322, 264, 4505, 9984, 13], "temperature": 0.0, "avg_logprob": -0.22459835052490235, "compression_ratio": 1.7206477732793521, "no_speech_prob": 6.67534550302662e-05}, {"id": 72, "seek": 35268, "start": 355.52, "end": 360.48, "text": " The OS of the cluster worker node can be managed.", "tokens": [440, 12731, 295, 264, 13630, 11346, 9984, 393, 312, 6453, 13], "temperature": 0.0, "avg_logprob": -0.22459835052490235, "compression_ratio": 1.7206477732793521, "no_speech_prob": 6.67534550302662e-05}, {"id": 73, "seek": 35268, "start": 360.48, "end": 366.84000000000003, "text": " And this OS on QBOS is connected to the cluster as a Kubernetes component, putting it in the", "tokens": [400, 341, 12731, 322, 1249, 33, 4367, 307, 4582, 281, 264, 13630, 382, 257, 23145, 6542, 11, 3372, 309, 294, 264], "temperature": 0.0, "avg_logprob": -0.22459835052490235, "compression_ratio": 1.7206477732793521, "no_speech_prob": 6.67534550302662e-05}, {"id": 74, "seek": 35268, "start": 366.84000000000003, "end": 369.96000000000004, "text": " same position as the other resources in the clusters.", "tokens": [912, 2535, 382, 264, 661, 3593, 294, 264, 23313, 13], "temperature": 0.0, "avg_logprob": -0.22459835052490235, "compression_ratio": 1.7206477732793521, "no_speech_prob": 6.67534550302662e-05}, {"id": 75, "seek": 35268, "start": 369.96000000000004, "end": 376.08, "text": " And containers and operating system can just be matched in a unified way through Kubernetes.", "tokens": [400, 17089, 293, 7447, 1185, 393, 445, 312, 21447, 294, 257, 26787, 636, 807, 23145, 13], "temperature": 0.0, "avg_logprob": -0.22459835052490235, "compression_ratio": 1.7206477732793521, "no_speech_prob": 6.67534550302662e-05}, {"id": 76, "seek": 35268, "start": 376.08, "end": 381.44, "text": " So OpenOiler based reconstruction is used so that the operating system can be updated", "tokens": [407, 7238, 46, 5441, 2361, 31565, 307, 1143, 370, 300, 264, 7447, 1185, 393, 312, 10588], "temperature": 0.0, "avg_logprob": -0.22459835052490235, "compression_ratio": 1.7206477732793521, "no_speech_prob": 6.67534550302662e-05}, {"id": 77, "seek": 38144, "start": 381.44, "end": 386.76, "text": " optimally, like to avoid the problems I introduced before.", "tokens": [5028, 379, 11, 411, 281, 5042, 264, 2740, 286, 7268, 949, 13], "temperature": 0.0, "avg_logprob": -0.1510811487833659, "compression_ratio": 1.4271844660194175, "no_speech_prob": 3.930407910957001e-05}, {"id": 78, "seek": 38144, "start": 386.76, "end": 392.36, "text": " So now we are going to go a little bit in more depth about QBOS.", "tokens": [407, 586, 321, 366, 516, 281, 352, 257, 707, 857, 294, 544, 7161, 466, 1249, 33, 4367, 13], "temperature": 0.0, "avg_logprob": -0.1510811487833659, "compression_ratio": 1.4271844660194175, "no_speech_prob": 3.930407910957001e-05}, {"id": 79, "seek": 38144, "start": 392.36, "end": 399.88, "text": " So the first feature is the ability to manage the OS through directly Kubernetes.", "tokens": [407, 264, 700, 4111, 307, 264, 3485, 281, 3067, 264, 12731, 807, 3838, 23145, 13], "temperature": 0.0, "avg_logprob": -0.1510811487833659, "compression_ratio": 1.4271844660194175, "no_speech_prob": 3.930407910957001e-05}, {"id": 80, "seek": 38144, "start": 399.88, "end": 409.15999999999997, "text": " So we use API extension, custom resource, CRD, to design and registering in the cluster.", "tokens": [407, 321, 764, 9362, 10320, 11, 2375, 7684, 11, 14123, 35, 11, 281, 1715, 293, 47329, 294, 264, 13630, 13], "temperature": 0.0, "avg_logprob": -0.1510811487833659, "compression_ratio": 1.4271844660194175, "no_speech_prob": 3.930407910957001e-05}, {"id": 81, "seek": 40916, "start": 409.16, "end": 414.20000000000005, "text": " We use Kubernetes operating framework to create customized controller for the OS to monitor", "tokens": [492, 764, 23145, 7447, 8388, 281, 1884, 30581, 10561, 337, 264, 12731, 281, 6002], "temperature": 0.0, "avg_logprob": -0.26531691629378523, "compression_ratio": 1.6503067484662577, "no_speech_prob": 0.00013938698975834996}, {"id": 82, "seek": 40916, "start": 414.20000000000005, "end": 418.12, "text": " and manage it.", "tokens": [293, 3067, 309, 13], "temperature": 0.0, "avg_logprob": -0.26531691629378523, "compression_ratio": 1.6503067484662577, "no_speech_prob": 0.00013938698975834996}, {"id": 83, "seek": 40916, "start": 418.12, "end": 428.52000000000004, "text": " Then this Kubernetes operating framework, we use it to create customers.", "tokens": [1396, 341, 23145, 7447, 8388, 11, 321, 764, 309, 281, 1884, 4581, 13], "temperature": 0.0, "avg_logprob": -0.26531691629378523, "compression_ratio": 1.6503067484662577, "no_speech_prob": 0.00013938698975834996}, {"id": 84, "seek": 40916, "start": 428.52000000000004, "end": 434.84000000000003, "text": " So the user only need to modify this CR, enter the expected OS status to the cluster, and", "tokens": [407, 264, 4195, 787, 643, 281, 16927, 341, 14123, 11, 3242, 264, 5176, 12731, 6558, 281, 264, 13630, 11, 293], "temperature": 0.0, "avg_logprob": -0.26531691629378523, "compression_ratio": 1.6503067484662577, "no_speech_prob": 0.00013938698975834996}, {"id": 85, "seek": 43484, "start": 434.84, "end": 444.59999999999997, "text": " the QBOS and Kubernetes handle this, and you only have to manage it in the control plane.", "tokens": [264, 1249, 33, 4367, 293, 23145, 4813, 341, 11, 293, 291, 787, 362, 281, 3067, 309, 294, 264, 1969, 5720, 13], "temperature": 0.0, "avg_logprob": -0.21748846995679638, "compression_ratio": 1.572139303482587, "no_speech_prob": 7.511203875765204e-05}, {"id": 86, "seek": 43484, "start": 444.59999999999997, "end": 448.56, "text": " So the next one is atomicity management of the OS.", "tokens": [407, 264, 958, 472, 307, 22275, 507, 4592, 295, 264, 12731, 13], "temperature": 0.0, "avg_logprob": -0.21748846995679638, "compression_ratio": 1.572139303482587, "no_speech_prob": 7.511203875765204e-05}, {"id": 87, "seek": 43484, "start": 448.56, "end": 451.67999999999995, "text": " QBOS upgrade is an atomic dual zone upgrade.", "tokens": [1249, 33, 4367, 11484, 307, 364, 22275, 11848, 6668, 11484, 13], "temperature": 0.0, "avg_logprob": -0.21748846995679638, "compression_ratio": 1.572139303482587, "no_speech_prob": 7.511203875765204e-05}, {"id": 88, "seek": 43484, "start": 451.67999999999995, "end": 455.15999999999997, "text": " It does not include packet manager.", "tokens": [467, 775, 406, 4090, 20300, 6598, 13], "temperature": 0.0, "avg_logprob": -0.21748846995679638, "compression_ratio": 1.572139303482587, "no_speech_prob": 7.511203875765204e-05}, {"id": 89, "seek": 43484, "start": 455.15999999999997, "end": 460.23999999999995, "text": " The change of each software package corresponds to the change of the operating system version.", "tokens": [440, 1319, 295, 1184, 4722, 7372, 23249, 281, 264, 1319, 295, 264, 7447, 1185, 3037, 13], "temperature": 0.0, "avg_logprob": -0.21748846995679638, "compression_ratio": 1.572139303482587, "no_speech_prob": 7.511203875765204e-05}, {"id": 90, "seek": 46024, "start": 460.24, "end": 465.68, "text": " Then the OS version corresponds to a specific OS image or RPM package combination.", "tokens": [1396, 264, 12731, 3037, 23249, 281, 257, 2685, 12731, 3256, 420, 37389, 7372, 6562, 13], "temperature": 0.0, "avg_logprob": -0.18752135108498966, "compression_ratio": 1.5702479338842976, "no_speech_prob": 0.00010927029507001862}, {"id": 91, "seek": 46024, "start": 465.68, "end": 471.88, "text": " Each software update as shown in this diagram is an OS version update.", "tokens": [6947, 4722, 5623, 382, 4898, 294, 341, 10686, 307, 364, 12731, 3037, 5623, 13], "temperature": 0.0, "avg_logprob": -0.18752135108498966, "compression_ratio": 1.5702479338842976, "no_speech_prob": 0.00010927029507001862}, {"id": 92, "seek": 46024, "start": 471.88, "end": 477.0, "text": " So you avoid the version splitting problems, and the cluster nodes remain consistent at", "tokens": [407, 291, 5042, 264, 3037, 30348, 2740, 11, 293, 264, 13630, 13891, 6222, 8398, 412], "temperature": 0.0, "avg_logprob": -0.18752135108498966, "compression_ratio": 1.5702479338842976, "no_speech_prob": 0.00010927029507001862}, {"id": 93, "seek": 46024, "start": 477.0, "end": 479.72, "text": " all times.", "tokens": [439, 1413, 13], "temperature": 0.0, "avg_logprob": -0.18752135108498966, "compression_ratio": 1.5702479338842976, "no_speech_prob": 0.00010927029507001862}, {"id": 94, "seek": 46024, "start": 479.72, "end": 486.2, "text": " So QBOS is lightweight with unnecessary components removed to reduce the attack surface and enable", "tokens": [407, 1249, 33, 4367, 307, 22052, 365, 19350, 6677, 7261, 281, 5407, 264, 2690, 3753, 293, 9528], "temperature": 0.0, "avg_logprob": -0.18752135108498966, "compression_ratio": 1.5702479338842976, "no_speech_prob": 0.00010927029507001862}, {"id": 95, "seek": 46024, "start": 486.2, "end": 490.0, "text": " faster start-up and upgrade.", "tokens": [4663, 722, 12, 1010, 293, 11484, 13], "temperature": 0.0, "avg_logprob": -0.18752135108498966, "compression_ratio": 1.5702479338842976, "no_speech_prob": 0.00010927029507001862}, {"id": 96, "seek": 49000, "start": 490.0, "end": 493.28, "text": " So this is a diagram of the QBOS overall architecture.", "tokens": [407, 341, 307, 257, 10686, 295, 264, 1249, 33, 4367, 4787, 9482, 13], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 97, "seek": 49000, "start": 493.28, "end": 494.96, "text": " So you have two main parts.", "tokens": [407, 291, 362, 732, 2135, 3166, 13], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 98, "seek": 49000, "start": 494.96, "end": 501.0, "text": " The first with three different components, OS operator, OS proxy, and OS agent.", "tokens": [440, 700, 365, 1045, 819, 6677, 11, 12731, 12973, 11, 12731, 29690, 11, 293, 12731, 9461, 13], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 99, "seek": 49000, "start": 501.0, "end": 506.32, "text": " In the red box above the diagram, which are used for Kubernetes cluster docking, complete", "tokens": [682, 264, 2182, 2424, 3673, 264, 10686, 11, 597, 366, 1143, 337, 23145, 13630, 20929, 278, 11, 3566], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 100, "seek": 49000, "start": 506.32, "end": 508.28, "text": " OS monitoring and management.", "tokens": [12731, 11028, 293, 4592, 13], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 101, "seek": 49000, "start": 508.28, "end": 512.44, "text": " And the second part is the QBOS image creation tool.", "tokens": [400, 264, 1150, 644, 307, 264, 1249, 33, 4367, 3256, 8016, 2290, 13], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 102, "seek": 49000, "start": 512.44, "end": 517.88, "text": " The user can use QBOS scripts to generate QBOS images from the open or lower repo source,", "tokens": [440, 4195, 393, 764, 1249, 33, 4367, 23294, 281, 8460, 1249, 33, 4367, 5267, 490, 264, 1269, 420, 3126, 49040, 4009, 11], "temperature": 0.0, "avg_logprob": -0.1968332239099451, "compression_ratio": 1.6159695817490494, "no_speech_prob": 0.00018099213775712997}, {"id": 103, "seek": 51788, "start": 517.88, "end": 524.04, "text": " which supports the generation of container image, virtual machine image, and so on.", "tokens": [597, 9346, 264, 5125, 295, 10129, 3256, 11, 6374, 3479, 3256, 11, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.17864556148134428, "compression_ratio": 1.7256637168141593, "no_speech_prob": 5.932791100349277e-05}, {"id": 104, "seek": 51788, "start": 524.04, "end": 529.72, "text": " So the three main components I mentioned, like OS operator, proxy, and agent, are critical", "tokens": [407, 264, 1045, 2135, 6677, 286, 2835, 11, 411, 12731, 12973, 11, 29690, 11, 293, 9461, 11, 366, 4924], "temperature": 0.0, "avg_logprob": -0.17864556148134428, "compression_ratio": 1.7256637168141593, "no_speech_prob": 5.932791100349277e-05}, {"id": 105, "seek": 51788, "start": 529.72, "end": 533.32, "text": " to the ability to manage cluster using Kubernetes.", "tokens": [281, 264, 3485, 281, 3067, 13630, 1228, 23145, 13], "temperature": 0.0, "avg_logprob": -0.17864556148134428, "compression_ratio": 1.7256637168141593, "no_speech_prob": 5.932791100349277e-05}, {"id": 106, "seek": 51788, "start": 533.32, "end": 538.04, "text": " The OS operator and proxy are the operators we mentioned earlier.", "tokens": [440, 12731, 12973, 293, 29690, 366, 264, 19077, 321, 2835, 3071, 13], "temperature": 0.0, "avg_logprob": -0.17864556148134428, "compression_ratio": 1.7256637168141593, "no_speech_prob": 5.932791100349277e-05}, {"id": 107, "seek": 51788, "start": 538.04, "end": 544.12, "text": " The OS operator will be deployed in the cluster as deployment and daemon set, and will communicate", "tokens": [440, 12731, 12973, 486, 312, 17826, 294, 264, 13630, 382, 19317, 293, 1120, 36228, 992, 11, 293, 486, 7890], "temperature": 0.0, "avg_logprob": -0.17864556148134428, "compression_ratio": 1.7256637168141593, "no_speech_prob": 5.932791100349277e-05}, {"id": 108, "seek": 54412, "start": 544.12, "end": 548.04, "text": " with Kubernetes to issue upgrade instructions.", "tokens": [365, 23145, 281, 2734, 11484, 9415, 13], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 109, "seek": 54412, "start": 548.04, "end": 552.24, "text": " The operator is a global OS manager that monitors all cluster nodes.", "tokens": [440, 12973, 307, 257, 4338, 12731, 6598, 300, 26518, 439, 13630, 13891, 13], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 110, "seek": 54412, "start": 552.24, "end": 556.5600000000001, "text": " When a new version of the OS information is configured by the user, it determines whether", "tokens": [1133, 257, 777, 3037, 295, 264, 12731, 1589, 307, 30538, 538, 264, 4195, 11, 309, 24799, 1968], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 111, "seek": 54412, "start": 556.5600000000001, "end": 560.0, "text": " to upgrade and send a great task to each node.", "tokens": [281, 11484, 293, 2845, 257, 869, 5633, 281, 1184, 9984, 13], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 112, "seek": 54412, "start": 560.0, "end": 565.04, "text": " The proxy is a single node operating system manager that monitors the current node information.", "tokens": [440, 29690, 307, 257, 2167, 9984, 7447, 1185, 6598, 300, 26518, 264, 2190, 9984, 1589, 13], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 113, "seek": 54412, "start": 565.04, "end": 569.16, "text": " When the operator sends a great notification, it will lock the node to expel the pods and", "tokens": [1133, 264, 12973, 14790, 257, 869, 11554, 11, 309, 486, 4017, 264, 9984, 281, 1278, 338, 264, 31925, 293], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 114, "seek": 54412, "start": 569.16, "end": 572.44, "text": " forward the OS information to the agent.", "tokens": [2128, 264, 12731, 1589, 281, 264, 9461, 13], "temperature": 0.0, "avg_logprob": -0.12701052371586594, "compression_ratio": 1.8352490421455938, "no_speech_prob": 3.796223609242588e-05}, {"id": 115, "seek": 57244, "start": 572.44, "end": 577.0400000000001, "text": " The agent is not included in the Kubernetes cluster.", "tokens": [440, 9461, 307, 406, 5556, 294, 264, 23145, 13630, 13], "temperature": 0.0, "avg_logprob": -0.1878357325514702, "compression_ratio": 1.5533980582524272, "no_speech_prob": 4.2651772673707455e-05}, {"id": 116, "seek": 57244, "start": 577.0400000000001, "end": 584.8000000000001, "text": " The real executor of the OS management communicates with the proxy via Unix domain sockets, receive", "tokens": [440, 957, 7568, 284, 295, 264, 12731, 4592, 3363, 1024, 365, 264, 29690, 5766, 1156, 970, 9274, 370, 11984, 11, 4774], "temperature": 0.0, "avg_logprob": -0.1878357325514702, "compression_ratio": 1.5533980582524272, "no_speech_prob": 4.2651772673707455e-05}, {"id": 117, "seek": 57244, "start": 584.8000000000001, "end": 591.32, "text": " a message from the proxy, and perform the upgrade rollback and configuration operations.", "tokens": [257, 3636, 490, 264, 29690, 11, 293, 2042, 264, 11484, 3373, 3207, 293, 11694, 7705, 13], "temperature": 0.0, "avg_logprob": -0.1878357325514702, "compression_ratio": 1.5533980582524272, "no_speech_prob": 4.2651772673707455e-05}, {"id": 118, "seek": 57244, "start": 591.32, "end": 599.6, "text": " So the upgrade process, we will use the work process as an explaining example.", "tokens": [407, 264, 11484, 1399, 11, 321, 486, 764, 264, 589, 1399, 382, 364, 13468, 1365, 13], "temperature": 0.0, "avg_logprob": -0.1878357325514702, "compression_ratio": 1.5533980582524272, "no_speech_prob": 4.2651772673707455e-05}, {"id": 119, "seek": 59960, "start": 599.6, "end": 603.0400000000001, "text": " So we consider how the different components communicate and interact.", "tokens": [407, 321, 1949, 577, 264, 819, 6677, 7890, 293, 4648, 13], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 120, "seek": 59960, "start": 603.0400000000001, "end": 607.9200000000001, "text": " First the user configures the OS information to be upgraded via Qt control and enable files,", "tokens": [2386, 264, 4195, 6662, 1303, 264, 12731, 1589, 281, 312, 24133, 5766, 1249, 83, 1969, 293, 9528, 7098, 11], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 121, "seek": 59960, "start": 607.9200000000001, "end": 613.0, "text": " such as OS version, address of the OS image, number of nodes to be upgraded concurrently,", "tokens": [1270, 382, 12731, 3037, 11, 2985, 295, 264, 12731, 3256, 11, 1230, 295, 13891, 281, 312, 24133, 37702, 356, 11], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 122, "seek": 59960, "start": 613.0, "end": 614.28, "text": " and so on.", "tokens": [293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 123, "seek": 59960, "start": 614.28, "end": 620.0400000000001, "text": " Then when the OS instance changes, the operator begins the upgrade process, labels the nodes", "tokens": [1396, 562, 264, 12731, 5197, 2962, 11, 264, 12973, 7338, 264, 11484, 1399, 11, 16949, 264, 13891], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 124, "seek": 59960, "start": 620.0400000000001, "end": 623.88, "text": " that must be upgraded, and limits the number of nodes to be upgraded each time to the number", "tokens": [300, 1633, 312, 24133, 11, 293, 10406, 264, 1230, 295, 13891, 281, 312, 24133, 1184, 565, 281, 264, 1230], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 125, "seek": 59960, "start": 623.88, "end": 625.88, "text": " specified by the user.", "tokens": [22206, 538, 264, 4195, 13], "temperature": 0.0, "avg_logprob": -0.20866263449729025, "compression_ratio": 1.8223938223938223, "no_speech_prob": 0.00010352936806157231}, {"id": 126, "seek": 62588, "start": 625.88, "end": 630.96, "text": " Then the proxy checks to see if the current node is marked as an upgrade node, locks the", "tokens": [1396, 264, 29690, 13834, 281, 536, 498, 264, 2190, 9984, 307, 12658, 382, 364, 11484, 9984, 11, 20703, 264], "temperature": 0.0, "avg_logprob": -0.1388716461634872, "compression_ratio": 1.8099173553719008, "no_speech_prob": 0.00010143614053959027}, {"id": 127, "seek": 62588, "start": 630.96, "end": 637.08, "text": " nodes to expel the pods, and retrieves the OS information from the cluster before sending", "tokens": [13891, 281, 1278, 338, 264, 31925, 11, 293, 19817, 977, 264, 12731, 1589, 490, 264, 13630, 949, 7750], "temperature": 0.0, "avg_logprob": -0.1388716461634872, "compression_ratio": 1.8099173553719008, "no_speech_prob": 0.00010143614053959027}, {"id": 128, "seek": 62588, "start": 637.08, "end": 639.04, "text": " it to the OS agent.", "tokens": [309, 281, 264, 12731, 9461, 13], "temperature": 0.0, "avg_logprob": -0.1388716461634872, "compression_ratio": 1.8099173553719008, "no_speech_prob": 0.00010143614053959027}, {"id": 129, "seek": 62588, "start": 639.04, "end": 643.48, "text": " After receiving the message, the agents will download the upgraded package from the address", "tokens": [2381, 10040, 264, 3636, 11, 264, 12554, 486, 5484, 264, 24133, 7372, 490, 264, 2985], "temperature": 0.0, "avg_logprob": -0.1388716461634872, "compression_ratio": 1.8099173553719008, "no_speech_prob": 0.00010143614053959027}, {"id": 130, "seek": 62588, "start": 643.48, "end": 647.76, "text": " specified by the user, complete the upgrade, and restart.", "tokens": [22206, 538, 264, 4195, 11, 3566, 264, 11484, 11, 293, 21022, 13], "temperature": 0.0, "avg_logprob": -0.1388716461634872, "compression_ratio": 1.8099173553719008, "no_speech_prob": 0.00010143614053959027}, {"id": 131, "seek": 62588, "start": 647.76, "end": 652.28, "text": " After restarting, the proxy will detect that the node OS version has reached the expected", "tokens": [2381, 21022, 278, 11, 264, 29690, 486, 5531, 300, 264, 9984, 12731, 3037, 575, 6488, 264, 5176], "temperature": 0.0, "avg_logprob": -0.1388716461634872, "compression_ratio": 1.8099173553719008, "no_speech_prob": 0.00010143614053959027}, {"id": 132, "seek": 65228, "start": 652.28, "end": 656.0799999999999, "text": " version and will unlock the node and remove the upgrade level of the node.", "tokens": [3037, 293, 486, 11634, 264, 9984, 293, 4159, 264, 11484, 1496, 295, 264, 9984, 13], "temperature": 0.0, "avg_logprob": -0.2791726772601788, "compression_ratio": 1.5956284153005464, "no_speech_prob": 8.399671060033143e-05}, {"id": 133, "seek": 65228, "start": 656.0799999999999, "end": 661.76, "text": " So this is the complete upgrade process.", "tokens": [407, 341, 307, 264, 3566, 11484, 1399, 13], "temperature": 0.0, "avg_logprob": -0.2791726772601788, "compression_ratio": 1.5956284153005464, "no_speech_prob": 8.399671060033143e-05}, {"id": 134, "seek": 65228, "start": 661.76, "end": 664.56, "text": " Then finally the file system.", "tokens": [1396, 2721, 264, 3991, 1185, 13], "temperature": 0.0, "avg_logprob": -0.2791726772601788, "compression_ratio": 1.5956284153005464, "no_speech_prob": 8.399671060033143e-05}, {"id": 135, "seek": 65228, "start": 664.56, "end": 670.04, "text": " So how do we design and upgrade the file system in QBOS?", "tokens": [407, 577, 360, 321, 1715, 293, 11484, 264, 3991, 1185, 294, 1249, 33, 4367, 30], "temperature": 0.0, "avg_logprob": -0.2791726772601788, "compression_ratio": 1.5956284153005464, "no_speech_prob": 8.399671060033143e-05}, {"id": 136, "seek": 65228, "start": 670.04, "end": 676.16, "text": " It adopts a dual-area upgrade, like mentioned earlier, to upgrade the OS, so you have two", "tokens": [467, 22486, 1373, 257, 11848, 12, 35425, 11484, 11, 411, 2835, 3071, 11, 281, 11484, 264, 12731, 11, 370, 291, 362, 732], "temperature": 0.0, "avg_logprob": -0.2791726772601788, "compression_ratio": 1.5956284153005464, "no_speech_prob": 8.399671060033143e-05}, {"id": 137, "seek": 67616, "start": 676.16, "end": 682.4399999999999, "text": " root partitions, the upgrade of partition A is to download the updated image for the partition", "tokens": [5593, 644, 2451, 11, 264, 11484, 295, 24808, 316, 307, 281, 5484, 264, 10588, 3256, 337, 264, 24808], "temperature": 0.0, "avg_logprob": -0.24466089248657227, "compression_ratio": 1.738197424892704, "no_speech_prob": 0.00011574089876376092}, {"id": 138, "seek": 67616, "start": 682.4399999999999, "end": 687.56, "text": " B, and then modify the default bootloader as the B partition after, and then you restart", "tokens": [363, 11, 293, 550, 16927, 264, 7576, 11450, 2907, 260, 382, 264, 363, 24808, 934, 11, 293, 550, 291, 21022], "temperature": 0.0, "avg_logprob": -0.24466089248657227, "compression_ratio": 1.738197424892704, "no_speech_prob": 0.00011574089876376092}, {"id": 139, "seek": 67616, "start": 687.56, "end": 692.28, "text": " from the B by default, and the opposite happens for the next upgrade.", "tokens": [490, 264, 363, 538, 7576, 11, 293, 264, 6182, 2314, 337, 264, 958, 11484, 13], "temperature": 0.0, "avg_logprob": -0.24466089248657227, "compression_ratio": 1.738197424892704, "no_speech_prob": 0.00011574089876376092}, {"id": 140, "seek": 67616, "start": 692.28, "end": 697.36, "text": " So it's a classical dual image thing.", "tokens": [407, 309, 311, 257, 13735, 11848, 3256, 551, 13], "temperature": 0.0, "avg_logprob": -0.24466089248657227, "compression_ratio": 1.738197424892704, "no_speech_prob": 0.00011574089876376092}, {"id": 141, "seek": 67616, "start": 697.36, "end": 703.36, "text": " The file system of QBOS is recently, which improved the security, but we also support", "tokens": [440, 3991, 1185, 295, 1249, 33, 4367, 307, 3938, 11, 597, 9689, 264, 3825, 11, 457, 321, 611, 1406], "temperature": 0.0, "avg_logprob": -0.24466089248657227, "compression_ratio": 1.738197424892704, "no_speech_prob": 0.00011574089876376092}, {"id": 142, "seek": 67616, "start": 703.36, "end": 706.04, "text": " persistent data partitions.", "tokens": [24315, 1412, 644, 2451, 13], "temperature": 0.0, "avg_logprob": -0.24466089248657227, "compression_ratio": 1.738197424892704, "no_speech_prob": 0.00011574089876376092}, {"id": 143, "seek": 70604, "start": 706.04, "end": 710.04, "text": " The union path, which is mounted as an overlay, and the files in the image other than the", "tokens": [440, 11671, 3100, 11, 597, 307, 19138, 382, 364, 31741, 11, 293, 264, 7098, 294, 264, 3256, 661, 813, 264], "temperature": 0.0, "avg_logprob": -0.1731855679402309, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0001861429918790236}, {"id": 144, "seek": 70604, "start": 710.04, "end": 713.12, "text": " user change can still be seen.", "tokens": [4195, 1319, 393, 920, 312, 1612, 13], "temperature": 0.0, "avg_logprob": -0.1731855679402309, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0001861429918790236}, {"id": 145, "seek": 70604, "start": 713.12, "end": 719.5999999999999, "text": " There is a writable path, which has a writable file layer to the image using the bind mounts.", "tokens": [821, 307, 257, 10912, 712, 3100, 11, 597, 575, 257, 10912, 712, 3991, 4583, 281, 264, 3256, 1228, 264, 14786, 40982, 13], "temperature": 0.0, "avg_logprob": -0.1731855679402309, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0001861429918790236}, {"id": 146, "seek": 70604, "start": 719.5999999999999, "end": 724.68, "text": " The files in the image are not displayed, only user data is stored, and there is also", "tokens": [440, 7098, 294, 264, 3256, 366, 406, 16372, 11, 787, 4195, 1412, 307, 12187, 11, 293, 456, 307, 611], "temperature": 0.0, "avg_logprob": -0.1731855679402309, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0001861429918790236}, {"id": 147, "seek": 70604, "start": 724.68, "end": 729.76, "text": " the boot partition, which contains the bootloader files.", "tokens": [264, 11450, 24808, 11, 597, 8306, 264, 11450, 2907, 260, 7098, 13], "temperature": 0.0, "avg_logprob": -0.1731855679402309, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0001861429918790236}, {"id": 148, "seek": 70604, "start": 729.76, "end": 735.12, "text": " So we determine the main concept of QBOS and design, and implemented a set of components", "tokens": [407, 321, 6997, 264, 2135, 3410, 295, 1249, 33, 4367, 293, 1715, 11, 293, 12270, 257, 992, 295, 6677], "temperature": 0.0, "avg_logprob": -0.1731855679402309, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0001861429918790236}, {"id": 149, "seek": 73512, "start": 735.12, "end": 740.32, "text": " to complete the OS management, and we intend to continue completing more functions based", "tokens": [281, 3566, 264, 12731, 4592, 11, 293, 321, 19759, 281, 2354, 19472, 544, 6828, 2361], "temperature": 0.0, "avg_logprob": -0.15709224189679646, "compression_ratio": 1.9790794979079498, "no_speech_prob": 0.00010269852646160871}, {"id": 150, "seek": 73512, "start": 740.32, "end": 742.44, "text": " on this process.", "tokens": [322, 341, 1399, 13], "temperature": 0.0, "avg_logprob": -0.15709224189679646, "compression_ratio": 1.9790794979079498, "no_speech_prob": 0.00010269852646160871}, {"id": 151, "seek": 73512, "start": 742.44, "end": 747.68, "text": " One thing is the ability to provide a configuration, like in the grid process, the configuration", "tokens": [1485, 551, 307, 264, 3485, 281, 2893, 257, 11694, 11, 411, 294, 264, 10748, 1399, 11, 264, 11694], "temperature": 0.0, "avg_logprob": -0.15709224189679646, "compression_ratio": 1.9790794979079498, "no_speech_prob": 0.00010269852646160871}, {"id": 152, "seek": 73512, "start": 747.68, "end": 752.52, "text": " is delivered to the node via the Kubernetes cluster on the cluster control plane to ensure", "tokens": [307, 10144, 281, 264, 9984, 5766, 264, 23145, 13630, 322, 264, 13630, 1969, 5720, 281, 5586], "temperature": 0.0, "avg_logprob": -0.15709224189679646, "compression_ratio": 1.9790794979079498, "no_speech_prob": 0.00010269852646160871}, {"id": 153, "seek": 73512, "start": 752.52, "end": 757.28, "text": " the consistency of the configurations of the nodes, and given that some of the configuration", "tokens": [264, 14416, 295, 264, 31493, 295, 264, 13891, 11, 293, 2212, 300, 512, 295, 264, 11694], "temperature": 0.0, "avg_logprob": -0.15709224189679646, "compression_ratio": 1.9790794979079498, "no_speech_prob": 0.00010269852646160871}, {"id": 154, "seek": 73512, "start": 757.28, "end": 762.4, "text": " must be complete before the nodes join the cluster, more configuration capabilities to", "tokens": [1633, 312, 3566, 949, 264, 13891, 3917, 264, 13630, 11, 544, 11694, 10862, 281], "temperature": 0.0, "avg_logprob": -0.15709224189679646, "compression_ratio": 1.9790794979079498, "no_speech_prob": 0.00010269852646160871}, {"id": 155, "seek": 76240, "start": 762.4, "end": 765.4399999999999, "text": " the QBOS image creation are planned.", "tokens": [264, 1249, 33, 4367, 3256, 8016, 366, 8589, 13], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 156, "seek": 76240, "start": 765.4399999999999, "end": 768.4399999999999, "text": " Then there is the improved upgrade capability.", "tokens": [1396, 456, 307, 264, 9689, 11484, 13759, 13], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 157, "seek": 76240, "start": 768.4399999999999, "end": 773.0, "text": " We have realized the function-based OS upgrade, and we will provide upgrade strategies that", "tokens": [492, 362, 5334, 264, 2445, 12, 6032, 12731, 11484, 11, 293, 321, 486, 2893, 11484, 9029, 300], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 158, "seek": 76240, "start": 773.0, "end": 779.0, "text": " user can customize, such as upgrading based on the cluster node label to provide more", "tokens": [4195, 393, 19734, 11, 1270, 382, 36249, 2361, 322, 264, 13630, 9984, 7645, 281, 2893, 544], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 159, "seek": 76240, "start": 779.0, "end": 780.4, "text": " upgrade solutions.", "tokens": [11484, 6547, 13], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 160, "seek": 76240, "start": 780.4, "end": 786.6, "text": " In addition to the rich functions, we intend to improve the usability of QBOS by displaying", "tokens": [682, 4500, 281, 264, 4593, 6828, 11, 321, 19759, 281, 3470, 264, 46878, 295, 1249, 33, 4367, 538, 36834], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 161, "seek": 76240, "start": 786.6, "end": 791.6, "text": " the upgrade of configuration process and improving the image creation tool so that user can", "tokens": [264, 11484, 295, 11694, 1399, 293, 11470, 264, 3256, 8016, 2290, 370, 300, 4195, 393], "temperature": 0.0, "avg_logprob": -0.21414277160051956, "compression_ratio": 1.7984496124031009, "no_speech_prob": 7.493855082429945e-05}, {"id": 162, "seek": 79160, "start": 791.6, "end": 793.6, "text": " more easily customize the image.", "tokens": [544, 3612, 19734, 264, 3256, 13], "temperature": 0.0, "avg_logprob": -0.45636849176316036, "compression_ratio": 1.2796610169491525, "no_speech_prob": 0.0007294333772733808}, {"id": 163, "seek": 79160, "start": 793.6, "end": 798.6, "text": " Okay, and that's it.", "tokens": [1033, 11, 293, 300, 311, 309, 13], "temperature": 0.0, "avg_logprob": -0.45636849176316036, "compression_ratio": 1.2796610169491525, "no_speech_prob": 0.0007294333772733808}, {"id": 164, "seek": 79160, "start": 798.6, "end": 807.76, "text": " Sorry again for the functions, but for the question, you can always shoot the colleague", "tokens": [4919, 797, 337, 264, 6828, 11, 457, 337, 264, 1168, 11, 291, 393, 1009, 3076, 264, 13532], "temperature": 0.0, "avg_logprob": -0.45636849176316036, "compression_ratio": 1.2796610169491525, "no_speech_prob": 0.0007294333772733808}, {"id": 165, "seek": 80776, "start": 807.76, "end": 825.76, "text": " in the middle.", "tokens": [50364, 294, 264, 2808, 13, 51264], "temperature": 0.0, "avg_logprob": -0.8486686434064593, "compression_ratio": 0.6363636363636364, "no_speech_prob": 0.0007228982867673039}], "language": "en"}