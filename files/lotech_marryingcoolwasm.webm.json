{"text": " Hi everyone, my name is Balazs Vargo and I'm working at Allotropia GMBH and this presentation I would like to talk about WebAssembly, M-scripten technology running the colabora online in WebAssembly and headless conversion stuff in WebAssembly as well. So let's get started with the colabora online in WebAssembly stuff. So it was a common project with the colabora, we were together with Tor and Mihail Stahl. The goal was to approach offline document editing. On this slide there is a sketch design for this. The goal was that when the connection is breaks and in a browser the application is activated and that contains the colabora online server functionality and when the connection is restored the document will be edited in the colabora online server again. I think Tor will talk about it a bit more. But to make it work first we had to build it in WebAssembly. For that we are using the M-scripten compiler toolchain. So let's talk about that. The M-scripten is a complete open source compiler toolchain to WebAssembly. Using M-scripten you can compile C and C++ code or any other languages that uses LLVM into WebAssembly and you can run it on the web or Node.js or any other runtimes. The M-scripten generates small and fast code and the default output format is a WebAssembly and highly optimisable executable format that runs almost as fast as the native code. A little bit about the M-scripten toolchain. The main tool is the M-scripten compiler frontend. This is a drop-in replacement for a standard compiler like QCC or CLANG. The EMCC uses KLANG and LLVM to compile to WebAssembly. EMCC also emits JavaScript that provides API support to the compiled code and the JavaScript can be executed by Node.js or from within HTML in a browser. There are more information there but you can read that about porting code to use M-scripten. Support for portable C and C++ code is fairly comprehensive and supported for the C standard library, the C++ standard library and the exception and etc. It's a very good and also the OpenGL supports. The multistrading is supported but depends on the shad array buffer which is still being standardized and implemented by browsers. Now let's see the porting how it worked in the case of Kolobora online. The building for Wasm with M-scripten is a bit immature and some projects needed patching to make it work. First, we need to build a LibreOffice core with M-scripten earlier. The best was to use the feature branch but now it's working with the upstream. Master without the Qt5 framework and then it needed to build the Kolobora online. This is the ZSTD libraries, the Poco library, it's required to patches to make it work. And then it's necessary to build the Kolobora online code and then linking or the binaries and executables together. Everything was executable, uses a lot of memory, without optimizations or with O1 flags. It should work anywhere but there are different kind of flags like the O2, LDF flags which is the default and some link time optimization happens that uses very much RAM and because of that it causes segmentation error, so we are using the O1 flag in case of online and also in case of the LibreOffice core. A little bit about running but we'll talk about it more, its structure is quite similar to the Kolobora office iOS and Android applications, there are one difference is that in case of mobile app the C++ code is what transfers and then loads the HTML page into WebKit in which the JavaScript trans in the WebAssembly application, the other way around the WebPages naturally the one that is loaded and then the JavaScript code then starts running the C++ code as a WebAssembly. You can see an image about it, it's a documentile in the browser, it's running in WebAssembly, there are some depth tools where you can debug, it's working but still needs some optimization work which is in progress, if we have an image in the document it's quite slow but we are working on that as well. Let's talk about a little bit some another WebAssembly work at Allotropia, we have also worked on a headless conversion, the last time in LibreCom with a little demo about it but it wasn't completely a headless conversion but now I make a video about it and let's see how it works now, we are not using the Qt5 framework anymore and we are also using a unique HTML which is created in the LibreOffice core by M-Scripten, so let's hope the video works, it's working, so this is the very basic HTML page but it can make it any kind of HTML, there is just a button, you can select multiple files and using the convert to arguments convert to the document and you can convert it any kind of format so that the LibreOffice core can do and then you can document it, download it and you can see it in the browser as well and there is a common line in the browser where you can see the results but the HTML page can be edited and that's a future plan to make it much more nicer. Also some future plans at Allotropia we would like to calling Unia API function cause from JavaScript and scripting for that also UI, M-Scripten provides various options for connecting normal JavaScript and CompileCode which range from functions to call CompileC++ from JavaScript and V-Aversa so to access environment variables from CompileCode, these options are the Web Ideal Binder and M-Bind, it's creating binding between C++ and JavaScript and also C++ code entities to be used in a measure manner from JavaScript. This was our future plan, I think that's all, thank you for your attention and thank you for that. We'll see you in the next one, bye for now.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.120000000000001, "text": " Hi everyone, my name is Balazs Vargo and I'm working at Allotropia GMBH and this presentation", "tokens": [2421, 1518, 11, 452, 1315, 307, 13140, 921, 82, 14662, 1571, 293, 286, 478, 1364, 412, 1057, 310, 1513, 654, 16609, 33, 39, 293, 341, 5860], "temperature": 0.0, "avg_logprob": -0.31694160567389595, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.27305901050567627}, {"id": 1, "seek": 0, "start": 15.120000000000001, "end": 21.52, "text": " I would like to talk about WebAssembly, M-scripten technology running the colabora online in", "tokens": [286, 576, 411, 281, 751, 466, 9573, 10884, 19160, 11, 376, 12, 82, 5944, 268, 2899, 2614, 264, 1173, 455, 3252, 2950, 294], "temperature": 0.0, "avg_logprob": -0.31694160567389595, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.27305901050567627}, {"id": 2, "seek": 0, "start": 21.52, "end": 26.92, "text": " WebAssembly and headless conversion stuff in WebAssembly as well.", "tokens": [9573, 10884, 19160, 293, 1378, 1832, 14298, 1507, 294, 9573, 10884, 19160, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.31694160567389595, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.27305901050567627}, {"id": 3, "seek": 2692, "start": 26.92, "end": 33.800000000000004, "text": " So let's get started with the colabora online in WebAssembly stuff.", "tokens": [407, 718, 311, 483, 1409, 365, 264, 1173, 455, 3252, 2950, 294, 9573, 10884, 19160, 1507, 13], "temperature": 0.0, "avg_logprob": -0.20779224123273576, "compression_ratio": 1.4519774011299436, "no_speech_prob": 0.0010708337649703026}, {"id": 4, "seek": 2692, "start": 33.800000000000004, "end": 41.28, "text": " So it was a common project with the colabora, we were together with Tor and Mihail Stahl.", "tokens": [407, 309, 390, 257, 2689, 1716, 365, 264, 1173, 455, 3252, 11, 321, 645, 1214, 365, 7160, 293, 48168, 864, 745, 10722, 13], "temperature": 0.0, "avg_logprob": -0.20779224123273576, "compression_ratio": 1.4519774011299436, "no_speech_prob": 0.0010708337649703026}, {"id": 5, "seek": 2692, "start": 41.28, "end": 45.8, "text": " The goal was to approach offline document editing.", "tokens": [440, 3387, 390, 281, 3109, 21857, 4166, 10000, 13], "temperature": 0.0, "avg_logprob": -0.20779224123273576, "compression_ratio": 1.4519774011299436, "no_speech_prob": 0.0010708337649703026}, {"id": 6, "seek": 2692, "start": 45.8, "end": 51.040000000000006, "text": " On this slide there is a sketch design for this.", "tokens": [1282, 341, 4137, 456, 307, 257, 12325, 1715, 337, 341, 13], "temperature": 0.0, "avg_logprob": -0.20779224123273576, "compression_ratio": 1.4519774011299436, "no_speech_prob": 0.0010708337649703026}, {"id": 7, "seek": 5104, "start": 51.04, "end": 58.32, "text": " The goal was that when the connection is breaks and in a browser the application is activated", "tokens": [440, 3387, 390, 300, 562, 264, 4984, 307, 9857, 293, 294, 257, 11185, 264, 3861, 307, 18157], "temperature": 0.0, "avg_logprob": -0.2466852720393691, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0015201589558273554}, {"id": 8, "seek": 5104, "start": 58.32, "end": 65.64, "text": " and that contains the colabora online server functionality and when the connection is restored", "tokens": [293, 300, 8306, 264, 1173, 455, 3252, 2950, 7154, 14980, 293, 562, 264, 4984, 307, 23143], "temperature": 0.0, "avg_logprob": -0.2466852720393691, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0015201589558273554}, {"id": 9, "seek": 5104, "start": 65.64, "end": 69.48, "text": " the document will be edited in the colabora online server again.", "tokens": [264, 4166, 486, 312, 23016, 294, 264, 1173, 455, 3252, 2950, 7154, 797, 13], "temperature": 0.0, "avg_logprob": -0.2466852720393691, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0015201589558273554}, {"id": 10, "seek": 5104, "start": 69.48, "end": 73.8, "text": " I think Tor will talk about it a bit more.", "tokens": [286, 519, 7160, 486, 751, 466, 309, 257, 857, 544, 13], "temperature": 0.0, "avg_logprob": -0.2466852720393691, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0015201589558273554}, {"id": 11, "seek": 5104, "start": 73.8, "end": 80.44, "text": " But to make it work first we had to build it in WebAssembly.", "tokens": [583, 281, 652, 309, 589, 700, 321, 632, 281, 1322, 309, 294, 9573, 10884, 19160, 13], "temperature": 0.0, "avg_logprob": -0.2466852720393691, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.0015201589558273554}, {"id": 12, "seek": 8044, "start": 80.44, "end": 87.56, "text": " For that we are using the M-scripten compiler toolchain.", "tokens": [1171, 300, 321, 366, 1228, 264, 376, 12, 82, 5944, 268, 31958, 2290, 11509, 13], "temperature": 0.0, "avg_logprob": -0.18917215983072916, "compression_ratio": 1.525, "no_speech_prob": 0.0013648070162162185}, {"id": 13, "seek": 8044, "start": 87.56, "end": 89.44, "text": " So let's talk about that.", "tokens": [407, 718, 311, 751, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.18917215983072916, "compression_ratio": 1.525, "no_speech_prob": 0.0013648070162162185}, {"id": 14, "seek": 8044, "start": 89.44, "end": 96.36, "text": " The M-scripten is a complete open source compiler toolchain to WebAssembly.", "tokens": [440, 376, 12, 82, 5944, 268, 307, 257, 3566, 1269, 4009, 31958, 2290, 11509, 281, 9573, 10884, 19160, 13], "temperature": 0.0, "avg_logprob": -0.18917215983072916, "compression_ratio": 1.525, "no_speech_prob": 0.0013648070162162185}, {"id": 15, "seek": 8044, "start": 96.36, "end": 104.32, "text": " Using M-scripten you can compile C and C++ code or any other languages that uses LLVM", "tokens": [11142, 376, 12, 82, 5944, 268, 291, 393, 31413, 383, 293, 383, 25472, 3089, 420, 604, 661, 8650, 300, 4960, 441, 43, 53, 44], "temperature": 0.0, "avg_logprob": -0.18917215983072916, "compression_ratio": 1.525, "no_speech_prob": 0.0013648070162162185}, {"id": 16, "seek": 10432, "start": 104.32, "end": 111.27999999999999, "text": " into WebAssembly and you can run it on the web or Node.js or any other runtimes.", "tokens": [666, 9573, 10884, 19160, 293, 291, 393, 1190, 309, 322, 264, 3670, 420, 38640, 13, 25530, 420, 604, 661, 49435, 1532, 13], "temperature": 0.0, "avg_logprob": -0.21269023986089797, "compression_ratio": 1.5618556701030928, "no_speech_prob": 0.0010813918197527528}, {"id": 17, "seek": 10432, "start": 111.27999999999999, "end": 119.67999999999999, "text": " The M-scripten generates small and fast code and the default output format is a WebAssembly", "tokens": [440, 376, 12, 82, 5944, 268, 23815, 1359, 293, 2370, 3089, 293, 264, 7576, 5598, 7877, 307, 257, 9573, 10884, 19160], "temperature": 0.0, "avg_logprob": -0.21269023986089797, "compression_ratio": 1.5618556701030928, "no_speech_prob": 0.0010813918197527528}, {"id": 18, "seek": 10432, "start": 119.67999999999999, "end": 126.47999999999999, "text": " and highly optimisable executable format that runs almost as fast as the native code.", "tokens": [293, 5405, 5028, 271, 712, 7568, 712, 7877, 300, 6676, 1920, 382, 2370, 382, 264, 8470, 3089, 13], "temperature": 0.0, "avg_logprob": -0.21269023986089797, "compression_ratio": 1.5618556701030928, "no_speech_prob": 0.0010813918197527528}, {"id": 19, "seek": 10432, "start": 126.47999999999999, "end": 132.04, "text": " A little bit about the M-scripten toolchain.", "tokens": [316, 707, 857, 466, 264, 376, 12, 82, 5944, 268, 2290, 11509, 13], "temperature": 0.0, "avg_logprob": -0.21269023986089797, "compression_ratio": 1.5618556701030928, "no_speech_prob": 0.0010813918197527528}, {"id": 20, "seek": 13204, "start": 132.04, "end": 134.95999999999998, "text": " The main tool is the M-scripten compiler frontend.", "tokens": [440, 2135, 2290, 307, 264, 376, 12, 82, 5944, 268, 31958, 1868, 521, 13], "temperature": 0.0, "avg_logprob": -0.2785653696431742, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.00028251486946828663}, {"id": 21, "seek": 13204, "start": 134.95999999999998, "end": 142.04, "text": " This is a drop-in replacement for a standard compiler like QCC or CLANG.", "tokens": [639, 307, 257, 3270, 12, 259, 14419, 337, 257, 3832, 31958, 411, 1249, 11717, 420, 12855, 12419, 13], "temperature": 0.0, "avg_logprob": -0.2785653696431742, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.00028251486946828663}, {"id": 22, "seek": 13204, "start": 142.04, "end": 149.07999999999998, "text": " The EMCC uses KLANG and LLVM to compile to WebAssembly.", "tokens": [440, 16237, 11717, 4960, 47991, 12419, 293, 441, 43, 53, 44, 281, 31413, 281, 9573, 10884, 19160, 13], "temperature": 0.0, "avg_logprob": -0.2785653696431742, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.00028251486946828663}, {"id": 23, "seek": 13204, "start": 149.07999999999998, "end": 158.72, "text": " EMCC also emits JavaScript that provides API support to the compiled code and the JavaScript", "tokens": [16237, 11717, 611, 846, 1208, 15778, 300, 6417, 9362, 1406, 281, 264, 36548, 3089, 293, 264, 15778], "temperature": 0.0, "avg_logprob": -0.2785653696431742, "compression_ratio": 1.4545454545454546, "no_speech_prob": 0.00028251486946828663}, {"id": 24, "seek": 15872, "start": 158.72, "end": 164.72, "text": " can be executed by Node.js or from within HTML in a browser.", "tokens": [393, 312, 17577, 538, 38640, 13, 25530, 420, 490, 1951, 17995, 294, 257, 11185, 13], "temperature": 0.0, "avg_logprob": -0.24555978467387538, "compression_ratio": 1.430232558139535, "no_speech_prob": 0.00022495082521345466}, {"id": 25, "seek": 15872, "start": 164.72, "end": 176.88, "text": " There are more information there but you can read that about porting code to use M-scripten.", "tokens": [821, 366, 544, 1589, 456, 457, 291, 393, 1401, 300, 466, 2436, 278, 3089, 281, 764, 376, 12, 82, 5944, 268, 13], "temperature": 0.0, "avg_logprob": -0.24555978467387538, "compression_ratio": 1.430232558139535, "no_speech_prob": 0.00022495082521345466}, {"id": 26, "seek": 15872, "start": 176.88, "end": 183.88, "text": " Support for portable C and C++ code is fairly comprehensive and supported for the C standard", "tokens": [18073, 337, 21800, 383, 293, 383, 25472, 3089, 307, 6457, 13914, 293, 8104, 337, 264, 383, 3832], "temperature": 0.0, "avg_logprob": -0.24555978467387538, "compression_ratio": 1.430232558139535, "no_speech_prob": 0.00022495082521345466}, {"id": 27, "seek": 18388, "start": 183.88, "end": 189.12, "text": " library, the C++ standard library and the exception and etc.", "tokens": [6405, 11, 264, 383, 25472, 3832, 6405, 293, 264, 11183, 293, 5183, 13], "temperature": 0.0, "avg_logprob": -0.37958834171295164, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.00038184633012861013}, {"id": 28, "seek": 18388, "start": 189.12, "end": 193.2, "text": " It's a very good and also the OpenGL supports.", "tokens": [467, 311, 257, 588, 665, 293, 611, 264, 7238, 19440, 9346, 13], "temperature": 0.0, "avg_logprob": -0.37958834171295164, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.00038184633012861013}, {"id": 29, "seek": 18388, "start": 193.2, "end": 198.88, "text": " The multistrading is supported but depends on the shad array buffer which is still being", "tokens": [440, 2120, 468, 6206, 278, 307, 8104, 457, 5946, 322, 264, 5744, 10225, 21762, 597, 307, 920, 885], "temperature": 0.0, "avg_logprob": -0.37958834171295164, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.00038184633012861013}, {"id": 30, "seek": 18388, "start": 198.88, "end": 204.24, "text": " standardized and implemented by browsers.", "tokens": [31677, 293, 12270, 538, 36069, 13], "temperature": 0.0, "avg_logprob": -0.37958834171295164, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.00038184633012861013}, {"id": 31, "seek": 18388, "start": 204.24, "end": 209.96, "text": " Now let's see the porting how it worked in the case of Kolobora online.", "tokens": [823, 718, 311, 536, 264, 2436, 278, 577, 309, 2732, 294, 264, 1389, 295, 26137, 996, 3252, 2950, 13], "temperature": 0.0, "avg_logprob": -0.37958834171295164, "compression_ratio": 1.5346534653465347, "no_speech_prob": 0.00038184633012861013}, {"id": 32, "seek": 20996, "start": 209.96, "end": 217.60000000000002, "text": " The building for Wasm with M-scripten is a bit immature and some projects needed patching", "tokens": [440, 2390, 337, 3027, 76, 365, 376, 12, 82, 5944, 268, 307, 257, 857, 49539, 293, 512, 4455, 2978, 9972, 278], "temperature": 0.0, "avg_logprob": -0.32152748107910156, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.0007392234401777387}, {"id": 33, "seek": 20996, "start": 217.60000000000002, "end": 218.60000000000002, "text": " to make it work.", "tokens": [281, 652, 309, 589, 13], "temperature": 0.0, "avg_logprob": -0.32152748107910156, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.0007392234401777387}, {"id": 34, "seek": 20996, "start": 218.60000000000002, "end": 224.24, "text": " First, we need to build a LibreOffice core with M-scripten earlier.", "tokens": [2386, 11, 321, 643, 281, 1322, 257, 15834, 265, 29745, 573, 4965, 365, 376, 12, 82, 5944, 268, 3071, 13], "temperature": 0.0, "avg_logprob": -0.32152748107910156, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.0007392234401777387}, {"id": 35, "seek": 20996, "start": 224.24, "end": 229.12, "text": " The best was to use the feature branch but now it's working with the upstream.", "tokens": [440, 1151, 390, 281, 764, 264, 4111, 9819, 457, 586, 309, 311, 1364, 365, 264, 33915, 13], "temperature": 0.0, "avg_logprob": -0.32152748107910156, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.0007392234401777387}, {"id": 36, "seek": 20996, "start": 229.12, "end": 235.56, "text": " Master without the Qt5 framework and then it needed to build the Kolobora online.", "tokens": [6140, 1553, 264, 1249, 83, 20, 8388, 293, 550, 309, 2978, 281, 1322, 264, 26137, 996, 3252, 2950, 13], "temperature": 0.0, "avg_logprob": -0.32152748107910156, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.0007392234401777387}, {"id": 37, "seek": 23556, "start": 235.56, "end": 249.2, "text": " This is the ZSTD libraries, the Poco library, it's required to patches to make it work.", "tokens": [639, 307, 264, 1176, 6840, 35, 15148, 11, 264, 430, 11198, 6405, 11, 309, 311, 4739, 281, 26531, 281, 652, 309, 589, 13], "temperature": 0.0, "avg_logprob": -0.2864908831460135, "compression_ratio": 1.3972602739726028, "no_speech_prob": 0.00019633791816886514}, {"id": 38, "seek": 23556, "start": 249.2, "end": 255.6, "text": " And then it's necessary to build the Kolobora online code and then linking or the binaries", "tokens": [400, 550, 309, 311, 4818, 281, 1322, 264, 26137, 996, 3252, 2950, 3089, 293, 550, 25775, 420, 264, 5171, 4889], "temperature": 0.0, "avg_logprob": -0.2864908831460135, "compression_ratio": 1.3972602739726028, "no_speech_prob": 0.00019633791816886514}, {"id": 39, "seek": 23556, "start": 255.6, "end": 258.76, "text": " and executables together.", "tokens": [293, 7568, 2965, 1214, 13], "temperature": 0.0, "avg_logprob": -0.2864908831460135, "compression_ratio": 1.3972602739726028, "no_speech_prob": 0.00019633791816886514}, {"id": 40, "seek": 25876, "start": 258.76, "end": 267.48, "text": " Everything was executable, uses a lot of memory, without optimizations or with O1 flags.", "tokens": [5471, 390, 7568, 712, 11, 4960, 257, 688, 295, 4675, 11, 1553, 5028, 14455, 420, 365, 422, 16, 23265, 13], "temperature": 0.0, "avg_logprob": -0.2933056950569153, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.0005400397931225598}, {"id": 41, "seek": 25876, "start": 267.48, "end": 274.92, "text": " It should work anywhere but there are different kind of flags like the O2, LDF flags which", "tokens": [467, 820, 589, 4992, 457, 456, 366, 819, 733, 295, 23265, 411, 264, 422, 17, 11, 33936, 37, 23265, 597], "temperature": 0.0, "avg_logprob": -0.2933056950569153, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.0005400397931225598}, {"id": 42, "seek": 25876, "start": 274.92, "end": 282.8, "text": " is the default and some link time optimization happens that uses very much RAM and because", "tokens": [307, 264, 7576, 293, 512, 2113, 565, 19618, 2314, 300, 4960, 588, 709, 14561, 293, 570], "temperature": 0.0, "avg_logprob": -0.2933056950569153, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.0005400397931225598}, {"id": 43, "seek": 28280, "start": 282.8, "end": 289.2, "text": " of that it causes segmentation error, so we are using the O1 flag in case of online and", "tokens": [295, 300, 309, 7700, 9469, 399, 6713, 11, 370, 321, 366, 1228, 264, 422, 16, 7166, 294, 1389, 295, 2950, 293], "temperature": 0.0, "avg_logprob": -0.2783552646636963, "compression_ratio": 1.5422885572139304, "no_speech_prob": 4.757229908136651e-05}, {"id": 44, "seek": 28280, "start": 289.2, "end": 293.28000000000003, "text": " also in case of the LibreOffice core.", "tokens": [611, 294, 1389, 295, 264, 15834, 265, 29745, 573, 4965, 13], "temperature": 0.0, "avg_logprob": -0.2783552646636963, "compression_ratio": 1.5422885572139304, "no_speech_prob": 4.757229908136651e-05}, {"id": 45, "seek": 28280, "start": 293.28000000000003, "end": 301.76, "text": " A little bit about running but we'll talk about it more, its structure is quite similar", "tokens": [316, 707, 857, 466, 2614, 457, 321, 603, 751, 466, 309, 544, 11, 1080, 3877, 307, 1596, 2531], "temperature": 0.0, "avg_logprob": -0.2783552646636963, "compression_ratio": 1.5422885572139304, "no_speech_prob": 4.757229908136651e-05}, {"id": 46, "seek": 28280, "start": 301.76, "end": 310.68, "text": " to the Kolobora office iOS and Android applications, there are one difference is that in case of", "tokens": [281, 264, 26137, 996, 3252, 3398, 17430, 293, 8853, 5821, 11, 456, 366, 472, 2649, 307, 300, 294, 1389, 295], "temperature": 0.0, "avg_logprob": -0.2783552646636963, "compression_ratio": 1.5422885572139304, "no_speech_prob": 4.757229908136651e-05}, {"id": 47, "seek": 31068, "start": 310.68, "end": 320.56, "text": " mobile app the C++ code is what transfers and then loads the HTML page into WebKit in", "tokens": [6013, 724, 264, 383, 25472, 3089, 307, 437, 29137, 293, 550, 12668, 264, 17995, 3028, 666, 9573, 45626, 294], "temperature": 0.0, "avg_logprob": -0.3244949716036437, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.00011580708087421954}, {"id": 48, "seek": 31068, "start": 320.56, "end": 327.56, "text": " which the JavaScript trans in the WebAssembly application, the other way around the WebPages", "tokens": [597, 264, 15778, 1145, 294, 264, 9573, 10884, 19160, 3861, 11, 264, 661, 636, 926, 264, 9573, 47, 1660], "temperature": 0.0, "avg_logprob": -0.3244949716036437, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.00011580708087421954}, {"id": 49, "seek": 31068, "start": 327.56, "end": 335.44, "text": " naturally the one that is loaded and then the JavaScript code then starts running the", "tokens": [8195, 264, 472, 300, 307, 13210, 293, 550, 264, 15778, 3089, 550, 3719, 2614, 264], "temperature": 0.0, "avg_logprob": -0.3244949716036437, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.00011580708087421954}, {"id": 50, "seek": 33544, "start": 335.44, "end": 341.44, "text": " C++ code as a WebAssembly.", "tokens": [383, 25472, 3089, 382, 257, 9573, 10884, 19160, 13], "temperature": 0.0, "avg_logprob": -0.21524206414280167, "compression_ratio": 1.59375, "no_speech_prob": 0.00012438252451829612}, {"id": 51, "seek": 33544, "start": 341.44, "end": 347.28, "text": " You can see an image about it, it's a documentile in the browser, it's running in WebAssembly,", "tokens": [509, 393, 536, 364, 3256, 466, 309, 11, 309, 311, 257, 4166, 794, 294, 264, 11185, 11, 309, 311, 2614, 294, 9573, 10884, 19160, 11], "temperature": 0.0, "avg_logprob": -0.21524206414280167, "compression_ratio": 1.59375, "no_speech_prob": 0.00012438252451829612}, {"id": 52, "seek": 33544, "start": 347.28, "end": 354.92, "text": " there are some depth tools where you can debug, it's working but still needs some optimization", "tokens": [456, 366, 512, 7161, 3873, 689, 291, 393, 24083, 11, 309, 311, 1364, 457, 920, 2203, 512, 19618], "temperature": 0.0, "avg_logprob": -0.21524206414280167, "compression_ratio": 1.59375, "no_speech_prob": 0.00012438252451829612}, {"id": 53, "seek": 33544, "start": 354.92, "end": 361.76, "text": " work which is in progress, if we have an image in the document it's quite slow but we are", "tokens": [589, 597, 307, 294, 4205, 11, 498, 321, 362, 364, 3256, 294, 264, 4166, 309, 311, 1596, 2964, 457, 321, 366], "temperature": 0.0, "avg_logprob": -0.21524206414280167, "compression_ratio": 1.59375, "no_speech_prob": 0.00012438252451829612}, {"id": 54, "seek": 36176, "start": 361.76, "end": 366.68, "text": " working on that as well.", "tokens": [1364, 322, 300, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2561369920388246, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0010510849533602595}, {"id": 55, "seek": 36176, "start": 366.68, "end": 374.88, "text": " Let's talk about a little bit some another WebAssembly work at Allotropia, we have also", "tokens": [961, 311, 751, 466, 257, 707, 857, 512, 1071, 9573, 10884, 19160, 589, 412, 1057, 310, 1513, 654, 11, 321, 362, 611], "temperature": 0.0, "avg_logprob": -0.2561369920388246, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0010510849533602595}, {"id": 56, "seek": 36176, "start": 374.88, "end": 382.0, "text": " worked on a headless conversion, the last time in LibreCom with a little demo about", "tokens": [2732, 322, 257, 1378, 1832, 14298, 11, 264, 1036, 565, 294, 15834, 265, 14627, 365, 257, 707, 10723, 466], "temperature": 0.0, "avg_logprob": -0.2561369920388246, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0010510849533602595}, {"id": 57, "seek": 36176, "start": 382.0, "end": 389.92, "text": " it but it wasn't completely a headless conversion but now I make a video about it and let's", "tokens": [309, 457, 309, 2067, 380, 2584, 257, 1378, 1832, 14298, 457, 586, 286, 652, 257, 960, 466, 309, 293, 718, 311], "temperature": 0.0, "avg_logprob": -0.2561369920388246, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0010510849533602595}, {"id": 58, "seek": 38992, "start": 389.92, "end": 398.32, "text": " see how it works now, we are not using the Qt5 framework anymore and we are also using", "tokens": [536, 577, 309, 1985, 586, 11, 321, 366, 406, 1228, 264, 1249, 83, 20, 8388, 3602, 293, 321, 366, 611, 1228], "temperature": 0.0, "avg_logprob": -0.2458962279480773, "compression_ratio": 1.4486486486486487, "no_speech_prob": 0.0005378457135520875}, {"id": 59, "seek": 38992, "start": 398.32, "end": 407.40000000000003, "text": " a unique HTML which is created in the LibreOffice core by M-Scripten, so let's hope the video", "tokens": [257, 3845, 17995, 597, 307, 2942, 294, 264, 15834, 265, 29745, 573, 4965, 538, 376, 12, 50, 5944, 268, 11, 370, 718, 311, 1454, 264, 960], "temperature": 0.0, "avg_logprob": -0.2458962279480773, "compression_ratio": 1.4486486486486487, "no_speech_prob": 0.0005378457135520875}, {"id": 60, "seek": 38992, "start": 407.40000000000003, "end": 417.48, "text": " works, it's working, so this is the very basic HTML page but it can make it any kind of", "tokens": [1985, 11, 309, 311, 1364, 11, 370, 341, 307, 264, 588, 3875, 17995, 3028, 457, 309, 393, 652, 309, 604, 733, 295], "temperature": 0.0, "avg_logprob": -0.2458962279480773, "compression_ratio": 1.4486486486486487, "no_speech_prob": 0.0005378457135520875}, {"id": 61, "seek": 41748, "start": 417.48, "end": 429.04, "text": " HTML, there is just a button, you can select multiple files and using the convert to arguments", "tokens": [17995, 11, 456, 307, 445, 257, 2960, 11, 291, 393, 3048, 3866, 7098, 293, 1228, 264, 7620, 281, 12869], "temperature": 0.0, "avg_logprob": -0.24711295739928288, "compression_ratio": 1.6484848484848484, "no_speech_prob": 0.00020138447871431708}, {"id": 62, "seek": 41748, "start": 429.04, "end": 432.56, "text": " convert to the document and you can convert it any kind of format so that the LibreOffice", "tokens": [7620, 281, 264, 4166, 293, 291, 393, 7620, 309, 604, 733, 295, 7877, 370, 300, 264, 15834, 265, 29745, 573], "temperature": 0.0, "avg_logprob": -0.24711295739928288, "compression_ratio": 1.6484848484848484, "no_speech_prob": 0.00020138447871431708}, {"id": 63, "seek": 41748, "start": 432.56, "end": 444.64000000000004, "text": " core can do and then you can document it, download it and you can see it in the browser", "tokens": [4965, 393, 360, 293, 550, 291, 393, 4166, 309, 11, 5484, 309, 293, 291, 393, 536, 309, 294, 264, 11185], "temperature": 0.0, "avg_logprob": -0.24711295739928288, "compression_ratio": 1.6484848484848484, "no_speech_prob": 0.00020138447871431708}, {"id": 64, "seek": 44464, "start": 444.64, "end": 451.59999999999997, "text": " as well and there is a common line in the browser where you can see the results but the", "tokens": [382, 731, 293, 456, 307, 257, 2689, 1622, 294, 264, 11185, 689, 291, 393, 536, 264, 3542, 457, 264], "temperature": 0.0, "avg_logprob": -0.23552071497990534, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.00017228227807208896}, {"id": 65, "seek": 44464, "start": 451.59999999999997, "end": 459.47999999999996, "text": " HTML page can be edited and that's a future plan to make it much more nicer.", "tokens": [17995, 3028, 393, 312, 23016, 293, 300, 311, 257, 2027, 1393, 281, 652, 309, 709, 544, 22842, 13], "temperature": 0.0, "avg_logprob": -0.23552071497990534, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.00017228227807208896}, {"id": 66, "seek": 44464, "start": 459.47999999999996, "end": 467.68, "text": " Also some future plans at Allotropia we would like to calling Unia API function cause from", "tokens": [2743, 512, 2027, 5482, 412, 1057, 310, 1513, 654, 321, 576, 411, 281, 5141, 1156, 654, 9362, 2445, 3082, 490], "temperature": 0.0, "avg_logprob": -0.23552071497990534, "compression_ratio": 1.457142857142857, "no_speech_prob": 0.00017228227807208896}, {"id": 67, "seek": 46768, "start": 467.68, "end": 476.44, "text": " JavaScript and scripting for that also UI, M-Scripten provides various options for connecting", "tokens": [15778, 293, 5755, 278, 337, 300, 611, 15682, 11, 376, 12, 50, 5944, 268, 6417, 3683, 3956, 337, 11015], "temperature": 0.0, "avg_logprob": -0.30840666153851676, "compression_ratio": 1.6337209302325582, "no_speech_prob": 0.0005641741445288062}, {"id": 68, "seek": 46768, "start": 476.44, "end": 484.48, "text": " normal JavaScript and CompileCode which range from functions to call CompileC++ from JavaScript", "tokens": [2710, 15778, 293, 6620, 794, 34, 1429, 597, 3613, 490, 6828, 281, 818, 6620, 794, 34, 25472, 490, 15778], "temperature": 0.0, "avg_logprob": -0.30840666153851676, "compression_ratio": 1.6337209302325582, "no_speech_prob": 0.0005641741445288062}, {"id": 69, "seek": 46768, "start": 484.48, "end": 492.48, "text": " and V-Aversa so to access environment variables from CompileCode, these options are the Web", "tokens": [293, 691, 12, 32, 840, 64, 370, 281, 2105, 2823, 9102, 490, 6620, 794, 34, 1429, 11, 613, 3956, 366, 264, 9573], "temperature": 0.0, "avg_logprob": -0.30840666153851676, "compression_ratio": 1.6337209302325582, "no_speech_prob": 0.0005641741445288062}, {"id": 70, "seek": 49248, "start": 492.48, "end": 501.44, "text": " Ideal Binder and M-Bind, it's creating binding between C++ and JavaScript and also C++ code", "tokens": [13090, 304, 363, 5669, 293, 376, 12, 33, 471, 11, 309, 311, 4084, 17359, 1296, 383, 25472, 293, 15778, 293, 611, 383, 25472, 3089], "temperature": 0.0, "avg_logprob": -0.31287323556295255, "compression_ratio": 1.3097345132743363, "no_speech_prob": 0.00027595629217103124}, {"id": 71, "seek": 49248, "start": 501.44, "end": 507.32, "text": " entities to be used in a measure manner from JavaScript.", "tokens": [16667, 281, 312, 1143, 294, 257, 3481, 9060, 490, 15778, 13], "temperature": 0.0, "avg_logprob": -0.31287323556295255, "compression_ratio": 1.3097345132743363, "no_speech_prob": 0.00027595629217103124}, {"id": 72, "seek": 50732, "start": 507.32, "end": 523.36, "text": " This was our future plan, I think that's all, thank you for your attention and thank you", "tokens": [639, 390, 527, 2027, 1393, 11, 286, 519, 300, 311, 439, 11, 1309, 291, 337, 428, 3202, 293, 1309, 291], "temperature": 0.0, "avg_logprob": -0.5774546656115301, "compression_ratio": 1.180722891566265, "no_speech_prob": 0.0016965034883469343}, {"id": 73, "seek": 50732, "start": 523.36, "end": 524.36, "text": " for that.", "tokens": [337, 300, 13], "temperature": 0.0, "avg_logprob": -0.5774546656115301, "compression_ratio": 1.180722891566265, "no_speech_prob": 0.0016965034883469343}, {"id": 74, "seek": 52436, "start": 524.36, "end": 538.04, "text": " We'll see you in the next one, bye for now.", "tokens": [50364, 492, 603, 536, 291, 294, 264, 958, 472, 11, 6543, 337, 586, 13, 51048], "temperature": 0.0, "avg_logprob": -0.8629264235496521, "compression_ratio": 0.8431372549019608, "no_speech_prob": 0.014187395572662354}], "language": "en"}