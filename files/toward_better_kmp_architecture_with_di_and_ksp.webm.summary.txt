The speaker talks about improving the use of dependency injection library using KSP, a Kotlin Symbol Processor. They discuss the problems with current dependency injection libraries, such as confusion with annotations, lack of readability, and no compilation checks. KSP can generate code to interact with the DI container, making the API more readable and typed. This allows for an easy way to check the dependency container consistency with a few lines of unit tests. KSP is still a work in progress, with some corner cases to crack, such as module management and how to handle scopes. The speaker also mentions that this is an open-source project and welcomes contributions.