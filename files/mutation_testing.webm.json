{"text": " Hello. How's it going, everybody? A lot of people in this room didn't really expect so many. This is wonderful. Thank you for coming to see us. I just want to say that we want to talk today about mutation testing. That's what we're here for. If you like this penguin, does anyone not like this penguin? Just you. Okay. Personal vendetta noted. This is a penguin generated by Dolly. Hopefully, it's friendly enough because this is going to be part of our talk. We're going to see a lot of penguins in this talk. If anyone has a personal objection to penguins, please speak now. Otherwise, if you like penguins, can I get a hand up just to see if we cool with that? Awesome. I've never seen so many people want to put their hands up but not really be sure. I absolutely love the energy in this room. My name's Max. I'm this guy. As you can tell, I'm also this guy. I'm here to talk to you about mutation testing. I work for a company called Vonage and I'm a Python developer advocate there. Now, what that means is that I maintain our Python tooling. I'm here to talk about mutation testing because I've just kind of went through this process myself of understanding all this stuff and applying it to my own work. I want to show you kind of how that went. But with me, not only do I have the tallest person in the room. Stand up straight. Stand up straight. This person is 196 centimeters tall. I'm like 177. I'm not sure. I promise. I'm average in Britain. In this place, right? This person knows a lot more about mutation testing than me. I'm really not the expert here but I just want to say this is Paco. Yes. I'm Paco. I work for Opavailu, a small consultancy company in the Netherlands. I got into mutation testing via my thesis. When I wrote my thesis on test effectiveness, I wanted to learn more about mutation. Also, after that, I got into speaking at conferences and more spreading the word about this. Quite awesome, too. I hope that at the end of the talk, you have another cool tool in your toolbox to write better code. Awesome. If we're cool with that, we do have to do the obligatory. These companies paid for us to come here and paid for our flights and stuff. What my company does, I'll just quickly tell you. We do communications APIs as a service, basically. Things like SMS, like voice calls, like video chats, like two-factor authentication, all via API. That's kind of what we do. That's really just what I want to say. It is relevant because I will show you what I actually applied this to, which was one of our SD case. For me, we don't actually have a product to sell. Also, definitely didn't fly here from the Netherlands just to make that sure. It's just a two-hour car drive. No, so we're here just a consultancy company, and we really like to share knowledge. That's mostly the reason why I'm here to tell you more and teach you more. It's quite simple. Yeah. He doesn't have the funding crush that I do, unfortunately. Luckily, we're all good. There's two of us on this talk. There's two of us here, and actually, there is a third person in this talk. We've seen a hint about this person already, but this person's really the thing that's going to tie this whole talk together, and it's going to get us all feeling good about mutation testing. This person's very important, so say hello to Henry. This is Henry. Look at his little face. Thank you. Hands up if you think Henry's a cute AF penguin. As for it, thank you very much. Yes, I'm glad we agree. I'm glad we're on the same page. Now, just some quick audience participation, because if you can't tell, we're quite big on audience participation. So, quick question here. Who has heard of this stock photo, but more importantly, who's heard of testing? This is just a check to see if we found the room. Thank you very much. Great stuff. Okay. Who's heard about code coverage? A lot of people maybe not everybody, and that's okay if you haven't. We're going to talk about code coverage, so please don't worry if you haven't. But yeah, it's awesome to know that some people have. That's a good starting point too. Okay, final one. I'm going to say other than Vaia knowing about this talk, who's heard of mutation testing? Oh, quite a few. Yeah. And now, quick break. Who actually was already using mutase testing? Ah, nice. There are enough quick wins here, and hopefully you have some good experiences. Yeah. So, really nice to see that people are familiar with the concept, but if you're not, it's also okay, because we're going to go through this like you don't know anything at all, because when I started doing this, you know, a few months ago, I didn't know anything at all, and so I want to take you through that journey as well, and that's what we're going to do. But before that, what I want to do first is give us some background, and what I actually really want to do is pass to Paco, who knows a lot more about this than me, so I'm going to pass to you right now. Yes. This is going to be some improvising. Good work. Good luck. I'm going to drink water with this. I'll feed you. Yeah. Nice. Great. So, yeah, we're first going to talk a bit about testing in general, and then we're going to more specifically talk about unit testing. So, just a quick check. Does anybody know what a unit test is? That's great. I don't have to explain that part. For those who don't know, it's the smallest possible test you can write in your code base, just in one method, and you write one test for it to test the outcome of that method. Now, there are many different reasons why we're writing unit tests, and I think one of them, my favorite or the most used one is for maintenance. We write tests because we want to be confident in the changes we make to our code base. So, whenever we make a small change, we add a new field to some endpoint that we know that we didn't completely break the database integration because it can happen at times. So, yeah, that's very important maintenance regression testing, but there are more reasons. One I like also a lot is tests can actually serve documentation purposes as documentation. You can use tests to describe certain scenarios in your code base that when you have a specific test for that, it already makes clear this is intended behavior. I have an example for this, which is I worked for a company where we had an endpoint that returned warehouses, and these warehouses, just a domain object, had a soft delete. So, there was a flag in there that indicated whether it was deleted or not. At some point, so this endpoint returned both deleted and non-deleted warehouses, and at some point over time, as we were working on it, a new guy came in and looked at it and said, hmm, that's strange. Why are we returning deleted warehouses? Why would you want that? It was a fair question because we also forgot, and there was only one test which tested the success flow, and you can already kind of guess here a bit. So, the success flow in this case meant they only returned non-deleted warehouses in the test. So he made the changes, and we all thought, oh, this makes sense. It looks broken. Of course, they didn't check with product management, the product team deployed it, and then you can guess, of course, this was broken, so we had to revert it. And the whole lesson here was just one test which also included a negative scenario with tests of warehouses that were deleted could have already been a trigger to think like, hey, this behavior is intended, and that's where documentation, so where tests can serve as sort of a documentation purpose. Also very useful in getting to learn a new code base. So, whenever you're on a new code base, you have this very complicated method. A test can help you step through the method to sort of explain what's going on, for example, while debugging it. Now, another one, and this one is here for the consultant. So, who here works as a consultant? Oh, not that many. Wow. Because we're sort of the root of all evil always. We tend to run to the next project, and we don't have to maintain our own code often, not always. So I have this nice quote that's mostly also for us. Keep in mind that you're not doing this only for yourself. I had a colleague who once told me, keep in mind that you always have this point in your development process where you think, okay, should I write a unit test for this? It's going to be a painful unit test. I know that it works. I do really have to document it. We all know how it works. Yeah, sure, we all know how it works, but we also leave the project and then go on and go to another project. We as consultants. And I will speak to myself, what would I do if I would be the next person? So what would I do if I were the next John or Jane Doe working on this project? So tests are not there just for you, but also for the next person working. I would actually like to jump in here, because I've been that person. Thank you. I've been the person who works on a project after someone's left that. And honestly, if you have good documentation or if you don't have that, if you have good testing, thank you, you do your water break. So if you have good testing, it can really help you understand what a project does. And so when I came to a certain project recently, I didn't have necessarily the kind of testing that I would have liked to really document my code that well. And so like, honestly, if I'd had someone like Parker, who actually was a bit more conscientious with what they tested, that would have really helped me get on board with the project quickly. But as it was, this was a real problem for me. And it was something that we want to hopefully avoid other people having to deal with as well. Like, quick question, actually. Has anybody ever taken over a code base that they may be looking at and go, what the heck is this? Okay, so you know what the point of this slide, right? You know why we're saying this. We know this is important. Now, let's stop that from happening to the next generation of very pain developers, right? Let's stop that happening. Yes, so write tests. And so if all these reasons haven't convinced you, there's often maybe a team lead or a boss or somebody else who's telling you to write tests. In most cases, there's always, of course, exceptions. Ah, okay. Wow. This is annoying. So at the end of the day, we're all writing tests, if it's not for ourselves and it's for someone else. And as we're, even though we're now sort of happily all adding tests, we also have to sort of sketch a problem scenario here. And this problem is that as projects evolve and grow, our tests also evolve and grow. But the problem is that we do reflect there a lot and we spend a lot of time on keeping our production code clean and well monitored. We have lots of metrics where on the other hand for tests, what you can see on long living projects is that sometimes you just get tests where nothing more than a blank setup and tear down and some mocking going on because the functionality already moved long ago, which means to the point that test code is often not monitored. Test code is sort of our, the kid that didn't get all the attention that needed. So there is still one metric for testing. What's one, what do you think is the most used metric for test code? Yes, yeah, we have sort of gave it away already in the intro, but yes, yes, code coverage. Code coverage tells you how much of the code is executed when you run the test suite. And I personally really like code coverage because it already helps you write more and better tests. And I want to go through a simple example here to show you how it can already help you. So here we have a submit method. So this is the Python guy. I'm the Java guy. Yeah, he said simple example, but I don't, I don't think so. Yeah. So the context is you are at the conference and you have a service where you can submit proposals. You can only have, you can't have more than three, three or more over proposals and you can submit after the deadline. If you do that, there will be a failure and otherwise you will get success. So quite a simple method with everything as a parameter just to make it easy to explain. So if you would take method coverage, method coverage is the simplest coverage metric we can get which checks is this method coverage as or no, we can add one simple test called a test X which submits a proposal. There are no open proposals, which is good. And we have a deadline that's 999 seconds in the future. So great. Now we can get a step further. We can get into statement coverage and with statement coverage, we check, well, if each statement was executed and now we see, hey, we didn't cover our unhappy flow. So we need to add another test. In this case, we add another test which has five over proposals, which means this check evaluates the true and we have a negative scenario. Now we can even go one step further through, for example, condition coverage. And with condition coverage, we check if each Boolean sub-expression has been evaluated to both true and false because what we don't know now is whether our deadline check is actually working. We just know that it returns false, but we haven't seen it return true yet. So we add one more test now with a deadline that is 999 seconds in the past. And now we have three tests. And this is already why I like code coverage so much because it really helps you write proper tests. Proper, it helps you write tests because let me get on to the good part here. As I said, writes better and more tests. Code coverage is really easy and cheap to measure. In most, I think most of the languages, it's just a matter of instrumenting the code. You run the test suite and you get a nice report out of it that everybody can quickly see and you can quickly see the pain points of where you're lacking in testing. But to get a bit further, so it guarantees, as I mentioned, it shows you what you didn't test. But the only guarantee I'm going to get to the bad parts next is that the only thing that shows you that what you did test didn't crash. It doesn't guarantee anything actually about functionality because code coverage can actually be quite misleading. It doesn't guarantee any test quality. So if I take this method, for example, this is a unit test, a valid unit test, this test generates coverage. It calls a method, but there is no assertion on the result, which makes this test, for example, generate 80% coverage, yet the test actually only guarantees it said the method doesn't crash. It doesn't tell us whether it's returned true, false or anything. And this is the pain point of code coverage, which brings us to the something nice which Max told me about, which is called the good horse law. So can you maybe explain a bit about that? Can I grab your clicker? Can I explain about good horse law? No, sorry. I can't. Just kidding. Okay, so when a metric becomes a target, it seems it's to be a good metric. So quick question, has anyone ever written a unit test just to get coverage up rather than because the test was useful? Come on, let's be honest. This is the safe space. Okay. Microphone, okay. Hello, everybody. Welcome to the live stream. This is our radio announcer voice. Right. So this is something, I'll be honest, I've done this. We now know a lot of people in the room have done this. But what we don't want to have is with code coverage. It's supposed to tell us something about our code. But if instead we turn that into a target, that can really limit what we actually, you know, what the kind of useful tests that we actually create. And that leads to a few quite big questions that we do genuinely care about. So I'll wait for that photo if you. Cool. Sorry, I'm very audience participation. I'm very sorry. So the next question that we ask there is how do we know if our tests are high quality? How do we know if these tests are actually good quality tests? We test them. We test them. Great, great answer. I've got a further follow up question for you. How can we understand what our tests are really doing? Same answer, if anyone, I see a hand. I literally had a code base where I could delete half the tests and nothing changed. And they all, yeah. So I'm in delete or half the kid. Hello. Yes. So just for the live stream, I'll just repeat that because that's a really good point. I won't repeat this wearing, but I do understand and appreciate the, you know, the emotion behind it. If you, if you end up, you know, shipping some code that does, does not do what it's supposed to do. You end up with users getting very angry at you. And yeah, that's a problem, right? That's going to be an issue. And that is a way of finding out, but I guess the real question we're asking here is how do we know if we can trust our tests? That's really the crux of this, this problem, right? And so as it turns out, the very, the very famous Roman poet juvenile, actually in 100 AD after he'd had a few drinks, he was able to summarize this in such a beautiful way. And this was something that maybe wasn't appreciated at the time because, you know, obviously he was talking about mutation testing 2,000 years before it was relevant. But I will mention it here. It's who watches the watchers, right? And this is the question. Who's testing our tests? Who cares about that? Who's, how do we actually gain trustworthiness for our tests? And I see there's, there's people in production who's having bugs. There's people who understand here that this is a really big deal. Luckily, we have a two-word answer for you, which is the reason we're all in this room. Mutation testing. So, spot the odd one out. You might see here, that's, that's Henry. He's having a great time, but maybe he shouldn't be still in a row of pigeons. But more importantly right now, I'll just explain the basic premise and then Paco here will explain in a little more detail how it's actually kind of done. So first of all, mutation testing, this is a really quick summary. What you do is you introduce some faults in your code, so just a few little things that you change. And for each of those little changes, that's a mutant version of your code. Once you've got that, you run your test suite against those mutant versions of your code. And if they fail, awesome, because that means that, awesome, because that means that your, your tests have actually picked up that change. And that's a good thing, right? That's, that's good. We want those tests to fail if our code changes, right? But if they don't fail, that's a bad time because that means those tests didn't test that change. It didn't test for that. And so that's something that could have made it to production. So what mutation testing kind of gives you is a way to evaluate that test quality. But this is very abstract. So let's look at penguins. I like penguins. So Henry here, he's a great example and he's going to, he's going to bring all this home. So I was kind of unfamiliar to the topic. So I kind of created some analogies with penguins that really helped me. So I'll share those with you. So the way I kind of imagine my software is we do lots of stuff with messaging. And so I imagine software that works properly to be like a pigeon or a dove, like a bird that can fly. I've used a dove here because Paco has a deadly fear of pigeons. He's terrified of them. Not fear. Vendetta. He has a personal vendetta against pigeons. Sorry. He doesn't like them. So I've used a dove here. But ideally we want something that I can tie a message to the bird's leg and it can go and deal with that message for me, right? So it can go, it can go do something like that. So one of the key features of penguins is that they're not very good at flying, right? I think we, can we all agree that that's probably not the best. If you want to tie a message to a bird's leg and get it to deliver it, a penguin might not be the bird you choose unless you may be delivering something underwater. So this is the kind of example here where we've got an a bird, but it's not the kind of thing that performs the way we expect it to. And this would cause some serious problems if we try to use this kind of thing in production. If we wanted to send a message via a penguin, we're going to have a tough time, right? So Paco, I'd like you, if possible, to explain this in a way that makes more sense than what I just did. Good luck. We have one mic. It's a bit, it's a bit, yeah. So let's get into the positive mutation testing. The first step of mutation testing, so we've, what Max just taught you is about introducing faults. So you can do, introduce faults manually, but this is a process that's, well, manually, and that means it's a lot of work and it's usually also not that reproducible. You don't want to do it manually. We want to do this in an automated manner. And this is where mutation testing comes in. In the first step of mutation testing, we're going to generate mutants. And each mutant is just a very tiny version of the production code. Mutate testing works with the concept of mutators. And mutators are the ones that are making these very small changes. So what we have in this case, we have a perfectly fine dove, which is the production code. And then at the end of it, we have a mutator, which generates, makes a tiny change, which kind of transforms this into Henry, our penguin who can't fly and we want our software to fly. So this would be a bad thing. So how does it look? Because this is still a bit abstract. And I'm going to give you some examples. This would be an example here. So for the Dutch, and I think for other countries as well, you have to be 17 years or older to apply for driving license. This could be code that's in your code base, which will fly, which is good. Now, the mutant would be the entire code base stays the same. And just this, this little piece change. So here we inverted the logic. This is, of course, the bug. This is something we don't want to manage and get into production. And actually just from this, this single line, we can already generate quite some mutants because we can not only invert the conditional operator, we can also change the conditional boundaries. So this means that we now have age larger than 17, which is a very nice bug that would force us to test the edge cases, the, the famous off by one errors, whether we forgot our equal operation in our conditional check. This, this will help you find that one. But it can also just return always true and false. We can generate quite some mutants for this this and we can do the same for, for example, mathematical operations. We can make each plus into a minus each multiplication into a division, etc. And therefore, we also have the ability to remove statements. So in this case, we have a method that adds a published date to some object. And we can also just remove the whole setter. And now this means that we have a bug in which we don't set this attribute anymore, which is something that, of course, we don't want to make the production. What's important to note here is that we mutate testing is always important that the code actually compiles because we're not testing the compiler. We're testing the code. The compiler is definitely out of scope here. Now at the end of step one, we have a lot of Henry's. We have a lot of mutants. And now Henry is going to try to fly. So he already got his wings ready to try to fly. And now for each Henry, we're going to run the test suite. And if this test suite fails, as Mike's already mentioned, then we have, then we, then it's good because then we expose Henry 40 is, which is just a penguin, something that can't fly. So this is great. The not so happy scenario is where the test passed, which means that Henry made it into production. And as we know, well, assuming that it also got through the PR, of course, we have more than just tests. Is that a problem? Because Henry is not supposed to fly. And then we have a bug into production. So this is something that you don't want. So this is the theory of mutation testing. And now, Max, you can tell a bit more about the frameworks. Sure. It works for me. Alrighty. So first of all, I just want to say I'm so proud of this prompt. I don't know why Dali chose this, but I'm really happy. Like, I think I typed in penguin trying to be a pigeon. And it came up with this. And I'm very happy. Okay. So moving on, yeah, frameworks. So this is going to get a little bit more specific to, you know, to actually implementing this stuff. So anyone here is a Python developer? Heck yeah. All right. Awesome. So I'm going to show you what I did in Python. So as you can see, you know, Parker's Java developer, he'll explain Java in a sec. But I'll just show you the kind of basic concepts, but using using my code and using what I did. So there's two kind of main supported packages that you can use in Python. It's not like, you know, in Java, there's like an enterprise thing you can get in Python, it's very community supported. So you're not, you know, you're not going to get big products. But what we do have are these kind of like nice and supported repose for mutation testing, which have just these packages. So I am not a professional, you know, in this, I'm not a doctor, I'm not a lawyer, I'm not a professional financial advisor. I'm just a person who, you know, has a certain opinion. And so my opinion of those two frameworks I showed you, there's Muttmutt and Cosmic Ray. And personally, I prefer Muttmutt. Because it's easy to get going. Oh, angry, angry face, shaking hairs. You don't like Muttmutt. We will talk later. So if we have time, we'll have a third presenter very shortly. So for now, while I've still got the mic, while I'm still, you know, while I'm still here, we'll talk about Muttmutt. And so this framework is quite simple to use. You know, it's the reason I kind of like it is because it's very much you install it and you run it. You know, there's a bit of config you can do. But really, it's quite simple just to get an idea of your code base and what's going on. So I want to show you this slide. This is just, this is the SDK that I maintain. And I'm showing you this because it's what I've applied my mutation testing to. So it's what I'm showing my examples. But basically, what we do is when we go here, I had this locally, first of all. So I installed Muttmutt with pip install. It's that simple. It's a Python package. It's what we do. If you went to my talk on malware earlier, you know why that's a bad idea, but I did it. So after we do that, we've got Muttmutt run, which just runs those tests for you. So when we do that, I'll show you what my output was. So when I ran this myself, I actually got a whole lot of this output. But really what's important here is that, first of all, it ran my entire test suite. And the reason it ran my entire test suite is just to check how long that's supposed to take and just to make sure everything does work as expected because there's various types of mutants to do with timeouts as well that we might want to consider. After it's done that, what it will do is it will generate mutants based on lines of code in my code base. That's what it will do. And once it's done that, it will run my tests against those. So there's a few different types and it can characterize them like this. So the first type is mutants that we've caught, not killed. We never kill a penguin. We love penguins. We catch them. We've caught them and put them back into the zoo. In this case, in this case, we've managed to say, yep, our test failed. That's great. But it could be the case where the mutant's timed out. So it's taken way too long for this code to run or it's taken enough time that we feel like we're not so great feeling great about that code. Alternatively, we might end up in a situation where the mutant survived and made it through our test code. In that case, it corresponds to a bug that might make it to production. So when I run this on my particular SDK, what I saw was that we checked the stuff. I created 682 mutants, versions of my code, with changes in them. And of that, it managed to catch 512 of those, but it managed to miss 170 of them. Now, if that's a good number or a bad number, we'll talk about later. But what's important now is let's just look at some of those mutants. So first of all, the ones that we actually did catch. Here's a couple of examples. So here's a line where basically we say, here are some valid message channels. So for our messages API, here are some valid messages ways you can send, right? But what's important here is that this basically removed the ability to send an SMS. And so when I tried to test that, it failed, which is what we want to see. Here's another one. Again, this is Python. So if you're a Java dev, don't worry, we'll look after you soon. And here's another one. We've got a decorator here, which basically runs this method. And we can see when we remove that, that will never happen. This is actually through Pydantic, if anyone has used that before. But basically, it means that we're not going to round a number anymore. And so when we test for that, a number doesn't get rounded and we catch that. But that is not really very interesting. That doesn't tell us anything. That tells us about this much, right? It doesn't tell us much at all. And the reason for that is that we kind of know that our tests work. We kind of know that our tests work for that. Thank you very much. I'll do the M&M thing. So we kind of know that our tests work for that. And so what's kind of useful is to see if we do what much show, we can see the mutants that we didn't catch. We can also do what more HTML, which shows us essentially an HTML coverage output as well. So we can see in a list all of the mutants that we didn't catch. So with more and more show, on that code base that I just showed you, we can see the 170 mutants that survived. It shows you the indices of these. And then we can manually specify the ones we want to look at. So here we can see, for example, that we changed the authentication method to fail. And we can see in this case we caught that because we did a test for authentication and it failed, so that's great. But more importantly though is you get this HTML output, which you can then explore. You can explore every method, every sort of module that you have. You can explore all the methods inside of there and which ones were and were caught. And you do that with the HTML command. So to do that, I'll just show you this is a mutant that we did not catch. And I want to show you why we didn't catch it and what it's going to do. And I'll just do that for a few just so you get some context if that's cool. So first of all, what this mutant did was it renamed the logger. Now I think logging is out of scope of my test code, so personally I don't care too much about anything related to logging. So I don't mind if I don't get a pass here. Here's another one. In this case, what we do is we've slightly changed the value of a constant. This is just part of a function signature. And again, we don't care about this that much. It isn't something that I really mind about. What's more important though is this mutant here. Because this is from our client class where we instantiate all of our different API classes. And you can see we actually set voice to non, so we completely remove that instantiation. And our tests are still passing. So the reason that actually still works, our code base still works even though this isn't testing that case, is because our tests actually test the voice API separately. They call it manually. But if our clients are calling it like this, maybe we should have a test for this as well. So this tells me, hey, maybe my test suite does need to be expanded. Does that make sense? I'm seeing some very, very like, yeah, yeah, that makes sense. I like it. Awesome. Okay, so if you are a Python Dev, this isn't the end of the talk, by the way, this is, you know, we've got some more context and we'll show you about CI. But if you are interested, then, you know, feel free to scan this. You've got like four seconds before I move slides. And as I move slides, I'll very slow motion, I'll be passing over this microphone. Because this was just Python, of course. And I think there are more non-Python Devs here. Just not Python. Let's see. We, of course, have more frameworks. I think they're from more languages out there. But I think they're the most important ones that I like personally. And pretty much the only really good one for Java is PyTest. And we also have Striker. And Striker is one that supports quite some languages. It supports JavaScript, C sharp, Scala. Of course, it doesn't do this in one two. Each one has their own dependencies because you can't have one solution for all. And what you particularly like about is that it supports JavaScript. And this brings this kind of back end heavy tool. Testing is usually mostly, I think, in front end can use some law when it comes to testing often. And this also brings the testing frameworks and the testing quality more to the front end. So that's what I really, really like. But we wanted to discuss a bit more. Mike's already sort of introduced it. So what is a good mutation score? We had the good hearts law where we sort of saw that code coverage can also lead to people implementing tests just to improve coverage, not just sort of defeats the purpose. You're doing it just for the metric, not for the actual purpose. And so how does this work with mutation score? Now, first, here's a picture of how PyTest report looks. So not to bash on Python, but much prettier and much clearer. Because now what, particularly what is interesting about this one, it shows you both the line coverage and the mutation coverage. We can ignore the test strain. And this shows us the sweet spots in a report. Because at the end, we have generated a lot of mutants. We have a lot of classes. And we only have very little time. So where are we going to look and investigate this report to see where the strains are? And the one that's the least interesting here is the notification service. The notification service also doesn't have any coverage. And if there is no coverage, then the mutants are also not interesting because you have a bigger problem here, which is you don't have tests at all for this. Then you have a choice. You have the proposal service and proposed service too. Now, the fact that they are named equally is because they're from another example. But proposed service too is the one that has 100% coverage and yet it didn't kill a single mutant. And this is the sweet spot because this means that we have code that is well tested. Or at least there's tests that covering this piece of code, but there is no single bug that was caught. So this deserves some attention because it means that we didn't fully test this. So these are the hotspots where you open a report. The ones with high line coverage and low mutation coverage, those that are the ones you really want to go through. Those are the ones that give you the findings to go to your team and say, hey, see, we need mutation testing because here, just these two classes alone already, it showed me that we need to improve our quality. Now, back to the score. So the example we had, we managed to kill 512 out of 682 mutants, which is about a 75% score. Now, the question is, is this a good score? Yes, yes, the golden answer. It depends. I love that answer. We already saw that 100% doesn't make sense. Things like logging and there are more things like generated code, et cetera, things that you don't necessarily want to test, even though there are mutants generated for it. Now, there are a couple of things you can, of course, do. You can also, depending on the language and the framework you use, you can tweak the mutation testing framework quite a bit. For example, the PyTest version actually, out of the box, already ignores and doesn't mutate any logging lines. And all the big frameworks are known to the tool. So anything that goes to SLF4J, it doesn't mutate it. So it also doesn't appear in your report, which is quite nice. And you can easily add things, like if you have a custom metrics facade somewhere, also typically something you don't want to cover unit tests, you can add that as well. So the thing here is that mutate testing is not really a score you want to achieve. It's more that the report can be interesting to look at and gives you sort of the nice spots. And once you completely set it up nice and you're familiar with the report, you can maybe start looking at the score, but definitely it shouldn't become an 80% goal or something like it was of code coverage. It just goes through the report instead. So now we've sort of discussed all the tools you need. We have discussed the frameworks. We have discussed the technology technology. And now it's time, of course, for you to fly. So we need to, how would you get started on this? And the thing I think that's important here is if you want to start, so you now think, oh, this is a great talk. I want to start with mutate testing. Depending on the size of your project, it might be wise to just start with just a single package. I've done this on projects that are a couple of, say, a thousand lines big. And even though in Max's example, we had 682 mutants, this can also, depending on the kind of code you have there, easily grow to tens of thousands of mutants, which can be quite slow. It can also be that there's something weird in your code base that doesn't really work well with mutate testing or something that's just extremely slow. An example that I had was that we hadn't thought it's good to keep in mind. It's actually just to take a sidestep. The mutate test framework also measures in the beginning for each individual test, which code it covers. So there's a nice graph from code, production code, to the tests. This helps us optimize because if we want to run the entire test suite, all the tests for every single mutant, it's going to take endless. Instead, because we know the coverage, we can also see if we mutate this one line, we know which test is covered. So we only need to execute those few tests. But what if you have tests that actually cover half your code base? So, for example, one of the things you can do in Java, if you're doing things with Spring, is you can actually boot up the entire Spring application and start doing acceptance tests from your unit tests, which is typically also quite, not necessarily the worst thing to do, but you now have a very slow test that does cover half your code base that will be executed for each single mutant. So these are things you want to get rid of. You want to exclude this acceptance test because otherwise you're going to be waiting endlessly. So my point about starting locally and starting small was start just with one package. Start with the utility package to see if it works, see if the report works for you. And then from there, you can expand at more packages and also you can see, oh, now it's taking 10 times as long. Why is this? And you can find the painful packages there. So as I mentioned, you can exclude some tests and also there are often candidates, certain pieces of code you might want to exclude. For example, there's no use in testing generated code, but also it might be that you have certain domain packages that contain just all your domain objects, your pojos, which is just setters and getters, something that you also typically want to exclude in your coverage report. You might also want to exclude this from code mutation, from mutation testing. And now that's done. We need to, so we talked about running it on your machine. We also can do this in the cloud, of course. Thank you. So as you can see, there's a pigeon on the slide and Paco, as we've said, has a personal vendetta, so I've taken over the section. So here we can see that we're going to run off our machine. So why would you want to run off your machine rather than on your machine? Any questions? Any ideas? What happens in the background? Yes. So what happens in the background is what was said there. Any other reason you might want to run non-locally? No. I got a couple. Oh, oh, hand. CI. CI. Yeah, you might want to end your CI system. In fact, that's what we'll be showing you. So foreshadowing. I like it. So yeah, it takes some time. And if you're using a CI system, you get to use those cloud resources. And also what's important is that you can, if you've got code which is maybe dependent on different OSes, might behave differently, you can specify different versions and platforms to run on as well. So stop talking. I hear you cry. Well, I'm afraid this is what we're here for. But unfortunately, I will be keeping talking. But what I will do is show it a bit of an example. So I applied this to my code base, my own code base myself, into my CI system. So you can see here, this is GitHub Actions. And I've got a piece of YAML, essentially. I've got this mutation test.yaml file. And what that does is set up an action for me to use. So this is something that I manually run. And I can do this here. So I manually run that. What it will do is do the mutation test non-locally, and it will produce some HTML output for me to look at. Now that seems, I'll go a little bit into what YAML does, but it seems like something that should be able for everyone to do themselves if they want to. So GitHub Actions, the reason I show that partly is because what we use, but also it's free for open source projects. So, you know, it's been useful for me because I've not had to pay for it. So, you know, just a heads up. See, I'll be showing you this with GitHub Actions really quickly. And I'll show you the YAML, I'll show you what I did. Hopefully by the end of this, the next couple of slides, you will see how easy it is actually to do this and why actually this is all good and maybe you want to try this yourself when you get home. So here's some YAML. First of all, this is our mutation test YAML. It's got one job. It's pretty simple. All we're doing, we're running on Ubuntu. We're running one specific Python version to do this. Depending on what your test base is. Oh, they're running a great time in there. Oh, there is thunder. So basically, we have, yeah, we're testing on one version for me because I just, my code doesn't vary enough between versions and OSes. So for me, it's not relevant to do that. But if we look at this next slide, I'll actually show you the workflow that goes through when I actually run this action. So first of all, we check out the code. Then we set up a version of Python with it. Once we've done that, we actually install our dependencies, including now MutMut as well as our regular dependencies. So now we've got the new mutation testing framework installed here as well on this kind of test runner. Then what we do is we run a mutation test. So we do that with MutMut run. But because we're running in a CI system, we don't want insanely long logs and due to how it's outputted, we want a no-progress flag there just to show that we're not seeing every line of output. We just see the important parts. We also have the CI flag, which is one of my only contributions to watch a open source, but I added that and I'm kind of proud of myself. So that basically means that you get a good, sensible output, like return code when you run in a CI system. Because the default for MutMut is, depending on the type of mutants that we call, it will give you a different exit code that is non-zero. So you kind of need to consider that or to suppress that with some scary, scary bash. That's why I did it first. That's why I wrote the flag. So once we've done that, we save it as HTML and we upload it so that you can access that yourself as well. So that's it. That's the whole piece of YAML. It's 35 lines and that set up the entire mutation test for my suite. So you can see, hopefully, does this seem kind of easy? I think it seems pretty gentle to do, at least in this sort of scope. If you're a Java dev with a 20,000 line project, you might want to be a bit more careful, but if you've got like a Python hobby thing, try it out, right? Try it out. What I would say, there are some more concerns. So first of all, I chose to run this manually when I want to run it. I chose not to run this on push or PR. I chose to run this manually. And the reason for that is that I don't expect my code base to sufficiently change between like small commits. And what I want to do is really not use like mutation test as a, you know, that kind of score, that 75%. I don't want that to be a metric for me that I've just turned into a target. I want it to stay as just a good idea, an indicator of what my tests are doing and what I could be doing better. So for me, I don't want to run every time, partly because it takes a blum in a long time, especially if I'm using multiple versions, which we also have to factor in. So you might want to do that. So I didn't. I just ran on a bun two and that was fine for me. But yeah, depends on what your code is, you might want to run on different platforms, right? So do factor that in and that will help you a lot if you're in a CI system. So the other question there is just should we run on push or PR? My opinion is no. I think there'll be people in this room who disagree with me, maybe say on a PR, you should run that or maybe there's some kind of metric you want to associate with score that you then want to look at in some way. For me, that's not how I use mutation testing. And I think what I want to get out of this is we don't want, we don't want a situation where mutation testing becomes a new target. We've got to get a certain score because then we're just kind of abstracting that problem of code coverage targets. We're just doing that all over again, right? So we're trying to avoid that. So the final question here is one I'll ask of Paco to explain is Paco, do you think I should use mutation testing as, you know, in my role as an audience member right now? What do you reckon? Yes. Well, so with stair already, it depends. There's some things you can ask yourself because needed is a question. So mutation testing is of course definitely not a silver bullet. It's something that the reports take quite some time to go through and of course it's quite computationally expensive to run the process. So the couple of questions that you can ask yourself that are quite obvious are for projects which have a really high quality goal. When people die or when a lot of money is lost or a combination of those two. So just to check, how many of you are working on a project that fits in these three? Okay, then you need this yesterday. Yes. But for the rest of the room, including me, there are some other questions we can ask yourself. And I think one of the important ones is are you using code coverage? Because if you're not using code coverage, let's start with that and let's first get coverage and get to see how many tests you have. Then the next question is, is how much value do you put into this? How much value do you get out of this code coverage? And what I mean with that is, do you make decisions based on it? It's like a definition of done on your sprint or is it with a build fail if there's 80% coverage or also in the case of due diligence, you're selling a company, not something we also would do. But then you would also want to know how well is the software I'm buying or how well is the software I'm working on. So here I would say, if you're using code coverage and you're making decisions based on that code coverage, then yes, you should at least have a look at mutations testing to see what the state is. You don't have to do this always. You don't have to put it in CI just once a year or go home, run it on your computer once just to see what the current state of your team is. Because it can very well be that you're on a high-performing team, which already has their PRs and everything so well and set up that it's not worth the time maybe. Because apparently the mutation testing report might even confirm that, the fact that you killed all the mutants. So that would be great. And there's another question that I like. What's the cost of fixing a bug? And I have two stories for this. My first example is, and that's the first company I worked for. This was an enterprise company that built software that was running on-premise at the customer and the customer was government. And then you're in the line with all these big integrators, which means you have feature freezes and moments where you can actually go to the customer and deploy your software, which is quite expensive, which also means that if you get a bug after this feature freeze or after this upgrade window, you have a serious issue because you need to go to the customer, you need to explain what went wrong. It's a very costly thing, a very costly issue. So here definitely, again, mutated testing can be quite interesting because a lot of money can be involved with the reputation. The other example that I had was more of a Greenfield project, which had more of the startup vibes where it was really of a feel fast and fix fast mentality. So this was a project where rather than focusing on getting our quality monitoring up to speed, we were mostly focusing on making sure that we could very quickly fix bugs as well. It was of course running on-premises in the cloud, so we could control it. And most important goal was there to just click a button and be in production again in 10 minutes and have active monitoring to see if anything goes wrong. Here the cost of fixing a bug is already a lot lower, which means that the reason to consider it might be a bit less, especially if you're again in a, for example, a high-performing team, which are all worked into each other, you know what you're doing, and you know you can trust each other because you're really, you're all professionals. Then maybe it's not worth to also spend half a day going through mutated testing report if you already know what the outcome is probably going to be. Then again, still do it once. These are two things you could consider and want to use it. So those are the things I want to give away with you is don't go into it blindly, just ask yourself, should I really use it? And then, yeah, for the last part, I'd just like to sum up. So I think hopefully if we've gotten here, we've kind of shown you what mutation testing is, why you might want to consider using it, and how you could possibly get going starting with running that, and also why you should. So if we're here, I just want to summarize, first of all, I'm sorry I used this penguin as an evil penguin earlier. It is adorable. I just like the Dali. When I asked it to give it some fake wings, it gave it three. It gave it this extra flipper here. I'm not sure what that was for. But what I'd like to do is just quickly summarize what we talked about today. First of all, mutation testing is a way to test your tests. It helps you to beat the problem where you're using Goodhart's law for coverage, right? So it saves you from just trying to turn coverage into a metric that you don't have as a target, right? You don't want to have code coverage. It's got to be above this threshold or we don't merge. That's not where we want to be. What we want to do is write good tests. So if you are going to do this yourself, an important part is to start small. So start locally on your machine. If you've got a big code base, then what you need to do really is run on a subset of that code base. If you've got a smaller code base like me, you're probably okay. But either way, start locally on your machine. You also want to run if you can. If you want asynchronous reports, if you want to use the resources available on a CI system, you can run mutation testing there. So do consider that if your stuff is in CI. And finally, I just want to say that mutants, hopefully we've demonstrated that mutants are like adorable penguins, right? They're valuable and they are wonderful, right? They're really great to use. They can tell you so much about your code. They're extremely useful. So don't fear them because you should love them. Thank you very much. If there are any questions, comments, objections, love mail, hate mail, anything, shout at me. So the question there was just if we can give some more examples of the kind of range of things that are possible to mutate. So essentially, the short answer is anything that will still make the code run. So in the Java case, the code compiled, in my case, the code run. So in this situation, things like, I'll give you some Python examples. For example, changing a variable from a certain type to another. So you might typecast something. You might, with a mathematical expression, you might add extra terms to that expression. You might change return types, error types. You might set things to non at any given time. You might call something and, yeah, remove parts of it, set things to zero. There's other stuff. Paco, can you think of any mutation testing Java examples? Yeah. So I think that the examples you gave for that, it sort of depends on the mutators you use. So you often, you can also, of each framework, you can also go through the list of mutators to see what kind of mutators are out there. What's good to keep in mind is that it does use some basic, fundamental strategies to determine if it can be mutated. Because for example, if you have a stream, and in this stream, you do some operations, which you could, in theory, cut out, you're still using the return value, which means that the mutation testing framework thinks, okay, let's keep that intact. The same goes for if you're using the spring reactor framework. You could do lots and lots of smart mutations in there, but it's not really there yet. It's really the rudimental things, the conditional logic, the mathematical logic, I think, are the two main things you'll see. And actually also, the count for often the most typical programming errors, I would say, awesome. I mean, anything you'd like to mutate, you know, because I guess a lot of these things are open source, you know, anything that you might be good if it did exist. Any other question, answer? So, two questions. The first one, could you comment on some framework for C and C++? And the second, what do you think about the idea to force developers or to require developers to use that code, which they have actually changed, just to save computational power on the entire machine and the server side is yet. Okay. So, the question there just for the live stream was two things. One is, are there any mutation testing frameworks for C or C++? I will say personally, I don't know. You haven't used C++ since my physics degree, so I couldn't tell you. I don't know if you know anything about that, Parker. I just did a quick Google search. That's all. So, I see there are some frames available for you. There is a project by the University of Luxembourg, which is called FAQAS. FAQAS. And it's not there quite yet, but it's something for C and also for a bit more for C++. Regarding your other question, by the way, so should you do it as a get hook? I'm given that it's, right, that was the question. Yeah, the idea was basically to require developers to run those mutation tests, but not the full set, but only mutation tests which are touching the machine, which are testing the unit tests, which are testing the code, which was modified in this one. Yeah. Yeah. So, actually there are some, depending on the framework, some have features which are incremental reports, so where they can just store the last state, then you can do a diff and use the results from your last execution to not execute all mutants and not generate all mutants, because it knows I only changed these production lines, so I only need to generate mutants for these, and I only changed these tests, so I only need to rerun the tests for these mutants, which can tremendously speed it up. But still using it as a get hook, I'm not sure. You can, by the way, use the same logic in CI as well to use the incremental reporting that saves a bit, despite and also supports a thing. Yeah. So, with what you have, you have caching, so you can cache those tests that you've done already, and if those cases aren't touched, then you're sort of good if that changes to your code don't affect that. So, that is an option. I would say, yeah, thank you. My opinion is, again, that maybe you don't want to explicitly mandate this on every run, and the reason for that is it's kind of like, it can then become kind of a metric that you try and optimize for or something to look at, whereas really, I think the nice way to use it is every now and then is how I would say so. I think if you've got a super critical project where that's really important, you may want to run it like that. For me, I don't need to, but I think that's really up to you, up to you as an implementer, what you want to do, and I think there's definitely a use case to do it in that way if that was important to you. Hand over here, hello. Yes, yes. Short answer is yes. Long answer is, depending on the actual framework, it might be that you add a comment to ignore it. Alternatively, there is a config file set up as well in Python where you can say, only mutate these paths, only do these things. What language do you use? That would be Striker. I would say yes. I haven't looked that much into Striker, but I think they make quite some nice stuff. It's quite generic for all frameworks. Exclude code for mutation, definitely yes. Depending on the framework, some even have nice things like exclude, do not mutate any calls to these classes, which is interesting for the logging, for example. Do not mutate any calls to this logging class, but same you can do for packages, class paths, et cetera. I'd say with Striker as well. One of my colleagues uses Striker because he maintains our.NET SDK, and he's actually also got mutation testing there in Striker. It does seem very perform and it seems like it does have a lot of those features as well. Honestly, if you're interested in TypeScript, I think there is something for you there. Cool. I think it might be free on open source repos. Sorry, another question. Yeah. Are specific mutated runs that are reproducible for debugging purposes? If you have a run and you see something you don't expect, can you reproduce that specific run with a given SC or something? Well, so the question is, how reproducible are the mutants? If you find one, then next run, is it still there? As far as I know, there shouldn't be any randomness in these mutant generations. It just goes over the code. Any condition that it finds that it can mutate, it will mutate. So the next time you run it, the same mutant should be there at the same place. So you could also see whether you killed it the next time. So yes, it's reproducible. I think that's the person who was first, sorry. That's a good question. I'll repeat that one. That's a good one. So the question there was, so mutation testing, we've talked all the big game, we've come up here and been like, hey, look, this is important, right? That's what we've talked about. And the question, which is a very valid question is, hey, if it's so important, why is no one supporting this in Python? Why is this all open source stuff, right? And you know what? I agree. That's a really good question. It's one I asked as well, to be honest. So no, I totally support the question. And the question I'll properly say is, yeah, why aren't employers supporting this? The short answer I think is to do with ROI, unfortunately. And that sucks, honestly, because I would like us to invest more time in certain things. And I think it's just to do with company priorities, right? So I would like to spend more time. Honestly, I had quite a lot of fun adding the one feature I did get to add. I'd quite like to do some more. But again, I've got this API to implement, so do I have time? Well, no one's funding me to do it. So unfortunately, it really is like, unless there's an obvious ROI, this just seems to be the way things go. Unfortunately, that's the way we've kind of structured our platforms and so on. So I gave a talk earlier on a PyPy and malware. And there was actually, the reason that that kind of is so prevalent and so possible on PyPy is because PyPy haven't really implemented many ways to actually protect against malware being uploaded. So currently, I've uploaded some malware to PyPy that you can get yourself. And actually, the reason that they, it's not real malware to be clear, it's a rick roll. But you saw that. But basically, what I'm trying to say here is that that project kind of didn't really get off the ground in terms of protecting users just because I think originally Facebook were funding it and they stopped funding and that just didn't then continue. So unfortunately, yeah, this is just kind of the way that things are in open source right now. And yeah, I do feel your pain. I do understand. But that's all I can really say. I'm afraid. Yeah, to quickly add to this, by the way, a Striker, for example, is actually funded, is backed by a company who, for example, let's work, interns work on it as well. So some frameworks actually are backed and there are people already investing it. So it's not always bad. But sorry, Nick, let's go to that side. So you showed some HTML reports for the results of the mutual test. Yes. We all know all managers and PDT teams love your KPIs. So I'm wondering, is there any integration or plugins to export the mutual test results in Sonar Cloud or other platforms? That's a really good question. So I'll answer quickly for Python and then I'll pass it over. Because in Python, the answer is quite short. The answer is unfortunately no. So the maintainers, the maintainer movement is not really a big fan of the CI system stuff and the report stuff. I think it's like, I think the premise there is, you know, I like running this locally and, you know, that's fair. And that is really how you can get started and get an idea. So in Python, unfortunately, the answer is no. But I think that Paco might have a more positive answer for you. Yeah. So let's also ask the, you were the maintainer of the other framework. So how does it go for the other part of the framework? So, okay. So I talked about not having that facility, that feature in Cosmic Ray. Is that a bit un-maintained? I don't want to say names, but it is a very, very large, 450 maybe vendor that uses it. And we asked them, can you fund development? They said, you know, no. And yeah. So they have shown this around at large events, like in front of thousands, thousands of people. But yeah. They're like, okay, we keep all the data stores there for whatever we find as it is. Yeah. So for the Python frameworks. Yeah. Yeah. Yeah. Yeah. So for the Python frameworks, there's not really CI plug-in support. I do know that, for example, for PyTest, there is support for Jenkins and Sonar. And I'm not sure about Stryker, but I know it's there. And usually these things are relatively easy to build yourself here as well, because all you have to do is, if there is a report in some JSON file, you can quite easily parse it and make a nice HTML form about this. Because again, they're all open for contributions. Do we have time for one last? I want to just add to that a little bit. Okay. Okay. Really quickly. First of all, with your question, yeah, I, when I originally implemented my mutt mutt thing, I did do it on PR. And in that case, I got a, you know, an action that would comment my coverage in a nice metricy way. And so you can, it's quite simple to do. So about, about cosmic, very first of all, that sucks. And I'm sorry. That's, that's blumming awful. Like, yeah, sadly, it does seem that a lot of, a lot of what we've kind of been discussing on the side of the room is just like, man, it would be good if some, you know, we all agree this is important, right? And it's useful for a lot of things. It'd be great if someone funded it. So I think, unfortunately with Python, that is the state of play. And it does suck. But yes, I, I get you. Any other questions? Finally, I think one, yes, hello. Can you write custom mutation to mutate your code in a custom logic? That's a really good question. So, sorry. That's, I will now repeat your really good question. The question was, so the question was, if I, if I have a certain type of mutant that I want to make, can I do that? So I would say with the stuff that I used in Python, the answer is you, you'd need to actually, you know, use the version you've downloaded, edit it yourself and add that stuff. So sadly, there's not an easy customizable way. That will be an awesome enhancement, though, that I would, I would like to see, you know, that would be cool. In other platforms, Paco, any other? I do know that I think Python did have some extension points. So it really depends. I know that the company I work for currently called Picnic, they're also working on extending it, for example, for reactive code. So there are some extension points often. So in short, it depends on the framework and how easy it is. Are we, we're done. Okay. We're at time. Thank you so much. This has been a really nice discussion as well. So thank you for sharing this. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.44, "text": " Hello. How's it going, everybody? A lot of people in this room didn't really expect", "tokens": [2425, 13, 1012, 311, 309, 516, 11, 2201, 30, 316, 688, 295, 561, 294, 341, 1808, 994, 380, 534, 2066], "temperature": 0.0, "avg_logprob": -0.20110425844297306, "compression_ratio": 1.5244444444444445, "no_speech_prob": 0.4338223338127136}, {"id": 1, "seek": 0, "start": 11.44, "end": 15.64, "text": " so many. This is wonderful. Thank you for coming to see us. I just want to say that", "tokens": [370, 867, 13, 639, 307, 3715, 13, 1044, 291, 337, 1348, 281, 536, 505, 13, 286, 445, 528, 281, 584, 300], "temperature": 0.0, "avg_logprob": -0.20110425844297306, "compression_ratio": 1.5244444444444445, "no_speech_prob": 0.4338223338127136}, {"id": 2, "seek": 0, "start": 15.64, "end": 19.64, "text": " we want to talk today about mutation testing. That's what we're here for. If you like this", "tokens": [321, 528, 281, 751, 965, 466, 27960, 4997, 13, 663, 311, 437, 321, 434, 510, 337, 13, 759, 291, 411, 341], "temperature": 0.0, "avg_logprob": -0.20110425844297306, "compression_ratio": 1.5244444444444445, "no_speech_prob": 0.4338223338127136}, {"id": 3, "seek": 0, "start": 19.64, "end": 27.48, "text": " penguin, does anyone not like this penguin? Just you. Okay. Personal vendetta noted.", "tokens": [45752, 11, 775, 2878, 406, 411, 341, 45752, 30, 1449, 291, 13, 1033, 13, 25317, 10169, 16593, 12964, 13], "temperature": 0.0, "avg_logprob": -0.20110425844297306, "compression_ratio": 1.5244444444444445, "no_speech_prob": 0.4338223338127136}, {"id": 4, "seek": 2748, "start": 27.48, "end": 33.2, "text": " This is a penguin generated by Dolly. Hopefully, it's friendly enough because this is going", "tokens": [639, 307, 257, 45752, 10833, 538, 1144, 13020, 13, 10429, 11, 309, 311, 9208, 1547, 570, 341, 307, 516], "temperature": 0.0, "avg_logprob": -0.1140923335634429, "compression_ratio": 1.673015873015873, "no_speech_prob": 0.0003198783961124718}, {"id": 5, "seek": 2748, "start": 33.2, "end": 36.64, "text": " to be part of our talk. We're going to see a lot of penguins in this talk. If anyone", "tokens": [281, 312, 644, 295, 527, 751, 13, 492, 434, 516, 281, 536, 257, 688, 295, 17289, 44790, 294, 341, 751, 13, 759, 2878], "temperature": 0.0, "avg_logprob": -0.1140923335634429, "compression_ratio": 1.673015873015873, "no_speech_prob": 0.0003198783961124718}, {"id": 6, "seek": 2748, "start": 36.64, "end": 40.64, "text": " has a personal objection to penguins, please speak now. Otherwise, if you like penguins,", "tokens": [575, 257, 2973, 35756, 281, 17289, 44790, 11, 1767, 1710, 586, 13, 10328, 11, 498, 291, 411, 17289, 44790, 11], "temperature": 0.0, "avg_logprob": -0.1140923335634429, "compression_ratio": 1.673015873015873, "no_speech_prob": 0.0003198783961124718}, {"id": 7, "seek": 2748, "start": 40.64, "end": 44.28, "text": " can I get a hand up just to see if we cool with that? Awesome. I've never seen so many", "tokens": [393, 286, 483, 257, 1011, 493, 445, 281, 536, 498, 321, 1627, 365, 300, 30, 10391, 13, 286, 600, 1128, 1612, 370, 867], "temperature": 0.0, "avg_logprob": -0.1140923335634429, "compression_ratio": 1.673015873015873, "no_speech_prob": 0.0003198783961124718}, {"id": 8, "seek": 2748, "start": 44.28, "end": 47.88, "text": " people want to put their hands up but not really be sure. I absolutely love the energy", "tokens": [561, 528, 281, 829, 641, 2377, 493, 457, 406, 534, 312, 988, 13, 286, 3122, 959, 264, 2281], "temperature": 0.0, "avg_logprob": -0.1140923335634429, "compression_ratio": 1.673015873015873, "no_speech_prob": 0.0003198783961124718}, {"id": 9, "seek": 2748, "start": 47.88, "end": 55.24, "text": " in this room. My name's Max. I'm this guy. As you can tell, I'm also this guy. I'm here", "tokens": [294, 341, 1808, 13, 1222, 1315, 311, 7402, 13, 286, 478, 341, 2146, 13, 1018, 291, 393, 980, 11, 286, 478, 611, 341, 2146, 13, 286, 478, 510], "temperature": 0.0, "avg_logprob": -0.1140923335634429, "compression_ratio": 1.673015873015873, "no_speech_prob": 0.0003198783961124718}, {"id": 10, "seek": 5524, "start": 55.24, "end": 59.440000000000005, "text": " to talk to you about mutation testing. I work for a company called Vonage and I'm a Python", "tokens": [281, 751, 281, 291, 466, 27960, 4997, 13, 286, 589, 337, 257, 2237, 1219, 20700, 609, 293, 286, 478, 257, 15329], "temperature": 0.0, "avg_logprob": -0.17576100609519266, "compression_ratio": 1.7225806451612904, "no_speech_prob": 0.0006790819461457431}, {"id": 11, "seek": 5524, "start": 59.440000000000005, "end": 64.6, "text": " developer advocate there. Now, what that means is that I maintain our Python tooling. I'm", "tokens": [10754, 14608, 456, 13, 823, 11, 437, 300, 1355, 307, 300, 286, 6909, 527, 15329, 46593, 13, 286, 478], "temperature": 0.0, "avg_logprob": -0.17576100609519266, "compression_ratio": 1.7225806451612904, "no_speech_prob": 0.0006790819461457431}, {"id": 12, "seek": 5524, "start": 64.6, "end": 67.76, "text": " here to talk about mutation testing because I've just kind of went through this process", "tokens": [510, 281, 751, 466, 27960, 4997, 570, 286, 600, 445, 733, 295, 1437, 807, 341, 1399], "temperature": 0.0, "avg_logprob": -0.17576100609519266, "compression_ratio": 1.7225806451612904, "no_speech_prob": 0.0006790819461457431}, {"id": 13, "seek": 5524, "start": 67.76, "end": 71.76, "text": " myself of understanding all this stuff and applying it to my own work. I want to show", "tokens": [2059, 295, 3701, 439, 341, 1507, 293, 9275, 309, 281, 452, 1065, 589, 13, 286, 528, 281, 855], "temperature": 0.0, "avg_logprob": -0.17576100609519266, "compression_ratio": 1.7225806451612904, "no_speech_prob": 0.0006790819461457431}, {"id": 14, "seek": 5524, "start": 71.76, "end": 76.16, "text": " you kind of how that went. But with me, not only do I have the tallest person in the room.", "tokens": [291, 733, 295, 577, 300, 1437, 13, 583, 365, 385, 11, 406, 787, 360, 286, 362, 264, 42075, 954, 294, 264, 1808, 13], "temperature": 0.0, "avg_logprob": -0.17576100609519266, "compression_ratio": 1.7225806451612904, "no_speech_prob": 0.0006790819461457431}, {"id": 15, "seek": 5524, "start": 76.16, "end": 82.36, "text": " Stand up straight. Stand up straight. This person is 196 centimeters tall. I'm like 177.", "tokens": [9133, 493, 2997, 13, 9133, 493, 2997, 13, 639, 954, 307, 7998, 23300, 6764, 13, 286, 478, 411, 3282, 22, 13], "temperature": 0.0, "avg_logprob": -0.17576100609519266, "compression_ratio": 1.7225806451612904, "no_speech_prob": 0.0006790819461457431}, {"id": 16, "seek": 8236, "start": 82.36, "end": 88.03999999999999, "text": " I'm not sure. I promise. I'm average in Britain. In this place, right? This person knows a", "tokens": [286, 478, 406, 988, 13, 286, 6228, 13, 286, 478, 4274, 294, 12960, 13, 682, 341, 1081, 11, 558, 30, 639, 954, 3255, 257], "temperature": 0.0, "avg_logprob": -0.149356760877244, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.00022850879759062082}, {"id": 17, "seek": 8236, "start": 88.03999999999999, "end": 91.0, "text": " lot more about mutation testing than me. I'm really not the expert here but I just want", "tokens": [688, 544, 466, 27960, 4997, 813, 385, 13, 286, 478, 534, 406, 264, 5844, 510, 457, 286, 445, 528], "temperature": 0.0, "avg_logprob": -0.149356760877244, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.00022850879759062082}, {"id": 18, "seek": 8236, "start": 91.0, "end": 96.52, "text": " to say this is Paco. Yes. I'm Paco. I work for Opavailu, a small consultancy company", "tokens": [281, 584, 341, 307, 10702, 78, 13, 1079, 13, 286, 478, 10702, 78, 13, 286, 589, 337, 12011, 706, 864, 84, 11, 257, 1359, 7189, 6717, 2237], "temperature": 0.0, "avg_logprob": -0.149356760877244, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.00022850879759062082}, {"id": 19, "seek": 8236, "start": 96.52, "end": 101.88, "text": " in the Netherlands. I got into mutation testing via my thesis. When I wrote my thesis on test", "tokens": [294, 264, 20873, 13, 286, 658, 666, 27960, 4997, 5766, 452, 22288, 13, 1133, 286, 4114, 452, 22288, 322, 1500], "temperature": 0.0, "avg_logprob": -0.149356760877244, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.00022850879759062082}, {"id": 20, "seek": 8236, "start": 101.88, "end": 107.36, "text": " effectiveness, I wanted to learn more about mutation. Also, after that, I got into speaking", "tokens": [21208, 11, 286, 1415, 281, 1466, 544, 466, 27960, 13, 2743, 11, 934, 300, 11, 286, 658, 666, 4124], "temperature": 0.0, "avg_logprob": -0.149356760877244, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.00022850879759062082}, {"id": 21, "seek": 8236, "start": 107.36, "end": 111.44, "text": " at conferences and more spreading the word about this. Quite awesome, too. I hope that", "tokens": [412, 22032, 293, 544, 15232, 264, 1349, 466, 341, 13, 20464, 3476, 11, 886, 13, 286, 1454, 300], "temperature": 0.0, "avg_logprob": -0.149356760877244, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.00022850879759062082}, {"id": 22, "seek": 11144, "start": 111.44, "end": 117.67999999999999, "text": " at the end of the talk, you have another cool tool in your toolbox to write better code.", "tokens": [412, 264, 917, 295, 264, 751, 11, 291, 362, 1071, 1627, 2290, 294, 428, 44593, 281, 2464, 1101, 3089, 13], "temperature": 0.0, "avg_logprob": -0.15229214101597882, "compression_ratio": 1.6996805111821087, "no_speech_prob": 0.00032323834602721035}, {"id": 23, "seek": 11144, "start": 117.67999999999999, "end": 122.44, "text": " Awesome. If we're cool with that, we do have to do the obligatory. These companies paid", "tokens": [10391, 13, 759, 321, 434, 1627, 365, 300, 11, 321, 360, 362, 281, 360, 264, 9270, 4745, 13, 1981, 3431, 4835], "temperature": 0.0, "avg_logprob": -0.15229214101597882, "compression_ratio": 1.6996805111821087, "no_speech_prob": 0.00032323834602721035}, {"id": 24, "seek": 11144, "start": 122.44, "end": 126.67999999999999, "text": " for us to come here and paid for our flights and stuff. What my company does, I'll just", "tokens": [337, 505, 281, 808, 510, 293, 4835, 337, 527, 21089, 293, 1507, 13, 708, 452, 2237, 775, 11, 286, 603, 445], "temperature": 0.0, "avg_logprob": -0.15229214101597882, "compression_ratio": 1.6996805111821087, "no_speech_prob": 0.00032323834602721035}, {"id": 25, "seek": 11144, "start": 126.67999999999999, "end": 131.64, "text": " quickly tell you. We do communications APIs as a service, basically. Things like SMS,", "tokens": [2661, 980, 291, 13, 492, 360, 15163, 21445, 382, 257, 2643, 11, 1936, 13, 9514, 411, 38107, 11], "temperature": 0.0, "avg_logprob": -0.15229214101597882, "compression_ratio": 1.6996805111821087, "no_speech_prob": 0.00032323834602721035}, {"id": 26, "seek": 11144, "start": 131.64, "end": 136.0, "text": " like voice calls, like video chats, like two-factor authentication, all via API. That's kind", "tokens": [411, 3177, 5498, 11, 411, 960, 38057, 11, 411, 732, 12, 69, 15104, 26643, 11, 439, 5766, 9362, 13, 663, 311, 733], "temperature": 0.0, "avg_logprob": -0.15229214101597882, "compression_ratio": 1.6996805111821087, "no_speech_prob": 0.00032323834602721035}, {"id": 27, "seek": 11144, "start": 136.0, "end": 140.2, "text": " of what we do. That's really just what I want to say. It is relevant because I will show", "tokens": [295, 437, 321, 360, 13, 663, 311, 534, 445, 437, 286, 528, 281, 584, 13, 467, 307, 7340, 570, 286, 486, 855], "temperature": 0.0, "avg_logprob": -0.15229214101597882, "compression_ratio": 1.6996805111821087, "no_speech_prob": 0.00032323834602721035}, {"id": 28, "seek": 14020, "start": 140.2, "end": 144.11999999999998, "text": " you what I actually applied this to, which was one of our SD case.", "tokens": [291, 437, 286, 767, 6456, 341, 281, 11, 597, 390, 472, 295, 527, 14638, 1389, 13], "temperature": 0.0, "avg_logprob": -0.20883675475618732, "compression_ratio": 1.6103896103896105, "no_speech_prob": 7.4441843025852e-05}, {"id": 29, "seek": 14020, "start": 144.11999999999998, "end": 147.95999999999998, "text": " For me, we don't actually have a product to sell. Also, definitely didn't fly here from", "tokens": [1171, 385, 11, 321, 500, 380, 767, 362, 257, 1674, 281, 3607, 13, 2743, 11, 2138, 994, 380, 3603, 510, 490], "temperature": 0.0, "avg_logprob": -0.20883675475618732, "compression_ratio": 1.6103896103896105, "no_speech_prob": 7.4441843025852e-05}, {"id": 30, "seek": 14020, "start": 147.95999999999998, "end": 154.2, "text": " the Netherlands just to make that sure. It's just a two-hour car drive. No, so we're here", "tokens": [264, 20873, 445, 281, 652, 300, 988, 13, 467, 311, 445, 257, 732, 12, 18048, 1032, 3332, 13, 883, 11, 370, 321, 434, 510], "temperature": 0.0, "avg_logprob": -0.20883675475618732, "compression_ratio": 1.6103896103896105, "no_speech_prob": 7.4441843025852e-05}, {"id": 31, "seek": 14020, "start": 154.2, "end": 158.0, "text": " just a consultancy company, and we really like to share knowledge. That's mostly the", "tokens": [445, 257, 7189, 6717, 2237, 11, 293, 321, 534, 411, 281, 2073, 3601, 13, 663, 311, 5240, 264], "temperature": 0.0, "avg_logprob": -0.20883675475618732, "compression_ratio": 1.6103896103896105, "no_speech_prob": 7.4441843025852e-05}, {"id": 32, "seek": 14020, "start": 158.0, "end": 161.51999999999998, "text": " reason why I'm here to tell you more and teach you more. It's quite simple.", "tokens": [1778, 983, 286, 478, 510, 281, 980, 291, 544, 293, 2924, 291, 544, 13, 467, 311, 1596, 2199, 13], "temperature": 0.0, "avg_logprob": -0.20883675475618732, "compression_ratio": 1.6103896103896105, "no_speech_prob": 7.4441843025852e-05}, {"id": 33, "seek": 14020, "start": 161.51999999999998, "end": 167.12, "text": " Yeah. He doesn't have the funding crush that I do, unfortunately. Luckily, we're all good.", "tokens": [865, 13, 634, 1177, 380, 362, 264, 6137, 10321, 300, 286, 360, 11, 7015, 13, 19726, 11, 321, 434, 439, 665, 13], "temperature": 0.0, "avg_logprob": -0.20883675475618732, "compression_ratio": 1.6103896103896105, "no_speech_prob": 7.4441843025852e-05}, {"id": 34, "seek": 16712, "start": 167.12, "end": 171.24, "text": " There's two of us on this talk. There's two of us here, and actually, there is a third", "tokens": [821, 311, 732, 295, 505, 322, 341, 751, 13, 821, 311, 732, 295, 505, 510, 11, 293, 767, 11, 456, 307, 257, 2636], "temperature": 0.0, "avg_logprob": -0.17608429590861002, "compression_ratio": 1.8225806451612903, "no_speech_prob": 0.0002918432292062789}, {"id": 35, "seek": 16712, "start": 171.24, "end": 175.0, "text": " person in this talk. We've seen a hint about this person already, but this person's really", "tokens": [954, 294, 341, 751, 13, 492, 600, 1612, 257, 12075, 466, 341, 954, 1217, 11, 457, 341, 954, 311, 534], "temperature": 0.0, "avg_logprob": -0.17608429590861002, "compression_ratio": 1.8225806451612903, "no_speech_prob": 0.0002918432292062789}, {"id": 36, "seek": 16712, "start": 175.0, "end": 178.68, "text": " the thing that's going to tie this whole talk together, and it's going to get us all feeling", "tokens": [264, 551, 300, 311, 516, 281, 7582, 341, 1379, 751, 1214, 11, 293, 309, 311, 516, 281, 483, 505, 439, 2633], "temperature": 0.0, "avg_logprob": -0.17608429590861002, "compression_ratio": 1.8225806451612903, "no_speech_prob": 0.0002918432292062789}, {"id": 37, "seek": 16712, "start": 178.68, "end": 183.28, "text": " good about mutation testing. This person's very important, so say hello to Henry. This", "tokens": [665, 466, 27960, 4997, 13, 639, 954, 311, 588, 1021, 11, 370, 584, 7751, 281, 11085, 13, 639], "temperature": 0.0, "avg_logprob": -0.17608429590861002, "compression_ratio": 1.8225806451612903, "no_speech_prob": 0.0002918432292062789}, {"id": 38, "seek": 16712, "start": 183.28, "end": 185.52, "text": " is Henry. Look at his little face.", "tokens": [307, 11085, 13, 2053, 412, 702, 707, 1851, 13], "temperature": 0.0, "avg_logprob": -0.17608429590861002, "compression_ratio": 1.8225806451612903, "no_speech_prob": 0.0002918432292062789}, {"id": 39, "seek": 16712, "start": 185.52, "end": 191.92000000000002, "text": " Thank you. Hands up if you think Henry's a cute AF penguin.", "tokens": [1044, 291, 13, 21369, 493, 498, 291, 519, 11085, 311, 257, 4052, 20389, 45752, 13], "temperature": 0.0, "avg_logprob": -0.17608429590861002, "compression_ratio": 1.8225806451612903, "no_speech_prob": 0.0002918432292062789}, {"id": 40, "seek": 19192, "start": 191.92, "end": 197.28, "text": " As for it, thank you very much. Yes, I'm glad we agree. I'm glad we're on the same page.", "tokens": [1018, 337, 309, 11, 1309, 291, 588, 709, 13, 1079, 11, 286, 478, 5404, 321, 3986, 13, 286, 478, 5404, 321, 434, 322, 264, 912, 3028, 13], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 41, "seek": 19192, "start": 197.28, "end": 201.2, "text": " Now, just some quick audience participation, because if you can't tell, we're quite big", "tokens": [823, 11, 445, 512, 1702, 4034, 13487, 11, 570, 498, 291, 393, 380, 980, 11, 321, 434, 1596, 955], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 42, "seek": 19192, "start": 201.2, "end": 205.72, "text": " on audience participation. So, quick question here. Who has heard of this stock photo, but", "tokens": [322, 4034, 13487, 13, 407, 11, 1702, 1168, 510, 13, 2102, 575, 2198, 295, 341, 4127, 5052, 11, 457], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 43, "seek": 19192, "start": 205.72, "end": 209.6, "text": " more importantly, who's heard of testing? This is just a check to see if we found the", "tokens": [544, 8906, 11, 567, 311, 2198, 295, 4997, 30, 639, 307, 445, 257, 1520, 281, 536, 498, 321, 1352, 264], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 44, "seek": 19192, "start": 209.6, "end": 215.04, "text": " room. Thank you very much. Great stuff. Okay. Who's heard about code coverage? A lot of", "tokens": [1808, 13, 1044, 291, 588, 709, 13, 3769, 1507, 13, 1033, 13, 2102, 311, 2198, 466, 3089, 9645, 30, 316, 688, 295], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 45, "seek": 19192, "start": 215.04, "end": 217.67999999999998, "text": " people maybe not everybody, and that's okay if you haven't. We're going to talk about", "tokens": [561, 1310, 406, 2201, 11, 293, 300, 311, 1392, 498, 291, 2378, 380, 13, 492, 434, 516, 281, 751, 466], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 46, "seek": 19192, "start": 217.67999999999998, "end": 221.67999999999998, "text": " code coverage, so please don't worry if you haven't. But yeah, it's awesome to know that", "tokens": [3089, 9645, 11, 370, 1767, 500, 380, 3292, 498, 291, 2378, 380, 13, 583, 1338, 11, 309, 311, 3476, 281, 458, 300], "temperature": 0.0, "avg_logprob": -0.1493775801225142, "compression_ratio": 1.8064516129032258, "no_speech_prob": 0.000287186645437032}, {"id": 47, "seek": 22168, "start": 221.68, "end": 226.20000000000002, "text": " some people have. That's a good starting point too. Okay, final one. I'm going to say other", "tokens": [512, 561, 362, 13, 663, 311, 257, 665, 2891, 935, 886, 13, 1033, 11, 2572, 472, 13, 286, 478, 516, 281, 584, 661], "temperature": 0.0, "avg_logprob": -0.24508099026150174, "compression_ratio": 1.648562300319489, "no_speech_prob": 0.00016436833539046347}, {"id": 48, "seek": 22168, "start": 226.20000000000002, "end": 231.88, "text": " than Vaia knowing about this talk, who's heard of mutation testing? Oh, quite a few. Yeah.", "tokens": [813, 16822, 654, 5276, 466, 341, 751, 11, 567, 311, 2198, 295, 27960, 4997, 30, 876, 11, 1596, 257, 1326, 13, 865, 13], "temperature": 0.0, "avg_logprob": -0.24508099026150174, "compression_ratio": 1.648562300319489, "no_speech_prob": 0.00016436833539046347}, {"id": 49, "seek": 22168, "start": 231.88, "end": 239.52, "text": " And now, quick break. Who actually was already using mutase testing? Ah, nice. There are", "tokens": [400, 586, 11, 1702, 1821, 13, 2102, 767, 390, 1217, 1228, 5839, 651, 4997, 30, 2438, 11, 1481, 13, 821, 366], "temperature": 0.0, "avg_logprob": -0.24508099026150174, "compression_ratio": 1.648562300319489, "no_speech_prob": 0.00016436833539046347}, {"id": 50, "seek": 22168, "start": 239.52, "end": 243.16, "text": " enough quick wins here, and hopefully you have some good experiences.", "tokens": [1547, 1702, 10641, 510, 11, 293, 4696, 291, 362, 512, 665, 5235, 13], "temperature": 0.0, "avg_logprob": -0.24508099026150174, "compression_ratio": 1.648562300319489, "no_speech_prob": 0.00016436833539046347}, {"id": 51, "seek": 22168, "start": 243.16, "end": 247.68, "text": " Yeah. So, really nice to see that people are familiar with the concept, but if you're not,", "tokens": [865, 13, 407, 11, 534, 1481, 281, 536, 300, 561, 366, 4963, 365, 264, 3410, 11, 457, 498, 291, 434, 406, 11], "temperature": 0.0, "avg_logprob": -0.24508099026150174, "compression_ratio": 1.648562300319489, "no_speech_prob": 0.00016436833539046347}, {"id": 52, "seek": 22168, "start": 247.68, "end": 250.20000000000002, "text": " it's also okay, because we're going to go through this like you don't know anything", "tokens": [309, 311, 611, 1392, 11, 570, 321, 434, 516, 281, 352, 807, 341, 411, 291, 500, 380, 458, 1340], "temperature": 0.0, "avg_logprob": -0.24508099026150174, "compression_ratio": 1.648562300319489, "no_speech_prob": 0.00016436833539046347}, {"id": 53, "seek": 25020, "start": 250.2, "end": 253.44, "text": " at all, because when I started doing this, you know, a few months ago, I didn't know", "tokens": [412, 439, 11, 570, 562, 286, 1409, 884, 341, 11, 291, 458, 11, 257, 1326, 2493, 2057, 11, 286, 994, 380, 458], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 54, "seek": 25020, "start": 253.44, "end": 256.15999999999997, "text": " anything at all, and so I want to take you through that journey as well, and that's what", "tokens": [1340, 412, 439, 11, 293, 370, 286, 528, 281, 747, 291, 807, 300, 4671, 382, 731, 11, 293, 300, 311, 437], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 55, "seek": 25020, "start": 256.15999999999997, "end": 261.28, "text": " we're going to do. But before that, what I want to do first is give us some background,", "tokens": [321, 434, 516, 281, 360, 13, 583, 949, 300, 11, 437, 286, 528, 281, 360, 700, 307, 976, 505, 512, 3678, 11], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 56, "seek": 25020, "start": 261.28, "end": 263.92, "text": " and what I actually really want to do is pass to Paco, who knows a lot more about this than", "tokens": [293, 437, 286, 767, 534, 528, 281, 360, 307, 1320, 281, 10702, 78, 11, 567, 3255, 257, 688, 544, 466, 341, 813], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 57, "seek": 25020, "start": 263.92, "end": 268.56, "text": " me, so I'm going to pass to you right now. Yes. This is going to be some improvising.", "tokens": [385, 11, 370, 286, 478, 516, 281, 1320, 281, 291, 558, 586, 13, 1079, 13, 639, 307, 516, 281, 312, 512, 29424, 3436, 13], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 58, "seek": 25020, "start": 268.56, "end": 274.08, "text": " Good work. Good luck. I'm going to drink water with this. I'll feed you. Yeah. Nice. Great.", "tokens": [2205, 589, 13, 2205, 3668, 13, 286, 478, 516, 281, 2822, 1281, 365, 341, 13, 286, 603, 3154, 291, 13, 865, 13, 5490, 13, 3769, 13], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 59, "seek": 25020, "start": 274.08, "end": 277.71999999999997, "text": " So, yeah, we're first going to talk a bit about testing in general, and then we're going", "tokens": [407, 11, 1338, 11, 321, 434, 700, 516, 281, 751, 257, 857, 466, 4997, 294, 2674, 11, 293, 550, 321, 434, 516], "temperature": 0.0, "avg_logprob": -0.1901466805594308, "compression_ratio": 1.8181818181818181, "no_speech_prob": 0.0005113316001370549}, {"id": 60, "seek": 27772, "start": 277.72, "end": 283.04, "text": " to more specifically talk about unit testing. So, just a quick check. Does anybody know", "tokens": [281, 544, 4682, 751, 466, 4985, 4997, 13, 407, 11, 445, 257, 1702, 1520, 13, 4402, 4472, 458], "temperature": 0.0, "avg_logprob": -0.12985889293529368, "compression_ratio": 1.706070287539936, "no_speech_prob": 0.0001577926304889843}, {"id": 61, "seek": 27772, "start": 283.04, "end": 287.92, "text": " what a unit test is? That's great. I don't have to explain that part. For those who don't", "tokens": [437, 257, 4985, 1500, 307, 30, 663, 311, 869, 13, 286, 500, 380, 362, 281, 2903, 300, 644, 13, 1171, 729, 567, 500, 380], "temperature": 0.0, "avg_logprob": -0.12985889293529368, "compression_ratio": 1.706070287539936, "no_speech_prob": 0.0001577926304889843}, {"id": 62, "seek": 27772, "start": 287.92, "end": 292.04, "text": " know, it's the smallest possible test you can write in your code base, just in one method,", "tokens": [458, 11, 309, 311, 264, 16998, 1944, 1500, 291, 393, 2464, 294, 428, 3089, 3096, 11, 445, 294, 472, 3170, 11], "temperature": 0.0, "avg_logprob": -0.12985889293529368, "compression_ratio": 1.706070287539936, "no_speech_prob": 0.0001577926304889843}, {"id": 63, "seek": 27772, "start": 292.04, "end": 296.28000000000003, "text": " and you write one test for it to test the outcome of that method. Now, there are many", "tokens": [293, 291, 2464, 472, 1500, 337, 309, 281, 1500, 264, 9700, 295, 300, 3170, 13, 823, 11, 456, 366, 867], "temperature": 0.0, "avg_logprob": -0.12985889293529368, "compression_ratio": 1.706070287539936, "no_speech_prob": 0.0001577926304889843}, {"id": 64, "seek": 27772, "start": 296.28000000000003, "end": 301.92, "text": " different reasons why we're writing unit tests, and I think one of them, my favorite or the", "tokens": [819, 4112, 983, 321, 434, 3579, 4985, 6921, 11, 293, 286, 519, 472, 295, 552, 11, 452, 2954, 420, 264], "temperature": 0.0, "avg_logprob": -0.12985889293529368, "compression_ratio": 1.706070287539936, "no_speech_prob": 0.0001577926304889843}, {"id": 65, "seek": 27772, "start": 301.92, "end": 306.8, "text": " most used one is for maintenance. We write tests because we want to be confident in the", "tokens": [881, 1143, 472, 307, 337, 11258, 13, 492, 2464, 6921, 570, 321, 528, 281, 312, 6679, 294, 264], "temperature": 0.0, "avg_logprob": -0.12985889293529368, "compression_ratio": 1.706070287539936, "no_speech_prob": 0.0001577926304889843}, {"id": 66, "seek": 30680, "start": 306.8, "end": 310.6, "text": " changes we make to our code base. So, whenever we make a small change, we add a new field", "tokens": [2962, 321, 652, 281, 527, 3089, 3096, 13, 407, 11, 5699, 321, 652, 257, 1359, 1319, 11, 321, 909, 257, 777, 2519], "temperature": 0.0, "avg_logprob": -0.1162521693171287, "compression_ratio": 1.6566037735849057, "no_speech_prob": 3.7534249713644385e-05}, {"id": 67, "seek": 30680, "start": 310.6, "end": 315.12, "text": " to some endpoint that we know that we didn't completely break the database integration", "tokens": [281, 512, 35795, 300, 321, 458, 300, 321, 994, 380, 2584, 1821, 264, 8149, 10980], "temperature": 0.0, "avg_logprob": -0.1162521693171287, "compression_ratio": 1.6566037735849057, "no_speech_prob": 3.7534249713644385e-05}, {"id": 68, "seek": 30680, "start": 315.12, "end": 321.68, "text": " because it can happen at times. So, yeah, that's very important maintenance regression", "tokens": [570, 309, 393, 1051, 412, 1413, 13, 407, 11, 1338, 11, 300, 311, 588, 1021, 11258, 24590], "temperature": 0.0, "avg_logprob": -0.1162521693171287, "compression_ratio": 1.6566037735849057, "no_speech_prob": 3.7534249713644385e-05}, {"id": 69, "seek": 30680, "start": 321.68, "end": 328.2, "text": " testing, but there are more reasons. One I like also a lot is tests can actually serve", "tokens": [4997, 11, 457, 456, 366, 544, 4112, 13, 1485, 286, 411, 611, 257, 688, 307, 6921, 393, 767, 4596], "temperature": 0.0, "avg_logprob": -0.1162521693171287, "compression_ratio": 1.6566037735849057, "no_speech_prob": 3.7534249713644385e-05}, {"id": 70, "seek": 30680, "start": 328.2, "end": 335.44, "text": " documentation purposes as documentation. You can use tests to describe certain scenarios", "tokens": [14333, 9932, 382, 14333, 13, 509, 393, 764, 6921, 281, 6786, 1629, 15077], "temperature": 0.0, "avg_logprob": -0.1162521693171287, "compression_ratio": 1.6566037735849057, "no_speech_prob": 3.7534249713644385e-05}, {"id": 71, "seek": 33544, "start": 335.44, "end": 339.64, "text": " in your code base that when you have a specific test for that, it already makes clear this", "tokens": [294, 428, 3089, 3096, 300, 562, 291, 362, 257, 2685, 1500, 337, 300, 11, 309, 1217, 1669, 1850, 341], "temperature": 0.0, "avg_logprob": -0.14930357499556107, "compression_ratio": 1.792, "no_speech_prob": 0.00011009498848579824}, {"id": 72, "seek": 33544, "start": 339.64, "end": 346.24, "text": " is intended behavior. I have an example for this, which is I worked for a company where", "tokens": [307, 10226, 5223, 13, 286, 362, 364, 1365, 337, 341, 11, 597, 307, 286, 2732, 337, 257, 2237, 689], "temperature": 0.0, "avg_logprob": -0.14930357499556107, "compression_ratio": 1.792, "no_speech_prob": 0.00011009498848579824}, {"id": 73, "seek": 33544, "start": 346.24, "end": 352.92, "text": " we had an endpoint that returned warehouses, and these warehouses, just a domain object,", "tokens": [321, 632, 364, 35795, 300, 8752, 17464, 29578, 11, 293, 613, 17464, 29578, 11, 445, 257, 9274, 2657, 11], "temperature": 0.0, "avg_logprob": -0.14930357499556107, "compression_ratio": 1.792, "no_speech_prob": 0.00011009498848579824}, {"id": 74, "seek": 33544, "start": 352.92, "end": 356.32, "text": " had a soft delete. So, there was a flag in there that indicated whether it was deleted", "tokens": [632, 257, 2787, 12097, 13, 407, 11, 456, 390, 257, 7166, 294, 456, 300, 16176, 1968, 309, 390, 22981], "temperature": 0.0, "avg_logprob": -0.14930357499556107, "compression_ratio": 1.792, "no_speech_prob": 0.00011009498848579824}, {"id": 75, "seek": 33544, "start": 356.32, "end": 362.96, "text": " or not. At some point, so this endpoint returned both deleted and non-deleted warehouses, and", "tokens": [420, 406, 13, 1711, 512, 935, 11, 370, 341, 35795, 8752, 1293, 22981, 293, 2107, 12, 18105, 10993, 17464, 29578, 11, 293], "temperature": 0.0, "avg_logprob": -0.14930357499556107, "compression_ratio": 1.792, "no_speech_prob": 0.00011009498848579824}, {"id": 76, "seek": 36296, "start": 362.96, "end": 368.08, "text": " at some point over time, as we were working on it, a new guy came in and looked at it", "tokens": [412, 512, 935, 670, 565, 11, 382, 321, 645, 1364, 322, 309, 11, 257, 777, 2146, 1361, 294, 293, 2956, 412, 309], "temperature": 0.0, "avg_logprob": -0.16303586959838867, "compression_ratio": 1.7457627118644068, "no_speech_prob": 5.045708894613199e-05}, {"id": 77, "seek": 36296, "start": 368.08, "end": 372.32, "text": " and said, hmm, that's strange. Why are we returning deleted warehouses? Why would you", "tokens": [293, 848, 11, 16478, 11, 300, 311, 5861, 13, 1545, 366, 321, 12678, 22981, 17464, 29578, 30, 1545, 576, 291], "temperature": 0.0, "avg_logprob": -0.16303586959838867, "compression_ratio": 1.7457627118644068, "no_speech_prob": 5.045708894613199e-05}, {"id": 78, "seek": 36296, "start": 372.32, "end": 377.35999999999996, "text": " want that? It was a fair question because we also forgot, and there was only one test", "tokens": [528, 300, 30, 467, 390, 257, 3143, 1168, 570, 321, 611, 5298, 11, 293, 456, 390, 787, 472, 1500], "temperature": 0.0, "avg_logprob": -0.16303586959838867, "compression_ratio": 1.7457627118644068, "no_speech_prob": 5.045708894613199e-05}, {"id": 79, "seek": 36296, "start": 377.35999999999996, "end": 381.44, "text": " which tested the success flow, and you can already kind of guess here a bit. So, the", "tokens": [597, 8246, 264, 2245, 3095, 11, 293, 291, 393, 1217, 733, 295, 2041, 510, 257, 857, 13, 407, 11, 264], "temperature": 0.0, "avg_logprob": -0.16303586959838867, "compression_ratio": 1.7457627118644068, "no_speech_prob": 5.045708894613199e-05}, {"id": 80, "seek": 36296, "start": 381.44, "end": 385.96, "text": " success flow in this case meant they only returned non-deleted warehouses in the test.", "tokens": [2245, 3095, 294, 341, 1389, 4140, 436, 787, 8752, 2107, 12, 18105, 10993, 17464, 29578, 294, 264, 1500, 13], "temperature": 0.0, "avg_logprob": -0.16303586959838867, "compression_ratio": 1.7457627118644068, "no_speech_prob": 5.045708894613199e-05}, {"id": 81, "seek": 36296, "start": 385.96, "end": 390.47999999999996, "text": " So he made the changes, and we all thought, oh, this makes sense. It looks broken. Of", "tokens": [407, 415, 1027, 264, 2962, 11, 293, 321, 439, 1194, 11, 1954, 11, 341, 1669, 2020, 13, 467, 1542, 5463, 13, 2720], "temperature": 0.0, "avg_logprob": -0.16303586959838867, "compression_ratio": 1.7457627118644068, "no_speech_prob": 5.045708894613199e-05}, {"id": 82, "seek": 39048, "start": 390.48, "end": 394.12, "text": " course, they didn't check with product management, the product team deployed it, and then you", "tokens": [1164, 11, 436, 994, 380, 1520, 365, 1674, 4592, 11, 264, 1674, 1469, 17826, 309, 11, 293, 550, 291], "temperature": 0.0, "avg_logprob": -0.2007599610548753, "compression_ratio": 1.7467948717948718, "no_speech_prob": 0.00015394584625028074}, {"id": 83, "seek": 39048, "start": 394.12, "end": 399.24, "text": " can guess, of course, this was broken, so we had to revert it. And the whole lesson here", "tokens": [393, 2041, 11, 295, 1164, 11, 341, 390, 5463, 11, 370, 321, 632, 281, 319, 3281, 309, 13, 400, 264, 1379, 6898, 510], "temperature": 0.0, "avg_logprob": -0.2007599610548753, "compression_ratio": 1.7467948717948718, "no_speech_prob": 0.00015394584625028074}, {"id": 84, "seek": 39048, "start": 399.24, "end": 404.04, "text": " was just one test which also included a negative scenario with tests of warehouses that were", "tokens": [390, 445, 472, 1500, 597, 611, 5556, 257, 3671, 9005, 365, 6921, 295, 17464, 29578, 300, 645], "temperature": 0.0, "avg_logprob": -0.2007599610548753, "compression_ratio": 1.7467948717948718, "no_speech_prob": 0.00015394584625028074}, {"id": 85, "seek": 39048, "start": 404.04, "end": 408.12, "text": " deleted could have already been a trigger to think like, hey, this behavior is intended,", "tokens": [22981, 727, 362, 1217, 668, 257, 7875, 281, 519, 411, 11, 4177, 11, 341, 5223, 307, 10226, 11], "temperature": 0.0, "avg_logprob": -0.2007599610548753, "compression_ratio": 1.7467948717948718, "no_speech_prob": 0.00015394584625028074}, {"id": 86, "seek": 39048, "start": 408.12, "end": 413.40000000000003, "text": " and that's where documentation, so where tests can serve as sort of a documentation purpose.", "tokens": [293, 300, 311, 689, 14333, 11, 370, 689, 6921, 393, 4596, 382, 1333, 295, 257, 14333, 4334, 13], "temperature": 0.0, "avg_logprob": -0.2007599610548753, "compression_ratio": 1.7467948717948718, "no_speech_prob": 0.00015394584625028074}, {"id": 87, "seek": 39048, "start": 413.40000000000003, "end": 417.08000000000004, "text": " Also very useful in getting to learn a new code base. So, whenever you're on a new code", "tokens": [2743, 588, 4420, 294, 1242, 281, 1466, 257, 777, 3089, 3096, 13, 407, 11, 5699, 291, 434, 322, 257, 777, 3089], "temperature": 0.0, "avg_logprob": -0.2007599610548753, "compression_ratio": 1.7467948717948718, "no_speech_prob": 0.00015394584625028074}, {"id": 88, "seek": 41708, "start": 417.08, "end": 421.71999999999997, "text": " base, you have this very complicated method. A test can help you step through the method", "tokens": [3096, 11, 291, 362, 341, 588, 6179, 3170, 13, 316, 1500, 393, 854, 291, 1823, 807, 264, 3170], "temperature": 0.0, "avg_logprob": -0.1884716000177164, "compression_ratio": 1.6346153846153846, "no_speech_prob": 8.026988507481292e-05}, {"id": 89, "seek": 41708, "start": 421.71999999999997, "end": 425.76, "text": " to sort of explain what's going on, for example, while debugging it.", "tokens": [281, 1333, 295, 2903, 437, 311, 516, 322, 11, 337, 1365, 11, 1339, 45592, 309, 13], "temperature": 0.0, "avg_logprob": -0.1884716000177164, "compression_ratio": 1.6346153846153846, "no_speech_prob": 8.026988507481292e-05}, {"id": 90, "seek": 41708, "start": 425.76, "end": 431.64, "text": " Now, another one, and this one is here for the consultant. So, who here works as a consultant?", "tokens": [823, 11, 1071, 472, 11, 293, 341, 472, 307, 510, 337, 264, 24676, 13, 407, 11, 567, 510, 1985, 382, 257, 24676, 30], "temperature": 0.0, "avg_logprob": -0.1884716000177164, "compression_ratio": 1.6346153846153846, "no_speech_prob": 8.026988507481292e-05}, {"id": 91, "seek": 41708, "start": 431.64, "end": 438.47999999999996, "text": " Oh, not that many. Wow. Because we're sort of the root of all evil always. We tend to", "tokens": [876, 11, 406, 300, 867, 13, 3153, 13, 1436, 321, 434, 1333, 295, 264, 5593, 295, 439, 6724, 1009, 13, 492, 3928, 281], "temperature": 0.0, "avg_logprob": -0.1884716000177164, "compression_ratio": 1.6346153846153846, "no_speech_prob": 8.026988507481292e-05}, {"id": 92, "seek": 41708, "start": 438.47999999999996, "end": 444.4, "text": " run to the next project, and we don't have to maintain our own code often, not always.", "tokens": [1190, 281, 264, 958, 1716, 11, 293, 321, 500, 380, 362, 281, 6909, 527, 1065, 3089, 2049, 11, 406, 1009, 13], "temperature": 0.0, "avg_logprob": -0.1884716000177164, "compression_ratio": 1.6346153846153846, "no_speech_prob": 8.026988507481292e-05}, {"id": 93, "seek": 44440, "start": 444.4, "end": 452.2, "text": " So I have this nice quote that's mostly also for us. Keep in mind that you're not doing", "tokens": [407, 286, 362, 341, 1481, 6513, 300, 311, 5240, 611, 337, 505, 13, 5527, 294, 1575, 300, 291, 434, 406, 884], "temperature": 0.0, "avg_logprob": -0.11351993528463072, "compression_ratio": 1.778225806451613, "no_speech_prob": 2.542659240134526e-05}, {"id": 94, "seek": 44440, "start": 452.2, "end": 459.15999999999997, "text": " this only for yourself. I had a colleague who once told me, keep in mind that you always", "tokens": [341, 787, 337, 1803, 13, 286, 632, 257, 13532, 567, 1564, 1907, 385, 11, 1066, 294, 1575, 300, 291, 1009], "temperature": 0.0, "avg_logprob": -0.11351993528463072, "compression_ratio": 1.778225806451613, "no_speech_prob": 2.542659240134526e-05}, {"id": 95, "seek": 44440, "start": 459.15999999999997, "end": 462.28, "text": " have this point in your development process where you think, okay, should I write a unit", "tokens": [362, 341, 935, 294, 428, 3250, 1399, 689, 291, 519, 11, 1392, 11, 820, 286, 2464, 257, 4985], "temperature": 0.0, "avg_logprob": -0.11351993528463072, "compression_ratio": 1.778225806451613, "no_speech_prob": 2.542659240134526e-05}, {"id": 96, "seek": 44440, "start": 462.28, "end": 465.96, "text": " test for this? It's going to be a painful unit test. I know that it works. I do really", "tokens": [1500, 337, 341, 30, 467, 311, 516, 281, 312, 257, 11697, 4985, 1500, 13, 286, 458, 300, 309, 1985, 13, 286, 360, 534], "temperature": 0.0, "avg_logprob": -0.11351993528463072, "compression_ratio": 1.778225806451613, "no_speech_prob": 2.542659240134526e-05}, {"id": 97, "seek": 44440, "start": 465.96, "end": 470.71999999999997, "text": " have to document it. We all know how it works. Yeah, sure, we all know how it works, but", "tokens": [362, 281, 4166, 309, 13, 492, 439, 458, 577, 309, 1985, 13, 865, 11, 988, 11, 321, 439, 458, 577, 309, 1985, 11, 457], "temperature": 0.0, "avg_logprob": -0.11351993528463072, "compression_ratio": 1.778225806451613, "no_speech_prob": 2.542659240134526e-05}, {"id": 98, "seek": 47072, "start": 470.72, "end": 476.52000000000004, "text": " we also leave the project and then go on and go to another project. We as consultants.", "tokens": [321, 611, 1856, 264, 1716, 293, 550, 352, 322, 293, 352, 281, 1071, 1716, 13, 492, 382, 38935, 13], "temperature": 0.0, "avg_logprob": -0.16191768646240234, "compression_ratio": 1.901023890784983, "no_speech_prob": 7.696841203141958e-05}, {"id": 99, "seek": 47072, "start": 476.52000000000004, "end": 481.68, "text": " And I will speak to myself, what would I do if I would be the next person? So what would", "tokens": [400, 286, 486, 1710, 281, 2059, 11, 437, 576, 286, 360, 498, 286, 576, 312, 264, 958, 954, 30, 407, 437, 576], "temperature": 0.0, "avg_logprob": -0.16191768646240234, "compression_ratio": 1.901023890784983, "no_speech_prob": 7.696841203141958e-05}, {"id": 100, "seek": 47072, "start": 481.68, "end": 486.48, "text": " I do if I were the next John or Jane Doe working on this project? So tests are not there just", "tokens": [286, 360, 498, 286, 645, 264, 958, 2619, 420, 13048, 1144, 68, 1364, 322, 341, 1716, 30, 407, 6921, 366, 406, 456, 445], "temperature": 0.0, "avg_logprob": -0.16191768646240234, "compression_ratio": 1.901023890784983, "no_speech_prob": 7.696841203141958e-05}, {"id": 101, "seek": 47072, "start": 486.48, "end": 491.04, "text": " for you, but also for the next person working. I would actually like to jump in here, because", "tokens": [337, 291, 11, 457, 611, 337, 264, 958, 954, 1364, 13, 286, 576, 767, 411, 281, 3012, 294, 510, 11, 570], "temperature": 0.0, "avg_logprob": -0.16191768646240234, "compression_ratio": 1.901023890784983, "no_speech_prob": 7.696841203141958e-05}, {"id": 102, "seek": 47072, "start": 491.04, "end": 495.92, "text": " I've been that person. Thank you. I've been the person who works on a project after someone's", "tokens": [286, 600, 668, 300, 954, 13, 1044, 291, 13, 286, 600, 668, 264, 954, 567, 1985, 322, 257, 1716, 934, 1580, 311], "temperature": 0.0, "avg_logprob": -0.16191768646240234, "compression_ratio": 1.901023890784983, "no_speech_prob": 7.696841203141958e-05}, {"id": 103, "seek": 47072, "start": 495.92, "end": 500.44000000000005, "text": " left that. And honestly, if you have good documentation or if you don't have that, if you have good", "tokens": [1411, 300, 13, 400, 6095, 11, 498, 291, 362, 665, 14333, 420, 498, 291, 500, 380, 362, 300, 11, 498, 291, 362, 665], "temperature": 0.0, "avg_logprob": -0.16191768646240234, "compression_ratio": 1.901023890784983, "no_speech_prob": 7.696841203141958e-05}, {"id": 104, "seek": 50044, "start": 500.44, "end": 505.12, "text": " testing, thank you, you do your water break. So if you have good testing, it can really", "tokens": [4997, 11, 1309, 291, 11, 291, 360, 428, 1281, 1821, 13, 407, 498, 291, 362, 665, 4997, 11, 309, 393, 534], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 105, "seek": 50044, "start": 505.12, "end": 509.6, "text": " help you understand what a project does. And so when I came to a certain project recently,", "tokens": [854, 291, 1223, 437, 257, 1716, 775, 13, 400, 370, 562, 286, 1361, 281, 257, 1629, 1716, 3938, 11], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 106, "seek": 50044, "start": 509.6, "end": 513.16, "text": " I didn't have necessarily the kind of testing that I would have liked to really document", "tokens": [286, 994, 380, 362, 4725, 264, 733, 295, 4997, 300, 286, 576, 362, 4501, 281, 534, 4166], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 107, "seek": 50044, "start": 513.16, "end": 517.0, "text": " my code that well. And so like, honestly, if I'd had someone like Parker, who actually", "tokens": [452, 3089, 300, 731, 13, 400, 370, 411, 11, 6095, 11, 498, 286, 1116, 632, 1580, 411, 20155, 11, 567, 767], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 108, "seek": 50044, "start": 517.0, "end": 520.16, "text": " was a bit more conscientious with what they tested, that would have really helped me get", "tokens": [390, 257, 857, 544, 44507, 851, 365, 437, 436, 8246, 11, 300, 576, 362, 534, 4254, 385, 483], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 109, "seek": 50044, "start": 520.16, "end": 523.56, "text": " on board with the project quickly. But as it was, this was a real problem for me. And", "tokens": [322, 3150, 365, 264, 1716, 2661, 13, 583, 382, 309, 390, 11, 341, 390, 257, 957, 1154, 337, 385, 13, 400], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 110, "seek": 50044, "start": 523.56, "end": 526.92, "text": " it was something that we want to hopefully avoid other people having to deal with as well.", "tokens": [309, 390, 746, 300, 321, 528, 281, 4696, 5042, 661, 561, 1419, 281, 2028, 365, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.10997032013949969, "compression_ratio": 1.8075801749271136, "no_speech_prob": 9.596397285349667e-05}, {"id": 111, "seek": 52692, "start": 526.92, "end": 530.7199999999999, "text": " Like, quick question, actually. Has anybody ever taken over a code base that they may be", "tokens": [1743, 11, 1702, 1168, 11, 767, 13, 8646, 4472, 1562, 2726, 670, 257, 3089, 3096, 300, 436, 815, 312], "temperature": 0.0, "avg_logprob": -0.2069030871494211, "compression_ratio": 1.6990595611285266, "no_speech_prob": 0.00031090000993572176}, {"id": 112, "seek": 52692, "start": 530.7199999999999, "end": 536.0, "text": " looking at and go, what the heck is this? Okay, so you know what the point of this slide,", "tokens": [1237, 412, 293, 352, 11, 437, 264, 12872, 307, 341, 30, 1033, 11, 370, 291, 458, 437, 264, 935, 295, 341, 4137, 11], "temperature": 0.0, "avg_logprob": -0.2069030871494211, "compression_ratio": 1.6990595611285266, "no_speech_prob": 0.00031090000993572176}, {"id": 113, "seek": 52692, "start": 536.0, "end": 538.8, "text": " right? You know why we're saying this. We know this is important. Now, let's stop that", "tokens": [558, 30, 509, 458, 983, 321, 434, 1566, 341, 13, 492, 458, 341, 307, 1021, 13, 823, 11, 718, 311, 1590, 300], "temperature": 0.0, "avg_logprob": -0.2069030871494211, "compression_ratio": 1.6990595611285266, "no_speech_prob": 0.00031090000993572176}, {"id": 114, "seek": 52692, "start": 538.8, "end": 543.4, "text": " from happening to the next generation of very pain developers, right? Let's stop that happening.", "tokens": [490, 2737, 281, 264, 958, 5125, 295, 588, 1822, 8849, 11, 558, 30, 961, 311, 1590, 300, 2737, 13], "temperature": 0.0, "avg_logprob": -0.2069030871494211, "compression_ratio": 1.6990595611285266, "no_speech_prob": 0.00031090000993572176}, {"id": 115, "seek": 52692, "start": 543.4, "end": 549.3199999999999, "text": " Yes, so write tests. And so if all these reasons haven't convinced you, there's often maybe", "tokens": [1079, 11, 370, 2464, 6921, 13, 400, 370, 498, 439, 613, 4112, 2378, 380, 12561, 291, 11, 456, 311, 2049, 1310], "temperature": 0.0, "avg_logprob": -0.2069030871494211, "compression_ratio": 1.6990595611285266, "no_speech_prob": 0.00031090000993572176}, {"id": 116, "seek": 52692, "start": 549.3199999999999, "end": 553.9599999999999, "text": " a team lead or a boss or somebody else who's telling you to write tests. In most cases,", "tokens": [257, 1469, 1477, 420, 257, 5741, 420, 2618, 1646, 567, 311, 3585, 291, 281, 2464, 6921, 13, 682, 881, 3331, 11], "temperature": 0.0, "avg_logprob": -0.2069030871494211, "compression_ratio": 1.6990595611285266, "no_speech_prob": 0.00031090000993572176}, {"id": 117, "seek": 55396, "start": 553.96, "end": 561.12, "text": " there's always, of course, exceptions. Ah, okay. Wow. This is annoying. So at the end", "tokens": [456, 311, 1009, 11, 295, 1164, 11, 22847, 13, 2438, 11, 1392, 13, 3153, 13, 639, 307, 11304, 13, 407, 412, 264, 917], "temperature": 0.0, "avg_logprob": -0.15528213566747204, "compression_ratio": 1.7410358565737052, "no_speech_prob": 0.0002886046713683754}, {"id": 118, "seek": 55396, "start": 561.12, "end": 566.24, "text": " of the day, we're all writing tests, if it's not for ourselves and it's for someone else.", "tokens": [295, 264, 786, 11, 321, 434, 439, 3579, 6921, 11, 498, 309, 311, 406, 337, 4175, 293, 309, 311, 337, 1580, 1646, 13], "temperature": 0.0, "avg_logprob": -0.15528213566747204, "compression_ratio": 1.7410358565737052, "no_speech_prob": 0.0002886046713683754}, {"id": 119, "seek": 55396, "start": 566.24, "end": 569.6, "text": " And as we're, even though we're now sort of happily all adding tests, we also have to", "tokens": [400, 382, 321, 434, 11, 754, 1673, 321, 434, 586, 1333, 295, 19909, 439, 5127, 6921, 11, 321, 611, 362, 281], "temperature": 0.0, "avg_logprob": -0.15528213566747204, "compression_ratio": 1.7410358565737052, "no_speech_prob": 0.0002886046713683754}, {"id": 120, "seek": 55396, "start": 569.6, "end": 575.2, "text": " sort of sketch a problem scenario here. And this problem is that as projects evolve and", "tokens": [1333, 295, 12325, 257, 1154, 9005, 510, 13, 400, 341, 1154, 307, 300, 382, 4455, 16693, 293], "temperature": 0.0, "avg_logprob": -0.15528213566747204, "compression_ratio": 1.7410358565737052, "no_speech_prob": 0.0002886046713683754}, {"id": 121, "seek": 55396, "start": 575.2, "end": 581.2, "text": " grow, our tests also evolve and grow. But the problem is that we do reflect there a lot", "tokens": [1852, 11, 527, 6921, 611, 16693, 293, 1852, 13, 583, 264, 1154, 307, 300, 321, 360, 5031, 456, 257, 688], "temperature": 0.0, "avg_logprob": -0.15528213566747204, "compression_ratio": 1.7410358565737052, "no_speech_prob": 0.0002886046713683754}, {"id": 122, "seek": 58120, "start": 581.2, "end": 584.6400000000001, "text": " and we spend a lot of time on keeping our production code clean and well monitored. We", "tokens": [293, 321, 3496, 257, 688, 295, 565, 322, 5145, 527, 4265, 3089, 2541, 293, 731, 36255, 13, 492], "temperature": 0.0, "avg_logprob": -0.14462369283040363, "compression_ratio": 1.806228373702422, "no_speech_prob": 0.0002262106427224353}, {"id": 123, "seek": 58120, "start": 584.6400000000001, "end": 589.0, "text": " have lots of metrics where on the other hand for tests, what you can see on long living", "tokens": [362, 3195, 295, 16367, 689, 322, 264, 661, 1011, 337, 6921, 11, 437, 291, 393, 536, 322, 938, 2647], "temperature": 0.0, "avg_logprob": -0.14462369283040363, "compression_ratio": 1.806228373702422, "no_speech_prob": 0.0002262106427224353}, {"id": 124, "seek": 58120, "start": 589.0, "end": 592.8000000000001, "text": " projects is that sometimes you just get tests where nothing more than a blank setup and", "tokens": [4455, 307, 300, 2171, 291, 445, 483, 6921, 689, 1825, 544, 813, 257, 8247, 8657, 293], "temperature": 0.0, "avg_logprob": -0.14462369283040363, "compression_ratio": 1.806228373702422, "no_speech_prob": 0.0002262106427224353}, {"id": 125, "seek": 58120, "start": 592.8000000000001, "end": 599.72, "text": " tear down and some mocking going on because the functionality already moved long ago,", "tokens": [12556, 760, 293, 512, 49792, 516, 322, 570, 264, 14980, 1217, 4259, 938, 2057, 11], "temperature": 0.0, "avg_logprob": -0.14462369283040363, "compression_ratio": 1.806228373702422, "no_speech_prob": 0.0002262106427224353}, {"id": 126, "seek": 58120, "start": 599.72, "end": 603.12, "text": " which means to the point that test code is often not monitored. Test code is sort of", "tokens": [597, 1355, 281, 264, 935, 300, 1500, 3089, 307, 2049, 406, 36255, 13, 9279, 3089, 307, 1333, 295], "temperature": 0.0, "avg_logprob": -0.14462369283040363, "compression_ratio": 1.806228373702422, "no_speech_prob": 0.0002262106427224353}, {"id": 127, "seek": 58120, "start": 603.12, "end": 608.9200000000001, "text": " our, the kid that didn't get all the attention that needed. So there is still one metric", "tokens": [527, 11, 264, 1636, 300, 994, 380, 483, 439, 264, 3202, 300, 2978, 13, 407, 456, 307, 920, 472, 20678], "temperature": 0.0, "avg_logprob": -0.14462369283040363, "compression_ratio": 1.806228373702422, "no_speech_prob": 0.0002262106427224353}, {"id": 128, "seek": 60892, "start": 608.92, "end": 615.92, "text": " for testing. What's one, what do you think is the most used metric for test code? Yes,", "tokens": [337, 4997, 13, 708, 311, 472, 11, 437, 360, 291, 519, 307, 264, 881, 1143, 20678, 337, 1500, 3089, 30, 1079, 11], "temperature": 0.0, "avg_logprob": -0.15562381063188827, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.0003042221942450851}, {"id": 129, "seek": 60892, "start": 615.92, "end": 620.92, "text": " yeah, we have sort of gave it away already in the intro, but yes, yes, code coverage.", "tokens": [1338, 11, 321, 362, 1333, 295, 2729, 309, 1314, 1217, 294, 264, 12897, 11, 457, 2086, 11, 2086, 11, 3089, 9645, 13], "temperature": 0.0, "avg_logprob": -0.15562381063188827, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.0003042221942450851}, {"id": 130, "seek": 60892, "start": 620.92, "end": 625.68, "text": " Code coverage tells you how much of the code is executed when you run the test suite. And", "tokens": [15549, 9645, 5112, 291, 577, 709, 295, 264, 3089, 307, 17577, 562, 291, 1190, 264, 1500, 14205, 13, 400], "temperature": 0.0, "avg_logprob": -0.15562381063188827, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.0003042221942450851}, {"id": 131, "seek": 60892, "start": 625.68, "end": 630.12, "text": " I personally really like code coverage because it already helps you write more and better", "tokens": [286, 5665, 534, 411, 3089, 9645, 570, 309, 1217, 3665, 291, 2464, 544, 293, 1101], "temperature": 0.0, "avg_logprob": -0.15562381063188827, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.0003042221942450851}, {"id": 132, "seek": 60892, "start": 630.12, "end": 636.5999999999999, "text": " tests. And I want to go through a simple example here to show you how it can already help you.", "tokens": [6921, 13, 400, 286, 528, 281, 352, 807, 257, 2199, 1365, 510, 281, 855, 291, 577, 309, 393, 1217, 854, 291, 13], "temperature": 0.0, "avg_logprob": -0.15562381063188827, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.0003042221942450851}, {"id": 133, "seek": 63660, "start": 636.6, "end": 642.16, "text": " So here we have a submit method. So this is the Python guy. I'm the Java guy. Yeah, he", "tokens": [407, 510, 321, 362, 257, 10315, 3170, 13, 407, 341, 307, 264, 15329, 2146, 13, 286, 478, 264, 10745, 2146, 13, 865, 11, 415], "temperature": 0.0, "avg_logprob": -0.20417210207147113, "compression_ratio": 1.7951807228915662, "no_speech_prob": 0.00020504638087004423}, {"id": 134, "seek": 63660, "start": 642.16, "end": 648.28, "text": " said simple example, but I don't, I don't think so. Yeah. So the context is you are at", "tokens": [848, 2199, 1365, 11, 457, 286, 500, 380, 11, 286, 500, 380, 519, 370, 13, 865, 13, 407, 264, 4319, 307, 291, 366, 412], "temperature": 0.0, "avg_logprob": -0.20417210207147113, "compression_ratio": 1.7951807228915662, "no_speech_prob": 0.00020504638087004423}, {"id": 135, "seek": 63660, "start": 648.28, "end": 654.6800000000001, "text": " the conference and you have a service where you can submit proposals. You can only have,", "tokens": [264, 7586, 293, 291, 362, 257, 2643, 689, 291, 393, 10315, 20198, 13, 509, 393, 787, 362, 11], "temperature": 0.0, "avg_logprob": -0.20417210207147113, "compression_ratio": 1.7951807228915662, "no_speech_prob": 0.00020504638087004423}, {"id": 136, "seek": 63660, "start": 654.6800000000001, "end": 659.08, "text": " you can't have more than three, three or more over proposals and you can submit after the", "tokens": [291, 393, 380, 362, 544, 813, 1045, 11, 1045, 420, 544, 670, 20198, 293, 291, 393, 10315, 934, 264], "temperature": 0.0, "avg_logprob": -0.20417210207147113, "compression_ratio": 1.7951807228915662, "no_speech_prob": 0.00020504638087004423}, {"id": 137, "seek": 63660, "start": 659.08, "end": 665.24, "text": " deadline. If you do that, there will be a failure and otherwise you will get success. So quite", "tokens": [20615, 13, 759, 291, 360, 300, 11, 456, 486, 312, 257, 7763, 293, 5911, 291, 486, 483, 2245, 13, 407, 1596], "temperature": 0.0, "avg_logprob": -0.20417210207147113, "compression_ratio": 1.7951807228915662, "no_speech_prob": 0.00020504638087004423}, {"id": 138, "seek": 66524, "start": 665.24, "end": 669.36, "text": " a simple method with everything as a parameter just to make it easy to explain. So if you", "tokens": [257, 2199, 3170, 365, 1203, 382, 257, 13075, 445, 281, 652, 309, 1858, 281, 2903, 13, 407, 498, 291], "temperature": 0.0, "avg_logprob": -0.16782734610817648, "compression_ratio": 1.7729083665338645, "no_speech_prob": 0.00016775568656157702}, {"id": 139, "seek": 66524, "start": 669.36, "end": 673.6800000000001, "text": " would take method coverage, method coverage is the simplest coverage metric we can get", "tokens": [576, 747, 3170, 9645, 11, 3170, 9645, 307, 264, 22811, 9645, 20678, 321, 393, 483], "temperature": 0.0, "avg_logprob": -0.16782734610817648, "compression_ratio": 1.7729083665338645, "no_speech_prob": 0.00016775568656157702}, {"id": 140, "seek": 66524, "start": 673.6800000000001, "end": 679.48, "text": " which checks is this method coverage as or no, we can add one simple test called a test", "tokens": [597, 13834, 307, 341, 3170, 9645, 382, 420, 572, 11, 321, 393, 909, 472, 2199, 1500, 1219, 257, 1500], "temperature": 0.0, "avg_logprob": -0.16782734610817648, "compression_ratio": 1.7729083665338645, "no_speech_prob": 0.00016775568656157702}, {"id": 141, "seek": 66524, "start": 679.48, "end": 685.48, "text": " X which submits a proposal. There are no open proposals, which is good. And we have a deadline", "tokens": [1783, 597, 8286, 1208, 257, 11494, 13, 821, 366, 572, 1269, 20198, 11, 597, 307, 665, 13, 400, 321, 362, 257, 20615], "temperature": 0.0, "avg_logprob": -0.16782734610817648, "compression_ratio": 1.7729083665338645, "no_speech_prob": 0.00016775568656157702}, {"id": 142, "seek": 66524, "start": 685.48, "end": 692.16, "text": " that's 999 seconds in the future. So great. Now we can get a step further. We can get", "tokens": [300, 311, 1722, 8494, 3949, 294, 264, 2027, 13, 407, 869, 13, 823, 321, 393, 483, 257, 1823, 3052, 13, 492, 393, 483], "temperature": 0.0, "avg_logprob": -0.16782734610817648, "compression_ratio": 1.7729083665338645, "no_speech_prob": 0.00016775568656157702}, {"id": 143, "seek": 69216, "start": 692.16, "end": 696.76, "text": " into statement coverage and with statement coverage, we check, well, if each statement", "tokens": [666, 5629, 9645, 293, 365, 5629, 9645, 11, 321, 1520, 11, 731, 11, 498, 1184, 5629], "temperature": 0.0, "avg_logprob": -0.14820476643090108, "compression_ratio": 1.8117154811715481, "no_speech_prob": 0.0002601809974294156}, {"id": 144, "seek": 69216, "start": 696.76, "end": 702.4, "text": " was executed and now we see, hey, we didn't cover our unhappy flow. So we need to add", "tokens": [390, 17577, 293, 586, 321, 536, 11, 4177, 11, 321, 994, 380, 2060, 527, 22172, 3095, 13, 407, 321, 643, 281, 909], "temperature": 0.0, "avg_logprob": -0.14820476643090108, "compression_ratio": 1.8117154811715481, "no_speech_prob": 0.0002601809974294156}, {"id": 145, "seek": 69216, "start": 702.4, "end": 707.8399999999999, "text": " another test. In this case, we add another test which has five over proposals, which", "tokens": [1071, 1500, 13, 682, 341, 1389, 11, 321, 909, 1071, 1500, 597, 575, 1732, 670, 20198, 11, 597], "temperature": 0.0, "avg_logprob": -0.14820476643090108, "compression_ratio": 1.8117154811715481, "no_speech_prob": 0.0002601809974294156}, {"id": 146, "seek": 69216, "start": 707.8399999999999, "end": 714.16, "text": " means this check evaluates the true and we have a negative scenario. Now we can even", "tokens": [1355, 341, 1520, 6133, 1024, 264, 2074, 293, 321, 362, 257, 3671, 9005, 13, 823, 321, 393, 754], "temperature": 0.0, "avg_logprob": -0.14820476643090108, "compression_ratio": 1.8117154811715481, "no_speech_prob": 0.0002601809974294156}, {"id": 147, "seek": 69216, "start": 714.16, "end": 719.4399999999999, "text": " go one step further through, for example, condition coverage. And with condition coverage,", "tokens": [352, 472, 1823, 3052, 807, 11, 337, 1365, 11, 4188, 9645, 13, 400, 365, 4188, 9645, 11], "temperature": 0.0, "avg_logprob": -0.14820476643090108, "compression_ratio": 1.8117154811715481, "no_speech_prob": 0.0002601809974294156}, {"id": 148, "seek": 71944, "start": 719.44, "end": 725.32, "text": " we check if each Boolean sub-expression has been evaluated to both true and false because", "tokens": [321, 1520, 498, 1184, 23351, 28499, 1422, 12, 15952, 2775, 575, 668, 25509, 281, 1293, 2074, 293, 7908, 570], "temperature": 0.0, "avg_logprob": -0.13402103526251657, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.00020272238180041313}, {"id": 149, "seek": 71944, "start": 725.32, "end": 729.6800000000001, "text": " what we don't know now is whether our deadline check is actually working. We just know that", "tokens": [437, 321, 500, 380, 458, 586, 307, 1968, 527, 20615, 1520, 307, 767, 1364, 13, 492, 445, 458, 300], "temperature": 0.0, "avg_logprob": -0.13402103526251657, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.00020272238180041313}, {"id": 150, "seek": 71944, "start": 729.6800000000001, "end": 734.6400000000001, "text": " it returns false, but we haven't seen it return true yet. So we add one more test now with", "tokens": [309, 11247, 7908, 11, 457, 321, 2378, 380, 1612, 309, 2736, 2074, 1939, 13, 407, 321, 909, 472, 544, 1500, 586, 365], "temperature": 0.0, "avg_logprob": -0.13402103526251657, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.00020272238180041313}, {"id": 151, "seek": 71944, "start": 734.6400000000001, "end": 741.44, "text": " a deadline that is 999 seconds in the past. And now we have three tests. And this is already", "tokens": [257, 20615, 300, 307, 1722, 8494, 3949, 294, 264, 1791, 13, 400, 586, 321, 362, 1045, 6921, 13, 400, 341, 307, 1217], "temperature": 0.0, "avg_logprob": -0.13402103526251657, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.00020272238180041313}, {"id": 152, "seek": 71944, "start": 741.44, "end": 746.08, "text": " why I like code coverage so much because it really helps you write proper tests. Proper,", "tokens": [983, 286, 411, 3089, 9645, 370, 709, 570, 309, 534, 3665, 291, 2464, 2296, 6921, 13, 27627, 11], "temperature": 0.0, "avg_logprob": -0.13402103526251657, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.00020272238180041313}, {"id": 153, "seek": 74608, "start": 746.08, "end": 751.12, "text": " it helps you write tests because let me get on to the good part here. As I said, writes", "tokens": [309, 3665, 291, 2464, 6921, 570, 718, 385, 483, 322, 281, 264, 665, 644, 510, 13, 1018, 286, 848, 11, 13657], "temperature": 0.0, "avg_logprob": -0.15318872262765695, "compression_ratio": 1.6692015209125475, "no_speech_prob": 0.00034525050432421267}, {"id": 154, "seek": 74608, "start": 751.12, "end": 756.1600000000001, "text": " better and more tests. Code coverage is really easy and cheap to measure. In most, I think", "tokens": [1101, 293, 544, 6921, 13, 15549, 9645, 307, 534, 1858, 293, 7084, 281, 3481, 13, 682, 881, 11, 286, 519], "temperature": 0.0, "avg_logprob": -0.15318872262765695, "compression_ratio": 1.6692015209125475, "no_speech_prob": 0.00034525050432421267}, {"id": 155, "seek": 74608, "start": 756.1600000000001, "end": 760.2, "text": " most of the languages, it's just a matter of instrumenting the code. You run the test", "tokens": [881, 295, 264, 8650, 11, 309, 311, 445, 257, 1871, 295, 7198, 278, 264, 3089, 13, 509, 1190, 264, 1500], "temperature": 0.0, "avg_logprob": -0.15318872262765695, "compression_ratio": 1.6692015209125475, "no_speech_prob": 0.00034525050432421267}, {"id": 156, "seek": 74608, "start": 760.2, "end": 763.9200000000001, "text": " suite and you get a nice report out of it that everybody can quickly see and you can", "tokens": [14205, 293, 291, 483, 257, 1481, 2275, 484, 295, 309, 300, 2201, 393, 2661, 536, 293, 291, 393], "temperature": 0.0, "avg_logprob": -0.15318872262765695, "compression_ratio": 1.6692015209125475, "no_speech_prob": 0.00034525050432421267}, {"id": 157, "seek": 74608, "start": 763.9200000000001, "end": 771.2800000000001, "text": " quickly see the pain points of where you're lacking in testing. But to get a bit further,", "tokens": [2661, 536, 264, 1822, 2793, 295, 689, 291, 434, 20889, 294, 4997, 13, 583, 281, 483, 257, 857, 3052, 11], "temperature": 0.0, "avg_logprob": -0.15318872262765695, "compression_ratio": 1.6692015209125475, "no_speech_prob": 0.00034525050432421267}, {"id": 158, "seek": 77128, "start": 771.28, "end": 776.64, "text": " so it guarantees, as I mentioned, it shows you what you didn't test. But the only guarantee", "tokens": [370, 309, 32567, 11, 382, 286, 2835, 11, 309, 3110, 291, 437, 291, 994, 380, 1500, 13, 583, 264, 787, 10815], "temperature": 0.0, "avg_logprob": -0.16132372396963615, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00024475407553836703}, {"id": 159, "seek": 77128, "start": 776.64, "end": 780.56, "text": " I'm going to get to the bad parts next is that the only thing that shows you that what", "tokens": [286, 478, 516, 281, 483, 281, 264, 1578, 3166, 958, 307, 300, 264, 787, 551, 300, 3110, 291, 300, 437], "temperature": 0.0, "avg_logprob": -0.16132372396963615, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00024475407553836703}, {"id": 160, "seek": 77128, "start": 780.56, "end": 786.16, "text": " you did test didn't crash. It doesn't guarantee anything actually about functionality because", "tokens": [291, 630, 1500, 994, 380, 8252, 13, 467, 1177, 380, 10815, 1340, 767, 466, 14980, 570], "temperature": 0.0, "avg_logprob": -0.16132372396963615, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00024475407553836703}, {"id": 161, "seek": 77128, "start": 786.16, "end": 792.0799999999999, "text": " code coverage can actually be quite misleading. It doesn't guarantee any test quality. So", "tokens": [3089, 9645, 393, 767, 312, 1596, 36429, 13, 467, 1177, 380, 10815, 604, 1500, 3125, 13, 407], "temperature": 0.0, "avg_logprob": -0.16132372396963615, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00024475407553836703}, {"id": 162, "seek": 77128, "start": 792.0799999999999, "end": 796.4, "text": " if I take this method, for example, this is a unit test, a valid unit test, this test", "tokens": [498, 286, 747, 341, 3170, 11, 337, 1365, 11, 341, 307, 257, 4985, 1500, 11, 257, 7363, 4985, 1500, 11, 341, 1500], "temperature": 0.0, "avg_logprob": -0.16132372396963615, "compression_ratio": 1.8666666666666667, "no_speech_prob": 0.00024475407553836703}, {"id": 163, "seek": 79640, "start": 796.4, "end": 801.16, "text": " generates coverage. It calls a method, but there is no assertion on the result, which", "tokens": [23815, 9645, 13, 467, 5498, 257, 3170, 11, 457, 456, 307, 572, 19810, 313, 322, 264, 1874, 11, 597], "temperature": 0.0, "avg_logprob": -0.19967012052182798, "compression_ratio": 1.654275092936803, "no_speech_prob": 0.0007589494925923645}, {"id": 164, "seek": 79640, "start": 801.16, "end": 806.24, "text": " makes this test, for example, generate 80% coverage, yet the test actually only guarantees", "tokens": [1669, 341, 1500, 11, 337, 1365, 11, 8460, 4688, 4, 9645, 11, 1939, 264, 1500, 767, 787, 32567], "temperature": 0.0, "avg_logprob": -0.19967012052182798, "compression_ratio": 1.654275092936803, "no_speech_prob": 0.0007589494925923645}, {"id": 165, "seek": 79640, "start": 806.24, "end": 810.52, "text": " it said the method doesn't crash. It doesn't tell us whether it's returned true, false", "tokens": [309, 848, 264, 3170, 1177, 380, 8252, 13, 467, 1177, 380, 980, 505, 1968, 309, 311, 8752, 2074, 11, 7908], "temperature": 0.0, "avg_logprob": -0.19967012052182798, "compression_ratio": 1.654275092936803, "no_speech_prob": 0.0007589494925923645}, {"id": 166, "seek": 79640, "start": 810.52, "end": 816.76, "text": " or anything. And this is the pain point of code coverage, which brings us to the something", "tokens": [420, 1340, 13, 400, 341, 307, 264, 1822, 935, 295, 3089, 9645, 11, 597, 5607, 505, 281, 264, 746], "temperature": 0.0, "avg_logprob": -0.19967012052182798, "compression_ratio": 1.654275092936803, "no_speech_prob": 0.0007589494925923645}, {"id": 167, "seek": 79640, "start": 816.76, "end": 820.24, "text": " nice which Max told me about, which is called the good horse law. So can you maybe explain", "tokens": [1481, 597, 7402, 1907, 385, 466, 11, 597, 307, 1219, 264, 665, 6832, 2101, 13, 407, 393, 291, 1310, 2903], "temperature": 0.0, "avg_logprob": -0.19967012052182798, "compression_ratio": 1.654275092936803, "no_speech_prob": 0.0007589494925923645}, {"id": 168, "seek": 82024, "start": 820.24, "end": 827.12, "text": " a bit about that? Can I grab your clicker? Can I explain about", "tokens": [257, 857, 466, 300, 30, 1664, 286, 4444, 428, 2052, 260, 30, 1664, 286, 2903, 466], "temperature": 0.0, "avg_logprob": -0.22840475528798204, "compression_ratio": 1.5, "no_speech_prob": 0.00017714592104312032}, {"id": 169, "seek": 82024, "start": 827.12, "end": 835.24, "text": " good horse law? No, sorry. I can't. Just kidding. Okay, so when a metric becomes a target, it", "tokens": [665, 6832, 2101, 30, 883, 11, 2597, 13, 286, 393, 380, 13, 1449, 9287, 13, 1033, 11, 370, 562, 257, 20678, 3643, 257, 3779, 11, 309], "temperature": 0.0, "avg_logprob": -0.22840475528798204, "compression_ratio": 1.5, "no_speech_prob": 0.00017714592104312032}, {"id": 170, "seek": 82024, "start": 835.24, "end": 839.24, "text": " seems it's to be a good metric. So quick question, has anyone ever written a unit test just to", "tokens": [2544, 309, 311, 281, 312, 257, 665, 20678, 13, 407, 1702, 1168, 11, 575, 2878, 1562, 3720, 257, 4985, 1500, 445, 281], "temperature": 0.0, "avg_logprob": -0.22840475528798204, "compression_ratio": 1.5, "no_speech_prob": 0.00017714592104312032}, {"id": 171, "seek": 82024, "start": 839.24, "end": 843.92, "text": " get coverage up rather than because the test was useful? Come on, let's be honest. This", "tokens": [483, 9645, 493, 2831, 813, 570, 264, 1500, 390, 4420, 30, 2492, 322, 11, 718, 311, 312, 3245, 13, 639], "temperature": 0.0, "avg_logprob": -0.22840475528798204, "compression_ratio": 1.5, "no_speech_prob": 0.00017714592104312032}, {"id": 172, "seek": 84392, "start": 843.92, "end": 850.5999999999999, "text": " is the safe space. Okay. Microphone, okay. Hello, everybody. Welcome to the live stream.", "tokens": [307, 264, 3273, 1901, 13, 1033, 13, 25642, 4977, 11, 1392, 13, 2425, 11, 2201, 13, 4027, 281, 264, 1621, 4309, 13], "temperature": 0.0, "avg_logprob": -0.1562914539584153, "compression_ratio": 1.7156549520766773, "no_speech_prob": 0.00016897794557735324}, {"id": 173, "seek": 84392, "start": 850.5999999999999, "end": 857.04, "text": " This is our radio announcer voice. Right. So this is something, I'll be honest, I've", "tokens": [639, 307, 527, 6477, 49574, 3177, 13, 1779, 13, 407, 341, 307, 746, 11, 286, 603, 312, 3245, 11, 286, 600], "temperature": 0.0, "avg_logprob": -0.1562914539584153, "compression_ratio": 1.7156549520766773, "no_speech_prob": 0.00016897794557735324}, {"id": 174, "seek": 84392, "start": 857.04, "end": 860.8, "text": " done this. We now know a lot of people in the room have done this. But what we don't", "tokens": [1096, 341, 13, 492, 586, 458, 257, 688, 295, 561, 294, 264, 1808, 362, 1096, 341, 13, 583, 437, 321, 500, 380], "temperature": 0.0, "avg_logprob": -0.1562914539584153, "compression_ratio": 1.7156549520766773, "no_speech_prob": 0.00016897794557735324}, {"id": 175, "seek": 84392, "start": 860.8, "end": 863.92, "text": " want to have is with code coverage. It's supposed to tell us something about our code. But if", "tokens": [528, 281, 362, 307, 365, 3089, 9645, 13, 467, 311, 3442, 281, 980, 505, 746, 466, 527, 3089, 13, 583, 498], "temperature": 0.0, "avg_logprob": -0.1562914539584153, "compression_ratio": 1.7156549520766773, "no_speech_prob": 0.00016897794557735324}, {"id": 176, "seek": 84392, "start": 863.92, "end": 867.8399999999999, "text": " instead we turn that into a target, that can really limit what we actually, you know,", "tokens": [2602, 321, 1261, 300, 666, 257, 3779, 11, 300, 393, 534, 4948, 437, 321, 767, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.1562914539584153, "compression_ratio": 1.7156549520766773, "no_speech_prob": 0.00016897794557735324}, {"id": 177, "seek": 84392, "start": 867.8399999999999, "end": 871.92, "text": " what the kind of useful tests that we actually create. And that leads to a few quite big questions", "tokens": [437, 264, 733, 295, 4420, 6921, 300, 321, 767, 1884, 13, 400, 300, 6689, 281, 257, 1326, 1596, 955, 1651], "temperature": 0.0, "avg_logprob": -0.1562914539584153, "compression_ratio": 1.7156549520766773, "no_speech_prob": 0.00016897794557735324}, {"id": 178, "seek": 87192, "start": 871.92, "end": 877.7199999999999, "text": " that we do genuinely care about. So I'll wait for that photo if you. Cool. Sorry, I'm very", "tokens": [300, 321, 360, 17839, 1127, 466, 13, 407, 286, 603, 1699, 337, 300, 5052, 498, 291, 13, 8561, 13, 4919, 11, 286, 478, 588], "temperature": 0.0, "avg_logprob": -0.14603289728579313, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.0003258237265981734}, {"id": 179, "seek": 87192, "start": 877.7199999999999, "end": 881.68, "text": " audience participation. I'm very sorry. So the next question that we ask there is how", "tokens": [4034, 13487, 13, 286, 478, 588, 2597, 13, 407, 264, 958, 1168, 300, 321, 1029, 456, 307, 577], "temperature": 0.0, "avg_logprob": -0.14603289728579313, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.0003258237265981734}, {"id": 180, "seek": 87192, "start": 881.68, "end": 885.4799999999999, "text": " do we know if our tests are high quality? How do we know if these tests are actually", "tokens": [360, 321, 458, 498, 527, 6921, 366, 1090, 3125, 30, 1012, 360, 321, 458, 498, 613, 6921, 366, 767], "temperature": 0.0, "avg_logprob": -0.14603289728579313, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.0003258237265981734}, {"id": 181, "seek": 87192, "start": 885.4799999999999, "end": 890.62, "text": " good quality tests? We test them. We test them. Great, great answer. I've got a further", "tokens": [665, 3125, 6921, 30, 492, 1500, 552, 13, 492, 1500, 552, 13, 3769, 11, 869, 1867, 13, 286, 600, 658, 257, 3052], "temperature": 0.0, "avg_logprob": -0.14603289728579313, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.0003258237265981734}, {"id": 182, "seek": 87192, "start": 890.62, "end": 896.0, "text": " follow up question for you. How can we understand what our tests are really doing? Same answer,", "tokens": [1524, 493, 1168, 337, 291, 13, 1012, 393, 321, 1223, 437, 527, 6921, 366, 534, 884, 30, 10635, 1867, 11], "temperature": 0.0, "avg_logprob": -0.14603289728579313, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.0003258237265981734}, {"id": 183, "seek": 89600, "start": 896.0, "end": 904.68, "text": " if anyone, I see a hand. I literally had a code base where I could delete half the tests", "tokens": [498, 2878, 11, 286, 536, 257, 1011, 13, 286, 3736, 632, 257, 3089, 3096, 689, 286, 727, 12097, 1922, 264, 6921], "temperature": 0.0, "avg_logprob": -0.3576023724614357, "compression_ratio": 1.3492063492063493, "no_speech_prob": 0.0006633384618908167}, {"id": 184, "seek": 89600, "start": 904.68, "end": 909.32, "text": " and nothing changed. And they all, yeah. So I'm in delete or half the kid. Hello.", "tokens": [293, 1825, 3105, 13, 400, 436, 439, 11, 1338, 13, 407, 286, 478, 294, 12097, 420, 1922, 264, 1636, 13, 2425, 13], "temperature": 0.0, "avg_logprob": -0.3576023724614357, "compression_ratio": 1.3492063492063493, "no_speech_prob": 0.0006633384618908167}, {"id": 185, "seek": 90932, "start": 909.32, "end": 929.2, "text": " Yes. So just for the live stream, I'll just repeat that because that's a really good", "tokens": [1079, 13, 407, 445, 337, 264, 1621, 4309, 11, 286, 603, 445, 7149, 300, 570, 300, 311, 257, 534, 665], "temperature": 0.0, "avg_logprob": -0.20286286217825752, "compression_ratio": 1.532934131736527, "no_speech_prob": 0.0006801888230256736}, {"id": 186, "seek": 90932, "start": 929.2, "end": 932.24, "text": " point. I won't repeat this wearing, but I do understand and appreciate the, you know,", "tokens": [935, 13, 286, 1582, 380, 7149, 341, 4769, 11, 457, 286, 360, 1223, 293, 4449, 264, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.20286286217825752, "compression_ratio": 1.532934131736527, "no_speech_prob": 0.0006801888230256736}, {"id": 187, "seek": 90932, "start": 932.24, "end": 937.08, "text": " the emotion behind it. If you, if you end up, you know, shipping some code that does,", "tokens": [264, 8913, 2261, 309, 13, 759, 291, 11, 498, 291, 917, 493, 11, 291, 458, 11, 14122, 512, 3089, 300, 775, 11], "temperature": 0.0, "avg_logprob": -0.20286286217825752, "compression_ratio": 1.532934131736527, "no_speech_prob": 0.0006801888230256736}, {"id": 188, "seek": 93708, "start": 937.08, "end": 940.5200000000001, "text": " does not do what it's supposed to do. You end up with users getting very angry at you.", "tokens": [775, 406, 360, 437, 309, 311, 3442, 281, 360, 13, 509, 917, 493, 365, 5022, 1242, 588, 6884, 412, 291, 13], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 189, "seek": 93708, "start": 940.5200000000001, "end": 944.24, "text": " And yeah, that's a problem, right? That's going to be an issue. And that is a way of", "tokens": [400, 1338, 11, 300, 311, 257, 1154, 11, 558, 30, 663, 311, 516, 281, 312, 364, 2734, 13, 400, 300, 307, 257, 636, 295], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 190, "seek": 93708, "start": 944.24, "end": 947.6800000000001, "text": " finding out, but I guess the real question we're asking here is how do we know if we", "tokens": [5006, 484, 11, 457, 286, 2041, 264, 957, 1168, 321, 434, 3365, 510, 307, 577, 360, 321, 458, 498, 321], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 191, "seek": 93708, "start": 947.6800000000001, "end": 952.24, "text": " can trust our tests? That's really the crux of this, this problem, right? And so as it", "tokens": [393, 3361, 527, 6921, 30, 663, 311, 534, 264, 5140, 87, 295, 341, 11, 341, 1154, 11, 558, 30, 400, 370, 382, 309], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 192, "seek": 93708, "start": 952.24, "end": 957.88, "text": " turns out, the very, the very famous Roman poet juvenile, actually in 100 AD after he'd", "tokens": [4523, 484, 11, 264, 588, 11, 264, 588, 4618, 8566, 20874, 38486, 11, 767, 294, 2319, 9135, 934, 415, 1116], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 193, "seek": 93708, "start": 957.88, "end": 962.6800000000001, "text": " had a few drinks, he was able to summarize this in such a beautiful way. And this was", "tokens": [632, 257, 1326, 12142, 11, 415, 390, 1075, 281, 20858, 341, 294, 1270, 257, 2238, 636, 13, 400, 341, 390], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 194, "seek": 93708, "start": 962.6800000000001, "end": 966.2800000000001, "text": " something that maybe wasn't appreciated at the time because, you know, obviously he", "tokens": [746, 300, 1310, 2067, 380, 17169, 412, 264, 565, 570, 11, 291, 458, 11, 2745, 415], "temperature": 0.0, "avg_logprob": -0.14581266641616822, "compression_ratio": 1.6694444444444445, "no_speech_prob": 0.00023062796390149742}, {"id": 195, "seek": 96628, "start": 966.28, "end": 970.72, "text": " was talking about mutation testing 2,000 years before it was relevant. But I will mention", "tokens": [390, 1417, 466, 27960, 4997, 568, 11, 1360, 924, 949, 309, 390, 7340, 13, 583, 286, 486, 2152], "temperature": 0.0, "avg_logprob": -0.16576768570587413, "compression_ratio": 1.6594202898550725, "no_speech_prob": 5.489094473887235e-05}, {"id": 196, "seek": 96628, "start": 970.72, "end": 975.8, "text": " it here. It's who watches the watchers, right? And this is the question. Who's testing our", "tokens": [309, 510, 13, 467, 311, 567, 17062, 264, 1159, 433, 11, 558, 30, 400, 341, 307, 264, 1168, 13, 2102, 311, 4997, 527], "temperature": 0.0, "avg_logprob": -0.16576768570587413, "compression_ratio": 1.6594202898550725, "no_speech_prob": 5.489094473887235e-05}, {"id": 197, "seek": 96628, "start": 975.8, "end": 980.0, "text": " tests? Who cares about that? Who's, how do we actually gain trustworthiness for our tests?", "tokens": [6921, 30, 2102, 12310, 466, 300, 30, 2102, 311, 11, 577, 360, 321, 767, 6052, 3361, 13136, 1324, 337, 527, 6921, 30], "temperature": 0.0, "avg_logprob": -0.16576768570587413, "compression_ratio": 1.6594202898550725, "no_speech_prob": 5.489094473887235e-05}, {"id": 198, "seek": 96628, "start": 980.0, "end": 983.0799999999999, "text": " And I see there's, there's people in production who's having bugs. There's people who understand", "tokens": [400, 286, 536, 456, 311, 11, 456, 311, 561, 294, 4265, 567, 311, 1419, 15120, 13, 821, 311, 561, 567, 1223], "temperature": 0.0, "avg_logprob": -0.16576768570587413, "compression_ratio": 1.6594202898550725, "no_speech_prob": 5.489094473887235e-05}, {"id": 199, "seek": 96628, "start": 983.0799999999999, "end": 988.0, "text": " here that this is a really big deal. Luckily, we have a two-word answer for you, which is", "tokens": [510, 300, 341, 307, 257, 534, 955, 2028, 13, 19726, 11, 321, 362, 257, 732, 12, 7462, 1867, 337, 291, 11, 597, 307], "temperature": 0.0, "avg_logprob": -0.16576768570587413, "compression_ratio": 1.6594202898550725, "no_speech_prob": 5.489094473887235e-05}, {"id": 200, "seek": 98800, "start": 988.0, "end": 996.64, "text": " the reason we're all in this room. Mutation testing. So, spot the odd one out. You might", "tokens": [264, 1778, 321, 434, 439, 294, 341, 1808, 13, 376, 11380, 4997, 13, 407, 11, 4008, 264, 7401, 472, 484, 13, 509, 1062], "temperature": 0.0, "avg_logprob": -0.1422194885693008, "compression_ratio": 1.6459627329192548, "no_speech_prob": 3.6315108445705846e-05}, {"id": 201, "seek": 98800, "start": 996.64, "end": 1000.28, "text": " see here, that's, that's Henry. He's having a great time, but maybe he shouldn't be still", "tokens": [536, 510, 11, 300, 311, 11, 300, 311, 11085, 13, 634, 311, 1419, 257, 869, 565, 11, 457, 1310, 415, 4659, 380, 312, 920], "temperature": 0.0, "avg_logprob": -0.1422194885693008, "compression_ratio": 1.6459627329192548, "no_speech_prob": 3.6315108445705846e-05}, {"id": 202, "seek": 98800, "start": 1000.28, "end": 1004.16, "text": " in a row of pigeons. But more importantly right now, I'll just explain the basic premise", "tokens": [294, 257, 5386, 295, 48297, 13, 583, 544, 8906, 558, 586, 11, 286, 603, 445, 2903, 264, 3875, 22045], "temperature": 0.0, "avg_logprob": -0.1422194885693008, "compression_ratio": 1.6459627329192548, "no_speech_prob": 3.6315108445705846e-05}, {"id": 203, "seek": 98800, "start": 1004.16, "end": 1008.04, "text": " and then Paco here will explain in a little more detail how it's actually kind of done.", "tokens": [293, 550, 10702, 78, 510, 486, 2903, 294, 257, 707, 544, 2607, 577, 309, 311, 767, 733, 295, 1096, 13], "temperature": 0.0, "avg_logprob": -0.1422194885693008, "compression_ratio": 1.6459627329192548, "no_speech_prob": 3.6315108445705846e-05}, {"id": 204, "seek": 98800, "start": 1008.04, "end": 1011.4, "text": " So first of all, mutation testing, this is a really quick summary. What you do is you", "tokens": [407, 700, 295, 439, 11, 27960, 4997, 11, 341, 307, 257, 534, 1702, 12691, 13, 708, 291, 360, 307, 291], "temperature": 0.0, "avg_logprob": -0.1422194885693008, "compression_ratio": 1.6459627329192548, "no_speech_prob": 3.6315108445705846e-05}, {"id": 205, "seek": 98800, "start": 1011.4, "end": 1014.52, "text": " introduce some faults in your code, so just a few little things that you change. And for", "tokens": [5366, 512, 36090, 294, 428, 3089, 11, 370, 445, 257, 1326, 707, 721, 300, 291, 1319, 13, 400, 337], "temperature": 0.0, "avg_logprob": -0.1422194885693008, "compression_ratio": 1.6459627329192548, "no_speech_prob": 3.6315108445705846e-05}, {"id": 206, "seek": 101452, "start": 1014.52, "end": 1020.28, "text": " each of those little changes, that's a mutant version of your code. Once you've got that,", "tokens": [1184, 295, 729, 707, 2962, 11, 300, 311, 257, 47198, 3037, 295, 428, 3089, 13, 3443, 291, 600, 658, 300, 11], "temperature": 0.0, "avg_logprob": -0.11318147267010195, "compression_ratio": 2.15625, "no_speech_prob": 3.884984471369535e-05}, {"id": 207, "seek": 101452, "start": 1020.28, "end": 1024.96, "text": " you run your test suite against those mutant versions of your code. And if they fail, awesome,", "tokens": [291, 1190, 428, 1500, 14205, 1970, 729, 47198, 9606, 295, 428, 3089, 13, 400, 498, 436, 3061, 11, 3476, 11], "temperature": 0.0, "avg_logprob": -0.11318147267010195, "compression_ratio": 2.15625, "no_speech_prob": 3.884984471369535e-05}, {"id": 208, "seek": 101452, "start": 1024.96, "end": 1030.24, "text": " because that means that, awesome, because that means that your, your tests have actually", "tokens": [570, 300, 1355, 300, 11, 3476, 11, 570, 300, 1355, 300, 428, 11, 428, 6921, 362, 767], "temperature": 0.0, "avg_logprob": -0.11318147267010195, "compression_ratio": 2.15625, "no_speech_prob": 3.884984471369535e-05}, {"id": 209, "seek": 101452, "start": 1030.24, "end": 1033.8799999999999, "text": " picked up that change. And that's a good thing, right? That's, that's good. We want those tests", "tokens": [6183, 493, 300, 1319, 13, 400, 300, 311, 257, 665, 551, 11, 558, 30, 663, 311, 11, 300, 311, 665, 13, 492, 528, 729, 6921], "temperature": 0.0, "avg_logprob": -0.11318147267010195, "compression_ratio": 2.15625, "no_speech_prob": 3.884984471369535e-05}, {"id": 210, "seek": 101452, "start": 1033.8799999999999, "end": 1038.68, "text": " to fail if our code changes, right? But if they don't fail, that's a bad time because", "tokens": [281, 3061, 498, 527, 3089, 2962, 11, 558, 30, 583, 498, 436, 500, 380, 3061, 11, 300, 311, 257, 1578, 565, 570], "temperature": 0.0, "avg_logprob": -0.11318147267010195, "compression_ratio": 2.15625, "no_speech_prob": 3.884984471369535e-05}, {"id": 211, "seek": 101452, "start": 1038.68, "end": 1043.0, "text": " that means those tests didn't test that change. It didn't test for that. And so that's something", "tokens": [300, 1355, 729, 6921, 994, 380, 1500, 300, 1319, 13, 467, 994, 380, 1500, 337, 300, 13, 400, 370, 300, 311, 746], "temperature": 0.0, "avg_logprob": -0.11318147267010195, "compression_ratio": 2.15625, "no_speech_prob": 3.884984471369535e-05}, {"id": 212, "seek": 104300, "start": 1043.0, "end": 1047.6, "text": " that could have made it to production. So what mutation testing kind of gives you is", "tokens": [300, 727, 362, 1027, 309, 281, 4265, 13, 407, 437, 27960, 4997, 733, 295, 2709, 291, 307], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 213, "seek": 104300, "start": 1047.6, "end": 1052.08, "text": " a way to evaluate that test quality. But this is very abstract. So let's look at penguins.", "tokens": [257, 636, 281, 13059, 300, 1500, 3125, 13, 583, 341, 307, 588, 12649, 13, 407, 718, 311, 574, 412, 17289, 44790, 13], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 214, "seek": 104300, "start": 1052.08, "end": 1056.2, "text": " I like penguins. So Henry here, he's a great example and he's going to, he's going to bring", "tokens": [286, 411, 17289, 44790, 13, 407, 11085, 510, 11, 415, 311, 257, 869, 1365, 293, 415, 311, 516, 281, 11, 415, 311, 516, 281, 1565], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 215, "seek": 104300, "start": 1056.2, "end": 1060.72, "text": " all this home. So I was kind of unfamiliar to the topic. So I kind of created some analogies", "tokens": [439, 341, 1280, 13, 407, 286, 390, 733, 295, 29415, 281, 264, 4829, 13, 407, 286, 733, 295, 2942, 512, 16660, 530], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 216, "seek": 104300, "start": 1060.72, "end": 1064.0, "text": " with penguins that really helped me. So I'll share those with you. So the way I kind of", "tokens": [365, 17289, 44790, 300, 534, 4254, 385, 13, 407, 286, 603, 2073, 729, 365, 291, 13, 407, 264, 636, 286, 733, 295], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 217, "seek": 104300, "start": 1064.0, "end": 1067.88, "text": " imagine my software is we do lots of stuff with messaging. And so I imagine software", "tokens": [3811, 452, 4722, 307, 321, 360, 3195, 295, 1507, 365, 21812, 13, 400, 370, 286, 3811, 4722], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 218, "seek": 104300, "start": 1067.88, "end": 1072.24, "text": " that works properly to be like a pigeon or a dove, like a bird that can fly. I've used", "tokens": [300, 1985, 6108, 281, 312, 411, 257, 37886, 420, 257, 23287, 11, 411, 257, 5255, 300, 393, 3603, 13, 286, 600, 1143], "temperature": 0.0, "avg_logprob": -0.08496492186938327, "compression_ratio": 1.802325581395349, "no_speech_prob": 8.021789835765958e-05}, {"id": 219, "seek": 107224, "start": 1072.24, "end": 1076.04, "text": " a dove here because Paco has a deadly fear of pigeons. He's terrified of them.", "tokens": [257, 23287, 510, 570, 10702, 78, 575, 257, 18232, 4240, 295, 48297, 13, 634, 311, 23051, 295, 552, 13], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 220, "seek": 107224, "start": 1076.04, "end": 1077.36, "text": " Not fear. Vendetta.", "tokens": [1726, 4240, 13, 691, 521, 16593, 13], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 221, "seek": 107224, "start": 1077.36, "end": 1080.96, "text": " He has a personal vendetta against pigeons. Sorry. He doesn't like them. So I've used", "tokens": [634, 575, 257, 2973, 10169, 16593, 1970, 48297, 13, 4919, 13, 634, 1177, 380, 411, 552, 13, 407, 286, 600, 1143], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 222, "seek": 107224, "start": 1080.96, "end": 1084.96, "text": " a dove here. But ideally we want something that I can tie a message to the bird's leg", "tokens": [257, 23287, 510, 13, 583, 22915, 321, 528, 746, 300, 286, 393, 7582, 257, 3636, 281, 264, 5255, 311, 1676], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 223, "seek": 107224, "start": 1084.96, "end": 1088.6, "text": " and it can go and deal with that message for me, right? So it can go, it can go do something", "tokens": [293, 309, 393, 352, 293, 2028, 365, 300, 3636, 337, 385, 11, 558, 30, 407, 309, 393, 352, 11, 309, 393, 352, 360, 746], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 224, "seek": 107224, "start": 1088.6, "end": 1094.08, "text": " like that. So one of the key features of penguins is that they're not very good at flying,", "tokens": [411, 300, 13, 407, 472, 295, 264, 2141, 4122, 295, 17289, 44790, 307, 300, 436, 434, 406, 588, 665, 412, 7137, 11], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 225, "seek": 107224, "start": 1094.08, "end": 1098.32, "text": " right? I think we, can we all agree that that's probably not the best. If you want to tie", "tokens": [558, 30, 286, 519, 321, 11, 393, 321, 439, 3986, 300, 300, 311, 1391, 406, 264, 1151, 13, 759, 291, 528, 281, 7582], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 226, "seek": 107224, "start": 1098.32, "end": 1102.1200000000001, "text": " a message to a bird's leg and get it to deliver it, a penguin might not be the bird you choose", "tokens": [257, 3636, 281, 257, 5255, 311, 1676, 293, 483, 309, 281, 4239, 309, 11, 257, 45752, 1062, 406, 312, 264, 5255, 291, 2826], "temperature": 0.0, "avg_logprob": -0.1734693279374117, "compression_ratio": 1.8739002932551319, "no_speech_prob": 0.00011261546023888513}, {"id": 227, "seek": 110212, "start": 1102.12, "end": 1106.8, "text": " unless you may be delivering something underwater. So this is the kind of example here where", "tokens": [5969, 291, 815, 312, 14666, 746, 20967, 13, 407, 341, 307, 264, 733, 295, 1365, 510, 689], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 228, "seek": 110212, "start": 1106.8, "end": 1110.1599999999999, "text": " we've got an a bird, but it's not the kind of thing that performs the way we expect", "tokens": [321, 600, 658, 364, 257, 5255, 11, 457, 309, 311, 406, 264, 733, 295, 551, 300, 26213, 264, 636, 321, 2066], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 229, "seek": 110212, "start": 1110.1599999999999, "end": 1113.7199999999998, "text": " it to. And this would cause some serious problems if we try to use this kind of thing in production.", "tokens": [309, 281, 13, 400, 341, 576, 3082, 512, 3156, 2740, 498, 321, 853, 281, 764, 341, 733, 295, 551, 294, 4265, 13], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 230, "seek": 110212, "start": 1113.7199999999998, "end": 1117.52, "text": " If we wanted to send a message via a penguin, we're going to have a tough time, right?", "tokens": [759, 321, 1415, 281, 2845, 257, 3636, 5766, 257, 45752, 11, 321, 434, 516, 281, 362, 257, 4930, 565, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 231, "seek": 110212, "start": 1117.52, "end": 1121.2399999999998, "text": " So Paco, I'd like you, if possible, to explain this in a way that makes more sense than what", "tokens": [407, 10702, 78, 11, 286, 1116, 411, 291, 11, 498, 1944, 11, 281, 2903, 341, 294, 257, 636, 300, 1669, 544, 2020, 813, 437], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 232, "seek": 110212, "start": 1121.2399999999998, "end": 1122.2399999999998, "text": " I just did.", "tokens": [286, 445, 630, 13], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 233, "seek": 110212, "start": 1122.2399999999998, "end": 1123.2399999999998, "text": " Good luck.", "tokens": [2205, 3668, 13], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 234, "seek": 110212, "start": 1123.2399999999998, "end": 1130.7199999999998, "text": " We have one mic. It's a bit, it's a bit, yeah. So let's get into the positive mutation testing.", "tokens": [492, 362, 472, 3123, 13, 467, 311, 257, 857, 11, 309, 311, 257, 857, 11, 1338, 13, 407, 718, 311, 483, 666, 264, 3353, 27960, 4997, 13], "temperature": 0.0, "avg_logprob": -0.18452433091175707, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.00029424784588627517}, {"id": 235, "seek": 113072, "start": 1130.72, "end": 1135.24, "text": " The first step of mutation testing, so we've, what Max just taught you is about introducing", "tokens": [440, 700, 1823, 295, 27960, 4997, 11, 370, 321, 600, 11, 437, 7402, 445, 5928, 291, 307, 466, 15424], "temperature": 0.0, "avg_logprob": -0.18265849001267376, "compression_ratio": 1.8854166666666667, "no_speech_prob": 0.000495470070745796}, {"id": 236, "seek": 113072, "start": 1135.24, "end": 1140.96, "text": " faults. So you can do, introduce faults manually, but this is a process that's, well, manually,", "tokens": [36090, 13, 407, 291, 393, 360, 11, 5366, 36090, 16945, 11, 457, 341, 307, 257, 1399, 300, 311, 11, 731, 11, 16945, 11], "temperature": 0.0, "avg_logprob": -0.18265849001267376, "compression_ratio": 1.8854166666666667, "no_speech_prob": 0.000495470070745796}, {"id": 237, "seek": 113072, "start": 1140.96, "end": 1144.16, "text": " and that means it's a lot of work and it's usually also not that reproducible. You don't", "tokens": [293, 300, 1355, 309, 311, 257, 688, 295, 589, 293, 309, 311, 2673, 611, 406, 300, 11408, 32128, 13, 509, 500, 380], "temperature": 0.0, "avg_logprob": -0.18265849001267376, "compression_ratio": 1.8854166666666667, "no_speech_prob": 0.000495470070745796}, {"id": 238, "seek": 113072, "start": 1144.16, "end": 1148.2, "text": " want to do it manually. We want to do this in an automated manner. And this is where", "tokens": [528, 281, 360, 309, 16945, 13, 492, 528, 281, 360, 341, 294, 364, 18473, 9060, 13, 400, 341, 307, 689], "temperature": 0.0, "avg_logprob": -0.18265849001267376, "compression_ratio": 1.8854166666666667, "no_speech_prob": 0.000495470070745796}, {"id": 239, "seek": 113072, "start": 1148.2, "end": 1152.1200000000001, "text": " mutation testing comes in. In the first step of mutation testing, we're going to generate", "tokens": [27960, 4997, 1487, 294, 13, 682, 264, 700, 1823, 295, 27960, 4997, 11, 321, 434, 516, 281, 8460], "temperature": 0.0, "avg_logprob": -0.18265849001267376, "compression_ratio": 1.8854166666666667, "no_speech_prob": 0.000495470070745796}, {"id": 240, "seek": 113072, "start": 1152.1200000000001, "end": 1158.16, "text": " mutants. And each mutant is just a very tiny version of the production code. Mutate testing", "tokens": [5839, 1719, 13, 400, 1184, 47198, 307, 445, 257, 588, 5870, 3037, 295, 264, 4265, 3089, 13, 18517, 473, 4997], "temperature": 0.0, "avg_logprob": -0.18265849001267376, "compression_ratio": 1.8854166666666667, "no_speech_prob": 0.000495470070745796}, {"id": 241, "seek": 115816, "start": 1158.16, "end": 1162.76, "text": " works with the concept of mutators. And mutators are the ones that are making these very small", "tokens": [1985, 365, 264, 3410, 295, 5839, 3391, 13, 400, 5839, 3391, 366, 264, 2306, 300, 366, 1455, 613, 588, 1359], "temperature": 0.0, "avg_logprob": -0.18432783469175681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.00023542920826002955}, {"id": 242, "seek": 115816, "start": 1162.76, "end": 1170.52, "text": " changes. So what we have in this case, we have a perfectly fine dove, which is the production", "tokens": [2962, 13, 407, 437, 321, 362, 294, 341, 1389, 11, 321, 362, 257, 6239, 2489, 23287, 11, 597, 307, 264, 4265], "temperature": 0.0, "avg_logprob": -0.18432783469175681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.00023542920826002955}, {"id": 243, "seek": 115816, "start": 1170.52, "end": 1176.64, "text": " code. And then at the end of it, we have a mutator, which generates, makes a tiny change,", "tokens": [3089, 13, 400, 550, 412, 264, 917, 295, 309, 11, 321, 362, 257, 5839, 1639, 11, 597, 23815, 11, 1669, 257, 5870, 1319, 11], "temperature": 0.0, "avg_logprob": -0.18432783469175681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.00023542920826002955}, {"id": 244, "seek": 115816, "start": 1176.64, "end": 1180.16, "text": " which kind of transforms this into Henry, our penguin who can't fly and we want our", "tokens": [597, 733, 295, 35592, 341, 666, 11085, 11, 527, 45752, 567, 393, 380, 3603, 293, 321, 528, 527], "temperature": 0.0, "avg_logprob": -0.18432783469175681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.00023542920826002955}, {"id": 245, "seek": 115816, "start": 1180.16, "end": 1184.8000000000002, "text": " software to fly. So this would be a bad thing. So how does it look? Because this is still", "tokens": [4722, 281, 3603, 13, 407, 341, 576, 312, 257, 1578, 551, 13, 407, 577, 775, 309, 574, 30, 1436, 341, 307, 920], "temperature": 0.0, "avg_logprob": -0.18432783469175681, "compression_ratio": 1.7251908396946565, "no_speech_prob": 0.00023542920826002955}, {"id": 246, "seek": 118480, "start": 1184.8, "end": 1190.72, "text": " a bit abstract. And I'm going to give you some examples. This would be an example here.", "tokens": [257, 857, 12649, 13, 400, 286, 478, 516, 281, 976, 291, 512, 5110, 13, 639, 576, 312, 364, 1365, 510, 13], "temperature": 0.0, "avg_logprob": -0.16884476563026166, "compression_ratio": 1.6380597014925373, "no_speech_prob": 0.00027428549947217107}, {"id": 247, "seek": 118480, "start": 1190.72, "end": 1195.2, "text": " So for the Dutch, and I think for other countries as well, you have to be 17 years or older", "tokens": [407, 337, 264, 15719, 11, 293, 286, 519, 337, 661, 3517, 382, 731, 11, 291, 362, 281, 312, 3282, 924, 420, 4906], "temperature": 0.0, "avg_logprob": -0.16884476563026166, "compression_ratio": 1.6380597014925373, "no_speech_prob": 0.00027428549947217107}, {"id": 248, "seek": 118480, "start": 1195.2, "end": 1200.08, "text": " to apply for driving license. This could be code that's in your code base, which will", "tokens": [281, 3079, 337, 4840, 10476, 13, 639, 727, 312, 3089, 300, 311, 294, 428, 3089, 3096, 11, 597, 486], "temperature": 0.0, "avg_logprob": -0.16884476563026166, "compression_ratio": 1.6380597014925373, "no_speech_prob": 0.00027428549947217107}, {"id": 249, "seek": 118480, "start": 1200.08, "end": 1206.04, "text": " fly, which is good. Now, the mutant would be the entire code base stays the same. And", "tokens": [3603, 11, 597, 307, 665, 13, 823, 11, 264, 47198, 576, 312, 264, 2302, 3089, 3096, 10834, 264, 912, 13, 400], "temperature": 0.0, "avg_logprob": -0.16884476563026166, "compression_ratio": 1.6380597014925373, "no_speech_prob": 0.00027428549947217107}, {"id": 250, "seek": 118480, "start": 1206.04, "end": 1209.8, "text": " just this, this little piece change. So here we inverted the logic. This is, of course,", "tokens": [445, 341, 11, 341, 707, 2522, 1319, 13, 407, 510, 321, 38969, 264, 9952, 13, 639, 307, 11, 295, 1164, 11], "temperature": 0.0, "avg_logprob": -0.16884476563026166, "compression_ratio": 1.6380597014925373, "no_speech_prob": 0.00027428549947217107}, {"id": 251, "seek": 120980, "start": 1209.8, "end": 1215.12, "text": " the bug. This is something we don't want to manage and get into production. And actually", "tokens": [264, 7426, 13, 639, 307, 746, 321, 500, 380, 528, 281, 3067, 293, 483, 666, 4265, 13, 400, 767], "temperature": 0.0, "avg_logprob": -0.12030790419805618, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.000472524669021368}, {"id": 252, "seek": 120980, "start": 1215.12, "end": 1220.24, "text": " just from this, this single line, we can already generate quite some mutants because we can", "tokens": [445, 490, 341, 11, 341, 2167, 1622, 11, 321, 393, 1217, 8460, 1596, 512, 5839, 1719, 570, 321, 393], "temperature": 0.0, "avg_logprob": -0.12030790419805618, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.000472524669021368}, {"id": 253, "seek": 120980, "start": 1220.24, "end": 1226.1599999999999, "text": " not only invert the conditional operator, we can also change the conditional boundaries.", "tokens": [406, 787, 33966, 264, 27708, 12973, 11, 321, 393, 611, 1319, 264, 27708, 13180, 13], "temperature": 0.0, "avg_logprob": -0.12030790419805618, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.000472524669021368}, {"id": 254, "seek": 120980, "start": 1226.1599999999999, "end": 1231.52, "text": " So this means that we now have age larger than 17, which is a very nice bug that would", "tokens": [407, 341, 1355, 300, 321, 586, 362, 3205, 4833, 813, 3282, 11, 597, 307, 257, 588, 1481, 7426, 300, 576], "temperature": 0.0, "avg_logprob": -0.12030790419805618, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.000472524669021368}, {"id": 255, "seek": 120980, "start": 1231.52, "end": 1236.52, "text": " force us to test the edge cases, the, the famous off by one errors, whether we forgot", "tokens": [3464, 505, 281, 1500, 264, 4691, 3331, 11, 264, 11, 264, 4618, 766, 538, 472, 13603, 11, 1968, 321, 5298], "temperature": 0.0, "avg_logprob": -0.12030790419805618, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.000472524669021368}, {"id": 256, "seek": 123652, "start": 1236.52, "end": 1242.36, "text": " our equal operation in our conditional check. This, this will help you find that one. But", "tokens": [527, 2681, 6916, 294, 527, 27708, 1520, 13, 639, 11, 341, 486, 854, 291, 915, 300, 472, 13, 583], "temperature": 0.0, "avg_logprob": -0.19169715665421397, "compression_ratio": 1.702290076335878, "no_speech_prob": 0.00023096284712664783}, {"id": 257, "seek": 123652, "start": 1242.36, "end": 1245.92, "text": " it can also just return always true and false. We can generate quite some mutants for this", "tokens": [309, 393, 611, 445, 2736, 1009, 2074, 293, 7908, 13, 492, 393, 8460, 1596, 512, 5839, 1719, 337, 341], "temperature": 0.0, "avg_logprob": -0.19169715665421397, "compression_ratio": 1.702290076335878, "no_speech_prob": 0.00023096284712664783}, {"id": 258, "seek": 123652, "start": 1245.92, "end": 1249.44, "text": " this and we can do the same for, for example, mathematical operations. We can make each", "tokens": [341, 293, 321, 393, 360, 264, 912, 337, 11, 337, 1365, 11, 18894, 7705, 13, 492, 393, 652, 1184], "temperature": 0.0, "avg_logprob": -0.19169715665421397, "compression_ratio": 1.702290076335878, "no_speech_prob": 0.00023096284712664783}, {"id": 259, "seek": 123652, "start": 1249.44, "end": 1257.04, "text": " plus into a minus each multiplication into a division, etc. And therefore, we also have", "tokens": [1804, 666, 257, 3175, 1184, 27290, 666, 257, 10044, 11, 5183, 13, 400, 4412, 11, 321, 611, 362], "temperature": 0.0, "avg_logprob": -0.19169715665421397, "compression_ratio": 1.702290076335878, "no_speech_prob": 0.00023096284712664783}, {"id": 260, "seek": 123652, "start": 1257.04, "end": 1261.76, "text": " the ability to remove statements. So in this case, we have a method that adds a published", "tokens": [264, 3485, 281, 4159, 12363, 13, 407, 294, 341, 1389, 11, 321, 362, 257, 3170, 300, 10860, 257, 6572], "temperature": 0.0, "avg_logprob": -0.19169715665421397, "compression_ratio": 1.702290076335878, "no_speech_prob": 0.00023096284712664783}, {"id": 261, "seek": 126176, "start": 1261.76, "end": 1266.68, "text": " date to some object. And we can also just remove the whole setter. And now this means", "tokens": [4002, 281, 512, 2657, 13, 400, 321, 393, 611, 445, 4159, 264, 1379, 992, 391, 13, 400, 586, 341, 1355], "temperature": 0.0, "avg_logprob": -0.18978495211214633, "compression_ratio": 1.7834645669291338, "no_speech_prob": 0.00014974329678807408}, {"id": 262, "seek": 126176, "start": 1266.68, "end": 1272.04, "text": " that we have a bug in which we don't set this attribute anymore, which is something that,", "tokens": [300, 321, 362, 257, 7426, 294, 597, 321, 500, 380, 992, 341, 19667, 3602, 11, 597, 307, 746, 300, 11], "temperature": 0.0, "avg_logprob": -0.18978495211214633, "compression_ratio": 1.7834645669291338, "no_speech_prob": 0.00014974329678807408}, {"id": 263, "seek": 126176, "start": 1272.04, "end": 1276.76, "text": " of course, we don't want to make the production. What's important to note here is that we", "tokens": [295, 1164, 11, 321, 500, 380, 528, 281, 652, 264, 4265, 13, 708, 311, 1021, 281, 3637, 510, 307, 300, 321], "temperature": 0.0, "avg_logprob": -0.18978495211214633, "compression_ratio": 1.7834645669291338, "no_speech_prob": 0.00014974329678807408}, {"id": 264, "seek": 126176, "start": 1276.76, "end": 1280.68, "text": " mutate testing is always important that the code actually compiles because we're not testing", "tokens": [5839, 473, 4997, 307, 1009, 1021, 300, 264, 3089, 767, 715, 4680, 570, 321, 434, 406, 4997], "temperature": 0.0, "avg_logprob": -0.18978495211214633, "compression_ratio": 1.7834645669291338, "no_speech_prob": 0.00014974329678807408}, {"id": 265, "seek": 126176, "start": 1280.68, "end": 1285.72, "text": " the compiler. We're testing the code. The compiler is definitely out of scope here. Now at the", "tokens": [264, 31958, 13, 492, 434, 4997, 264, 3089, 13, 440, 31958, 307, 2138, 484, 295, 11923, 510, 13, 823, 412, 264], "temperature": 0.0, "avg_logprob": -0.18978495211214633, "compression_ratio": 1.7834645669291338, "no_speech_prob": 0.00014974329678807408}, {"id": 266, "seek": 128572, "start": 1285.72, "end": 1291.96, "text": " end of step one, we have a lot of Henry's. We have a lot of mutants. And now Henry is", "tokens": [917, 295, 1823, 472, 11, 321, 362, 257, 688, 295, 11085, 311, 13, 492, 362, 257, 688, 295, 5839, 1719, 13, 400, 586, 11085, 307], "temperature": 0.0, "avg_logprob": -0.14327270753922, "compression_ratio": 1.782258064516129, "no_speech_prob": 0.00015801169502083212}, {"id": 267, "seek": 128572, "start": 1291.96, "end": 1301.1200000000001, "text": " going to try to fly. So he already got his wings ready to try to fly. And now for each", "tokens": [516, 281, 853, 281, 3603, 13, 407, 415, 1217, 658, 702, 11405, 1919, 281, 853, 281, 3603, 13, 400, 586, 337, 1184], "temperature": 0.0, "avg_logprob": -0.14327270753922, "compression_ratio": 1.782258064516129, "no_speech_prob": 0.00015801169502083212}, {"id": 268, "seek": 128572, "start": 1301.1200000000001, "end": 1306.04, "text": " Henry, we're going to run the test suite. And if this test suite fails, as Mike's already", "tokens": [11085, 11, 321, 434, 516, 281, 1190, 264, 1500, 14205, 13, 400, 498, 341, 1500, 14205, 18199, 11, 382, 6602, 311, 1217], "temperature": 0.0, "avg_logprob": -0.14327270753922, "compression_ratio": 1.782258064516129, "no_speech_prob": 0.00015801169502083212}, {"id": 269, "seek": 128572, "start": 1306.04, "end": 1309.96, "text": " mentioned, then we have, then we, then it's good because then we expose Henry 40 is, which", "tokens": [2835, 11, 550, 321, 362, 11, 550, 321, 11, 550, 309, 311, 665, 570, 550, 321, 19219, 11085, 3356, 307, 11, 597], "temperature": 0.0, "avg_logprob": -0.14327270753922, "compression_ratio": 1.782258064516129, "no_speech_prob": 0.00015801169502083212}, {"id": 270, "seek": 128572, "start": 1309.96, "end": 1315.24, "text": " is just a penguin, something that can't fly. So this is great. The not so happy scenario", "tokens": [307, 445, 257, 45752, 11, 746, 300, 393, 380, 3603, 13, 407, 341, 307, 869, 13, 440, 406, 370, 2055, 9005], "temperature": 0.0, "avg_logprob": -0.14327270753922, "compression_ratio": 1.782258064516129, "no_speech_prob": 0.00015801169502083212}, {"id": 271, "seek": 131524, "start": 1315.24, "end": 1320.1200000000001, "text": " is where the test passed, which means that Henry made it into production. And as we know,", "tokens": [307, 689, 264, 1500, 4678, 11, 597, 1355, 300, 11085, 1027, 309, 666, 4265, 13, 400, 382, 321, 458, 11], "temperature": 0.0, "avg_logprob": -0.16510742957438898, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0003467475762590766}, {"id": 272, "seek": 131524, "start": 1320.1200000000001, "end": 1326.28, "text": " well, assuming that it also got through the PR, of course, we have more than just tests.", "tokens": [731, 11, 11926, 300, 309, 611, 658, 807, 264, 11568, 11, 295, 1164, 11, 321, 362, 544, 813, 445, 6921, 13], "temperature": 0.0, "avg_logprob": -0.16510742957438898, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0003467475762590766}, {"id": 273, "seek": 131524, "start": 1326.28, "end": 1330.32, "text": " Is that a problem? Because Henry is not supposed to fly. And then we have a bug into production.", "tokens": [1119, 300, 257, 1154, 30, 1436, 11085, 307, 406, 3442, 281, 3603, 13, 400, 550, 321, 362, 257, 7426, 666, 4265, 13], "temperature": 0.0, "avg_logprob": -0.16510742957438898, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0003467475762590766}, {"id": 274, "seek": 131524, "start": 1330.32, "end": 1336.0, "text": " So this is something that you don't want. So this is the theory of mutation testing.", "tokens": [407, 341, 307, 746, 300, 291, 500, 380, 528, 13, 407, 341, 307, 264, 5261, 295, 27960, 4997, 13], "temperature": 0.0, "avg_logprob": -0.16510742957438898, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0003467475762590766}, {"id": 275, "seek": 131524, "start": 1336.0, "end": 1339.88, "text": " And now, Max, you can tell a bit more about the frameworks.", "tokens": [400, 586, 11, 7402, 11, 291, 393, 980, 257, 857, 544, 466, 264, 29834, 13], "temperature": 0.0, "avg_logprob": -0.16510742957438898, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0003467475762590766}, {"id": 276, "seek": 133988, "start": 1339.88, "end": 1347.5200000000002, "text": " Sure. It works for me. Alrighty. So first of all, I just want to say I'm so proud of", "tokens": [4894, 13, 467, 1985, 337, 385, 13, 43301, 13, 407, 700, 295, 439, 11, 286, 445, 528, 281, 584, 286, 478, 370, 4570, 295], "temperature": 0.0, "avg_logprob": -0.203756471959556, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.00014103943249210715}, {"id": 277, "seek": 133988, "start": 1347.5200000000002, "end": 1351.3600000000001, "text": " this prompt. I don't know why Dali chose this, but I'm really happy. Like, I think I typed", "tokens": [341, 12391, 13, 286, 500, 380, 458, 983, 413, 5103, 5111, 341, 11, 457, 286, 478, 534, 2055, 13, 1743, 11, 286, 519, 286, 33941], "temperature": 0.0, "avg_logprob": -0.203756471959556, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.00014103943249210715}, {"id": 278, "seek": 133988, "start": 1351.3600000000001, "end": 1357.48, "text": " in penguin trying to be a pigeon. And it came up with this. And I'm very happy. Okay. So", "tokens": [294, 45752, 1382, 281, 312, 257, 37886, 13, 400, 309, 1361, 493, 365, 341, 13, 400, 286, 478, 588, 2055, 13, 1033, 13, 407], "temperature": 0.0, "avg_logprob": -0.203756471959556, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.00014103943249210715}, {"id": 279, "seek": 133988, "start": 1357.48, "end": 1362.3600000000001, "text": " moving on, yeah, frameworks. So this is going to get a little bit more specific to, you", "tokens": [2684, 322, 11, 1338, 11, 29834, 13, 407, 341, 307, 516, 281, 483, 257, 707, 857, 544, 2685, 281, 11, 291], "temperature": 0.0, "avg_logprob": -0.203756471959556, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.00014103943249210715}, {"id": 280, "seek": 133988, "start": 1362.3600000000001, "end": 1367.96, "text": " know, to actually implementing this stuff. So anyone here is a Python developer? Heck", "tokens": [458, 11, 281, 767, 18114, 341, 1507, 13, 407, 2878, 510, 307, 257, 15329, 10754, 30, 41948], "temperature": 0.0, "avg_logprob": -0.203756471959556, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.00014103943249210715}, {"id": 281, "seek": 136796, "start": 1367.96, "end": 1373.2, "text": " yeah. All right. Awesome. So I'm going to show you what I did in Python. So as you", "tokens": [1338, 13, 1057, 558, 13, 10391, 13, 407, 286, 478, 516, 281, 855, 291, 437, 286, 630, 294, 15329, 13, 407, 382, 291], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 282, "seek": 136796, "start": 1373.2, "end": 1377.16, "text": " can see, you know, Parker's Java developer, he'll explain Java in a sec. But I'll just", "tokens": [393, 536, 11, 291, 458, 11, 20155, 311, 10745, 10754, 11, 415, 603, 2903, 10745, 294, 257, 907, 13, 583, 286, 603, 445], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 283, "seek": 136796, "start": 1377.16, "end": 1381.2, "text": " show you the kind of basic concepts, but using using my code and using what I did. So there's", "tokens": [855, 291, 264, 733, 295, 3875, 10392, 11, 457, 1228, 1228, 452, 3089, 293, 1228, 437, 286, 630, 13, 407, 456, 311], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 284, "seek": 136796, "start": 1381.2, "end": 1385.6000000000001, "text": " two kind of main supported packages that you can use in Python. It's not like, you know,", "tokens": [732, 733, 295, 2135, 8104, 17401, 300, 291, 393, 764, 294, 15329, 13, 467, 311, 406, 411, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 285, "seek": 136796, "start": 1385.6000000000001, "end": 1388.56, "text": " in Java, there's like an enterprise thing you can get in Python, it's very community", "tokens": [294, 10745, 11, 456, 311, 411, 364, 14132, 551, 291, 393, 483, 294, 15329, 11, 309, 311, 588, 1768], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 286, "seek": 136796, "start": 1388.56, "end": 1392.76, "text": " supported. So you're not, you know, you're not going to get big products. But what we", "tokens": [8104, 13, 407, 291, 434, 406, 11, 291, 458, 11, 291, 434, 406, 516, 281, 483, 955, 3383, 13, 583, 437, 321], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 287, "seek": 136796, "start": 1392.76, "end": 1397.28, "text": " do have are these kind of like nice and supported repose for mutation testing, which have just", "tokens": [360, 362, 366, 613, 733, 295, 411, 1481, 293, 8104, 1085, 541, 337, 27960, 4997, 11, 597, 362, 445], "temperature": 0.0, "avg_logprob": -0.14018343145197087, "compression_ratio": 1.9015384615384616, "no_speech_prob": 9.647115075495094e-05}, {"id": 288, "seek": 139728, "start": 1397.28, "end": 1401.8, "text": " these packages. So I am not a professional, you know, in this, I'm not a doctor, I'm not", "tokens": [613, 17401, 13, 407, 286, 669, 406, 257, 4843, 11, 291, 458, 11, 294, 341, 11, 286, 478, 406, 257, 4631, 11, 286, 478, 406], "temperature": 0.0, "avg_logprob": -0.2101084291934967, "compression_ratio": 1.6730769230769231, "no_speech_prob": 0.00016215001232922077}, {"id": 289, "seek": 139728, "start": 1401.8, "end": 1405.72, "text": " a lawyer, I'm not a professional financial advisor. I'm just a person who, you know, has", "tokens": [257, 11613, 11, 286, 478, 406, 257, 4843, 4669, 19161, 13, 286, 478, 445, 257, 954, 567, 11, 291, 458, 11, 575], "temperature": 0.0, "avg_logprob": -0.2101084291934967, "compression_ratio": 1.6730769230769231, "no_speech_prob": 0.00016215001232922077}, {"id": 290, "seek": 139728, "start": 1405.72, "end": 1409.92, "text": " a certain opinion. And so my opinion of those two frameworks I showed you, there's Muttmutt", "tokens": [257, 1629, 4800, 13, 400, 370, 452, 4800, 295, 729, 732, 29834, 286, 4712, 291, 11, 456, 311, 376, 13478, 76, 13478], "temperature": 0.0, "avg_logprob": -0.2101084291934967, "compression_ratio": 1.6730769230769231, "no_speech_prob": 0.00016215001232922077}, {"id": 291, "seek": 139728, "start": 1409.92, "end": 1416.2, "text": " and Cosmic Ray. And personally, I prefer Muttmutt. Because it's easy to get going. Oh, angry,", "tokens": [293, 15855, 13195, 10883, 13, 400, 5665, 11, 286, 4382, 376, 13478, 76, 13478, 13, 1436, 309, 311, 1858, 281, 483, 516, 13, 876, 11, 6884, 11], "temperature": 0.0, "avg_logprob": -0.2101084291934967, "compression_ratio": 1.6730769230769231, "no_speech_prob": 0.00016215001232922077}, {"id": 292, "seek": 139728, "start": 1416.2, "end": 1424.24, "text": " angry face, shaking hairs. You don't like Muttmutt. We will talk later.", "tokens": [6884, 1851, 11, 15415, 26525, 13, 509, 500, 380, 411, 376, 13478, 76, 13478, 13, 492, 486, 751, 1780, 13], "temperature": 0.0, "avg_logprob": -0.2101084291934967, "compression_ratio": 1.6730769230769231, "no_speech_prob": 0.00016215001232922077}, {"id": 293, "seek": 142424, "start": 1424.24, "end": 1432.0, "text": " So if we have time, we'll have a third presenter very shortly. So for now, while I've still", "tokens": [407, 498, 321, 362, 565, 11, 321, 603, 362, 257, 2636, 35594, 588, 13392, 13, 407, 337, 586, 11, 1339, 286, 600, 920], "temperature": 0.0, "avg_logprob": -0.11212208068448734, "compression_ratio": 1.7524752475247525, "no_speech_prob": 2.5925390218617395e-05}, {"id": 294, "seek": 142424, "start": 1432.0, "end": 1437.0, "text": " got the mic, while I'm still, you know, while I'm still here, we'll talk about Muttmutt.", "tokens": [658, 264, 3123, 11, 1339, 286, 478, 920, 11, 291, 458, 11, 1339, 286, 478, 920, 510, 11, 321, 603, 751, 466, 376, 13478, 76, 13478, 13], "temperature": 0.0, "avg_logprob": -0.11212208068448734, "compression_ratio": 1.7524752475247525, "no_speech_prob": 2.5925390218617395e-05}, {"id": 295, "seek": 142424, "start": 1437.0, "end": 1441.52, "text": " And so this framework is quite simple to use. You know, it's the reason I kind of like it", "tokens": [400, 370, 341, 8388, 307, 1596, 2199, 281, 764, 13, 509, 458, 11, 309, 311, 264, 1778, 286, 733, 295, 411, 309], "temperature": 0.0, "avg_logprob": -0.11212208068448734, "compression_ratio": 1.7524752475247525, "no_speech_prob": 2.5925390218617395e-05}, {"id": 296, "seek": 142424, "start": 1441.52, "end": 1444.72, "text": " is because it's very much you install it and you run it. You know, there's a bit of config", "tokens": [307, 570, 309, 311, 588, 709, 291, 3625, 309, 293, 291, 1190, 309, 13, 509, 458, 11, 456, 311, 257, 857, 295, 6662], "temperature": 0.0, "avg_logprob": -0.11212208068448734, "compression_ratio": 1.7524752475247525, "no_speech_prob": 2.5925390218617395e-05}, {"id": 297, "seek": 142424, "start": 1444.72, "end": 1447.96, "text": " you can do. But really, it's quite simple just to get an idea of your code base and", "tokens": [291, 393, 360, 13, 583, 534, 11, 309, 311, 1596, 2199, 445, 281, 483, 364, 1558, 295, 428, 3089, 3096, 293], "temperature": 0.0, "avg_logprob": -0.11212208068448734, "compression_ratio": 1.7524752475247525, "no_speech_prob": 2.5925390218617395e-05}, {"id": 298, "seek": 142424, "start": 1447.96, "end": 1452.36, "text": " what's going on. So I want to show you this slide. This is just, this is the SDK that", "tokens": [437, 311, 516, 322, 13, 407, 286, 528, 281, 855, 291, 341, 4137, 13, 639, 307, 445, 11, 341, 307, 264, 37135, 300], "temperature": 0.0, "avg_logprob": -0.11212208068448734, "compression_ratio": 1.7524752475247525, "no_speech_prob": 2.5925390218617395e-05}, {"id": 299, "seek": 145236, "start": 1452.36, "end": 1456.24, "text": " I maintain. And I'm showing you this because it's what I've applied my mutation testing", "tokens": [286, 6909, 13, 400, 286, 478, 4099, 291, 341, 570, 309, 311, 437, 286, 600, 6456, 452, 27960, 4997], "temperature": 0.0, "avg_logprob": -0.1326903318747496, "compression_ratio": 1.7740863787375416, "no_speech_prob": 0.0001067389894160442}, {"id": 300, "seek": 145236, "start": 1456.24, "end": 1461.8799999999999, "text": " to. So it's what I'm showing my examples. But basically, what we do is when we go here,", "tokens": [281, 13, 407, 309, 311, 437, 286, 478, 4099, 452, 5110, 13, 583, 1936, 11, 437, 321, 360, 307, 562, 321, 352, 510, 11], "temperature": 0.0, "avg_logprob": -0.1326903318747496, "compression_ratio": 1.7740863787375416, "no_speech_prob": 0.0001067389894160442}, {"id": 301, "seek": 145236, "start": 1461.8799999999999, "end": 1467.28, "text": " I had this locally, first of all. So I installed Muttmutt with pip install. It's that simple.", "tokens": [286, 632, 341, 16143, 11, 700, 295, 439, 13, 407, 286, 8899, 376, 13478, 76, 13478, 365, 8489, 3625, 13, 467, 311, 300, 2199, 13], "temperature": 0.0, "avg_logprob": -0.1326903318747496, "compression_ratio": 1.7740863787375416, "no_speech_prob": 0.0001067389894160442}, {"id": 302, "seek": 145236, "start": 1467.28, "end": 1470.08, "text": " It's a Python package. It's what we do. If you went to my talk on malware earlier, you", "tokens": [467, 311, 257, 15329, 7372, 13, 467, 311, 437, 321, 360, 13, 759, 291, 1437, 281, 452, 751, 322, 40747, 3071, 11, 291], "temperature": 0.0, "avg_logprob": -0.1326903318747496, "compression_ratio": 1.7740863787375416, "no_speech_prob": 0.0001067389894160442}, {"id": 303, "seek": 145236, "start": 1470.08, "end": 1476.04, "text": " know why that's a bad idea, but I did it. So after we do that, we've got Muttmutt run,", "tokens": [458, 983, 300, 311, 257, 1578, 1558, 11, 457, 286, 630, 309, 13, 407, 934, 321, 360, 300, 11, 321, 600, 658, 376, 13478, 76, 13478, 1190, 11], "temperature": 0.0, "avg_logprob": -0.1326903318747496, "compression_ratio": 1.7740863787375416, "no_speech_prob": 0.0001067389894160442}, {"id": 304, "seek": 145236, "start": 1476.04, "end": 1480.56, "text": " which just runs those tests for you. So when we do that, I'll show you what my output was.", "tokens": [597, 445, 6676, 729, 6921, 337, 291, 13, 407, 562, 321, 360, 300, 11, 286, 603, 855, 291, 437, 452, 5598, 390, 13], "temperature": 0.0, "avg_logprob": -0.1326903318747496, "compression_ratio": 1.7740863787375416, "no_speech_prob": 0.0001067389894160442}, {"id": 305, "seek": 148056, "start": 1480.56, "end": 1484.52, "text": " So when I ran this myself, I actually got a whole lot of this output. But really what's", "tokens": [407, 562, 286, 5872, 341, 2059, 11, 286, 767, 658, 257, 1379, 688, 295, 341, 5598, 13, 583, 534, 437, 311], "temperature": 0.0, "avg_logprob": -0.10754148803488181, "compression_ratio": 1.7959866220735785, "no_speech_prob": 8.181883458746597e-05}, {"id": 306, "seek": 148056, "start": 1484.52, "end": 1488.28, "text": " important here is that, first of all, it ran my entire test suite. And the reason it ran", "tokens": [1021, 510, 307, 300, 11, 700, 295, 439, 11, 309, 5872, 452, 2302, 1500, 14205, 13, 400, 264, 1778, 309, 5872], "temperature": 0.0, "avg_logprob": -0.10754148803488181, "compression_ratio": 1.7959866220735785, "no_speech_prob": 8.181883458746597e-05}, {"id": 307, "seek": 148056, "start": 1488.28, "end": 1492.56, "text": " my entire test suite is just to check how long that's supposed to take and just to make", "tokens": [452, 2302, 1500, 14205, 307, 445, 281, 1520, 577, 938, 300, 311, 3442, 281, 747, 293, 445, 281, 652], "temperature": 0.0, "avg_logprob": -0.10754148803488181, "compression_ratio": 1.7959866220735785, "no_speech_prob": 8.181883458746597e-05}, {"id": 308, "seek": 148056, "start": 1492.56, "end": 1495.8799999999999, "text": " sure everything does work as expected because there's various types of mutants to do with", "tokens": [988, 1203, 775, 589, 382, 5176, 570, 456, 311, 3683, 3467, 295, 5839, 1719, 281, 360, 365], "temperature": 0.0, "avg_logprob": -0.10754148803488181, "compression_ratio": 1.7959866220735785, "no_speech_prob": 8.181883458746597e-05}, {"id": 309, "seek": 148056, "start": 1495.8799999999999, "end": 1501.1599999999999, "text": " timeouts as well that we might want to consider. After it's done that, what it will do is it", "tokens": [565, 7711, 382, 731, 300, 321, 1062, 528, 281, 1949, 13, 2381, 309, 311, 1096, 300, 11, 437, 309, 486, 360, 307, 309], "temperature": 0.0, "avg_logprob": -0.10754148803488181, "compression_ratio": 1.7959866220735785, "no_speech_prob": 8.181883458746597e-05}, {"id": 310, "seek": 148056, "start": 1501.1599999999999, "end": 1506.52, "text": " will generate mutants based on lines of code in my code base. That's what it will do. And", "tokens": [486, 8460, 5839, 1719, 2361, 322, 3876, 295, 3089, 294, 452, 3089, 3096, 13, 663, 311, 437, 309, 486, 360, 13, 400], "temperature": 0.0, "avg_logprob": -0.10754148803488181, "compression_ratio": 1.7959866220735785, "no_speech_prob": 8.181883458746597e-05}, {"id": 311, "seek": 150652, "start": 1506.52, "end": 1511.12, "text": " once it's done that, it will run my tests against those. So there's a few different types and", "tokens": [1564, 309, 311, 1096, 300, 11, 309, 486, 1190, 452, 6921, 1970, 729, 13, 407, 456, 311, 257, 1326, 819, 3467, 293], "temperature": 0.0, "avg_logprob": -0.14979771021250132, "compression_ratio": 1.7980132450331126, "no_speech_prob": 6.607272371184081e-05}, {"id": 312, "seek": 150652, "start": 1511.12, "end": 1514.92, "text": " it can characterize them like this. So the first type is mutants that we've caught, not", "tokens": [309, 393, 38463, 552, 411, 341, 13, 407, 264, 700, 2010, 307, 5839, 1719, 300, 321, 600, 5415, 11, 406], "temperature": 0.0, "avg_logprob": -0.14979771021250132, "compression_ratio": 1.7980132450331126, "no_speech_prob": 6.607272371184081e-05}, {"id": 313, "seek": 150652, "start": 1514.92, "end": 1518.72, "text": " killed. We never kill a penguin. We love penguins. We catch them. We've caught them and put them", "tokens": [4652, 13, 492, 1128, 1961, 257, 45752, 13, 492, 959, 17289, 44790, 13, 492, 3745, 552, 13, 492, 600, 5415, 552, 293, 829, 552], "temperature": 0.0, "avg_logprob": -0.14979771021250132, "compression_ratio": 1.7980132450331126, "no_speech_prob": 6.607272371184081e-05}, {"id": 314, "seek": 150652, "start": 1518.72, "end": 1523.68, "text": " back into the zoo. In this case, in this case, we've managed to say, yep, our test failed.", "tokens": [646, 666, 264, 25347, 13, 682, 341, 1389, 11, 294, 341, 1389, 11, 321, 600, 6453, 281, 584, 11, 18633, 11, 527, 1500, 7612, 13], "temperature": 0.0, "avg_logprob": -0.14979771021250132, "compression_ratio": 1.7980132450331126, "no_speech_prob": 6.607272371184081e-05}, {"id": 315, "seek": 150652, "start": 1523.68, "end": 1528.76, "text": " That's great. But it could be the case where the mutant's timed out. So it's taken way", "tokens": [663, 311, 869, 13, 583, 309, 727, 312, 264, 1389, 689, 264, 47198, 311, 44696, 484, 13, 407, 309, 311, 2726, 636], "temperature": 0.0, "avg_logprob": -0.14979771021250132, "compression_ratio": 1.7980132450331126, "no_speech_prob": 6.607272371184081e-05}, {"id": 316, "seek": 150652, "start": 1528.76, "end": 1532.24, "text": " too long for this code to run or it's taken enough time that we feel like we're not so", "tokens": [886, 938, 337, 341, 3089, 281, 1190, 420, 309, 311, 2726, 1547, 565, 300, 321, 841, 411, 321, 434, 406, 370], "temperature": 0.0, "avg_logprob": -0.14979771021250132, "compression_ratio": 1.7980132450331126, "no_speech_prob": 6.607272371184081e-05}, {"id": 317, "seek": 153224, "start": 1532.24, "end": 1537.32, "text": " great feeling great about that code. Alternatively, we might end up in a situation where the mutant", "tokens": [869, 2633, 869, 466, 300, 3089, 13, 46167, 11, 321, 1062, 917, 493, 294, 257, 2590, 689, 264, 47198], "temperature": 0.0, "avg_logprob": -0.11869604304685431, "compression_ratio": 1.6134751773049645, "no_speech_prob": 4.016700404463336e-05}, {"id": 318, "seek": 153224, "start": 1537.32, "end": 1541.52, "text": " survived and made it through our test code. In that case, it corresponds to a bug that", "tokens": [14433, 293, 1027, 309, 807, 527, 1500, 3089, 13, 682, 300, 1389, 11, 309, 23249, 281, 257, 7426, 300], "temperature": 0.0, "avg_logprob": -0.11869604304685431, "compression_ratio": 1.6134751773049645, "no_speech_prob": 4.016700404463336e-05}, {"id": 319, "seek": 153224, "start": 1541.52, "end": 1546.92, "text": " might make it to production. So when I run this on my particular SDK, what I saw was", "tokens": [1062, 652, 309, 281, 4265, 13, 407, 562, 286, 1190, 341, 322, 452, 1729, 37135, 11, 437, 286, 1866, 390], "temperature": 0.0, "avg_logprob": -0.11869604304685431, "compression_ratio": 1.6134751773049645, "no_speech_prob": 4.016700404463336e-05}, {"id": 320, "seek": 153224, "start": 1546.92, "end": 1553.0, "text": " that we checked the stuff. I created 682 mutants, versions of my code, with changes in them.", "tokens": [300, 321, 10033, 264, 1507, 13, 286, 2942, 23317, 17, 5839, 1719, 11, 9606, 295, 452, 3089, 11, 365, 2962, 294, 552, 13], "temperature": 0.0, "avg_logprob": -0.11869604304685431, "compression_ratio": 1.6134751773049645, "no_speech_prob": 4.016700404463336e-05}, {"id": 321, "seek": 153224, "start": 1553.0, "end": 1560.08, "text": " And of that, it managed to catch 512 of those, but it managed to miss 170 of them. Now, if", "tokens": [400, 295, 300, 11, 309, 6453, 281, 3745, 1025, 4762, 295, 729, 11, 457, 309, 6453, 281, 1713, 27228, 295, 552, 13, 823, 11, 498], "temperature": 0.0, "avg_logprob": -0.11869604304685431, "compression_ratio": 1.6134751773049645, "no_speech_prob": 4.016700404463336e-05}, {"id": 322, "seek": 156008, "start": 1560.08, "end": 1563.28, "text": " that's a good number or a bad number, we'll talk about later. But what's important now", "tokens": [300, 311, 257, 665, 1230, 420, 257, 1578, 1230, 11, 321, 603, 751, 466, 1780, 13, 583, 437, 311, 1021, 586], "temperature": 0.0, "avg_logprob": -0.13021263066869582, "compression_ratio": 1.8020477815699658, "no_speech_prob": 3.3661850466160104e-05}, {"id": 323, "seek": 156008, "start": 1563.28, "end": 1568.36, "text": " is let's just look at some of those mutants. So first of all, the ones that we actually", "tokens": [307, 718, 311, 445, 574, 412, 512, 295, 729, 5839, 1719, 13, 407, 700, 295, 439, 11, 264, 2306, 300, 321, 767], "temperature": 0.0, "avg_logprob": -0.13021263066869582, "compression_ratio": 1.8020477815699658, "no_speech_prob": 3.3661850466160104e-05}, {"id": 324, "seek": 156008, "start": 1568.36, "end": 1572.12, "text": " did catch. Here's a couple of examples. So here's a line where basically we say, here", "tokens": [630, 3745, 13, 1692, 311, 257, 1916, 295, 5110, 13, 407, 510, 311, 257, 1622, 689, 1936, 321, 584, 11, 510], "temperature": 0.0, "avg_logprob": -0.13021263066869582, "compression_ratio": 1.8020477815699658, "no_speech_prob": 3.3661850466160104e-05}, {"id": 325, "seek": 156008, "start": 1572.12, "end": 1575.84, "text": " are some valid message channels. So for our messages API, here are some valid messages", "tokens": [366, 512, 7363, 3636, 9235, 13, 407, 337, 527, 7897, 9362, 11, 510, 366, 512, 7363, 7897], "temperature": 0.0, "avg_logprob": -0.13021263066869582, "compression_ratio": 1.8020477815699658, "no_speech_prob": 3.3661850466160104e-05}, {"id": 326, "seek": 156008, "start": 1575.84, "end": 1580.6399999999999, "text": " ways you can send, right? But what's important here is that this basically removed the ability", "tokens": [2098, 291, 393, 2845, 11, 558, 30, 583, 437, 311, 1021, 510, 307, 300, 341, 1936, 7261, 264, 3485], "temperature": 0.0, "avg_logprob": -0.13021263066869582, "compression_ratio": 1.8020477815699658, "no_speech_prob": 3.3661850466160104e-05}, {"id": 327, "seek": 156008, "start": 1580.6399999999999, "end": 1585.4399999999998, "text": " to send an SMS. And so when I tried to test that, it failed, which is what we want to", "tokens": [281, 2845, 364, 38107, 13, 400, 370, 562, 286, 3031, 281, 1500, 300, 11, 309, 7612, 11, 597, 307, 437, 321, 528, 281], "temperature": 0.0, "avg_logprob": -0.13021263066869582, "compression_ratio": 1.8020477815699658, "no_speech_prob": 3.3661850466160104e-05}, {"id": 328, "seek": 158544, "start": 1585.44, "end": 1590.96, "text": " see. Here's another one. Again, this is Python. So if you're a Java dev, don't worry, we'll", "tokens": [536, 13, 1692, 311, 1071, 472, 13, 3764, 11, 341, 307, 15329, 13, 407, 498, 291, 434, 257, 10745, 1905, 11, 500, 380, 3292, 11, 321, 603], "temperature": 0.0, "avg_logprob": -0.13248091684260838, "compression_ratio": 1.7508196721311475, "no_speech_prob": 0.0001018742477754131}, {"id": 329, "seek": 158544, "start": 1590.96, "end": 1596.92, "text": " look after you soon. And here's another one. We've got a decorator here, which basically", "tokens": [574, 934, 291, 2321, 13, 400, 510, 311, 1071, 472, 13, 492, 600, 658, 257, 7919, 1639, 510, 11, 597, 1936], "temperature": 0.0, "avg_logprob": -0.13248091684260838, "compression_ratio": 1.7508196721311475, "no_speech_prob": 0.0001018742477754131}, {"id": 330, "seek": 158544, "start": 1596.92, "end": 1601.2, "text": " runs this method. And we can see when we remove that, that will never happen. This is actually", "tokens": [6676, 341, 3170, 13, 400, 321, 393, 536, 562, 321, 4159, 300, 11, 300, 486, 1128, 1051, 13, 639, 307, 767], "temperature": 0.0, "avg_logprob": -0.13248091684260838, "compression_ratio": 1.7508196721311475, "no_speech_prob": 0.0001018742477754131}, {"id": 331, "seek": 158544, "start": 1601.2, "end": 1605.3200000000002, "text": " through Pydantic, if anyone has used that before. But basically, it means that we're", "tokens": [807, 9953, 67, 7128, 11, 498, 2878, 575, 1143, 300, 949, 13, 583, 1936, 11, 309, 1355, 300, 321, 434], "temperature": 0.0, "avg_logprob": -0.13248091684260838, "compression_ratio": 1.7508196721311475, "no_speech_prob": 0.0001018742477754131}, {"id": 332, "seek": 158544, "start": 1605.3200000000002, "end": 1609.04, "text": " not going to round a number anymore. And so when we test for that, a number doesn't get", "tokens": [406, 516, 281, 3098, 257, 1230, 3602, 13, 400, 370, 562, 321, 1500, 337, 300, 11, 257, 1230, 1177, 380, 483], "temperature": 0.0, "avg_logprob": -0.13248091684260838, "compression_ratio": 1.7508196721311475, "no_speech_prob": 0.0001018742477754131}, {"id": 333, "seek": 158544, "start": 1609.04, "end": 1614.88, "text": " rounded and we catch that. But that is not really very interesting. That doesn't tell", "tokens": [23382, 293, 321, 3745, 300, 13, 583, 300, 307, 406, 534, 588, 1880, 13, 663, 1177, 380, 980], "temperature": 0.0, "avg_logprob": -0.13248091684260838, "compression_ratio": 1.7508196721311475, "no_speech_prob": 0.0001018742477754131}, {"id": 334, "seek": 161488, "start": 1614.88, "end": 1617.96, "text": " us anything. That tells us about this much, right? It doesn't tell us much at all. And", "tokens": [505, 1340, 13, 663, 5112, 505, 466, 341, 709, 11, 558, 30, 467, 1177, 380, 980, 505, 709, 412, 439, 13, 400], "temperature": 0.0, "avg_logprob": -0.12720079291356753, "compression_ratio": 1.9444444444444444, "no_speech_prob": 0.00019697632524184883}, {"id": 335, "seek": 161488, "start": 1617.96, "end": 1621.4, "text": " the reason for that is that we kind of know that our tests work. We kind of know that", "tokens": [264, 1778, 337, 300, 307, 300, 321, 733, 295, 458, 300, 527, 6921, 589, 13, 492, 733, 295, 458, 300], "temperature": 0.0, "avg_logprob": -0.12720079291356753, "compression_ratio": 1.9444444444444444, "no_speech_prob": 0.00019697632524184883}, {"id": 336, "seek": 161488, "start": 1621.4, "end": 1625.72, "text": " our tests work for that. Thank you very much. I'll do the M&M thing. So we kind of know", "tokens": [527, 6921, 589, 337, 300, 13, 1044, 291, 588, 709, 13, 286, 603, 360, 264, 376, 5, 44, 551, 13, 407, 321, 733, 295, 458], "temperature": 0.0, "avg_logprob": -0.12720079291356753, "compression_ratio": 1.9444444444444444, "no_speech_prob": 0.00019697632524184883}, {"id": 337, "seek": 161488, "start": 1625.72, "end": 1629.8000000000002, "text": " that our tests work for that. And so what's kind of useful is to see if we do what much", "tokens": [300, 527, 6921, 589, 337, 300, 13, 400, 370, 437, 311, 733, 295, 4420, 307, 281, 536, 498, 321, 360, 437, 709], "temperature": 0.0, "avg_logprob": -0.12720079291356753, "compression_ratio": 1.9444444444444444, "no_speech_prob": 0.00019697632524184883}, {"id": 338, "seek": 161488, "start": 1629.8000000000002, "end": 1636.4, "text": " show, we can see the mutants that we didn't catch. We can also do what more HTML, which", "tokens": [855, 11, 321, 393, 536, 264, 5839, 1719, 300, 321, 994, 380, 3745, 13, 492, 393, 611, 360, 437, 544, 17995, 11, 597], "temperature": 0.0, "avg_logprob": -0.12720079291356753, "compression_ratio": 1.9444444444444444, "no_speech_prob": 0.00019697632524184883}, {"id": 339, "seek": 161488, "start": 1636.4, "end": 1641.5600000000002, "text": " shows us essentially an HTML coverage output as well. So we can see in a list all of the", "tokens": [3110, 505, 4476, 364, 17995, 9645, 5598, 382, 731, 13, 407, 321, 393, 536, 294, 257, 1329, 439, 295, 264], "temperature": 0.0, "avg_logprob": -0.12720079291356753, "compression_ratio": 1.9444444444444444, "no_speech_prob": 0.00019697632524184883}, {"id": 340, "seek": 164156, "start": 1641.56, "end": 1646.3999999999999, "text": " mutants that we didn't catch. So with more and more show, on that code base that I just", "tokens": [5839, 1719, 300, 321, 994, 380, 3745, 13, 407, 365, 544, 293, 544, 855, 11, 322, 300, 3089, 3096, 300, 286, 445], "temperature": 0.0, "avg_logprob": -0.1583951935732275, "compression_ratio": 1.7744107744107744, "no_speech_prob": 4.2118826968362555e-05}, {"id": 341, "seek": 164156, "start": 1646.3999999999999, "end": 1650.8, "text": " showed you, we can see the 170 mutants that survived. It shows you the indices of these.", "tokens": [4712, 291, 11, 321, 393, 536, 264, 27228, 5839, 1719, 300, 14433, 13, 467, 3110, 291, 264, 43840, 295, 613, 13], "temperature": 0.0, "avg_logprob": -0.1583951935732275, "compression_ratio": 1.7744107744107744, "no_speech_prob": 4.2118826968362555e-05}, {"id": 342, "seek": 164156, "start": 1650.8, "end": 1656.6, "text": " And then we can manually specify the ones we want to look at. So here we can see, for", "tokens": [400, 550, 321, 393, 16945, 16500, 264, 2306, 321, 528, 281, 574, 412, 13, 407, 510, 321, 393, 536, 11, 337], "temperature": 0.0, "avg_logprob": -0.1583951935732275, "compression_ratio": 1.7744107744107744, "no_speech_prob": 4.2118826968362555e-05}, {"id": 343, "seek": 164156, "start": 1656.6, "end": 1659.8799999999999, "text": " example, that we changed the authentication method to fail. And we can see in this case", "tokens": [1365, 11, 300, 321, 3105, 264, 26643, 3170, 281, 3061, 13, 400, 321, 393, 536, 294, 341, 1389], "temperature": 0.0, "avg_logprob": -0.1583951935732275, "compression_ratio": 1.7744107744107744, "no_speech_prob": 4.2118826968362555e-05}, {"id": 344, "seek": 164156, "start": 1659.8799999999999, "end": 1664.76, "text": " we caught that because we did a test for authentication and it failed, so that's great.", "tokens": [321, 5415, 300, 570, 321, 630, 257, 1500, 337, 26643, 293, 309, 7612, 11, 370, 300, 311, 869, 13], "temperature": 0.0, "avg_logprob": -0.1583951935732275, "compression_ratio": 1.7744107744107744, "no_speech_prob": 4.2118826968362555e-05}, {"id": 345, "seek": 164156, "start": 1664.76, "end": 1668.6799999999998, "text": " But more importantly though is you get this HTML output, which you can then explore. You", "tokens": [583, 544, 8906, 1673, 307, 291, 483, 341, 17995, 5598, 11, 597, 291, 393, 550, 6839, 13, 509], "temperature": 0.0, "avg_logprob": -0.1583951935732275, "compression_ratio": 1.7744107744107744, "no_speech_prob": 4.2118826968362555e-05}, {"id": 346, "seek": 166868, "start": 1668.68, "end": 1673.44, "text": " can explore every method, every sort of module that you have. You can explore all the methods", "tokens": [393, 6839, 633, 3170, 11, 633, 1333, 295, 10088, 300, 291, 362, 13, 509, 393, 6839, 439, 264, 7150], "temperature": 0.0, "avg_logprob": -0.11298290888468425, "compression_ratio": 1.8338983050847457, "no_speech_prob": 3.6127323255641386e-05}, {"id": 347, "seek": 166868, "start": 1673.44, "end": 1680.04, "text": " inside of there and which ones were and were caught. And you do that with the HTML command.", "tokens": [1854, 295, 456, 293, 597, 2306, 645, 293, 645, 5415, 13, 400, 291, 360, 300, 365, 264, 17995, 5622, 13], "temperature": 0.0, "avg_logprob": -0.11298290888468425, "compression_ratio": 1.8338983050847457, "no_speech_prob": 3.6127323255641386e-05}, {"id": 348, "seek": 166868, "start": 1680.04, "end": 1683.16, "text": " So to do that, I'll just show you this is a mutant that we did not catch. And I want", "tokens": [407, 281, 360, 300, 11, 286, 603, 445, 855, 291, 341, 307, 257, 47198, 300, 321, 630, 406, 3745, 13, 400, 286, 528], "temperature": 0.0, "avg_logprob": -0.11298290888468425, "compression_ratio": 1.8338983050847457, "no_speech_prob": 3.6127323255641386e-05}, {"id": 349, "seek": 166868, "start": 1683.16, "end": 1686.0800000000002, "text": " to show you why we didn't catch it and what it's going to do. And I'll just do that for", "tokens": [281, 855, 291, 983, 321, 994, 380, 3745, 309, 293, 437, 309, 311, 516, 281, 360, 13, 400, 286, 603, 445, 360, 300, 337], "temperature": 0.0, "avg_logprob": -0.11298290888468425, "compression_ratio": 1.8338983050847457, "no_speech_prob": 3.6127323255641386e-05}, {"id": 350, "seek": 166868, "start": 1686.0800000000002, "end": 1691.2, "text": " a few just so you get some context if that's cool. So first of all, what this mutant did", "tokens": [257, 1326, 445, 370, 291, 483, 512, 4319, 498, 300, 311, 1627, 13, 407, 700, 295, 439, 11, 437, 341, 47198, 630], "temperature": 0.0, "avg_logprob": -0.11298290888468425, "compression_ratio": 1.8338983050847457, "no_speech_prob": 3.6127323255641386e-05}, {"id": 351, "seek": 166868, "start": 1691.2, "end": 1696.04, "text": " was it renamed the logger. Now I think logging is out of scope of my test code, so personally", "tokens": [390, 309, 40949, 264, 3565, 1321, 13, 823, 286, 519, 27991, 307, 484, 295, 11923, 295, 452, 1500, 3089, 11, 370, 5665], "temperature": 0.0, "avg_logprob": -0.11298290888468425, "compression_ratio": 1.8338983050847457, "no_speech_prob": 3.6127323255641386e-05}, {"id": 352, "seek": 169604, "start": 1696.04, "end": 1699.8799999999999, "text": " I don't care too much about anything related to logging. So I don't mind if I don't get", "tokens": [286, 500, 380, 1127, 886, 709, 466, 1340, 4077, 281, 27991, 13, 407, 286, 500, 380, 1575, 498, 286, 500, 380, 483], "temperature": 0.0, "avg_logprob": -0.12803316116333008, "compression_ratio": 1.7101910828025477, "no_speech_prob": 3.418200867599808e-05}, {"id": 353, "seek": 169604, "start": 1699.8799999999999, "end": 1706.84, "text": " a pass here. Here's another one. In this case, what we do is we've slightly changed the value", "tokens": [257, 1320, 510, 13, 1692, 311, 1071, 472, 13, 682, 341, 1389, 11, 437, 321, 360, 307, 321, 600, 4748, 3105, 264, 2158], "temperature": 0.0, "avg_logprob": -0.12803316116333008, "compression_ratio": 1.7101910828025477, "no_speech_prob": 3.418200867599808e-05}, {"id": 354, "seek": 169604, "start": 1706.84, "end": 1710.8799999999999, "text": " of a constant. This is just part of a function signature. And again, we don't care about", "tokens": [295, 257, 5754, 13, 639, 307, 445, 644, 295, 257, 2445, 13397, 13, 400, 797, 11, 321, 500, 380, 1127, 466], "temperature": 0.0, "avg_logprob": -0.12803316116333008, "compression_ratio": 1.7101910828025477, "no_speech_prob": 3.418200867599808e-05}, {"id": 355, "seek": 169604, "start": 1710.8799999999999, "end": 1716.04, "text": " this that much. It isn't something that I really mind about. What's more important though", "tokens": [341, 300, 709, 13, 467, 1943, 380, 746, 300, 286, 534, 1575, 466, 13, 708, 311, 544, 1021, 1673], "temperature": 0.0, "avg_logprob": -0.12803316116333008, "compression_ratio": 1.7101910828025477, "no_speech_prob": 3.418200867599808e-05}, {"id": 356, "seek": 169604, "start": 1716.04, "end": 1720.8, "text": " is this mutant here. Because this is from our client class where we instantiate all", "tokens": [307, 341, 47198, 510, 13, 1436, 341, 307, 490, 527, 6423, 1508, 689, 321, 9836, 13024, 439], "temperature": 0.0, "avg_logprob": -0.12803316116333008, "compression_ratio": 1.7101910828025477, "no_speech_prob": 3.418200867599808e-05}, {"id": 357, "seek": 169604, "start": 1720.8, "end": 1725.92, "text": " of our different API classes. And you can see we actually set voice to non, so we completely", "tokens": [295, 527, 819, 9362, 5359, 13, 400, 291, 393, 536, 321, 767, 992, 3177, 281, 2107, 11, 370, 321, 2584], "temperature": 0.0, "avg_logprob": -0.12803316116333008, "compression_ratio": 1.7101910828025477, "no_speech_prob": 3.418200867599808e-05}, {"id": 358, "seek": 172592, "start": 1725.92, "end": 1731.64, "text": " remove that instantiation. And our tests are still passing. So the reason that actually", "tokens": [4159, 300, 9836, 6642, 13, 400, 527, 6921, 366, 920, 8437, 13, 407, 264, 1778, 300, 767], "temperature": 0.0, "avg_logprob": -0.14388981571903936, "compression_ratio": 1.7532894736842106, "no_speech_prob": 0.0001626372686587274}, {"id": 359, "seek": 172592, "start": 1731.64, "end": 1736.52, "text": " still works, our code base still works even though this isn't testing that case, is because", "tokens": [920, 1985, 11, 527, 3089, 3096, 920, 1985, 754, 1673, 341, 1943, 380, 4997, 300, 1389, 11, 307, 570], "temperature": 0.0, "avg_logprob": -0.14388981571903936, "compression_ratio": 1.7532894736842106, "no_speech_prob": 0.0001626372686587274}, {"id": 360, "seek": 172592, "start": 1736.52, "end": 1741.44, "text": " our tests actually test the voice API separately. They call it manually. But if our clients", "tokens": [527, 6921, 767, 1500, 264, 3177, 9362, 14759, 13, 814, 818, 309, 16945, 13, 583, 498, 527, 6982], "temperature": 0.0, "avg_logprob": -0.14388981571903936, "compression_ratio": 1.7532894736842106, "no_speech_prob": 0.0001626372686587274}, {"id": 361, "seek": 172592, "start": 1741.44, "end": 1744.5600000000002, "text": " are calling it like this, maybe we should have a test for this as well. So this tells", "tokens": [366, 5141, 309, 411, 341, 11, 1310, 321, 820, 362, 257, 1500, 337, 341, 382, 731, 13, 407, 341, 5112], "temperature": 0.0, "avg_logprob": -0.14388981571903936, "compression_ratio": 1.7532894736842106, "no_speech_prob": 0.0001626372686587274}, {"id": 362, "seek": 172592, "start": 1744.5600000000002, "end": 1749.3200000000002, "text": " me, hey, maybe my test suite does need to be expanded. Does that make sense? I'm seeing", "tokens": [385, 11, 4177, 11, 1310, 452, 1500, 14205, 775, 643, 281, 312, 14342, 13, 4402, 300, 652, 2020, 30, 286, 478, 2577], "temperature": 0.0, "avg_logprob": -0.14388981571903936, "compression_ratio": 1.7532894736842106, "no_speech_prob": 0.0001626372686587274}, {"id": 363, "seek": 172592, "start": 1749.3200000000002, "end": 1754.04, "text": " some very, very like, yeah, yeah, that makes sense. I like it. Awesome. Okay, so if you", "tokens": [512, 588, 11, 588, 411, 11, 1338, 11, 1338, 11, 300, 1669, 2020, 13, 286, 411, 309, 13, 10391, 13, 1033, 11, 370, 498, 291], "temperature": 0.0, "avg_logprob": -0.14388981571903936, "compression_ratio": 1.7532894736842106, "no_speech_prob": 0.0001626372686587274}, {"id": 364, "seek": 175404, "start": 1754.04, "end": 1756.68, "text": " are a Python Dev, this isn't the end of the talk, by the way, this is, you know, we've", "tokens": [366, 257, 15329, 9096, 11, 341, 1943, 380, 264, 917, 295, 264, 751, 11, 538, 264, 636, 11, 341, 307, 11, 291, 458, 11, 321, 600], "temperature": 0.0, "avg_logprob": -0.21649142132689622, "compression_ratio": 1.7821782178217822, "no_speech_prob": 0.0008652210817672312}, {"id": 365, "seek": 175404, "start": 1756.68, "end": 1759.76, "text": " got some more context and we'll show you about CI. But if you are interested, then, you know,", "tokens": [658, 512, 544, 4319, 293, 321, 603, 855, 291, 466, 37777, 13, 583, 498, 291, 366, 3102, 11, 550, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.21649142132689622, "compression_ratio": 1.7821782178217822, "no_speech_prob": 0.0008652210817672312}, {"id": 366, "seek": 175404, "start": 1759.76, "end": 1765.36, "text": " feel free to scan this. You've got like four seconds before I move slides. And as I move", "tokens": [841, 1737, 281, 11049, 341, 13, 509, 600, 658, 411, 1451, 3949, 949, 286, 1286, 9788, 13, 400, 382, 286, 1286], "temperature": 0.0, "avg_logprob": -0.21649142132689622, "compression_ratio": 1.7821782178217822, "no_speech_prob": 0.0008652210817672312}, {"id": 367, "seek": 175404, "start": 1765.36, "end": 1770.6399999999999, "text": " slides, I'll very slow motion, I'll be passing over this microphone. Because this was just", "tokens": [9788, 11, 286, 603, 588, 2964, 5394, 11, 286, 603, 312, 8437, 670, 341, 10952, 13, 1436, 341, 390, 445], "temperature": 0.0, "avg_logprob": -0.21649142132689622, "compression_ratio": 1.7821782178217822, "no_speech_prob": 0.0008652210817672312}, {"id": 368, "seek": 175404, "start": 1770.6399999999999, "end": 1776.72, "text": " Python, of course. And I think there are more non-Python Devs here. Just not Python.", "tokens": [15329, 11, 295, 1164, 13, 400, 286, 519, 456, 366, 544, 2107, 12, 47, 88, 11943, 9096, 82, 510, 13, 1449, 406, 15329, 13], "temperature": 0.0, "avg_logprob": -0.21649142132689622, "compression_ratio": 1.7821782178217822, "no_speech_prob": 0.0008652210817672312}, {"id": 369, "seek": 175404, "start": 1776.72, "end": 1782.28, "text": " Let's see. We, of course, have more frameworks. I think they're from more languages out there.", "tokens": [961, 311, 536, 13, 492, 11, 295, 1164, 11, 362, 544, 29834, 13, 286, 519, 436, 434, 490, 544, 8650, 484, 456, 13], "temperature": 0.0, "avg_logprob": -0.21649142132689622, "compression_ratio": 1.7821782178217822, "no_speech_prob": 0.0008652210817672312}, {"id": 370, "seek": 178228, "start": 1782.28, "end": 1786.76, "text": " But I think they're the most important ones that I like personally. And pretty much the", "tokens": [583, 286, 519, 436, 434, 264, 881, 1021, 2306, 300, 286, 411, 5665, 13, 400, 1238, 709, 264], "temperature": 0.0, "avg_logprob": -0.18209137235369002, "compression_ratio": 1.673992673992674, "no_speech_prob": 0.00040855107363313437}, {"id": 371, "seek": 178228, "start": 1786.76, "end": 1792.24, "text": " only really good one for Java is PyTest. And we also have Striker. And Striker is one that", "tokens": [787, 534, 665, 472, 337, 10745, 307, 9953, 51, 377, 13, 400, 321, 611, 362, 20390, 5767, 13, 400, 20390, 5767, 307, 472, 300], "temperature": 0.0, "avg_logprob": -0.18209137235369002, "compression_ratio": 1.673992673992674, "no_speech_prob": 0.00040855107363313437}, {"id": 372, "seek": 178228, "start": 1792.24, "end": 1797.08, "text": " supports quite some languages. It supports JavaScript, C sharp, Scala. Of course, it doesn't", "tokens": [9346, 1596, 512, 8650, 13, 467, 9346, 15778, 11, 383, 8199, 11, 2747, 5159, 13, 2720, 1164, 11, 309, 1177, 380], "temperature": 0.0, "avg_logprob": -0.18209137235369002, "compression_ratio": 1.673992673992674, "no_speech_prob": 0.00040855107363313437}, {"id": 373, "seek": 178228, "start": 1797.08, "end": 1802.8799999999999, "text": " do this in one two. Each one has their own dependencies because you can't have one solution", "tokens": [360, 341, 294, 472, 732, 13, 6947, 472, 575, 641, 1065, 36606, 570, 291, 393, 380, 362, 472, 3827], "temperature": 0.0, "avg_logprob": -0.18209137235369002, "compression_ratio": 1.673992673992674, "no_speech_prob": 0.00040855107363313437}, {"id": 374, "seek": 178228, "start": 1802.8799999999999, "end": 1807.8, "text": " for all. And what you particularly like about is that it supports JavaScript. And this brings", "tokens": [337, 439, 13, 400, 437, 291, 4098, 411, 466, 307, 300, 309, 9346, 15778, 13, 400, 341, 5607], "temperature": 0.0, "avg_logprob": -0.18209137235369002, "compression_ratio": 1.673992673992674, "no_speech_prob": 0.00040855107363313437}, {"id": 375, "seek": 180780, "start": 1807.8, "end": 1813.6399999999999, "text": " this kind of back end heavy tool. Testing is usually mostly, I think, in front end can", "tokens": [341, 733, 295, 646, 917, 4676, 2290, 13, 45517, 307, 2673, 5240, 11, 286, 519, 11, 294, 1868, 917, 393], "temperature": 0.0, "avg_logprob": -0.22660769356621635, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.00021473337255883962}, {"id": 376, "seek": 180780, "start": 1813.6399999999999, "end": 1818.76, "text": " use some law when it comes to testing often. And this also brings the testing frameworks", "tokens": [764, 512, 2101, 562, 309, 1487, 281, 4997, 2049, 13, 400, 341, 611, 5607, 264, 4997, 29834], "temperature": 0.0, "avg_logprob": -0.22660769356621635, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.00021473337255883962}, {"id": 377, "seek": 180780, "start": 1818.76, "end": 1823.2, "text": " and the testing quality more to the front end. So that's what I really, really like.", "tokens": [293, 264, 4997, 3125, 544, 281, 264, 1868, 917, 13, 407, 300, 311, 437, 286, 534, 11, 534, 411, 13], "temperature": 0.0, "avg_logprob": -0.22660769356621635, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.00021473337255883962}, {"id": 378, "seek": 180780, "start": 1823.2, "end": 1828.3999999999999, "text": " But we wanted to discuss a bit more. Mike's already sort of introduced it. So what is", "tokens": [583, 321, 1415, 281, 2248, 257, 857, 544, 13, 6602, 311, 1217, 1333, 295, 7268, 309, 13, 407, 437, 307], "temperature": 0.0, "avg_logprob": -0.22660769356621635, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.00021473337255883962}, {"id": 379, "seek": 180780, "start": 1828.3999999999999, "end": 1835.44, "text": " a good mutation score? We had the good hearts law where we sort of saw that code coverage", "tokens": [257, 665, 27960, 6175, 30, 492, 632, 264, 665, 8852, 2101, 689, 321, 1333, 295, 1866, 300, 3089, 9645], "temperature": 0.0, "avg_logprob": -0.22660769356621635, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.00021473337255883962}, {"id": 380, "seek": 183544, "start": 1835.44, "end": 1841.56, "text": " can also lead to people implementing tests just to improve coverage, not just sort of", "tokens": [393, 611, 1477, 281, 561, 18114, 6921, 445, 281, 3470, 9645, 11, 406, 445, 1333, 295], "temperature": 0.0, "avg_logprob": -0.2084753446489851, "compression_ratio": 1.6058394160583942, "no_speech_prob": 0.00010124823165824637}, {"id": 381, "seek": 183544, "start": 1841.56, "end": 1845.44, "text": " defeats the purpose. You're doing it just for the metric, not for the actual purpose.", "tokens": [7486, 1720, 264, 4334, 13, 509, 434, 884, 309, 445, 337, 264, 20678, 11, 406, 337, 264, 3539, 4334, 13], "temperature": 0.0, "avg_logprob": -0.2084753446489851, "compression_ratio": 1.6058394160583942, "no_speech_prob": 0.00010124823165824637}, {"id": 382, "seek": 183544, "start": 1845.44, "end": 1851.92, "text": " And so how does this work with mutation score? Now, first, here's a picture of how PyTest", "tokens": [400, 370, 577, 775, 341, 589, 365, 27960, 6175, 30, 823, 11, 700, 11, 510, 311, 257, 3036, 295, 577, 9953, 51, 377], "temperature": 0.0, "avg_logprob": -0.2084753446489851, "compression_ratio": 1.6058394160583942, "no_speech_prob": 0.00010124823165824637}, {"id": 383, "seek": 183544, "start": 1851.92, "end": 1857.92, "text": " report looks. So not to bash on Python, but much prettier and much clearer. Because now", "tokens": [2275, 1542, 13, 407, 406, 281, 46183, 322, 15329, 11, 457, 709, 36825, 293, 709, 26131, 13, 1436, 586], "temperature": 0.0, "avg_logprob": -0.2084753446489851, "compression_ratio": 1.6058394160583942, "no_speech_prob": 0.00010124823165824637}, {"id": 384, "seek": 183544, "start": 1857.92, "end": 1861.64, "text": " what, particularly what is interesting about this one, it shows you both the line coverage", "tokens": [437, 11, 4098, 437, 307, 1880, 466, 341, 472, 11, 309, 3110, 291, 1293, 264, 1622, 9645], "temperature": 0.0, "avg_logprob": -0.2084753446489851, "compression_ratio": 1.6058394160583942, "no_speech_prob": 0.00010124823165824637}, {"id": 385, "seek": 186164, "start": 1861.64, "end": 1865.96, "text": " and the mutation coverage. We can ignore the test strain. And this shows us the sweet spots", "tokens": [293, 264, 27960, 9645, 13, 492, 393, 11200, 264, 1500, 14249, 13, 400, 341, 3110, 505, 264, 3844, 10681], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 386, "seek": 186164, "start": 1865.96, "end": 1870.8400000000001, "text": " in a report. Because at the end, we have generated a lot of mutants. We have a lot of classes.", "tokens": [294, 257, 2275, 13, 1436, 412, 264, 917, 11, 321, 362, 10833, 257, 688, 295, 5839, 1719, 13, 492, 362, 257, 688, 295, 5359, 13], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 387, "seek": 186164, "start": 1870.8400000000001, "end": 1873.76, "text": " And we only have very little time. So where are we going to look and investigate this", "tokens": [400, 321, 787, 362, 588, 707, 565, 13, 407, 689, 366, 321, 516, 281, 574, 293, 15013, 341], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 388, "seek": 186164, "start": 1873.76, "end": 1878.64, "text": " report to see where the strains are? And the one that's the least interesting here is the", "tokens": [2275, 281, 536, 689, 264, 39110, 366, 30, 400, 264, 472, 300, 311, 264, 1935, 1880, 510, 307, 264], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 389, "seek": 186164, "start": 1878.64, "end": 1883.16, "text": " notification service. The notification service also doesn't have any coverage. And if there", "tokens": [11554, 2643, 13, 440, 11554, 2643, 611, 1177, 380, 362, 604, 9645, 13, 400, 498, 456], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 390, "seek": 186164, "start": 1883.16, "end": 1886.2800000000002, "text": " is no coverage, then the mutants are also not interesting because you have a bigger problem", "tokens": [307, 572, 9645, 11, 550, 264, 5839, 1719, 366, 611, 406, 1880, 570, 291, 362, 257, 3801, 1154], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 391, "seek": 186164, "start": 1886.2800000000002, "end": 1891.0, "text": " here, which is you don't have tests at all for this. Then you have a choice. You have", "tokens": [510, 11, 597, 307, 291, 500, 380, 362, 6921, 412, 439, 337, 341, 13, 1396, 291, 362, 257, 3922, 13, 509, 362], "temperature": 0.0, "avg_logprob": -0.14516386642954707, "compression_ratio": 1.9627329192546583, "no_speech_prob": 0.00020320851763244718}, {"id": 392, "seek": 189100, "start": 1891.0, "end": 1894.28, "text": " the proposal service and proposed service too. Now, the fact that they are named equally", "tokens": [264, 11494, 2643, 293, 10348, 2643, 886, 13, 823, 11, 264, 1186, 300, 436, 366, 4926, 12309], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 393, "seek": 189100, "start": 1894.28, "end": 1899.48, "text": " is because they're from another example. But proposed service too is the one that has 100%", "tokens": [307, 570, 436, 434, 490, 1071, 1365, 13, 583, 10348, 2643, 886, 307, 264, 472, 300, 575, 2319, 4], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 394, "seek": 189100, "start": 1899.48, "end": 1903.6, "text": " coverage and yet it didn't kill a single mutant. And this is the sweet spot because this means", "tokens": [9645, 293, 1939, 309, 994, 380, 1961, 257, 2167, 47198, 13, 400, 341, 307, 264, 3844, 4008, 570, 341, 1355], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 395, "seek": 189100, "start": 1903.6, "end": 1908.2, "text": " that we have code that is well tested. Or at least there's tests that covering this", "tokens": [300, 321, 362, 3089, 300, 307, 731, 8246, 13, 1610, 412, 1935, 456, 311, 6921, 300, 10322, 341], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 396, "seek": 189100, "start": 1908.2, "end": 1912.52, "text": " piece of code, but there is no single bug that was caught. So this deserves some attention", "tokens": [2522, 295, 3089, 11, 457, 456, 307, 572, 2167, 7426, 300, 390, 5415, 13, 407, 341, 17037, 512, 3202], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 397, "seek": 189100, "start": 1912.52, "end": 1916.6, "text": " because it means that we didn't fully test this. So these are the hotspots where you", "tokens": [570, 309, 1355, 300, 321, 994, 380, 4498, 1500, 341, 13, 407, 613, 366, 264, 36121, 79, 1971, 689, 291], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 398, "seek": 189100, "start": 1916.6, "end": 1920.96, "text": " open a report. The ones with high line coverage and low mutation coverage, those that are", "tokens": [1269, 257, 2275, 13, 440, 2306, 365, 1090, 1622, 9645, 293, 2295, 27960, 9645, 11, 729, 300, 366], "temperature": 0.0, "avg_logprob": -0.1581011791618503, "compression_ratio": 1.8851963746223566, "no_speech_prob": 0.00020256591960787773}, {"id": 399, "seek": 192096, "start": 1920.96, "end": 1924.76, "text": " the ones you really want to go through. Those are the ones that give you the findings to", "tokens": [264, 2306, 291, 534, 528, 281, 352, 807, 13, 3950, 366, 264, 2306, 300, 976, 291, 264, 16483, 281], "temperature": 0.0, "avg_logprob": -0.17180335268061211, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.00023999637051019818}, {"id": 400, "seek": 192096, "start": 1924.76, "end": 1928.96, "text": " go to your team and say, hey, see, we need mutation testing because here, just these", "tokens": [352, 281, 428, 1469, 293, 584, 11, 4177, 11, 536, 11, 321, 643, 27960, 4997, 570, 510, 11, 445, 613], "temperature": 0.0, "avg_logprob": -0.17180335268061211, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.00023999637051019818}, {"id": 401, "seek": 192096, "start": 1928.96, "end": 1934.44, "text": " two classes alone already, it showed me that we need to improve our quality. Now, back", "tokens": [732, 5359, 3312, 1217, 11, 309, 4712, 385, 300, 321, 643, 281, 3470, 527, 3125, 13, 823, 11, 646], "temperature": 0.0, "avg_logprob": -0.17180335268061211, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.00023999637051019818}, {"id": 402, "seek": 192096, "start": 1934.44, "end": 1945.44, "text": " to the score. So the example we had, we managed to kill 512 out of 682 mutants, which is about", "tokens": [281, 264, 6175, 13, 407, 264, 1365, 321, 632, 11, 321, 6453, 281, 1961, 1025, 4762, 484, 295, 23317, 17, 5839, 1719, 11, 597, 307, 466], "temperature": 0.0, "avg_logprob": -0.17180335268061211, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.00023999637051019818}, {"id": 403, "seek": 194544, "start": 1945.44, "end": 1956.52, "text": " a 75% score. Now, the question is, is this a good score? Yes, yes, the golden answer.", "tokens": [257, 9562, 4, 6175, 13, 823, 11, 264, 1168, 307, 11, 307, 341, 257, 665, 6175, 30, 1079, 11, 2086, 11, 264, 9729, 1867, 13], "temperature": 0.0, "avg_logprob": -0.18828372632042836, "compression_ratio": 1.699248120300752, "no_speech_prob": 0.0005783693632110953}, {"id": 404, "seek": 194544, "start": 1956.52, "end": 1961.96, "text": " It depends. I love that answer. We already saw that 100% doesn't make sense. Things like", "tokens": [467, 5946, 13, 286, 959, 300, 1867, 13, 492, 1217, 1866, 300, 2319, 4, 1177, 380, 652, 2020, 13, 9514, 411], "temperature": 0.0, "avg_logprob": -0.18828372632042836, "compression_ratio": 1.699248120300752, "no_speech_prob": 0.0005783693632110953}, {"id": 405, "seek": 194544, "start": 1961.96, "end": 1966.6000000000001, "text": " logging and there are more things like generated code, et cetera, things that you don't necessarily", "tokens": [27991, 293, 456, 366, 544, 721, 411, 10833, 3089, 11, 1030, 11458, 11, 721, 300, 291, 500, 380, 4725], "temperature": 0.0, "avg_logprob": -0.18828372632042836, "compression_ratio": 1.699248120300752, "no_speech_prob": 0.0005783693632110953}, {"id": 406, "seek": 194544, "start": 1966.6000000000001, "end": 1970.92, "text": " want to test, even though there are mutants generated for it. Now, there are a couple", "tokens": [528, 281, 1500, 11, 754, 1673, 456, 366, 5839, 1719, 10833, 337, 309, 13, 823, 11, 456, 366, 257, 1916], "temperature": 0.0, "avg_logprob": -0.18828372632042836, "compression_ratio": 1.699248120300752, "no_speech_prob": 0.0005783693632110953}, {"id": 407, "seek": 194544, "start": 1970.92, "end": 1974.6000000000001, "text": " of things you can, of course, do. You can also, depending on the language and the framework", "tokens": [295, 721, 291, 393, 11, 295, 1164, 11, 360, 13, 509, 393, 611, 11, 5413, 322, 264, 2856, 293, 264, 8388], "temperature": 0.0, "avg_logprob": -0.18828372632042836, "compression_ratio": 1.699248120300752, "no_speech_prob": 0.0005783693632110953}, {"id": 408, "seek": 197460, "start": 1974.6, "end": 1979.6, "text": " you use, you can tweak the mutation testing framework quite a bit. For example, the PyTest", "tokens": [291, 764, 11, 291, 393, 29879, 264, 27960, 4997, 8388, 1596, 257, 857, 13, 1171, 1365, 11, 264, 9953, 51, 377], "temperature": 0.0, "avg_logprob": -0.2240322704972892, "compression_ratio": 1.6532846715328466, "no_speech_prob": 0.0002538289118092507}, {"id": 409, "seek": 197460, "start": 1979.6, "end": 1984.6, "text": " version actually, out of the box, already ignores and doesn't mutate any logging lines.", "tokens": [3037, 767, 11, 484, 295, 264, 2424, 11, 1217, 5335, 2706, 293, 1177, 380, 5839, 473, 604, 27991, 3876, 13], "temperature": 0.0, "avg_logprob": -0.2240322704972892, "compression_ratio": 1.6532846715328466, "no_speech_prob": 0.0002538289118092507}, {"id": 410, "seek": 197460, "start": 1984.6, "end": 1990.3999999999999, "text": " And all the big frameworks are known to the tool. So anything that goes to SLF4J, it doesn't", "tokens": [400, 439, 264, 955, 29834, 366, 2570, 281, 264, 2290, 13, 407, 1340, 300, 1709, 281, 22999, 37, 19, 41, 11, 309, 1177, 380], "temperature": 0.0, "avg_logprob": -0.2240322704972892, "compression_ratio": 1.6532846715328466, "no_speech_prob": 0.0002538289118092507}, {"id": 411, "seek": 197460, "start": 1990.3999999999999, "end": 1994.84, "text": " mutate it. So it also doesn't appear in your report, which is quite nice. And you can easily", "tokens": [5839, 473, 309, 13, 407, 309, 611, 1177, 380, 4204, 294, 428, 2275, 11, 597, 307, 1596, 1481, 13, 400, 291, 393, 3612], "temperature": 0.0, "avg_logprob": -0.2240322704972892, "compression_ratio": 1.6532846715328466, "no_speech_prob": 0.0002538289118092507}, {"id": 412, "seek": 197460, "start": 1994.84, "end": 1999.4399999999998, "text": " add things, like if you have a custom metrics facade somewhere, also typically something", "tokens": [909, 721, 11, 411, 498, 291, 362, 257, 2375, 16367, 46261, 4079, 11, 611, 5850, 746], "temperature": 0.0, "avg_logprob": -0.2240322704972892, "compression_ratio": 1.6532846715328466, "no_speech_prob": 0.0002538289118092507}, {"id": 413, "seek": 199944, "start": 1999.44, "end": 2004.96, "text": " you don't want to cover unit tests, you can add that as well. So the thing here is that", "tokens": [291, 500, 380, 528, 281, 2060, 4985, 6921, 11, 291, 393, 909, 300, 382, 731, 13, 407, 264, 551, 510, 307, 300], "temperature": 0.0, "avg_logprob": -0.13812265396118165, "compression_ratio": 1.66793893129771, "no_speech_prob": 6.690756708849221e-05}, {"id": 414, "seek": 199944, "start": 2004.96, "end": 2008.48, "text": " mutate testing is not really a score you want to achieve. It's more that the report can", "tokens": [5839, 473, 4997, 307, 406, 534, 257, 6175, 291, 528, 281, 4584, 13, 467, 311, 544, 300, 264, 2275, 393], "temperature": 0.0, "avg_logprob": -0.13812265396118165, "compression_ratio": 1.66793893129771, "no_speech_prob": 6.690756708849221e-05}, {"id": 415, "seek": 199944, "start": 2008.48, "end": 2012.8400000000001, "text": " be interesting to look at and gives you sort of the nice spots. And once you completely", "tokens": [312, 1880, 281, 574, 412, 293, 2709, 291, 1333, 295, 264, 1481, 10681, 13, 400, 1564, 291, 2584], "temperature": 0.0, "avg_logprob": -0.13812265396118165, "compression_ratio": 1.66793893129771, "no_speech_prob": 6.690756708849221e-05}, {"id": 416, "seek": 199944, "start": 2012.8400000000001, "end": 2016.16, "text": " set it up nice and you're familiar with the report, you can maybe start looking at the", "tokens": [992, 309, 493, 1481, 293, 291, 434, 4963, 365, 264, 2275, 11, 291, 393, 1310, 722, 1237, 412, 264], "temperature": 0.0, "avg_logprob": -0.13812265396118165, "compression_ratio": 1.66793893129771, "no_speech_prob": 6.690756708849221e-05}, {"id": 417, "seek": 199944, "start": 2016.16, "end": 2021.2, "text": " score, but definitely it shouldn't become an 80% goal or something like it was of code", "tokens": [6175, 11, 457, 2138, 309, 4659, 380, 1813, 364, 4688, 4, 3387, 420, 746, 411, 309, 390, 295, 3089], "temperature": 0.0, "avg_logprob": -0.13812265396118165, "compression_ratio": 1.66793893129771, "no_speech_prob": 6.690756708849221e-05}, {"id": 418, "seek": 202120, "start": 2021.2, "end": 2029.8, "text": " coverage. It just goes through the report instead. So now we've sort of discussed all", "tokens": [9645, 13, 467, 445, 1709, 807, 264, 2275, 2602, 13, 407, 586, 321, 600, 1333, 295, 7152, 439], "temperature": 0.0, "avg_logprob": -0.1866572947984331, "compression_ratio": 1.6859903381642511, "no_speech_prob": 0.00011814610479632393}, {"id": 419, "seek": 202120, "start": 2029.8, "end": 2034.88, "text": " the tools you need. We have discussed the frameworks. We have discussed the technology", "tokens": [264, 3873, 291, 643, 13, 492, 362, 7152, 264, 29834, 13, 492, 362, 7152, 264, 2899], "temperature": 0.0, "avg_logprob": -0.1866572947984331, "compression_ratio": 1.6859903381642511, "no_speech_prob": 0.00011814610479632393}, {"id": 420, "seek": 202120, "start": 2034.88, "end": 2043.2, "text": " technology. And now it's time, of course, for you to fly. So we need to, how would you", "tokens": [2899, 13, 400, 586, 309, 311, 565, 11, 295, 1164, 11, 337, 291, 281, 3603, 13, 407, 321, 643, 281, 11, 577, 576, 291], "temperature": 0.0, "avg_logprob": -0.1866572947984331, "compression_ratio": 1.6859903381642511, "no_speech_prob": 0.00011814610479632393}, {"id": 421, "seek": 202120, "start": 2043.2, "end": 2048.2400000000002, "text": " get started on this? And the thing I think that's important here is if you want to start,", "tokens": [483, 1409, 322, 341, 30, 400, 264, 551, 286, 519, 300, 311, 1021, 510, 307, 498, 291, 528, 281, 722, 11], "temperature": 0.0, "avg_logprob": -0.1866572947984331, "compression_ratio": 1.6859903381642511, "no_speech_prob": 0.00011814610479632393}, {"id": 422, "seek": 204824, "start": 2048.24, "end": 2053.9199999999996, "text": " so you now think, oh, this is a great talk. I want to start with mutate testing. Depending", "tokens": [370, 291, 586, 519, 11, 1954, 11, 341, 307, 257, 869, 751, 13, 286, 528, 281, 722, 365, 5839, 473, 4997, 13, 22539], "temperature": 0.0, "avg_logprob": -0.16024952070087406, "compression_ratio": 1.7015873015873015, "no_speech_prob": 0.00017692954861558974}, {"id": 423, "seek": 204824, "start": 2053.9199999999996, "end": 2058.3599999999997, "text": " on the size of your project, it might be wise to just start with just a single package.", "tokens": [322, 264, 2744, 295, 428, 1716, 11, 309, 1062, 312, 10829, 281, 445, 722, 365, 445, 257, 2167, 7372, 13], "temperature": 0.0, "avg_logprob": -0.16024952070087406, "compression_ratio": 1.7015873015873015, "no_speech_prob": 0.00017692954861558974}, {"id": 424, "seek": 204824, "start": 2058.3599999999997, "end": 2063.52, "text": " I've done this on projects that are a couple of, say, a thousand lines big. And even though", "tokens": [286, 600, 1096, 341, 322, 4455, 300, 366, 257, 1916, 295, 11, 584, 11, 257, 4714, 3876, 955, 13, 400, 754, 1673], "temperature": 0.0, "avg_logprob": -0.16024952070087406, "compression_ratio": 1.7015873015873015, "no_speech_prob": 0.00017692954861558974}, {"id": 425, "seek": 204824, "start": 2063.52, "end": 2067.64, "text": " in Max's example, we had 682 mutants, this can also, depending on the kind of code you", "tokens": [294, 7402, 311, 1365, 11, 321, 632, 23317, 17, 5839, 1719, 11, 341, 393, 611, 11, 5413, 322, 264, 733, 295, 3089, 291], "temperature": 0.0, "avg_logprob": -0.16024952070087406, "compression_ratio": 1.7015873015873015, "no_speech_prob": 0.00017692954861558974}, {"id": 426, "seek": 204824, "start": 2067.64, "end": 2071.8799999999997, "text": " have there, easily grow to tens of thousands of mutants, which can be quite slow. It can", "tokens": [362, 456, 11, 3612, 1852, 281, 10688, 295, 5383, 295, 5839, 1719, 11, 597, 393, 312, 1596, 2964, 13, 467, 393], "temperature": 0.0, "avg_logprob": -0.16024952070087406, "compression_ratio": 1.7015873015873015, "no_speech_prob": 0.00017692954861558974}, {"id": 427, "seek": 204824, "start": 2071.8799999999997, "end": 2075.08, "text": " also be that there's something weird in your code base that doesn't really work well with", "tokens": [611, 312, 300, 456, 311, 746, 3657, 294, 428, 3089, 3096, 300, 1177, 380, 534, 589, 731, 365], "temperature": 0.0, "avg_logprob": -0.16024952070087406, "compression_ratio": 1.7015873015873015, "no_speech_prob": 0.00017692954861558974}, {"id": 428, "seek": 207508, "start": 2075.08, "end": 2081.3199999999997, "text": " mutate testing or something that's just extremely slow. An example that I had was that we hadn't", "tokens": [5839, 473, 4997, 420, 746, 300, 311, 445, 4664, 2964, 13, 1107, 1365, 300, 286, 632, 390, 300, 321, 8782, 380], "temperature": 0.0, "avg_logprob": -0.1899971432156033, "compression_ratio": 1.7003610108303249, "no_speech_prob": 0.00018203651416115463}, {"id": 429, "seek": 207508, "start": 2081.3199999999997, "end": 2088.36, "text": " thought it's good to keep in mind. It's actually just to take a sidestep. The mutate test framework", "tokens": [1194, 309, 311, 665, 281, 1066, 294, 1575, 13, 467, 311, 767, 445, 281, 747, 257, 20822, 377, 595, 13, 440, 5839, 473, 1500, 8388], "temperature": 0.0, "avg_logprob": -0.1899971432156033, "compression_ratio": 1.7003610108303249, "no_speech_prob": 0.00018203651416115463}, {"id": 430, "seek": 207508, "start": 2088.36, "end": 2093.7999999999997, "text": " also measures in the beginning for each individual test, which code it covers. So there's a nice", "tokens": [611, 8000, 294, 264, 2863, 337, 1184, 2609, 1500, 11, 597, 3089, 309, 10538, 13, 407, 456, 311, 257, 1481], "temperature": 0.0, "avg_logprob": -0.1899971432156033, "compression_ratio": 1.7003610108303249, "no_speech_prob": 0.00018203651416115463}, {"id": 431, "seek": 207508, "start": 2093.7999999999997, "end": 2099.52, "text": " graph from code, production code, to the tests. This helps us optimize because if we want", "tokens": [4295, 490, 3089, 11, 4265, 3089, 11, 281, 264, 6921, 13, 639, 3665, 505, 19719, 570, 498, 321, 528], "temperature": 0.0, "avg_logprob": -0.1899971432156033, "compression_ratio": 1.7003610108303249, "no_speech_prob": 0.00018203651416115463}, {"id": 432, "seek": 207508, "start": 2099.52, "end": 2103.44, "text": " to run the entire test suite, all the tests for every single mutant, it's going to take", "tokens": [281, 1190, 264, 2302, 1500, 14205, 11, 439, 264, 6921, 337, 633, 2167, 47198, 11, 309, 311, 516, 281, 747], "temperature": 0.0, "avg_logprob": -0.1899971432156033, "compression_ratio": 1.7003610108303249, "no_speech_prob": 0.00018203651416115463}, {"id": 433, "seek": 210344, "start": 2103.44, "end": 2108.0, "text": " endless. Instead, because we know the coverage, we can also see if we mutate this one line,", "tokens": [16144, 13, 7156, 11, 570, 321, 458, 264, 9645, 11, 321, 393, 611, 536, 498, 321, 5839, 473, 341, 472, 1622, 11], "temperature": 0.0, "avg_logprob": -0.12897355427113613, "compression_ratio": 1.7625418060200668, "no_speech_prob": 0.00010857650340767577}, {"id": 434, "seek": 210344, "start": 2108.0, "end": 2113.28, "text": " we know which test is covered. So we only need to execute those few tests. But what", "tokens": [321, 458, 597, 1500, 307, 5343, 13, 407, 321, 787, 643, 281, 14483, 729, 1326, 6921, 13, 583, 437], "temperature": 0.0, "avg_logprob": -0.12897355427113613, "compression_ratio": 1.7625418060200668, "no_speech_prob": 0.00010857650340767577}, {"id": 435, "seek": 210344, "start": 2113.28, "end": 2116.88, "text": " if you have tests that actually cover half your code base? So, for example, one of the", "tokens": [498, 291, 362, 6921, 300, 767, 2060, 1922, 428, 3089, 3096, 30, 407, 11, 337, 1365, 11, 472, 295, 264], "temperature": 0.0, "avg_logprob": -0.12897355427113613, "compression_ratio": 1.7625418060200668, "no_speech_prob": 0.00010857650340767577}, {"id": 436, "seek": 210344, "start": 2116.88, "end": 2121.44, "text": " things you can do in Java, if you're doing things with Spring, is you can actually boot", "tokens": [721, 291, 393, 360, 294, 10745, 11, 498, 291, 434, 884, 721, 365, 14013, 11, 307, 291, 393, 767, 11450], "temperature": 0.0, "avg_logprob": -0.12897355427113613, "compression_ratio": 1.7625418060200668, "no_speech_prob": 0.00010857650340767577}, {"id": 437, "seek": 210344, "start": 2121.44, "end": 2125.52, "text": " up the entire Spring application and start doing acceptance tests from your unit tests,", "tokens": [493, 264, 2302, 14013, 3861, 293, 722, 884, 20351, 6921, 490, 428, 4985, 6921, 11], "temperature": 0.0, "avg_logprob": -0.12897355427113613, "compression_ratio": 1.7625418060200668, "no_speech_prob": 0.00010857650340767577}, {"id": 438, "seek": 210344, "start": 2125.52, "end": 2130.08, "text": " which is typically also quite, not necessarily the worst thing to do, but you now have a", "tokens": [597, 307, 5850, 611, 1596, 11, 406, 4725, 264, 5855, 551, 281, 360, 11, 457, 291, 586, 362, 257], "temperature": 0.0, "avg_logprob": -0.12897355427113613, "compression_ratio": 1.7625418060200668, "no_speech_prob": 0.00010857650340767577}, {"id": 439, "seek": 213008, "start": 2130.08, "end": 2134.64, "text": " very slow test that does cover half your code base that will be executed for each single", "tokens": [588, 2964, 1500, 300, 775, 2060, 1922, 428, 3089, 3096, 300, 486, 312, 17577, 337, 1184, 2167], "temperature": 0.0, "avg_logprob": -0.16863565146923065, "compression_ratio": 1.7281553398058251, "no_speech_prob": 0.00013676898379344493}, {"id": 440, "seek": 213008, "start": 2134.64, "end": 2138.36, "text": " mutant. So these are things you want to get rid of. You want to exclude this acceptance", "tokens": [47198, 13, 407, 613, 366, 721, 291, 528, 281, 483, 3973, 295, 13, 509, 528, 281, 33536, 341, 20351], "temperature": 0.0, "avg_logprob": -0.16863565146923065, "compression_ratio": 1.7281553398058251, "no_speech_prob": 0.00013676898379344493}, {"id": 441, "seek": 213008, "start": 2138.36, "end": 2144.12, "text": " test because otherwise you're going to be waiting endlessly. So my point about starting", "tokens": [1500, 570, 5911, 291, 434, 516, 281, 312, 3806, 44920, 13, 407, 452, 935, 466, 2891], "temperature": 0.0, "avg_logprob": -0.16863565146923065, "compression_ratio": 1.7281553398058251, "no_speech_prob": 0.00013676898379344493}, {"id": 442, "seek": 213008, "start": 2144.12, "end": 2147.92, "text": " locally and starting small was start just with one package. Start with the utility package", "tokens": [16143, 293, 2891, 1359, 390, 722, 445, 365, 472, 7372, 13, 6481, 365, 264, 14877, 7372], "temperature": 0.0, "avg_logprob": -0.16863565146923065, "compression_ratio": 1.7281553398058251, "no_speech_prob": 0.00013676898379344493}, {"id": 443, "seek": 213008, "start": 2147.92, "end": 2152.08, "text": " to see if it works, see if the report works for you. And then from there, you can expand", "tokens": [281, 536, 498, 309, 1985, 11, 536, 498, 264, 2275, 1985, 337, 291, 13, 400, 550, 490, 456, 11, 291, 393, 5268], "temperature": 0.0, "avg_logprob": -0.16863565146923065, "compression_ratio": 1.7281553398058251, "no_speech_prob": 0.00013676898379344493}, {"id": 444, "seek": 213008, "start": 2152.08, "end": 2158.16, "text": " at more packages and also you can see, oh, now it's taking 10 times as long. Why is this?", "tokens": [412, 544, 17401, 293, 611, 291, 393, 536, 11, 1954, 11, 586, 309, 311, 1940, 1266, 1413, 382, 938, 13, 1545, 307, 341, 30], "temperature": 0.0, "avg_logprob": -0.16863565146923065, "compression_ratio": 1.7281553398058251, "no_speech_prob": 0.00013676898379344493}, {"id": 445, "seek": 215816, "start": 2158.16, "end": 2163.96, "text": " And you can find the painful packages there. So as I mentioned, you can exclude some tests", "tokens": [400, 291, 393, 915, 264, 11697, 17401, 456, 13, 407, 382, 286, 2835, 11, 291, 393, 33536, 512, 6921], "temperature": 0.0, "avg_logprob": -0.16222890835363887, "compression_ratio": 1.7848605577689243, "no_speech_prob": 0.00022423923655878752}, {"id": 446, "seek": 215816, "start": 2163.96, "end": 2167.96, "text": " and also there are often candidates, certain pieces of code you might want to exclude.", "tokens": [293, 611, 456, 366, 2049, 11255, 11, 1629, 3755, 295, 3089, 291, 1062, 528, 281, 33536, 13], "temperature": 0.0, "avg_logprob": -0.16222890835363887, "compression_ratio": 1.7848605577689243, "no_speech_prob": 0.00022423923655878752}, {"id": 447, "seek": 215816, "start": 2167.96, "end": 2173.3199999999997, "text": " For example, there's no use in testing generated code, but also it might be that you have certain", "tokens": [1171, 1365, 11, 456, 311, 572, 764, 294, 4997, 10833, 3089, 11, 457, 611, 309, 1062, 312, 300, 291, 362, 1629], "temperature": 0.0, "avg_logprob": -0.16222890835363887, "compression_ratio": 1.7848605577689243, "no_speech_prob": 0.00022423923655878752}, {"id": 448, "seek": 215816, "start": 2173.3199999999997, "end": 2179.64, "text": " domain packages that contain just all your domain objects, your pojos, which is just", "tokens": [9274, 17401, 300, 5304, 445, 439, 428, 9274, 6565, 11, 428, 714, 19136, 11, 597, 307, 445], "temperature": 0.0, "avg_logprob": -0.16222890835363887, "compression_ratio": 1.7848605577689243, "no_speech_prob": 0.00022423923655878752}, {"id": 449, "seek": 215816, "start": 2179.64, "end": 2183.8799999999997, "text": " setters and getters, something that you also typically want to exclude in your coverage", "tokens": [992, 1559, 293, 483, 1559, 11, 746, 300, 291, 611, 5850, 528, 281, 33536, 294, 428, 9645], "temperature": 0.0, "avg_logprob": -0.16222890835363887, "compression_ratio": 1.7848605577689243, "no_speech_prob": 0.00022423923655878752}, {"id": 450, "seek": 218388, "start": 2183.88, "end": 2191.44, "text": " report. You might also want to exclude this from code mutation, from mutation testing.", "tokens": [2275, 13, 509, 1062, 611, 528, 281, 33536, 341, 490, 3089, 27960, 11, 490, 27960, 4997, 13], "temperature": 0.0, "avg_logprob": -0.17339075406392415, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.00014519199612550437}, {"id": 451, "seek": 218388, "start": 2191.44, "end": 2196.6800000000003, "text": " And now that's done. We need to, so we talked about running it on your machine. We also", "tokens": [400, 586, 300, 311, 1096, 13, 492, 643, 281, 11, 370, 321, 2825, 466, 2614, 309, 322, 428, 3479, 13, 492, 611], "temperature": 0.0, "avg_logprob": -0.17339075406392415, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.00014519199612550437}, {"id": 452, "seek": 218388, "start": 2196.6800000000003, "end": 2203.7200000000003, "text": " can do this in the cloud, of course. Thank you. So as you can see, there's a pigeon", "tokens": [393, 360, 341, 294, 264, 4588, 11, 295, 1164, 13, 1044, 291, 13, 407, 382, 291, 393, 536, 11, 456, 311, 257, 37886], "temperature": 0.0, "avg_logprob": -0.17339075406392415, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.00014519199612550437}, {"id": 453, "seek": 218388, "start": 2203.7200000000003, "end": 2207.76, "text": " on the slide and Paco, as we've said, has a personal vendetta, so I've taken over the", "tokens": [322, 264, 4137, 293, 10702, 78, 11, 382, 321, 600, 848, 11, 575, 257, 2973, 10169, 16593, 11, 370, 286, 600, 2726, 670, 264], "temperature": 0.0, "avg_logprob": -0.17339075406392415, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.00014519199612550437}, {"id": 454, "seek": 218388, "start": 2207.76, "end": 2213.76, "text": " section. So here we can see that we're going to run off our machine. So why would you want", "tokens": [3541, 13, 407, 510, 321, 393, 536, 300, 321, 434, 516, 281, 1190, 766, 527, 3479, 13, 407, 983, 576, 291, 528], "temperature": 0.0, "avg_logprob": -0.17339075406392415, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.00014519199612550437}, {"id": 455, "seek": 221376, "start": 2213.76, "end": 2217.2000000000003, "text": " to run off your machine rather than on your machine? Any questions? Any ideas?", "tokens": [281, 1190, 766, 428, 3479, 2831, 813, 322, 428, 3479, 30, 2639, 1651, 30, 2639, 3487, 30], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 456, "seek": 221376, "start": 2217.2000000000003, "end": 2219.8, "text": " What happens in the background?", "tokens": [708, 2314, 294, 264, 3678, 30], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 457, "seek": 221376, "start": 2219.8, "end": 2223.44, "text": " Yes. So what happens in the background is what was said there. Any other reason you", "tokens": [1079, 13, 407, 437, 2314, 294, 264, 3678, 307, 437, 390, 848, 456, 13, 2639, 661, 1778, 291], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 458, "seek": 221376, "start": 2223.44, "end": 2228.6400000000003, "text": " might want to run non-locally? No. I got a couple. Oh, oh, hand.", "tokens": [1062, 528, 281, 1190, 2107, 12, 5842, 379, 30, 883, 13, 286, 658, 257, 1916, 13, 876, 11, 1954, 11, 1011, 13], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 459, "seek": 221376, "start": 2228.6400000000003, "end": 2229.6400000000003, "text": " CI.", "tokens": [37777, 13], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 460, "seek": 221376, "start": 2229.6400000000003, "end": 2232.76, "text": " CI. Yeah, you might want to end your CI system. In fact, that's what we'll be showing you.", "tokens": [37777, 13, 865, 11, 291, 1062, 528, 281, 917, 428, 37777, 1185, 13, 682, 1186, 11, 300, 311, 437, 321, 603, 312, 4099, 291, 13], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 461, "seek": 221376, "start": 2232.76, "end": 2239.0400000000004, "text": " So foreshadowing. I like it. So yeah, it takes some time. And if you're using a CI", "tokens": [407, 2091, 2716, 345, 9637, 13, 286, 411, 309, 13, 407, 1338, 11, 309, 2516, 512, 565, 13, 400, 498, 291, 434, 1228, 257, 37777], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 462, "seek": 221376, "start": 2239.0400000000004, "end": 2242.96, "text": " system, you get to use those cloud resources. And also what's important is that you can,", "tokens": [1185, 11, 291, 483, 281, 764, 729, 4588, 3593, 13, 400, 611, 437, 311, 1021, 307, 300, 291, 393, 11], "temperature": 0.0, "avg_logprob": -0.2201260585410922, "compression_ratio": 1.777027027027027, "no_speech_prob": 9.929407679010183e-05}, {"id": 463, "seek": 224296, "start": 2242.96, "end": 2246.92, "text": " if you've got code which is maybe dependent on different OSes, might behave differently,", "tokens": [498, 291, 600, 658, 3089, 597, 307, 1310, 12334, 322, 819, 12731, 279, 11, 1062, 15158, 7614, 11], "temperature": 0.0, "avg_logprob": -0.11848287582397461, "compression_ratio": 1.6730769230769231, "no_speech_prob": 7.931870641186833e-05}, {"id": 464, "seek": 224296, "start": 2246.92, "end": 2251.4, "text": " you can specify different versions and platforms to run on as well.", "tokens": [291, 393, 16500, 819, 9606, 293, 9473, 281, 1190, 322, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.11848287582397461, "compression_ratio": 1.6730769230769231, "no_speech_prob": 7.931870641186833e-05}, {"id": 465, "seek": 224296, "start": 2251.4, "end": 2255.68, "text": " So stop talking. I hear you cry. Well, I'm afraid this is what we're here for. But unfortunately,", "tokens": [407, 1590, 1417, 13, 286, 1568, 291, 3305, 13, 1042, 11, 286, 478, 4638, 341, 307, 437, 321, 434, 510, 337, 13, 583, 7015, 11], "temperature": 0.0, "avg_logprob": -0.11848287582397461, "compression_ratio": 1.6730769230769231, "no_speech_prob": 7.931870641186833e-05}, {"id": 466, "seek": 224296, "start": 2255.68, "end": 2260.2, "text": " I will be keeping talking. But what I will do is show it a bit of an example. So I applied", "tokens": [286, 486, 312, 5145, 1417, 13, 583, 437, 286, 486, 360, 307, 855, 309, 257, 857, 295, 364, 1365, 13, 407, 286, 6456], "temperature": 0.0, "avg_logprob": -0.11848287582397461, "compression_ratio": 1.6730769230769231, "no_speech_prob": 7.931870641186833e-05}, {"id": 467, "seek": 224296, "start": 2260.2, "end": 2265.16, "text": " this to my code base, my own code base myself, into my CI system. So you can see here, this", "tokens": [341, 281, 452, 3089, 3096, 11, 452, 1065, 3089, 3096, 2059, 11, 666, 452, 37777, 1185, 13, 407, 291, 393, 536, 510, 11, 341], "temperature": 0.0, "avg_logprob": -0.11848287582397461, "compression_ratio": 1.6730769230769231, "no_speech_prob": 7.931870641186833e-05}, {"id": 468, "seek": 224296, "start": 2265.16, "end": 2269.64, "text": " is GitHub Actions. And I've got a piece of YAML, essentially. I've got this mutation", "tokens": [307, 23331, 3251, 626, 13, 400, 286, 600, 658, 257, 2522, 295, 398, 2865, 43, 11, 4476, 13, 286, 600, 658, 341, 27960], "temperature": 0.0, "avg_logprob": -0.11848287582397461, "compression_ratio": 1.6730769230769231, "no_speech_prob": 7.931870641186833e-05}, {"id": 469, "seek": 226964, "start": 2269.64, "end": 2275.52, "text": " test.yaml file. And what that does is set up an action for me to use. So this is something", "tokens": [1500, 13, 88, 335, 75, 3991, 13, 400, 437, 300, 775, 307, 992, 493, 364, 3069, 337, 385, 281, 764, 13, 407, 341, 307, 746], "temperature": 0.0, "avg_logprob": -0.13444639711963888, "compression_ratio": 1.744336569579288, "no_speech_prob": 4.171318869339302e-05}, {"id": 470, "seek": 226964, "start": 2275.52, "end": 2280.7599999999998, "text": " that I manually run. And I can do this here. So I manually run that. What it will do is", "tokens": [300, 286, 16945, 1190, 13, 400, 286, 393, 360, 341, 510, 13, 407, 286, 16945, 1190, 300, 13, 708, 309, 486, 360, 307], "temperature": 0.0, "avg_logprob": -0.13444639711963888, "compression_ratio": 1.744336569579288, "no_speech_prob": 4.171318869339302e-05}, {"id": 471, "seek": 226964, "start": 2280.7599999999998, "end": 2285.8399999999997, "text": " do the mutation test non-locally, and it will produce some HTML output for me to look at.", "tokens": [360, 264, 27960, 1500, 2107, 12, 5842, 379, 11, 293, 309, 486, 5258, 512, 17995, 5598, 337, 385, 281, 574, 412, 13], "temperature": 0.0, "avg_logprob": -0.13444639711963888, "compression_ratio": 1.744336569579288, "no_speech_prob": 4.171318869339302e-05}, {"id": 472, "seek": 226964, "start": 2285.8399999999997, "end": 2290.3199999999997, "text": " Now that seems, I'll go a little bit into what YAML does, but it seems like something", "tokens": [823, 300, 2544, 11, 286, 603, 352, 257, 707, 857, 666, 437, 398, 2865, 43, 775, 11, 457, 309, 2544, 411, 746], "temperature": 0.0, "avg_logprob": -0.13444639711963888, "compression_ratio": 1.744336569579288, "no_speech_prob": 4.171318869339302e-05}, {"id": 473, "seek": 226964, "start": 2290.3199999999997, "end": 2294.4, "text": " that should be able for everyone to do themselves if they want to. So GitHub Actions, the reason", "tokens": [300, 820, 312, 1075, 337, 1518, 281, 360, 2969, 498, 436, 528, 281, 13, 407, 23331, 3251, 626, 11, 264, 1778], "temperature": 0.0, "avg_logprob": -0.13444639711963888, "compression_ratio": 1.744336569579288, "no_speech_prob": 4.171318869339302e-05}, {"id": 474, "seek": 226964, "start": 2294.4, "end": 2297.7599999999998, "text": " I show that partly is because what we use, but also it's free for open source projects.", "tokens": [286, 855, 300, 17031, 307, 570, 437, 321, 764, 11, 457, 611, 309, 311, 1737, 337, 1269, 4009, 4455, 13], "temperature": 0.0, "avg_logprob": -0.13444639711963888, "compression_ratio": 1.744336569579288, "no_speech_prob": 4.171318869339302e-05}, {"id": 475, "seek": 229776, "start": 2297.76, "end": 2301.92, "text": " So, you know, it's been useful for me because I've not had to pay for it. So, you know,", "tokens": [407, 11, 291, 458, 11, 309, 311, 668, 4420, 337, 385, 570, 286, 600, 406, 632, 281, 1689, 337, 309, 13, 407, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 476, "seek": 229776, "start": 2301.92, "end": 2305.92, "text": " just a heads up. See, I'll be showing you this with GitHub Actions really quickly. And", "tokens": [445, 257, 8050, 493, 13, 3008, 11, 286, 603, 312, 4099, 291, 341, 365, 23331, 3251, 626, 534, 2661, 13, 400], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 477, "seek": 229776, "start": 2305.92, "end": 2309.0400000000004, "text": " I'll show you the YAML, I'll show you what I did. Hopefully by the end of this, the next", "tokens": [286, 603, 855, 291, 264, 398, 2865, 43, 11, 286, 603, 855, 291, 437, 286, 630, 13, 10429, 538, 264, 917, 295, 341, 11, 264, 958], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 478, "seek": 229776, "start": 2309.0400000000004, "end": 2313.4, "text": " couple of slides, you will see how easy it is actually to do this and why actually this", "tokens": [1916, 295, 9788, 11, 291, 486, 536, 577, 1858, 309, 307, 767, 281, 360, 341, 293, 983, 767, 341], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 479, "seek": 229776, "start": 2313.4, "end": 2317.0, "text": " is all good and maybe you want to try this yourself when you get home.", "tokens": [307, 439, 665, 293, 1310, 291, 528, 281, 853, 341, 1803, 562, 291, 483, 1280, 13], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 480, "seek": 229776, "start": 2317.0, "end": 2322.1600000000003, "text": " So here's some YAML. First of all, this is our mutation test YAML. It's got one job.", "tokens": [407, 510, 311, 512, 398, 2865, 43, 13, 2386, 295, 439, 11, 341, 307, 527, 27960, 1500, 398, 2865, 43, 13, 467, 311, 658, 472, 1691, 13], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 481, "seek": 229776, "start": 2322.1600000000003, "end": 2325.6000000000004, "text": " It's pretty simple. All we're doing, we're running on Ubuntu. We're running one specific", "tokens": [467, 311, 1238, 2199, 13, 1057, 321, 434, 884, 11, 321, 434, 2614, 322, 30230, 45605, 13, 492, 434, 2614, 472, 2685], "temperature": 0.0, "avg_logprob": -0.14659048091469473, "compression_ratio": 1.7426900584795322, "no_speech_prob": 5.063953358330764e-05}, {"id": 482, "seek": 232560, "start": 2325.6, "end": 2330.36, "text": " Python version to do this. Depending on what your test base is. Oh, they're running a great", "tokens": [15329, 3037, 281, 360, 341, 13, 22539, 322, 437, 428, 1500, 3096, 307, 13, 876, 11, 436, 434, 2614, 257, 869], "temperature": 0.0, "avg_logprob": -0.1579754138814992, "compression_ratio": 1.7246835443037976, "no_speech_prob": 8.702139894012362e-05}, {"id": 483, "seek": 232560, "start": 2330.36, "end": 2336.24, "text": " time in there. Oh, there is thunder. So basically, we have, yeah, we're testing on one version", "tokens": [565, 294, 456, 13, 876, 11, 456, 307, 19898, 13, 407, 1936, 11, 321, 362, 11, 1338, 11, 321, 434, 4997, 322, 472, 3037], "temperature": 0.0, "avg_logprob": -0.1579754138814992, "compression_ratio": 1.7246835443037976, "no_speech_prob": 8.702139894012362e-05}, {"id": 484, "seek": 232560, "start": 2336.24, "end": 2339.7599999999998, "text": " for me because I just, my code doesn't vary enough between versions and OSes. So for me,", "tokens": [337, 385, 570, 286, 445, 11, 452, 3089, 1177, 380, 10559, 1547, 1296, 9606, 293, 12731, 279, 13, 407, 337, 385, 11], "temperature": 0.0, "avg_logprob": -0.1579754138814992, "compression_ratio": 1.7246835443037976, "no_speech_prob": 8.702139894012362e-05}, {"id": 485, "seek": 232560, "start": 2339.7599999999998, "end": 2344.3199999999997, "text": " it's not relevant to do that. But if we look at this next slide, I'll actually show you", "tokens": [309, 311, 406, 7340, 281, 360, 300, 13, 583, 498, 321, 574, 412, 341, 958, 4137, 11, 286, 603, 767, 855, 291], "temperature": 0.0, "avg_logprob": -0.1579754138814992, "compression_ratio": 1.7246835443037976, "no_speech_prob": 8.702139894012362e-05}, {"id": 486, "seek": 232560, "start": 2344.3199999999997, "end": 2349.04, "text": " the workflow that goes through when I actually run this action. So first of all, we check", "tokens": [264, 20993, 300, 1709, 807, 562, 286, 767, 1190, 341, 3069, 13, 407, 700, 295, 439, 11, 321, 1520], "temperature": 0.0, "avg_logprob": -0.1579754138814992, "compression_ratio": 1.7246835443037976, "no_speech_prob": 8.702139894012362e-05}, {"id": 487, "seek": 232560, "start": 2349.04, "end": 2354.52, "text": " out the code. Then we set up a version of Python with it. Once we've done that, we actually", "tokens": [484, 264, 3089, 13, 1396, 321, 992, 493, 257, 3037, 295, 15329, 365, 309, 13, 3443, 321, 600, 1096, 300, 11, 321, 767], "temperature": 0.0, "avg_logprob": -0.1579754138814992, "compression_ratio": 1.7246835443037976, "no_speech_prob": 8.702139894012362e-05}, {"id": 488, "seek": 235452, "start": 2354.52, "end": 2358.32, "text": " install our dependencies, including now MutMut as well as our regular dependencies. So now", "tokens": [3625, 527, 36606, 11, 3009, 586, 18517, 44, 325, 382, 731, 382, 527, 3890, 36606, 13, 407, 586], "temperature": 0.0, "avg_logprob": -0.13075667577432404, "compression_ratio": 1.7699680511182108, "no_speech_prob": 8.118801633827388e-05}, {"id": 489, "seek": 235452, "start": 2358.32, "end": 2361.84, "text": " we've got the new mutation testing framework installed here as well on this kind of test", "tokens": [321, 600, 658, 264, 777, 27960, 4997, 8388, 8899, 510, 382, 731, 322, 341, 733, 295, 1500], "temperature": 0.0, "avg_logprob": -0.13075667577432404, "compression_ratio": 1.7699680511182108, "no_speech_prob": 8.118801633827388e-05}, {"id": 490, "seek": 235452, "start": 2361.84, "end": 2367.28, "text": " runner. Then what we do is we run a mutation test. So we do that with MutMut run. But because", "tokens": [24376, 13, 1396, 437, 321, 360, 307, 321, 1190, 257, 27960, 1500, 13, 407, 321, 360, 300, 365, 18517, 44, 325, 1190, 13, 583, 570], "temperature": 0.0, "avg_logprob": -0.13075667577432404, "compression_ratio": 1.7699680511182108, "no_speech_prob": 8.118801633827388e-05}, {"id": 491, "seek": 235452, "start": 2367.28, "end": 2371.24, "text": " we're running in a CI system, we don't want insanely long logs and due to how it's outputted,", "tokens": [321, 434, 2614, 294, 257, 37777, 1185, 11, 321, 500, 380, 528, 40965, 938, 20820, 293, 3462, 281, 577, 309, 311, 5598, 14727, 11], "temperature": 0.0, "avg_logprob": -0.13075667577432404, "compression_ratio": 1.7699680511182108, "no_speech_prob": 8.118801633827388e-05}, {"id": 492, "seek": 235452, "start": 2371.24, "end": 2374.56, "text": " we want a no-progress flag there just to show that we're not seeing every line of output.", "tokens": [321, 528, 257, 572, 12, 4318, 3091, 7166, 456, 445, 281, 855, 300, 321, 434, 406, 2577, 633, 1622, 295, 5598, 13], "temperature": 0.0, "avg_logprob": -0.13075667577432404, "compression_ratio": 1.7699680511182108, "no_speech_prob": 8.118801633827388e-05}, {"id": 493, "seek": 235452, "start": 2374.56, "end": 2379.36, "text": " We just see the important parts. We also have the CI flag, which is one of my only contributions", "tokens": [492, 445, 536, 264, 1021, 3166, 13, 492, 611, 362, 264, 37777, 7166, 11, 597, 307, 472, 295, 452, 787, 15725], "temperature": 0.0, "avg_logprob": -0.13075667577432404, "compression_ratio": 1.7699680511182108, "no_speech_prob": 8.118801633827388e-05}, {"id": 494, "seek": 237936, "start": 2379.36, "end": 2385.0, "text": " to watch a open source, but I added that and I'm kind of proud of myself. So that basically", "tokens": [281, 1159, 257, 1269, 4009, 11, 457, 286, 3869, 300, 293, 286, 478, 733, 295, 4570, 295, 2059, 13, 407, 300, 1936], "temperature": 0.0, "avg_logprob": -0.17097844163032427, "compression_ratio": 1.673913043478261, "no_speech_prob": 5.583278834819794e-05}, {"id": 495, "seek": 237936, "start": 2385.0, "end": 2390.0, "text": " means that you get a good, sensible output, like return code when you run in a CI system.", "tokens": [1355, 300, 291, 483, 257, 665, 11, 25380, 5598, 11, 411, 2736, 3089, 562, 291, 1190, 294, 257, 37777, 1185, 13], "temperature": 0.0, "avg_logprob": -0.17097844163032427, "compression_ratio": 1.673913043478261, "no_speech_prob": 5.583278834819794e-05}, {"id": 496, "seek": 237936, "start": 2390.0, "end": 2392.84, "text": " Because the default for MutMut is, depending on the type of mutants that we call, it will", "tokens": [1436, 264, 7576, 337, 18517, 44, 325, 307, 11, 5413, 322, 264, 2010, 295, 5839, 1719, 300, 321, 818, 11, 309, 486], "temperature": 0.0, "avg_logprob": -0.17097844163032427, "compression_ratio": 1.673913043478261, "no_speech_prob": 5.583278834819794e-05}, {"id": 497, "seek": 237936, "start": 2392.84, "end": 2397.8, "text": " give you a different exit code that is non-zero. So you kind of need to consider that or to", "tokens": [976, 291, 257, 819, 11043, 3089, 300, 307, 2107, 12, 32226, 13, 407, 291, 733, 295, 643, 281, 1949, 300, 420, 281], "temperature": 0.0, "avg_logprob": -0.17097844163032427, "compression_ratio": 1.673913043478261, "no_speech_prob": 5.583278834819794e-05}, {"id": 498, "seek": 237936, "start": 2397.8, "end": 2402.1200000000003, "text": " suppress that with some scary, scary bash. That's why I did it first. That's why I wrote", "tokens": [26835, 300, 365, 512, 6958, 11, 6958, 46183, 13, 663, 311, 983, 286, 630, 309, 700, 13, 663, 311, 983, 286, 4114], "temperature": 0.0, "avg_logprob": -0.17097844163032427, "compression_ratio": 1.673913043478261, "no_speech_prob": 5.583278834819794e-05}, {"id": 499, "seek": 237936, "start": 2402.1200000000003, "end": 2406.8, "text": " the flag. So once we've done that, we save it as HTML and we upload it so that you can", "tokens": [264, 7166, 13, 407, 1564, 321, 600, 1096, 300, 11, 321, 3155, 309, 382, 17995, 293, 321, 6580, 309, 370, 300, 291, 393], "temperature": 0.0, "avg_logprob": -0.17097844163032427, "compression_ratio": 1.673913043478261, "no_speech_prob": 5.583278834819794e-05}, {"id": 500, "seek": 240680, "start": 2406.8, "end": 2411.4, "text": " access that yourself as well. So that's it. That's the whole piece of YAML. It's 35 lines", "tokens": [2105, 300, 1803, 382, 731, 13, 407, 300, 311, 309, 13, 663, 311, 264, 1379, 2522, 295, 398, 2865, 43, 13, 467, 311, 6976, 3876], "temperature": 0.0, "avg_logprob": -0.12432621654711272, "compression_ratio": 1.6035502958579881, "no_speech_prob": 0.0001637816894799471}, {"id": 501, "seek": 240680, "start": 2411.4, "end": 2414.7200000000003, "text": " and that set up the entire mutation test for my suite. So you can see, hopefully, does", "tokens": [293, 300, 992, 493, 264, 2302, 27960, 1500, 337, 452, 14205, 13, 407, 291, 393, 536, 11, 4696, 11, 775], "temperature": 0.0, "avg_logprob": -0.12432621654711272, "compression_ratio": 1.6035502958579881, "no_speech_prob": 0.0001637816894799471}, {"id": 502, "seek": 240680, "start": 2414.7200000000003, "end": 2419.0800000000004, "text": " this seem kind of easy? I think it seems pretty gentle to do, at least in this sort of scope.", "tokens": [341, 1643, 733, 295, 1858, 30, 286, 519, 309, 2544, 1238, 6424, 281, 360, 11, 412, 1935, 294, 341, 1333, 295, 11923, 13], "temperature": 0.0, "avg_logprob": -0.12432621654711272, "compression_ratio": 1.6035502958579881, "no_speech_prob": 0.0001637816894799471}, {"id": 503, "seek": 240680, "start": 2419.0800000000004, "end": 2423.48, "text": " If you're a Java dev with a 20,000 line project, you might want to be a bit more careful, but", "tokens": [759, 291, 434, 257, 10745, 1905, 365, 257, 945, 11, 1360, 1622, 1716, 11, 291, 1062, 528, 281, 312, 257, 857, 544, 5026, 11, 457], "temperature": 0.0, "avg_logprob": -0.12432621654711272, "compression_ratio": 1.6035502958579881, "no_speech_prob": 0.0001637816894799471}, {"id": 504, "seek": 240680, "start": 2423.48, "end": 2428.48, "text": " if you've got like a Python hobby thing, try it out, right? Try it out. What I would say,", "tokens": [498, 291, 600, 658, 411, 257, 15329, 18240, 551, 11, 853, 309, 484, 11, 558, 30, 6526, 309, 484, 13, 708, 286, 576, 584, 11], "temperature": 0.0, "avg_logprob": -0.12432621654711272, "compression_ratio": 1.6035502958579881, "no_speech_prob": 0.0001637816894799471}, {"id": 505, "seek": 240680, "start": 2428.48, "end": 2433.0, "text": " there are some more concerns. So first of all, I chose to run this manually when I want", "tokens": [456, 366, 512, 544, 7389, 13, 407, 700, 295, 439, 11, 286, 5111, 281, 1190, 341, 16945, 562, 286, 528], "temperature": 0.0, "avg_logprob": -0.12432621654711272, "compression_ratio": 1.6035502958579881, "no_speech_prob": 0.0001637816894799471}, {"id": 506, "seek": 243300, "start": 2433.0, "end": 2438.24, "text": " to run it. I chose not to run this on push or PR. I chose to run this manually. And the", "tokens": [281, 1190, 309, 13, 286, 5111, 406, 281, 1190, 341, 322, 2944, 420, 11568, 13, 286, 5111, 281, 1190, 341, 16945, 13, 400, 264], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 507, "seek": 243300, "start": 2438.24, "end": 2441.72, "text": " reason for that is that I don't expect my code base to sufficiently change between", "tokens": [1778, 337, 300, 307, 300, 286, 500, 380, 2066, 452, 3089, 3096, 281, 31868, 1319, 1296], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 508, "seek": 243300, "start": 2441.72, "end": 2445.96, "text": " like small commits. And what I want to do is really not use like mutation test as a,", "tokens": [411, 1359, 48311, 13, 400, 437, 286, 528, 281, 360, 307, 534, 406, 764, 411, 27960, 1500, 382, 257, 11], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 509, "seek": 243300, "start": 2445.96, "end": 2449.92, "text": " you know, that kind of score, that 75%. I don't want that to be a metric for me that", "tokens": [291, 458, 11, 300, 733, 295, 6175, 11, 300, 9562, 6856, 286, 500, 380, 528, 300, 281, 312, 257, 20678, 337, 385, 300], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 510, "seek": 243300, "start": 2449.92, "end": 2453.84, "text": " I've just turned into a target. I want it to stay as just a good idea, an indicator", "tokens": [286, 600, 445, 3574, 666, 257, 3779, 13, 286, 528, 309, 281, 1754, 382, 445, 257, 665, 1558, 11, 364, 16961], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 511, "seek": 243300, "start": 2453.84, "end": 2457.68, "text": " of what my tests are doing and what I could be doing better. So for me, I don't want to", "tokens": [295, 437, 452, 6921, 366, 884, 293, 437, 286, 727, 312, 884, 1101, 13, 407, 337, 385, 11, 286, 500, 380, 528, 281], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 512, "seek": 243300, "start": 2457.68, "end": 2461.04, "text": " run every time, partly because it takes a blum in a long time, especially if I'm using", "tokens": [1190, 633, 565, 11, 17031, 570, 309, 2516, 257, 888, 449, 294, 257, 938, 565, 11, 2318, 498, 286, 478, 1228], "temperature": 0.0, "avg_logprob": -0.13895282512757837, "compression_ratio": 1.7827380952380953, "no_speech_prob": 5.2428502385737374e-05}, {"id": 513, "seek": 246104, "start": 2461.04, "end": 2466.36, "text": " multiple versions, which we also have to factor in. So you might want to do that. So I didn't.", "tokens": [3866, 9606, 11, 597, 321, 611, 362, 281, 5952, 294, 13, 407, 291, 1062, 528, 281, 360, 300, 13, 407, 286, 994, 380, 13], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 514, "seek": 246104, "start": 2466.36, "end": 2469.44, "text": " I just ran on a bun two and that was fine for me. But yeah, depends on what your code", "tokens": [286, 445, 5872, 322, 257, 6702, 732, 293, 300, 390, 2489, 337, 385, 13, 583, 1338, 11, 5946, 322, 437, 428, 3089], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 515, "seek": 246104, "start": 2469.44, "end": 2472.68, "text": " is, you might want to run on different platforms, right? So do factor that in and that will", "tokens": [307, 11, 291, 1062, 528, 281, 1190, 322, 819, 9473, 11, 558, 30, 407, 360, 5952, 300, 294, 293, 300, 486], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 516, "seek": 246104, "start": 2472.68, "end": 2477.24, "text": " help you a lot if you're in a CI system. So the other question there is just should", "tokens": [854, 291, 257, 688, 498, 291, 434, 294, 257, 37777, 1185, 13, 407, 264, 661, 1168, 456, 307, 445, 820], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 517, "seek": 246104, "start": 2477.24, "end": 2480.48, "text": " we run on push or PR? My opinion is no. I think there'll be people in this room who disagree", "tokens": [321, 1190, 322, 2944, 420, 11568, 30, 1222, 4800, 307, 572, 13, 286, 519, 456, 603, 312, 561, 294, 341, 1808, 567, 14091], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 518, "seek": 246104, "start": 2480.48, "end": 2484.04, "text": " with me, maybe say on a PR, you should run that or maybe there's some kind of metric", "tokens": [365, 385, 11, 1310, 584, 322, 257, 11568, 11, 291, 820, 1190, 300, 420, 1310, 456, 311, 512, 733, 295, 20678], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 519, "seek": 246104, "start": 2484.04, "end": 2488.08, "text": " you want to associate with score that you then want to look at in some way. For me,", "tokens": [291, 528, 281, 14644, 365, 6175, 300, 291, 550, 528, 281, 574, 412, 294, 512, 636, 13, 1171, 385, 11], "temperature": 0.0, "avg_logprob": -0.1469852424667267, "compression_ratio": 1.7657142857142858, "no_speech_prob": 9.754238271852955e-05}, {"id": 520, "seek": 248808, "start": 2488.08, "end": 2491.36, "text": " that's not how I use mutation testing. And I think what I want to get out of this is", "tokens": [300, 311, 406, 577, 286, 764, 27960, 4997, 13, 400, 286, 519, 437, 286, 528, 281, 483, 484, 295, 341, 307], "temperature": 0.0, "avg_logprob": -0.14571878721388123, "compression_ratio": 1.78, "no_speech_prob": 0.00033303818781860173}, {"id": 521, "seek": 248808, "start": 2491.36, "end": 2495.56, "text": " we don't want, we don't want a situation where mutation testing becomes a new target. We've", "tokens": [321, 500, 380, 528, 11, 321, 500, 380, 528, 257, 2590, 689, 27960, 4997, 3643, 257, 777, 3779, 13, 492, 600], "temperature": 0.0, "avg_logprob": -0.14571878721388123, "compression_ratio": 1.78, "no_speech_prob": 0.00033303818781860173}, {"id": 522, "seek": 248808, "start": 2495.56, "end": 2498.36, "text": " got to get a certain score because then we're just kind of abstracting that problem of code", "tokens": [658, 281, 483, 257, 1629, 6175, 570, 550, 321, 434, 445, 733, 295, 12649, 278, 300, 1154, 295, 3089], "temperature": 0.0, "avg_logprob": -0.14571878721388123, "compression_ratio": 1.78, "no_speech_prob": 0.00033303818781860173}, {"id": 523, "seek": 248808, "start": 2498.36, "end": 2501.48, "text": " coverage targets. We're just doing that all over again, right? So we're trying to avoid", "tokens": [9645, 12911, 13, 492, 434, 445, 884, 300, 439, 670, 797, 11, 558, 30, 407, 321, 434, 1382, 281, 5042], "temperature": 0.0, "avg_logprob": -0.14571878721388123, "compression_ratio": 1.78, "no_speech_prob": 0.00033303818781860173}, {"id": 524, "seek": 248808, "start": 2501.48, "end": 2507.72, "text": " that. So the final question here is one I'll ask of Paco to explain is Paco, do you think", "tokens": [300, 13, 407, 264, 2572, 1168, 510, 307, 472, 286, 603, 1029, 295, 10702, 78, 281, 2903, 307, 10702, 78, 11, 360, 291, 519], "temperature": 0.0, "avg_logprob": -0.14571878721388123, "compression_ratio": 1.78, "no_speech_prob": 0.00033303818781860173}, {"id": 525, "seek": 248808, "start": 2507.72, "end": 2511.12, "text": " I should use mutation testing as, you know, in my role as an audience member right now?", "tokens": [286, 820, 764, 27960, 4997, 382, 11, 291, 458, 11, 294, 452, 3090, 382, 364, 4034, 4006, 558, 586, 30], "temperature": 0.0, "avg_logprob": -0.14571878721388123, "compression_ratio": 1.78, "no_speech_prob": 0.00033303818781860173}, {"id": 526, "seek": 251112, "start": 2511.12, "end": 2518.3199999999997, "text": " What do you reckon? Yes. Well, so with stair already, it depends. There's some things you", "tokens": [708, 360, 291, 29548, 30, 1079, 13, 1042, 11, 370, 365, 22273, 1217, 11, 309, 5946, 13, 821, 311, 512, 721, 291], "temperature": 0.0, "avg_logprob": -0.19914101993336397, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.0003468397189863026}, {"id": 527, "seek": 251112, "start": 2518.3199999999997, "end": 2523.88, "text": " can ask yourself because needed is a question. So mutation testing is of course definitely", "tokens": [393, 1029, 1803, 570, 2978, 307, 257, 1168, 13, 407, 27960, 4997, 307, 295, 1164, 2138], "temperature": 0.0, "avg_logprob": -0.19914101993336397, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.0003468397189863026}, {"id": 528, "seek": 251112, "start": 2523.88, "end": 2529.0, "text": " not a silver bullet. It's something that the reports take quite some time to go through", "tokens": [406, 257, 8753, 11632, 13, 467, 311, 746, 300, 264, 7122, 747, 1596, 512, 565, 281, 352, 807], "temperature": 0.0, "avg_logprob": -0.19914101993336397, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.0003468397189863026}, {"id": 529, "seek": 251112, "start": 2529.0, "end": 2536.7999999999997, "text": " and of course it's quite computationally expensive to run the process. So the couple of questions", "tokens": [293, 295, 1164, 309, 311, 1596, 24903, 379, 5124, 281, 1190, 264, 1399, 13, 407, 264, 1916, 295, 1651], "temperature": 0.0, "avg_logprob": -0.19914101993336397, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.0003468397189863026}, {"id": 530, "seek": 253680, "start": 2536.8, "end": 2542.6400000000003, "text": " that you can ask yourself that are quite obvious are for projects which have a really high", "tokens": [300, 291, 393, 1029, 1803, 300, 366, 1596, 6322, 366, 337, 4455, 597, 362, 257, 534, 1090], "temperature": 0.0, "avg_logprob": -0.18758220500774211, "compression_ratio": 1.6386861313868613, "no_speech_prob": 0.00018880044808611274}, {"id": 531, "seek": 253680, "start": 2542.6400000000003, "end": 2546.92, "text": " quality goal. When people die or when a lot of money is lost or a combination of those", "tokens": [3125, 3387, 13, 1133, 561, 978, 420, 562, 257, 688, 295, 1460, 307, 2731, 420, 257, 6562, 295, 729], "temperature": 0.0, "avg_logprob": -0.18758220500774211, "compression_ratio": 1.6386861313868613, "no_speech_prob": 0.00018880044808611274}, {"id": 532, "seek": 253680, "start": 2546.92, "end": 2552.44, "text": " two. So just to check, how many of you are working on a project that fits in these three?", "tokens": [732, 13, 407, 445, 281, 1520, 11, 577, 867, 295, 291, 366, 1364, 322, 257, 1716, 300, 9001, 294, 613, 1045, 30], "temperature": 0.0, "avg_logprob": -0.18758220500774211, "compression_ratio": 1.6386861313868613, "no_speech_prob": 0.00018880044808611274}, {"id": 533, "seek": 253680, "start": 2552.44, "end": 2561.0, "text": " Okay, then you need this yesterday. Yes. But for the rest of the room, including me, there", "tokens": [1033, 11, 550, 291, 643, 341, 5186, 13, 1079, 13, 583, 337, 264, 1472, 295, 264, 1808, 11, 3009, 385, 11, 456], "temperature": 0.0, "avg_logprob": -0.18758220500774211, "compression_ratio": 1.6386861313868613, "no_speech_prob": 0.00018880044808611274}, {"id": 534, "seek": 253680, "start": 2561.0, "end": 2565.2400000000002, "text": " are some other questions we can ask yourself. And I think one of the important ones is are", "tokens": [366, 512, 661, 1651, 321, 393, 1029, 1803, 13, 400, 286, 519, 472, 295, 264, 1021, 2306, 307, 366], "temperature": 0.0, "avg_logprob": -0.18758220500774211, "compression_ratio": 1.6386861313868613, "no_speech_prob": 0.00018880044808611274}, {"id": 535, "seek": 256524, "start": 2565.24, "end": 2568.9599999999996, "text": " you using code coverage? Because if you're not using code coverage, let's start with", "tokens": [291, 1228, 3089, 9645, 30, 1436, 498, 291, 434, 406, 1228, 3089, 9645, 11, 718, 311, 722, 365], "temperature": 0.0, "avg_logprob": -0.17409295194289265, "compression_ratio": 1.8156996587030716, "no_speech_prob": 0.001180801773443818}, {"id": 536, "seek": 256524, "start": 2568.9599999999996, "end": 2573.7599999999998, "text": " that and let's first get coverage and get to see how many tests you have. Then the next", "tokens": [300, 293, 718, 311, 700, 483, 9645, 293, 483, 281, 536, 577, 867, 6921, 291, 362, 13, 1396, 264, 958], "temperature": 0.0, "avg_logprob": -0.17409295194289265, "compression_ratio": 1.8156996587030716, "no_speech_prob": 0.001180801773443818}, {"id": 537, "seek": 256524, "start": 2573.7599999999998, "end": 2578.64, "text": " question is, is how much value do you put into this? How much value do you get out of", "tokens": [1168, 307, 11, 307, 577, 709, 2158, 360, 291, 829, 666, 341, 30, 1012, 709, 2158, 360, 291, 483, 484, 295], "temperature": 0.0, "avg_logprob": -0.17409295194289265, "compression_ratio": 1.8156996587030716, "no_speech_prob": 0.001180801773443818}, {"id": 538, "seek": 256524, "start": 2578.64, "end": 2584.16, "text": " this code coverage? And what I mean with that is, do you make decisions based on it? It's", "tokens": [341, 3089, 9645, 30, 400, 437, 286, 914, 365, 300, 307, 11, 360, 291, 652, 5327, 2361, 322, 309, 30, 467, 311], "temperature": 0.0, "avg_logprob": -0.17409295194289265, "compression_ratio": 1.8156996587030716, "no_speech_prob": 0.001180801773443818}, {"id": 539, "seek": 256524, "start": 2584.16, "end": 2589.12, "text": " like a definition of done on your sprint or is it with a build fail if there's 80% coverage", "tokens": [411, 257, 7123, 295, 1096, 322, 428, 25075, 420, 307, 309, 365, 257, 1322, 3061, 498, 456, 311, 4688, 4, 9645], "temperature": 0.0, "avg_logprob": -0.17409295194289265, "compression_ratio": 1.8156996587030716, "no_speech_prob": 0.001180801773443818}, {"id": 540, "seek": 256524, "start": 2589.12, "end": 2594.8799999999997, "text": " or also in the case of due diligence, you're selling a company, not something we also would", "tokens": [420, 611, 294, 264, 1389, 295, 3462, 40046, 11, 291, 434, 6511, 257, 2237, 11, 406, 746, 321, 611, 576], "temperature": 0.0, "avg_logprob": -0.17409295194289265, "compression_ratio": 1.8156996587030716, "no_speech_prob": 0.001180801773443818}, {"id": 541, "seek": 259488, "start": 2594.88, "end": 2599.44, "text": " do. But then you would also want to know how well is the software I'm buying or how well", "tokens": [360, 13, 583, 550, 291, 576, 611, 528, 281, 458, 577, 731, 307, 264, 4722, 286, 478, 6382, 420, 577, 731], "temperature": 0.0, "avg_logprob": -0.14439746912787943, "compression_ratio": 1.8772563176895307, "no_speech_prob": 0.000143673358252272}, {"id": 542, "seek": 259488, "start": 2599.44, "end": 2604.44, "text": " is the software I'm working on. So here I would say, if you're using code coverage", "tokens": [307, 264, 4722, 286, 478, 1364, 322, 13, 407, 510, 286, 576, 584, 11, 498, 291, 434, 1228, 3089, 9645], "temperature": 0.0, "avg_logprob": -0.14439746912787943, "compression_ratio": 1.8772563176895307, "no_speech_prob": 0.000143673358252272}, {"id": 543, "seek": 259488, "start": 2604.44, "end": 2608.36, "text": " and you're making decisions based on that code coverage, then yes, you should at least", "tokens": [293, 291, 434, 1455, 5327, 2361, 322, 300, 3089, 9645, 11, 550, 2086, 11, 291, 820, 412, 1935], "temperature": 0.0, "avg_logprob": -0.14439746912787943, "compression_ratio": 1.8772563176895307, "no_speech_prob": 0.000143673358252272}, {"id": 544, "seek": 259488, "start": 2608.36, "end": 2613.2400000000002, "text": " have a look at mutations testing to see what the state is. You don't have to do this always.", "tokens": [362, 257, 574, 412, 29243, 4997, 281, 536, 437, 264, 1785, 307, 13, 509, 500, 380, 362, 281, 360, 341, 1009, 13], "temperature": 0.0, "avg_logprob": -0.14439746912787943, "compression_ratio": 1.8772563176895307, "no_speech_prob": 0.000143673358252272}, {"id": 545, "seek": 259488, "start": 2613.2400000000002, "end": 2617.6400000000003, "text": " You don't have to put it in CI just once a year or go home, run it on your computer", "tokens": [509, 500, 380, 362, 281, 829, 309, 294, 37777, 445, 1564, 257, 1064, 420, 352, 1280, 11, 1190, 309, 322, 428, 3820], "temperature": 0.0, "avg_logprob": -0.14439746912787943, "compression_ratio": 1.8772563176895307, "no_speech_prob": 0.000143673358252272}, {"id": 546, "seek": 259488, "start": 2617.6400000000003, "end": 2620.6800000000003, "text": " once just to see what the current state of your team is. Because it can very well be", "tokens": [1564, 445, 281, 536, 437, 264, 2190, 1785, 295, 428, 1469, 307, 13, 1436, 309, 393, 588, 731, 312], "temperature": 0.0, "avg_logprob": -0.14439746912787943, "compression_ratio": 1.8772563176895307, "no_speech_prob": 0.000143673358252272}, {"id": 547, "seek": 262068, "start": 2620.68, "end": 2624.68, "text": " that you're on a high-performing team, which already has their PRs and everything so well", "tokens": [300, 291, 434, 322, 257, 1090, 12, 26765, 278, 1469, 11, 597, 1217, 575, 641, 11568, 82, 293, 1203, 370, 731], "temperature": 0.0, "avg_logprob": -0.17297168211503464, "compression_ratio": 1.636923076923077, "no_speech_prob": 0.0003820937708951533}, {"id": 548, "seek": 262068, "start": 2624.68, "end": 2629.52, "text": " and set up that it's not worth the time maybe. Because apparently the mutation testing report", "tokens": [293, 992, 493, 300, 309, 311, 406, 3163, 264, 565, 1310, 13, 1436, 7970, 264, 27960, 4997, 2275], "temperature": 0.0, "avg_logprob": -0.17297168211503464, "compression_ratio": 1.636923076923077, "no_speech_prob": 0.0003820937708951533}, {"id": 549, "seek": 262068, "start": 2629.52, "end": 2634.9199999999996, "text": " might even confirm that, the fact that you killed all the mutants. So that would be great.", "tokens": [1062, 754, 9064, 300, 11, 264, 1186, 300, 291, 4652, 439, 264, 5839, 1719, 13, 407, 300, 576, 312, 869, 13], "temperature": 0.0, "avg_logprob": -0.17297168211503464, "compression_ratio": 1.636923076923077, "no_speech_prob": 0.0003820937708951533}, {"id": 550, "seek": 262068, "start": 2634.9199999999996, "end": 2640.7599999999998, "text": " And there's another question that I like. What's the cost of fixing a bug? And I have", "tokens": [400, 456, 311, 1071, 1168, 300, 286, 411, 13, 708, 311, 264, 2063, 295, 19442, 257, 7426, 30, 400, 286, 362], "temperature": 0.0, "avg_logprob": -0.17297168211503464, "compression_ratio": 1.636923076923077, "no_speech_prob": 0.0003820937708951533}, {"id": 551, "seek": 262068, "start": 2640.7599999999998, "end": 2645.2799999999997, "text": " two stories for this. My first example is, and that's the first company I worked for.", "tokens": [732, 3676, 337, 341, 13, 1222, 700, 1365, 307, 11, 293, 300, 311, 264, 700, 2237, 286, 2732, 337, 13], "temperature": 0.0, "avg_logprob": -0.17297168211503464, "compression_ratio": 1.636923076923077, "no_speech_prob": 0.0003820937708951533}, {"id": 552, "seek": 262068, "start": 2645.2799999999997, "end": 2649.7599999999998, "text": " This was an enterprise company that built software that was running on-premise at the", "tokens": [639, 390, 364, 14132, 2237, 300, 3094, 4722, 300, 390, 2614, 322, 12, 29403, 908, 412, 264], "temperature": 0.0, "avg_logprob": -0.17297168211503464, "compression_ratio": 1.636923076923077, "no_speech_prob": 0.0003820937708951533}, {"id": 553, "seek": 264976, "start": 2649.76, "end": 2656.8, "text": " customer and the customer was government. And then you're in the line with all these", "tokens": [5474, 293, 264, 5474, 390, 2463, 13, 400, 550, 291, 434, 294, 264, 1622, 365, 439, 613], "temperature": 0.0, "avg_logprob": -0.14048222662175744, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0005663686897605658}, {"id": 554, "seek": 264976, "start": 2656.8, "end": 2660.88, "text": " big integrators, which means you have feature freezes and moments where you can actually", "tokens": [955, 3572, 3391, 11, 597, 1355, 291, 362, 4111, 1737, 12214, 293, 6065, 689, 291, 393, 767], "temperature": 0.0, "avg_logprob": -0.14048222662175744, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0005663686897605658}, {"id": 555, "seek": 264976, "start": 2660.88, "end": 2664.5600000000004, "text": " go to the customer and deploy your software, which is quite expensive, which also means", "tokens": [352, 281, 264, 5474, 293, 7274, 428, 4722, 11, 597, 307, 1596, 5124, 11, 597, 611, 1355], "temperature": 0.0, "avg_logprob": -0.14048222662175744, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0005663686897605658}, {"id": 556, "seek": 264976, "start": 2664.5600000000004, "end": 2671.0400000000004, "text": " that if you get a bug after this feature freeze or after this upgrade window, you have a serious", "tokens": [300, 498, 291, 483, 257, 7426, 934, 341, 4111, 15959, 420, 934, 341, 11484, 4910, 11, 291, 362, 257, 3156], "temperature": 0.0, "avg_logprob": -0.14048222662175744, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0005663686897605658}, {"id": 557, "seek": 264976, "start": 2671.0400000000004, "end": 2674.84, "text": " issue because you need to go to the customer, you need to explain what went wrong. It's", "tokens": [2734, 570, 291, 643, 281, 352, 281, 264, 5474, 11, 291, 643, 281, 2903, 437, 1437, 2085, 13, 467, 311], "temperature": 0.0, "avg_logprob": -0.14048222662175744, "compression_ratio": 1.8353909465020577, "no_speech_prob": 0.0005663686897605658}, {"id": 558, "seek": 267484, "start": 2674.84, "end": 2679.88, "text": " a very costly thing, a very costly issue. So here definitely, again, mutated testing", "tokens": [257, 588, 28328, 551, 11, 257, 588, 28328, 2734, 13, 407, 510, 2138, 11, 797, 11, 5839, 770, 4997], "temperature": 0.0, "avg_logprob": -0.22197457115248878, "compression_ratio": 1.68359375, "no_speech_prob": 0.00024616270093247294}, {"id": 559, "seek": 267484, "start": 2679.88, "end": 2684.04, "text": " can be quite interesting because a lot of money can be involved with the reputation.", "tokens": [393, 312, 1596, 1880, 570, 257, 688, 295, 1460, 393, 312, 3288, 365, 264, 13061, 13], "temperature": 0.0, "avg_logprob": -0.22197457115248878, "compression_ratio": 1.68359375, "no_speech_prob": 0.00024616270093247294}, {"id": 560, "seek": 267484, "start": 2684.04, "end": 2689.2400000000002, "text": " The other example that I had was more of a Greenfield project, which had more of the", "tokens": [440, 661, 1365, 300, 286, 632, 390, 544, 295, 257, 6969, 7610, 1716, 11, 597, 632, 544, 295, 264], "temperature": 0.0, "avg_logprob": -0.22197457115248878, "compression_ratio": 1.68359375, "no_speech_prob": 0.00024616270093247294}, {"id": 561, "seek": 267484, "start": 2689.2400000000002, "end": 2694.32, "text": " startup vibes where it was really of a feel fast and fix fast mentality. So this was a", "tokens": [18578, 27636, 689, 309, 390, 534, 295, 257, 841, 2370, 293, 3191, 2370, 21976, 13, 407, 341, 390, 257], "temperature": 0.0, "avg_logprob": -0.22197457115248878, "compression_ratio": 1.68359375, "no_speech_prob": 0.00024616270093247294}, {"id": 562, "seek": 267484, "start": 2694.32, "end": 2700.1600000000003, "text": " project where rather than focusing on getting our quality monitoring up to speed, we were", "tokens": [1716, 689, 2831, 813, 8416, 322, 1242, 527, 3125, 11028, 493, 281, 3073, 11, 321, 645], "temperature": 0.0, "avg_logprob": -0.22197457115248878, "compression_ratio": 1.68359375, "no_speech_prob": 0.00024616270093247294}, {"id": 563, "seek": 270016, "start": 2700.16, "end": 2707.16, "text": " mostly focusing on making sure that we could very quickly fix bugs as well. It was of course", "tokens": [5240, 8416, 322, 1455, 988, 300, 321, 727, 588, 2661, 3191, 15120, 382, 731, 13, 467, 390, 295, 1164], "temperature": 0.0, "avg_logprob": -0.13501015415898077, "compression_ratio": 1.6107142857142858, "no_speech_prob": 0.00011859345977427438}, {"id": 564, "seek": 270016, "start": 2707.16, "end": 2711.68, "text": " running on-premises in the cloud, so we could control it. And most important goal was there", "tokens": [2614, 322, 12, 29403, 3598, 294, 264, 4588, 11, 370, 321, 727, 1969, 309, 13, 400, 881, 1021, 3387, 390, 456], "temperature": 0.0, "avg_logprob": -0.13501015415898077, "compression_ratio": 1.6107142857142858, "no_speech_prob": 0.00011859345977427438}, {"id": 565, "seek": 270016, "start": 2711.68, "end": 2715.72, "text": " to just click a button and be in production again in 10 minutes and have active monitoring", "tokens": [281, 445, 2052, 257, 2960, 293, 312, 294, 4265, 797, 294, 1266, 2077, 293, 362, 4967, 11028], "temperature": 0.0, "avg_logprob": -0.13501015415898077, "compression_ratio": 1.6107142857142858, "no_speech_prob": 0.00011859345977427438}, {"id": 566, "seek": 270016, "start": 2715.72, "end": 2720.2, "text": " to see if anything goes wrong. Here the cost of fixing a bug is already a lot lower, which", "tokens": [281, 536, 498, 1340, 1709, 2085, 13, 1692, 264, 2063, 295, 19442, 257, 7426, 307, 1217, 257, 688, 3126, 11, 597], "temperature": 0.0, "avg_logprob": -0.13501015415898077, "compression_ratio": 1.6107142857142858, "no_speech_prob": 0.00011859345977427438}, {"id": 567, "seek": 270016, "start": 2720.2, "end": 2725.7999999999997, "text": " means that the reason to consider it might be a bit less, especially if you're again", "tokens": [1355, 300, 264, 1778, 281, 1949, 309, 1062, 312, 257, 857, 1570, 11, 2318, 498, 291, 434, 797], "temperature": 0.0, "avg_logprob": -0.13501015415898077, "compression_ratio": 1.6107142857142858, "no_speech_prob": 0.00011859345977427438}, {"id": 568, "seek": 272580, "start": 2725.8, "end": 2730.0800000000004, "text": " in a, for example, a high-performing team, which are all worked into each other, you", "tokens": [294, 257, 11, 337, 1365, 11, 257, 1090, 12, 26765, 278, 1469, 11, 597, 366, 439, 2732, 666, 1184, 661, 11, 291], "temperature": 0.0, "avg_logprob": -0.20922580518220601, "compression_ratio": 1.7516778523489933, "no_speech_prob": 0.00018107693176716566}, {"id": 569, "seek": 272580, "start": 2730.0800000000004, "end": 2733.5600000000004, "text": " know what you're doing, and you know you can trust each other because you're really,", "tokens": [458, 437, 291, 434, 884, 11, 293, 291, 458, 291, 393, 3361, 1184, 661, 570, 291, 434, 534, 11], "temperature": 0.0, "avg_logprob": -0.20922580518220601, "compression_ratio": 1.7516778523489933, "no_speech_prob": 0.00018107693176716566}, {"id": 570, "seek": 272580, "start": 2733.5600000000004, "end": 2738.2000000000003, "text": " you're all professionals. Then maybe it's not worth to also spend half a day going through", "tokens": [291, 434, 439, 11954, 13, 1396, 1310, 309, 311, 406, 3163, 281, 611, 3496, 1922, 257, 786, 516, 807], "temperature": 0.0, "avg_logprob": -0.20922580518220601, "compression_ratio": 1.7516778523489933, "no_speech_prob": 0.00018107693176716566}, {"id": 571, "seek": 272580, "start": 2738.2000000000003, "end": 2741.52, "text": " mutated testing report if you already know what the outcome is probably going to be.", "tokens": [5839, 770, 4997, 2275, 498, 291, 1217, 458, 437, 264, 9700, 307, 1391, 516, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.20922580518220601, "compression_ratio": 1.7516778523489933, "no_speech_prob": 0.00018107693176716566}, {"id": 572, "seek": 272580, "start": 2741.52, "end": 2745.6400000000003, "text": " Then again, still do it once. These are two things you could consider and want to use it.", "tokens": [1396, 797, 11, 920, 360, 309, 1564, 13, 1981, 366, 732, 721, 291, 727, 1949, 293, 528, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.20922580518220601, "compression_ratio": 1.7516778523489933, "no_speech_prob": 0.00018107693176716566}, {"id": 573, "seek": 272580, "start": 2745.6400000000003, "end": 2750.76, "text": " So those are the things I want to give away with you is don't go into it blindly, just", "tokens": [407, 729, 366, 264, 721, 286, 528, 281, 976, 1314, 365, 291, 307, 500, 380, 352, 666, 309, 47744, 11, 445], "temperature": 0.0, "avg_logprob": -0.20922580518220601, "compression_ratio": 1.7516778523489933, "no_speech_prob": 0.00018107693176716566}, {"id": 574, "seek": 275076, "start": 2750.76, "end": 2757.2000000000003, "text": " ask yourself, should I really use it? And then, yeah, for the last part, I'd just like", "tokens": [1029, 1803, 11, 820, 286, 534, 764, 309, 30, 400, 550, 11, 1338, 11, 337, 264, 1036, 644, 11, 286, 1116, 445, 411], "temperature": 0.0, "avg_logprob": -0.1703328748121329, "compression_ratio": 1.6784565916398715, "no_speech_prob": 0.0001924408570630476}, {"id": 575, "seek": 275076, "start": 2757.2000000000003, "end": 2762.7200000000003, "text": " to sum up. So I think hopefully if we've gotten here, we've kind of shown you what", "tokens": [281, 2408, 493, 13, 407, 286, 519, 4696, 498, 321, 600, 5768, 510, 11, 321, 600, 733, 295, 4898, 291, 437], "temperature": 0.0, "avg_logprob": -0.1703328748121329, "compression_ratio": 1.6784565916398715, "no_speech_prob": 0.0001924408570630476}, {"id": 576, "seek": 275076, "start": 2762.7200000000003, "end": 2766.2400000000002, "text": " mutation testing is, why you might want to consider using it, and how you could possibly", "tokens": [27960, 4997, 307, 11, 983, 291, 1062, 528, 281, 1949, 1228, 309, 11, 293, 577, 291, 727, 6264], "temperature": 0.0, "avg_logprob": -0.1703328748121329, "compression_ratio": 1.6784565916398715, "no_speech_prob": 0.0001924408570630476}, {"id": 577, "seek": 275076, "start": 2766.2400000000002, "end": 2770.28, "text": " get going starting with running that, and also why you should. So if we're here, I just", "tokens": [483, 516, 2891, 365, 2614, 300, 11, 293, 611, 983, 291, 820, 13, 407, 498, 321, 434, 510, 11, 286, 445], "temperature": 0.0, "avg_logprob": -0.1703328748121329, "compression_ratio": 1.6784565916398715, "no_speech_prob": 0.0001924408570630476}, {"id": 578, "seek": 275076, "start": 2770.28, "end": 2774.5200000000004, "text": " want to summarize, first of all, I'm sorry I used this penguin as an evil penguin earlier.", "tokens": [528, 281, 20858, 11, 700, 295, 439, 11, 286, 478, 2597, 286, 1143, 341, 45752, 382, 364, 6724, 45752, 3071, 13], "temperature": 0.0, "avg_logprob": -0.1703328748121329, "compression_ratio": 1.6784565916398715, "no_speech_prob": 0.0001924408570630476}, {"id": 579, "seek": 275076, "start": 2774.5200000000004, "end": 2778.0400000000004, "text": " It is adorable. I just like the Dali. When I asked it to give it some fake wings, it", "tokens": [467, 307, 18698, 13, 286, 445, 411, 264, 413, 5103, 13, 1133, 286, 2351, 309, 281, 976, 309, 512, 7592, 11405, 11, 309], "temperature": 0.0, "avg_logprob": -0.1703328748121329, "compression_ratio": 1.6784565916398715, "no_speech_prob": 0.0001924408570630476}, {"id": 580, "seek": 277804, "start": 2778.04, "end": 2783.08, "text": " gave it three. It gave it this extra flipper here. I'm not sure what that was for. But", "tokens": [2729, 309, 1045, 13, 467, 2729, 309, 341, 2857, 932, 15124, 510, 13, 286, 478, 406, 988, 437, 300, 390, 337, 13, 583], "temperature": 0.0, "avg_logprob": -0.14351030077253069, "compression_ratio": 1.7377049180327868, "no_speech_prob": 1.1403923963371199e-05}, {"id": 581, "seek": 277804, "start": 2783.08, "end": 2788.2, "text": " what I'd like to do is just quickly summarize what we talked about today. First of all,", "tokens": [437, 286, 1116, 411, 281, 360, 307, 445, 2661, 20858, 437, 321, 2825, 466, 965, 13, 2386, 295, 439, 11], "temperature": 0.0, "avg_logprob": -0.14351030077253069, "compression_ratio": 1.7377049180327868, "no_speech_prob": 1.1403923963371199e-05}, {"id": 582, "seek": 277804, "start": 2788.2, "end": 2793.7599999999998, "text": " mutation testing is a way to test your tests. It helps you to beat the problem where you're", "tokens": [27960, 4997, 307, 257, 636, 281, 1500, 428, 6921, 13, 467, 3665, 291, 281, 4224, 264, 1154, 689, 291, 434], "temperature": 0.0, "avg_logprob": -0.14351030077253069, "compression_ratio": 1.7377049180327868, "no_speech_prob": 1.1403923963371199e-05}, {"id": 583, "seek": 277804, "start": 2793.7599999999998, "end": 2797.4, "text": " using Goodhart's law for coverage, right? So it saves you from just trying to turn", "tokens": [1228, 2205, 42535, 311, 2101, 337, 9645, 11, 558, 30, 407, 309, 19155, 291, 490, 445, 1382, 281, 1261], "temperature": 0.0, "avg_logprob": -0.14351030077253069, "compression_ratio": 1.7377049180327868, "no_speech_prob": 1.1403923963371199e-05}, {"id": 584, "seek": 277804, "start": 2797.4, "end": 2801.4, "text": " coverage into a metric that you don't have as a target, right? You don't want to have", "tokens": [9645, 666, 257, 20678, 300, 291, 500, 380, 362, 382, 257, 3779, 11, 558, 30, 509, 500, 380, 528, 281, 362], "temperature": 0.0, "avg_logprob": -0.14351030077253069, "compression_ratio": 1.7377049180327868, "no_speech_prob": 1.1403923963371199e-05}, {"id": 585, "seek": 277804, "start": 2801.4, "end": 2805.32, "text": " code coverage. It's got to be above this threshold or we don't merge. That's not where we want", "tokens": [3089, 9645, 13, 467, 311, 658, 281, 312, 3673, 341, 14678, 420, 321, 500, 380, 22183, 13, 663, 311, 406, 689, 321, 528], "temperature": 0.0, "avg_logprob": -0.14351030077253069, "compression_ratio": 1.7377049180327868, "no_speech_prob": 1.1403923963371199e-05}, {"id": 586, "seek": 280532, "start": 2805.32, "end": 2812.0800000000004, "text": " to be. What we want to do is write good tests. So if you are going to do this yourself, an", "tokens": [281, 312, 13, 708, 321, 528, 281, 360, 307, 2464, 665, 6921, 13, 407, 498, 291, 366, 516, 281, 360, 341, 1803, 11, 364], "temperature": 0.0, "avg_logprob": -0.09462055585063095, "compression_ratio": 1.8912280701754387, "no_speech_prob": 4.8257636080961674e-05}, {"id": 587, "seek": 280532, "start": 2812.0800000000004, "end": 2816.36, "text": " important part is to start small. So start locally on your machine. If you've got a big", "tokens": [1021, 644, 307, 281, 722, 1359, 13, 407, 722, 16143, 322, 428, 3479, 13, 759, 291, 600, 658, 257, 955], "temperature": 0.0, "avg_logprob": -0.09462055585063095, "compression_ratio": 1.8912280701754387, "no_speech_prob": 4.8257636080961674e-05}, {"id": 588, "seek": 280532, "start": 2816.36, "end": 2820.4, "text": " code base, then what you need to do really is run on a subset of that code base. If you've", "tokens": [3089, 3096, 11, 550, 437, 291, 643, 281, 360, 534, 307, 1190, 322, 257, 25993, 295, 300, 3089, 3096, 13, 759, 291, 600], "temperature": 0.0, "avg_logprob": -0.09462055585063095, "compression_ratio": 1.8912280701754387, "no_speech_prob": 4.8257636080961674e-05}, {"id": 589, "seek": 280532, "start": 2820.4, "end": 2824.6000000000004, "text": " got a smaller code base like me, you're probably okay. But either way, start locally on your", "tokens": [658, 257, 4356, 3089, 3096, 411, 385, 11, 291, 434, 1391, 1392, 13, 583, 2139, 636, 11, 722, 16143, 322, 428], "temperature": 0.0, "avg_logprob": -0.09462055585063095, "compression_ratio": 1.8912280701754387, "no_speech_prob": 4.8257636080961674e-05}, {"id": 590, "seek": 280532, "start": 2824.6000000000004, "end": 2829.84, "text": " machine. You also want to run if you can. If you want asynchronous reports, if you want", "tokens": [3479, 13, 509, 611, 528, 281, 1190, 498, 291, 393, 13, 759, 291, 528, 49174, 7122, 11, 498, 291, 528], "temperature": 0.0, "avg_logprob": -0.09462055585063095, "compression_ratio": 1.8912280701754387, "no_speech_prob": 4.8257636080961674e-05}, {"id": 591, "seek": 280532, "start": 2829.84, "end": 2834.8, "text": " to use the resources available on a CI system, you can run mutation testing there. So do", "tokens": [281, 764, 264, 3593, 2435, 322, 257, 37777, 1185, 11, 291, 393, 1190, 27960, 4997, 456, 13, 407, 360], "temperature": 0.0, "avg_logprob": -0.09462055585063095, "compression_ratio": 1.8912280701754387, "no_speech_prob": 4.8257636080961674e-05}, {"id": 592, "seek": 283480, "start": 2834.8, "end": 2840.5600000000004, "text": " consider that if your stuff is in CI. And finally, I just want to say that mutants, hopefully", "tokens": [1949, 300, 498, 428, 1507, 307, 294, 37777, 13, 400, 2721, 11, 286, 445, 528, 281, 584, 300, 5839, 1719, 11, 4696], "temperature": 0.0, "avg_logprob": -0.18957904974619547, "compression_ratio": 1.613733905579399, "no_speech_prob": 2.9610675483127125e-05}, {"id": 593, "seek": 283480, "start": 2840.5600000000004, "end": 2843.8, "text": " we've demonstrated that mutants are like adorable penguins, right? They're valuable and they", "tokens": [321, 600, 18772, 300, 5839, 1719, 366, 411, 18698, 17289, 44790, 11, 558, 30, 814, 434, 8263, 293, 436], "temperature": 0.0, "avg_logprob": -0.18957904974619547, "compression_ratio": 1.613733905579399, "no_speech_prob": 2.9610675483127125e-05}, {"id": 594, "seek": 283480, "start": 2843.8, "end": 2846.92, "text": " are wonderful, right? They're really great to use. They can tell you so much about your", "tokens": [366, 3715, 11, 558, 30, 814, 434, 534, 869, 281, 764, 13, 814, 393, 980, 291, 370, 709, 466, 428], "temperature": 0.0, "avg_logprob": -0.18957904974619547, "compression_ratio": 1.613733905579399, "no_speech_prob": 2.9610675483127125e-05}, {"id": 595, "seek": 283480, "start": 2846.92, "end": 2851.92, "text": " code. They're extremely useful. So don't fear them because you should love them. Thank you", "tokens": [3089, 13, 814, 434, 4664, 4420, 13, 407, 500, 380, 4240, 552, 570, 291, 820, 959, 552, 13, 1044, 291], "temperature": 0.0, "avg_logprob": -0.18957904974619547, "compression_ratio": 1.613733905579399, "no_speech_prob": 2.9610675483127125e-05}, {"id": 596, "seek": 283480, "start": 2851.92, "end": 2852.92, "text": " very much.", "tokens": [588, 709, 13], "temperature": 0.0, "avg_logprob": -0.18957904974619547, "compression_ratio": 1.613733905579399, "no_speech_prob": 2.9610675483127125e-05}, {"id": 597, "seek": 285292, "start": 2852.92, "end": 2882.16, "text": " If there are any questions, comments, objections, love mail, hate mail, anything, shout at me.", "tokens": [759, 456, 366, 604, 1651, 11, 3053, 11, 44649, 11, 959, 10071, 11, 4700, 10071, 11, 1340, 11, 8043, 412, 385, 13], "temperature": 0.0, "avg_logprob": -0.17243440334613508, "compression_ratio": 1.1604938271604939, "no_speech_prob": 0.0001533294707769528}, {"id": 598, "seek": 288216, "start": 2882.16, "end": 2886.44, "text": " So the question there was just if we can give some more examples of the kind of range of", "tokens": [407, 264, 1168, 456, 390, 445, 498, 321, 393, 976, 512, 544, 5110, 295, 264, 733, 295, 3613, 295], "temperature": 0.0, "avg_logprob": -0.1501024686373197, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.0003550979308784008}, {"id": 599, "seek": 288216, "start": 2886.44, "end": 2890.8799999999997, "text": " things that are possible to mutate. So essentially, the short answer is anything that will still", "tokens": [721, 300, 366, 1944, 281, 5839, 473, 13, 407, 4476, 11, 264, 2099, 1867, 307, 1340, 300, 486, 920], "temperature": 0.0, "avg_logprob": -0.1501024686373197, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.0003550979308784008}, {"id": 600, "seek": 288216, "start": 2890.8799999999997, "end": 2896.24, "text": " make the code run. So in the Java case, the code compiled, in my case, the code run. So", "tokens": [652, 264, 3089, 1190, 13, 407, 294, 264, 10745, 1389, 11, 264, 3089, 36548, 11, 294, 452, 1389, 11, 264, 3089, 1190, 13, 407], "temperature": 0.0, "avg_logprob": -0.1501024686373197, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.0003550979308784008}, {"id": 601, "seek": 288216, "start": 2896.24, "end": 2901.12, "text": " in this situation, things like, I'll give you some Python examples. For example, changing", "tokens": [294, 341, 2590, 11, 721, 411, 11, 286, 603, 976, 291, 512, 15329, 5110, 13, 1171, 1365, 11, 4473], "temperature": 0.0, "avg_logprob": -0.1501024686373197, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.0003550979308784008}, {"id": 602, "seek": 288216, "start": 2901.12, "end": 2905.12, "text": " a variable from a certain type to another. So you might typecast something. You might,", "tokens": [257, 7006, 490, 257, 1629, 2010, 281, 1071, 13, 407, 291, 1062, 2010, 3734, 746, 13, 509, 1062, 11], "temperature": 0.0, "avg_logprob": -0.1501024686373197, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.0003550979308784008}, {"id": 603, "seek": 288216, "start": 2905.12, "end": 2908.52, "text": " with a mathematical expression, you might add extra terms to that expression. You might", "tokens": [365, 257, 18894, 6114, 11, 291, 1062, 909, 2857, 2115, 281, 300, 6114, 13, 509, 1062], "temperature": 0.0, "avg_logprob": -0.1501024686373197, "compression_ratio": 1.8424657534246576, "no_speech_prob": 0.0003550979308784008}, {"id": 604, "seek": 290852, "start": 2908.52, "end": 2914.48, "text": " change return types, error types. You might set things to non at any given time. You might", "tokens": [1319, 2736, 3467, 11, 6713, 3467, 13, 509, 1062, 992, 721, 281, 2107, 412, 604, 2212, 565, 13, 509, 1062], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 605, "seek": 290852, "start": 2914.48, "end": 2918.7599999999998, "text": " call something and, yeah, remove parts of it, set things to zero. There's other stuff.", "tokens": [818, 746, 293, 11, 1338, 11, 4159, 3166, 295, 309, 11, 992, 721, 281, 4018, 13, 821, 311, 661, 1507, 13], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 606, "seek": 290852, "start": 2918.7599999999998, "end": 2921.28, "text": " Paco, can you think of any mutation testing Java examples?", "tokens": [10702, 78, 11, 393, 291, 519, 295, 604, 27960, 4997, 10745, 5110, 30], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 607, "seek": 290852, "start": 2921.28, "end": 2924.96, "text": " Yeah. So I think that the examples you gave for that, it sort of depends on the mutators", "tokens": [865, 13, 407, 286, 519, 300, 264, 5110, 291, 2729, 337, 300, 11, 309, 1333, 295, 5946, 322, 264, 5839, 3391], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 608, "seek": 290852, "start": 2924.96, "end": 2929.0, "text": " you use. So you often, you can also, of each framework, you can also go through the list", "tokens": [291, 764, 13, 407, 291, 2049, 11, 291, 393, 611, 11, 295, 1184, 8388, 11, 291, 393, 611, 352, 807, 264, 1329], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 609, "seek": 290852, "start": 2929.0, "end": 2933.04, "text": " of mutators to see what kind of mutators are out there. What's good to keep in mind is that", "tokens": [295, 5839, 3391, 281, 536, 437, 733, 295, 5839, 3391, 366, 484, 456, 13, 708, 311, 665, 281, 1066, 294, 1575, 307, 300], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 610, "seek": 290852, "start": 2933.04, "end": 2937.96, "text": " it does use some basic, fundamental strategies to determine if it can be mutated. Because", "tokens": [309, 775, 764, 512, 3875, 11, 8088, 9029, 281, 6997, 498, 309, 393, 312, 5839, 770, 13, 1436], "temperature": 0.0, "avg_logprob": -0.22897740153523236, "compression_ratio": 1.784431137724551, "no_speech_prob": 0.0006024217582307756}, {"id": 611, "seek": 293796, "start": 2937.96, "end": 2941.88, "text": " for example, if you have a stream, and in this stream, you do some operations, which", "tokens": [337, 1365, 11, 498, 291, 362, 257, 4309, 11, 293, 294, 341, 4309, 11, 291, 360, 512, 7705, 11, 597], "temperature": 0.0, "avg_logprob": -0.17267880510928027, "compression_ratio": 1.8135593220338984, "no_speech_prob": 0.00018439201812725514}, {"id": 612, "seek": 293796, "start": 2941.88, "end": 2947.64, "text": " you could, in theory, cut out, you're still using the return value, which means that the", "tokens": [291, 727, 11, 294, 5261, 11, 1723, 484, 11, 291, 434, 920, 1228, 264, 2736, 2158, 11, 597, 1355, 300, 264], "temperature": 0.0, "avg_logprob": -0.17267880510928027, "compression_ratio": 1.8135593220338984, "no_speech_prob": 0.00018439201812725514}, {"id": 613, "seek": 293796, "start": 2947.64, "end": 2951.08, "text": " mutation testing framework thinks, okay, let's keep that intact. The same goes for if you're", "tokens": [27960, 4997, 8388, 7309, 11, 1392, 11, 718, 311, 1066, 300, 23493, 13, 440, 912, 1709, 337, 498, 291, 434], "temperature": 0.0, "avg_logprob": -0.17267880510928027, "compression_ratio": 1.8135593220338984, "no_speech_prob": 0.00018439201812725514}, {"id": 614, "seek": 293796, "start": 2951.08, "end": 2956.28, "text": " using the spring reactor framework. You could do lots and lots of smart mutations in there,", "tokens": [1228, 264, 5587, 20628, 8388, 13, 509, 727, 360, 3195, 293, 3195, 295, 4069, 29243, 294, 456, 11], "temperature": 0.0, "avg_logprob": -0.17267880510928027, "compression_ratio": 1.8135593220338984, "no_speech_prob": 0.00018439201812725514}, {"id": 615, "seek": 293796, "start": 2956.28, "end": 2960.84, "text": " but it's not really there yet. It's really the rudimental things, the conditional logic,", "tokens": [457, 309, 311, 406, 534, 456, 1939, 13, 467, 311, 534, 264, 32109, 2328, 304, 721, 11, 264, 27708, 9952, 11], "temperature": 0.0, "avg_logprob": -0.17267880510928027, "compression_ratio": 1.8135593220338984, "no_speech_prob": 0.00018439201812725514}, {"id": 616, "seek": 293796, "start": 2960.84, "end": 2966.12, "text": " the mathematical logic, I think, are the two main things you'll see. And actually also,", "tokens": [264, 18894, 9952, 11, 286, 519, 11, 366, 264, 732, 2135, 721, 291, 603, 536, 13, 400, 767, 611, 11], "temperature": 0.0, "avg_logprob": -0.17267880510928027, "compression_ratio": 1.8135593220338984, "no_speech_prob": 0.00018439201812725514}, {"id": 617, "seek": 296612, "start": 2966.12, "end": 2974.3199999999997, "text": " the count for often the most typical programming errors, I would say, awesome. I mean, anything", "tokens": [264, 1207, 337, 2049, 264, 881, 7476, 9410, 13603, 11, 286, 576, 584, 11, 3476, 13, 286, 914, 11, 1340], "temperature": 0.0, "avg_logprob": -0.2946761812482561, "compression_ratio": 1.5027932960893855, "no_speech_prob": 0.000251956342253834}, {"id": 618, "seek": 296612, "start": 2974.3199999999997, "end": 2977.24, "text": " you'd like to mutate, you know, because I guess a lot of these things are open source,", "tokens": [291, 1116, 411, 281, 5839, 473, 11, 291, 458, 11, 570, 286, 2041, 257, 688, 295, 613, 721, 366, 1269, 4009, 11], "temperature": 0.0, "avg_logprob": -0.2946761812482561, "compression_ratio": 1.5027932960893855, "no_speech_prob": 0.000251956342253834}, {"id": 619, "seek": 296612, "start": 2977.24, "end": 2982.24, "text": " you know, anything that you might be good if it did exist. Any other question, answer?", "tokens": [291, 458, 11, 1340, 300, 291, 1062, 312, 665, 498, 309, 630, 2514, 13, 2639, 661, 1168, 11, 1867, 30], "temperature": 0.0, "avg_logprob": -0.2946761812482561, "compression_ratio": 1.5027932960893855, "no_speech_prob": 0.000251956342253834}, {"id": 620, "seek": 298224, "start": 2982.24, "end": 2997.24, "text": " So, two questions. The first one, could you comment on some framework for C and C++? And", "tokens": [407, 11, 732, 1651, 13, 440, 700, 472, 11, 727, 291, 2871, 322, 512, 8388, 337, 383, 293, 383, 25472, 30, 400], "temperature": 0.0, "avg_logprob": -0.3239389419555664, "compression_ratio": 1.3383458646616542, "no_speech_prob": 0.0012249461142346263}, {"id": 621, "seek": 298224, "start": 2997.24, "end": 3008.24, "text": " the second, what do you think about the idea to force developers or to require developers", "tokens": [264, 1150, 11, 437, 360, 291, 519, 466, 264, 1558, 281, 3464, 8849, 420, 281, 3651, 8849], "temperature": 0.0, "avg_logprob": -0.3239389419555664, "compression_ratio": 1.3383458646616542, "no_speech_prob": 0.0012249461142346263}, {"id": 622, "seek": 300824, "start": 3008.24, "end": 3015.24, "text": " to use that code, which they have actually changed, just to save computational power", "tokens": [281, 764, 300, 3089, 11, 597, 436, 362, 767, 3105, 11, 445, 281, 3155, 28270, 1347], "temperature": 0.0, "avg_logprob": -0.3564452449832342, "compression_ratio": 1.5947955390334572, "no_speech_prob": 0.0003919269656762481}, {"id": 623, "seek": 300824, "start": 3015.24, "end": 3018.24, "text": " on the entire machine and the server side is yet.", "tokens": [322, 264, 2302, 3479, 293, 264, 7154, 1252, 307, 1939, 13], "temperature": 0.0, "avg_logprob": -0.3564452449832342, "compression_ratio": 1.5947955390334572, "no_speech_prob": 0.0003919269656762481}, {"id": 624, "seek": 300824, "start": 3018.24, "end": 3022.68, "text": " Okay. So, the question there just for the live stream was two things. One is, are there", "tokens": [1033, 13, 407, 11, 264, 1168, 456, 445, 337, 264, 1621, 4309, 390, 732, 721, 13, 1485, 307, 11, 366, 456], "temperature": 0.0, "avg_logprob": -0.3564452449832342, "compression_ratio": 1.5947955390334572, "no_speech_prob": 0.0003919269656762481}, {"id": 625, "seek": 300824, "start": 3022.68, "end": 3027.72, "text": " any mutation testing frameworks for C or C++? I will say personally, I don't know. You haven't", "tokens": [604, 27960, 4997, 29834, 337, 383, 420, 383, 25472, 30, 286, 486, 584, 5665, 11, 286, 500, 380, 458, 13, 509, 2378, 380], "temperature": 0.0, "avg_logprob": -0.3564452449832342, "compression_ratio": 1.5947955390334572, "no_speech_prob": 0.0003919269656762481}, {"id": 626, "seek": 300824, "start": 3027.72, "end": 3031.4799999999996, "text": " used C++ since my physics degree, so I couldn't tell you. I don't know if you know anything", "tokens": [1143, 383, 25472, 1670, 452, 10649, 4314, 11, 370, 286, 2809, 380, 980, 291, 13, 286, 500, 380, 458, 498, 291, 458, 1340], "temperature": 0.0, "avg_logprob": -0.3564452449832342, "compression_ratio": 1.5947955390334572, "no_speech_prob": 0.0003919269656762481}, {"id": 627, "seek": 300824, "start": 3031.4799999999996, "end": 3032.68, "text": " about that, Parker.", "tokens": [466, 300, 11, 20155, 13], "temperature": 0.0, "avg_logprob": -0.3564452449832342, "compression_ratio": 1.5947955390334572, "no_speech_prob": 0.0003919269656762481}, {"id": 628, "seek": 303268, "start": 3032.68, "end": 3039.7999999999997, "text": " I just did a quick Google search. That's all. So, I see there are some frames available", "tokens": [286, 445, 630, 257, 1702, 3329, 3164, 13, 663, 311, 439, 13, 407, 11, 286, 536, 456, 366, 512, 12083, 2435], "temperature": 0.0, "avg_logprob": -0.3662660689581008, "compression_ratio": 1.401015228426396, "no_speech_prob": 0.0005561293219216168}, {"id": 629, "seek": 303268, "start": 3039.7999999999997, "end": 3040.7999999999997, "text": " for you.", "tokens": [337, 291, 13], "temperature": 0.0, "avg_logprob": -0.3662660689581008, "compression_ratio": 1.401015228426396, "no_speech_prob": 0.0005561293219216168}, {"id": 630, "seek": 303268, "start": 3040.7999999999997, "end": 3045.7999999999997, "text": " There is a project by the University of Luxembourg, which is called FAQAS.", "tokens": [821, 307, 257, 1716, 538, 264, 3535, 295, 25767, 443, 43638, 11, 597, 307, 1219, 19894, 48, 3160, 13], "temperature": 0.0, "avg_logprob": -0.3662660689581008, "compression_ratio": 1.401015228426396, "no_speech_prob": 0.0005561293219216168}, {"id": 631, "seek": 303268, "start": 3045.7999999999997, "end": 3046.7999999999997, "text": " FAQAS.", "tokens": [19894, 48, 3160, 13], "temperature": 0.0, "avg_logprob": -0.3662660689581008, "compression_ratio": 1.401015228426396, "no_speech_prob": 0.0005561293219216168}, {"id": 632, "seek": 303268, "start": 3046.7999999999997, "end": 3058.2799999999997, "text": " And it's not there quite yet, but it's something for C and also for a bit more for C++. Regarding", "tokens": [400, 309, 311, 406, 456, 1596, 1939, 11, 457, 309, 311, 746, 337, 383, 293, 611, 337, 257, 857, 544, 337, 383, 25472, 13, 35523], "temperature": 0.0, "avg_logprob": -0.3662660689581008, "compression_ratio": 1.401015228426396, "no_speech_prob": 0.0005561293219216168}, {"id": 633, "seek": 305828, "start": 3058.28, "end": 3063.28, "text": " your other question, by the way, so should you do it as a get hook? I'm given that it's,", "tokens": [428, 661, 1168, 11, 538, 264, 636, 11, 370, 820, 291, 360, 309, 382, 257, 483, 6328, 30, 286, 478, 2212, 300, 309, 311, 11], "temperature": 0.0, "avg_logprob": -0.3984262515337039, "compression_ratio": 1.8125, "no_speech_prob": 0.0006467548664659262}, {"id": 634, "seek": 305828, "start": 3063.28, "end": 3064.28, "text": " right, that was the question.", "tokens": [558, 11, 300, 390, 264, 1168, 13], "temperature": 0.0, "avg_logprob": -0.3984262515337039, "compression_ratio": 1.8125, "no_speech_prob": 0.0006467548664659262}, {"id": 635, "seek": 305828, "start": 3064.28, "end": 3071.28, "text": " Yeah, the idea was basically to require developers to run those mutation tests, but not the full", "tokens": [865, 11, 264, 1558, 390, 1936, 281, 3651, 8849, 281, 1190, 729, 27960, 6921, 11, 457, 406, 264, 1577], "temperature": 0.0, "avg_logprob": -0.3984262515337039, "compression_ratio": 1.8125, "no_speech_prob": 0.0006467548664659262}, {"id": 636, "seek": 305828, "start": 3071.28, "end": 3077.28, "text": " set, but only mutation tests which are touching the machine, which are testing the unit tests,", "tokens": [992, 11, 457, 787, 27960, 6921, 597, 366, 11175, 264, 3479, 11, 597, 366, 4997, 264, 4985, 6921, 11], "temperature": 0.0, "avg_logprob": -0.3984262515337039, "compression_ratio": 1.8125, "no_speech_prob": 0.0006467548664659262}, {"id": 637, "seek": 305828, "start": 3077.28, "end": 3080.28, "text": " which are testing the code, which was modified in this one.", "tokens": [597, 366, 4997, 264, 3089, 11, 597, 390, 15873, 294, 341, 472, 13], "temperature": 0.0, "avg_logprob": -0.3984262515337039, "compression_ratio": 1.8125, "no_speech_prob": 0.0006467548664659262}, {"id": 638, "seek": 305828, "start": 3080.28, "end": 3084.0, "text": " Yeah. Yeah. So, actually there are some, depending on the framework, some have features which", "tokens": [865, 13, 865, 13, 407, 11, 767, 456, 366, 512, 11, 5413, 322, 264, 8388, 11, 512, 362, 4122, 597], "temperature": 0.0, "avg_logprob": -0.3984262515337039, "compression_ratio": 1.8125, "no_speech_prob": 0.0006467548664659262}, {"id": 639, "seek": 308400, "start": 3084.0, "end": 3088.6, "text": " are incremental reports, so where they can just store the last state, then you can do", "tokens": [366, 35759, 7122, 11, 370, 689, 436, 393, 445, 3531, 264, 1036, 1785, 11, 550, 291, 393, 360], "temperature": 0.0, "avg_logprob": -0.15409724381718323, "compression_ratio": 1.9496402877697843, "no_speech_prob": 0.00034173220046795905}, {"id": 640, "seek": 308400, "start": 3088.6, "end": 3093.8, "text": " a diff and use the results from your last execution to not execute all mutants and not", "tokens": [257, 7593, 293, 764, 264, 3542, 490, 428, 1036, 15058, 281, 406, 14483, 439, 5839, 1719, 293, 406], "temperature": 0.0, "avg_logprob": -0.15409724381718323, "compression_ratio": 1.9496402877697843, "no_speech_prob": 0.00034173220046795905}, {"id": 641, "seek": 308400, "start": 3093.8, "end": 3097.48, "text": " generate all mutants, because it knows I only changed these production lines, so I only", "tokens": [8460, 439, 5839, 1719, 11, 570, 309, 3255, 286, 787, 3105, 613, 4265, 3876, 11, 370, 286, 787], "temperature": 0.0, "avg_logprob": -0.15409724381718323, "compression_ratio": 1.9496402877697843, "no_speech_prob": 0.00034173220046795905}, {"id": 642, "seek": 308400, "start": 3097.48, "end": 3102.04, "text": " need to generate mutants for these, and I only changed these tests, so I only need to rerun", "tokens": [643, 281, 8460, 5839, 1719, 337, 613, 11, 293, 286, 787, 3105, 613, 6921, 11, 370, 286, 787, 643, 281, 43819, 409], "temperature": 0.0, "avg_logprob": -0.15409724381718323, "compression_ratio": 1.9496402877697843, "no_speech_prob": 0.00034173220046795905}, {"id": 643, "seek": 308400, "start": 3102.04, "end": 3107.28, "text": " the tests for these mutants, which can tremendously speed it up. But still using it as a get", "tokens": [264, 6921, 337, 613, 5839, 1719, 11, 597, 393, 27985, 3073, 309, 493, 13, 583, 920, 1228, 309, 382, 257, 483], "temperature": 0.0, "avg_logprob": -0.15409724381718323, "compression_ratio": 1.9496402877697843, "no_speech_prob": 0.00034173220046795905}, {"id": 644, "seek": 308400, "start": 3107.28, "end": 3112.8, "text": " hook, I'm not sure. You can, by the way, use the same logic in CI as well to use the incremental", "tokens": [6328, 11, 286, 478, 406, 988, 13, 509, 393, 11, 538, 264, 636, 11, 764, 264, 912, 9952, 294, 37777, 382, 731, 281, 764, 264, 35759], "temperature": 0.0, "avg_logprob": -0.15409724381718323, "compression_ratio": 1.9496402877697843, "no_speech_prob": 0.00034173220046795905}, {"id": 645, "seek": 311280, "start": 3112.8, "end": 3115.6800000000003, "text": " reporting that saves a bit, despite and also supports a thing.", "tokens": [10031, 300, 19155, 257, 857, 11, 7228, 293, 611, 9346, 257, 551, 13], "temperature": 0.0, "avg_logprob": -0.19715261459350586, "compression_ratio": 1.775438596491228, "no_speech_prob": 0.00024721151567064226}, {"id": 646, "seek": 311280, "start": 3115.6800000000003, "end": 3120.6400000000003, "text": " Yeah. So, with what you have, you have caching, so you can cache those tests that you've done", "tokens": [865, 13, 407, 11, 365, 437, 291, 362, 11, 291, 362, 269, 2834, 11, 370, 291, 393, 19459, 729, 6921, 300, 291, 600, 1096], "temperature": 0.0, "avg_logprob": -0.19715261459350586, "compression_ratio": 1.775438596491228, "no_speech_prob": 0.00024721151567064226}, {"id": 647, "seek": 311280, "start": 3120.6400000000003, "end": 3125.48, "text": " already, and if those cases aren't touched, then you're sort of good if that changes to", "tokens": [1217, 11, 293, 498, 729, 3331, 3212, 380, 9828, 11, 550, 291, 434, 1333, 295, 665, 498, 300, 2962, 281], "temperature": 0.0, "avg_logprob": -0.19715261459350586, "compression_ratio": 1.775438596491228, "no_speech_prob": 0.00024721151567064226}, {"id": 648, "seek": 311280, "start": 3125.48, "end": 3130.92, "text": " your code don't affect that. So, that is an option. I would say, yeah, thank you. My", "tokens": [428, 3089, 500, 380, 3345, 300, 13, 407, 11, 300, 307, 364, 3614, 13, 286, 576, 584, 11, 1338, 11, 1309, 291, 13, 1222], "temperature": 0.0, "avg_logprob": -0.19715261459350586, "compression_ratio": 1.775438596491228, "no_speech_prob": 0.00024721151567064226}, {"id": 649, "seek": 311280, "start": 3130.92, "end": 3136.8, "text": " opinion is, again, that maybe you don't want to explicitly mandate this on every run, and", "tokens": [4800, 307, 11, 797, 11, 300, 1310, 291, 500, 380, 528, 281, 20803, 23885, 341, 322, 633, 1190, 11, 293], "temperature": 0.0, "avg_logprob": -0.19715261459350586, "compression_ratio": 1.775438596491228, "no_speech_prob": 0.00024721151567064226}, {"id": 650, "seek": 311280, "start": 3136.8, "end": 3140.04, "text": " the reason for that is it's kind of like, it can then become kind of a metric that you", "tokens": [264, 1778, 337, 300, 307, 309, 311, 733, 295, 411, 11, 309, 393, 550, 1813, 733, 295, 257, 20678, 300, 291], "temperature": 0.0, "avg_logprob": -0.19715261459350586, "compression_ratio": 1.775438596491228, "no_speech_prob": 0.00024721151567064226}, {"id": 651, "seek": 314004, "start": 3140.04, "end": 3143.32, "text": " try and optimize for or something to look at, whereas really, I think the nice way to", "tokens": [853, 293, 19719, 337, 420, 746, 281, 574, 412, 11, 9735, 534, 11, 286, 519, 264, 1481, 636, 281], "temperature": 0.0, "avg_logprob": -0.13333694578155758, "compression_ratio": 1.8015873015873016, "no_speech_prob": 0.00011247109068790451}, {"id": 652, "seek": 314004, "start": 3143.32, "end": 3147.0, "text": " use it is every now and then is how I would say so. I think if you've got a super critical", "tokens": [764, 309, 307, 633, 586, 293, 550, 307, 577, 286, 576, 584, 370, 13, 286, 519, 498, 291, 600, 658, 257, 1687, 4924], "temperature": 0.0, "avg_logprob": -0.13333694578155758, "compression_ratio": 1.8015873015873016, "no_speech_prob": 0.00011247109068790451}, {"id": 653, "seek": 314004, "start": 3147.0, "end": 3151.32, "text": " project where that's really important, you may want to run it like that. For me, I don't", "tokens": [1716, 689, 300, 311, 534, 1021, 11, 291, 815, 528, 281, 1190, 309, 411, 300, 13, 1171, 385, 11, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.13333694578155758, "compression_ratio": 1.8015873015873016, "no_speech_prob": 0.00011247109068790451}, {"id": 654, "seek": 314004, "start": 3151.32, "end": 3155.36, "text": " need to, but I think that's really up to you, up to you as an implementer, what you want", "tokens": [643, 281, 11, 457, 286, 519, 300, 311, 534, 493, 281, 291, 11, 493, 281, 291, 382, 364, 4445, 260, 11, 437, 291, 528], "temperature": 0.0, "avg_logprob": -0.13333694578155758, "compression_ratio": 1.8015873015873016, "no_speech_prob": 0.00011247109068790451}, {"id": 655, "seek": 314004, "start": 3155.36, "end": 3158.52, "text": " to do, and I think there's definitely a use case to do it in that way if that was important", "tokens": [281, 360, 11, 293, 286, 519, 456, 311, 2138, 257, 764, 1389, 281, 360, 309, 294, 300, 636, 498, 300, 390, 1021], "temperature": 0.0, "avg_logprob": -0.13333694578155758, "compression_ratio": 1.8015873015873016, "no_speech_prob": 0.00011247109068790451}, {"id": 656, "seek": 314004, "start": 3158.52, "end": 3159.52, "text": " to you.", "tokens": [281, 291, 13], "temperature": 0.0, "avg_logprob": -0.13333694578155758, "compression_ratio": 1.8015873015873016, "no_speech_prob": 0.00011247109068790451}, {"id": 657, "seek": 315952, "start": 3159.52, "end": 3176.08, "text": " Hand over here, hello. Yes, yes. Short answer is yes. Long answer is, depending on the actual", "tokens": [8854, 670, 510, 11, 7751, 13, 1079, 11, 2086, 13, 16881, 1867, 307, 2086, 13, 8282, 1867, 307, 11, 5413, 322, 264, 3539], "temperature": 0.0, "avg_logprob": -0.21255331569247776, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.00017700799799058586}, {"id": 658, "seek": 315952, "start": 3176.08, "end": 3179.88, "text": " framework, it might be that you add a comment to ignore it. Alternatively, there is a config", "tokens": [8388, 11, 309, 1062, 312, 300, 291, 909, 257, 2871, 281, 11200, 309, 13, 46167, 11, 456, 307, 257, 6662], "temperature": 0.0, "avg_logprob": -0.21255331569247776, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.00017700799799058586}, {"id": 659, "seek": 315952, "start": 3179.88, "end": 3184.28, "text": " file set up as well in Python where you can say, only mutate these paths, only do these", "tokens": [3991, 992, 493, 382, 731, 294, 15329, 689, 291, 393, 584, 11, 787, 5839, 473, 613, 14518, 11, 787, 360, 613], "temperature": 0.0, "avg_logprob": -0.21255331569247776, "compression_ratio": 1.4731182795698925, "no_speech_prob": 0.00017700799799058586}, {"id": 660, "seek": 318428, "start": 3184.28, "end": 3194.6800000000003, "text": " things. What language do you use? That would be Striker. I would say yes. I haven't looked", "tokens": [721, 13, 708, 2856, 360, 291, 764, 30, 663, 576, 312, 20390, 5767, 13, 286, 576, 584, 2086, 13, 286, 2378, 380, 2956], "temperature": 0.0, "avg_logprob": -0.1799095528466361, "compression_ratio": 1.717557251908397, "no_speech_prob": 0.00044937271741218865}, {"id": 661, "seek": 318428, "start": 3194.6800000000003, "end": 3198.6800000000003, "text": " that much into Striker, but I think they make quite some nice stuff. It's quite generic", "tokens": [300, 709, 666, 20390, 5767, 11, 457, 286, 519, 436, 652, 1596, 512, 1481, 1507, 13, 467, 311, 1596, 19577], "temperature": 0.0, "avg_logprob": -0.1799095528466361, "compression_ratio": 1.717557251908397, "no_speech_prob": 0.00044937271741218865}, {"id": 662, "seek": 318428, "start": 3198.6800000000003, "end": 3203.88, "text": " for all frameworks. Exclude code for mutation, definitely yes. Depending on the framework,", "tokens": [337, 439, 29834, 13, 9368, 32334, 3089, 337, 27960, 11, 2138, 2086, 13, 22539, 322, 264, 8388, 11], "temperature": 0.0, "avg_logprob": -0.1799095528466361, "compression_ratio": 1.717557251908397, "no_speech_prob": 0.00044937271741218865}, {"id": 663, "seek": 318428, "start": 3203.88, "end": 3209.2400000000002, "text": " some even have nice things like exclude, do not mutate any calls to these classes, which", "tokens": [512, 754, 362, 1481, 721, 411, 33536, 11, 360, 406, 5839, 473, 604, 5498, 281, 613, 5359, 11, 597], "temperature": 0.0, "avg_logprob": -0.1799095528466361, "compression_ratio": 1.717557251908397, "no_speech_prob": 0.00044937271741218865}, {"id": 664, "seek": 318428, "start": 3209.2400000000002, "end": 3212.76, "text": " is interesting for the logging, for example. Do not mutate any calls to this logging class,", "tokens": [307, 1880, 337, 264, 27991, 11, 337, 1365, 13, 1144, 406, 5839, 473, 604, 5498, 281, 341, 27991, 1508, 11], "temperature": 0.0, "avg_logprob": -0.1799095528466361, "compression_ratio": 1.717557251908397, "no_speech_prob": 0.00044937271741218865}, {"id": 665, "seek": 321276, "start": 3212.76, "end": 3216.5200000000004, "text": " but same you can do for packages, class paths, et cetera.", "tokens": [457, 912, 291, 393, 360, 337, 17401, 11, 1508, 14518, 11, 1030, 11458, 13], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 666, "seek": 321276, "start": 3216.5200000000004, "end": 3221.84, "text": " I'd say with Striker as well. One of my colleagues uses Striker because he maintains our.NET SDK,", "tokens": [286, 1116, 584, 365, 20390, 5767, 382, 731, 13, 1485, 295, 452, 7734, 4960, 20390, 5767, 570, 415, 33385, 527, 2411, 35554, 37135, 11], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 667, "seek": 321276, "start": 3221.84, "end": 3225.48, "text": " and he's actually also got mutation testing there in Striker. It does seem very perform", "tokens": [293, 415, 311, 767, 611, 658, 27960, 4997, 456, 294, 20390, 5767, 13, 467, 775, 1643, 588, 2042], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 668, "seek": 321276, "start": 3225.48, "end": 3229.0800000000004, "text": " and it seems like it does have a lot of those features as well. Honestly, if you're interested", "tokens": [293, 309, 2544, 411, 309, 775, 362, 257, 688, 295, 729, 4122, 382, 731, 13, 12348, 11, 498, 291, 434, 3102], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 669, "seek": 321276, "start": 3229.0800000000004, "end": 3231.2000000000003, "text": " in TypeScript, I think there is something for you there.", "tokens": [294, 15576, 14237, 11, 286, 519, 456, 307, 746, 337, 291, 456, 13], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 670, "seek": 321276, "start": 3231.2000000000003, "end": 3232.2000000000003, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 671, "seek": 321276, "start": 3232.2000000000003, "end": 3234.4, "text": " I think it might be free on open source repos. Sorry, another question.", "tokens": [286, 519, 309, 1062, 312, 1737, 322, 1269, 4009, 1085, 329, 13, 4919, 11, 1071, 1168, 13], "temperature": 0.0, "avg_logprob": -0.28909152221679685, "compression_ratio": 1.6033898305084746, "no_speech_prob": 0.000677992298733443}, {"id": 672, "seek": 323440, "start": 3234.4, "end": 3249.7200000000003, "text": " Yeah. Are specific mutated runs that are reproducible for debugging purposes? If you have a run", "tokens": [865, 13, 2014, 2685, 5839, 770, 6676, 300, 366, 11408, 32128, 337, 45592, 9932, 30, 759, 291, 362, 257, 1190], "temperature": 0.0, "avg_logprob": -0.3179650404015366, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0008479030220769346}, {"id": 673, "seek": 323440, "start": 3249.7200000000003, "end": 3254.7200000000003, "text": " and you see something you don't expect, can you reproduce that specific run with a given", "tokens": [293, 291, 536, 746, 291, 500, 380, 2066, 11, 393, 291, 29501, 300, 2685, 1190, 365, 257, 2212], "temperature": 0.0, "avg_logprob": -0.3179650404015366, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0008479030220769346}, {"id": 674, "seek": 323440, "start": 3254.7200000000003, "end": 3255.7200000000003, "text": " SC or something?", "tokens": [9028, 420, 746, 30], "temperature": 0.0, "avg_logprob": -0.3179650404015366, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0008479030220769346}, {"id": 675, "seek": 323440, "start": 3255.7200000000003, "end": 3258.0, "text": " Well, so the question is, how reproducible are the mutants? If you find one, then next", "tokens": [1042, 11, 370, 264, 1168, 307, 11, 577, 11408, 32128, 366, 264, 5839, 1719, 30, 759, 291, 915, 472, 11, 550, 958], "temperature": 0.0, "avg_logprob": -0.3179650404015366, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0008479030220769346}, {"id": 676, "seek": 323440, "start": 3258.0, "end": 3262.64, "text": " run, is it still there? As far as I know, there shouldn't be any randomness in these", "tokens": [1190, 11, 307, 309, 920, 456, 30, 1018, 1400, 382, 286, 458, 11, 456, 4659, 380, 312, 604, 4974, 1287, 294, 613], "temperature": 0.0, "avg_logprob": -0.3179650404015366, "compression_ratio": 1.6147186147186148, "no_speech_prob": 0.0008479030220769346}, {"id": 677, "seek": 326264, "start": 3262.64, "end": 3266.2799999999997, "text": " mutant generations. It just goes over the code. Any condition that it finds that it", "tokens": [47198, 10593, 13, 467, 445, 1709, 670, 264, 3089, 13, 2639, 4188, 300, 309, 10704, 300, 309], "temperature": 0.0, "avg_logprob": -0.17379186027928403, "compression_ratio": 1.6104651162790697, "no_speech_prob": 0.0020236496347934008}, {"id": 678, "seek": 326264, "start": 3266.2799999999997, "end": 3271.68, "text": " can mutate, it will mutate. So the next time you run it, the same mutant should be there", "tokens": [393, 5839, 473, 11, 309, 486, 5839, 473, 13, 407, 264, 958, 565, 291, 1190, 309, 11, 264, 912, 47198, 820, 312, 456], "temperature": 0.0, "avg_logprob": -0.17379186027928403, "compression_ratio": 1.6104651162790697, "no_speech_prob": 0.0020236496347934008}, {"id": 679, "seek": 326264, "start": 3271.68, "end": 3275.7999999999997, "text": " at the same place. So you could also see whether you killed it the next time. So yes, it's", "tokens": [412, 264, 912, 1081, 13, 407, 291, 727, 611, 536, 1968, 291, 4652, 309, 264, 958, 565, 13, 407, 2086, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.17379186027928403, "compression_ratio": 1.6104651162790697, "no_speech_prob": 0.0020236496347934008}, {"id": 680, "seek": 326264, "start": 3275.7999999999997, "end": 3276.7999999999997, "text": " reproducible.", "tokens": [11408, 32128, 13], "temperature": 0.0, "avg_logprob": -0.17379186027928403, "compression_ratio": 1.6104651162790697, "no_speech_prob": 0.0020236496347934008}, {"id": 681, "seek": 327680, "start": 3276.8, "end": 3300.8, "text": " I think that's the person who was first, sorry.", "tokens": [286, 519, 300, 311, 264, 954, 567, 390, 700, 11, 2597, 13], "temperature": 0.0, "avg_logprob": -0.8887472748756409, "compression_ratio": 0.9038461538461539, "no_speech_prob": 0.017585450783371925}, {"id": 682, "seek": 330080, "start": 3300.8, "end": 3314.2000000000003, "text": " That's a good question. I'll repeat that one. That's a good one. So the question there", "tokens": [663, 311, 257, 665, 1168, 13, 286, 603, 7149, 300, 472, 13, 663, 311, 257, 665, 472, 13, 407, 264, 1168, 456], "temperature": 0.0, "avg_logprob": -0.17087554931640625, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.0003167146642226726}, {"id": 683, "seek": 330080, "start": 3314.2000000000003, "end": 3318.0, "text": " was, so mutation testing, we've talked all the big game, we've come up here and been", "tokens": [390, 11, 370, 27960, 4997, 11, 321, 600, 2825, 439, 264, 955, 1216, 11, 321, 600, 808, 493, 510, 293, 668], "temperature": 0.0, "avg_logprob": -0.17087554931640625, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.0003167146642226726}, {"id": 684, "seek": 330080, "start": 3318.0, "end": 3321.0800000000004, "text": " like, hey, look, this is important, right? That's what we've talked about. And the question,", "tokens": [411, 11, 4177, 11, 574, 11, 341, 307, 1021, 11, 558, 30, 663, 311, 437, 321, 600, 2825, 466, 13, 400, 264, 1168, 11], "temperature": 0.0, "avg_logprob": -0.17087554931640625, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.0003167146642226726}, {"id": 685, "seek": 330080, "start": 3321.0800000000004, "end": 3323.6800000000003, "text": " which is a very valid question is, hey, if it's so important, why is no one supporting", "tokens": [597, 307, 257, 588, 7363, 1168, 307, 11, 4177, 11, 498, 309, 311, 370, 1021, 11, 983, 307, 572, 472, 7231], "temperature": 0.0, "avg_logprob": -0.17087554931640625, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.0003167146642226726}, {"id": 686, "seek": 330080, "start": 3323.6800000000003, "end": 3327.1200000000003, "text": " this in Python? Why is this all open source stuff, right? And you know what? I agree.", "tokens": [341, 294, 15329, 30, 1545, 307, 341, 439, 1269, 4009, 1507, 11, 558, 30, 400, 291, 458, 437, 30, 286, 3986, 13], "temperature": 0.0, "avg_logprob": -0.17087554931640625, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.0003167146642226726}, {"id": 687, "seek": 332712, "start": 3327.12, "end": 3331.08, "text": " That's a really good question. It's one I asked as well, to be honest. So no, I totally", "tokens": [663, 311, 257, 534, 665, 1168, 13, 467, 311, 472, 286, 2351, 382, 731, 11, 281, 312, 3245, 13, 407, 572, 11, 286, 3879], "temperature": 0.0, "avg_logprob": -0.13701213363313328, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.00021101257880218327}, {"id": 688, "seek": 332712, "start": 3331.08, "end": 3335.16, "text": " support the question. And the question I'll properly say is, yeah, why aren't employers", "tokens": [1406, 264, 1168, 13, 400, 264, 1168, 286, 603, 6108, 584, 307, 11, 1338, 11, 983, 3212, 380, 16744], "temperature": 0.0, "avg_logprob": -0.13701213363313328, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.00021101257880218327}, {"id": 689, "seek": 332712, "start": 3335.16, "end": 3340.68, "text": " supporting this? The short answer I think is to do with ROI, unfortunately. And that", "tokens": [7231, 341, 30, 440, 2099, 1867, 286, 519, 307, 281, 360, 365, 49808, 11, 7015, 13, 400, 300], "temperature": 0.0, "avg_logprob": -0.13701213363313328, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.00021101257880218327}, {"id": 690, "seek": 332712, "start": 3340.68, "end": 3345.48, "text": " sucks, honestly, because I would like us to invest more time in certain things. And I", "tokens": [15846, 11, 6095, 11, 570, 286, 576, 411, 505, 281, 1963, 544, 565, 294, 1629, 721, 13, 400, 286], "temperature": 0.0, "avg_logprob": -0.13701213363313328, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.00021101257880218327}, {"id": 691, "seek": 332712, "start": 3345.48, "end": 3349.88, "text": " think it's just to do with company priorities, right? So I would like to spend more time.", "tokens": [519, 309, 311, 445, 281, 360, 365, 2237, 15503, 11, 558, 30, 407, 286, 576, 411, 281, 3496, 544, 565, 13], "temperature": 0.0, "avg_logprob": -0.13701213363313328, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.00021101257880218327}, {"id": 692, "seek": 332712, "start": 3349.88, "end": 3352.56, "text": " Honestly, I had quite a lot of fun adding the one feature I did get to add. I'd quite", "tokens": [12348, 11, 286, 632, 1596, 257, 688, 295, 1019, 5127, 264, 472, 4111, 286, 630, 483, 281, 909, 13, 286, 1116, 1596], "temperature": 0.0, "avg_logprob": -0.13701213363313328, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.00021101257880218327}, {"id": 693, "seek": 335256, "start": 3352.56, "end": 3357.92, "text": " like to do some more. But again, I've got this API to implement, so do I have time? Well,", "tokens": [411, 281, 360, 512, 544, 13, 583, 797, 11, 286, 600, 658, 341, 9362, 281, 4445, 11, 370, 360, 286, 362, 565, 30, 1042, 11], "temperature": 0.0, "avg_logprob": -0.15827985181876109, "compression_ratio": 1.7243589743589745, "no_speech_prob": 7.991358870640397e-05}, {"id": 694, "seek": 335256, "start": 3357.92, "end": 3361.7999999999997, "text": " no one's funding me to do it. So unfortunately, it really is like, unless there's an obvious", "tokens": [572, 472, 311, 6137, 385, 281, 360, 309, 13, 407, 7015, 11, 309, 534, 307, 411, 11, 5969, 456, 311, 364, 6322], "temperature": 0.0, "avg_logprob": -0.15827985181876109, "compression_ratio": 1.7243589743589745, "no_speech_prob": 7.991358870640397e-05}, {"id": 695, "seek": 335256, "start": 3361.7999999999997, "end": 3364.68, "text": " ROI, this just seems to be the way things go. Unfortunately, that's the way we've kind", "tokens": [49808, 11, 341, 445, 2544, 281, 312, 264, 636, 721, 352, 13, 8590, 11, 300, 311, 264, 636, 321, 600, 733], "temperature": 0.0, "avg_logprob": -0.15827985181876109, "compression_ratio": 1.7243589743589745, "no_speech_prob": 7.991358870640397e-05}, {"id": 696, "seek": 335256, "start": 3364.68, "end": 3370.4, "text": " of structured our platforms and so on. So I gave a talk earlier on a PyPy and malware.", "tokens": [295, 18519, 527, 9473, 293, 370, 322, 13, 407, 286, 2729, 257, 751, 3071, 322, 257, 9953, 47, 88, 293, 40747, 13], "temperature": 0.0, "avg_logprob": -0.15827985181876109, "compression_ratio": 1.7243589743589745, "no_speech_prob": 7.991358870640397e-05}, {"id": 697, "seek": 335256, "start": 3370.4, "end": 3374.6, "text": " And there was actually, the reason that that kind of is so prevalent and so possible on", "tokens": [400, 456, 390, 767, 11, 264, 1778, 300, 300, 733, 295, 307, 370, 30652, 293, 370, 1944, 322], "temperature": 0.0, "avg_logprob": -0.15827985181876109, "compression_ratio": 1.7243589743589745, "no_speech_prob": 7.991358870640397e-05}, {"id": 698, "seek": 335256, "start": 3374.6, "end": 3381.04, "text": " PyPy is because PyPy haven't really implemented many ways to actually protect against malware", "tokens": [9953, 47, 88, 307, 570, 9953, 47, 88, 2378, 380, 534, 12270, 867, 2098, 281, 767, 2371, 1970, 40747], "temperature": 0.0, "avg_logprob": -0.15827985181876109, "compression_ratio": 1.7243589743589745, "no_speech_prob": 7.991358870640397e-05}, {"id": 699, "seek": 338104, "start": 3381.04, "end": 3384.52, "text": " being uploaded. So currently, I've uploaded some malware to PyPy that you can get yourself.", "tokens": [885, 17135, 13, 407, 4362, 11, 286, 600, 17135, 512, 40747, 281, 9953, 47, 88, 300, 291, 393, 483, 1803, 13], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 700, "seek": 338104, "start": 3384.52, "end": 3389.56, "text": " And actually, the reason that they, it's not real malware to be clear, it's a rick roll.", "tokens": [400, 767, 11, 264, 1778, 300, 436, 11, 309, 311, 406, 957, 40747, 281, 312, 1850, 11, 309, 311, 257, 367, 618, 3373, 13], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 701, "seek": 338104, "start": 3389.56, "end": 3395.24, "text": " But you saw that. But basically, what I'm trying to say here is that that project kind", "tokens": [583, 291, 1866, 300, 13, 583, 1936, 11, 437, 286, 478, 1382, 281, 584, 510, 307, 300, 300, 1716, 733], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 702, "seek": 338104, "start": 3395.24, "end": 3398.84, "text": " of didn't really get off the ground in terms of protecting users just because I think originally", "tokens": [295, 994, 380, 534, 483, 766, 264, 2727, 294, 2115, 295, 12316, 5022, 445, 570, 286, 519, 7993], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 703, "seek": 338104, "start": 3398.84, "end": 3402.56, "text": " Facebook were funding it and they stopped funding and that just didn't then continue.", "tokens": [4384, 645, 6137, 309, 293, 436, 5936, 6137, 293, 300, 445, 994, 380, 550, 2354, 13], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 704, "seek": 338104, "start": 3402.56, "end": 3405.44, "text": " So unfortunately, yeah, this is just kind of the way that things are in open source right", "tokens": [407, 7015, 11, 1338, 11, 341, 307, 445, 733, 295, 264, 636, 300, 721, 366, 294, 1269, 4009, 558], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 705, "seek": 338104, "start": 3405.44, "end": 3409.12, "text": " now. And yeah, I do feel your pain. I do understand. But that's all I can really say. I'm afraid.", "tokens": [586, 13, 400, 1338, 11, 286, 360, 841, 428, 1822, 13, 286, 360, 1223, 13, 583, 300, 311, 439, 286, 393, 534, 584, 13, 286, 478, 4638, 13], "temperature": 0.0, "avg_logprob": -0.17010300247757523, "compression_ratio": 1.7921348314606742, "no_speech_prob": 0.0001545614650240168}, {"id": 706, "seek": 340912, "start": 3409.12, "end": 3414.4, "text": " Yeah, to quickly add to this, by the way, a Striker, for example, is actually funded,", "tokens": [865, 11, 281, 2661, 909, 281, 341, 11, 538, 264, 636, 11, 257, 20390, 5767, 11, 337, 1365, 11, 307, 767, 14385, 11], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 707, "seek": 340912, "start": 3414.4, "end": 3419.48, "text": " is backed by a company who, for example, let's work, interns work on it as well. So some", "tokens": [307, 20391, 538, 257, 2237, 567, 11, 337, 1365, 11, 718, 311, 589, 11, 46145, 589, 322, 309, 382, 731, 13, 407, 512], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 708, "seek": 340912, "start": 3419.48, "end": 3423.12, "text": " frameworks actually are backed and there are people already investing it. So it's not always", "tokens": [29834, 767, 366, 20391, 293, 456, 366, 561, 1217, 10978, 309, 13, 407, 309, 311, 406, 1009], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 709, "seek": 340912, "start": 3423.12, "end": 3424.92, "text": " bad. But sorry, Nick, let's go to that side.", "tokens": [1578, 13, 583, 2597, 11, 9449, 11, 718, 311, 352, 281, 300, 1252, 13], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 710, "seek": 340912, "start": 3424.92, "end": 3429.92, "text": " So you showed some HTML reports for the results of the mutual test.", "tokens": [407, 291, 4712, 512, 17995, 7122, 337, 264, 3542, 295, 264, 16917, 1500, 13], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 711, "seek": 340912, "start": 3429.92, "end": 3430.92, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 712, "seek": 340912, "start": 3430.92, "end": 3435.92, "text": " We all know all managers and PDT teams love your KPIs. So I'm wondering, is there any", "tokens": [492, 439, 458, 439, 14084, 293, 10464, 51, 5491, 959, 428, 41371, 6802, 13, 407, 286, 478, 6359, 11, 307, 456, 604], "temperature": 0.0, "avg_logprob": -0.3413141847566794, "compression_ratio": 1.6354166666666667, "no_speech_prob": 0.0012866962933912873}, {"id": 713, "seek": 343592, "start": 3435.92, "end": 3442.88, "text": " integration or plugins to export the mutual test results in Sonar Cloud or other platforms?", "tokens": [10980, 420, 33759, 281, 10725, 264, 16917, 1500, 3542, 294, 5185, 289, 8061, 420, 661, 9473, 30], "temperature": 0.0, "avg_logprob": -0.2211773687129398, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.0006129791727289557}, {"id": 714, "seek": 343592, "start": 3442.88, "end": 3446.7200000000003, "text": " That's a really good question. So I'll answer quickly for Python and then I'll pass it over.", "tokens": [663, 311, 257, 534, 665, 1168, 13, 407, 286, 603, 1867, 2661, 337, 15329, 293, 550, 286, 603, 1320, 309, 670, 13], "temperature": 0.0, "avg_logprob": -0.2211773687129398, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.0006129791727289557}, {"id": 715, "seek": 343592, "start": 3446.7200000000003, "end": 3451.32, "text": " Because in Python, the answer is quite short. The answer is unfortunately no. So the maintainers,", "tokens": [1436, 294, 15329, 11, 264, 1867, 307, 1596, 2099, 13, 440, 1867, 307, 7015, 572, 13, 407, 264, 6909, 433, 11], "temperature": 0.0, "avg_logprob": -0.2211773687129398, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.0006129791727289557}, {"id": 716, "seek": 343592, "start": 3451.32, "end": 3455.88, "text": " the maintainer movement is not really a big fan of the CI system stuff and the report stuff.", "tokens": [264, 6909, 260, 3963, 307, 406, 534, 257, 955, 3429, 295, 264, 37777, 1185, 1507, 293, 264, 2275, 1507, 13], "temperature": 0.0, "avg_logprob": -0.2211773687129398, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.0006129791727289557}, {"id": 717, "seek": 343592, "start": 3455.88, "end": 3458.96, "text": " I think it's like, I think the premise there is, you know, I like running this locally", "tokens": [286, 519, 309, 311, 411, 11, 286, 519, 264, 22045, 456, 307, 11, 291, 458, 11, 286, 411, 2614, 341, 16143], "temperature": 0.0, "avg_logprob": -0.2211773687129398, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.0006129791727289557}, {"id": 718, "seek": 343592, "start": 3458.96, "end": 3463.04, "text": " and, you know, that's fair. And that is really how you can get started and get an idea. So", "tokens": [293, 11, 291, 458, 11, 300, 311, 3143, 13, 400, 300, 307, 534, 577, 291, 393, 483, 1409, 293, 483, 364, 1558, 13, 407], "temperature": 0.0, "avg_logprob": -0.2211773687129398, "compression_ratio": 1.7781350482315113, "no_speech_prob": 0.0006129791727289557}, {"id": 719, "seek": 346304, "start": 3463.04, "end": 3466.72, "text": " in Python, unfortunately, the answer is no. But I think that Paco might have a more positive", "tokens": [294, 15329, 11, 7015, 11, 264, 1867, 307, 572, 13, 583, 286, 519, 300, 10702, 78, 1062, 362, 257, 544, 3353], "temperature": 0.0, "avg_logprob": -0.29554132314828724, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007377780857495964}, {"id": 720, "seek": 346304, "start": 3466.72, "end": 3467.72, "text": " answer for you.", "tokens": [1867, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.29554132314828724, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007377780857495964}, {"id": 721, "seek": 346304, "start": 3467.72, "end": 3471.48, "text": " Yeah. So let's also ask the, you were the maintainer of the other framework. So how", "tokens": [865, 13, 407, 718, 311, 611, 1029, 264, 11, 291, 645, 264, 6909, 260, 295, 264, 661, 8388, 13, 407, 577], "temperature": 0.0, "avg_logprob": -0.29554132314828724, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007377780857495964}, {"id": 722, "seek": 346304, "start": 3471.48, "end": 3474.48, "text": " does it go for the other part of the framework?", "tokens": [775, 309, 352, 337, 264, 661, 644, 295, 264, 8388, 30], "temperature": 0.0, "avg_logprob": -0.29554132314828724, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007377780857495964}, {"id": 723, "seek": 346304, "start": 3474.48, "end": 3483.48, "text": " So, okay. So I talked about not having that facility, that feature in Cosmic Ray. Is that", "tokens": [407, 11, 1392, 13, 407, 286, 2825, 466, 406, 1419, 300, 8973, 11, 300, 4111, 294, 15855, 13195, 10883, 13, 1119, 300], "temperature": 0.0, "avg_logprob": -0.29554132314828724, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0007377780857495964}, {"id": 724, "seek": 348348, "start": 3483.48, "end": 3493.48, "text": " a bit un-maintained? I don't want to say names, but it is a very, very large, 450 maybe vendor", "tokens": [257, 857, 517, 12, 76, 5114, 3563, 30, 286, 500, 380, 528, 281, 584, 5288, 11, 457, 309, 307, 257, 588, 11, 588, 2416, 11, 26034, 1310, 24321], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 725, "seek": 348348, "start": 3493.48, "end": 3498.48, "text": " that uses it. And we asked them, can you fund development? They said, you know, no. And", "tokens": [300, 4960, 309, 13, 400, 321, 2351, 552, 11, 393, 291, 2374, 3250, 30, 814, 848, 11, 291, 458, 11, 572, 13, 400], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 726, "seek": 348348, "start": 3498.48, "end": 3499.48, "text": " yeah.", "tokens": [1338, 13], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 727, "seek": 348348, "start": 3499.48, "end": 3503.48, "text": " So they have shown this around at large events, like in front of thousands, thousands of people.", "tokens": [407, 436, 362, 4898, 341, 926, 412, 2416, 3931, 11, 411, 294, 1868, 295, 5383, 11, 5383, 295, 561, 13], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 728, "seek": 348348, "start": 3503.48, "end": 3508.48, "text": " But yeah. They're like, okay, we keep all the data stores there for whatever we find", "tokens": [583, 1338, 13, 814, 434, 411, 11, 1392, 11, 321, 1066, 439, 264, 1412, 9512, 456, 337, 2035, 321, 915], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 729, "seek": 348348, "start": 3508.48, "end": 3509.48, "text": " as it is.", "tokens": [382, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 730, "seek": 348348, "start": 3509.48, "end": 3512.48, "text": " Yeah. So for the Python frameworks.", "tokens": [865, 13, 407, 337, 264, 15329, 29834, 13], "temperature": 0.0, "avg_logprob": -0.42374398097519045, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.0014917573425918818}, {"id": 731, "seek": 351248, "start": 3512.48, "end": 3513.48, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 732, "seek": 351248, "start": 3513.48, "end": 3514.48, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 733, "seek": 351248, "start": 3514.48, "end": 3515.48, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 734, "seek": 351248, "start": 3515.48, "end": 3516.48, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 735, "seek": 351248, "start": 3516.48, "end": 3527.48, "text": " So for the Python frameworks, there's not really CI plug-in support. I do know that, for", "tokens": [407, 337, 264, 15329, 29834, 11, 456, 311, 406, 534, 37777, 5452, 12, 259, 1406, 13, 286, 360, 458, 300, 11, 337], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 736, "seek": 351248, "start": 3527.48, "end": 3532.68, "text": " example, for PyTest, there is support for Jenkins and Sonar. And I'm not sure about Stryker,", "tokens": [1365, 11, 337, 9953, 51, 377, 11, 456, 307, 1406, 337, 41273, 293, 5185, 289, 13, 400, 286, 478, 406, 988, 466, 745, 627, 5767, 11], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 737, "seek": 351248, "start": 3532.68, "end": 3537.88, "text": " but I know it's there. And usually these things are relatively easy to build yourself here", "tokens": [457, 286, 458, 309, 311, 456, 13, 400, 2673, 613, 721, 366, 7226, 1858, 281, 1322, 1803, 510], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 738, "seek": 351248, "start": 3537.88, "end": 3542.28, "text": " as well, because all you have to do is, if there is a report in some JSON file, you can", "tokens": [382, 731, 11, 570, 439, 291, 362, 281, 360, 307, 11, 498, 456, 307, 257, 2275, 294, 512, 31828, 3991, 11, 291, 393], "temperature": 0.0, "avg_logprob": -0.19680839206861414, "compression_ratio": 1.5802469135802468, "no_speech_prob": 0.0005608773790299892}, {"id": 739, "seek": 354228, "start": 3542.28, "end": 3546.6800000000003, "text": " quite easily parse it and make a nice HTML form about this. Because again, they're all", "tokens": [1596, 3612, 48377, 309, 293, 652, 257, 1481, 17995, 1254, 466, 341, 13, 1436, 797, 11, 436, 434, 439], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 740, "seek": 354228, "start": 3546.6800000000003, "end": 3550.28, "text": " open for contributions. Do we have time for one last?", "tokens": [1269, 337, 15725, 13, 1144, 321, 362, 565, 337, 472, 1036, 30], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 741, "seek": 354228, "start": 3550.28, "end": 3552.28, "text": " I want to just add to that a little bit.", "tokens": [286, 528, 281, 445, 909, 281, 300, 257, 707, 857, 13], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 742, "seek": 354228, "start": 3552.28, "end": 3553.28, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 743, "seek": 354228, "start": 3553.28, "end": 3557.84, "text": " Okay. Really quickly. First of all, with your question, yeah, I, when I originally implemented", "tokens": [1033, 13, 4083, 2661, 13, 2386, 295, 439, 11, 365, 428, 1168, 11, 1338, 11, 286, 11, 562, 286, 7993, 12270], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 744, "seek": 354228, "start": 3557.84, "end": 3561.1200000000003, "text": " my mutt mutt thing, I did do it on PR. And in that case, I got a, you know, an action", "tokens": [452, 5839, 83, 5839, 83, 551, 11, 286, 630, 360, 309, 322, 11568, 13, 400, 294, 300, 1389, 11, 286, 658, 257, 11, 291, 458, 11, 364, 3069], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 745, "seek": 354228, "start": 3561.1200000000003, "end": 3564.7200000000003, "text": " that would comment my coverage in a nice metricy way. And so you can, it's quite simple to", "tokens": [300, 576, 2871, 452, 9645, 294, 257, 1481, 20678, 88, 636, 13, 400, 370, 291, 393, 11, 309, 311, 1596, 2199, 281], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 746, "seek": 354228, "start": 3564.7200000000003, "end": 3565.7200000000003, "text": " do.", "tokens": [360, 13], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 747, "seek": 354228, "start": 3565.7200000000003, "end": 3569.1200000000003, "text": " So about, about cosmic, very first of all, that sucks. And I'm sorry. That's, that's", "tokens": [407, 466, 11, 466, 27614, 11, 588, 700, 295, 439, 11, 300, 15846, 13, 400, 286, 478, 2597, 13, 663, 311, 11, 300, 311], "temperature": 0.0, "avg_logprob": -0.21761601607992043, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.0004856327723246068}, {"id": 748, "seek": 356912, "start": 3569.12, "end": 3574.3599999999997, "text": " blumming awful. Like, yeah, sadly, it does seem that a lot of, a lot of what we've kind", "tokens": [888, 449, 2810, 11232, 13, 1743, 11, 1338, 11, 22023, 11, 309, 775, 1643, 300, 257, 688, 295, 11, 257, 688, 295, 437, 321, 600, 733], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 749, "seek": 356912, "start": 3574.3599999999997, "end": 3576.92, "text": " of been discussing on the side of the room is just like, man, it would be good if some,", "tokens": [295, 668, 10850, 322, 264, 1252, 295, 264, 1808, 307, 445, 411, 11, 587, 11, 309, 576, 312, 665, 498, 512, 11], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 750, "seek": 356912, "start": 3576.92, "end": 3579.6, "text": " you know, we all agree this is important, right? And it's useful for a lot of things.", "tokens": [291, 458, 11, 321, 439, 3986, 341, 307, 1021, 11, 558, 30, 400, 309, 311, 4420, 337, 257, 688, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 751, "seek": 356912, "start": 3579.6, "end": 3583.6, "text": " It'd be great if someone funded it. So I think, unfortunately with Python, that is the state", "tokens": [467, 1116, 312, 869, 498, 1580, 14385, 309, 13, 407, 286, 519, 11, 7015, 365, 15329, 11, 300, 307, 264, 1785], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 752, "seek": 356912, "start": 3583.6, "end": 3589.12, "text": " of play. And it does suck. But yes, I, I get you. Any other questions? Finally, I think", "tokens": [295, 862, 13, 400, 309, 775, 9967, 13, 583, 2086, 11, 286, 11, 286, 483, 291, 13, 2639, 661, 1651, 30, 6288, 11, 286, 519], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 753, "seek": 356912, "start": 3589.12, "end": 3590.12, "text": " one, yes, hello.", "tokens": [472, 11, 2086, 11, 7751, 13], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 754, "seek": 356912, "start": 3590.12, "end": 3596.7999999999997, "text": " Can you write custom mutation to mutate your code in a custom logic?", "tokens": [1664, 291, 2464, 2375, 27960, 281, 5839, 473, 428, 3089, 294, 257, 2375, 9952, 30], "temperature": 0.0, "avg_logprob": -0.2385316985884523, "compression_ratio": 1.65, "no_speech_prob": 0.0003290660388302058}, {"id": 755, "seek": 359680, "start": 3596.8, "end": 3602.48, "text": " That's a really good question. So, sorry. That's, I will now repeat your really good", "tokens": [663, 311, 257, 534, 665, 1168, 13, 407, 11, 2597, 13, 663, 311, 11, 286, 486, 586, 7149, 428, 534, 665], "temperature": 0.0, "avg_logprob": -0.14631316396925184, "compression_ratio": 1.8061224489795917, "no_speech_prob": 0.0002590180083643645}, {"id": 756, "seek": 359680, "start": 3602.48, "end": 3608.04, "text": " question. The question was, so the question was, if I, if I have a certain type of mutant", "tokens": [1168, 13, 440, 1168, 390, 11, 370, 264, 1168, 390, 11, 498, 286, 11, 498, 286, 362, 257, 1629, 2010, 295, 47198], "temperature": 0.0, "avg_logprob": -0.14631316396925184, "compression_ratio": 1.8061224489795917, "no_speech_prob": 0.0002590180083643645}, {"id": 757, "seek": 359680, "start": 3608.04, "end": 3614.0800000000004, "text": " that I want to make, can I do that? So I would say with the stuff that I used in Python,", "tokens": [300, 286, 528, 281, 652, 11, 393, 286, 360, 300, 30, 407, 286, 576, 584, 365, 264, 1507, 300, 286, 1143, 294, 15329, 11], "temperature": 0.0, "avg_logprob": -0.14631316396925184, "compression_ratio": 1.8061224489795917, "no_speech_prob": 0.0002590180083643645}, {"id": 758, "seek": 359680, "start": 3614.0800000000004, "end": 3618.52, "text": " the answer is you, you'd need to actually, you know, use the version you've downloaded,", "tokens": [264, 1867, 307, 291, 11, 291, 1116, 643, 281, 767, 11, 291, 458, 11, 764, 264, 3037, 291, 600, 21748, 11], "temperature": 0.0, "avg_logprob": -0.14631316396925184, "compression_ratio": 1.8061224489795917, "no_speech_prob": 0.0002590180083643645}, {"id": 759, "seek": 359680, "start": 3618.52, "end": 3621.7200000000003, "text": " edit it yourself and add that stuff. So sadly, there's not an easy customizable way. That", "tokens": [8129, 309, 1803, 293, 909, 300, 1507, 13, 407, 22023, 11, 456, 311, 406, 364, 1858, 47922, 636, 13, 663], "temperature": 0.0, "avg_logprob": -0.14631316396925184, "compression_ratio": 1.8061224489795917, "no_speech_prob": 0.0002590180083643645}, {"id": 760, "seek": 359680, "start": 3621.7200000000003, "end": 3625.32, "text": " will be an awesome enhancement, though, that I would, I would like to see, you know, that", "tokens": [486, 312, 364, 3476, 40776, 11, 1673, 11, 300, 286, 576, 11, 286, 576, 411, 281, 536, 11, 291, 458, 11, 300], "temperature": 0.0, "avg_logprob": -0.14631316396925184, "compression_ratio": 1.8061224489795917, "no_speech_prob": 0.0002590180083643645}, {"id": 761, "seek": 362532, "start": 3625.32, "end": 3628.04, "text": " would be cool. In other platforms, Paco, any other?", "tokens": [576, 312, 1627, 13, 682, 661, 9473, 11, 10702, 78, 11, 604, 661, 30], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 762, "seek": 362532, "start": 3628.04, "end": 3632.28, "text": " I do know that I think Python did have some extension points. So it really depends. I", "tokens": [286, 360, 458, 300, 286, 519, 15329, 630, 362, 512, 10320, 2793, 13, 407, 309, 534, 5946, 13, 286], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 763, "seek": 362532, "start": 3632.28, "end": 3636.76, "text": " know that the company I work for currently called Picnic, they're also working on extending", "tokens": [458, 300, 264, 2237, 286, 589, 337, 4362, 1219, 25895, 7692, 11, 436, 434, 611, 1364, 322, 24360], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 764, "seek": 362532, "start": 3636.76, "end": 3642.96, "text": " it, for example, for reactive code. So there are some extension points often. So in short,", "tokens": [309, 11, 337, 1365, 11, 337, 28897, 3089, 13, 407, 456, 366, 512, 10320, 2793, 2049, 13, 407, 294, 2099, 11], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 765, "seek": 362532, "start": 3642.96, "end": 3647.44, "text": " it depends on the framework and how easy it is.", "tokens": [309, 5946, 322, 264, 8388, 293, 577, 1858, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 766, "seek": 362532, "start": 3647.44, "end": 3650.96, "text": " Are we, we're done. Okay. We're at time. Thank you so much. This has been a really nice discussion", "tokens": [2014, 321, 11, 321, 434, 1096, 13, 1033, 13, 492, 434, 412, 565, 13, 1044, 291, 370, 709, 13, 639, 575, 668, 257, 534, 1481, 5017], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 767, "seek": 362532, "start": 3650.96, "end": 3651.96, "text": " as well. So thank you for sharing this.", "tokens": [382, 731, 13, 407, 1309, 291, 337, 5414, 341, 13], "temperature": 0.0, "avg_logprob": -0.266468839292173, "compression_ratio": 1.707070707070707, "no_speech_prob": 0.0007339445874094963}, {"id": 768, "seek": 365196, "start": 3651.96, "end": 3655.96, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50564], "temperature": 0.0, "avg_logprob": -0.5862751404444376, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.0004268219054210931}], "language": "en"}