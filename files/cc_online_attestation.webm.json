{"text": " Hello, my name is Tobin and today I want to talk to you about an interesting security consideration that has come up in the confidential containers community and that might apply to other confidential computing projects as well. I know that remote talks can be a little bit flat, but if it's any enticement, I think this is maybe the biggest security issue that our community has faced so far and possibly also the most interesting. Before we start, I want to thank my colleague Dov Muirk as well as community members Nan Krishnamurti and Mingwei Sho for helping to discover and uncover and think about this interesting problem. Before we get to the main issue, I want to revisit one design principle of confidential containers that is significant here and that's the idea of decoupled measurement. With a lot of confidential computing projects, the hardware evidence is used to measure or includes the measurement of the workloads and in some ways it's very intuitive to want to measure the workload the most significant thing with the hardware, but the drawback to this is that the hardware measurement is often platform specific and a little clunky. In confidential containers, we prefer to use standard techniques such as container signatures or encrypted containers. We do this with a two-stage process where we use the hardware measurement to measure the stack essentially, the CAD agent and its associated tools and then once those are trusted via this hardware measurement, we can use those tools to measure the workload itself. This is handy because again, it allows us to do standard stuff, but it also means that we can use a generic guest image, which is a good fit for CAD containers in particular. It will probably become clear why this generic guest image is significant here, but for now I want to talk about these so-called evidence factory attacks. I think that's more or less a made up term, but it makes sense here. The crux of this attack is that we're going to use an attestation report that we aren't really entitled to to get secrets that don't belong to us, to attack a target key broker. How are we going to do this? Well, attestation reports, once they're out in the wild, can't really be tampered with. They can't really be stolen. They can't be tampered with because they're generally signed by a private key that's only known to the hardware and they can't really be stolen because you should probably put the knots inside of your attestation report that's going to link this attestation report to a very particular connection to the KBS. If you can't steal one that's floating around in the world, how are you going to attack the KBS? How are you going to impersonate somebody who has a valid report? One way might be to launch your own virtual machine. Launch your own guest and request your own attestation report from that guest. Of course, if you do this, the launch measurement will probably be wrong because the launch measurement will show, hey, this is some random person's VM with a bunch of random stuff in it. It's not the VM that the KBS is expecting to provision the secrets to. On the other hand, if you were somehow able to get the launch measurement to be correct, well, then the VM wouldn't be malicious and you wouldn't be able to access it because the launch measurement should guarantee that there's no way in. There's no easy way into the guest. To be clear, what we're really trying to do here, the crux of this attack is figuring out if there's a way for a malicious virtual machine to manufacture a valid attestation report. When I say valid attestation report, what I mean is an attestation report that reports the correct firmware, the correct NDRD, the correct kernel, and the correct command line. If this exists, if there's a way to do this, then we have a bit of a problem. How is somebody going to break into the guest in order to request a valid attestation report? Clearly, it's not going to happen by tampering with the boot process because that would change the launch measurement. Well, that's not what this presentation is about, at least. Instead, we're looking at a later phase of execution, basically, where the guest is already running, where the guest has already booted and already has used a valid NDRDF-alternal. It's already got the correct launch measurement. Can we get into the guest once that has happened? In the community, we've looked at the trust model of confidential containers a lot. Something that stuck out from the beginning was the API between the guest and the host. In this case, this is the API of the Cata agent. One discussion from the beginning was how do we harden the API of the Cata agent so that we can't have arbitrary code executed inside of the workload or inside of the guest? But it turns out, when we were thinking about this, that we may have overlooked another pretty significant attack service, a large API, and that is the API between the workload and the guest, the API of the container, and the guest kernel. Essentially, this is a very large API. What if a workload could break out into the guest? Would that cause big problems? The answer, in short, is yes. If a malicious container can break into guest user space, it can generate a valid adaptation report and use that to request secrets from any KBS. There's two things that are really bad about this in particular. First of all, when I say any KBS, I really mean any KBS. Not even a KBS belongs to a particular client. Like I said, we have a generic guest image, meaning that the launch measurement we're looking for is the same across the entire project. Anyone who's using confidential containers is looking for the same launch measurement, essentially. So, if I can generate this adaptation report from a guest that is booted correctly from that image, I can then request secrets from anyone. That's obviously not good at all. Another thing that's pretty bad about this is that containers are executing arbitrary code by design. So we might say that there's some way to limit that a malicious container would be able to run. But in fact, there isn't because part of confidential containers, one of the features, is that we can run containers. We can run any container you want, essentially. Now, some of the good news is that this is not actively exploitable because it relies on there being a way to break out of the container into guest user space. But the flip side of this is that you might say that the security of confidential containers, at least in this case, reduces down to the security of non-confidential containers just to this API. Once you break out of that, you have the ability to steal secrets. That's really not good. So, let me walk through this attack step by step just to make it absolutely clear how it goes. The first step is that the attacker needs to craft a container that can execute code in user space. This is not trivial, but it's far from impossible, and things like this have happened in the past. Then, the attacker is going to run this container with confidential containers. They can do this locally using their own SEV machine or whatever, or they can do it in the cloud. It doesn't matter. Anywhere where confidential containers is running, they can run this. The container, once it starts up, is going to connect to a KBS and make some sort of request. As part of that, there's an authentication flow where it will get a nonce from the target KBS. It's going to keep track of that nonce, and then the container will break out and get this valid AdStation report. When it requests the AdStation report, it's going to put the nonce that it got in it, and it's also going to put its own public key here. It's basically just setting up its own secure connection. Once that secure connection is there, it's just going to use it to request secrets. Send off the AdStation report, the KBS will say, yep, the measurement checks out, okay, here's the nonce that I sent it, that's correct. Let me use this public key to create a secure channel to wrap secrets. Really relatively straightforward attack in some ways. Let's talk about solutions. While this attack is in some ways very severe, there are actually a number of different things we can do to prevent it, although it's not yet clear exactly which is the optimal solution. Really the simplest solution is to revoke access to AdStation reports, and what this means is that the guest would have some ability to revoke its own ability, its own capability to get a future AdStation report. This hinges on the idea that there's different phases of execution in confidential containers, or in a lot of projects, really. In the early phase of execution, we should still be executing really within the footprint of what is measured, really within the footprint of the kernel, the NITRD, kernel parameters, firmware, things like that. As long as we're in this area that has been measured, we can be relatively confident about what is going on. One thing that is a big red flag here is that we are allowing arbitrary code to be executed within the guest in the context of a container. Maybe before we start doing this, we should figure out some way that we could get rid of any future AdStation reports, make sure that none are generated. With SCVS and P, there's actually a pretty easy way to do this, which is that we can overwrite the keys that the guest needs to communicate with the PSP. They're called VMPCKs, and you can delete them. If you do that, you will not be talking to the PSP anymore. This has some limitations. I'm not sure of a good way to do this with TDX, but if you know, let me know. I think this is a pretty simple way to address the problem, and a pretty good solution in some ways. That said, there are things it would conflict with. There's been some discussion of something referred to as the passport model, where the workload actually would get an AdStation report at runtime, and obviously that would be disabled if we don't allow any AdStation reports to be generated at runtime. There are maybe ways to resolve that, but that's a discussion that will need to happen. Another solution is to use the host data field. I'm going to come back to this because it's a fairly complicated proposal, so I'll talk about that on the next slide, but let me go through the other two first. One of them is to use IMA to basically constantly check the state of the guest. This would maybe detect a breakout. Doing this would probably require a virtual TPM inside the guest, and this may be available at some point. It's not yet clear if we're going to utilize that for confidential containers in some ways. It might be overkill, but here it might actually be useful. The final thing I wanted to mention is VMPLs. This is virtual machine privilege levels, and it's a feature of SEVS and P. This probably isn't feasible for use in confidential containers, exactly, but I bring it up because this is actually the way that the VTPMs that are being developed for SEVS and P get sidestep this problem. A VMPL is a way to create different privilege levels inside of a guest, and one thing a VMPL can limit access to is generation of a particular AdStation report. If we had some sort of hardware feature like that that could isolate the ability to generate these extremely sensitive AdStation reports, that could help, and the VTPMs, they have exactly this in the form of the VMPL. So let's talk about the host data-based solution. First of all, what is the host data? The host data is a field in the AdStation report that is set by the host prior to the launch of the guest, and then included in every AdStation report requested from inside the guest. This is S&P terminology, but I believe MRINFO is a similar thing for TDX. Even if the guest is malicious, there's no way for it to get a report without the host data in it. We could use the host data for a number of different things, but I'm going to focus on using it to store the public key of the KBS. This will essentially bind the hardware evidence to one KBS. Interestingly, this does not actually guarantee that we are connecting to the correct KBS. It doesn't guarantee the identity of the KBS, in part because the host sets the host data and the host is untrusted. Instead, what it guarantees us is that the guest will only be able to connect to one KBS. When the AdStation agent connects to a KBS, it will check that the public key of the KBS matches what is in the host data. If it doesn't, the connection will fail. Similarly, the KBS will also enforce that the correct public key is in the host data that it has when it receives a request. Fundamentally, the only evidence available within this guest will be evidence that has this public key of a particular KBS in it. Now, on its own, this does not really prevent the attack because we could direct all requests coming from the guest to the target KBS. But this is where signature validation comes in. When we turn on signature validation, the AdStation agent will make a request to the KBS for the signature policy before any containers can be run. This is assuming we're using an online KBS. Since we can only connect to one KBS, as soon as we make this request, as soon as we request signatures and as soon as that request is successful, we've collapsed the attack space dramatically. Now, the only KBS that we can attack is the KBS that provides the signature verification policy. If we use a malicious KBS to provide a signature verification policy, for instance, one that allows us to run the malicious container, then we still have to connect to the malicious KBS for the entire lifetime of the guest. So the only KBS that we can attack would be that malicious KBS. That's not much of an attack. On the other hand, we could try to get the target KBS, we could direct everything to the target KBS instead, and try to get the target KBS to provide the signature verification policy and then attack it later with secret requests. But this isn't going to work because the target KBS shouldn't give us a signature verification policy that would allow the malicious container to run. So with these two properties, first requiring that all connections go to the same KBS using the host data, putting the public host data in it, and then requiring that signatures are there so that we know we've connected at least to one KBS and we know it's the KBS that's actually running the container, we can really close off this attack fairly effectively. So there's a few things we should still note here. One of them is that we've made an assumption, which is that the target KBS is going to require signatures. And this might be setting a precedent for the project in some ways, saying that if you want to sidestep some relatively serious security issues, you need to use image signatures. Is this a reasonable thing to take on board or is it too restrictive? Is it leaving aside certain use cases that are really valuable? I think that's something we still need to think about. Another thing is that I mentioned that this is not the only possible use of the host data. So another thing we could do with the host data is that we could put workload-specific information in the host data field. For instance, we could put the measurement of the container image or something a little bit more sophisticated that achieves the same thing. In my mind, I think that this is redundant to the image signatures, which have so far been really the main way that we've done measurement of the workload in this project. And I think one of the important takeaways from this presentation is that there's ways to resolve this attack without compromising on our ideas about decoupling measurement. And in fact, we can have a generic guest image. We can still use signatures and all this stuff as long as we take a few precautions. But that said, I think it would solve the problem if we put workload-specific information into the host data. Okay. I want to talk a little bit about SEVES. So far, I've been talking about S&P, which isn't even implemented yet, so this is another reason why in some ways it's not actively exploitable. With TDX, I think the current TDX implementation probably is vulnerable to this, although I'm not 100% sure about that. What we've got currently on the SEVES side is SEVES. And here, the story is sort of better and sort of worse. I'm not going to go into all the details here, but the important thing is that the connection to the KBS is actually made from the host, right? Because with SEV and SEVES, we use preadastation, which is driven by the host. So again, connection is made by the host, not inside the guest, which means it's very hard to regulate. This thing I was talking about earlier where we check that the KBS is going to match a certain field or anything like that, it's not going to work because it's all happening in the untrusted realm. Unfortunately, we also don't really have the ability to revoke a connection inside the guest. The first solution that I mentioned, where we say no more attestation reports, we can't really do that with SEV in the same way using the online KBS that we currently have. So essentially, the two main solutions that have been proposed of the host data, that won't really work for SEV and the revoking the attestation reports, that isn't really going to work for SEV either. The good news is that the VM can only connect to one KBS at a time, just the way that the online KBS is implemented, you inject a connection to a very particular KBS. Now you could target someone else's KBS here potentially, so the attack still exists, but it can only be carried out targeting one KBS per guest, if that's any consolation. So in some ways, the attack is a little bit less severe, but it's probably harder to mitigate, to be honest. So I am still thinking about the best way to address this with SEV and SEVES. So what can we take away from this? First I want to mention some general things. For one thing, we realize here that the capability of generating a valid attestation report or valid hardware evidence is precious and needs to be protected. When I say valid here, I don't mean generating an attestation report that has a signature that checks out. I mean generating an attestation report that will convince someone's KBS to give you secrets. Being able to do that, like I said, extremely precious. So let's think, how are we protecting this? For us, a big part of this is that we realize that our protection against this wasn't a hardware protection. Really, instead it was the software protection of the API between the workload container and the guest. It's also important to think what happens if these protections should fail, right? Especially in our case where, again, it's not hardware protection, it's software protection. What happens if somebody does breach that and gain the ability to generate so-called valid evidence? Is it the case that they can attack anyone, right? There's some dangers of having a very generic measurement. We need to be careful in having a generic guest measurement and make sure that that doesn't mean that it's easy to impersonate some other person using confidential containers and convince some other person's KBS to give you their secrets. There's a more complex underlying question here about the identity of a guest. Confidential guests for a long time haven't really had much of an identity. There haven't been many ways to give an identity to a guest. In some ways, our project leans into that by having a generic guest measurement. But there's dangers in having no identity whatsoever. Now, still, I maintain that the decoupling of the workload measurement and the guest measurement is a good idea. And that having a fixed identity or an identity that corresponds exactly to the workload may or may not be necessary. But we do have to take precautions to make sure, for instance, that evidence isn't interchangeable between KBSs. Interesting. A sort of meta note about all this is that you need to be careful about relying too much on one trust model. I showed the diagram earlier. It's a diagram that tons of people had spent a lot of time staring at and thinking about. But we've mainly been thinking about the trust model in terms of protecting the workload container. It hadn't occurred to us that you also need to think about the protecting the ability to generate evidence from everyone, protect it from everyone, including protecting it from the workload. Finally, a few things that are a little more specific to the project. I do want to classify, again, that this is, in some ways, pretty serious, but also not actively exploitable, pretty fixable. So we will work to get this fixed. We're working on the S&P implementation right now, and it will contain some of these mitigations. It has not yet been decided exactly which, if you have any ideas for this, please let me know. This is still a relatively young project. And we get confidence in the security of our project by going through things like this. And at an early stage where it's relatively harmless, it's good to discover these things. So if you have any ideas or any questions, please let me know. And let's keep the discussion moving forward on this topic.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.22, "text": " Hello, my name is Tobin and today I want to talk to you about an interesting security", "tokens": [50364, 2425, 11, 452, 1315, 307, 26350, 259, 293, 965, 286, 528, 281, 751, 281, 291, 466, 364, 1880, 3825, 50875], "temperature": 0.0, "avg_logprob": -0.12851513987002167, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.10634926706552505}, {"id": 1, "seek": 0, "start": 10.22, "end": 14.94, "text": " consideration that has come up in the confidential containers community and that might apply", "tokens": [50875, 12381, 300, 575, 808, 493, 294, 264, 27054, 17089, 1768, 293, 300, 1062, 3079, 51111], "temperature": 0.0, "avg_logprob": -0.12851513987002167, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.10634926706552505}, {"id": 2, "seek": 0, "start": 14.94, "end": 19.0, "text": " to other confidential computing projects as well.", "tokens": [51111, 281, 661, 27054, 15866, 4455, 382, 731, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12851513987002167, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.10634926706552505}, {"id": 3, "seek": 0, "start": 19.0, "end": 22.7, "text": " I know that remote talks can be a little bit flat, but if it's any enticement, I think", "tokens": [51314, 286, 458, 300, 8607, 6686, 393, 312, 257, 707, 857, 4962, 11, 457, 498, 309, 311, 604, 948, 299, 1712, 11, 286, 519, 51499], "temperature": 0.0, "avg_logprob": -0.12851513987002167, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.10634926706552505}, {"id": 4, "seek": 0, "start": 22.7, "end": 27.46, "text": " this is maybe the biggest security issue that our community has faced so far and possibly", "tokens": [51499, 341, 307, 1310, 264, 3880, 3825, 2734, 300, 527, 1768, 575, 11446, 370, 1400, 293, 6264, 51737], "temperature": 0.0, "avg_logprob": -0.12851513987002167, "compression_ratio": 1.6735537190082646, "no_speech_prob": 0.10634926706552505}, {"id": 5, "seek": 2746, "start": 27.46, "end": 29.740000000000002, "text": " also the most interesting.", "tokens": [50364, 611, 264, 881, 1880, 13, 50478], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 6, "seek": 2746, "start": 29.740000000000002, "end": 34.1, "text": " Before we start, I want to thank my colleague Dov Muirk as well as community members Nan", "tokens": [50478, 4546, 321, 722, 11, 286, 528, 281, 1309, 452, 13532, 1144, 85, 15601, 347, 74, 382, 731, 382, 1768, 2679, 18852, 50696], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 7, "seek": 2746, "start": 34.1, "end": 39.74, "text": " Krishnamurti and Mingwei Sho for helping to discover and uncover and think about this", "tokens": [50696, 6332, 742, 5378, 6224, 72, 293, 19352, 17849, 31404, 337, 4315, 281, 4411, 293, 21694, 293, 519, 466, 341, 50978], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 8, "seek": 2746, "start": 39.74, "end": 42.14, "text": " interesting problem.", "tokens": [50978, 1880, 1154, 13, 51098], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 9, "seek": 2746, "start": 42.14, "end": 45.24, "text": " Before we get to the main issue, I want to revisit one design principle of confidential", "tokens": [51098, 4546, 321, 483, 281, 264, 2135, 2734, 11, 286, 528, 281, 32676, 472, 1715, 8665, 295, 27054, 51253], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 10, "seek": 2746, "start": 45.24, "end": 49.06, "text": " containers that is significant here and that's the idea of decoupled measurement.", "tokens": [51253, 17089, 300, 307, 4776, 510, 293, 300, 311, 264, 1558, 295, 979, 263, 15551, 13160, 13, 51444], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 11, "seek": 2746, "start": 49.06, "end": 54.86, "text": " With a lot of confidential computing projects, the hardware evidence is used to measure", "tokens": [51444, 2022, 257, 688, 295, 27054, 15866, 4455, 11, 264, 8837, 4467, 307, 1143, 281, 3481, 51734], "temperature": 0.0, "avg_logprob": -0.19501357419150217, "compression_ratio": 1.7204301075268817, "no_speech_prob": 0.0533631332218647}, {"id": 12, "seek": 5486, "start": 54.86, "end": 59.2, "text": " or includes the measurement of the workloads and in some ways it's very intuitive to want", "tokens": [50364, 420, 5974, 264, 13160, 295, 264, 32452, 293, 294, 512, 2098, 309, 311, 588, 21769, 281, 528, 50581], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 13, "seek": 5486, "start": 59.2, "end": 63.18, "text": " to measure the workload the most significant thing with the hardware, but the drawback", "tokens": [50581, 281, 3481, 264, 20139, 264, 881, 4776, 551, 365, 264, 8837, 11, 457, 264, 2642, 3207, 50780], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 14, "seek": 5486, "start": 63.18, "end": 69.06, "text": " to this is that the hardware measurement is often platform specific and a little clunky.", "tokens": [50780, 281, 341, 307, 300, 264, 8837, 13160, 307, 2049, 3663, 2685, 293, 257, 707, 596, 25837, 13, 51074], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 15, "seek": 5486, "start": 69.06, "end": 74.46000000000001, "text": " In confidential containers, we prefer to use standard techniques such as container signatures", "tokens": [51074, 682, 27054, 17089, 11, 321, 4382, 281, 764, 3832, 7512, 1270, 382, 10129, 32322, 51344], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 16, "seek": 5486, "start": 74.46000000000001, "end": 76.53999999999999, "text": " or encrypted containers.", "tokens": [51344, 420, 36663, 17089, 13, 51448], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 17, "seek": 5486, "start": 76.53999999999999, "end": 79.78, "text": " We do this with a two-stage process where we use the hardware measurement to measure", "tokens": [51448, 492, 360, 341, 365, 257, 732, 12, 17882, 1399, 689, 321, 764, 264, 8837, 13160, 281, 3481, 51610], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 18, "seek": 5486, "start": 79.78, "end": 84.02, "text": " the stack essentially, the CAD agent and its associated tools and then once those are", "tokens": [51610, 264, 8630, 4476, 11, 264, 41143, 9461, 293, 1080, 6615, 3873, 293, 550, 1564, 729, 366, 51822], "temperature": 0.0, "avg_logprob": -0.13185876047509348, "compression_ratio": 1.8624161073825503, "no_speech_prob": 0.014059110544621944}, {"id": 19, "seek": 8402, "start": 84.06, "end": 88.82, "text": " trusted via this hardware measurement, we can use those tools to measure the workload", "tokens": [50366, 16034, 5766, 341, 8837, 13160, 11, 321, 393, 764, 729, 3873, 281, 3481, 264, 20139, 50604], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 20, "seek": 8402, "start": 88.82, "end": 89.82, "text": " itself.", "tokens": [50604, 2564, 13, 50654], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 21, "seek": 8402, "start": 89.82, "end": 93.82, "text": " This is handy because again, it allows us to do standard stuff, but it also means that", "tokens": [50654, 639, 307, 13239, 570, 797, 11, 309, 4045, 505, 281, 360, 3832, 1507, 11, 457, 309, 611, 1355, 300, 50854], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 22, "seek": 8402, "start": 93.82, "end": 99.69999999999999, "text": " we can use a generic guest image, which is a good fit for CAD containers in particular.", "tokens": [50854, 321, 393, 764, 257, 19577, 8341, 3256, 11, 597, 307, 257, 665, 3318, 337, 41143, 17089, 294, 1729, 13, 51148], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 23, "seek": 8402, "start": 99.69999999999999, "end": 103.89999999999999, "text": " It will probably become clear why this generic guest image is significant here, but for now", "tokens": [51148, 467, 486, 1391, 1813, 1850, 983, 341, 19577, 8341, 3256, 307, 4776, 510, 11, 457, 337, 586, 51358], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 24, "seek": 8402, "start": 103.89999999999999, "end": 106.53999999999999, "text": " I want to talk about these so-called evidence factory attacks.", "tokens": [51358, 286, 528, 281, 751, 466, 613, 370, 12, 11880, 4467, 9265, 8122, 13, 51490], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 25, "seek": 8402, "start": 106.53999999999999, "end": 111.78, "text": " I think that's more or less a made up term, but it makes sense here.", "tokens": [51490, 286, 519, 300, 311, 544, 420, 1570, 257, 1027, 493, 1433, 11, 457, 309, 1669, 2020, 510, 13, 51752], "temperature": 0.0, "avg_logprob": -0.12486166913970177, "compression_ratio": 1.6734693877551021, "no_speech_prob": 0.0053839911706745625}, {"id": 26, "seek": 11178, "start": 111.78, "end": 115.74, "text": " The crux of this attack is that we're going to use an attestation report that we aren't", "tokens": [50364, 440, 5140, 87, 295, 341, 2690, 307, 300, 321, 434, 516, 281, 764, 364, 951, 377, 399, 2275, 300, 321, 3212, 380, 50562], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 27, "seek": 11178, "start": 115.74, "end": 121.82000000000001, "text": " really entitled to to get secrets that don't belong to us, to attack a target key broker.", "tokens": [50562, 534, 17838, 281, 281, 483, 14093, 300, 500, 380, 5784, 281, 505, 11, 281, 2690, 257, 3779, 2141, 26502, 13, 50866], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 28, "seek": 11178, "start": 121.82000000000001, "end": 122.82000000000001, "text": " How are we going to do this?", "tokens": [50866, 1012, 366, 321, 516, 281, 360, 341, 30, 50916], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 29, "seek": 11178, "start": 122.82000000000001, "end": 126.62, "text": " Well, attestation reports, once they're out in the wild, can't really be tampered with.", "tokens": [50916, 1042, 11, 951, 377, 399, 7122, 11, 1564, 436, 434, 484, 294, 264, 4868, 11, 393, 380, 534, 312, 7677, 40004, 365, 13, 51106], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 30, "seek": 11178, "start": 126.62, "end": 129.3, "text": " They can't really be stolen.", "tokens": [51106, 814, 393, 380, 534, 312, 15900, 13, 51240], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 31, "seek": 11178, "start": 129.3, "end": 134.38, "text": " They can't be tampered with because they're generally signed by a private key that's only", "tokens": [51240, 814, 393, 380, 312, 7677, 40004, 365, 570, 436, 434, 5101, 8175, 538, 257, 4551, 2141, 300, 311, 787, 51494], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 32, "seek": 11178, "start": 134.38, "end": 138.02, "text": " known to the hardware and they can't really be stolen because you should probably put", "tokens": [51494, 2570, 281, 264, 8837, 293, 436, 393, 380, 534, 312, 15900, 570, 291, 820, 1391, 829, 51676], "temperature": 0.0, "avg_logprob": -0.13032307515617544, "compression_ratio": 1.9266409266409266, "no_speech_prob": 0.08505302667617798}, {"id": 33, "seek": 13802, "start": 138.02, "end": 141.86, "text": " the knots inside of your attestation report that's going to link this attestation report", "tokens": [50364, 264, 27426, 1854, 295, 428, 951, 377, 399, 2275, 300, 311, 516, 281, 2113, 341, 951, 377, 399, 2275, 50556], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 34, "seek": 13802, "start": 141.86, "end": 144.94, "text": " to a very particular connection to the KBS.", "tokens": [50556, 281, 257, 588, 1729, 4984, 281, 264, 591, 8176, 13, 50710], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 35, "seek": 13802, "start": 144.94, "end": 149.94, "text": " If you can't steal one that's floating around in the world, how are you going to attack", "tokens": [50710, 759, 291, 393, 380, 11009, 472, 300, 311, 12607, 926, 294, 264, 1002, 11, 577, 366, 291, 516, 281, 2690, 50960], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 36, "seek": 13802, "start": 149.94, "end": 150.94, "text": " the KBS?", "tokens": [50960, 264, 591, 8176, 30, 51010], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 37, "seek": 13802, "start": 150.94, "end": 154.18, "text": " How are you going to impersonate somebody who has a valid report?", "tokens": [51010, 1012, 366, 291, 516, 281, 38147, 473, 2618, 567, 575, 257, 7363, 2275, 30, 51172], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 38, "seek": 13802, "start": 154.18, "end": 157.86, "text": " One way might be to launch your own virtual machine.", "tokens": [51172, 1485, 636, 1062, 312, 281, 4025, 428, 1065, 6374, 3479, 13, 51356], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 39, "seek": 13802, "start": 157.86, "end": 162.46, "text": " Launch your own guest and request your own attestation report from that guest.", "tokens": [51356, 28119, 428, 1065, 8341, 293, 5308, 428, 1065, 951, 377, 399, 2275, 490, 300, 8341, 13, 51586], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 40, "seek": 13802, "start": 162.46, "end": 166.46, "text": " Of course, if you do this, the launch measurement will probably be wrong because the launch", "tokens": [51586, 2720, 1164, 11, 498, 291, 360, 341, 11, 264, 4025, 13160, 486, 1391, 312, 2085, 570, 264, 4025, 51786], "temperature": 0.0, "avg_logprob": -0.11436081666212816, "compression_ratio": 1.8404255319148937, "no_speech_prob": 0.3627089560031891}, {"id": 41, "seek": 16646, "start": 166.46, "end": 170.74, "text": " measurement will show, hey, this is some random person's VM with a bunch of random", "tokens": [50364, 13160, 486, 855, 11, 4177, 11, 341, 307, 512, 4974, 954, 311, 18038, 365, 257, 3840, 295, 4974, 50578], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 42, "seek": 16646, "start": 170.74, "end": 171.74, "text": " stuff in it.", "tokens": [50578, 1507, 294, 309, 13, 50628], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 43, "seek": 16646, "start": 171.74, "end": 175.86, "text": " It's not the VM that the KBS is expecting to provision the secrets to.", "tokens": [50628, 467, 311, 406, 264, 18038, 300, 264, 591, 8176, 307, 9650, 281, 17225, 264, 14093, 281, 13, 50834], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 44, "seek": 16646, "start": 175.86, "end": 179.94, "text": " On the other hand, if you were somehow able to get the launch measurement to be correct,", "tokens": [50834, 1282, 264, 661, 1011, 11, 498, 291, 645, 6063, 1075, 281, 483, 264, 4025, 13160, 281, 312, 3006, 11, 51038], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 45, "seek": 16646, "start": 179.94, "end": 183.14000000000001, "text": " well, then the VM wouldn't be malicious and you wouldn't be able to access it because", "tokens": [51038, 731, 11, 550, 264, 18038, 2759, 380, 312, 33496, 293, 291, 2759, 380, 312, 1075, 281, 2105, 309, 570, 51198], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 46, "seek": 16646, "start": 183.14000000000001, "end": 186.22, "text": " the launch measurement should guarantee that there's no way in.", "tokens": [51198, 264, 4025, 13160, 820, 10815, 300, 456, 311, 572, 636, 294, 13, 51352], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 47, "seek": 16646, "start": 186.22, "end": 188.82, "text": " There's no easy way into the guest.", "tokens": [51352, 821, 311, 572, 1858, 636, 666, 264, 8341, 13, 51482], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 48, "seek": 16646, "start": 188.82, "end": 192.58, "text": " To be clear, what we're really trying to do here, the crux of this attack is figuring", "tokens": [51482, 1407, 312, 1850, 11, 437, 321, 434, 534, 1382, 281, 360, 510, 11, 264, 5140, 87, 295, 341, 2690, 307, 15213, 51670], "temperature": 0.0, "avg_logprob": -0.12077846666322137, "compression_ratio": 1.7804054054054055, "no_speech_prob": 0.03113623522222042}, {"id": 49, "seek": 19258, "start": 192.58, "end": 197.46, "text": " out if there's a way for a malicious virtual machine to manufacture a valid attestation", "tokens": [50364, 484, 498, 456, 311, 257, 636, 337, 257, 33496, 6374, 3479, 281, 27400, 257, 7363, 951, 377, 399, 50608], "temperature": 0.0, "avg_logprob": -0.10508712406816154, "compression_ratio": 1.8893617021276596, "no_speech_prob": 0.08752638101577759}, {"id": 50, "seek": 19258, "start": 197.46, "end": 198.46, "text": " report.", "tokens": [50608, 2275, 13, 50658], "temperature": 0.0, "avg_logprob": -0.10508712406816154, "compression_ratio": 1.8893617021276596, "no_speech_prob": 0.08752638101577759}, {"id": 51, "seek": 19258, "start": 198.46, "end": 202.58, "text": " When I say valid attestation report, what I mean is an attestation report that reports", "tokens": [50658, 1133, 286, 584, 7363, 951, 377, 399, 2275, 11, 437, 286, 914, 307, 364, 951, 377, 399, 2275, 300, 7122, 50864], "temperature": 0.0, "avg_logprob": -0.10508712406816154, "compression_ratio": 1.8893617021276596, "no_speech_prob": 0.08752638101577759}, {"id": 52, "seek": 19258, "start": 202.58, "end": 209.5, "text": " the correct firmware, the correct NDRD, the correct kernel, and the correct command line.", "tokens": [50864, 264, 3006, 30289, 11, 264, 3006, 426, 9301, 35, 11, 264, 3006, 28256, 11, 293, 264, 3006, 5622, 1622, 13, 51210], "temperature": 0.0, "avg_logprob": -0.10508712406816154, "compression_ratio": 1.8893617021276596, "no_speech_prob": 0.08752638101577759}, {"id": 53, "seek": 19258, "start": 209.5, "end": 214.9, "text": " If this exists, if there's a way to do this, then we have a bit of a problem.", "tokens": [51210, 759, 341, 8198, 11, 498, 456, 311, 257, 636, 281, 360, 341, 11, 550, 321, 362, 257, 857, 295, 257, 1154, 13, 51480], "temperature": 0.0, "avg_logprob": -0.10508712406816154, "compression_ratio": 1.8893617021276596, "no_speech_prob": 0.08752638101577759}, {"id": 54, "seek": 19258, "start": 214.9, "end": 219.9, "text": " How is somebody going to break into the guest in order to request a valid attestation report?", "tokens": [51480, 1012, 307, 2618, 516, 281, 1821, 666, 264, 8341, 294, 1668, 281, 5308, 257, 7363, 951, 377, 399, 2275, 30, 51730], "temperature": 0.0, "avg_logprob": -0.10508712406816154, "compression_ratio": 1.8893617021276596, "no_speech_prob": 0.08752638101577759}, {"id": 55, "seek": 21990, "start": 220.06, "end": 224.82, "text": " Clearly, it's not going to happen by tampering with the boot process because that would change", "tokens": [50372, 24120, 11, 309, 311, 406, 516, 281, 1051, 538, 7677, 20055, 365, 264, 11450, 1399, 570, 300, 576, 1319, 50610], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 56, "seek": 21990, "start": 224.82, "end": 225.82, "text": " the launch measurement.", "tokens": [50610, 264, 4025, 13160, 13, 50660], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 57, "seek": 21990, "start": 225.82, "end": 229.78, "text": " Well, that's not what this presentation is about, at least.", "tokens": [50660, 1042, 11, 300, 311, 406, 437, 341, 5860, 307, 466, 11, 412, 1935, 13, 50858], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 58, "seek": 21990, "start": 229.78, "end": 234.86, "text": " Instead, we're looking at a later phase of execution, basically, where the guest is already", "tokens": [50858, 7156, 11, 321, 434, 1237, 412, 257, 1780, 5574, 295, 15058, 11, 1936, 11, 689, 264, 8341, 307, 1217, 51112], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 59, "seek": 21990, "start": 234.86, "end": 240.62, "text": " running, where the guest has already booted and already has used a valid NDRDF-alternal.", "tokens": [51112, 2614, 11, 689, 264, 8341, 575, 1217, 11450, 292, 293, 1217, 575, 1143, 257, 7363, 426, 9301, 35, 37, 12, 304, 2231, 304, 13, 51400], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 60, "seek": 21990, "start": 240.62, "end": 242.58, "text": " It's already got the correct launch measurement.", "tokens": [51400, 467, 311, 1217, 658, 264, 3006, 4025, 13160, 13, 51498], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 61, "seek": 21990, "start": 242.58, "end": 244.66, "text": " Can we get into the guest once that has happened?", "tokens": [51498, 1664, 321, 483, 666, 264, 8341, 1564, 300, 575, 2011, 30, 51602], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 62, "seek": 21990, "start": 244.66, "end": 248.26, "text": " In the community, we've looked at the trust model of confidential containers a lot.", "tokens": [51602, 682, 264, 1768, 11, 321, 600, 2956, 412, 264, 3361, 2316, 295, 27054, 17089, 257, 688, 13, 51782], "temperature": 0.0, "avg_logprob": -0.2339920750370732, "compression_ratio": 1.765472312703583, "no_speech_prob": 0.0518217608332634}, {"id": 63, "seek": 24826, "start": 248.26, "end": 255.38, "text": " Something that stuck out from the beginning was the API between the guest and the host.", "tokens": [50364, 6595, 300, 5541, 484, 490, 264, 2863, 390, 264, 9362, 1296, 264, 8341, 293, 264, 3975, 13, 50720], "temperature": 0.0, "avg_logprob": -0.11675955509317332, "compression_ratio": 1.8803088803088803, "no_speech_prob": 0.007120299153029919}, {"id": 64, "seek": 24826, "start": 255.38, "end": 257.5, "text": " In this case, this is the API of the Cata agent.", "tokens": [50720, 682, 341, 1389, 11, 341, 307, 264, 9362, 295, 264, 383, 3274, 9461, 13, 50826], "temperature": 0.0, "avg_logprob": -0.11675955509317332, "compression_ratio": 1.8803088803088803, "no_speech_prob": 0.007120299153029919}, {"id": 65, "seek": 24826, "start": 257.5, "end": 261.86, "text": " One discussion from the beginning was how do we harden the API of the Cata agent so that", "tokens": [50826, 1485, 5017, 490, 264, 2863, 390, 577, 360, 321, 50203, 264, 9362, 295, 264, 383, 3274, 9461, 370, 300, 51044], "temperature": 0.0, "avg_logprob": -0.11675955509317332, "compression_ratio": 1.8803088803088803, "no_speech_prob": 0.007120299153029919}, {"id": 66, "seek": 24826, "start": 261.86, "end": 266.9, "text": " we can't have arbitrary code executed inside of the workload or inside of the guest?", "tokens": [51044, 321, 393, 380, 362, 23211, 3089, 17577, 1854, 295, 264, 20139, 420, 1854, 295, 264, 8341, 30, 51296], "temperature": 0.0, "avg_logprob": -0.11675955509317332, "compression_ratio": 1.8803088803088803, "no_speech_prob": 0.007120299153029919}, {"id": 67, "seek": 24826, "start": 266.9, "end": 269.78, "text": " But it turns out, when we were thinking about this, that we may have overlooked another", "tokens": [51296, 583, 309, 4523, 484, 11, 562, 321, 645, 1953, 466, 341, 11, 300, 321, 815, 362, 32269, 1071, 51440], "temperature": 0.0, "avg_logprob": -0.11675955509317332, "compression_ratio": 1.8803088803088803, "no_speech_prob": 0.007120299153029919}, {"id": 68, "seek": 24826, "start": 269.78, "end": 277.34, "text": " pretty significant attack service, a large API, and that is the API between the workload", "tokens": [51440, 1238, 4776, 2690, 2643, 11, 257, 2416, 9362, 11, 293, 300, 307, 264, 9362, 1296, 264, 20139, 51818], "temperature": 0.0, "avg_logprob": -0.11675955509317332, "compression_ratio": 1.8803088803088803, "no_speech_prob": 0.007120299153029919}, {"id": 69, "seek": 27734, "start": 277.34, "end": 282.06, "text": " and the guest, the API of the container, and the guest kernel.", "tokens": [50364, 293, 264, 8341, 11, 264, 9362, 295, 264, 10129, 11, 293, 264, 8341, 28256, 13, 50600], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 70, "seek": 27734, "start": 282.06, "end": 284.73999999999995, "text": " Essentially, this is a very large API.", "tokens": [50600, 23596, 11, 341, 307, 257, 588, 2416, 9362, 13, 50734], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 71, "seek": 27734, "start": 284.73999999999995, "end": 288.23999999999995, "text": " What if a workload could break out into the guest?", "tokens": [50734, 708, 498, 257, 20139, 727, 1821, 484, 666, 264, 8341, 30, 50909], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 72, "seek": 27734, "start": 288.23999999999995, "end": 291.02, "text": " Would that cause big problems?", "tokens": [50909, 6068, 300, 3082, 955, 2740, 30, 51048], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 73, "seek": 27734, "start": 291.02, "end": 292.94, "text": " The answer, in short, is yes.", "tokens": [51048, 440, 1867, 11, 294, 2099, 11, 307, 2086, 13, 51144], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 74, "seek": 27734, "start": 292.94, "end": 298.46, "text": " If a malicious container can break into guest user space, it can generate a valid adaptation", "tokens": [51144, 759, 257, 33496, 10129, 393, 1821, 666, 8341, 4195, 1901, 11, 309, 393, 8460, 257, 7363, 21549, 51420], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 75, "seek": 27734, "start": 298.46, "end": 302.14, "text": " report and use that to request secrets from any KBS.", "tokens": [51420, 2275, 293, 764, 300, 281, 5308, 14093, 490, 604, 591, 8176, 13, 51604], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 76, "seek": 27734, "start": 302.14, "end": 305.41999999999996, "text": " There's two things that are really bad about this in particular.", "tokens": [51604, 821, 311, 732, 721, 300, 366, 534, 1578, 466, 341, 294, 1729, 13, 51768], "temperature": 0.0, "avg_logprob": -0.146612548828125, "compression_ratio": 1.6434108527131783, "no_speech_prob": 0.04739542677998543}, {"id": 77, "seek": 30542, "start": 305.5, "end": 309.1, "text": " First of all, when I say any KBS, I really mean any KBS.", "tokens": [50368, 2386, 295, 439, 11, 562, 286, 584, 604, 591, 8176, 11, 286, 534, 914, 604, 591, 8176, 13, 50548], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 78, "seek": 30542, "start": 309.1, "end": 312.02000000000004, "text": " Not even a KBS belongs to a particular client.", "tokens": [50548, 1726, 754, 257, 591, 8176, 12953, 281, 257, 1729, 6423, 13, 50694], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 79, "seek": 30542, "start": 312.02000000000004, "end": 315.26, "text": " Like I said, we have a generic guest image, meaning that the launch measurement we're", "tokens": [50694, 1743, 286, 848, 11, 321, 362, 257, 19577, 8341, 3256, 11, 3620, 300, 264, 4025, 13160, 321, 434, 50856], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 80, "seek": 30542, "start": 315.26, "end": 318.58000000000004, "text": " looking for is the same across the entire project.", "tokens": [50856, 1237, 337, 307, 264, 912, 2108, 264, 2302, 1716, 13, 51022], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 81, "seek": 30542, "start": 318.58000000000004, "end": 322.18, "text": " Anyone who's using confidential containers is looking for the same launch measurement,", "tokens": [51022, 14643, 567, 311, 1228, 27054, 17089, 307, 1237, 337, 264, 912, 4025, 13160, 11, 51202], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 82, "seek": 30542, "start": 322.18, "end": 323.18, "text": " essentially.", "tokens": [51202, 4476, 13, 51252], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 83, "seek": 30542, "start": 323.18, "end": 327.62, "text": " So, if I can generate this adaptation report from a guest that is booted correctly from", "tokens": [51252, 407, 11, 498, 286, 393, 8460, 341, 21549, 2275, 490, 257, 8341, 300, 307, 11450, 292, 8944, 490, 51474], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 84, "seek": 30542, "start": 327.62, "end": 331.18, "text": " that image, I can then request secrets from anyone.", "tokens": [51474, 300, 3256, 11, 286, 393, 550, 5308, 14093, 490, 2878, 13, 51652], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 85, "seek": 30542, "start": 331.18, "end": 333.78000000000003, "text": " That's obviously not good at all.", "tokens": [51652, 663, 311, 2745, 406, 665, 412, 439, 13, 51782], "temperature": 0.0, "avg_logprob": -0.13776949368990385, "compression_ratio": 1.7133333333333334, "no_speech_prob": 0.018541231751441956}, {"id": 86, "seek": 33378, "start": 333.78, "end": 337.94, "text": " Another thing that's pretty bad about this is that containers are executing arbitrary", "tokens": [50364, 3996, 551, 300, 311, 1238, 1578, 466, 341, 307, 300, 17089, 366, 32368, 23211, 50572], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 87, "seek": 33378, "start": 337.94, "end": 339.34, "text": " code by design.", "tokens": [50572, 3089, 538, 1715, 13, 50642], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 88, "seek": 33378, "start": 339.34, "end": 343.73999999999995, "text": " So we might say that there's some way to limit that a malicious container would be able to", "tokens": [50642, 407, 321, 1062, 584, 300, 456, 311, 512, 636, 281, 4948, 300, 257, 33496, 10129, 576, 312, 1075, 281, 50862], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 89, "seek": 33378, "start": 343.73999999999995, "end": 344.73999999999995, "text": " run.", "tokens": [50862, 1190, 13, 50912], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 90, "seek": 33378, "start": 344.73999999999995, "end": 347.5, "text": " But in fact, there isn't because part of confidential containers, one of the features, is that we", "tokens": [50912, 583, 294, 1186, 11, 456, 1943, 380, 570, 644, 295, 27054, 17089, 11, 472, 295, 264, 4122, 11, 307, 300, 321, 51050], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 91, "seek": 33378, "start": 347.5, "end": 348.7, "text": " can run containers.", "tokens": [51050, 393, 1190, 17089, 13, 51110], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 92, "seek": 33378, "start": 348.7, "end": 351.5, "text": " We can run any container you want, essentially.", "tokens": [51110, 492, 393, 1190, 604, 10129, 291, 528, 11, 4476, 13, 51250], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 93, "seek": 33378, "start": 351.5, "end": 357.21999999999997, "text": " Now, some of the good news is that this is not actively exploitable because it relies", "tokens": [51250, 823, 11, 512, 295, 264, 665, 2583, 307, 300, 341, 307, 406, 13022, 12382, 16772, 570, 309, 30910, 51536], "temperature": 0.0, "avg_logprob": -0.16199033910577948, "compression_ratio": 1.7607843137254902, "no_speech_prob": 0.010011076927185059}, {"id": 94, "seek": 35722, "start": 357.22, "end": 364.14000000000004, "text": " on there being a way to break out of the container into guest user space.", "tokens": [50364, 322, 456, 885, 257, 636, 281, 1821, 484, 295, 264, 10129, 666, 8341, 4195, 1901, 13, 50710], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 95, "seek": 35722, "start": 364.14000000000004, "end": 368.74, "text": " But the flip side of this is that you might say that the security of confidential containers,", "tokens": [50710, 583, 264, 7929, 1252, 295, 341, 307, 300, 291, 1062, 584, 300, 264, 3825, 295, 27054, 17089, 11, 50940], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 96, "seek": 35722, "start": 368.74, "end": 373.62, "text": " at least in this case, reduces down to the security of non-confidential containers just", "tokens": [50940, 412, 1935, 294, 341, 1389, 11, 18081, 760, 281, 264, 3825, 295, 2107, 12, 24697, 1078, 831, 17089, 445, 51184], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 97, "seek": 35722, "start": 373.62, "end": 374.62, "text": " to this API.", "tokens": [51184, 281, 341, 9362, 13, 51234], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 98, "seek": 35722, "start": 374.62, "end": 377.66, "text": " Once you break out of that, you have the ability to steal secrets.", "tokens": [51234, 3443, 291, 1821, 484, 295, 300, 11, 291, 362, 264, 3485, 281, 11009, 14093, 13, 51386], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 99, "seek": 35722, "start": 377.66, "end": 379.46000000000004, "text": " That's really not good.", "tokens": [51386, 663, 311, 534, 406, 665, 13, 51476], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 100, "seek": 35722, "start": 379.46000000000004, "end": 384.02000000000004, "text": " So, let me walk through this attack step by step just to make it absolutely clear how", "tokens": [51476, 407, 11, 718, 385, 1792, 807, 341, 2690, 1823, 538, 1823, 445, 281, 652, 309, 3122, 1850, 577, 51704], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 101, "seek": 35722, "start": 384.02000000000004, "end": 385.18, "text": " it goes.", "tokens": [51704, 309, 1709, 13, 51762], "temperature": 0.0, "avg_logprob": -0.12046277624929053, "compression_ratio": 1.7461538461538462, "no_speech_prob": 0.2972768247127533}, {"id": 102, "seek": 38518, "start": 385.18, "end": 389.18, "text": " The first step is that the attacker needs to craft a container that can execute code", "tokens": [50364, 440, 700, 1823, 307, 300, 264, 35871, 2203, 281, 8448, 257, 10129, 300, 393, 14483, 3089, 50564], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 103, "seek": 38518, "start": 389.18, "end": 392.66, "text": " in user space.", "tokens": [50564, 294, 4195, 1901, 13, 50738], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 104, "seek": 38518, "start": 392.66, "end": 396.7, "text": " This is not trivial, but it's far from impossible, and things like this have happened in the", "tokens": [50738, 639, 307, 406, 26703, 11, 457, 309, 311, 1400, 490, 6243, 11, 293, 721, 411, 341, 362, 2011, 294, 264, 50940], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 105, "seek": 38518, "start": 396.7, "end": 397.7, "text": " past.", "tokens": [50940, 1791, 13, 50990], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 106, "seek": 38518, "start": 397.7, "end": 401.54, "text": " Then, the attacker is going to run this container with confidential containers.", "tokens": [50990, 1396, 11, 264, 35871, 307, 516, 281, 1190, 341, 10129, 365, 27054, 17089, 13, 51182], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 107, "seek": 38518, "start": 401.54, "end": 408.46000000000004, "text": " They can do this locally using their own SEV machine or whatever, or they can do it", "tokens": [51182, 814, 393, 360, 341, 16143, 1228, 641, 1065, 10269, 53, 3479, 420, 2035, 11, 420, 436, 393, 360, 309, 51528], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 108, "seek": 38518, "start": 408.46000000000004, "end": 409.46000000000004, "text": " in the cloud.", "tokens": [51528, 294, 264, 4588, 13, 51578], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 109, "seek": 38518, "start": 409.46000000000004, "end": 410.46000000000004, "text": " It doesn't matter.", "tokens": [51578, 467, 1177, 380, 1871, 13, 51628], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 110, "seek": 38518, "start": 410.46000000000004, "end": 414.5, "text": " Anywhere where confidential containers is running, they can run this.", "tokens": [51628, 2639, 1992, 689, 27054, 17089, 307, 2614, 11, 436, 393, 1190, 341, 13, 51830], "temperature": 0.0, "avg_logprob": -0.12381813668797159, "compression_ratio": 1.7748091603053435, "no_speech_prob": 0.0011694134445860982}, {"id": 111, "seek": 41450, "start": 414.5, "end": 418.42, "text": " The container, once it starts up, is going to connect to a KBS and make some sort of", "tokens": [50364, 440, 10129, 11, 1564, 309, 3719, 493, 11, 307, 516, 281, 1745, 281, 257, 591, 8176, 293, 652, 512, 1333, 295, 50560], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 112, "seek": 41450, "start": 418.42, "end": 419.42, "text": " request.", "tokens": [50560, 5308, 13, 50610], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 113, "seek": 41450, "start": 419.42, "end": 423.22, "text": " As part of that, there's an authentication flow where it will get a nonce from the target", "tokens": [50610, 1018, 644, 295, 300, 11, 456, 311, 364, 26643, 3095, 689, 309, 486, 483, 257, 2107, 384, 490, 264, 3779, 50800], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 114, "seek": 41450, "start": 423.22, "end": 424.22, "text": " KBS.", "tokens": [50800, 591, 8176, 13, 50850], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 115, "seek": 41450, "start": 424.22, "end": 427.7, "text": " It's going to keep track of that nonce, and then the container will break out and get", "tokens": [50850, 467, 311, 516, 281, 1066, 2837, 295, 300, 2107, 384, 11, 293, 550, 264, 10129, 486, 1821, 484, 293, 483, 51024], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 116, "seek": 41450, "start": 427.7, "end": 429.46, "text": " this valid AdStation report.", "tokens": [51024, 341, 7363, 1999, 19468, 2275, 13, 51112], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 117, "seek": 41450, "start": 429.46, "end": 432.5, "text": " When it requests the AdStation report, it's going to put the nonce that it got in it,", "tokens": [51112, 1133, 309, 12475, 264, 1999, 19468, 2275, 11, 309, 311, 516, 281, 829, 264, 2107, 384, 300, 309, 658, 294, 309, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 118, "seek": 41450, "start": 432.5, "end": 434.58, "text": " and it's also going to put its own public key here.", "tokens": [51264, 293, 309, 311, 611, 516, 281, 829, 1080, 1065, 1908, 2141, 510, 13, 51368], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 119, "seek": 41450, "start": 434.58, "end": 437.98, "text": " It's basically just setting up its own secure connection.", "tokens": [51368, 467, 311, 1936, 445, 3287, 493, 1080, 1065, 7144, 4984, 13, 51538], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 120, "seek": 41450, "start": 437.98, "end": 442.62, "text": " Once that secure connection is there, it's just going to use it to request secrets.", "tokens": [51538, 3443, 300, 7144, 4984, 307, 456, 11, 309, 311, 445, 516, 281, 764, 309, 281, 5308, 14093, 13, 51770], "temperature": 0.0, "avg_logprob": -0.1514917687524723, "compression_ratio": 1.9563758389261745, "no_speech_prob": 0.046011123806238174}, {"id": 121, "seek": 44262, "start": 443.14, "end": 446.98, "text": " Send off the AdStation report, the KBS will say, yep, the measurement checks out, okay,", "tokens": [50390, 17908, 766, 264, 1999, 19468, 2275, 11, 264, 591, 8176, 486, 584, 11, 18633, 11, 264, 13160, 13834, 484, 11, 1392, 11, 50582], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 122, "seek": 44262, "start": 446.98, "end": 449.3, "text": " here's the nonce that I sent it, that's correct.", "tokens": [50582, 510, 311, 264, 2107, 384, 300, 286, 2279, 309, 11, 300, 311, 3006, 13, 50698], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 123, "seek": 44262, "start": 449.3, "end": 454.38, "text": " Let me use this public key to create a secure channel to wrap secrets.", "tokens": [50698, 961, 385, 764, 341, 1908, 2141, 281, 1884, 257, 7144, 2269, 281, 7019, 14093, 13, 50952], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 124, "seek": 44262, "start": 454.38, "end": 458.78000000000003, "text": " Really relatively straightforward attack in some ways.", "tokens": [50952, 4083, 7226, 15325, 2690, 294, 512, 2098, 13, 51172], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 125, "seek": 44262, "start": 458.78000000000003, "end": 460.22, "text": " Let's talk about solutions.", "tokens": [51172, 961, 311, 751, 466, 6547, 13, 51244], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 126, "seek": 44262, "start": 460.22, "end": 463.5, "text": " While this attack is in some ways very severe, there are actually a number of different things", "tokens": [51244, 3987, 341, 2690, 307, 294, 512, 2098, 588, 8922, 11, 456, 366, 767, 257, 1230, 295, 819, 721, 51408], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 127, "seek": 44262, "start": 463.5, "end": 470.62, "text": " we can do to prevent it, although it's not yet clear exactly which is the optimal solution.", "tokens": [51408, 321, 393, 360, 281, 4871, 309, 11, 4878, 309, 311, 406, 1939, 1850, 2293, 597, 307, 264, 16252, 3827, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16786940758969604, "compression_ratio": 1.6335616438356164, "no_speech_prob": 0.024417314678430557}, {"id": 128, "seek": 47062, "start": 470.62, "end": 474.02, "text": " Really the simplest solution is to revoke access to AdStation reports, and what this", "tokens": [50364, 4083, 264, 22811, 3827, 307, 281, 3698, 2949, 2105, 281, 1999, 19468, 7122, 11, 293, 437, 341, 50534], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 129, "seek": 47062, "start": 474.02, "end": 480.5, "text": " means is that the guest would have some ability to revoke its own ability, its own capability", "tokens": [50534, 1355, 307, 300, 264, 8341, 576, 362, 512, 3485, 281, 3698, 2949, 1080, 1065, 3485, 11, 1080, 1065, 13759, 50858], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 130, "seek": 47062, "start": 480.5, "end": 483.02, "text": " to get a future AdStation report.", "tokens": [50858, 281, 483, 257, 2027, 1999, 19468, 2275, 13, 50984], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 131, "seek": 47062, "start": 483.02, "end": 487.78000000000003, "text": " This hinges on the idea that there's different phases of execution in confidential containers,", "tokens": [50984, 639, 46686, 322, 264, 1558, 300, 456, 311, 819, 18764, 295, 15058, 294, 27054, 17089, 11, 51222], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 132, "seek": 47062, "start": 487.78000000000003, "end": 489.46, "text": " or in a lot of projects, really.", "tokens": [51222, 420, 294, 257, 688, 295, 4455, 11, 534, 13, 51306], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 133, "seek": 47062, "start": 489.46, "end": 493.54, "text": " In the early phase of execution, we should still be executing really within the footprint", "tokens": [51306, 682, 264, 2440, 5574, 295, 15058, 11, 321, 820, 920, 312, 32368, 534, 1951, 264, 24222, 51510], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 134, "seek": 47062, "start": 493.54, "end": 499.34000000000003, "text": " of what is measured, really within the footprint of the kernel, the NITRD, kernel parameters,", "tokens": [51510, 295, 437, 307, 12690, 11, 534, 1951, 264, 24222, 295, 264, 28256, 11, 264, 426, 3927, 49, 35, 11, 28256, 9834, 11, 51800], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 135, "seek": 47062, "start": 499.34000000000003, "end": 500.34000000000003, "text": " firmware, things like that.", "tokens": [51800, 30289, 11, 721, 411, 300, 13, 51850], "temperature": 0.0, "avg_logprob": -0.1383125800212831, "compression_ratio": 1.8969072164948453, "no_speech_prob": 0.006902717519551516}, {"id": 136, "seek": 50034, "start": 500.46, "end": 505.29999999999995, "text": " As long as we're in this area that has been measured, we can be relatively confident about", "tokens": [50370, 1018, 938, 382, 321, 434, 294, 341, 1859, 300, 575, 668, 12690, 11, 321, 393, 312, 7226, 6679, 466, 50612], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 137, "seek": 50034, "start": 505.29999999999995, "end": 507.09999999999997, "text": " what is going on.", "tokens": [50612, 437, 307, 516, 322, 13, 50702], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 138, "seek": 50034, "start": 507.09999999999997, "end": 511.02, "text": " One thing that is a big red flag here is that we are allowing arbitrary code to be executed", "tokens": [50702, 1485, 551, 300, 307, 257, 955, 2182, 7166, 510, 307, 300, 321, 366, 8293, 23211, 3089, 281, 312, 17577, 50898], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 139, "seek": 50034, "start": 511.02, "end": 513.54, "text": " within the guest in the context of a container.", "tokens": [50898, 1951, 264, 8341, 294, 264, 4319, 295, 257, 10129, 13, 51024], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 140, "seek": 50034, "start": 513.54, "end": 518.22, "text": " Maybe before we start doing this, we should figure out some way that we could get rid", "tokens": [51024, 2704, 949, 321, 722, 884, 341, 11, 321, 820, 2573, 484, 512, 636, 300, 321, 727, 483, 3973, 51258], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 141, "seek": 50034, "start": 518.22, "end": 523.02, "text": " of any future AdStation reports, make sure that none are generated.", "tokens": [51258, 295, 604, 2027, 1999, 19468, 7122, 11, 652, 988, 300, 6022, 366, 10833, 13, 51498], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 142, "seek": 50034, "start": 523.02, "end": 525.98, "text": " With SCVS and P, there's actually a pretty easy way to do this, which is that we can", "tokens": [51498, 2022, 9028, 53, 50, 293, 430, 11, 456, 311, 767, 257, 1238, 1858, 636, 281, 360, 341, 11, 597, 307, 300, 321, 393, 51646], "temperature": 0.0, "avg_logprob": -0.12715430413523027, "compression_ratio": 1.667808219178082, "no_speech_prob": 0.000829507946036756}, {"id": 143, "seek": 52598, "start": 525.98, "end": 530.4200000000001, "text": " overwrite the keys that the guest needs to communicate with the PSP.", "tokens": [50364, 670, 21561, 264, 9317, 300, 264, 8341, 2203, 281, 7890, 365, 264, 8168, 47, 13, 50586], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 144, "seek": 52598, "start": 530.4200000000001, "end": 533.3000000000001, "text": " They're called VMPCKs, and you can delete them.", "tokens": [50586, 814, 434, 1219, 18038, 12986, 42, 82, 11, 293, 291, 393, 12097, 552, 13, 50730], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 145, "seek": 52598, "start": 533.3000000000001, "end": 537.1, "text": " If you do that, you will not be talking to the PSP anymore.", "tokens": [50730, 759, 291, 360, 300, 11, 291, 486, 406, 312, 1417, 281, 264, 8168, 47, 3602, 13, 50920], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 146, "seek": 52598, "start": 537.1, "end": 540.22, "text": " This has some limitations.", "tokens": [50920, 639, 575, 512, 15705, 13, 51076], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 147, "seek": 52598, "start": 540.22, "end": 544.54, "text": " I'm not sure of a good way to do this with TDX, but if you know, let me know.", "tokens": [51076, 286, 478, 406, 988, 295, 257, 665, 636, 281, 360, 341, 365, 42606, 55, 11, 457, 498, 291, 458, 11, 718, 385, 458, 13, 51292], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 148, "seek": 52598, "start": 544.54, "end": 551.02, "text": " I think this is a pretty simple way to address the problem, and a pretty good solution in", "tokens": [51292, 286, 519, 341, 307, 257, 1238, 2199, 636, 281, 2985, 264, 1154, 11, 293, 257, 1238, 665, 3827, 294, 51616], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 149, "seek": 52598, "start": 551.02, "end": 552.3000000000001, "text": " some ways.", "tokens": [51616, 512, 2098, 13, 51680], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 150, "seek": 52598, "start": 552.3000000000001, "end": 554.54, "text": " That said, there are things it would conflict with.", "tokens": [51680, 663, 848, 11, 456, 366, 721, 309, 576, 6596, 365, 13, 51792], "temperature": 0.0, "avg_logprob": -0.15349609375, "compression_ratio": 1.6254681647940075, "no_speech_prob": 0.026743635535240173}, {"id": 151, "seek": 55454, "start": 554.54, "end": 558.78, "text": " There's been some discussion of something referred to as the passport model, where the", "tokens": [50364, 821, 311, 668, 512, 5017, 295, 746, 10839, 281, 382, 264, 24694, 2316, 11, 689, 264, 50576], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 152, "seek": 55454, "start": 558.78, "end": 564.06, "text": " workload actually would get an AdStation report at runtime, and obviously that would be disabled", "tokens": [50576, 20139, 767, 576, 483, 364, 1999, 19468, 2275, 412, 34474, 11, 293, 2745, 300, 576, 312, 15191, 50840], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 153, "seek": 55454, "start": 564.06, "end": 568.0999999999999, "text": " if we don't allow any AdStation reports to be generated at runtime.", "tokens": [50840, 498, 321, 500, 380, 2089, 604, 1999, 19468, 7122, 281, 312, 10833, 412, 34474, 13, 51042], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 154, "seek": 55454, "start": 568.0999999999999, "end": 573.3, "text": " There are maybe ways to resolve that, but that's a discussion that will need to happen.", "tokens": [51042, 821, 366, 1310, 2098, 281, 14151, 300, 11, 457, 300, 311, 257, 5017, 300, 486, 643, 281, 1051, 13, 51302], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 155, "seek": 55454, "start": 573.3, "end": 575.4599999999999, "text": " Another solution is to use the host data field.", "tokens": [51302, 3996, 3827, 307, 281, 764, 264, 3975, 1412, 2519, 13, 51410], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 156, "seek": 55454, "start": 575.4599999999999, "end": 579.6999999999999, "text": " I'm going to come back to this because it's a fairly complicated proposal, so I'll talk", "tokens": [51410, 286, 478, 516, 281, 808, 646, 281, 341, 570, 309, 311, 257, 6457, 6179, 11494, 11, 370, 286, 603, 751, 51622], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 157, "seek": 55454, "start": 579.6999999999999, "end": 583.4599999999999, "text": " about that on the next slide, but let me go through the other two first.", "tokens": [51622, 466, 300, 322, 264, 958, 4137, 11, 457, 718, 385, 352, 807, 264, 661, 732, 700, 13, 51810], "temperature": 0.0, "avg_logprob": -0.1311691430898813, "compression_ratio": 1.7452229299363058, "no_speech_prob": 0.006691086571663618}, {"id": 158, "seek": 58346, "start": 583.46, "end": 589.26, "text": " One of them is to use IMA to basically constantly check the state of the guest.", "tokens": [50364, 1485, 295, 552, 307, 281, 764, 286, 9998, 281, 1936, 6460, 1520, 264, 1785, 295, 264, 8341, 13, 50654], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 159, "seek": 58346, "start": 589.26, "end": 591.9000000000001, "text": " This would maybe detect a breakout.", "tokens": [50654, 639, 576, 1310, 5531, 257, 30067, 13, 50786], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 160, "seek": 58346, "start": 591.9000000000001, "end": 596.46, "text": " Doing this would probably require a virtual TPM inside the guest, and this may be available", "tokens": [50786, 18496, 341, 576, 1391, 3651, 257, 6374, 314, 18819, 1854, 264, 8341, 11, 293, 341, 815, 312, 2435, 51014], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 161, "seek": 58346, "start": 596.46, "end": 598.6600000000001, "text": " at some point.", "tokens": [51014, 412, 512, 935, 13, 51124], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 162, "seek": 58346, "start": 598.6600000000001, "end": 601.5400000000001, "text": " It's not yet clear if we're going to utilize that for confidential containers in some ways.", "tokens": [51124, 467, 311, 406, 1939, 1850, 498, 321, 434, 516, 281, 16117, 300, 337, 27054, 17089, 294, 512, 2098, 13, 51268], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 163, "seek": 58346, "start": 601.5400000000001, "end": 604.02, "text": " It might be overkill, but here it might actually be useful.", "tokens": [51268, 467, 1062, 312, 670, 34213, 11, 457, 510, 309, 1062, 767, 312, 4420, 13, 51392], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 164, "seek": 58346, "start": 604.02, "end": 606.02, "text": " The final thing I wanted to mention is VMPLs.", "tokens": [51392, 440, 2572, 551, 286, 1415, 281, 2152, 307, 18038, 21593, 82, 13, 51492], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 165, "seek": 58346, "start": 606.02, "end": 610.7, "text": " This is virtual machine privilege levels, and it's a feature of SEVS and P. This probably", "tokens": [51492, 639, 307, 6374, 3479, 12122, 4358, 11, 293, 309, 311, 257, 4111, 295, 10269, 53, 50, 293, 430, 13, 639, 1391, 51726], "temperature": 0.0, "avg_logprob": -0.14031234042335103, "compression_ratio": 1.655844155844156, "no_speech_prob": 0.17761355638504028}, {"id": 166, "seek": 61070, "start": 610.7, "end": 614.62, "text": " isn't feasible for use in confidential containers, exactly, but I bring it up because this is", "tokens": [50364, 1943, 380, 26648, 337, 764, 294, 27054, 17089, 11, 2293, 11, 457, 286, 1565, 309, 493, 570, 341, 307, 50560], "temperature": 0.0, "avg_logprob": -0.14145578037608753, "compression_ratio": 1.6101083032490975, "no_speech_prob": 0.006691635586321354}, {"id": 167, "seek": 61070, "start": 614.62, "end": 620.1400000000001, "text": " actually the way that the VTPMs that are being developed for SEVS and P get sidestep", "tokens": [50560, 767, 264, 636, 300, 264, 691, 16804, 26386, 300, 366, 885, 4743, 337, 10269, 53, 50, 293, 430, 483, 20822, 377, 595, 50836], "temperature": 0.0, "avg_logprob": -0.14145578037608753, "compression_ratio": 1.6101083032490975, "no_speech_prob": 0.006691635586321354}, {"id": 168, "seek": 61070, "start": 620.1400000000001, "end": 621.1400000000001, "text": " this problem.", "tokens": [50836, 341, 1154, 13, 50886], "temperature": 0.0, "avg_logprob": -0.14145578037608753, "compression_ratio": 1.6101083032490975, "no_speech_prob": 0.006691635586321354}, {"id": 169, "seek": 61070, "start": 621.1400000000001, "end": 625.34, "text": " A VMPL is a way to create different privilege levels inside of a guest, and one thing a", "tokens": [50886, 316, 18038, 21593, 307, 257, 636, 281, 1884, 819, 12122, 4358, 1854, 295, 257, 8341, 11, 293, 472, 551, 257, 51096], "temperature": 0.0, "avg_logprob": -0.14145578037608753, "compression_ratio": 1.6101083032490975, "no_speech_prob": 0.006691635586321354}, {"id": 170, "seek": 61070, "start": 625.34, "end": 631.3000000000001, "text": " VMPL can limit access to is generation of a particular AdStation report.", "tokens": [51096, 18038, 21593, 393, 4948, 2105, 281, 307, 5125, 295, 257, 1729, 1999, 19468, 2275, 13, 51394], "temperature": 0.0, "avg_logprob": -0.14145578037608753, "compression_ratio": 1.6101083032490975, "no_speech_prob": 0.006691635586321354}, {"id": 171, "seek": 61070, "start": 631.3000000000001, "end": 637.5400000000001, "text": " If we had some sort of hardware feature like that that could isolate the ability to generate", "tokens": [51394, 759, 321, 632, 512, 1333, 295, 8837, 4111, 411, 300, 300, 727, 25660, 264, 3485, 281, 8460, 51706], "temperature": 0.0, "avg_logprob": -0.14145578037608753, "compression_ratio": 1.6101083032490975, "no_speech_prob": 0.006691635586321354}, {"id": 172, "seek": 63754, "start": 637.54, "end": 642.26, "text": " these extremely sensitive AdStation reports, that could help, and the VTPMs, they have", "tokens": [50364, 613, 4664, 9477, 1999, 19468, 7122, 11, 300, 727, 854, 11, 293, 264, 691, 16804, 26386, 11, 436, 362, 50600], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 173, "seek": 63754, "start": 642.26, "end": 646.14, "text": " exactly this in the form of the VMPL.", "tokens": [50600, 2293, 341, 294, 264, 1254, 295, 264, 18038, 21593, 13, 50794], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 174, "seek": 63754, "start": 646.14, "end": 648.78, "text": " So let's talk about the host data-based solution.", "tokens": [50794, 407, 718, 311, 751, 466, 264, 3975, 1412, 12, 6032, 3827, 13, 50926], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 175, "seek": 63754, "start": 648.78, "end": 650.66, "text": " First of all, what is the host data?", "tokens": [50926, 2386, 295, 439, 11, 437, 307, 264, 3975, 1412, 30, 51020], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 176, "seek": 63754, "start": 650.66, "end": 654.5799999999999, "text": " The host data is a field in the AdStation report that is set by the host prior to the", "tokens": [51020, 440, 3975, 1412, 307, 257, 2519, 294, 264, 1999, 19468, 2275, 300, 307, 992, 538, 264, 3975, 4059, 281, 264, 51216], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 177, "seek": 63754, "start": 654.5799999999999, "end": 660.4599999999999, "text": " launch of the guest, and then included in every AdStation report requested from inside", "tokens": [51216, 4025, 295, 264, 8341, 11, 293, 550, 5556, 294, 633, 1999, 19468, 2275, 16436, 490, 1854, 51510], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 178, "seek": 63754, "start": 660.4599999999999, "end": 661.54, "text": " the guest.", "tokens": [51510, 264, 8341, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 179, "seek": 63754, "start": 661.54, "end": 667.0999999999999, "text": " This is S&P terminology, but I believe MRINFO is a similar thing for TDX.", "tokens": [51564, 639, 307, 318, 5, 47, 27575, 11, 457, 286, 1697, 9808, 1464, 18067, 307, 257, 2531, 551, 337, 42606, 55, 13, 51842], "temperature": 0.0, "avg_logprob": -0.1313376463660898, "compression_ratio": 1.6992753623188406, "no_speech_prob": 0.0028005351778119802}, {"id": 180, "seek": 66710, "start": 667.66, "end": 672.22, "text": " Even if the guest is malicious, there's no way for it to get a report without the host", "tokens": [50392, 2754, 498, 264, 8341, 307, 33496, 11, 456, 311, 572, 636, 337, 309, 281, 483, 257, 2275, 1553, 264, 3975, 50620], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 181, "seek": 66710, "start": 672.22, "end": 673.78, "text": " data in it.", "tokens": [50620, 1412, 294, 309, 13, 50698], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 182, "seek": 66710, "start": 673.78, "end": 677.58, "text": " We could use the host data for a number of different things, but I'm going to focus", "tokens": [50698, 492, 727, 764, 264, 3975, 1412, 337, 257, 1230, 295, 819, 721, 11, 457, 286, 478, 516, 281, 1879, 50888], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 183, "seek": 66710, "start": 677.58, "end": 680.78, "text": " on using it to store the public key of the KBS.", "tokens": [50888, 322, 1228, 309, 281, 3531, 264, 1908, 2141, 295, 264, 591, 8176, 13, 51048], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 184, "seek": 66710, "start": 680.78, "end": 686.22, "text": " This will essentially bind the hardware evidence to one KBS.", "tokens": [51048, 639, 486, 4476, 14786, 264, 8837, 4467, 281, 472, 591, 8176, 13, 51320], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 185, "seek": 66710, "start": 686.22, "end": 689.7, "text": " Interestingly, this does not actually guarantee that we are connecting to the correct KBS.", "tokens": [51320, 30564, 11, 341, 775, 406, 767, 10815, 300, 321, 366, 11015, 281, 264, 3006, 591, 8176, 13, 51494], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 186, "seek": 66710, "start": 689.7, "end": 694.7, "text": " It doesn't guarantee the identity of the KBS, in part because the host sets the host data", "tokens": [51494, 467, 1177, 380, 10815, 264, 6575, 295, 264, 591, 8176, 11, 294, 644, 570, 264, 3975, 6352, 264, 3975, 1412, 51744], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 187, "seek": 66710, "start": 694.7, "end": 696.34, "text": " and the host is untrusted.", "tokens": [51744, 293, 264, 3975, 307, 1701, 81, 6589, 13, 51826], "temperature": 0.0, "avg_logprob": -0.1491860833786826, "compression_ratio": 1.7885304659498207, "no_speech_prob": 0.0013248827308416367}, {"id": 188, "seek": 69634, "start": 696.7800000000001, "end": 703.58, "text": " Instead, what it guarantees us is that the guest will only be able to connect to one KBS.", "tokens": [50386, 7156, 11, 437, 309, 32567, 505, 307, 300, 264, 8341, 486, 787, 312, 1075, 281, 1745, 281, 472, 591, 8176, 13, 50726], "temperature": 0.0, "avg_logprob": -0.17658100876153685, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.0008039737585932016}, {"id": 189, "seek": 69634, "start": 703.58, "end": 708.62, "text": " When the AdStation agent connects to a KBS, it will check that the public key of the KBS", "tokens": [50726, 1133, 264, 1999, 19468, 9461, 16967, 281, 257, 591, 8176, 11, 309, 486, 1520, 300, 264, 1908, 2141, 295, 264, 591, 8176, 50978], "temperature": 0.0, "avg_logprob": -0.17658100876153685, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.0008039737585932016}, {"id": 190, "seek": 69634, "start": 708.62, "end": 710.62, "text": " matches what is in the host data.", "tokens": [50978, 10676, 437, 307, 294, 264, 3975, 1412, 13, 51078], "temperature": 0.0, "avg_logprob": -0.17658100876153685, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.0008039737585932016}, {"id": 191, "seek": 69634, "start": 710.62, "end": 712.46, "text": " If it doesn't, the connection will fail.", "tokens": [51078, 759, 309, 1177, 380, 11, 264, 4984, 486, 3061, 13, 51170], "temperature": 0.0, "avg_logprob": -0.17658100876153685, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.0008039737585932016}, {"id": 192, "seek": 69634, "start": 712.46, "end": 718.74, "text": " Similarly, the KBS will also enforce that the correct public key is in the host data", "tokens": [51170, 13157, 11, 264, 591, 8176, 486, 611, 24825, 300, 264, 3006, 1908, 2141, 307, 294, 264, 3975, 1412, 51484], "temperature": 0.0, "avg_logprob": -0.17658100876153685, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.0008039737585932016}, {"id": 193, "seek": 69634, "start": 718.74, "end": 722.1, "text": " that it has when it receives a request.", "tokens": [51484, 300, 309, 575, 562, 309, 20717, 257, 5308, 13, 51652], "temperature": 0.0, "avg_logprob": -0.17658100876153685, "compression_ratio": 1.7339449541284404, "no_speech_prob": 0.0008039737585932016}, {"id": 194, "seek": 72210, "start": 722.1, "end": 728.3000000000001, "text": " Fundamentally, the only evidence available within this guest will be evidence that has", "tokens": [50364, 13493, 2466, 379, 11, 264, 787, 4467, 2435, 1951, 341, 8341, 486, 312, 4467, 300, 575, 50674], "temperature": 0.0, "avg_logprob": -0.14487716555595398, "compression_ratio": 1.6446280991735538, "no_speech_prob": 0.0010648820316419005}, {"id": 195, "seek": 72210, "start": 728.3000000000001, "end": 731.7, "text": " this public key of a particular KBS in it.", "tokens": [50674, 341, 1908, 2141, 295, 257, 1729, 591, 8176, 294, 309, 13, 50844], "temperature": 0.0, "avg_logprob": -0.14487716555595398, "compression_ratio": 1.6446280991735538, "no_speech_prob": 0.0010648820316419005}, {"id": 196, "seek": 72210, "start": 731.7, "end": 738.34, "text": " Now, on its own, this does not really prevent the attack because we could direct all requests", "tokens": [50844, 823, 11, 322, 1080, 1065, 11, 341, 775, 406, 534, 4871, 264, 2690, 570, 321, 727, 2047, 439, 12475, 51176], "temperature": 0.0, "avg_logprob": -0.14487716555595398, "compression_ratio": 1.6446280991735538, "no_speech_prob": 0.0010648820316419005}, {"id": 197, "seek": 72210, "start": 738.34, "end": 741.5, "text": " coming from the guest to the target KBS.", "tokens": [51176, 1348, 490, 264, 8341, 281, 264, 3779, 591, 8176, 13, 51334], "temperature": 0.0, "avg_logprob": -0.14487716555595398, "compression_ratio": 1.6446280991735538, "no_speech_prob": 0.0010648820316419005}, {"id": 198, "seek": 72210, "start": 741.5, "end": 744.1, "text": " But this is where signature validation comes in.", "tokens": [51334, 583, 341, 307, 689, 13397, 24071, 1487, 294, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14487716555595398, "compression_ratio": 1.6446280991735538, "no_speech_prob": 0.0010648820316419005}, {"id": 199, "seek": 72210, "start": 744.1, "end": 748.58, "text": " When we turn on signature validation, the AdStation agent will make a request to the", "tokens": [51464, 1133, 321, 1261, 322, 13397, 24071, 11, 264, 1999, 19468, 9461, 486, 652, 257, 5308, 281, 264, 51688], "temperature": 0.0, "avg_logprob": -0.14487716555595398, "compression_ratio": 1.6446280991735538, "no_speech_prob": 0.0010648820316419005}, {"id": 200, "seek": 74858, "start": 748.58, "end": 752.82, "text": " KBS for the signature policy before any containers can be run.", "tokens": [50364, 591, 8176, 337, 264, 13397, 3897, 949, 604, 17089, 393, 312, 1190, 13, 50576], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 201, "seek": 74858, "start": 752.82, "end": 755.9000000000001, "text": " This is assuming we're using an online KBS.", "tokens": [50576, 639, 307, 11926, 321, 434, 1228, 364, 2950, 591, 8176, 13, 50730], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 202, "seek": 74858, "start": 755.9000000000001, "end": 762.4200000000001, "text": " Since we can only connect to one KBS, as soon as we make this request, as soon as we request", "tokens": [50730, 4162, 321, 393, 787, 1745, 281, 472, 591, 8176, 11, 382, 2321, 382, 321, 652, 341, 5308, 11, 382, 2321, 382, 321, 5308, 51056], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 203, "seek": 74858, "start": 762.4200000000001, "end": 767.6600000000001, "text": " signatures and as soon as that request is successful, we've collapsed the attack space", "tokens": [51056, 32322, 293, 382, 2321, 382, 300, 5308, 307, 4406, 11, 321, 600, 24578, 264, 2690, 1901, 51318], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 204, "seek": 74858, "start": 767.6600000000001, "end": 768.6600000000001, "text": " dramatically.", "tokens": [51318, 17548, 13, 51368], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 205, "seek": 74858, "start": 768.6600000000001, "end": 773.38, "text": " Now, the only KBS that we can attack is the KBS that provides the signature verification", "tokens": [51368, 823, 11, 264, 787, 591, 8176, 300, 321, 393, 2690, 307, 264, 591, 8176, 300, 6417, 264, 13397, 30206, 51604], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 206, "seek": 74858, "start": 773.38, "end": 775.26, "text": " policy.", "tokens": [51604, 3897, 13, 51698], "temperature": 0.0, "avg_logprob": -0.1407653490702311, "compression_ratio": 1.7566371681415929, "no_speech_prob": 0.0024721038062125444}, {"id": 207, "seek": 77526, "start": 775.26, "end": 780.02, "text": " If we use a malicious KBS to provide a signature verification policy, for instance, one that", "tokens": [50364, 759, 321, 764, 257, 33496, 591, 8176, 281, 2893, 257, 13397, 30206, 3897, 11, 337, 5197, 11, 472, 300, 50602], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 208, "seek": 77526, "start": 780.02, "end": 784.18, "text": " allows us to run the malicious container, then we still have to connect to the malicious", "tokens": [50602, 4045, 505, 281, 1190, 264, 33496, 10129, 11, 550, 321, 920, 362, 281, 1745, 281, 264, 33496, 50810], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 209, "seek": 77526, "start": 784.18, "end": 786.42, "text": " KBS for the entire lifetime of the guest.", "tokens": [50810, 591, 8176, 337, 264, 2302, 11364, 295, 264, 8341, 13, 50922], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 210, "seek": 77526, "start": 786.42, "end": 790.78, "text": " So the only KBS that we can attack would be that malicious KBS.", "tokens": [50922, 407, 264, 787, 591, 8176, 300, 321, 393, 2690, 576, 312, 300, 33496, 591, 8176, 13, 51140], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 211, "seek": 77526, "start": 790.78, "end": 792.3, "text": " That's not much of an attack.", "tokens": [51140, 663, 311, 406, 709, 295, 364, 2690, 13, 51216], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 212, "seek": 77526, "start": 792.3, "end": 796.18, "text": " On the other hand, we could try to get the target KBS, we could direct everything to", "tokens": [51216, 1282, 264, 661, 1011, 11, 321, 727, 853, 281, 483, 264, 3779, 591, 8176, 11, 321, 727, 2047, 1203, 281, 51410], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 213, "seek": 77526, "start": 796.18, "end": 800.3, "text": " the target KBS instead, and try to get the target KBS to provide the signature verification", "tokens": [51410, 264, 3779, 591, 8176, 2602, 11, 293, 853, 281, 483, 264, 3779, 591, 8176, 281, 2893, 264, 13397, 30206, 51616], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 214, "seek": 77526, "start": 800.3, "end": 803.86, "text": " policy and then attack it later with secret requests.", "tokens": [51616, 3897, 293, 550, 2690, 309, 1780, 365, 4054, 12475, 13, 51794], "temperature": 0.0, "avg_logprob": -0.10191213649554845, "compression_ratio": 1.9783393501805053, "no_speech_prob": 0.00057029421441257}, {"id": 215, "seek": 80386, "start": 803.86, "end": 808.38, "text": " But this isn't going to work because the target KBS shouldn't give us a signature verification", "tokens": [50364, 583, 341, 1943, 380, 516, 281, 589, 570, 264, 3779, 591, 8176, 4659, 380, 976, 505, 257, 13397, 30206, 50590], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 216, "seek": 80386, "start": 808.38, "end": 811.9, "text": " policy that would allow the malicious container to run.", "tokens": [50590, 3897, 300, 576, 2089, 264, 33496, 10129, 281, 1190, 13, 50766], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 217, "seek": 80386, "start": 811.9, "end": 816.26, "text": " So with these two properties, first requiring that all connections go to the same KBS using", "tokens": [50766, 407, 365, 613, 732, 7221, 11, 700, 24165, 300, 439, 9271, 352, 281, 264, 912, 591, 8176, 1228, 50984], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 218, "seek": 80386, "start": 816.26, "end": 819.94, "text": " the host data, putting the public host data in it, and then requiring that signatures", "tokens": [50984, 264, 3975, 1412, 11, 3372, 264, 1908, 3975, 1412, 294, 309, 11, 293, 550, 24165, 300, 32322, 51168], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 219, "seek": 80386, "start": 819.94, "end": 824.1, "text": " are there so that we know we've connected at least to one KBS and we know it's the KBS", "tokens": [51168, 366, 456, 370, 300, 321, 458, 321, 600, 4582, 412, 1935, 281, 472, 591, 8176, 293, 321, 458, 309, 311, 264, 591, 8176, 51376], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 220, "seek": 80386, "start": 824.1, "end": 830.02, "text": " that's actually running the container, we can really close off this attack fairly effectively.", "tokens": [51376, 300, 311, 767, 2614, 264, 10129, 11, 321, 393, 534, 1998, 766, 341, 2690, 6457, 8659, 13, 51672], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 221, "seek": 80386, "start": 830.02, "end": 832.0600000000001, "text": " So there's a few things we should still note here.", "tokens": [51672, 407, 456, 311, 257, 1326, 721, 321, 820, 920, 3637, 510, 13, 51774], "temperature": 0.0, "avg_logprob": -0.12553160118334222, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.002322947373613715}, {"id": 222, "seek": 83206, "start": 832.06, "end": 836.5, "text": " One of them is that we've made an assumption, which is that the target KBS is going to require", "tokens": [50364, 1485, 295, 552, 307, 300, 321, 600, 1027, 364, 15302, 11, 597, 307, 300, 264, 3779, 591, 8176, 307, 516, 281, 3651, 50586], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 223, "seek": 83206, "start": 836.5, "end": 837.8199999999999, "text": " signatures.", "tokens": [50586, 32322, 13, 50652], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 224, "seek": 83206, "start": 837.8199999999999, "end": 841.9799999999999, "text": " And this might be setting a precedent for the project in some ways, saying that if you", "tokens": [50652, 400, 341, 1062, 312, 3287, 257, 37388, 337, 264, 1716, 294, 512, 2098, 11, 1566, 300, 498, 291, 50860], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 225, "seek": 83206, "start": 841.9799999999999, "end": 847.02, "text": " want to sidestep some relatively serious security issues, you need to use image signatures.", "tokens": [50860, 528, 281, 20822, 377, 595, 512, 7226, 3156, 3825, 2663, 11, 291, 643, 281, 764, 3256, 32322, 13, 51112], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 226, "seek": 83206, "start": 847.02, "end": 850.7399999999999, "text": " Is this a reasonable thing to take on board or is it too restrictive?", "tokens": [51112, 1119, 341, 257, 10585, 551, 281, 747, 322, 3150, 420, 307, 309, 886, 43220, 30, 51298], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 227, "seek": 83206, "start": 850.7399999999999, "end": 854.54, "text": " Is it leaving aside certain use cases that are really valuable?", "tokens": [51298, 1119, 309, 5012, 7359, 1629, 764, 3331, 300, 366, 534, 8263, 30, 51488], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 228, "seek": 83206, "start": 854.54, "end": 857.18, "text": " I think that's something we still need to think about.", "tokens": [51488, 286, 519, 300, 311, 746, 321, 920, 643, 281, 519, 466, 13, 51620], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 229, "seek": 83206, "start": 857.18, "end": 860.9799999999999, "text": " Another thing is that I mentioned that this is not the only possible use of the host data.", "tokens": [51620, 3996, 551, 307, 300, 286, 2835, 300, 341, 307, 406, 264, 787, 1944, 764, 295, 264, 3975, 1412, 13, 51810], "temperature": 0.0, "avg_logprob": -0.14118539585786707, "compression_ratio": 1.7384615384615385, "no_speech_prob": 0.006487286649644375}, {"id": 230, "seek": 86098, "start": 860.98, "end": 864.0600000000001, "text": " So another thing we could do with the host data is that we could put workload-specific", "tokens": [50364, 407, 1071, 551, 321, 727, 360, 365, 264, 3975, 1412, 307, 300, 321, 727, 829, 20139, 12, 29258, 50518], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 231, "seek": 86098, "start": 864.0600000000001, "end": 866.5, "text": " information in the host data field.", "tokens": [50518, 1589, 294, 264, 3975, 1412, 2519, 13, 50640], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 232, "seek": 86098, "start": 866.5, "end": 871.14, "text": " For instance, we could put the measurement of the container image or something a little", "tokens": [50640, 1171, 5197, 11, 321, 727, 829, 264, 13160, 295, 264, 10129, 3256, 420, 746, 257, 707, 50872], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 233, "seek": 86098, "start": 871.14, "end": 874.66, "text": " bit more sophisticated that achieves the same thing.", "tokens": [50872, 857, 544, 16950, 300, 3538, 977, 264, 912, 551, 13, 51048], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 234, "seek": 86098, "start": 874.66, "end": 879.0600000000001, "text": " In my mind, I think that this is redundant to the image signatures, which have so far", "tokens": [51048, 682, 452, 1575, 11, 286, 519, 300, 341, 307, 40997, 281, 264, 3256, 32322, 11, 597, 362, 370, 1400, 51268], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 235, "seek": 86098, "start": 879.0600000000001, "end": 883.14, "text": " been really the main way that we've done measurement of the workload in this project.", "tokens": [51268, 668, 534, 264, 2135, 636, 300, 321, 600, 1096, 13160, 295, 264, 20139, 294, 341, 1716, 13, 51472], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 236, "seek": 86098, "start": 883.14, "end": 886.4200000000001, "text": " And I think one of the important takeaways from this presentation is that there's ways", "tokens": [51472, 400, 286, 519, 472, 295, 264, 1021, 45584, 490, 341, 5860, 307, 300, 456, 311, 2098, 51636], "temperature": 0.0, "avg_logprob": -0.09580991248122785, "compression_ratio": 1.8445229681978799, "no_speech_prob": 0.00020339066395536065}, {"id": 237, "seek": 88642, "start": 886.42, "end": 892.14, "text": " to resolve this attack without compromising on our ideas about decoupling measurement.", "tokens": [50364, 281, 14151, 341, 2690, 1553, 11482, 3436, 322, 527, 3487, 466, 979, 263, 11970, 13160, 13, 50650], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 238, "seek": 88642, "start": 892.14, "end": 895.42, "text": " And in fact, we can have a generic guest image.", "tokens": [50650, 400, 294, 1186, 11, 321, 393, 362, 257, 19577, 8341, 3256, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 239, "seek": 88642, "start": 895.42, "end": 901.86, "text": " We can still use signatures and all this stuff as long as we take a few precautions.", "tokens": [50814, 492, 393, 920, 764, 32322, 293, 439, 341, 1507, 382, 938, 382, 321, 747, 257, 1326, 34684, 13, 51136], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 240, "seek": 88642, "start": 901.86, "end": 906.4599999999999, "text": " But that said, I think it would solve the problem if we put workload-specific information", "tokens": [51136, 583, 300, 848, 11, 286, 519, 309, 576, 5039, 264, 1154, 498, 321, 829, 20139, 12, 29258, 1589, 51366], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 241, "seek": 88642, "start": 906.4599999999999, "end": 908.26, "text": " into the host data.", "tokens": [51366, 666, 264, 3975, 1412, 13, 51456], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 242, "seek": 88642, "start": 908.26, "end": 909.66, "text": " Okay.", "tokens": [51456, 1033, 13, 51526], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 243, "seek": 88642, "start": 909.66, "end": 913.02, "text": " I want to talk a little bit about SEVES.", "tokens": [51526, 286, 528, 281, 751, 257, 707, 857, 466, 10269, 53, 2358, 13, 51694], "temperature": 0.0, "avg_logprob": -0.1399296461933791, "compression_ratio": 1.5100401606425702, "no_speech_prob": 0.0010648940224200487}, {"id": 244, "seek": 91302, "start": 913.02, "end": 917.38, "text": " So far, I've been talking about S&P, which isn't even implemented yet, so this is another", "tokens": [50364, 407, 1400, 11, 286, 600, 668, 1417, 466, 318, 5, 47, 11, 597, 1943, 380, 754, 12270, 1939, 11, 370, 341, 307, 1071, 50582], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 245, "seek": 91302, "start": 917.38, "end": 920.34, "text": " reason why in some ways it's not actively exploitable.", "tokens": [50582, 1778, 983, 294, 512, 2098, 309, 311, 406, 13022, 12382, 16772, 13, 50730], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 246, "seek": 91302, "start": 920.34, "end": 925.62, "text": " With TDX, I think the current TDX implementation probably is vulnerable to this, although I'm", "tokens": [50730, 2022, 42606, 55, 11, 286, 519, 264, 2190, 42606, 55, 11420, 1391, 307, 10955, 281, 341, 11, 4878, 286, 478, 50994], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 247, "seek": 91302, "start": 925.62, "end": 927.6999999999999, "text": " not 100% sure about that.", "tokens": [50994, 406, 2319, 4, 988, 466, 300, 13, 51098], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 248, "seek": 91302, "start": 927.6999999999999, "end": 931.26, "text": " What we've got currently on the SEVES side is SEVES.", "tokens": [51098, 708, 321, 600, 658, 4362, 322, 264, 10269, 53, 2358, 1252, 307, 10269, 53, 2358, 13, 51276], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 249, "seek": 91302, "start": 931.26, "end": 934.74, "text": " And here, the story is sort of better and sort of worse.", "tokens": [51276, 400, 510, 11, 264, 1657, 307, 1333, 295, 1101, 293, 1333, 295, 5324, 13, 51450], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 250, "seek": 91302, "start": 934.74, "end": 940.02, "text": " I'm not going to go into all the details here, but the important thing is that the connection", "tokens": [51450, 286, 478, 406, 516, 281, 352, 666, 439, 264, 4365, 510, 11, 457, 264, 1021, 551, 307, 300, 264, 4984, 51714], "temperature": 0.0, "avg_logprob": -0.13511139154434204, "compression_ratio": 1.6082474226804124, "no_speech_prob": 0.022275488823652267}, {"id": 251, "seek": 94002, "start": 940.02, "end": 943.66, "text": " to the KBS is actually made from the host, right?", "tokens": [50364, 281, 264, 591, 8176, 307, 767, 1027, 490, 264, 3975, 11, 558, 30, 50546], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 252, "seek": 94002, "start": 943.66, "end": 948.1, "text": " Because with SEV and SEVES, we use preadastation, which is driven by the host.", "tokens": [50546, 1436, 365, 10269, 53, 293, 10269, 53, 2358, 11, 321, 764, 659, 345, 525, 399, 11, 597, 307, 9555, 538, 264, 3975, 13, 50768], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 253, "seek": 94002, "start": 948.1, "end": 951.46, "text": " So again, connection is made by the host, not inside the guest, which means it's very", "tokens": [50768, 407, 797, 11, 4984, 307, 1027, 538, 264, 3975, 11, 406, 1854, 264, 8341, 11, 597, 1355, 309, 311, 588, 50936], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 254, "seek": 94002, "start": 951.46, "end": 952.62, "text": " hard to regulate.", "tokens": [50936, 1152, 281, 24475, 13, 50994], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 255, "seek": 94002, "start": 952.62, "end": 955.98, "text": " This thing I was talking about earlier where we check that the KBS is going to match a", "tokens": [50994, 639, 551, 286, 390, 1417, 466, 3071, 689, 321, 1520, 300, 264, 591, 8176, 307, 516, 281, 2995, 257, 51162], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 256, "seek": 94002, "start": 955.98, "end": 958.98, "text": " certain field or anything like that, it's not going to work because it's all happening", "tokens": [51162, 1629, 2519, 420, 1340, 411, 300, 11, 309, 311, 406, 516, 281, 589, 570, 309, 311, 439, 2737, 51312], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 257, "seek": 94002, "start": 958.98, "end": 962.5, "text": " in the untrusted realm.", "tokens": [51312, 294, 264, 1701, 81, 6589, 15355, 13, 51488], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 258, "seek": 94002, "start": 962.5, "end": 968.54, "text": " Unfortunately, we also don't really have the ability to revoke a connection inside the", "tokens": [51488, 8590, 11, 321, 611, 500, 380, 534, 362, 264, 3485, 281, 3698, 2949, 257, 4984, 1854, 264, 51790], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 259, "seek": 94002, "start": 968.54, "end": 969.54, "text": " guest.", "tokens": [51790, 8341, 13, 51840], "temperature": 0.0, "avg_logprob": -0.13818180644428812, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.016398413106799126}, {"id": 260, "seek": 96954, "start": 970.42, "end": 974.2199999999999, "text": " The first solution that I mentioned, where we say no more attestation reports, we can't", "tokens": [50408, 440, 700, 3827, 300, 286, 2835, 11, 689, 321, 584, 572, 544, 951, 377, 399, 7122, 11, 321, 393, 380, 50598], "temperature": 0.0, "avg_logprob": -0.15789596433561992, "compression_ratio": 1.8339920948616601, "no_speech_prob": 0.0028002243489027023}, {"id": 261, "seek": 96954, "start": 974.2199999999999, "end": 980.4599999999999, "text": " really do that with SEV in the same way using the online KBS that we currently have.", "tokens": [50598, 534, 360, 300, 365, 10269, 53, 294, 264, 912, 636, 1228, 264, 2950, 591, 8176, 300, 321, 4362, 362, 13, 50910], "temperature": 0.0, "avg_logprob": -0.15789596433561992, "compression_ratio": 1.8339920948616601, "no_speech_prob": 0.0028002243489027023}, {"id": 262, "seek": 96954, "start": 980.4599999999999, "end": 983.78, "text": " So essentially, the two main solutions that have been proposed of the host data, that", "tokens": [50910, 407, 4476, 11, 264, 732, 2135, 6547, 300, 362, 668, 10348, 295, 264, 3975, 1412, 11, 300, 51076], "temperature": 0.0, "avg_logprob": -0.15789596433561992, "compression_ratio": 1.8339920948616601, "no_speech_prob": 0.0028002243489027023}, {"id": 263, "seek": 96954, "start": 983.78, "end": 990.86, "text": " won't really work for SEV and the revoking the attestation reports, that isn't really", "tokens": [51076, 1582, 380, 534, 589, 337, 10269, 53, 293, 264, 3698, 5953, 264, 951, 377, 399, 7122, 11, 300, 1943, 380, 534, 51430], "temperature": 0.0, "avg_logprob": -0.15789596433561992, "compression_ratio": 1.8339920948616601, "no_speech_prob": 0.0028002243489027023}, {"id": 264, "seek": 96954, "start": 990.86, "end": 993.66, "text": " going to work for SEV either.", "tokens": [51430, 516, 281, 589, 337, 10269, 53, 2139, 13, 51570], "temperature": 0.0, "avg_logprob": -0.15789596433561992, "compression_ratio": 1.8339920948616601, "no_speech_prob": 0.0028002243489027023}, {"id": 265, "seek": 96954, "start": 993.66, "end": 997.9, "text": " The good news is that the VM can only connect to one KBS at a time, just the way that the", "tokens": [51570, 440, 665, 2583, 307, 300, 264, 18038, 393, 787, 1745, 281, 472, 591, 8176, 412, 257, 565, 11, 445, 264, 636, 300, 264, 51782], "temperature": 0.0, "avg_logprob": -0.15789596433561992, "compression_ratio": 1.8339920948616601, "no_speech_prob": 0.0028002243489027023}, {"id": 266, "seek": 99790, "start": 997.9, "end": 1003.78, "text": " online KBS is implemented, you inject a connection to a very particular KBS.", "tokens": [50364, 2950, 591, 8176, 307, 12270, 11, 291, 10711, 257, 4984, 281, 257, 588, 1729, 591, 8176, 13, 50658], "temperature": 0.0, "avg_logprob": -0.11197535535122485, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.004198216367512941}, {"id": 267, "seek": 99790, "start": 1003.78, "end": 1007.3, "text": " Now you could target someone else's KBS here potentially, so the attack still exists, but", "tokens": [50658, 823, 291, 727, 3779, 1580, 1646, 311, 591, 8176, 510, 7263, 11, 370, 264, 2690, 920, 8198, 11, 457, 50834], "temperature": 0.0, "avg_logprob": -0.11197535535122485, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.004198216367512941}, {"id": 268, "seek": 99790, "start": 1007.3, "end": 1015.3, "text": " it can only be carried out targeting one KBS per guest, if that's any consolation.", "tokens": [50834, 309, 393, 787, 312, 9094, 484, 17918, 472, 591, 8176, 680, 8341, 11, 498, 300, 311, 604, 16054, 399, 13, 51234], "temperature": 0.0, "avg_logprob": -0.11197535535122485, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.004198216367512941}, {"id": 269, "seek": 99790, "start": 1015.3, "end": 1021.5, "text": " So in some ways, the attack is a little bit less severe, but it's probably harder to mitigate,", "tokens": [51234, 407, 294, 512, 2098, 11, 264, 2690, 307, 257, 707, 857, 1570, 8922, 11, 457, 309, 311, 1391, 6081, 281, 27336, 11, 51544], "temperature": 0.0, "avg_logprob": -0.11197535535122485, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.004198216367512941}, {"id": 270, "seek": 99790, "start": 1021.5, "end": 1022.5, "text": " to be honest.", "tokens": [51544, 281, 312, 3245, 13, 51594], "temperature": 0.0, "avg_logprob": -0.11197535535122485, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.004198216367512941}, {"id": 271, "seek": 102250, "start": 1022.58, "end": 1031.74, "text": " So I am still thinking about the best way to address this with SEV and SEVES.", "tokens": [50368, 407, 286, 669, 920, 1953, 466, 264, 1151, 636, 281, 2985, 341, 365, 10269, 53, 293, 10269, 53, 2358, 13, 50826], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 272, "seek": 102250, "start": 1031.74, "end": 1033.7, "text": " So what can we take away from this?", "tokens": [50826, 407, 437, 393, 321, 747, 1314, 490, 341, 30, 50924], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 273, "seek": 102250, "start": 1033.7, "end": 1036.18, "text": " First I want to mention some general things.", "tokens": [50924, 2386, 286, 528, 281, 2152, 512, 2674, 721, 13, 51048], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 274, "seek": 102250, "start": 1036.18, "end": 1041.7, "text": " For one thing, we realize here that the capability of generating a valid attestation report or", "tokens": [51048, 1171, 472, 551, 11, 321, 4325, 510, 300, 264, 13759, 295, 17746, 257, 7363, 951, 377, 399, 2275, 420, 51324], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 275, "seek": 102250, "start": 1041.7, "end": 1045.18, "text": " valid hardware evidence is precious and needs to be protected.", "tokens": [51324, 7363, 8837, 4467, 307, 12406, 293, 2203, 281, 312, 10594, 13, 51498], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 276, "seek": 102250, "start": 1045.18, "end": 1049.38, "text": " When I say valid here, I don't mean generating an attestation report that has a signature", "tokens": [51498, 1133, 286, 584, 7363, 510, 11, 286, 500, 380, 914, 17746, 364, 951, 377, 399, 2275, 300, 575, 257, 13397, 51708], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 277, "seek": 102250, "start": 1049.38, "end": 1050.38, "text": " that checks out.", "tokens": [51708, 300, 13834, 484, 13, 51758], "temperature": 0.0, "avg_logprob": -0.1394263020268193, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.0034823778551071882}, {"id": 278, "seek": 105038, "start": 1050.38, "end": 1056.66, "text": " I mean generating an attestation report that will convince someone's KBS to give you secrets.", "tokens": [50364, 286, 914, 17746, 364, 951, 377, 399, 2275, 300, 486, 13447, 1580, 311, 591, 8176, 281, 976, 291, 14093, 13, 50678], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 279, "seek": 105038, "start": 1056.66, "end": 1060.6200000000001, "text": " Being able to do that, like I said, extremely precious.", "tokens": [50678, 8891, 1075, 281, 360, 300, 11, 411, 286, 848, 11, 4664, 12406, 13, 50876], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 280, "seek": 105038, "start": 1060.6200000000001, "end": 1064.14, "text": " So let's think, how are we protecting this?", "tokens": [50876, 407, 718, 311, 519, 11, 577, 366, 321, 12316, 341, 30, 51052], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 281, "seek": 105038, "start": 1064.14, "end": 1067.94, "text": " For us, a big part of this is that we realize that our protection against this wasn't a", "tokens": [51052, 1171, 505, 11, 257, 955, 644, 295, 341, 307, 300, 321, 4325, 300, 527, 6334, 1970, 341, 2067, 380, 257, 51242], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 282, "seek": 105038, "start": 1067.94, "end": 1068.94, "text": " hardware protection.", "tokens": [51242, 8837, 6334, 13, 51292], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 283, "seek": 105038, "start": 1068.94, "end": 1074.6200000000001, "text": " Really, instead it was the software protection of the API between the workload container", "tokens": [51292, 4083, 11, 2602, 309, 390, 264, 4722, 6334, 295, 264, 9362, 1296, 264, 20139, 10129, 51576], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 284, "seek": 105038, "start": 1074.6200000000001, "end": 1078.5400000000002, "text": " and the guest.", "tokens": [51576, 293, 264, 8341, 13, 51772], "temperature": 0.0, "avg_logprob": -0.14725087670718923, "compression_ratio": 1.6175298804780875, "no_speech_prob": 0.006288453470915556}, {"id": 285, "seek": 107854, "start": 1078.54, "end": 1084.42, "text": " It's also important to think what happens if these protections should fail, right?", "tokens": [50364, 467, 311, 611, 1021, 281, 519, 437, 2314, 498, 613, 29031, 820, 3061, 11, 558, 30, 50658], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 286, "seek": 107854, "start": 1084.42, "end": 1088.46, "text": " Especially in our case where, again, it's not hardware protection, it's software protection.", "tokens": [50658, 8545, 294, 527, 1389, 689, 11, 797, 11, 309, 311, 406, 8837, 6334, 11, 309, 311, 4722, 6334, 13, 50860], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 287, "seek": 107854, "start": 1088.46, "end": 1093.02, "text": " What happens if somebody does breach that and gain the ability to generate so-called", "tokens": [50860, 708, 2314, 498, 2618, 775, 31086, 300, 293, 6052, 264, 3485, 281, 8460, 370, 12, 11880, 51088], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 288, "seek": 107854, "start": 1093.02, "end": 1094.86, "text": " valid evidence?", "tokens": [51088, 7363, 4467, 30, 51180], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 289, "seek": 107854, "start": 1094.86, "end": 1098.46, "text": " Is it the case that they can attack anyone, right?", "tokens": [51180, 1119, 309, 264, 1389, 300, 436, 393, 2690, 2878, 11, 558, 30, 51360], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 290, "seek": 107854, "start": 1098.46, "end": 1100.86, "text": " There's some dangers of having a very generic measurement.", "tokens": [51360, 821, 311, 512, 27701, 295, 1419, 257, 588, 19577, 13160, 13, 51480], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 291, "seek": 107854, "start": 1100.86, "end": 1104.82, "text": " We need to be careful in having a generic guest measurement and make sure that that doesn't", "tokens": [51480, 492, 643, 281, 312, 5026, 294, 1419, 257, 19577, 8341, 13160, 293, 652, 988, 300, 300, 1177, 380, 51678], "temperature": 0.0, "avg_logprob": -0.1550757090250651, "compression_ratio": 1.7445255474452555, "no_speech_prob": 0.04738938808441162}, {"id": 292, "seek": 110482, "start": 1104.82, "end": 1110.22, "text": " mean that it's easy to impersonate some other person using confidential containers and convince", "tokens": [50364, 914, 300, 309, 311, 1858, 281, 38147, 473, 512, 661, 954, 1228, 27054, 17089, 293, 13447, 50634], "temperature": 0.0, "avg_logprob": -0.10217478615897042, "compression_ratio": 1.7649402390438247, "no_speech_prob": 0.056623395532369614}, {"id": 293, "seek": 110482, "start": 1110.22, "end": 1113.86, "text": " some other person's KBS to give you their secrets.", "tokens": [50634, 512, 661, 954, 311, 591, 8176, 281, 976, 291, 641, 14093, 13, 50816], "temperature": 0.0, "avg_logprob": -0.10217478615897042, "compression_ratio": 1.7649402390438247, "no_speech_prob": 0.056623395532369614}, {"id": 294, "seek": 110482, "start": 1113.86, "end": 1119.54, "text": " There's a more complex underlying question here about the identity of a guest.", "tokens": [50816, 821, 311, 257, 544, 3997, 14217, 1168, 510, 466, 264, 6575, 295, 257, 8341, 13, 51100], "temperature": 0.0, "avg_logprob": -0.10217478615897042, "compression_ratio": 1.7649402390438247, "no_speech_prob": 0.056623395532369614}, {"id": 295, "seek": 110482, "start": 1119.54, "end": 1123.8999999999999, "text": " Confidential guests for a long time haven't really had much of an identity.", "tokens": [51100, 11701, 1078, 831, 9804, 337, 257, 938, 565, 2378, 380, 534, 632, 709, 295, 364, 6575, 13, 51318], "temperature": 0.0, "avg_logprob": -0.10217478615897042, "compression_ratio": 1.7649402390438247, "no_speech_prob": 0.056623395532369614}, {"id": 296, "seek": 110482, "start": 1123.8999999999999, "end": 1129.5, "text": " There haven't been many ways to give an identity to a guest.", "tokens": [51318, 821, 2378, 380, 668, 867, 2098, 281, 976, 364, 6575, 281, 257, 8341, 13, 51598], "temperature": 0.0, "avg_logprob": -0.10217478615897042, "compression_ratio": 1.7649402390438247, "no_speech_prob": 0.056623395532369614}, {"id": 297, "seek": 110482, "start": 1129.5, "end": 1133.58, "text": " In some ways, our project leans into that by having a generic guest measurement.", "tokens": [51598, 682, 512, 2098, 11, 527, 1716, 476, 599, 666, 300, 538, 1419, 257, 19577, 8341, 13160, 13, 51802], "temperature": 0.0, "avg_logprob": -0.10217478615897042, "compression_ratio": 1.7649402390438247, "no_speech_prob": 0.056623395532369614}, {"id": 298, "seek": 113358, "start": 1133.58, "end": 1136.86, "text": " But there's dangers in having no identity whatsoever.", "tokens": [50364, 583, 456, 311, 27701, 294, 1419, 572, 6575, 17076, 13, 50528], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 299, "seek": 113358, "start": 1136.86, "end": 1142.62, "text": " Now, still, I maintain that the decoupling of the workload measurement and the guest", "tokens": [50528, 823, 11, 920, 11, 286, 6909, 300, 264, 979, 263, 11970, 295, 264, 20139, 13160, 293, 264, 8341, 50816], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 300, "seek": 113358, "start": 1142.62, "end": 1144.9399999999998, "text": " measurement is a good idea.", "tokens": [50816, 13160, 307, 257, 665, 1558, 13, 50932], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 301, "seek": 113358, "start": 1144.9399999999998, "end": 1149.46, "text": " And that having a fixed identity or an identity that corresponds exactly to the workload may", "tokens": [50932, 400, 300, 1419, 257, 6806, 6575, 420, 364, 6575, 300, 23249, 2293, 281, 264, 20139, 815, 51158], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 302, "seek": 113358, "start": 1149.46, "end": 1151.46, "text": " or may not be necessary.", "tokens": [51158, 420, 815, 406, 312, 4818, 13, 51258], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 303, "seek": 113358, "start": 1151.46, "end": 1156.06, "text": " But we do have to take precautions to make sure, for instance, that evidence isn't interchangeable", "tokens": [51258, 583, 321, 360, 362, 281, 747, 34684, 281, 652, 988, 11, 337, 5197, 11, 300, 4467, 1943, 380, 30358, 712, 51488], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 304, "seek": 113358, "start": 1156.06, "end": 1157.82, "text": " between KBSs.", "tokens": [51488, 1296, 591, 8176, 82, 13, 51576], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 305, "seek": 113358, "start": 1157.82, "end": 1158.82, "text": " Interesting.", "tokens": [51576, 14711, 13, 51626], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 306, "seek": 113358, "start": 1158.82, "end": 1162.46, "text": " A sort of meta note about all this is that you need to be careful about relying too much", "tokens": [51626, 316, 1333, 295, 19616, 3637, 466, 439, 341, 307, 300, 291, 643, 281, 312, 5026, 466, 24140, 886, 709, 51808], "temperature": 0.0, "avg_logprob": -0.1591371630058914, "compression_ratio": 1.6972789115646258, "no_speech_prob": 0.012425903230905533}, {"id": 307, "seek": 116246, "start": 1162.46, "end": 1163.58, "text": " on one trust model.", "tokens": [50364, 322, 472, 3361, 2316, 13, 50420], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 308, "seek": 116246, "start": 1163.58, "end": 1164.58, "text": " I showed the diagram earlier.", "tokens": [50420, 286, 4712, 264, 10686, 3071, 13, 50470], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 309, "seek": 116246, "start": 1164.58, "end": 1169.7, "text": " It's a diagram that tons of people had spent a lot of time staring at and thinking about.", "tokens": [50470, 467, 311, 257, 10686, 300, 9131, 295, 561, 632, 4418, 257, 688, 295, 565, 18043, 412, 293, 1953, 466, 13, 50726], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 310, "seek": 116246, "start": 1169.7, "end": 1173.18, "text": " But we've mainly been thinking about the trust model in terms of protecting the workload", "tokens": [50726, 583, 321, 600, 8704, 668, 1953, 466, 264, 3361, 2316, 294, 2115, 295, 12316, 264, 20139, 50900], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 311, "seek": 116246, "start": 1173.18, "end": 1174.54, "text": " container.", "tokens": [50900, 10129, 13, 50968], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 312, "seek": 116246, "start": 1174.54, "end": 1178.6200000000001, "text": " It hadn't occurred to us that you also need to think about the protecting the ability", "tokens": [50968, 467, 8782, 380, 11068, 281, 505, 300, 291, 611, 643, 281, 519, 466, 264, 12316, 264, 3485, 51172], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 313, "seek": 116246, "start": 1178.6200000000001, "end": 1182.94, "text": " to generate evidence from everyone, protect it from everyone, including protecting it", "tokens": [51172, 281, 8460, 4467, 490, 1518, 11, 2371, 309, 490, 1518, 11, 3009, 12316, 309, 51388], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 314, "seek": 116246, "start": 1182.94, "end": 1184.74, "text": " from the workload.", "tokens": [51388, 490, 264, 20139, 13, 51478], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 315, "seek": 116246, "start": 1184.74, "end": 1189.78, "text": " Finally, a few things that are a little more specific to the project.", "tokens": [51478, 6288, 11, 257, 1326, 721, 300, 366, 257, 707, 544, 2685, 281, 264, 1716, 13, 51730], "temperature": 0.0, "avg_logprob": -0.13519699032567128, "compression_ratio": 1.8867924528301887, "no_speech_prob": 0.009706217795610428}, {"id": 316, "seek": 118978, "start": 1189.78, "end": 1194.18, "text": " I do want to classify, again, that this is, in some ways, pretty serious, but also not", "tokens": [50364, 286, 360, 528, 281, 33872, 11, 797, 11, 300, 341, 307, 11, 294, 512, 2098, 11, 1238, 3156, 11, 457, 611, 406, 50584], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 317, "seek": 118978, "start": 1194.18, "end": 1196.1, "text": " actively exploitable, pretty fixable.", "tokens": [50584, 13022, 12382, 16772, 11, 1238, 3191, 712, 13, 50680], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 318, "seek": 118978, "start": 1196.1, "end": 1197.5, "text": " So we will work to get this fixed.", "tokens": [50680, 407, 321, 486, 589, 281, 483, 341, 6806, 13, 50750], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 319, "seek": 118978, "start": 1197.5, "end": 1201.54, "text": " We're working on the S&P implementation right now, and it will contain some of these mitigations.", "tokens": [50750, 492, 434, 1364, 322, 264, 318, 5, 47, 11420, 558, 586, 11, 293, 309, 486, 5304, 512, 295, 613, 15699, 763, 13, 50952], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 320, "seek": 118978, "start": 1201.54, "end": 1206.3799999999999, "text": " It has not yet been decided exactly which, if you have any ideas for this, please let", "tokens": [50952, 467, 575, 406, 1939, 668, 3047, 2293, 597, 11, 498, 291, 362, 604, 3487, 337, 341, 11, 1767, 718, 51194], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 321, "seek": 118978, "start": 1206.3799999999999, "end": 1207.3799999999999, "text": " me know.", "tokens": [51194, 385, 458, 13, 51244], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 322, "seek": 118978, "start": 1207.3799999999999, "end": 1209.1399999999999, "text": " This is still a relatively young project.", "tokens": [51244, 639, 307, 920, 257, 7226, 2037, 1716, 13, 51332], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 323, "seek": 118978, "start": 1209.1399999999999, "end": 1215.22, "text": " And we get confidence in the security of our project by going through things like this.", "tokens": [51332, 400, 321, 483, 6687, 294, 264, 3825, 295, 527, 1716, 538, 516, 807, 721, 411, 341, 13, 51636], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 324, "seek": 118978, "start": 1215.22, "end": 1219.58, "text": " And at an early stage where it's relatively harmless, it's good to discover these things.", "tokens": [51636, 400, 412, 364, 2440, 3233, 689, 309, 311, 7226, 40160, 11, 309, 311, 665, 281, 4411, 613, 721, 13, 51854], "temperature": 0.0, "avg_logprob": -0.11958869622678173, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.05180685222148895}, {"id": 325, "seek": 121958, "start": 1220.3799999999999, "end": 1225.54, "text": " So if you have any ideas or any questions, please let me know.", "tokens": [50404, 407, 498, 291, 362, 604, 3487, 420, 604, 1651, 11, 1767, 718, 385, 458, 13, 50662], "temperature": 0.0, "avg_logprob": -0.34810543060302734, "compression_ratio": 1.161904761904762, "no_speech_prob": 0.17938949167728424}, {"id": 326, "seek": 121958, "start": 1225.54, "end": 1228.6599999999999, "text": " And let's keep the discussion moving forward on this topic.", "tokens": [50662, 400, 718, 311, 1066, 264, 5017, 2684, 2128, 322, 341, 4829, 13, 50818], "temperature": 0.0, "avg_logprob": -0.34810543060302734, "compression_ratio": 1.161904761904762, "no_speech_prob": 0.17938949167728424}], "language": "en"}