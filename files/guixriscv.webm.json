{"text": " Hello everyone, this is Eke Starra and we're going to talk about the RISVive support on the Geeks Woodstrap or at least the bits I've been working on during this last year. So I'm a telecommunication engineer, I'm a freelance engineer or programmer working at LNQ.tech, which is just my website, I'm a Geeks user and a contributor so many things we're going to talk about today involve Geeks one way or the other and maybe you will remember me from the last year I gave this talk in the this talk you can see here as an as a recapitulation of my last year working on RISVive and as the result of that talk it comes when I'm what I'm going to introduce to you today. So last year I asked for the NNET grant which I mentioned in that talk and we didn't know if it was given or not at that time but now I can say the grant was was given and I've been working for that grant as a part-time during one year and this is the work I'm going to show you today. So the work was based on the bootstrapping process of Geeks or in general for other distros for the RISVive architecture. And yeah we're going to talk about what they did, what did I did I leave for the future, how can how it can be improved and these kind of things. So if you want to read a longer version you have here in the bottom my blog and in my blog there's a series of posts describing every single comment I did so maybe read that one if you want to go into the details. In this talk we're going to just to take a look to a couple of these comments in a very high level way. So let's introduce the bootstrapping issue and why this is important right. So we have free software and we love it right because it lets us audit our programs, we can read the source code of our programs and we can check if we like what they do or if we don't like it. But when we start to have software distributions some other problems appear. For example if a distribution maintainer or someone working in the distribution decides to replace the binaries that are given to us through the package manager with other binaries that have some kind of vulnerabilities or stuff like that they could do that. And we have no way to match the source code we are we suppose that that binary is using we can't really match it to the binary so we don't know this relation right. In geeks we have reproducibility so if the geeks maintainers for a reason imagine they decide to give us the wrong binaries we can always challenge the binaries or from the substitutes and we can check if the result of those binaries that the binaries they are giving to us and the ones we can build ourselves are the same. That's interesting and it's very interesting in many other areas that we're not going to cover but this is only protecting us from people being evil but sometimes a program can be evil too. Imagine this compiler this evil compiler that has sunglasses it decides to introduce vulnerabilities or malware in our final binaries we can think that as we compile the software ourselves the binary is going to have only the functionalities that we can see in the source code but in fact the compiler can be introducing new functionalities that may harm us as a user so the reproducibility here will only ensure that we are going to reproduce this environment here and make the same binary but that binary if the compiler is corrupt in the reproducibility case we are just going to reproduce the same corrupt binaries so we need something else to make sure that the compilers we use are not corrupt because we don't really know and this kind of attack is described by Ken Thompson the one of the authors of UNIX in a paper that is called Reflections on Trust in Trust so you can take a look into it there's a link here to how this one's done in real life so we have to remember that the compilers are also programmed so this issue is recursive if we want we could make a compiler that introduces new this corruption in the next program that is built using it and if the next program is a compiler it could introduce this to reproduce itself so the problem might be here in this compiler but it might be here and this corrupt compiler can introduce the vulnerabilities to the next one so the problem we have here is much deeper it's a recursive problem because the compiler has to be compiled so what's the exit point of this recursion right so imagine we could make a compiler imagine we are just in the realm of the ideas and imagination if we could make a compiler that is just sure that doesn't have to be processed so if we write something in a in a language that doesn't have to be processed that is sure directly for example that would mean we don't need to add this this this arrow here so the conversion between the source and the compiler would be just one line with no no extra things so we could break this thing so we're going to mention some projects that do that in and we're going to introduce that how does it work in real life so that way we could break this problem right this recursion would be stopped so in practice the new linux distributions they are just given as many preview binaries including bus etc and many others so they have to trust all those all those binaries as they don't have any kind of malware inside right they are trusting the ones who build those problems and not only that they are trusting also the compilers that build those programs so there are many layers of trust there because the compilers that compile those software they are also being trusted so it's really hard to know which is who is compiling each thing and where does the compiler they are using coming it's coming from right so there are many issues with that so what we know in practice is that we can compile most of the world using a powerful compiler as ccc so we can base our research or our story on gcc and once we fix the buddhist applicability issue in gcc as everything or mostly everything comes from from a c program or from a c compiler we can bootstrap everything from there so the problem is we can't use a pre-built compiler for building gcc because of the thing i've been talking about during this this minute so the key here is who is compiling the compiler right so if we go to gcc and if we want to compile the world we have a dependency with this which is obviously gcc but gcc also requires a compiler to be built and normally that compiler is going to be what gcc a previous version of that and that gcc it's also going to require another compiler who's who's probably going to be gcc and that also going it's also going to need another compiler which is also going to be a gcc and so on so if we follow these points we are we are just realizing that we don't really know who built the first gcc in this list and probably the first one was just a program written assembly or whatever during the 80s we don't really know so we have to break this this recursion somewhere right so there's there are also a lot of libraries here in the middle it's kind of complex right so we have to make a a project that is a very simple compiler that's able to start this this chain of compilations and just break everything adding one point that that doesn't really need to be trusted right that we can add it and this is this exists already and this is what we have in gigs nowadays so we have the world which is with the world we mean all the all the packages in the world more or less we have a modern gcc that is able to build most of that we have a gcc 7.5 building the modern gcc we have a gcc 4 building that gcc 7 we have a gcc dot 95 building that we have a tiny c compiler in this case you see we are not using gcc anymore so we use a tiny c compiler which is a very small c compiler we use that to build the gcc in our case we are also using in the middle in the middle here somewhere with the strap all tiny c compiler which is a simplified version of tiny cc which is buildable using GNU mesh so we can build it using sorry we can build it using GNU mesh and we also have a state zero bo6 which is a a set of tools that are written in directly in source code so we don't really need to trust any binary and from there we can build a very simple compiler right so with that simple compiler we can just build GNU mesh and with that build the world right so let's let me introduce these these these two projects because maybe you don't know them very well those are very easy to understand the areas gcc c compiler and and a tiny tiny cc which is also a c compiler but these these two are a little bit complex so the case the case of the GNU mesh GNU mesh is a project that has like two legs right one of the legs is an scheme interpreter and the other leg is a c compiler so the c compiler is designed so it's able to build the scheme interpreter and the scheme interpreter is designed so it can interpret the c compiler right so in the end what we have is an scheme interpreter written in c and a c compiler written in a scheme and they are self-hosted right no self-hosted no they are mutually hosted so the scheme interpreter can interpret the c compiler and the other way around so they don't rely on themselves but in the other and the goal of this is to help to create a full bootstrap for unix like operating systems and this is what they are doing in in the case of kicks also the scheme interpreter is written in as you see is simple c and the c compiler is written in a scheme so the the most important part in this description that they just copied from the website and you can you can read more there is that they can be bootstrap using mesh to planet and messy tools these tools are also part from of state zero posix and state zero posix is that mini compiler thingy i told you that it's a literally source code so it starts in a very small seed you can see here like it's it's a 256 byte seed written directly in binary in a in a very in a little bit weird way to make it easier to to read but it's literally binary so we write that in binary and that is is small enough to be to be checked by the user to make sure that that binary is correct and then from that we can start building small tools until we build something that is near to a very simple c compiler so once we reach that we can build the new mess using that and from mess we are able to build a much bigger c compiler as a tiny cc and from from that one we can start building old gcc right so here you see this one is is relying on the kernel but there are other products that don't even trust the kernel so that's very interesting too so wrapping up there's no no corrupt compiler if there's only source code think about that so that's how we how we break the problem uh or how we break the that recursive so in the case of the ris 5 support this is the status of the ris 5 support uh one year ago when i started working on this we had like the world is not applicable because i mean the world there are many packages out there but we have uh in another project if ryan flasner is working on bringing the whole world to ris 5 on geeks so that's very interesting too we have modern gccs uh do have ris 5 support starting on 7.5 the older ones don't have any ris 5 support tiny cc does have uh ris 5 support but the bootstrap hour one no because it's fourth from a couple of years ago maybe four years ago or six years ago i don't remember so it doesn't have ris 5 support and genomes does does have some support but it's not but i've tested yet so this is the status of the project so the spoiler of what they did is that i've reported the go the ris 5 support to this gcc and i've reported the ris 5 support to this tiny c compiler and we're going to remove probably this one so we don't really need it so in that case it's like everything has ris 5 support now well not everything but kind of so what i did i started uh working on gcc so i went for gcc 4.6 and i started like putting all the the ris 5 support i had in a more modern gcc but in order to understand that we have to understand a little bit about how does gcc work gcc uses a model that is called debits on phraser and it's not the same model that we can see in most of the compilers we have read in books and stuff like that this one the intermediate representation of gcc is machine dependent and it's based on something that is called phraser's transfer language so in a very high level way what we have is a high level language imagine c c plus plus we read that we convert that to an ast that it is called jimple in this case in gcc i don't i don't remember the reason but there is a reason behind this name um that is converted to to rtl to the intermediate representation that is machine dependent this one is machine independent and we optimize on top of that we generate new rtl with other with other structure and that structure is matched against some rtl templates and from those we obtain the assembly right from the assembly onwards is just calling as the as the genu assembler and ld the genu linker so these conversions are kind of easy to do but but not really so the first one the gimbal to rtl conversion is is that using identifiers so if imagine that we have the gimbal instruction at so we are going to search for the rtl instruction called add and we're going to to just convert from one to the other in the case of the optimizations they are then checking some templates of the rtl so if we have several instructions together and we have an instruction that can do everything together we can we can expand or or compress instructions right there are some rules we'll have to write and then there is the rtl to assembly conversion that is described in all the rtl instruction we're going to see an example here so this is this is an example of an of a machine description file or a very small piece of a very big machine description file that you can find them in the gcc source code at gcc slash config slash the machine you want to use slash whatever dot md from machine description and this is how the instructions look so the instruction here is called add di3 the add is from the add instruction the di is from double integrals so it's for big integrals and the three is that is going to use three arguments so this is the one that is going to be matched against the identifiers in gimpel so the conversion is going to be like that then this is what this this instruction looks like this is predicate so this is only going to be used this instruction in the case that the target is a 64-bit target that's why that's because it's using a double integer this is the assembly code is going to generate this instruction and these are some attributes i don't really get about those so the behavior of the instruction is described here and it says you have to set the register operand zero you have to set it to the value of the plus of the register operand one and the arithmetic operand two that's the way it works so this add instruction has this meaning and these match operand parts are pieces that are going to be matched against the against the RTL code we have so first it's going to generate like a like a general RTL code and then it's going to match against these blocks and if the the match it's going to generate these assembly files per line so if we had another rule that is more specific than this one and that matches before this is not going to be matched and it's going to generate another assembly this is a little bit how it works so these files are processed c files are generated and these c files are included in the code of the gcc so that's the gcc build system which is really really complex so you can think that if all this is made in this kind of machine description files that are kind of a configuration file you can think okay so if you take these machine descriptor files from from a gcc that supports RISC5 and you move them to the older RISC5 that to the older gcc that doesn't support RISC5 it should work right it you should be able to just compile the gcc and make it work but reality is not that simple we also have other types of things to to to bring another target to gcc so one of them is the target description matrix and functions which is just a very big header file with a lot of things defined there and there are also libraries like libgcc and many others it's more complex more complex than it looks so my process here was just trying to solve the missing pieces of code i found here and there so what i did was exactly that i went to the gcc code base to repeat the commit where the RISC5 support was added to repeat that to the past and in the past i started fixing all the problems i was finding there were many there were missing i in a sense so i have to fix them or add new ones or use older constructs that were equivalent to those there were also some RTL constructs that didn't exist i had to make some extra predicates i had to convert all the new api to the cc api that we had in the past many many things then the harder one was the libgcc because that was related with the build system and the gcc build system is really complex so i didn't really understand how it worked but i finally i made it work somehow so you can read these two blog posts where i described the all the changes i had to make and i go pretty much in a in a very detailed way in the description so you you can go and read those if you're interested in the code itself so about tiny cc i had a similar issue but the the the git history wasn't that well described so i had to go and just take take some files try to overwrite and make it a little bit by hand um same thing uh i packaged everything for gigs to be able to reproduce the the the work i was doing in another computer and let my friends help me um yeah and just started reading the code from the modern tiny cc and started adding it to the old tiny cc that that was the base of our fork of the buddhistrapable tiny cc um it was really hard to do tiny cc is super hard to read for me has many many many variables that their name is only one character functions that their name is o or o f and stuff like that it's really really hard to to read but i managed to make it work i don't remember very well how so if you want to read about that you have this blog post that describes it in a little bit more of with a little bit more of detail um i don't recommend it either in this case i didn't really make a really really interesting work here here it was kind of complex so and the only thing missing in this one i think this one is pretty pretty well done the only thing missing some optimization code and we decided or i decided to leave it outside the project because it would affect other architectures too so the the only difference we have with the upstream code is this one right so the the left is a program compiled with the optimized version and the other is the the one the one i did the only difference you can see is the jump here in the 4c that doesn't really like doesn't have just one instruction it has distraction is doubled because the there's is not applying the optimization of cleaning this out after after this jump is is set it doesn't really matter that much to me at least so yeah it doesn't really matter because this instruction is not going to be called ever so it doesn't really change that much and this this this this compiler is not going to be a production compiler so it doesn't really really really matter so considering those both backends are kind of working and generating these five binaries there are some things that need to be done we have to remember that that i only worked on the backends and something i didn't tell you is that i in order to test them i was working in a in a cross-compile environment so i was working on my machine making binaries for ris 5 and i test the backends that way but we have to test all these things in in proper hardware to make sure that we can build one thing with the next and and make the whole chain work so for gcc we have to properly package it tested with c++ support with i didn't have time to test and fix all the libraries that can be missing on the c++ side then we can we have to describe how to build that using tiny cc directly because we had before we had gcc 2.95 in the middle and we don't have it available in in ris 5 we have to be able to build gcc 7.5 using the back ported one too in also in ris 5 for tiny cc we have to build the bootstrap old tiny cc using the new mesh um and we have to decide if we are going for the to use the upstream one or we are just going to use the bootstrap old tiny cc in a minute so there are some decisions to be made here in the case of mesh we have to review the ris 5 support which is something we didn't do yet but i think it's pretty pretty advanced so it should be easy to merge and in geeks from the geek side we have to package everything so everything is very well described and the steps for building one compiler with the other is well described in geeks so everyone can benefit and can use everyone can use it and in the end as an extra we have to do all this in real hardware so we don't have the problems over the cross compilation and stuff like that which are cool for testing but they are not cool if we want to make something that is useful in real life so as last words yes i'm just finishing um as you can imagine from the talk there's a lot of work to be done but most of it is just the result of the integration that needs to be done after all the time i've been working just bringing some of the the dots in this line to ris 5 so now the work that is missing is packaging and integrating everything and maybe i'm not the best guy for doing that so we are looking for a little bit more funding from an internet and i think internet is is open to give us some help on that and we are going to involve more more people doing this kind of work so if you like this kind of work you can also join us and help us do this and also i want to thank all the people that that was involved in this one because i had help from many people and some people um told me that they want to help me further so thank you very much to everyone and just need just to finish if you want to to join us or if you have any question uh or anything like that you have my email there and these are the relevant uh ioc channels you can you can join and also just to finish i know this is hard i know this is complex but if you want to join it and if you are open to learn new things fight against all compilers and some code that is not very easy to read sometimes i'll be there right i'll be there trying to help you and give you the psychological support that everyone needs sometimes so just just join it's going to be a lot of fun i promise so thank you very much bye bye thanks for being there we are live then okay that's great yeah okay let's answer some questions then yeah okay so uh there's a question about the hardware i'm using to compile so yeah the easiest answer is just i use my laptop i have a laptop which is not a very powerful one but it's not even it's a good one and i just use that i'm a very patient guy i i have to compile many gcc many times yeah yes patient yes wait to wait to finish and that's that's what i'm doing for the future we are looking on buying some risk risk five hardware in order to test all these things in native in a native machine but at the moment i'm just using my laptop so yeah that's that's the answer so um what does geeks and this project think about rust versus sea that's on the first oh that's a good question um i can't i can't talk on on the name of geeks but i can't talk about around myself uh rust is a cool language it's a fantastic language but it's it's it's huge so sometimes i think it's going to be really hard to bootstrap we had issues with that if i don't remember uh wrong right like we have to build it through gcc and start like the bootstrap in process is really complex right so yeah rust is cool but but for bootstrap in issue is is not the best and in the case of sea we have i think yeah we are the relationship has been cut off so yeah okay yeah you can continue your point in the chat here or someone shows in this in the talk room okay yeah what what do i have the link to the to the next room or how how is it is so if you're in the bringing this quite a big bootstrap room that is your talk specific room okay so people can come and interact with you here even when the other talks are going on okay yeah so thanks for speaking at the first time you guys thank you thank you for being there and helping me i'll catch you later then i'll move on to the next yeah bye bye you", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.72, "text": " Hello everyone, this is Eke Starra and we're going to talk about the RISVive support on", "tokens": [50364, 2425, 1518, 11, 341, 307, 462, 330, 5705, 424, 293, 321, 434, 516, 281, 751, 466, 264, 497, 2343, 53, 488, 1406, 322, 50900], "temperature": 0.0, "avg_logprob": -0.2515168984731038, "compression_ratio": 1.5, "no_speech_prob": 0.10657227039337158}, {"id": 1, "seek": 0, "start": 10.72, "end": 16.240000000000002, "text": " the Geeks Woodstrap or at least the bits I've been working on during this last year.", "tokens": [50900, 264, 2876, 24785, 11558, 372, 4007, 420, 412, 1935, 264, 9239, 286, 600, 668, 1364, 322, 1830, 341, 1036, 1064, 13, 51176], "temperature": 0.0, "avg_logprob": -0.2515168984731038, "compression_ratio": 1.5, "no_speech_prob": 0.10657227039337158}, {"id": 2, "seek": 0, "start": 16.240000000000002, "end": 20.98, "text": " So I'm a telecommunication engineer, I'm a freelance engineer or programmer working", "tokens": [51176, 407, 286, 478, 257, 4304, 25451, 8758, 11403, 11, 286, 478, 257, 47875, 11403, 420, 32116, 1364, 51413], "temperature": 0.0, "avg_logprob": -0.2515168984731038, "compression_ratio": 1.5, "no_speech_prob": 0.10657227039337158}, {"id": 3, "seek": 0, "start": 20.98, "end": 28.92, "text": " at LNQ.tech, which is just my website, I'm a Geeks user and a contributor so many things", "tokens": [51413, 412, 441, 45, 48, 13, 25970, 11, 597, 307, 445, 452, 3144, 11, 286, 478, 257, 2876, 24785, 4195, 293, 257, 42859, 370, 867, 721, 51810], "temperature": 0.0, "avg_logprob": -0.2515168984731038, "compression_ratio": 1.5, "no_speech_prob": 0.10657227039337158}, {"id": 4, "seek": 2892, "start": 28.92, "end": 34.120000000000005, "text": " we're going to talk about today involve Geeks one way or the other and maybe you", "tokens": [50364, 321, 434, 516, 281, 751, 466, 965, 9494, 2876, 24785, 472, 636, 420, 264, 661, 293, 1310, 291, 50624], "temperature": 0.0, "avg_logprob": -0.2239725761806842, "compression_ratio": 1.6318181818181818, "no_speech_prob": 0.013085420243442059}, {"id": 5, "seek": 2892, "start": 34.120000000000005, "end": 40.56, "text": " will remember me from the last year I gave this talk in the this talk you can see here as an", "tokens": [50624, 486, 1604, 385, 490, 264, 1036, 1064, 286, 2729, 341, 751, 294, 264, 341, 751, 291, 393, 536, 510, 382, 364, 50946], "temperature": 0.0, "avg_logprob": -0.2239725761806842, "compression_ratio": 1.6318181818181818, "no_speech_prob": 0.013085420243442059}, {"id": 6, "seek": 2892, "start": 40.56, "end": 49.64, "text": " as a recapitulation of my last year working on RISVive and as the result of that talk it comes", "tokens": [50946, 382, 257, 20928, 270, 2776, 295, 452, 1036, 1064, 1364, 322, 497, 2343, 53, 488, 293, 382, 264, 1874, 295, 300, 751, 309, 1487, 51400], "temperature": 0.0, "avg_logprob": -0.2239725761806842, "compression_ratio": 1.6318181818181818, "no_speech_prob": 0.013085420243442059}, {"id": 7, "seek": 2892, "start": 49.64, "end": 55.92, "text": " when I'm what I'm going to introduce to you today. So last year I asked for the NNET grant", "tokens": [51400, 562, 286, 478, 437, 286, 478, 516, 281, 5366, 281, 291, 965, 13, 407, 1036, 1064, 286, 2351, 337, 264, 426, 45, 4850, 6386, 51714], "temperature": 0.0, "avg_logprob": -0.2239725761806842, "compression_ratio": 1.6318181818181818, "no_speech_prob": 0.013085420243442059}, {"id": 8, "seek": 5592, "start": 55.92, "end": 62.2, "text": " which I mentioned in that talk and we didn't know if it was given or not at that time but now I", "tokens": [50364, 597, 286, 2835, 294, 300, 751, 293, 321, 994, 380, 458, 498, 309, 390, 2212, 420, 406, 412, 300, 565, 457, 586, 286, 50678], "temperature": 0.0, "avg_logprob": -0.1700588148467395, "compression_ratio": 1.6167400881057268, "no_speech_prob": 0.010901077650487423}, {"id": 9, "seek": 5592, "start": 62.2, "end": 70.56, "text": " can say the grant was was given and I've been working for that grant as a part-time during", "tokens": [50678, 393, 584, 264, 6386, 390, 390, 2212, 293, 286, 600, 668, 1364, 337, 300, 6386, 382, 257, 644, 12, 3766, 1830, 51096], "temperature": 0.0, "avg_logprob": -0.1700588148467395, "compression_ratio": 1.6167400881057268, "no_speech_prob": 0.010901077650487423}, {"id": 10, "seek": 5592, "start": 70.56, "end": 76.0, "text": " one year and this is the work I'm going to show you today. So the work was based on the", "tokens": [51096, 472, 1064, 293, 341, 307, 264, 589, 286, 478, 516, 281, 855, 291, 965, 13, 407, 264, 589, 390, 2361, 322, 264, 51368], "temperature": 0.0, "avg_logprob": -0.1700588148467395, "compression_ratio": 1.6167400881057268, "no_speech_prob": 0.010901077650487423}, {"id": 11, "seek": 5592, "start": 76.0, "end": 83.72, "text": " bootstrapping process of Geeks or in general for other distros for the RISVive architecture.", "tokens": [51368, 11450, 19639, 3759, 1399, 295, 2876, 24785, 420, 294, 2674, 337, 661, 1483, 2635, 337, 264, 497, 2343, 53, 488, 9482, 13, 51754], "temperature": 0.0, "avg_logprob": -0.1700588148467395, "compression_ratio": 1.6167400881057268, "no_speech_prob": 0.010901077650487423}, {"id": 12, "seek": 8372, "start": 84.72, "end": 90.96, "text": " And yeah we're going to talk about what they did, what did I did I leave for the future,", "tokens": [50414, 400, 1338, 321, 434, 516, 281, 751, 466, 437, 436, 630, 11, 437, 630, 286, 630, 286, 1856, 337, 264, 2027, 11, 50726], "temperature": 0.0, "avg_logprob": -0.19504352326088764, "compression_ratio": 1.6383928571428572, "no_speech_prob": 0.0066938200034201145}, {"id": 13, "seek": 8372, "start": 90.96, "end": 96.8, "text": " how can how it can be improved and these kind of things. So if you want to read a longer", "tokens": [50726, 577, 393, 577, 309, 393, 312, 9689, 293, 613, 733, 295, 721, 13, 407, 498, 291, 528, 281, 1401, 257, 2854, 51018], "temperature": 0.0, "avg_logprob": -0.19504352326088764, "compression_ratio": 1.6383928571428572, "no_speech_prob": 0.0066938200034201145}, {"id": 14, "seek": 8372, "start": 96.8, "end": 102.4, "text": " version you have here in the bottom my blog and in my blog there's a series of posts describing", "tokens": [51018, 3037, 291, 362, 510, 294, 264, 2767, 452, 6968, 293, 294, 452, 6968, 456, 311, 257, 2638, 295, 12300, 16141, 51298], "temperature": 0.0, "avg_logprob": -0.19504352326088764, "compression_ratio": 1.6383928571428572, "no_speech_prob": 0.0066938200034201145}, {"id": 15, "seek": 8372, "start": 102.4, "end": 107.44, "text": " every single comment I did so maybe read that one if you want to go into the details. In this", "tokens": [51298, 633, 2167, 2871, 286, 630, 370, 1310, 1401, 300, 472, 498, 291, 528, 281, 352, 666, 264, 4365, 13, 682, 341, 51550], "temperature": 0.0, "avg_logprob": -0.19504352326088764, "compression_ratio": 1.6383928571428572, "no_speech_prob": 0.0066938200034201145}, {"id": 16, "seek": 10744, "start": 107.44, "end": 115.88, "text": " talk we're going to just to take a look to a couple of these comments in a very high level way.", "tokens": [50364, 751, 321, 434, 516, 281, 445, 281, 747, 257, 574, 281, 257, 1916, 295, 613, 3053, 294, 257, 588, 1090, 1496, 636, 13, 50786], "temperature": 0.0, "avg_logprob": -0.15380003034454032, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.01212469395250082}, {"id": 17, "seek": 10744, "start": 115.88, "end": 121.8, "text": " So let's introduce the bootstrapping issue and why this is important right. So we have free", "tokens": [50786, 407, 718, 311, 5366, 264, 11450, 19639, 3759, 2734, 293, 983, 341, 307, 1021, 558, 13, 407, 321, 362, 1737, 51082], "temperature": 0.0, "avg_logprob": -0.15380003034454032, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.01212469395250082}, {"id": 18, "seek": 10744, "start": 121.8, "end": 127.0, "text": " software and we love it right because it lets us audit our programs, we can read the source code", "tokens": [51082, 4722, 293, 321, 959, 309, 558, 570, 309, 6653, 505, 17748, 527, 4268, 11, 321, 393, 1401, 264, 4009, 3089, 51342], "temperature": 0.0, "avg_logprob": -0.15380003034454032, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.01212469395250082}, {"id": 19, "seek": 10744, "start": 127.0, "end": 134.28, "text": " of our programs and we can check if we like what they do or if we don't like it. But when we", "tokens": [51342, 295, 527, 4268, 293, 321, 393, 1520, 498, 321, 411, 437, 436, 360, 420, 498, 321, 500, 380, 411, 309, 13, 583, 562, 321, 51706], "temperature": 0.0, "avg_logprob": -0.15380003034454032, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.01212469395250082}, {"id": 20, "seek": 13428, "start": 134.28, "end": 140.76, "text": " start to have software distributions some other problems appear. For example if a distribution", "tokens": [50364, 722, 281, 362, 4722, 37870, 512, 661, 2740, 4204, 13, 1171, 1365, 498, 257, 7316, 50688], "temperature": 0.0, "avg_logprob": -0.15935110162805627, "compression_ratio": 1.742081447963801, "no_speech_prob": 0.009569218382239342}, {"id": 21, "seek": 13428, "start": 140.76, "end": 147.0, "text": " maintainer or someone working in the distribution decides to replace the binaries that are given to", "tokens": [50688, 6909, 260, 420, 1580, 1364, 294, 264, 7316, 14898, 281, 7406, 264, 5171, 4889, 300, 366, 2212, 281, 51000], "temperature": 0.0, "avg_logprob": -0.15935110162805627, "compression_ratio": 1.742081447963801, "no_speech_prob": 0.009569218382239342}, {"id": 22, "seek": 13428, "start": 147.0, "end": 153.64, "text": " us through the package manager with other binaries that have some kind of vulnerabilities or stuff", "tokens": [51000, 505, 807, 264, 7372, 6598, 365, 661, 5171, 4889, 300, 362, 512, 733, 295, 37633, 420, 1507, 51332], "temperature": 0.0, "avg_logprob": -0.15935110162805627, "compression_ratio": 1.742081447963801, "no_speech_prob": 0.009569218382239342}, {"id": 23, "seek": 13428, "start": 153.64, "end": 161.88, "text": " like that they could do that. And we have no way to match the source code we are we suppose", "tokens": [51332, 411, 300, 436, 727, 360, 300, 13, 400, 321, 362, 572, 636, 281, 2995, 264, 4009, 3089, 321, 366, 321, 7297, 51744], "temperature": 0.0, "avg_logprob": -0.15935110162805627, "compression_ratio": 1.742081447963801, "no_speech_prob": 0.009569218382239342}, {"id": 24, "seek": 16188, "start": 162.04, "end": 167.64, "text": " that that binary is using we can't really match it to the binary so we don't know this relation", "tokens": [50372, 300, 300, 17434, 307, 1228, 321, 393, 380, 534, 2995, 309, 281, 264, 17434, 370, 321, 500, 380, 458, 341, 9721, 50652], "temperature": 0.0, "avg_logprob": -0.12737943815148395, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.0032625978346914053}, {"id": 25, "seek": 16188, "start": 167.64, "end": 175.48, "text": " right. In geeks we have reproducibility so if the geeks maintainers for a reason imagine they", "tokens": [50652, 558, 13, 682, 1519, 24785, 321, 362, 11408, 537, 39802, 370, 498, 264, 1519, 24785, 6909, 433, 337, 257, 1778, 3811, 436, 51044], "temperature": 0.0, "avg_logprob": -0.12737943815148395, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.0032625978346914053}, {"id": 26, "seek": 16188, "start": 175.48, "end": 181.16, "text": " decide to give us the wrong binaries we can always challenge the binaries or from the", "tokens": [51044, 4536, 281, 976, 505, 264, 2085, 5171, 4889, 321, 393, 1009, 3430, 264, 5171, 4889, 420, 490, 264, 51328], "temperature": 0.0, "avg_logprob": -0.12737943815148395, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.0032625978346914053}, {"id": 27, "seek": 16188, "start": 181.16, "end": 186.68, "text": " substitutes and we can check if the result of those binaries that the binaries they are giving to", "tokens": [51328, 26441, 1819, 293, 321, 393, 1520, 498, 264, 1874, 295, 729, 5171, 4889, 300, 264, 5171, 4889, 436, 366, 2902, 281, 51604], "temperature": 0.0, "avg_logprob": -0.12737943815148395, "compression_ratio": 1.7677725118483412, "no_speech_prob": 0.0032625978346914053}, {"id": 28, "seek": 18668, "start": 186.68, "end": 192.04000000000002, "text": " us and the ones we can build ourselves are the same. That's interesting and it's very interesting", "tokens": [50364, 505, 293, 264, 2306, 321, 393, 1322, 4175, 366, 264, 912, 13, 663, 311, 1880, 293, 309, 311, 588, 1880, 50632], "temperature": 0.0, "avg_logprob": -0.11271415334759337, "compression_ratio": 1.6497175141242937, "no_speech_prob": 0.0050932918675243855}, {"id": 29, "seek": 18668, "start": 192.04000000000002, "end": 201.0, "text": " in many other areas that we're not going to cover but this is only protecting us from people being", "tokens": [50632, 294, 867, 661, 3179, 300, 321, 434, 406, 516, 281, 2060, 457, 341, 307, 787, 12316, 505, 490, 561, 885, 51080], "temperature": 0.0, "avg_logprob": -0.11271415334759337, "compression_ratio": 1.6497175141242937, "no_speech_prob": 0.0050932918675243855}, {"id": 30, "seek": 18668, "start": 201.0, "end": 209.16, "text": " evil but sometimes a program can be evil too. Imagine this compiler this evil compiler that has", "tokens": [51080, 6724, 457, 2171, 257, 1461, 393, 312, 6724, 886, 13, 11739, 341, 31958, 341, 6724, 31958, 300, 575, 51488], "temperature": 0.0, "avg_logprob": -0.11271415334759337, "compression_ratio": 1.6497175141242937, "no_speech_prob": 0.0050932918675243855}, {"id": 31, "seek": 20916, "start": 209.24, "end": 220.35999999999999, "text": " sunglasses it decides to introduce vulnerabilities or malware in our final binaries we can think", "tokens": [50368, 28675, 309, 14898, 281, 5366, 37633, 420, 40747, 294, 527, 2572, 5171, 4889, 321, 393, 519, 50924], "temperature": 0.0, "avg_logprob": -0.08216777869633266, "compression_ratio": 1.664516129032258, "no_speech_prob": 0.00986538641154766}, {"id": 32, "seek": 20916, "start": 220.35999999999999, "end": 225.32, "text": " that as we compile the software ourselves the binary is going to have", "tokens": [50924, 300, 382, 321, 31413, 264, 4722, 4175, 264, 17434, 307, 516, 281, 362, 51172], "temperature": 0.0, "avg_logprob": -0.08216777869633266, "compression_ratio": 1.664516129032258, "no_speech_prob": 0.00986538641154766}, {"id": 33, "seek": 20916, "start": 227.72, "end": 234.04, "text": " only the functionalities that we can see in the source code but in fact the compiler can be", "tokens": [51292, 787, 264, 11745, 1088, 300, 321, 393, 536, 294, 264, 4009, 3089, 457, 294, 1186, 264, 31958, 393, 312, 51608], "temperature": 0.0, "avg_logprob": -0.08216777869633266, "compression_ratio": 1.664516129032258, "no_speech_prob": 0.00986538641154766}, {"id": 34, "seek": 23404, "start": 234.04, "end": 242.6, "text": " introducing new functionalities that may harm us as a user so the reproducibility here will only", "tokens": [50364, 15424, 777, 11745, 1088, 300, 815, 6491, 505, 382, 257, 4195, 370, 264, 11408, 537, 39802, 510, 486, 787, 50792], "temperature": 0.0, "avg_logprob": -0.089008819489252, "compression_ratio": 1.9378238341968912, "no_speech_prob": 0.004554891958832741}, {"id": 35, "seek": 23404, "start": 243.95999999999998, "end": 249.32, "text": " ensure that we are going to reproduce this environment here and make the same binary but", "tokens": [50860, 5586, 300, 321, 366, 516, 281, 29501, 341, 2823, 510, 293, 652, 264, 912, 17434, 457, 51128], "temperature": 0.0, "avg_logprob": -0.089008819489252, "compression_ratio": 1.9378238341968912, "no_speech_prob": 0.004554891958832741}, {"id": 36, "seek": 23404, "start": 249.32, "end": 256.28, "text": " that binary if the compiler is corrupt in the reproducibility case we are just going to reproduce", "tokens": [51128, 300, 17434, 498, 264, 31958, 307, 17366, 294, 264, 11408, 537, 39802, 1389, 321, 366, 445, 516, 281, 29501, 51476], "temperature": 0.0, "avg_logprob": -0.089008819489252, "compression_ratio": 1.9378238341968912, "no_speech_prob": 0.004554891958832741}, {"id": 37, "seek": 23404, "start": 256.28, "end": 261.96, "text": " the same corrupt binaries so we need something else to make sure that the compilers we use", "tokens": [51476, 264, 912, 17366, 5171, 4889, 370, 321, 643, 746, 1646, 281, 652, 988, 300, 264, 715, 388, 433, 321, 764, 51760], "temperature": 0.0, "avg_logprob": -0.089008819489252, "compression_ratio": 1.9378238341968912, "no_speech_prob": 0.004554891958832741}, {"id": 38, "seek": 26196, "start": 262.91999999999996, "end": 269.56, "text": " are not corrupt because we don't really know and this kind of attack is described by Ken Thompson", "tokens": [50412, 366, 406, 17366, 570, 321, 500, 380, 534, 458, 293, 341, 733, 295, 2690, 307, 7619, 538, 8273, 23460, 50744], "temperature": 0.0, "avg_logprob": -0.1412051022052765, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.001588546670973301}, {"id": 39, "seek": 26196, "start": 269.56, "end": 277.4, "text": " the one of the authors of UNIX in a paper that is called Reflections on Trust in Trust so you", "tokens": [50744, 264, 472, 295, 264, 16552, 295, 8229, 21124, 294, 257, 3035, 300, 307, 1219, 16957, 1809, 626, 322, 11580, 294, 11580, 370, 291, 51136], "temperature": 0.0, "avg_logprob": -0.1412051022052765, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.001588546670973301}, {"id": 40, "seek": 26196, "start": 277.4, "end": 285.32, "text": " can take a look into it there's a link here to how this one's done in real life so we have to", "tokens": [51136, 393, 747, 257, 574, 666, 309, 456, 311, 257, 2113, 510, 281, 577, 341, 472, 311, 1096, 294, 957, 993, 370, 321, 362, 281, 51532], "temperature": 0.0, "avg_logprob": -0.1412051022052765, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.001588546670973301}, {"id": 41, "seek": 26196, "start": 285.32, "end": 291.15999999999997, "text": " remember that the compilers are also programmed so this issue is recursive if we want we could", "tokens": [51532, 1604, 300, 264, 715, 388, 433, 366, 611, 31092, 370, 341, 2734, 307, 20560, 488, 498, 321, 528, 321, 727, 51824], "temperature": 0.0, "avg_logprob": -0.1412051022052765, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.001588546670973301}, {"id": 42, "seek": 29116, "start": 291.16, "end": 299.56, "text": " make a compiler that introduces new this corruption in the next program that is built using it and", "tokens": [50364, 652, 257, 31958, 300, 31472, 777, 341, 17959, 294, 264, 958, 1461, 300, 307, 3094, 1228, 309, 293, 50784], "temperature": 0.0, "avg_logprob": -0.15226150771318855, "compression_ratio": 1.9225352112676057, "no_speech_prob": 0.009597624652087688}, {"id": 43, "seek": 29116, "start": 300.68, "end": 307.32000000000005, "text": " if the next program is a compiler it could introduce this to reproduce itself so the", "tokens": [50840, 498, 264, 958, 1461, 307, 257, 31958, 309, 727, 5366, 341, 281, 29501, 2564, 370, 264, 51172], "temperature": 0.0, "avg_logprob": -0.15226150771318855, "compression_ratio": 1.9225352112676057, "no_speech_prob": 0.009597624652087688}, {"id": 44, "seek": 29116, "start": 307.32000000000005, "end": 313.64000000000004, "text": " problem might be here in this compiler but it might be here and this corrupt compiler can", "tokens": [51172, 1154, 1062, 312, 510, 294, 341, 31958, 457, 309, 1062, 312, 510, 293, 341, 17366, 31958, 393, 51488], "temperature": 0.0, "avg_logprob": -0.15226150771318855, "compression_ratio": 1.9225352112676057, "no_speech_prob": 0.009597624652087688}, {"id": 45, "seek": 31364, "start": 313.64, "end": 321.56, "text": " introduce the vulnerabilities to the next one so the problem we have here is much deeper", "tokens": [50364, 5366, 264, 37633, 281, 264, 958, 472, 370, 264, 1154, 321, 362, 510, 307, 709, 7731, 50760], "temperature": 0.0, "avg_logprob": -0.10393874828632062, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.006618647836148739}, {"id": 46, "seek": 31364, "start": 321.56, "end": 326.44, "text": " it's a recursive problem because the compiler has to be compiled so what's the exit point of this", "tokens": [50760, 309, 311, 257, 20560, 488, 1154, 570, 264, 31958, 575, 281, 312, 36548, 370, 437, 311, 264, 11043, 935, 295, 341, 51004], "temperature": 0.0, "avg_logprob": -0.10393874828632062, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.006618647836148739}, {"id": 47, "seek": 31364, "start": 326.44, "end": 336.2, "text": " recursion right so imagine we could make a compiler imagine we are just in the realm of the ideas", "tokens": [51004, 20560, 313, 558, 370, 3811, 321, 727, 652, 257, 31958, 3811, 321, 366, 445, 294, 264, 15355, 295, 264, 3487, 51492], "temperature": 0.0, "avg_logprob": -0.10393874828632062, "compression_ratio": 1.6904761904761905, "no_speech_prob": 0.006618647836148739}, {"id": 48, "seek": 33620, "start": 336.2, "end": 344.52, "text": " and imagination if we could make a compiler that is just sure that doesn't have to be processed so", "tokens": [50364, 293, 12938, 498, 321, 727, 652, 257, 31958, 300, 307, 445, 988, 300, 1177, 380, 362, 281, 312, 18846, 370, 50780], "temperature": 0.0, "avg_logprob": -0.08513423298182113, "compression_ratio": 1.8792270531400965, "no_speech_prob": 0.009051023051142693}, {"id": 49, "seek": 33620, "start": 344.52, "end": 349.96, "text": " if we write something in a in a language that doesn't have to be processed that is sure directly", "tokens": [50780, 498, 321, 2464, 746, 294, 257, 294, 257, 2856, 300, 1177, 380, 362, 281, 312, 18846, 300, 307, 988, 3838, 51052], "temperature": 0.0, "avg_logprob": -0.08513423298182113, "compression_ratio": 1.8792270531400965, "no_speech_prob": 0.009051023051142693}, {"id": 50, "seek": 33620, "start": 349.96, "end": 359.32, "text": " for example that would mean we don't need to add this this this arrow here so the conversion", "tokens": [51052, 337, 1365, 300, 576, 914, 321, 500, 380, 643, 281, 909, 341, 341, 341, 11610, 510, 370, 264, 14298, 51520], "temperature": 0.0, "avg_logprob": -0.08513423298182113, "compression_ratio": 1.8792270531400965, "no_speech_prob": 0.009051023051142693}, {"id": 51, "seek": 33620, "start": 359.32, "end": 364.91999999999996, "text": " between the source and the compiler would be just one line with no no extra things so we could break", "tokens": [51520, 1296, 264, 4009, 293, 264, 31958, 576, 312, 445, 472, 1622, 365, 572, 572, 2857, 721, 370, 321, 727, 1821, 51800], "temperature": 0.0, "avg_logprob": -0.08513423298182113, "compression_ratio": 1.8792270531400965, "no_speech_prob": 0.009051023051142693}, {"id": 52, "seek": 36492, "start": 364.92, "end": 371.0, "text": " this thing so we're going to mention some projects that do that in and we're going to introduce that", "tokens": [50364, 341, 551, 370, 321, 434, 516, 281, 2152, 512, 4455, 300, 360, 300, 294, 293, 321, 434, 516, 281, 5366, 300, 50668], "temperature": 0.0, "avg_logprob": -0.13678691030918866, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0028360418509691954}, {"id": 53, "seek": 36492, "start": 371.0, "end": 376.92, "text": " how does it work in real life so that way we could break this problem right this recursion", "tokens": [50668, 577, 775, 309, 589, 294, 957, 993, 370, 300, 636, 321, 727, 1821, 341, 1154, 558, 341, 20560, 313, 50964], "temperature": 0.0, "avg_logprob": -0.13678691030918866, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0028360418509691954}, {"id": 54, "seek": 36492, "start": 376.92, "end": 384.04, "text": " would be stopped so in practice the new linux distributions they are just given as many", "tokens": [50964, 576, 312, 5936, 370, 294, 3124, 264, 777, 22896, 2449, 37870, 436, 366, 445, 2212, 382, 867, 51320], "temperature": 0.0, "avg_logprob": -0.13678691030918866, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0028360418509691954}, {"id": 55, "seek": 36492, "start": 384.04, "end": 391.48, "text": " preview binaries including bus etc and many others so they have to trust all those all those binaries", "tokens": [51320, 14281, 5171, 4889, 3009, 1255, 5183, 293, 867, 2357, 370, 436, 362, 281, 3361, 439, 729, 439, 729, 5171, 4889, 51692], "temperature": 0.0, "avg_logprob": -0.13678691030918866, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0028360418509691954}, {"id": 56, "seek": 39148, "start": 392.04, "end": 399.16, "text": " as they don't have any kind of malware inside right they are trusting the ones who build", "tokens": [50392, 382, 436, 500, 380, 362, 604, 733, 295, 40747, 1854, 558, 436, 366, 28235, 264, 2306, 567, 1322, 50748], "temperature": 0.0, "avg_logprob": -0.06255613727334106, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.005942477844655514}, {"id": 57, "seek": 39148, "start": 399.16, "end": 404.52000000000004, "text": " those problems and not only that they are trusting also the compilers that build those", "tokens": [50748, 729, 2740, 293, 406, 787, 300, 436, 366, 28235, 611, 264, 715, 388, 433, 300, 1322, 729, 51016], "temperature": 0.0, "avg_logprob": -0.06255613727334106, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.005942477844655514}, {"id": 58, "seek": 39148, "start": 404.52000000000004, "end": 410.44, "text": " programs so there are many layers of trust there because the compilers that compile those software", "tokens": [51016, 4268, 370, 456, 366, 867, 7914, 295, 3361, 456, 570, 264, 715, 388, 433, 300, 31413, 729, 4722, 51312], "temperature": 0.0, "avg_logprob": -0.06255613727334106, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.005942477844655514}, {"id": 59, "seek": 39148, "start": 410.44, "end": 416.68, "text": " they are also being trusted so it's really hard to know which is who is compiling", "tokens": [51312, 436, 366, 611, 885, 16034, 370, 309, 311, 534, 1152, 281, 458, 597, 307, 567, 307, 715, 4883, 51624], "temperature": 0.0, "avg_logprob": -0.06255613727334106, "compression_ratio": 1.913978494623656, "no_speech_prob": 0.005942477844655514}, {"id": 60, "seek": 41668, "start": 417.40000000000003, "end": 423.56, "text": " each thing and where does the compiler they are using coming it's coming from right so there are", "tokens": [50400, 1184, 551, 293, 689, 775, 264, 31958, 436, 366, 1228, 1348, 309, 311, 1348, 490, 558, 370, 456, 366, 50708], "temperature": 0.0, "avg_logprob": -0.2044259794465788, "compression_ratio": 1.7793427230046948, "no_speech_prob": 0.006395683623850346}, {"id": 61, "seek": 41668, "start": 423.56, "end": 429.08, "text": " many issues with that so what we know in practice is that we can compile most of the world using a", "tokens": [50708, 867, 2663, 365, 300, 370, 437, 321, 458, 294, 3124, 307, 300, 321, 393, 31413, 881, 295, 264, 1002, 1228, 257, 50984], "temperature": 0.0, "avg_logprob": -0.2044259794465788, "compression_ratio": 1.7793427230046948, "no_speech_prob": 0.006395683623850346}, {"id": 62, "seek": 41668, "start": 429.08, "end": 437.88, "text": " powerful compiler as ccc so we can base our research or our story on gcc and once we fix", "tokens": [50984, 4005, 31958, 382, 269, 1914, 370, 321, 393, 3096, 527, 2132, 420, 527, 1657, 322, 290, 1914, 293, 1564, 321, 3191, 51424], "temperature": 0.0, "avg_logprob": -0.2044259794465788, "compression_ratio": 1.7793427230046948, "no_speech_prob": 0.006395683623850346}, {"id": 63, "seek": 41668, "start": 437.88, "end": 443.96000000000004, "text": " the buddhist applicability issue in gcc as everything or mostly everything comes from from a c", "tokens": [51424, 264, 3265, 67, 33236, 2580, 2310, 2734, 294, 290, 1914, 382, 1203, 420, 5240, 1203, 1487, 490, 490, 257, 269, 51728], "temperature": 0.0, "avg_logprob": -0.2044259794465788, "compression_ratio": 1.7793427230046948, "no_speech_prob": 0.006395683623850346}, {"id": 64, "seek": 44396, "start": 444.59999999999997, "end": 450.52, "text": " program or from a c compiler we can bootstrap everything from there so the problem is we can't", "tokens": [50396, 1461, 420, 490, 257, 269, 31958, 321, 393, 11450, 372, 4007, 1203, 490, 456, 370, 264, 1154, 307, 321, 393, 380, 50692], "temperature": 0.0, "avg_logprob": -0.09401266773541768, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0032602986320853233}, {"id": 65, "seek": 44396, "start": 450.52, "end": 457.96, "text": " use a pre-built compiler for building gcc because of the thing i've been talking about during this", "tokens": [50692, 764, 257, 659, 12, 23018, 31958, 337, 2390, 290, 1914, 570, 295, 264, 551, 741, 600, 668, 1417, 466, 1830, 341, 51064], "temperature": 0.0, "avg_logprob": -0.09401266773541768, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0032602986320853233}, {"id": 66, "seek": 44396, "start": 457.96, "end": 467.56, "text": " this minute so the key here is who is compiling the compiler right so if we go to gcc and if we", "tokens": [51064, 341, 3456, 370, 264, 2141, 510, 307, 567, 307, 715, 4883, 264, 31958, 558, 370, 498, 321, 352, 281, 290, 1914, 293, 498, 321, 51544], "temperature": 0.0, "avg_logprob": -0.09401266773541768, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0032602986320853233}, {"id": 67, "seek": 44396, "start": 467.56, "end": 472.84, "text": " want to compile the world we have a dependency with this which is obviously gcc but gcc also", "tokens": [51544, 528, 281, 31413, 264, 1002, 321, 362, 257, 33621, 365, 341, 597, 307, 2745, 290, 1914, 457, 290, 1914, 611, 51808], "temperature": 0.0, "avg_logprob": -0.09401266773541768, "compression_ratio": 1.8018867924528301, "no_speech_prob": 0.0032602986320853233}, {"id": 68, "seek": 47284, "start": 472.84, "end": 478.28, "text": " requires a compiler to be built and normally that compiler is going to be what gcc a previous", "tokens": [50364, 7029, 257, 31958, 281, 312, 3094, 293, 5646, 300, 31958, 307, 516, 281, 312, 437, 290, 1914, 257, 3894, 50636], "temperature": 0.0, "avg_logprob": -0.06410990765220241, "compression_ratio": 2.0588235294117645, "no_speech_prob": 0.007091703824698925}, {"id": 69, "seek": 47284, "start": 478.28, "end": 484.03999999999996, "text": " version of that and that gcc it's also going to require another compiler who's who's probably", "tokens": [50636, 3037, 295, 300, 293, 300, 290, 1914, 309, 311, 611, 516, 281, 3651, 1071, 31958, 567, 311, 567, 311, 1391, 50924], "temperature": 0.0, "avg_logprob": -0.06410990765220241, "compression_ratio": 2.0588235294117645, "no_speech_prob": 0.007091703824698925}, {"id": 70, "seek": 47284, "start": 484.03999999999996, "end": 490.12, "text": " going to be gcc and that also going it's also going to need another compiler which is also going to", "tokens": [50924, 516, 281, 312, 290, 1914, 293, 300, 611, 516, 309, 311, 611, 516, 281, 643, 1071, 31958, 597, 307, 611, 516, 281, 51228], "temperature": 0.0, "avg_logprob": -0.06410990765220241, "compression_ratio": 2.0588235294117645, "no_speech_prob": 0.007091703824698925}, {"id": 71, "seek": 47284, "start": 490.12, "end": 498.35999999999996, "text": " be a gcc and so on so if we follow these points we are we are just realizing that we don't really", "tokens": [51228, 312, 257, 290, 1914, 293, 370, 322, 370, 498, 321, 1524, 613, 2793, 321, 366, 321, 366, 445, 16734, 300, 321, 500, 380, 534, 51640], "temperature": 0.0, "avg_logprob": -0.06410990765220241, "compression_ratio": 2.0588235294117645, "no_speech_prob": 0.007091703824698925}, {"id": 72, "seek": 49836, "start": 498.36, "end": 504.2, "text": " know who built the first gcc in this list and probably the first one was just a program written", "tokens": [50364, 458, 567, 3094, 264, 700, 290, 1914, 294, 341, 1329, 293, 1391, 264, 700, 472, 390, 445, 257, 1461, 3720, 50656], "temperature": 0.0, "avg_logprob": -0.07016943859797652, "compression_ratio": 1.72, "no_speech_prob": 0.006571494042873383}, {"id": 73, "seek": 49836, "start": 504.2, "end": 511.96000000000004, "text": " assembly or whatever during the 80s we don't really know so we have to break this this recursion", "tokens": [50656, 12103, 420, 2035, 1830, 264, 4688, 82, 321, 500, 380, 534, 458, 370, 321, 362, 281, 1821, 341, 341, 20560, 313, 51044], "temperature": 0.0, "avg_logprob": -0.07016943859797652, "compression_ratio": 1.72, "no_speech_prob": 0.006571494042873383}, {"id": 74, "seek": 49836, "start": 511.96000000000004, "end": 516.92, "text": " somewhere right so there's there are also a lot of libraries here in the middle it's kind of complex", "tokens": [51044, 4079, 558, 370, 456, 311, 456, 366, 611, 257, 688, 295, 15148, 510, 294, 264, 2808, 309, 311, 733, 295, 3997, 51292], "temperature": 0.0, "avg_logprob": -0.07016943859797652, "compression_ratio": 1.72, "no_speech_prob": 0.006571494042873383}, {"id": 75, "seek": 49836, "start": 516.92, "end": 524.44, "text": " right so we have to make a a project that is a very simple compiler that's able to start this", "tokens": [51292, 558, 370, 321, 362, 281, 652, 257, 257, 1716, 300, 307, 257, 588, 2199, 31958, 300, 311, 1075, 281, 722, 341, 51668], "temperature": 0.0, "avg_logprob": -0.07016943859797652, "compression_ratio": 1.72, "no_speech_prob": 0.006571494042873383}, {"id": 76, "seek": 52444, "start": 524.5200000000001, "end": 533.1600000000001, "text": " this chain of compilations and just break everything adding one point that that doesn't", "tokens": [50368, 341, 5021, 295, 715, 388, 763, 293, 445, 1821, 1203, 5127, 472, 935, 300, 300, 1177, 380, 50800], "temperature": 0.0, "avg_logprob": -0.06260775989956326, "compression_ratio": 1.8146341463414635, "no_speech_prob": 0.00661499286070466}, {"id": 77, "seek": 52444, "start": 533.1600000000001, "end": 539.8000000000001, "text": " really need to be trusted right that we can add it and this is this exists already and this is", "tokens": [50800, 534, 643, 281, 312, 16034, 558, 300, 321, 393, 909, 309, 293, 341, 307, 341, 8198, 1217, 293, 341, 307, 51132], "temperature": 0.0, "avg_logprob": -0.06260775989956326, "compression_ratio": 1.8146341463414635, "no_speech_prob": 0.00661499286070466}, {"id": 78, "seek": 52444, "start": 539.8000000000001, "end": 547.72, "text": " what we have in gigs nowadays so we have the world which is with the world we mean all the all the", "tokens": [51132, 437, 321, 362, 294, 34586, 13434, 370, 321, 362, 264, 1002, 597, 307, 365, 264, 1002, 321, 914, 439, 264, 439, 264, 51528], "temperature": 0.0, "avg_logprob": -0.06260775989956326, "compression_ratio": 1.8146341463414635, "no_speech_prob": 0.00661499286070466}, {"id": 79, "seek": 52444, "start": 547.72, "end": 553.32, "text": " packages in the world more or less we have a modern gcc that is able to build most of that", "tokens": [51528, 17401, 294, 264, 1002, 544, 420, 1570, 321, 362, 257, 4363, 290, 1914, 300, 307, 1075, 281, 1322, 881, 295, 300, 51808], "temperature": 0.0, "avg_logprob": -0.06260775989956326, "compression_ratio": 1.8146341463414635, "no_speech_prob": 0.00661499286070466}, {"id": 80, "seek": 55332, "start": 553.96, "end": 563.88, "text": " we have a gcc 7.5 building the modern gcc we have a gcc 4 building that gcc 7 we have a gcc", "tokens": [50396, 321, 362, 257, 290, 1914, 1614, 13, 20, 2390, 264, 4363, 290, 1914, 321, 362, 257, 290, 1914, 1017, 2390, 300, 290, 1914, 1614, 321, 362, 257, 290, 1914, 50892], "temperature": 0.0, "avg_logprob": -0.07610567735165966, "compression_ratio": 2.0406976744186047, "no_speech_prob": 0.006120012607425451}, {"id": 81, "seek": 55332, "start": 563.88, "end": 570.44, "text": " dot 95 building that we have a tiny c compiler in this case you see we are not using gcc anymore", "tokens": [50892, 5893, 13420, 2390, 300, 321, 362, 257, 5870, 269, 31958, 294, 341, 1389, 291, 536, 321, 366, 406, 1228, 290, 1914, 3602, 51220], "temperature": 0.0, "avg_logprob": -0.07610567735165966, "compression_ratio": 2.0406976744186047, "no_speech_prob": 0.006120012607425451}, {"id": 82, "seek": 55332, "start": 570.44, "end": 575.72, "text": " so we use a tiny c compiler which is a very small c compiler we use that to build the gcc", "tokens": [51220, 370, 321, 764, 257, 5870, 269, 31958, 597, 307, 257, 588, 1359, 269, 31958, 321, 764, 300, 281, 1322, 264, 290, 1914, 51484], "temperature": 0.0, "avg_logprob": -0.07610567735165966, "compression_ratio": 2.0406976744186047, "no_speech_prob": 0.006120012607425451}, {"id": 83, "seek": 55332, "start": 576.84, "end": 580.9200000000001, "text": " in our case we are also using in the middle in the middle here somewhere", "tokens": [51540, 294, 527, 1389, 321, 366, 611, 1228, 294, 264, 2808, 294, 264, 2808, 510, 4079, 51744], "temperature": 0.0, "avg_logprob": -0.07610567735165966, "compression_ratio": 2.0406976744186047, "no_speech_prob": 0.006120012607425451}, {"id": 84, "seek": 58092, "start": 581.0, "end": 586.1999999999999, "text": " with the strap all tiny c compiler which is a simplified version of tiny cc which is", "tokens": [50368, 365, 264, 18359, 439, 5870, 269, 31958, 597, 307, 257, 26335, 3037, 295, 5870, 269, 66, 597, 307, 50628], "temperature": 0.0, "avg_logprob": -0.17817386504142516, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.003086435841396451}, {"id": 85, "seek": 58092, "start": 586.8399999999999, "end": 593.64, "text": " buildable using GNU mesh so we can build it using sorry we can build it using GNU mesh and we also", "tokens": [50660, 1322, 712, 1228, 46411, 52, 17407, 370, 321, 393, 1322, 309, 1228, 2597, 321, 393, 1322, 309, 1228, 46411, 52, 17407, 293, 321, 611, 51000], "temperature": 0.0, "avg_logprob": -0.17817386504142516, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.003086435841396451}, {"id": 86, "seek": 58092, "start": 593.64, "end": 602.4399999999999, "text": " have a state zero bo6 which is a a set of tools that are written in directly in source code so", "tokens": [51000, 362, 257, 1785, 4018, 748, 21, 597, 307, 257, 257, 992, 295, 3873, 300, 366, 3720, 294, 3838, 294, 4009, 3089, 370, 51440], "temperature": 0.0, "avg_logprob": -0.17817386504142516, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.003086435841396451}, {"id": 87, "seek": 58092, "start": 603.0799999999999, "end": 608.1999999999999, "text": " we don't really need to trust any binary and from there we can build a very simple compiler", "tokens": [51472, 321, 500, 380, 534, 643, 281, 3361, 604, 17434, 293, 490, 456, 321, 393, 1322, 257, 588, 2199, 31958, 51728], "temperature": 0.0, "avg_logprob": -0.17817386504142516, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.003086435841396451}, {"id": 88, "seek": 60820, "start": 608.2, "end": 615.4000000000001, "text": " right so with that simple compiler we can just build GNU mesh and with that build the world right", "tokens": [50364, 558, 370, 365, 300, 2199, 31958, 321, 393, 445, 1322, 46411, 52, 17407, 293, 365, 300, 1322, 264, 1002, 558, 50724], "temperature": 0.0, "avg_logprob": -0.1217698228770289, "compression_ratio": 1.9317269076305221, "no_speech_prob": 0.0015776570653542876}, {"id": 89, "seek": 60820, "start": 615.4000000000001, "end": 621.0, "text": " so let's let me introduce these these these two projects because maybe you don't know them very", "tokens": [50724, 370, 718, 311, 718, 385, 5366, 613, 613, 613, 732, 4455, 570, 1310, 291, 500, 380, 458, 552, 588, 51004], "temperature": 0.0, "avg_logprob": -0.1217698228770289, "compression_ratio": 1.9317269076305221, "no_speech_prob": 0.0015776570653542876}, {"id": 90, "seek": 60820, "start": 621.0, "end": 627.48, "text": " well those are very easy to understand the areas gcc c compiler and and a tiny tiny cc which is also", "tokens": [51004, 731, 729, 366, 588, 1858, 281, 1223, 264, 3179, 290, 1914, 269, 31958, 293, 293, 257, 5870, 5870, 269, 66, 597, 307, 611, 51328], "temperature": 0.0, "avg_logprob": -0.1217698228770289, "compression_ratio": 1.9317269076305221, "no_speech_prob": 0.0015776570653542876}, {"id": 91, "seek": 60820, "start": 627.48, "end": 632.6800000000001, "text": " a c compiler but these these two are a little bit complex so the case the case of the GNU mesh", "tokens": [51328, 257, 269, 31958, 457, 613, 613, 732, 366, 257, 707, 857, 3997, 370, 264, 1389, 264, 1389, 295, 264, 46411, 52, 17407, 51588], "temperature": 0.0, "avg_logprob": -0.1217698228770289, "compression_ratio": 1.9317269076305221, "no_speech_prob": 0.0015776570653542876}, {"id": 92, "seek": 60820, "start": 632.6800000000001, "end": 637.48, "text": " GNU mesh is a project that has like two legs right one of the legs is an scheme interpreter", "tokens": [51588, 46411, 52, 17407, 307, 257, 1716, 300, 575, 411, 732, 5668, 558, 472, 295, 264, 5668, 307, 364, 12232, 34132, 51828], "temperature": 0.0, "avg_logprob": -0.1217698228770289, "compression_ratio": 1.9317269076305221, "no_speech_prob": 0.0015776570653542876}, {"id": 93, "seek": 63748, "start": 637.5600000000001, "end": 643.48, "text": " and the other leg is a c compiler so the c compiler is designed so it's able to build the scheme", "tokens": [50368, 293, 264, 661, 1676, 307, 257, 269, 31958, 370, 264, 269, 31958, 307, 4761, 370, 309, 311, 1075, 281, 1322, 264, 12232, 50664], "temperature": 0.0, "avg_logprob": -0.09061207614102207, "compression_ratio": 2.3076923076923075, "no_speech_prob": 0.0007953533204272389}, {"id": 94, "seek": 63748, "start": 643.48, "end": 649.88, "text": " interpreter and the scheme interpreter is designed so it can interpret the c compiler right so in", "tokens": [50664, 34132, 293, 264, 12232, 34132, 307, 4761, 370, 309, 393, 7302, 264, 269, 31958, 558, 370, 294, 50984], "temperature": 0.0, "avg_logprob": -0.09061207614102207, "compression_ratio": 2.3076923076923075, "no_speech_prob": 0.0007953533204272389}, {"id": 95, "seek": 63748, "start": 649.88, "end": 654.6800000000001, "text": " the end what we have is an scheme interpreter written in c and a c compiler written in a scheme", "tokens": [50984, 264, 917, 437, 321, 362, 307, 364, 12232, 34132, 3720, 294, 269, 293, 257, 269, 31958, 3720, 294, 257, 12232, 51224], "temperature": 0.0, "avg_logprob": -0.09061207614102207, "compression_ratio": 2.3076923076923075, "no_speech_prob": 0.0007953533204272389}, {"id": 96, "seek": 63748, "start": 654.6800000000001, "end": 662.28, "text": " and they are self-hosted right no self-hosted no they are mutually hosted so the scheme interpreter", "tokens": [51224, 293, 436, 366, 2698, 12, 6037, 292, 558, 572, 2698, 12, 6037, 292, 572, 436, 366, 39144, 19204, 370, 264, 12232, 34132, 51604], "temperature": 0.0, "avg_logprob": -0.09061207614102207, "compression_ratio": 2.3076923076923075, "no_speech_prob": 0.0007953533204272389}, {"id": 97, "seek": 66228, "start": 662.4399999999999, "end": 669.24, "text": " can interpret the c compiler and the other way around so they don't rely on themselves but in", "tokens": [50372, 393, 7302, 264, 269, 31958, 293, 264, 661, 636, 926, 370, 436, 500, 380, 10687, 322, 2969, 457, 294, 50712], "temperature": 0.0, "avg_logprob": -0.1397417109945546, "compression_ratio": 1.8592233009708738, "no_speech_prob": 0.006814638618379831}, {"id": 98, "seek": 66228, "start": 669.24, "end": 678.04, "text": " the other and the goal of this is to help to create a full bootstrap for unix like operating", "tokens": [50712, 264, 661, 293, 264, 3387, 295, 341, 307, 281, 854, 281, 1884, 257, 1577, 11450, 372, 4007, 337, 517, 970, 411, 7447, 51152], "temperature": 0.0, "avg_logprob": -0.1397417109945546, "compression_ratio": 1.8592233009708738, "no_speech_prob": 0.006814638618379831}, {"id": 99, "seek": 66228, "start": 678.04, "end": 683.48, "text": " systems and this is what they are doing in in the case of kicks also the scheme interpreter is written", "tokens": [51152, 3652, 293, 341, 307, 437, 436, 366, 884, 294, 294, 264, 1389, 295, 21293, 611, 264, 12232, 34132, 307, 3720, 51424], "temperature": 0.0, "avg_logprob": -0.1397417109945546, "compression_ratio": 1.8592233009708738, "no_speech_prob": 0.006814638618379831}, {"id": 100, "seek": 66228, "start": 683.48, "end": 689.88, "text": " in as you see is simple c and the c compiler is written in a scheme so the the most important", "tokens": [51424, 294, 382, 291, 536, 307, 2199, 269, 293, 264, 269, 31958, 307, 3720, 294, 257, 12232, 370, 264, 264, 881, 1021, 51744], "temperature": 0.0, "avg_logprob": -0.1397417109945546, "compression_ratio": 1.8592233009708738, "no_speech_prob": 0.006814638618379831}, {"id": 101, "seek": 68988, "start": 689.88, "end": 695.4, "text": " part in this description that they just copied from the website and you can you can read more there", "tokens": [50364, 644, 294, 341, 3855, 300, 436, 445, 25365, 490, 264, 3144, 293, 291, 393, 291, 393, 1401, 544, 456, 50640], "temperature": 0.0, "avg_logprob": -0.16647453098506718, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.022288236767053604}, {"id": 102, "seek": 68988, "start": 695.4, "end": 701.4, "text": " is that they can be bootstrap using mesh to planet and messy tools these tools are also part from", "tokens": [50640, 307, 300, 436, 393, 312, 11450, 372, 4007, 1228, 17407, 281, 5054, 293, 16191, 3873, 613, 3873, 366, 611, 644, 490, 50940], "temperature": 0.0, "avg_logprob": -0.16647453098506718, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.022288236767053604}, {"id": 103, "seek": 68988, "start": 702.04, "end": 710.84, "text": " of state zero posix and state zero posix is that mini compiler thingy i told you that it's", "tokens": [50972, 295, 1785, 4018, 1366, 970, 293, 1785, 4018, 1366, 970, 307, 300, 8382, 31958, 551, 88, 741, 1907, 291, 300, 309, 311, 51412], "temperature": 0.0, "avg_logprob": -0.16647453098506718, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.022288236767053604}, {"id": 104, "seek": 68988, "start": 712.36, "end": 718.36, "text": " a literally source code so it starts in a very small seed you can see here like it's", "tokens": [51488, 257, 3736, 4009, 3089, 370, 309, 3719, 294, 257, 588, 1359, 8871, 291, 393, 536, 510, 411, 309, 311, 51788], "temperature": 0.0, "avg_logprob": -0.16647453098506718, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.022288236767053604}, {"id": 105, "seek": 71836, "start": 718.92, "end": 729.64, "text": " it's a 256 byte seed written directly in binary in a in a very in a little bit weird way to make", "tokens": [50392, 309, 311, 257, 38882, 40846, 8871, 3720, 3838, 294, 17434, 294, 257, 294, 257, 588, 294, 257, 707, 857, 3657, 636, 281, 652, 50928], "temperature": 0.0, "avg_logprob": -0.0727919095183072, "compression_ratio": 1.7365269461077844, "no_speech_prob": 0.0019825738854706287}, {"id": 106, "seek": 71836, "start": 729.64, "end": 737.96, "text": " it easier to to read but it's literally binary so we write that in binary and that is is small enough", "tokens": [50928, 309, 3571, 281, 281, 1401, 457, 309, 311, 3736, 17434, 370, 321, 2464, 300, 294, 17434, 293, 300, 307, 307, 1359, 1547, 51344], "temperature": 0.0, "avg_logprob": -0.0727919095183072, "compression_ratio": 1.7365269461077844, "no_speech_prob": 0.0019825738854706287}, {"id": 107, "seek": 71836, "start": 737.96, "end": 745.4, "text": " to be to be checked by the user to make sure that that binary is correct and then from that", "tokens": [51344, 281, 312, 281, 312, 10033, 538, 264, 4195, 281, 652, 988, 300, 300, 17434, 307, 3006, 293, 550, 490, 300, 51716], "temperature": 0.0, "avg_logprob": -0.0727919095183072, "compression_ratio": 1.7365269461077844, "no_speech_prob": 0.0019825738854706287}, {"id": 108, "seek": 74540, "start": 745.4, "end": 751.48, "text": " we can start building small tools until we build something that is near to a very simple c", "tokens": [50364, 321, 393, 722, 2390, 1359, 3873, 1826, 321, 1322, 746, 300, 307, 2651, 281, 257, 588, 2199, 269, 50668], "temperature": 0.0, "avg_logprob": -0.11951355451948187, "compression_ratio": 1.8520408163265305, "no_speech_prob": 0.0037417674902826548}, {"id": 109, "seek": 74540, "start": 751.48, "end": 759.0, "text": " compiler so once we reach that we can build the new mess using that and from mess we are able to build", "tokens": [50668, 31958, 370, 1564, 321, 2524, 300, 321, 393, 1322, 264, 777, 2082, 1228, 300, 293, 490, 2082, 321, 366, 1075, 281, 1322, 51044], "temperature": 0.0, "avg_logprob": -0.11951355451948187, "compression_ratio": 1.8520408163265305, "no_speech_prob": 0.0037417674902826548}, {"id": 110, "seek": 74540, "start": 759.0, "end": 765.9599999999999, "text": " a much bigger c compiler as a tiny cc and from from that one we can start building", "tokens": [51044, 257, 709, 3801, 269, 31958, 382, 257, 5870, 269, 66, 293, 490, 490, 300, 472, 321, 393, 722, 2390, 51392], "temperature": 0.0, "avg_logprob": -0.11951355451948187, "compression_ratio": 1.8520408163265305, "no_speech_prob": 0.0037417674902826548}, {"id": 111, "seek": 74540, "start": 766.6, "end": 772.68, "text": " old gcc right so here you see this one is is relying on the kernel but there are other", "tokens": [51424, 1331, 290, 1914, 558, 370, 510, 291, 536, 341, 472, 307, 307, 24140, 322, 264, 28256, 457, 456, 366, 661, 51728], "temperature": 0.0, "avg_logprob": -0.11951355451948187, "compression_ratio": 1.8520408163265305, "no_speech_prob": 0.0037417674902826548}, {"id": 112, "seek": 77268, "start": 772.68, "end": 778.52, "text": " products that don't even trust the kernel so that's very interesting too so wrapping up", "tokens": [50364, 3383, 300, 500, 380, 754, 3361, 264, 28256, 370, 300, 311, 588, 1880, 886, 370, 21993, 493, 50656], "temperature": 0.0, "avg_logprob": -0.1474773475715706, "compression_ratio": 1.8685258964143425, "no_speech_prob": 0.0021738670766353607}, {"id": 113, "seek": 77268, "start": 778.52, "end": 785.2399999999999, "text": " there's no no corrupt compiler if there's only source code think about that so that's how we how", "tokens": [50656, 456, 311, 572, 572, 17366, 31958, 498, 456, 311, 787, 4009, 3089, 519, 466, 300, 370, 300, 311, 577, 321, 577, 50992], "temperature": 0.0, "avg_logprob": -0.1474773475715706, "compression_ratio": 1.8685258964143425, "no_speech_prob": 0.0021738670766353607}, {"id": 114, "seek": 77268, "start": 785.2399999999999, "end": 791.4, "text": " we break the problem uh or how we break the that recursive so in the case of the ris 5 support", "tokens": [50992, 321, 1821, 264, 1154, 2232, 420, 577, 321, 1821, 264, 300, 20560, 488, 370, 294, 264, 1389, 295, 264, 2253, 1025, 1406, 51300], "temperature": 0.0, "avg_logprob": -0.1474773475715706, "compression_ratio": 1.8685258964143425, "no_speech_prob": 0.0021738670766353607}, {"id": 115, "seek": 77268, "start": 791.4, "end": 797.64, "text": " this is the status of the ris 5 support uh one year ago when i started working on this we had", "tokens": [51300, 341, 307, 264, 6558, 295, 264, 2253, 1025, 1406, 2232, 472, 1064, 2057, 562, 741, 1409, 1364, 322, 341, 321, 632, 51612], "temperature": 0.0, "avg_logprob": -0.1474773475715706, "compression_ratio": 1.8685258964143425, "no_speech_prob": 0.0021738670766353607}, {"id": 116, "seek": 77268, "start": 797.64, "end": 802.1999999999999, "text": " like the world is not applicable because i mean the world there are many packages out there but", "tokens": [51612, 411, 264, 1002, 307, 406, 21142, 570, 741, 914, 264, 1002, 456, 366, 867, 17401, 484, 456, 457, 51840], "temperature": 0.0, "avg_logprob": -0.1474773475715706, "compression_ratio": 1.8685258964143425, "no_speech_prob": 0.0021738670766353607}, {"id": 117, "seek": 80220, "start": 802.2800000000001, "end": 809.24, "text": " we have uh in another project if ryan flasner is working on bringing the whole world to ris 5", "tokens": [50368, 321, 362, 2232, 294, 1071, 1716, 498, 367, 6277, 932, 296, 1193, 307, 1364, 322, 5062, 264, 1379, 1002, 281, 2253, 1025, 50716], "temperature": 0.0, "avg_logprob": -0.1605589460618425, "compression_ratio": 1.75, "no_speech_prob": 0.0019095203606411815}, {"id": 118, "seek": 80220, "start": 809.24, "end": 816.36, "text": " on geeks so that's very interesting too we have modern gccs uh do have ris 5 support starting", "tokens": [50716, 322, 1519, 24785, 370, 300, 311, 588, 1880, 886, 321, 362, 4363, 290, 1914, 82, 2232, 360, 362, 2253, 1025, 1406, 2891, 51072], "temperature": 0.0, "avg_logprob": -0.1605589460618425, "compression_ratio": 1.75, "no_speech_prob": 0.0019095203606411815}, {"id": 119, "seek": 80220, "start": 816.36, "end": 823.32, "text": " on 7.5 the older ones don't have any ris 5 support tiny cc does have uh ris 5 support but the", "tokens": [51072, 322, 1614, 13, 20, 264, 4906, 2306, 500, 380, 362, 604, 2253, 1025, 1406, 5870, 269, 66, 775, 362, 2232, 2253, 1025, 1406, 457, 264, 51420], "temperature": 0.0, "avg_logprob": -0.1605589460618425, "compression_ratio": 1.75, "no_speech_prob": 0.0019095203606411815}, {"id": 120, "seek": 80220, "start": 823.32, "end": 829.8000000000001, "text": " bootstrap hour one no because it's fourth from a couple of years ago maybe four years ago or six", "tokens": [51420, 11450, 372, 4007, 1773, 472, 572, 570, 309, 311, 6409, 490, 257, 1916, 295, 924, 2057, 1310, 1451, 924, 2057, 420, 2309, 51744], "temperature": 0.0, "avg_logprob": -0.1605589460618425, "compression_ratio": 1.75, "no_speech_prob": 0.0019095203606411815}, {"id": 121, "seek": 82980, "start": 829.8, "end": 835.4799999999999, "text": " years ago i don't remember so it doesn't have ris 5 support and genomes does does have some support", "tokens": [50364, 924, 2057, 741, 500, 380, 1604, 370, 309, 1177, 380, 362, 2253, 1025, 1406, 293, 1049, 18168, 775, 775, 362, 512, 1406, 50648], "temperature": 0.0, "avg_logprob": -0.1289788519982064, "compression_ratio": 1.9601990049751243, "no_speech_prob": 0.003199636936187744}, {"id": 122, "seek": 82980, "start": 835.4799999999999, "end": 842.04, "text": " but it's not but i've tested yet so this is the status of the project so the spoiler of what they", "tokens": [50648, 457, 309, 311, 406, 457, 741, 600, 8246, 1939, 370, 341, 307, 264, 6558, 295, 264, 1716, 370, 264, 26927, 295, 437, 436, 50976], "temperature": 0.0, "avg_logprob": -0.1289788519982064, "compression_ratio": 1.9601990049751243, "no_speech_prob": 0.003199636936187744}, {"id": 123, "seek": 82980, "start": 842.04, "end": 848.1999999999999, "text": " did is that i've reported the go the ris 5 support to this gcc and i've reported the ris 5 support", "tokens": [50976, 630, 307, 300, 741, 600, 7055, 264, 352, 264, 2253, 1025, 1406, 281, 341, 290, 1914, 293, 741, 600, 7055, 264, 2253, 1025, 1406, 51284], "temperature": 0.0, "avg_logprob": -0.1289788519982064, "compression_ratio": 1.9601990049751243, "no_speech_prob": 0.003199636936187744}, {"id": 124, "seek": 82980, "start": 848.1999999999999, "end": 855.0, "text": " to this tiny c compiler and we're going to remove probably this one so we don't really need it so", "tokens": [51284, 281, 341, 5870, 269, 31958, 293, 321, 434, 516, 281, 4159, 1391, 341, 472, 370, 321, 500, 380, 534, 643, 309, 370, 51624], "temperature": 0.0, "avg_logprob": -0.1289788519982064, "compression_ratio": 1.9601990049751243, "no_speech_prob": 0.003199636936187744}, {"id": 125, "seek": 85500, "start": 855.0, "end": 863.88, "text": " in that case it's like everything has ris 5 support now well not everything but kind of so what i did", "tokens": [50364, 294, 300, 1389, 309, 311, 411, 1203, 575, 2253, 1025, 1406, 586, 731, 406, 1203, 457, 733, 295, 370, 437, 741, 630, 50808], "temperature": 0.0, "avg_logprob": -0.07729550856578199, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.003853581380099058}, {"id": 126, "seek": 85500, "start": 863.88, "end": 873.88, "text": " i started uh working on gcc so i went for gcc 4.6 and i started like putting all the the ris 5 support", "tokens": [50808, 741, 1409, 2232, 1364, 322, 290, 1914, 370, 741, 1437, 337, 290, 1914, 1017, 13, 21, 293, 741, 1409, 411, 3372, 439, 264, 264, 2253, 1025, 1406, 51308], "temperature": 0.0, "avg_logprob": -0.07729550856578199, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.003853581380099058}, {"id": 127, "seek": 85500, "start": 873.88, "end": 880.2, "text": " i had in a more modern gcc but in order to understand that we have to understand a little bit about", "tokens": [51308, 741, 632, 294, 257, 544, 4363, 290, 1914, 457, 294, 1668, 281, 1223, 300, 321, 362, 281, 1223, 257, 707, 857, 466, 51624], "temperature": 0.0, "avg_logprob": -0.07729550856578199, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.003853581380099058}, {"id": 128, "seek": 88020, "start": 880.2800000000001, "end": 887.4000000000001, "text": " how does gcc work gcc uses a model that is called debits on phraser and it's not the same model that", "tokens": [50368, 577, 775, 290, 1914, 589, 290, 1914, 4960, 257, 2316, 300, 307, 1219, 3001, 1208, 322, 903, 3906, 260, 293, 309, 311, 406, 264, 912, 2316, 300, 50724], "temperature": 0.0, "avg_logprob": -0.11955452919006347, "compression_ratio": 1.8, "no_speech_prob": 0.01133826281875372}, {"id": 129, "seek": 88020, "start": 887.4000000000001, "end": 893.4000000000001, "text": " we can see in most of the compilers we have read in books and stuff like that this one the intermediate", "tokens": [50724, 321, 393, 536, 294, 881, 295, 264, 715, 388, 433, 321, 362, 1401, 294, 3642, 293, 1507, 411, 300, 341, 472, 264, 19376, 51024], "temperature": 0.0, "avg_logprob": -0.11955452919006347, "compression_ratio": 1.8, "no_speech_prob": 0.01133826281875372}, {"id": 130, "seek": 88020, "start": 893.4000000000001, "end": 898.9200000000001, "text": " representation of gcc is machine dependent and it's based on something that is called phraser's", "tokens": [51024, 10290, 295, 290, 1914, 307, 3479, 12334, 293, 309, 311, 2361, 322, 746, 300, 307, 1219, 903, 3906, 260, 311, 51300], "temperature": 0.0, "avg_logprob": -0.11955452919006347, "compression_ratio": 1.8, "no_speech_prob": 0.01133826281875372}, {"id": 131, "seek": 88020, "start": 898.9200000000001, "end": 905.24, "text": " transfer language so in a very high level way what we have is a high level language imagine c c", "tokens": [51300, 5003, 2856, 370, 294, 257, 588, 1090, 1496, 636, 437, 321, 362, 307, 257, 1090, 1496, 2856, 3811, 269, 269, 51616], "temperature": 0.0, "avg_logprob": -0.11955452919006347, "compression_ratio": 1.8, "no_speech_prob": 0.01133826281875372}, {"id": 132, "seek": 90524, "start": 905.24, "end": 911.0, "text": " plus plus we read that we convert that to an ast that it is called jimple in this case in gcc i", "tokens": [50364, 1804, 1804, 321, 1401, 300, 321, 7620, 300, 281, 364, 5357, 300, 309, 307, 1219, 361, 332, 781, 294, 341, 1389, 294, 290, 1914, 741, 50652], "temperature": 0.0, "avg_logprob": -0.11983773016160534, "compression_ratio": 1.92, "no_speech_prob": 0.004103917628526688}, {"id": 133, "seek": 90524, "start": 911.0, "end": 917.32, "text": " don't i don't remember the reason but there is a reason behind this name um that is converted to", "tokens": [50652, 500, 380, 741, 500, 380, 1604, 264, 1778, 457, 456, 307, 257, 1778, 2261, 341, 1315, 1105, 300, 307, 16424, 281, 50968], "temperature": 0.0, "avg_logprob": -0.11983773016160534, "compression_ratio": 1.92, "no_speech_prob": 0.004103917628526688}, {"id": 134, "seek": 90524, "start": 917.32, "end": 922.12, "text": " to rtl to the intermediate representation that is machine dependent this one is machine independent", "tokens": [50968, 281, 367, 83, 75, 281, 264, 19376, 10290, 300, 307, 3479, 12334, 341, 472, 307, 3479, 6695, 51208], "temperature": 0.0, "avg_logprob": -0.11983773016160534, "compression_ratio": 1.92, "no_speech_prob": 0.004103917628526688}, {"id": 135, "seek": 90524, "start": 922.76, "end": 928.6, "text": " and we optimize on top of that we generate new rtl with other with other structure and that", "tokens": [51240, 293, 321, 19719, 322, 1192, 295, 300, 321, 8460, 777, 367, 83, 75, 365, 661, 365, 661, 3877, 293, 300, 51532], "temperature": 0.0, "avg_logprob": -0.11983773016160534, "compression_ratio": 1.92, "no_speech_prob": 0.004103917628526688}, {"id": 136, "seek": 92860, "start": 928.6, "end": 935.96, "text": " structure is matched against some rtl templates and from those we obtain the assembly right from", "tokens": [50364, 3877, 307, 21447, 1970, 512, 367, 83, 75, 21165, 293, 490, 729, 321, 12701, 264, 12103, 558, 490, 50732], "temperature": 0.0, "avg_logprob": -0.15962328809372922, "compression_ratio": 1.8317757009345794, "no_speech_prob": 0.0028491553384810686}, {"id": 137, "seek": 92860, "start": 935.96, "end": 943.48, "text": " the assembly onwards is just calling as the as the genu assembler and ld the genu linker so these", "tokens": [50732, 264, 12103, 34230, 307, 445, 5141, 382, 264, 382, 264, 1049, 84, 8438, 1918, 293, 287, 67, 264, 1049, 84, 2113, 260, 370, 613, 51108], "temperature": 0.0, "avg_logprob": -0.15962328809372922, "compression_ratio": 1.8317757009345794, "no_speech_prob": 0.0028491553384810686}, {"id": 138, "seek": 92860, "start": 943.48, "end": 949.72, "text": " conversions are kind of easy to do but but not really so the first one the gimbal to rtl conversion", "tokens": [51108, 42256, 366, 733, 295, 1858, 281, 360, 457, 457, 406, 534, 370, 264, 700, 472, 264, 43667, 281, 367, 83, 75, 14298, 51420], "temperature": 0.0, "avg_logprob": -0.15962328809372922, "compression_ratio": 1.8317757009345794, "no_speech_prob": 0.0028491553384810686}, {"id": 139, "seek": 92860, "start": 949.72, "end": 956.2, "text": " is is that using identifiers so if imagine that we have the gimbal instruction at so we are going", "tokens": [51420, 307, 307, 300, 1228, 2473, 23463, 370, 498, 3811, 300, 321, 362, 264, 43667, 10951, 412, 370, 321, 366, 516, 51744], "temperature": 0.0, "avg_logprob": -0.15962328809372922, "compression_ratio": 1.8317757009345794, "no_speech_prob": 0.0028491553384810686}, {"id": 140, "seek": 95620, "start": 956.2, "end": 963.8000000000001, "text": " to search for the rtl instruction called add and we're going to to just convert from one to the other", "tokens": [50364, 281, 3164, 337, 264, 367, 83, 75, 10951, 1219, 909, 293, 321, 434, 516, 281, 281, 445, 7620, 490, 472, 281, 264, 661, 50744], "temperature": 0.0, "avg_logprob": -0.06609001378903444, "compression_ratio": 1.8365384615384615, "no_speech_prob": 0.0018080627778545022}, {"id": 141, "seek": 95620, "start": 963.8000000000001, "end": 971.08, "text": " in the case of the optimizations they are then checking some templates of the rtl so if we have", "tokens": [50744, 294, 264, 1389, 295, 264, 5028, 14455, 436, 366, 550, 8568, 512, 21165, 295, 264, 367, 83, 75, 370, 498, 321, 362, 51108], "temperature": 0.0, "avg_logprob": -0.06609001378903444, "compression_ratio": 1.8365384615384615, "no_speech_prob": 0.0018080627778545022}, {"id": 142, "seek": 95620, "start": 971.08, "end": 975.24, "text": " several instructions together and we have an instruction that can do everything together", "tokens": [51108, 2940, 9415, 1214, 293, 321, 362, 364, 10951, 300, 393, 360, 1203, 1214, 51316], "temperature": 0.0, "avg_logprob": -0.06609001378903444, "compression_ratio": 1.8365384615384615, "no_speech_prob": 0.0018080627778545022}, {"id": 143, "seek": 95620, "start": 975.24, "end": 981.1600000000001, "text": " we can we can expand or or compress instructions right there are some rules we'll have to write", "tokens": [51316, 321, 393, 321, 393, 5268, 420, 420, 14778, 9415, 558, 456, 366, 512, 4474, 321, 603, 362, 281, 2464, 51612], "temperature": 0.0, "avg_logprob": -0.06609001378903444, "compression_ratio": 1.8365384615384615, "no_speech_prob": 0.0018080627778545022}, {"id": 144, "seek": 98116, "start": 981.16, "end": 986.76, "text": " and then there is the rtl to assembly conversion that is described in all the rtl instruction", "tokens": [50364, 293, 550, 456, 307, 264, 367, 83, 75, 281, 12103, 14298, 300, 307, 7619, 294, 439, 264, 367, 83, 75, 10951, 50644], "temperature": 0.0, "avg_logprob": -0.07290166424166772, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.006625439040362835}, {"id": 145, "seek": 98116, "start": 986.76, "end": 993.3199999999999, "text": " we're going to see an example here so this is this is an example of an of a machine description", "tokens": [50644, 321, 434, 516, 281, 536, 364, 1365, 510, 370, 341, 307, 341, 307, 364, 1365, 295, 364, 295, 257, 3479, 3855, 50972], "temperature": 0.0, "avg_logprob": -0.07290166424166772, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.006625439040362835}, {"id": 146, "seek": 98116, "start": 993.3199999999999, "end": 999.8, "text": " file or a very small piece of a very big machine description file that you can find them in the", "tokens": [50972, 3991, 420, 257, 588, 1359, 2522, 295, 257, 588, 955, 3479, 3855, 3991, 300, 291, 393, 915, 552, 294, 264, 51296], "temperature": 0.0, "avg_logprob": -0.07290166424166772, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.006625439040362835}, {"id": 147, "seek": 98116, "start": 999.8, "end": 1009.4, "text": " gcc source code at gcc slash config slash the machine you want to use slash whatever dot md", "tokens": [51296, 290, 1914, 4009, 3089, 412, 290, 1914, 17330, 6662, 17330, 264, 3479, 291, 528, 281, 764, 17330, 2035, 5893, 275, 67, 51776], "temperature": 0.0, "avg_logprob": -0.07290166424166772, "compression_ratio": 1.9137055837563453, "no_speech_prob": 0.006625439040362835}, {"id": 148, "seek": 100940, "start": 1009.4, "end": 1015.48, "text": " from machine description and this is how the instructions look so the instruction here is", "tokens": [50364, 490, 3479, 3855, 293, 341, 307, 577, 264, 9415, 574, 370, 264, 10951, 510, 307, 50668], "temperature": 0.0, "avg_logprob": -0.09812001122368706, "compression_ratio": 1.9947643979057592, "no_speech_prob": 0.005507685709744692}, {"id": 149, "seek": 100940, "start": 1015.48, "end": 1022.76, "text": " called add di3 the add is from the add instruction the di is from double integrals so it's for big", "tokens": [50668, 1219, 909, 1026, 18, 264, 909, 307, 490, 264, 909, 10951, 264, 1026, 307, 490, 3834, 3572, 1124, 370, 309, 311, 337, 955, 51032], "temperature": 0.0, "avg_logprob": -0.09812001122368706, "compression_ratio": 1.9947643979057592, "no_speech_prob": 0.005507685709744692}, {"id": 150, "seek": 100940, "start": 1022.76, "end": 1028.84, "text": " integrals and the three is that is going to use three arguments so this is the one that is going", "tokens": [51032, 3572, 1124, 293, 264, 1045, 307, 300, 307, 516, 281, 764, 1045, 12869, 370, 341, 307, 264, 472, 300, 307, 516, 51336], "temperature": 0.0, "avg_logprob": -0.09812001122368706, "compression_ratio": 1.9947643979057592, "no_speech_prob": 0.005507685709744692}, {"id": 151, "seek": 100940, "start": 1028.84, "end": 1034.44, "text": " to be matched against the identifiers in gimpel so the conversion is going to be like that then", "tokens": [51336, 281, 312, 21447, 1970, 264, 2473, 23463, 294, 290, 8814, 338, 370, 264, 14298, 307, 516, 281, 312, 411, 300, 550, 51616], "temperature": 0.0, "avg_logprob": -0.09812001122368706, "compression_ratio": 1.9947643979057592, "no_speech_prob": 0.005507685709744692}, {"id": 152, "seek": 103444, "start": 1034.44, "end": 1042.2, "text": " this is what this this instruction looks like this is predicate so this is only going to be", "tokens": [50364, 341, 307, 437, 341, 341, 10951, 1542, 411, 341, 307, 3852, 8700, 370, 341, 307, 787, 516, 281, 312, 50752], "temperature": 0.0, "avg_logprob": -0.06491658266852884, "compression_ratio": 1.879396984924623, "no_speech_prob": 0.00664525106549263}, {"id": 153, "seek": 103444, "start": 1042.2, "end": 1048.6000000000001, "text": " used this instruction in the case that the target is a 64-bit target that's why that's because it's", "tokens": [50752, 1143, 341, 10951, 294, 264, 1389, 300, 264, 3779, 307, 257, 12145, 12, 5260, 3779, 300, 311, 983, 300, 311, 570, 309, 311, 51072], "temperature": 0.0, "avg_logprob": -0.06491658266852884, "compression_ratio": 1.879396984924623, "no_speech_prob": 0.00664525106549263}, {"id": 154, "seek": 103444, "start": 1048.6000000000001, "end": 1053.96, "text": " using a double integer this is the assembly code is going to generate this instruction", "tokens": [51072, 1228, 257, 3834, 24922, 341, 307, 264, 12103, 3089, 307, 516, 281, 8460, 341, 10951, 51340], "temperature": 0.0, "avg_logprob": -0.06491658266852884, "compression_ratio": 1.879396984924623, "no_speech_prob": 0.00664525106549263}, {"id": 155, "seek": 103444, "start": 1053.96, "end": 1058.52, "text": " and these are some attributes i don't really get about those so the behavior of the instruction", "tokens": [51340, 293, 613, 366, 512, 17212, 741, 500, 380, 534, 483, 466, 729, 370, 264, 5223, 295, 264, 10951, 51568], "temperature": 0.0, "avg_logprob": -0.06491658266852884, "compression_ratio": 1.879396984924623, "no_speech_prob": 0.00664525106549263}, {"id": 156, "seek": 105852, "start": 1058.52, "end": 1066.68, "text": " is described here and it says you have to set the register operand zero you have to set it to the", "tokens": [50364, 307, 7619, 510, 293, 309, 1619, 291, 362, 281, 992, 264, 7280, 2208, 474, 4018, 291, 362, 281, 992, 309, 281, 264, 50772], "temperature": 0.0, "avg_logprob": -0.0749028808192203, "compression_ratio": 1.8767772511848342, "no_speech_prob": 0.046675264835357666}, {"id": 157, "seek": 105852, "start": 1066.68, "end": 1073.6399999999999, "text": " value of the plus of the register operand one and the arithmetic operand two that's the way it works", "tokens": [50772, 2158, 295, 264, 1804, 295, 264, 7280, 2208, 474, 472, 293, 264, 42973, 2208, 474, 732, 300, 311, 264, 636, 309, 1985, 51120], "temperature": 0.0, "avg_logprob": -0.0749028808192203, "compression_ratio": 1.8767772511848342, "no_speech_prob": 0.046675264835357666}, {"id": 158, "seek": 105852, "start": 1073.6399999999999, "end": 1080.12, "text": " so this add instruction has this meaning and these match operand parts are pieces that are going to", "tokens": [51120, 370, 341, 909, 10951, 575, 341, 3620, 293, 613, 2995, 2208, 474, 3166, 366, 3755, 300, 366, 516, 281, 51444], "temperature": 0.0, "avg_logprob": -0.0749028808192203, "compression_ratio": 1.8767772511848342, "no_speech_prob": 0.046675264835357666}, {"id": 159, "seek": 105852, "start": 1080.12, "end": 1085.56, "text": " be matched against the against the RTL code we have so first it's going to generate like a like a", "tokens": [51444, 312, 21447, 1970, 264, 1970, 264, 21797, 43, 3089, 321, 362, 370, 700, 309, 311, 516, 281, 8460, 411, 257, 411, 257, 51716], "temperature": 0.0, "avg_logprob": -0.0749028808192203, "compression_ratio": 1.8767772511848342, "no_speech_prob": 0.046675264835357666}, {"id": 160, "seek": 108556, "start": 1085.56, "end": 1091.6399999999999, "text": " general RTL code and then it's going to match against these blocks and if the the match it's", "tokens": [50364, 2674, 21797, 43, 3089, 293, 550, 309, 311, 516, 281, 2995, 1970, 613, 8474, 293, 498, 264, 264, 2995, 309, 311, 50668], "temperature": 0.0, "avg_logprob": -0.06958628544765236, "compression_ratio": 1.987603305785124, "no_speech_prob": 0.002690116409212351}, {"id": 161, "seek": 108556, "start": 1091.6399999999999, "end": 1098.04, "text": " going to generate these assembly files per line so if we had another rule that is more specific than", "tokens": [50668, 516, 281, 8460, 613, 12103, 7098, 680, 1622, 370, 498, 321, 632, 1071, 4978, 300, 307, 544, 2685, 813, 50988], "temperature": 0.0, "avg_logprob": -0.06958628544765236, "compression_ratio": 1.987603305785124, "no_speech_prob": 0.002690116409212351}, {"id": 162, "seek": 108556, "start": 1098.04, "end": 1103.08, "text": " this one and that matches before this is not going to be matched and it's going to generate another", "tokens": [50988, 341, 472, 293, 300, 10676, 949, 341, 307, 406, 516, 281, 312, 21447, 293, 309, 311, 516, 281, 8460, 1071, 51240], "temperature": 0.0, "avg_logprob": -0.06958628544765236, "compression_ratio": 1.987603305785124, "no_speech_prob": 0.002690116409212351}, {"id": 163, "seek": 108556, "start": 1103.08, "end": 1108.6, "text": " assembly this is a little bit how it works so these files are processed c files are generated", "tokens": [51240, 12103, 341, 307, 257, 707, 857, 577, 309, 1985, 370, 613, 7098, 366, 18846, 269, 7098, 366, 10833, 51516], "temperature": 0.0, "avg_logprob": -0.06958628544765236, "compression_ratio": 1.987603305785124, "no_speech_prob": 0.002690116409212351}, {"id": 164, "seek": 108556, "start": 1108.6, "end": 1115.0, "text": " and these c files are included in the code of the gcc so that's the gcc build system which is", "tokens": [51516, 293, 613, 269, 7098, 366, 5556, 294, 264, 3089, 295, 264, 290, 1914, 370, 300, 311, 264, 290, 1914, 1322, 1185, 597, 307, 51836], "temperature": 0.0, "avg_logprob": -0.06958628544765236, "compression_ratio": 1.987603305785124, "no_speech_prob": 0.002690116409212351}, {"id": 165, "seek": 111500, "start": 1115.0, "end": 1120.76, "text": " really really complex so you can think that if all this is made in this kind of machine description", "tokens": [50364, 534, 534, 3997, 370, 291, 393, 519, 300, 498, 439, 341, 307, 1027, 294, 341, 733, 295, 3479, 3855, 50652], "temperature": 0.0, "avg_logprob": -0.11826648908792083, "compression_ratio": 1.8585365853658538, "no_speech_prob": 0.0034556204918771982}, {"id": 166, "seek": 111500, "start": 1120.76, "end": 1126.68, "text": " files that are kind of a configuration file you can think okay so if you take these machine", "tokens": [50652, 7098, 300, 366, 733, 295, 257, 11694, 3991, 291, 393, 519, 1392, 370, 498, 291, 747, 613, 3479, 50948], "temperature": 0.0, "avg_logprob": -0.11826648908792083, "compression_ratio": 1.8585365853658538, "no_speech_prob": 0.0034556204918771982}, {"id": 167, "seek": 111500, "start": 1126.68, "end": 1132.76, "text": " descriptor files from from a gcc that supports RISC5 and you move them to the older RISC5 that", "tokens": [50948, 31280, 284, 7098, 490, 490, 257, 290, 1914, 300, 9346, 497, 2343, 34, 20, 293, 291, 1286, 552, 281, 264, 4906, 497, 2343, 34, 20, 300, 51252], "temperature": 0.0, "avg_logprob": -0.11826648908792083, "compression_ratio": 1.8585365853658538, "no_speech_prob": 0.0034556204918771982}, {"id": 168, "seek": 111500, "start": 1133.32, "end": 1139.64, "text": " to the older gcc that doesn't support RISC5 it should work right it you should be able to just", "tokens": [51280, 281, 264, 4906, 290, 1914, 300, 1177, 380, 1406, 497, 2343, 34, 20, 309, 820, 589, 558, 309, 291, 820, 312, 1075, 281, 445, 51596], "temperature": 0.0, "avg_logprob": -0.11826648908792083, "compression_ratio": 1.8585365853658538, "no_speech_prob": 0.0034556204918771982}, {"id": 169, "seek": 113964, "start": 1139.64, "end": 1147.0, "text": " compile the gcc and make it work but reality is not that simple we also have other types of things", "tokens": [50364, 31413, 264, 290, 1914, 293, 652, 309, 589, 457, 4103, 307, 406, 300, 2199, 321, 611, 362, 661, 3467, 295, 721, 50732], "temperature": 0.0, "avg_logprob": -0.10735322081524393, "compression_ratio": 1.7589285714285714, "no_speech_prob": 0.005206500645726919}, {"id": 170, "seek": 113964, "start": 1147.0, "end": 1153.72, "text": " to to to bring another target to gcc so one of them is the target description matrix and functions", "tokens": [50732, 281, 281, 281, 1565, 1071, 3779, 281, 290, 1914, 370, 472, 295, 552, 307, 264, 3779, 3855, 8141, 293, 6828, 51068], "temperature": 0.0, "avg_logprob": -0.10735322081524393, "compression_ratio": 1.7589285714285714, "no_speech_prob": 0.005206500645726919}, {"id": 171, "seek": 113964, "start": 1153.72, "end": 1160.76, "text": " which is just a very big header file with a lot of things defined there and there are also libraries", "tokens": [51068, 597, 307, 445, 257, 588, 955, 23117, 3991, 365, 257, 688, 295, 721, 7642, 456, 293, 456, 366, 611, 15148, 51420], "temperature": 0.0, "avg_logprob": -0.10735322081524393, "compression_ratio": 1.7589285714285714, "no_speech_prob": 0.005206500645726919}, {"id": 172, "seek": 113964, "start": 1160.76, "end": 1167.72, "text": " like libgcc and many others it's more complex more complex than it looks so my process here was", "tokens": [51420, 411, 22854, 70, 1914, 293, 867, 2357, 309, 311, 544, 3997, 544, 3997, 813, 309, 1542, 370, 452, 1399, 510, 390, 51768], "temperature": 0.0, "avg_logprob": -0.10735322081524393, "compression_ratio": 1.7589285714285714, "no_speech_prob": 0.005206500645726919}, {"id": 173, "seek": 116772, "start": 1167.72, "end": 1177.4, "text": " just trying to solve the missing pieces of code i found here and there so what i did was exactly that", "tokens": [50364, 445, 1382, 281, 5039, 264, 5361, 3755, 295, 3089, 741, 1352, 510, 293, 456, 370, 437, 741, 630, 390, 2293, 300, 50848], "temperature": 0.0, "avg_logprob": -0.09298295190889541, "compression_ratio": 1.6408839779005524, "no_speech_prob": 0.0071697477251291275}, {"id": 174, "seek": 116772, "start": 1177.4, "end": 1184.52, "text": " i went to the gcc code base to repeat the commit where the RISC5 support was added to repeat that", "tokens": [50848, 741, 1437, 281, 264, 290, 1914, 3089, 3096, 281, 7149, 264, 5599, 689, 264, 497, 2343, 34, 20, 1406, 390, 3869, 281, 7149, 300, 51204], "temperature": 0.0, "avg_logprob": -0.09298295190889541, "compression_ratio": 1.6408839779005524, "no_speech_prob": 0.0071697477251291275}, {"id": 175, "seek": 116772, "start": 1184.52, "end": 1190.84, "text": " to the past and in the past i started fixing all the problems i was finding there were many there", "tokens": [51204, 281, 264, 1791, 293, 294, 264, 1791, 741, 1409, 19442, 439, 264, 2740, 741, 390, 5006, 456, 645, 867, 456, 51520], "temperature": 0.0, "avg_logprob": -0.09298295190889541, "compression_ratio": 1.6408839779005524, "no_speech_prob": 0.0071697477251291275}, {"id": 176, "seek": 119084, "start": 1190.84, "end": 1198.1999999999998, "text": " were missing i in a sense so i have to fix them or add new ones or use older constructs that were", "tokens": [50364, 645, 5361, 741, 294, 257, 2020, 370, 741, 362, 281, 3191, 552, 420, 909, 777, 2306, 420, 764, 4906, 7690, 82, 300, 645, 50732], "temperature": 0.0, "avg_logprob": -0.1069650650024414, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.009007059037685394}, {"id": 177, "seek": 119084, "start": 1198.1999999999998, "end": 1205.3999999999999, "text": " equivalent to those there were also some RTL constructs that didn't exist i had to make some", "tokens": [50732, 10344, 281, 729, 456, 645, 611, 512, 21797, 43, 7690, 82, 300, 994, 380, 2514, 741, 632, 281, 652, 512, 51092], "temperature": 0.0, "avg_logprob": -0.1069650650024414, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.009007059037685394}, {"id": 178, "seek": 119084, "start": 1205.3999999999999, "end": 1212.6799999999998, "text": " extra predicates i had to convert all the new api to the cc api that we had in the past", "tokens": [51092, 2857, 47336, 1024, 741, 632, 281, 7620, 439, 264, 777, 1882, 72, 281, 264, 269, 66, 1882, 72, 300, 321, 632, 294, 264, 1791, 51456], "temperature": 0.0, "avg_logprob": -0.1069650650024414, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.009007059037685394}, {"id": 179, "seek": 119084, "start": 1213.9599999999998, "end": 1219.1599999999999, "text": " many many things then the harder one was the libgcc because that was related with the build", "tokens": [51520, 867, 867, 721, 550, 264, 6081, 472, 390, 264, 22854, 70, 1914, 570, 300, 390, 4077, 365, 264, 1322, 51780], "temperature": 0.0, "avg_logprob": -0.1069650650024414, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.009007059037685394}, {"id": 180, "seek": 121916, "start": 1219.16, "end": 1224.92, "text": " system and the gcc build system is really complex so i didn't really understand how it worked but", "tokens": [50364, 1185, 293, 264, 290, 1914, 1322, 1185, 307, 534, 3997, 370, 741, 994, 380, 534, 1223, 577, 309, 2732, 457, 50652], "temperature": 0.0, "avg_logprob": -0.10487493213854338, "compression_ratio": 1.7824074074074074, "no_speech_prob": 0.00880534015595913}, {"id": 181, "seek": 121916, "start": 1224.92, "end": 1232.92, "text": " i finally i made it work somehow so you can read these two blog posts where i described the all the", "tokens": [50652, 741, 2721, 741, 1027, 309, 589, 6063, 370, 291, 393, 1401, 613, 732, 6968, 12300, 689, 741, 7619, 264, 439, 264, 51052], "temperature": 0.0, "avg_logprob": -0.10487493213854338, "compression_ratio": 1.7824074074074074, "no_speech_prob": 0.00880534015595913}, {"id": 182, "seek": 121916, "start": 1232.92, "end": 1241.16, "text": " changes i had to make and i go pretty much in a in a very detailed way in the description so you", "tokens": [51052, 2962, 741, 632, 281, 652, 293, 741, 352, 1238, 709, 294, 257, 294, 257, 588, 9942, 636, 294, 264, 3855, 370, 291, 51464], "temperature": 0.0, "avg_logprob": -0.10487493213854338, "compression_ratio": 1.7824074074074074, "no_speech_prob": 0.00880534015595913}, {"id": 183, "seek": 121916, "start": 1241.16, "end": 1247.16, "text": " you can go and read those if you're interested in the code itself so about tiny cc i had a", "tokens": [51464, 291, 393, 352, 293, 1401, 729, 498, 291, 434, 3102, 294, 264, 3089, 2564, 370, 466, 5870, 269, 66, 741, 632, 257, 51764], "temperature": 0.0, "avg_logprob": -0.10487493213854338, "compression_ratio": 1.7824074074074074, "no_speech_prob": 0.00880534015595913}, {"id": 184, "seek": 124716, "start": 1247.16, "end": 1255.88, "text": " similar issue but the the the git history wasn't that well described so i had to go and just take", "tokens": [50364, 2531, 2734, 457, 264, 264, 264, 18331, 2503, 2067, 380, 300, 731, 7619, 370, 741, 632, 281, 352, 293, 445, 747, 50800], "temperature": 0.0, "avg_logprob": -0.12104744963593535, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.006065684370696545}, {"id": 185, "seek": 124716, "start": 1255.88, "end": 1264.52, "text": " take some files try to overwrite and make it a little bit by hand um same thing uh i packaged", "tokens": [50800, 747, 512, 7098, 853, 281, 670, 21561, 293, 652, 309, 257, 707, 857, 538, 1011, 1105, 912, 551, 2232, 741, 38162, 51232], "temperature": 0.0, "avg_logprob": -0.12104744963593535, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.006065684370696545}, {"id": 186, "seek": 124716, "start": 1264.52, "end": 1269.8000000000002, "text": " everything for gigs to be able to reproduce the the the work i was doing in another computer and", "tokens": [51232, 1203, 337, 34586, 281, 312, 1075, 281, 29501, 264, 264, 264, 589, 741, 390, 884, 294, 1071, 3820, 293, 51496], "temperature": 0.0, "avg_logprob": -0.12104744963593535, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.006065684370696545}, {"id": 187, "seek": 124716, "start": 1269.8000000000002, "end": 1275.8000000000002, "text": " let my friends help me um yeah and just started reading the code from the modern tiny cc and", "tokens": [51496, 718, 452, 1855, 854, 385, 1105, 1338, 293, 445, 1409, 3760, 264, 3089, 490, 264, 4363, 5870, 269, 66, 293, 51796], "temperature": 0.0, "avg_logprob": -0.12104744963593535, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.006065684370696545}, {"id": 188, "seek": 127580, "start": 1275.8, "end": 1283.3999999999999, "text": " started adding it to the old tiny cc that that was the base of our fork of the buddhistrapable", "tokens": [50364, 1409, 5127, 309, 281, 264, 1331, 5870, 269, 66, 300, 300, 390, 264, 3096, 295, 527, 17716, 295, 264, 3265, 67, 33236, 4007, 712, 50744], "temperature": 0.0, "avg_logprob": -0.093364896774292, "compression_ratio": 1.8916256157635467, "no_speech_prob": 0.011757108382880688}, {"id": 189, "seek": 127580, "start": 1283.3999999999999, "end": 1291.1599999999999, "text": " tiny cc um it was really hard to do tiny cc is super hard to read for me has many many many", "tokens": [50744, 5870, 269, 66, 1105, 309, 390, 534, 1152, 281, 360, 5870, 269, 66, 307, 1687, 1152, 281, 1401, 337, 385, 575, 867, 867, 867, 51132], "temperature": 0.0, "avg_logprob": -0.093364896774292, "compression_ratio": 1.8916256157635467, "no_speech_prob": 0.011757108382880688}, {"id": 190, "seek": 127580, "start": 1291.1599999999999, "end": 1298.84, "text": " variables that their name is only one character functions that their name is o or o f and stuff", "tokens": [51132, 9102, 300, 641, 1315, 307, 787, 472, 2517, 6828, 300, 641, 1315, 307, 277, 420, 277, 283, 293, 1507, 51516], "temperature": 0.0, "avg_logprob": -0.093364896774292, "compression_ratio": 1.8916256157635467, "no_speech_prob": 0.011757108382880688}, {"id": 191, "seek": 127580, "start": 1298.84, "end": 1305.1599999999999, "text": " like that it's really really hard to to read but i managed to make it work i don't remember very well", "tokens": [51516, 411, 300, 309, 311, 534, 534, 1152, 281, 281, 1401, 457, 741, 6453, 281, 652, 309, 589, 741, 500, 380, 1604, 588, 731, 51832], "temperature": 0.0, "avg_logprob": -0.093364896774292, "compression_ratio": 1.8916256157635467, "no_speech_prob": 0.011757108382880688}, {"id": 192, "seek": 130516, "start": 1305.16, "end": 1310.68, "text": " how so if you want to read about that you have this blog post that describes it in a little bit", "tokens": [50364, 577, 370, 498, 291, 528, 281, 1401, 466, 300, 291, 362, 341, 6968, 2183, 300, 15626, 309, 294, 257, 707, 857, 50640], "temperature": 0.0, "avg_logprob": -0.07662823494900478, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.004264742136001587}, {"id": 193, "seek": 130516, "start": 1310.68, "end": 1317.3200000000002, "text": " more of with a little bit more of detail um i don't recommend it either in this case i didn't", "tokens": [50640, 544, 295, 365, 257, 707, 857, 544, 295, 2607, 1105, 741, 500, 380, 2748, 309, 2139, 294, 341, 1389, 741, 994, 380, 50972], "temperature": 0.0, "avg_logprob": -0.07662823494900478, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.004264742136001587}, {"id": 194, "seek": 130516, "start": 1317.3200000000002, "end": 1324.1200000000001, "text": " really make a really really interesting work here here it was kind of complex so and the", "tokens": [50972, 534, 652, 257, 534, 534, 1880, 589, 510, 510, 309, 390, 733, 295, 3997, 370, 293, 264, 51312], "temperature": 0.0, "avg_logprob": -0.07662823494900478, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.004264742136001587}, {"id": 195, "seek": 130516, "start": 1324.1200000000001, "end": 1329.8000000000002, "text": " only thing missing in this one i think this one is pretty pretty well done the only thing missing", "tokens": [51312, 787, 551, 5361, 294, 341, 472, 741, 519, 341, 472, 307, 1238, 1238, 731, 1096, 264, 787, 551, 5361, 51596], "temperature": 0.0, "avg_logprob": -0.07662823494900478, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.004264742136001587}, {"id": 196, "seek": 132980, "start": 1329.8799999999999, "end": 1335.96, "text": " some optimization code and we decided or i decided to leave it outside the project because", "tokens": [50368, 512, 19618, 3089, 293, 321, 3047, 420, 741, 3047, 281, 1856, 309, 2380, 264, 1716, 570, 50672], "temperature": 0.0, "avg_logprob": -0.07689692757346413, "compression_ratio": 1.8468899521531101, "no_speech_prob": 0.028276745229959488}, {"id": 197, "seek": 132980, "start": 1336.9199999999998, "end": 1341.8799999999999, "text": " it would affect other architectures too so the the only difference we have with the upstream", "tokens": [50720, 309, 576, 3345, 661, 6331, 1303, 886, 370, 264, 264, 787, 2649, 321, 362, 365, 264, 33915, 50968], "temperature": 0.0, "avg_logprob": -0.07689692757346413, "compression_ratio": 1.8468899521531101, "no_speech_prob": 0.028276745229959488}, {"id": 198, "seek": 132980, "start": 1341.8799999999999, "end": 1348.12, "text": " code is this one right so the the left is a program compiled with the optimized version and the other", "tokens": [50968, 3089, 307, 341, 472, 558, 370, 264, 264, 1411, 307, 257, 1461, 36548, 365, 264, 26941, 3037, 293, 264, 661, 51280], "temperature": 0.0, "avg_logprob": -0.07689692757346413, "compression_ratio": 1.8468899521531101, "no_speech_prob": 0.028276745229959488}, {"id": 199, "seek": 132980, "start": 1348.12, "end": 1353.8799999999999, "text": " is the the one the one i did the only difference you can see is the jump here in the 4c that doesn't", "tokens": [51280, 307, 264, 264, 472, 264, 472, 741, 630, 264, 787, 2649, 291, 393, 536, 307, 264, 3012, 510, 294, 264, 1017, 66, 300, 1177, 380, 51568], "temperature": 0.0, "avg_logprob": -0.07689692757346413, "compression_ratio": 1.8468899521531101, "no_speech_prob": 0.028276745229959488}, {"id": 200, "seek": 135388, "start": 1353.88, "end": 1360.68, "text": " really like doesn't have just one instruction it has distraction is doubled because the there's", "tokens": [50364, 534, 411, 1177, 380, 362, 445, 472, 10951, 309, 575, 30217, 307, 24405, 570, 264, 456, 311, 50704], "temperature": 0.0, "avg_logprob": -0.12469235543281801, "compression_ratio": 1.8176100628930818, "no_speech_prob": 0.01583833619952202}, {"id": 201, "seek": 135388, "start": 1361.64, "end": 1368.1200000000001, "text": " is not applying the optimization of cleaning this out after after this jump is is set it doesn't", "tokens": [50752, 307, 406, 9275, 264, 19618, 295, 8924, 341, 484, 934, 934, 341, 3012, 307, 307, 992, 309, 1177, 380, 51076], "temperature": 0.0, "avg_logprob": -0.12469235543281801, "compression_ratio": 1.8176100628930818, "no_speech_prob": 0.01583833619952202}, {"id": 202, "seek": 135388, "start": 1368.1200000000001, "end": 1376.1200000000001, "text": " really matter that much to me at least so yeah it doesn't really matter because this instruction", "tokens": [51076, 534, 1871, 300, 709, 281, 385, 412, 1935, 370, 1338, 309, 1177, 380, 534, 1871, 570, 341, 10951, 51476], "temperature": 0.0, "avg_logprob": -0.12469235543281801, "compression_ratio": 1.8176100628930818, "no_speech_prob": 0.01583833619952202}, {"id": 203, "seek": 137612, "start": 1376.1999999999998, "end": 1383.8799999999999, "text": " is not going to be called ever so it doesn't really change that much and this this this", "tokens": [50368, 307, 406, 516, 281, 312, 1219, 1562, 370, 309, 1177, 380, 534, 1319, 300, 709, 293, 341, 341, 341, 50752], "temperature": 0.0, "avg_logprob": -0.10707988509212632, "compression_ratio": 1.8871794871794871, "no_speech_prob": 0.004498711321502924}, {"id": 204, "seek": 137612, "start": 1383.8799999999999, "end": 1387.8799999999999, "text": " this compiler is not going to be a production compiler so it doesn't really really really matter", "tokens": [50752, 341, 31958, 307, 406, 516, 281, 312, 257, 4265, 31958, 370, 309, 1177, 380, 534, 534, 534, 1871, 50952], "temperature": 0.0, "avg_logprob": -0.10707988509212632, "compression_ratio": 1.8871794871794871, "no_speech_prob": 0.004498711321502924}, {"id": 205, "seek": 137612, "start": 1387.8799999999999, "end": 1394.76, "text": " so considering those both backends are kind of working and generating these five binaries", "tokens": [50952, 370, 8079, 729, 1293, 646, 2581, 366, 733, 295, 1364, 293, 17746, 613, 1732, 5171, 4889, 51296], "temperature": 0.0, "avg_logprob": -0.10707988509212632, "compression_ratio": 1.8871794871794871, "no_speech_prob": 0.004498711321502924}, {"id": 206, "seek": 137612, "start": 1395.56, "end": 1401.32, "text": " there are some things that need to be done we have to remember that that i only worked on the", "tokens": [51336, 456, 366, 512, 721, 300, 643, 281, 312, 1096, 321, 362, 281, 1604, 300, 300, 741, 787, 2732, 322, 264, 51624], "temperature": 0.0, "avg_logprob": -0.10707988509212632, "compression_ratio": 1.8871794871794871, "no_speech_prob": 0.004498711321502924}, {"id": 207, "seek": 140132, "start": 1401.3999999999999, "end": 1408.6, "text": " backends and something i didn't tell you is that i in order to test them i was working in a in a", "tokens": [50368, 646, 2581, 293, 746, 741, 994, 380, 980, 291, 307, 300, 741, 294, 1668, 281, 1500, 552, 741, 390, 1364, 294, 257, 294, 257, 50728], "temperature": 0.0, "avg_logprob": -0.08660815686595683, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.004183651879429817}, {"id": 208, "seek": 140132, "start": 1408.6, "end": 1413.48, "text": " cross-compile environment so i was working on my machine making binaries for ris 5 and i test", "tokens": [50728, 3278, 12, 21541, 794, 2823, 370, 741, 390, 1364, 322, 452, 3479, 1455, 5171, 4889, 337, 2253, 1025, 293, 741, 1500, 50972], "temperature": 0.0, "avg_logprob": -0.08660815686595683, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.004183651879429817}, {"id": 209, "seek": 140132, "start": 1413.48, "end": 1419.96, "text": " the backends that way but we have to test all these things in in proper hardware to make sure", "tokens": [50972, 264, 646, 2581, 300, 636, 457, 321, 362, 281, 1500, 439, 613, 721, 294, 294, 2296, 8837, 281, 652, 988, 51296], "temperature": 0.0, "avg_logprob": -0.08660815686595683, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.004183651879429817}, {"id": 210, "seek": 140132, "start": 1419.96, "end": 1426.76, "text": " that we can build one thing with the next and and make the whole chain work so for gcc we have to", "tokens": [51296, 300, 321, 393, 1322, 472, 551, 365, 264, 958, 293, 293, 652, 264, 1379, 5021, 589, 370, 337, 290, 1914, 321, 362, 281, 51636], "temperature": 0.0, "avg_logprob": -0.08660815686595683, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.004183651879429817}, {"id": 211, "seek": 142676, "start": 1426.76, "end": 1432.76, "text": " properly package it tested with c++ support with i didn't have time to test and fix all the libraries", "tokens": [50364, 6108, 7372, 309, 8246, 365, 269, 25472, 1406, 365, 741, 994, 380, 362, 565, 281, 1500, 293, 3191, 439, 264, 15148, 50664], "temperature": 0.0, "avg_logprob": -0.11219278558508142, "compression_ratio": 1.5989304812834224, "no_speech_prob": 0.022174406796693802}, {"id": 212, "seek": 142676, "start": 1432.76, "end": 1440.92, "text": " that can be missing on the c++ side then we can we have to describe how to build that using tiny cc", "tokens": [50664, 300, 393, 312, 5361, 322, 264, 269, 25472, 1252, 550, 321, 393, 321, 362, 281, 6786, 577, 281, 1322, 300, 1228, 5870, 269, 66, 51072], "temperature": 0.0, "avg_logprob": -0.11219278558508142, "compression_ratio": 1.5989304812834224, "no_speech_prob": 0.022174406796693802}, {"id": 213, "seek": 142676, "start": 1440.92, "end": 1447.8799999999999, "text": " directly because we had before we had gcc 2.95 in the middle and we don't have it available in in", "tokens": [51072, 3838, 570, 321, 632, 949, 321, 632, 290, 1914, 568, 13, 15718, 294, 264, 2808, 293, 321, 500, 380, 362, 309, 2435, 294, 294, 51420], "temperature": 0.0, "avg_logprob": -0.11219278558508142, "compression_ratio": 1.5989304812834224, "no_speech_prob": 0.022174406796693802}, {"id": 214, "seek": 144788, "start": 1447.88, "end": 1457.72, "text": " ris 5 we have to be able to build gcc 7.5 using the back ported one too in also in ris 5 for tiny cc", "tokens": [50364, 2253, 1025, 321, 362, 281, 312, 1075, 281, 1322, 290, 1914, 1614, 13, 20, 1228, 264, 646, 2436, 292, 472, 886, 294, 611, 294, 2253, 1025, 337, 5870, 269, 66, 50856], "temperature": 0.0, "avg_logprob": -0.14372635754671964, "compression_ratio": 1.9447236180904524, "no_speech_prob": 0.08539031445980072}, {"id": 215, "seek": 144788, "start": 1457.72, "end": 1464.5200000000002, "text": " we have to build the bootstrap old tiny cc using the new mesh um and we have to decide if we are", "tokens": [50856, 321, 362, 281, 1322, 264, 11450, 372, 4007, 1331, 5870, 269, 66, 1228, 264, 777, 17407, 1105, 293, 321, 362, 281, 4536, 498, 321, 366, 51196], "temperature": 0.0, "avg_logprob": -0.14372635754671964, "compression_ratio": 1.9447236180904524, "no_speech_prob": 0.08539031445980072}, {"id": 216, "seek": 144788, "start": 1464.5200000000002, "end": 1470.7600000000002, "text": " going for the to use the upstream one or we are just going to use the bootstrap old tiny cc in a", "tokens": [51196, 516, 337, 264, 281, 764, 264, 33915, 472, 420, 321, 366, 445, 516, 281, 764, 264, 11450, 372, 4007, 1331, 5870, 269, 66, 294, 257, 51508], "temperature": 0.0, "avg_logprob": -0.14372635754671964, "compression_ratio": 1.9447236180904524, "no_speech_prob": 0.08539031445980072}, {"id": 217, "seek": 144788, "start": 1470.7600000000002, "end": 1476.2800000000002, "text": " minute so there are some decisions to be made here in the case of mesh we have to review the", "tokens": [51508, 3456, 370, 456, 366, 512, 5327, 281, 312, 1027, 510, 294, 264, 1389, 295, 17407, 321, 362, 281, 3131, 264, 51784], "temperature": 0.0, "avg_logprob": -0.14372635754671964, "compression_ratio": 1.9447236180904524, "no_speech_prob": 0.08539031445980072}, {"id": 218, "seek": 147628, "start": 1476.28, "end": 1482.6, "text": " ris 5 support which is something we didn't do yet but i think it's pretty pretty advanced so it should", "tokens": [50364, 2253, 1025, 1406, 597, 307, 746, 321, 994, 380, 360, 1939, 457, 741, 519, 309, 311, 1238, 1238, 7339, 370, 309, 820, 50680], "temperature": 0.0, "avg_logprob": -0.08525045969152964, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.006590306293219328}, {"id": 219, "seek": 147628, "start": 1482.6, "end": 1489.8, "text": " be easy to merge and in geeks from the geek side we have to package everything so everything is very", "tokens": [50680, 312, 1858, 281, 22183, 293, 294, 1519, 24785, 490, 264, 36162, 1252, 321, 362, 281, 7372, 1203, 370, 1203, 307, 588, 51040], "temperature": 0.0, "avg_logprob": -0.08525045969152964, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.006590306293219328}, {"id": 220, "seek": 147628, "start": 1489.8, "end": 1495.8799999999999, "text": " well described and the steps for building one compiler with the other is well described in geeks", "tokens": [51040, 731, 7619, 293, 264, 4439, 337, 2390, 472, 31958, 365, 264, 661, 307, 731, 7619, 294, 1519, 24785, 51344], "temperature": 0.0, "avg_logprob": -0.08525045969152964, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.006590306293219328}, {"id": 221, "seek": 147628, "start": 1495.8799999999999, "end": 1503.32, "text": " so everyone can benefit and can use everyone can use it and in the end as an extra we have to do", "tokens": [51344, 370, 1518, 393, 5121, 293, 393, 764, 1518, 393, 764, 309, 293, 294, 264, 917, 382, 364, 2857, 321, 362, 281, 360, 51716], "temperature": 0.0, "avg_logprob": -0.08525045969152964, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.006590306293219328}, {"id": 222, "seek": 150332, "start": 1503.32, "end": 1508.6799999999998, "text": " all this in real hardware so we don't have the problems over the cross compilation and stuff", "tokens": [50364, 439, 341, 294, 957, 8837, 370, 321, 500, 380, 362, 264, 2740, 670, 264, 3278, 40261, 293, 1507, 50632], "temperature": 0.0, "avg_logprob": -0.05907967326405284, "compression_ratio": 1.7162162162162162, "no_speech_prob": 0.01509414054453373}, {"id": 223, "seek": 150332, "start": 1508.6799999999998, "end": 1514.36, "text": " like that which are cool for testing but they are not cool if we want to make something that is useful", "tokens": [50632, 411, 300, 597, 366, 1627, 337, 4997, 457, 436, 366, 406, 1627, 498, 321, 528, 281, 652, 746, 300, 307, 4420, 50916], "temperature": 0.0, "avg_logprob": -0.05907967326405284, "compression_ratio": 1.7162162162162162, "no_speech_prob": 0.01509414054453373}, {"id": 224, "seek": 150332, "start": 1514.36, "end": 1522.04, "text": " in real life so as last words yes i'm just finishing um as you can imagine from the talk", "tokens": [50916, 294, 957, 993, 370, 382, 1036, 2283, 2086, 741, 478, 445, 12693, 1105, 382, 291, 393, 3811, 490, 264, 751, 51300], "temperature": 0.0, "avg_logprob": -0.05907967326405284, "compression_ratio": 1.7162162162162162, "no_speech_prob": 0.01509414054453373}, {"id": 225, "seek": 150332, "start": 1522.04, "end": 1528.36, "text": " there's a lot of work to be done but most of it is just the result of the integration that needs", "tokens": [51300, 456, 311, 257, 688, 295, 589, 281, 312, 1096, 457, 881, 295, 309, 307, 445, 264, 1874, 295, 264, 10980, 300, 2203, 51616], "temperature": 0.0, "avg_logprob": -0.05907967326405284, "compression_ratio": 1.7162162162162162, "no_speech_prob": 0.01509414054453373}, {"id": 226, "seek": 152836, "start": 1528.36, "end": 1534.84, "text": " to be done after all the time i've been working just bringing some of the the dots in this line", "tokens": [50364, 281, 312, 1096, 934, 439, 264, 565, 741, 600, 668, 1364, 445, 5062, 512, 295, 264, 264, 15026, 294, 341, 1622, 50688], "temperature": 0.0, "avg_logprob": -0.08660604257499223, "compression_ratio": 1.83984375, "no_speech_prob": 0.015022745355963707}, {"id": 227, "seek": 152836, "start": 1535.4799999999998, "end": 1541.32, "text": " to ris 5 so now the work that is missing is packaging and integrating everything and maybe", "tokens": [50720, 281, 2253, 1025, 370, 586, 264, 589, 300, 307, 5361, 307, 16836, 293, 26889, 1203, 293, 1310, 51012], "temperature": 0.0, "avg_logprob": -0.08660604257499223, "compression_ratio": 1.83984375, "no_speech_prob": 0.015022745355963707}, {"id": 228, "seek": 152836, "start": 1541.32, "end": 1546.76, "text": " i'm not the best guy for doing that so we are looking for a little bit more funding from an", "tokens": [51012, 741, 478, 406, 264, 1151, 2146, 337, 884, 300, 370, 321, 366, 1237, 337, 257, 707, 857, 544, 6137, 490, 364, 51284], "temperature": 0.0, "avg_logprob": -0.08660604257499223, "compression_ratio": 1.83984375, "no_speech_prob": 0.015022745355963707}, {"id": 229, "seek": 152836, "start": 1546.76, "end": 1552.28, "text": " internet and i think internet is is open to give us some help on that and we are going to involve", "tokens": [51284, 4705, 293, 741, 519, 4705, 307, 307, 1269, 281, 976, 505, 512, 854, 322, 300, 293, 321, 366, 516, 281, 9494, 51560], "temperature": 0.0, "avg_logprob": -0.08660604257499223, "compression_ratio": 1.83984375, "no_speech_prob": 0.015022745355963707}, {"id": 230, "seek": 152836, "start": 1552.28, "end": 1557.0, "text": " more more people doing this kind of work so if you like this kind of work you can also join us", "tokens": [51560, 544, 544, 561, 884, 341, 733, 295, 589, 370, 498, 291, 411, 341, 733, 295, 589, 291, 393, 611, 3917, 505, 51796], "temperature": 0.0, "avg_logprob": -0.08660604257499223, "compression_ratio": 1.83984375, "no_speech_prob": 0.015022745355963707}, {"id": 231, "seek": 155700, "start": 1557.0, "end": 1562.6, "text": " and help us do this and also i want to thank all the people that that was involved in this one", "tokens": [50364, 293, 854, 505, 360, 341, 293, 611, 741, 528, 281, 1309, 439, 264, 561, 300, 300, 390, 3288, 294, 341, 472, 50644], "temperature": 0.0, "avg_logprob": -0.060168978932139634, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.005484384018927813}, {"id": 232, "seek": 155700, "start": 1562.6, "end": 1569.96, "text": " because i had help from many people and some people um told me that they want to help me", "tokens": [50644, 570, 741, 632, 854, 490, 867, 561, 293, 512, 561, 1105, 1907, 385, 300, 436, 528, 281, 854, 385, 51012], "temperature": 0.0, "avg_logprob": -0.060168978932139634, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.005484384018927813}, {"id": 233, "seek": 155700, "start": 1569.96, "end": 1576.04, "text": " further so thank you very much to everyone and just need just to finish if you want to to join us", "tokens": [51012, 3052, 370, 1309, 291, 588, 709, 281, 1518, 293, 445, 643, 445, 281, 2413, 498, 291, 528, 281, 281, 3917, 505, 51316], "temperature": 0.0, "avg_logprob": -0.060168978932139634, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.005484384018927813}, {"id": 234, "seek": 155700, "start": 1576.04, "end": 1581.56, "text": " or if you have any question uh or anything like that you have my email there and these are the", "tokens": [51316, 420, 498, 291, 362, 604, 1168, 2232, 420, 1340, 411, 300, 291, 362, 452, 3796, 456, 293, 613, 366, 264, 51592], "temperature": 0.0, "avg_logprob": -0.060168978932139634, "compression_ratio": 1.898989898989899, "no_speech_prob": 0.005484384018927813}, {"id": 235, "seek": 158156, "start": 1581.56, "end": 1589.48, "text": " relevant uh ioc channels you can you can join and also just to finish i know this is hard i know", "tokens": [50364, 7340, 2232, 741, 905, 9235, 291, 393, 291, 393, 3917, 293, 611, 445, 281, 2413, 741, 458, 341, 307, 1152, 741, 458, 50760], "temperature": 0.0, "avg_logprob": -0.1058084221296413, "compression_ratio": 1.8186046511627907, "no_speech_prob": 0.01986081525683403}, {"id": 236, "seek": 158156, "start": 1589.48, "end": 1597.24, "text": " this is complex but if you want to join it and if you are open to learn new things fight against", "tokens": [50760, 341, 307, 3997, 457, 498, 291, 528, 281, 3917, 309, 293, 498, 291, 366, 1269, 281, 1466, 777, 721, 2092, 1970, 51148], "temperature": 0.0, "avg_logprob": -0.1058084221296413, "compression_ratio": 1.8186046511627907, "no_speech_prob": 0.01986081525683403}, {"id": 237, "seek": 158156, "start": 1597.24, "end": 1603.32, "text": " all compilers and some code that is not very easy to read sometimes i'll be there right i'll be there", "tokens": [51148, 439, 715, 388, 433, 293, 512, 3089, 300, 307, 406, 588, 1858, 281, 1401, 2171, 741, 603, 312, 456, 558, 741, 603, 312, 456, 51452], "temperature": 0.0, "avg_logprob": -0.1058084221296413, "compression_ratio": 1.8186046511627907, "no_speech_prob": 0.01986081525683403}, {"id": 238, "seek": 158156, "start": 1603.32, "end": 1609.56, "text": " trying to help you and give you the psychological support that everyone needs sometimes so just", "tokens": [51452, 1382, 281, 854, 291, 293, 976, 291, 264, 14346, 1406, 300, 1518, 2203, 2171, 370, 445, 51764], "temperature": 0.0, "avg_logprob": -0.1058084221296413, "compression_ratio": 1.8186046511627907, "no_speech_prob": 0.01986081525683403}, {"id": 239, "seek": 160956, "start": 1609.56, "end": 1615.56, "text": " just join it's going to be a lot of fun i promise so thank you very much bye bye thanks for being there", "tokens": [50364, 445, 3917, 309, 311, 516, 281, 312, 257, 688, 295, 1019, 741, 6228, 370, 1309, 291, 588, 709, 6543, 6543, 3231, 337, 885, 456, 50664], "temperature": 0.0, "avg_logprob": -0.158397526808188, "compression_ratio": 1.7117647058823529, "no_speech_prob": 0.009796885773539543}, {"id": 240, "seek": 160956, "start": 1626.36, "end": 1632.76, "text": " we are live then okay that's great yeah okay let's answer some questions then yeah okay so", "tokens": [51204, 321, 366, 1621, 550, 1392, 300, 311, 869, 1338, 1392, 718, 311, 1867, 512, 1651, 550, 1338, 1392, 370, 51524], "temperature": 0.0, "avg_logprob": -0.158397526808188, "compression_ratio": 1.7117647058823529, "no_speech_prob": 0.009796885773539543}, {"id": 241, "seek": 160956, "start": 1633.56, "end": 1639.3999999999999, "text": " uh there's a question about the hardware i'm using to compile so yeah the easiest answer is just", "tokens": [51564, 2232, 456, 311, 257, 1168, 466, 264, 8837, 741, 478, 1228, 281, 31413, 370, 1338, 264, 12889, 1867, 307, 445, 51856], "temperature": 0.0, "avg_logprob": -0.158397526808188, "compression_ratio": 1.7117647058823529, "no_speech_prob": 0.009796885773539543}, {"id": 242, "seek": 163940, "start": 1639.4, "end": 1646.1200000000001, "text": " i use my laptop i have a laptop which is not a very powerful one but it's not even it's a good one", "tokens": [50364, 741, 764, 452, 10732, 741, 362, 257, 10732, 597, 307, 406, 257, 588, 4005, 472, 457, 309, 311, 406, 754, 309, 311, 257, 665, 472, 50700], "temperature": 0.0, "avg_logprob": -0.14259441693623862, "compression_ratio": 1.7922705314009661, "no_speech_prob": 0.011198917403817177}, {"id": 243, "seek": 163940, "start": 1646.1200000000001, "end": 1655.0800000000002, "text": " and i just use that i'm a very patient guy i i have to compile many gcc many times yeah yes patient", "tokens": [50700, 293, 741, 445, 764, 300, 741, 478, 257, 588, 4537, 2146, 741, 741, 362, 281, 31413, 867, 290, 1914, 867, 1413, 1338, 2086, 4537, 51148], "temperature": 0.0, "avg_logprob": -0.14259441693623862, "compression_ratio": 1.7922705314009661, "no_speech_prob": 0.011198917403817177}, {"id": 244, "seek": 163940, "start": 1655.72, "end": 1661.72, "text": " yes wait to wait to finish and that's that's what i'm doing for the future we are looking", "tokens": [51180, 2086, 1699, 281, 1699, 281, 2413, 293, 300, 311, 300, 311, 437, 741, 478, 884, 337, 264, 2027, 321, 366, 1237, 51480], "temperature": 0.0, "avg_logprob": -0.14259441693623862, "compression_ratio": 1.7922705314009661, "no_speech_prob": 0.011198917403817177}, {"id": 245, "seek": 163940, "start": 1661.72, "end": 1667.4, "text": " on buying some risk risk five hardware in order to test all these things in native", "tokens": [51480, 322, 6382, 512, 3148, 3148, 1732, 8837, 294, 1668, 281, 1500, 439, 613, 721, 294, 8470, 51764], "temperature": 0.0, "avg_logprob": -0.14259441693623862, "compression_ratio": 1.7922705314009661, "no_speech_prob": 0.011198917403817177}, {"id": 246, "seek": 166740, "start": 1667.96, "end": 1674.0400000000002, "text": " in a native machine but at the moment i'm just using my laptop so yeah that's that's the answer", "tokens": [50392, 294, 257, 8470, 3479, 457, 412, 264, 1623, 741, 478, 445, 1228, 452, 10732, 370, 1338, 300, 311, 300, 311, 264, 1867, 50696], "temperature": 0.0, "avg_logprob": -0.17922018703661466, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.0032804266083985567}, {"id": 247, "seek": 166740, "start": 1676.1200000000001, "end": 1681.88, "text": " so um what does geeks and this project think about rust versus sea that's on the first", "tokens": [50800, 370, 1105, 437, 775, 1519, 24785, 293, 341, 1716, 519, 466, 15259, 5717, 4158, 300, 311, 322, 264, 700, 51088], "temperature": 0.0, "avg_logprob": -0.17922018703661466, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.0032804266083985567}, {"id": 248, "seek": 166740, "start": 1681.88, "end": 1688.8400000000001, "text": " oh that's a good question um i can't i can't talk on on the name of geeks but i can't talk about", "tokens": [51088, 1954, 300, 311, 257, 665, 1168, 1105, 741, 393, 380, 741, 393, 380, 751, 322, 322, 264, 1315, 295, 1519, 24785, 457, 741, 393, 380, 751, 466, 51436], "temperature": 0.0, "avg_logprob": -0.17922018703661466, "compression_ratio": 1.7116564417177915, "no_speech_prob": 0.0032804266083985567}, {"id": 249, "seek": 168884, "start": 1688.84, "end": 1696.04, "text": " around myself uh rust is a cool language it's a fantastic language but it's it's it's huge so", "tokens": [50364, 926, 2059, 2232, 15259, 307, 257, 1627, 2856, 309, 311, 257, 5456, 2856, 457, 309, 311, 309, 311, 309, 311, 2603, 370, 50724], "temperature": 0.0, "avg_logprob": -0.0938731419671442, "compression_ratio": 1.8028846153846154, "no_speech_prob": 0.19786351919174194}, {"id": 250, "seek": 168884, "start": 1696.04, "end": 1701.8799999999999, "text": " sometimes i think it's going to be really hard to bootstrap we had issues with that if i don't", "tokens": [50724, 2171, 741, 519, 309, 311, 516, 281, 312, 534, 1152, 281, 11450, 372, 4007, 321, 632, 2663, 365, 300, 498, 741, 500, 380, 51016], "temperature": 0.0, "avg_logprob": -0.0938731419671442, "compression_ratio": 1.8028846153846154, "no_speech_prob": 0.19786351919174194}, {"id": 251, "seek": 168884, "start": 1701.8799999999999, "end": 1709.56, "text": " remember uh wrong right like we have to build it through gcc and start like the bootstrap", "tokens": [51016, 1604, 2232, 2085, 558, 411, 321, 362, 281, 1322, 309, 807, 290, 1914, 293, 722, 411, 264, 11450, 372, 4007, 51400], "temperature": 0.0, "avg_logprob": -0.0938731419671442, "compression_ratio": 1.8028846153846154, "no_speech_prob": 0.19786351919174194}, {"id": 252, "seek": 168884, "start": 1709.56, "end": 1715.8799999999999, "text": " in process is really complex right so yeah rust is cool but but for bootstrap in issue is is not", "tokens": [51400, 294, 1399, 307, 534, 3997, 558, 370, 1338, 15259, 307, 1627, 457, 457, 337, 11450, 372, 4007, 294, 2734, 307, 307, 406, 51716], "temperature": 0.0, "avg_logprob": -0.0938731419671442, "compression_ratio": 1.8028846153846154, "no_speech_prob": 0.19786351919174194}, {"id": 253, "seek": 171588, "start": 1715.88, "end": 1724.2800000000002, "text": " the best and in the case of sea we have i think yeah we are the relationship has been cut off so", "tokens": [50364, 264, 1151, 293, 294, 264, 1389, 295, 4158, 321, 362, 741, 519, 1338, 321, 366, 264, 2480, 575, 668, 1723, 766, 370, 50784], "temperature": 0.0, "avg_logprob": -0.23504863901341216, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.01285086665302515}, {"id": 254, "seek": 171588, "start": 1724.92, "end": 1732.44, "text": " yeah okay yeah you can continue your point in the chat here or someone shows in this in the", "tokens": [50816, 1338, 1392, 1338, 291, 393, 2354, 428, 935, 294, 264, 5081, 510, 420, 1580, 3110, 294, 341, 294, 264, 51192], "temperature": 0.0, "avg_logprob": -0.23504863901341216, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.01285086665302515}, {"id": 255, "seek": 171588, "start": 1732.44, "end": 1739.48, "text": " talk room okay yeah what what do i have the link to the to the next room or how how is it is", "tokens": [51192, 751, 1808, 1392, 1338, 437, 437, 360, 741, 362, 264, 2113, 281, 264, 281, 264, 958, 1808, 420, 577, 577, 307, 309, 307, 51544], "temperature": 0.0, "avg_logprob": -0.23504863901341216, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.01285086665302515}, {"id": 256, "seek": 171588, "start": 1740.1200000000001, "end": 1745.48, "text": " so if you're in the bringing this quite a big bootstrap room that is your talk specific room", "tokens": [51576, 370, 498, 291, 434, 294, 264, 5062, 341, 1596, 257, 955, 11450, 372, 4007, 1808, 300, 307, 428, 751, 2685, 1808, 51844], "temperature": 0.0, "avg_logprob": -0.23504863901341216, "compression_ratio": 1.8155339805825244, "no_speech_prob": 0.01285086665302515}, {"id": 257, "seek": 174588, "start": 1746.2, "end": 1753.4, "text": " okay so people can come and interact with you here even when the other talks are going on okay yeah", "tokens": [50380, 1392, 370, 561, 393, 808, 293, 4648, 365, 291, 510, 754, 562, 264, 661, 6686, 366, 516, 322, 1392, 1338, 50740], "temperature": 0.0, "avg_logprob": -0.2624309781997923, "compression_ratio": 1.65, "no_speech_prob": 0.00572199048474431}, {"id": 258, "seek": 174588, "start": 1762.2, "end": 1766.7600000000002, "text": " so thanks for speaking at the first time you guys thank you thank you for being there and helping me", "tokens": [51180, 370, 3231, 337, 4124, 412, 264, 700, 565, 291, 1074, 1309, 291, 1309, 291, 337, 885, 456, 293, 4315, 385, 51408], "temperature": 0.0, "avg_logprob": -0.2624309781997923, "compression_ratio": 1.65, "no_speech_prob": 0.00572199048474431}, {"id": 259, "seek": 174588, "start": 1769.0800000000002, "end": 1773.16, "text": " i'll catch you later then i'll move on to the next yeah bye bye", "tokens": [51524, 741, 603, 3745, 291, 1780, 550, 741, 603, 1286, 322, 281, 264, 958, 1338, 6543, 6543, 51728], "temperature": 0.0, "avg_logprob": -0.2624309781997923, "compression_ratio": 1.65, "no_speech_prob": 0.00572199048474431}, {"id": 260, "seek": 177588, "start": 1775.88, "end": 1776.38, "text": " you", "tokens": [50364, 291, 50389], "temperature": 0.0, "avg_logprob": -0.979012131690979, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.3025057315826416}], "language": "en"}