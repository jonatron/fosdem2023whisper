{"text": " Thank you. We start with a small introduction to have a bit of context about Djubaco. I'm Mathieu Goetje, I'm a freelance developer and I'm working, my main client is the Qwix project and for there I'm the lead developer of Flimzim. What is Qwix? Qwix is a project to provide content where internet is not there and the question we try to answer and we have answered is how to distribute static websites. And for example, if you don't know all Wikipedia in English, it's 95 gigabytes and it's 6.5 billion articles and media. And to do that we use the Zim format. It's an archive format for web content and content is partially compressed so you can compress textual content or not compress images or videos and you can do a random access without initial decompression so you can access the content inside the archive directly. It works well and pretty efficient but there is a few flaws within the design and the archive is really tied to web contents and to Qwix and you cannot add another metadata but the question I tried to answer is could we reuse the Zim format, the good idea of the Zim format and do better and more generic. So here is Djubaco. Djubaco is a Japanese name for the bento boxes and it's more boxes you can compose the way you want depending on your needs. And Djubaco is a new format independent of Qwix project and this is a good idea of the Zim format but generic. And Djubaco is a meta container. It tells you how to store things but it's up to you to decide what do you want to store and how do you want to organize them and there is a reference library written in Rust. The feature of Djubaco, it's mainly read only, archive are mainly read only, this is selective compression so you can compress the content or not. No initial decompression needed and you can do random access on the archive. It's configurable so you can decide which property you want on the entries. There is an extension system so your user can download an archive and they can download extra content to add content to the archive you provide. It's embeddable in another file and it's composable so you can compose different kind of entry together in the same container. So it checks them and a few features to do, signature and encryption, direct access to uncompressed content, content deduplication, modification, different patch between archive and overlay. Let's have a quick tour on the internal structure. The Djubaco containers are organized around packs. There is three kinds of packs, manifest packs, content and the directory. Each pack can be stored individually in a file in the file system or they can be put together in one file and then you distribute this file to your user. The manifest pack is the main pack, this is a pack you will try to open when you want to open a Djubaco container and it's mainly a list of all the other packs of the container. The content pack is a pack which contains the raw content, compressed or not, and without any metadata. The directory pack is where you store the entries and the entries can print to contents in the content pack. This is a configurable part of Djubaco and inside the directory pack there is entries with a specific schema so you have to define the schema and the schema is the series of properties and their types. The content is just a property, it's a link to the content in the content pack so you can have entries at that point to several contents or no contents at all and each entry schema can contain violence, it's kind of union or enum in Proclamation EC or REST and you can have different kind of entries inside one directory pack. Each use case, why you would like to use Djubaco? The first use case is file archive, there is two arcs which is an equivalent of tar and here we have one kind of entry with three variants, file, symlink and directory, all three variants share two common property and for example the file variants add the pointer to a contents, symlink and the directory just store the first and pointer to the first entry and the number of entries in the directory. So it's kind of an organization and three structure as a file system. There is no index property for now but just mainly because arcs is pretty young and I don't want to bother with them while testing arcs and Djubaco but it's hard. It's a file archive so we can compare a bit arcs with tar to see how Djubaco and arcs perform. If we take the Linux source code, the full Linux source code is more than one gigabyte and both our tar and arcs are compressing the source code is about 130 or 14 megabytes. Crescent time arcs is a bit faster than tar and expression time we are pretty close arcs is a bit slower but we have someone pretty close, both tools are pretty close. What is interesting is when we try to list the contents of the archive, tar took almost the same time that expression because to list the contents in the tar archive you need to uncompress all the contents and arcs is very faster because the list of the entries are separated from the contents itself. If you want to extract only one content from the archive and we try to, what's that called dumping and when you try to dump a third of all the entries, you can see that arcs is really really really faster and the same way extracting one entry from the tar is pretty close from the time of listing the contents the same way as you need to uncompress all the contents of the tar archive and arcs you can locate the content and do a direct access to the content without uncompressing other contents. Once you think that we can do that is mount the archive, directly mount the archive on the file system and if you mount the archive and you do a diff of the content between the original source and what is mounted, if you do a diff between two plain directories it's a bit less than a second with arcs it's four seconds and half and tar is an estimation it will take something like ten hours to do the comparison. You can do something even more interesting with a mounted file system or with a mounting Linux source is compiling the kernel so if you compile the kernel on the plain file system it's a bit more than half an hour and if you compile the kernel using the mounted arcs archive it's a bit less than an hour. What is interesting here is that the compilation is made with G8 so there is eight processes and arcs a fuel file system is monostated so there is a huge bottleneck for now but if we move to a multi-threaded fuel file system it should be even better. The use case is the GIM it's an equivalent of kind of equivalent of ZIM format there is two variants only and here we are storing the entries as a plain list and there is no tree structure and the GIM binary just integrates a small HTTP server looking for the entries. What we can do also is we could replace for example RPM and DEB with arcs or things based on jubacca so you could download your package and not extract it from the file system just open it directly and even a GVL or debugging fault that could be put in specific content pack of the same archive so it could simplify the management and you will not need to have different package to different sub-type of contents of your packages. OCI containers are based on Tor you need to extract them on the file system before running a container so you could just use arcs among them or you can even use directly put different layer in different content pack and so the wall images will be one jubacca container. File format almost all file formats are in fact container for other content so you could use jubacca to just organize the content you want to store what you want for your own project and your own file format. Websites jubacca is written in rest you could run it in wasm and so jubacca could run you could load your jubacca archive in the browser once and just open it directly in the browser. Backups backup jubacca is almost incremental by design if you reuse the content pack of the backups previous backup this is incremental and you can decide which property you want to have so for example you can add a checksum on each sentries to do a comparison between the content store in the backup and what you have on the file system. Embedding resources jubacca can be embedded in executor programs or even more this presentation you can download this presentation at this address and you will have a file and this file is an arched archive so you can just use the arch tool to list the content extract or month archive and you will have access to all the file of this presentation it is revealed yes and it's HTML content but the same file is also a gym archive so you can just use the gym tool to just set the content and open a browser to the local host and the same files is also a program so if you make it executable you can run the program itself to month extract or set the content what is interesting is that between our the content is not shared it is an arch and gym archive but it's just a view to the same content there is no duplication it's not two archive put together it's really one archive with two kind of view of the same content and the last line is the exact command used to serve this actual presentation conclusion this is a new way of thinking we could extract you could use archive directly instead of extracting it so we can reinvent the wall without thinking about using directly the archive it's a new way of thinking it's generic it's a command based tool that can add that can add that to different usage but it's pretty new maybe some crash and you can expect maybe some change in the specification thank you are there any questions can you repeat the question okay I don't know I know about squash fs but the thing is that jubaco is not a file system arcs is an archive to store files but jubaco is not so jubaco is more generic than crime fs or squash fs probably and arcs compared to squash fs is is is arcs slower than squash fs on size arcs is better but on the performance is slower we could implement that in other languages yeah could we re-implement this in other languages you could there is the specification is language and mystic but just I just implement reference library in rest battle but the specification is is public sorry that zip is pretty small but zip is is a slower the arcs in almost any any kind of operation and is bigger than arcs also thank you", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.5600000000000005, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.40772247314453125, "compression_ratio": 1.3820224719101124, "no_speech_prob": 0.1375766396522522}, {"id": 1, "seek": 0, "start": 7.5600000000000005, "end": 12.52, "text": " We start with a small introduction to have a bit of context about Djubaco.", "tokens": [492, 722, 365, 257, 1359, 9339, 281, 362, 257, 857, 295, 4319, 466, 33464, 836, 11428, 13], "temperature": 0.0, "avg_logprob": -0.40772247314453125, "compression_ratio": 1.3820224719101124, "no_speech_prob": 0.1375766396522522}, {"id": 2, "seek": 0, "start": 12.52, "end": 19.52, "text": " I'm Mathieu Goetje, I'm a freelance developer and I'm working, my main client is the Qwix", "tokens": [286, 478, 15776, 19347, 1037, 302, 2884, 11, 286, 478, 257, 47875, 10754, 293, 286, 478, 1364, 11, 452, 2135, 6423, 307, 264, 1249, 86, 970], "temperature": 0.0, "avg_logprob": -0.40772247314453125, "compression_ratio": 1.3820224719101124, "no_speech_prob": 0.1375766396522522}, {"id": 3, "seek": 0, "start": 19.52, "end": 25.68, "text": " project and for there I'm the lead developer of Flimzim.", "tokens": [1716, 293, 337, 456, 286, 478, 264, 1477, 10754, 295, 3235, 332, 89, 332, 13], "temperature": 0.0, "avg_logprob": -0.40772247314453125, "compression_ratio": 1.3820224719101124, "no_speech_prob": 0.1375766396522522}, {"id": 4, "seek": 0, "start": 25.68, "end": 26.68, "text": " What is Qwix?", "tokens": [708, 307, 1249, 86, 970, 30], "temperature": 0.0, "avg_logprob": -0.40772247314453125, "compression_ratio": 1.3820224719101124, "no_speech_prob": 0.1375766396522522}, {"id": 5, "seek": 2668, "start": 26.68, "end": 33.519999999999996, "text": " Qwix is a project to provide content where internet is not there and the question we", "tokens": [1249, 86, 970, 307, 257, 1716, 281, 2893, 2701, 689, 4705, 307, 406, 456, 293, 264, 1168, 321], "temperature": 0.0, "avg_logprob": -0.3096098026759188, "compression_ratio": 1.450261780104712, "no_speech_prob": 0.00015884326421655715}, {"id": 6, "seek": 2668, "start": 33.519999999999996, "end": 38.6, "text": " try to answer and we have answered is how to distribute static websites.", "tokens": [853, 281, 1867, 293, 321, 362, 10103, 307, 577, 281, 20594, 13437, 12891, 13], "temperature": 0.0, "avg_logprob": -0.3096098026759188, "compression_ratio": 1.450261780104712, "no_speech_prob": 0.00015884326421655715}, {"id": 7, "seek": 2668, "start": 38.6, "end": 46.6, "text": " And for example, if you don't know all Wikipedia in English, it's 95 gigabytes and it's 6.5", "tokens": [400, 337, 1365, 11, 498, 291, 500, 380, 458, 439, 28999, 294, 3669, 11, 309, 311, 13420, 42741, 293, 309, 311, 1386, 13, 20], "temperature": 0.0, "avg_logprob": -0.3096098026759188, "compression_ratio": 1.450261780104712, "no_speech_prob": 0.00015884326421655715}, {"id": 8, "seek": 2668, "start": 46.6, "end": 49.760000000000005, "text": " billion articles and media.", "tokens": [5218, 11290, 293, 3021, 13], "temperature": 0.0, "avg_logprob": -0.3096098026759188, "compression_ratio": 1.450261780104712, "no_speech_prob": 0.00015884326421655715}, {"id": 9, "seek": 4976, "start": 49.76, "end": 57.839999999999996, "text": " And to do that we use the Zim format. It's an archive format for web content and content", "tokens": [400, 281, 360, 300, 321, 764, 264, 1176, 332, 7877, 13, 467, 311, 364, 23507, 7877, 337, 3670, 2701, 293, 2701], "temperature": 0.0, "avg_logprob": -0.20497619971800385, "compression_ratio": 1.8372093023255813, "no_speech_prob": 4.323948087403551e-05}, {"id": 10, "seek": 4976, "start": 57.839999999999996, "end": 63.64, "text": " is partially compressed so you can compress textual content or not compress images or", "tokens": [307, 18886, 30353, 370, 291, 393, 14778, 2487, 901, 2701, 420, 406, 14778, 5267, 420], "temperature": 0.0, "avg_logprob": -0.20497619971800385, "compression_ratio": 1.8372093023255813, "no_speech_prob": 4.323948087403551e-05}, {"id": 11, "seek": 4976, "start": 63.64, "end": 69.68, "text": " videos and you can do a random access without initial decompression so you can access the", "tokens": [2145, 293, 291, 393, 360, 257, 4974, 2105, 1553, 5883, 22867, 2775, 370, 291, 393, 2105, 264], "temperature": 0.0, "avg_logprob": -0.20497619971800385, "compression_ratio": 1.8372093023255813, "no_speech_prob": 4.323948087403551e-05}, {"id": 12, "seek": 4976, "start": 69.68, "end": 72.56, "text": " content inside the archive directly.", "tokens": [2701, 1854, 264, 23507, 3838, 13], "temperature": 0.0, "avg_logprob": -0.20497619971800385, "compression_ratio": 1.8372093023255813, "no_speech_prob": 4.323948087403551e-05}, {"id": 13, "seek": 4976, "start": 72.56, "end": 78.88, "text": " It works well and pretty efficient but there is a few flaws within the design and the archive", "tokens": [467, 1985, 731, 293, 1238, 7148, 457, 456, 307, 257, 1326, 27108, 1951, 264, 1715, 293, 264, 23507], "temperature": 0.0, "avg_logprob": -0.20497619971800385, "compression_ratio": 1.8372093023255813, "no_speech_prob": 4.323948087403551e-05}, {"id": 14, "seek": 7888, "start": 78.88, "end": 86.67999999999999, "text": " is really tied to web contents and to Qwix and you cannot add another metadata but the", "tokens": [307, 534, 9601, 281, 3670, 15768, 293, 281, 1249, 86, 970, 293, 291, 2644, 909, 1071, 26603, 457, 264], "temperature": 0.0, "avg_logprob": -0.20284662441331514, "compression_ratio": 1.6713615023474178, "no_speech_prob": 3.932701292796992e-05}, {"id": 15, "seek": 7888, "start": 86.67999999999999, "end": 92.67999999999999, "text": " question I tried to answer is could we reuse the Zim format, the good idea of the Zim format", "tokens": [1168, 286, 3031, 281, 1867, 307, 727, 321, 26225, 264, 1176, 332, 7877, 11, 264, 665, 1558, 295, 264, 1176, 332, 7877], "temperature": 0.0, "avg_logprob": -0.20284662441331514, "compression_ratio": 1.6713615023474178, "no_speech_prob": 3.932701292796992e-05}, {"id": 16, "seek": 7888, "start": 92.67999999999999, "end": 96.39999999999999, "text": " and do better and more generic.", "tokens": [293, 360, 1101, 293, 544, 19577, 13], "temperature": 0.0, "avg_logprob": -0.20284662441331514, "compression_ratio": 1.6713615023474178, "no_speech_prob": 3.932701292796992e-05}, {"id": 17, "seek": 7888, "start": 96.39999999999999, "end": 97.39999999999999, "text": " So here is Djubaco.", "tokens": [407, 510, 307, 33464, 836, 11428, 13], "temperature": 0.0, "avg_logprob": -0.20284662441331514, "compression_ratio": 1.6713615023474178, "no_speech_prob": 3.932701292796992e-05}, {"id": 18, "seek": 7888, "start": 97.39999999999999, "end": 104.56, "text": " Djubaco is a Japanese name for the bento boxes and it's more boxes you can compose the way", "tokens": [33464, 836, 11428, 307, 257, 5433, 1315, 337, 264, 14075, 78, 9002, 293, 309, 311, 544, 9002, 291, 393, 35925, 264, 636], "temperature": 0.0, "avg_logprob": -0.20284662441331514, "compression_ratio": 1.6713615023474178, "no_speech_prob": 3.932701292796992e-05}, {"id": 19, "seek": 7888, "start": 104.56, "end": 107.67999999999999, "text": " you want depending on your needs.", "tokens": [291, 528, 5413, 322, 428, 2203, 13], "temperature": 0.0, "avg_logprob": -0.20284662441331514, "compression_ratio": 1.6713615023474178, "no_speech_prob": 3.932701292796992e-05}, {"id": 20, "seek": 10768, "start": 107.68, "end": 113.92, "text": " And Djubaco is a new format independent of Qwix project and this is a good idea of the", "tokens": [400, 33464, 836, 11428, 307, 257, 777, 7877, 6695, 295, 1249, 86, 970, 1716, 293, 341, 307, 257, 665, 1558, 295, 264], "temperature": 0.0, "avg_logprob": -0.18619424646550958, "compression_ratio": 1.6224489795918366, "no_speech_prob": 5.697819506167434e-05}, {"id": 21, "seek": 10768, "start": 113.92, "end": 117.56, "text": " Zim format but generic.", "tokens": [1176, 332, 7877, 457, 19577, 13], "temperature": 0.0, "avg_logprob": -0.18619424646550958, "compression_ratio": 1.6224489795918366, "no_speech_prob": 5.697819506167434e-05}, {"id": 22, "seek": 10768, "start": 117.56, "end": 119.64000000000001, "text": " And Djubaco is a meta container.", "tokens": [400, 33464, 836, 11428, 307, 257, 19616, 10129, 13], "temperature": 0.0, "avg_logprob": -0.18619424646550958, "compression_ratio": 1.6224489795918366, "no_speech_prob": 5.697819506167434e-05}, {"id": 23, "seek": 10768, "start": 119.64000000000001, "end": 125.60000000000001, "text": " It tells you how to store things but it's up to you to decide what do you want to store", "tokens": [467, 5112, 291, 577, 281, 3531, 721, 457, 309, 311, 493, 281, 291, 281, 4536, 437, 360, 291, 528, 281, 3531], "temperature": 0.0, "avg_logprob": -0.18619424646550958, "compression_ratio": 1.6224489795918366, "no_speech_prob": 5.697819506167434e-05}, {"id": 24, "seek": 10768, "start": 125.60000000000001, "end": 134.12, "text": " and how do you want to organize them and there is a reference library written in Rust.", "tokens": [293, 577, 360, 291, 528, 281, 13859, 552, 293, 456, 307, 257, 6408, 6405, 3720, 294, 34952, 13], "temperature": 0.0, "avg_logprob": -0.18619424646550958, "compression_ratio": 1.6224489795918366, "no_speech_prob": 5.697819506167434e-05}, {"id": 25, "seek": 13412, "start": 134.12, "end": 140.04, "text": " The feature of Djubaco, it's mainly read only, archive are mainly read only, this is selective", "tokens": [440, 4111, 295, 33464, 836, 11428, 11, 309, 311, 8704, 1401, 787, 11, 23507, 366, 8704, 1401, 787, 11, 341, 307, 33930], "temperature": 0.0, "avg_logprob": -0.15341636112758092, "compression_ratio": 1.759090909090909, "no_speech_prob": 2.5411636670469306e-05}, {"id": 26, "seek": 13412, "start": 140.04, "end": 144.28, "text": " compression so you can compress the content or not.", "tokens": [19355, 370, 291, 393, 14778, 264, 2701, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.15341636112758092, "compression_ratio": 1.759090909090909, "no_speech_prob": 2.5411636670469306e-05}, {"id": 27, "seek": 13412, "start": 144.28, "end": 149.28, "text": " No initial decompression needed and you can do random access on the archive.", "tokens": [883, 5883, 22867, 2775, 2978, 293, 291, 393, 360, 4974, 2105, 322, 264, 23507, 13], "temperature": 0.0, "avg_logprob": -0.15341636112758092, "compression_ratio": 1.759090909090909, "no_speech_prob": 2.5411636670469306e-05}, {"id": 28, "seek": 13412, "start": 149.28, "end": 155.28, "text": " It's configurable so you can decide which property you want on the entries.", "tokens": [467, 311, 22192, 712, 370, 291, 393, 4536, 597, 4707, 291, 528, 322, 264, 23041, 13], "temperature": 0.0, "avg_logprob": -0.15341636112758092, "compression_ratio": 1.759090909090909, "no_speech_prob": 2.5411636670469306e-05}, {"id": 29, "seek": 13412, "start": 155.28, "end": 162.72, "text": " There is an extension system so your user can download an archive and they can download", "tokens": [821, 307, 364, 10320, 1185, 370, 428, 4195, 393, 5484, 364, 23507, 293, 436, 393, 5484], "temperature": 0.0, "avg_logprob": -0.15341636112758092, "compression_ratio": 1.759090909090909, "no_speech_prob": 2.5411636670469306e-05}, {"id": 30, "seek": 16272, "start": 162.72, "end": 168.44, "text": " extra content to add content to the archive you provide.", "tokens": [2857, 2701, 281, 909, 2701, 281, 264, 23507, 291, 2893, 13], "temperature": 0.0, "avg_logprob": -0.24497135386747473, "compression_ratio": 1.7190476190476192, "no_speech_prob": 3.344209471833892e-05}, {"id": 31, "seek": 16272, "start": 168.44, "end": 173.68, "text": " It's embeddable in another file and it's composable so you can compose different kind of entry", "tokens": [467, 311, 12240, 67, 712, 294, 1071, 3991, 293, 309, 311, 10199, 712, 370, 291, 393, 35925, 819, 733, 295, 8729], "temperature": 0.0, "avg_logprob": -0.24497135386747473, "compression_ratio": 1.7190476190476192, "no_speech_prob": 3.344209471833892e-05}, {"id": 32, "seek": 16272, "start": 173.68, "end": 175.36, "text": " together in the same container.", "tokens": [1214, 294, 264, 912, 10129, 13], "temperature": 0.0, "avg_logprob": -0.24497135386747473, "compression_ratio": 1.7190476190476192, "no_speech_prob": 3.344209471833892e-05}, {"id": 33, "seek": 16272, "start": 175.36, "end": 183.72, "text": " So it checks them and a few features to do, signature and encryption, direct access to", "tokens": [407, 309, 13834, 552, 293, 257, 1326, 4122, 281, 360, 11, 13397, 293, 29575, 11, 2047, 2105, 281], "temperature": 0.0, "avg_logprob": -0.24497135386747473, "compression_ratio": 1.7190476190476192, "no_speech_prob": 3.344209471833892e-05}, {"id": 34, "seek": 16272, "start": 183.72, "end": 190.07999999999998, "text": " uncompressed content, content deduplication, modification, different patch between archive", "tokens": [8585, 79, 3805, 2701, 11, 2701, 4172, 84, 4770, 399, 11, 26747, 11, 819, 9972, 1296, 23507], "temperature": 0.0, "avg_logprob": -0.24497135386747473, "compression_ratio": 1.7190476190476192, "no_speech_prob": 3.344209471833892e-05}, {"id": 35, "seek": 19008, "start": 190.08, "end": 193.84, "text": " and overlay.", "tokens": [293, 31741, 13], "temperature": 0.0, "avg_logprob": -0.25846047332321387, "compression_ratio": 1.483695652173913, "no_speech_prob": 5.9923113440163434e-05}, {"id": 36, "seek": 19008, "start": 193.84, "end": 199.24, "text": " Let's have a quick tour on the internal structure.", "tokens": [961, 311, 362, 257, 1702, 3512, 322, 264, 6920, 3877, 13], "temperature": 0.0, "avg_logprob": -0.25846047332321387, "compression_ratio": 1.483695652173913, "no_speech_prob": 5.9923113440163434e-05}, {"id": 37, "seek": 19008, "start": 199.24, "end": 205.84, "text": " The Djubaco containers are organized around packs.", "tokens": [440, 33464, 836, 11428, 17089, 366, 9983, 926, 19403, 13], "temperature": 0.0, "avg_logprob": -0.25846047332321387, "compression_ratio": 1.483695652173913, "no_speech_prob": 5.9923113440163434e-05}, {"id": 38, "seek": 19008, "start": 205.84, "end": 209.88000000000002, "text": " There is three kinds of packs, manifest packs, content and the directory.", "tokens": [821, 307, 1045, 3685, 295, 19403, 11, 10067, 19403, 11, 2701, 293, 264, 21120, 13], "temperature": 0.0, "avg_logprob": -0.25846047332321387, "compression_ratio": 1.483695652173913, "no_speech_prob": 5.9923113440163434e-05}, {"id": 39, "seek": 19008, "start": 209.88000000000002, "end": 214.4, "text": " Each pack can be stored individually in a file in the file system or they can be put", "tokens": [6947, 2844, 393, 312, 12187, 16652, 294, 257, 3991, 294, 264, 3991, 1185, 420, 436, 393, 312, 829], "temperature": 0.0, "avg_logprob": -0.25846047332321387, "compression_ratio": 1.483695652173913, "no_speech_prob": 5.9923113440163434e-05}, {"id": 40, "seek": 21440, "start": 214.4, "end": 221.24, "text": " together in one file and then you distribute this file to your user.", "tokens": [1214, 294, 472, 3991, 293, 550, 291, 20594, 341, 3991, 281, 428, 4195, 13], "temperature": 0.0, "avg_logprob": -0.19075655133536693, "compression_ratio": 1.7412935323383085, "no_speech_prob": 2.9669126888620667e-05}, {"id": 41, "seek": 21440, "start": 221.24, "end": 226.48000000000002, "text": " The manifest pack is the main pack, this is a pack you will try to open when you want", "tokens": [440, 10067, 2844, 307, 264, 2135, 2844, 11, 341, 307, 257, 2844, 291, 486, 853, 281, 1269, 562, 291, 528], "temperature": 0.0, "avg_logprob": -0.19075655133536693, "compression_ratio": 1.7412935323383085, "no_speech_prob": 2.9669126888620667e-05}, {"id": 42, "seek": 21440, "start": 226.48000000000002, "end": 234.04000000000002, "text": " to open a Djubaco container and it's mainly a list of all the other packs of the container.", "tokens": [281, 1269, 257, 33464, 836, 11428, 10129, 293, 309, 311, 8704, 257, 1329, 295, 439, 264, 661, 19403, 295, 264, 10129, 13], "temperature": 0.0, "avg_logprob": -0.19075655133536693, "compression_ratio": 1.7412935323383085, "no_speech_prob": 2.9669126888620667e-05}, {"id": 43, "seek": 21440, "start": 234.04000000000002, "end": 239.52, "text": " The content pack is a pack which contains the raw content, compressed or not, and without", "tokens": [440, 2701, 2844, 307, 257, 2844, 597, 8306, 264, 8936, 2701, 11, 30353, 420, 406, 11, 293, 1553], "temperature": 0.0, "avg_logprob": -0.19075655133536693, "compression_ratio": 1.7412935323383085, "no_speech_prob": 2.9669126888620667e-05}, {"id": 44, "seek": 21440, "start": 239.52, "end": 242.28, "text": " any metadata.", "tokens": [604, 26603, 13], "temperature": 0.0, "avg_logprob": -0.19075655133536693, "compression_ratio": 1.7412935323383085, "no_speech_prob": 2.9669126888620667e-05}, {"id": 45, "seek": 24228, "start": 242.28, "end": 248.68, "text": " The directory pack is where you store the entries and the entries can print to contents", "tokens": [440, 21120, 2844, 307, 689, 291, 3531, 264, 23041, 293, 264, 23041, 393, 4482, 281, 15768], "temperature": 0.0, "avg_logprob": -0.2032837996611724, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.85886050935369e-05}, {"id": 46, "seek": 24228, "start": 248.68, "end": 250.88, "text": " in the content pack.", "tokens": [294, 264, 2701, 2844, 13], "temperature": 0.0, "avg_logprob": -0.2032837996611724, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.85886050935369e-05}, {"id": 47, "seek": 24228, "start": 250.88, "end": 258.72, "text": " This is a configurable part of Djubaco and inside the directory pack there is entries", "tokens": [639, 307, 257, 22192, 712, 644, 295, 33464, 836, 11428, 293, 1854, 264, 21120, 2844, 456, 307, 23041], "temperature": 0.0, "avg_logprob": -0.2032837996611724, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.85886050935369e-05}, {"id": 48, "seek": 24228, "start": 258.72, "end": 266.08, "text": " with a specific schema so you have to define the schema and the schema is the series of", "tokens": [365, 257, 2685, 34078, 370, 291, 362, 281, 6964, 264, 34078, 293, 264, 34078, 307, 264, 2638, 295], "temperature": 0.0, "avg_logprob": -0.2032837996611724, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.85886050935369e-05}, {"id": 49, "seek": 24228, "start": 266.08, "end": 268.6, "text": " properties and their types.", "tokens": [7221, 293, 641, 3467, 13], "temperature": 0.0, "avg_logprob": -0.2032837996611724, "compression_ratio": 1.7816091954022988, "no_speech_prob": 3.85886050935369e-05}, {"id": 50, "seek": 26860, "start": 268.6, "end": 272.84000000000003, "text": " The content is just a property, it's a link to the content in the content pack so you", "tokens": [440, 2701, 307, 445, 257, 4707, 11, 309, 311, 257, 2113, 281, 264, 2701, 294, 264, 2701, 2844, 370, 291], "temperature": 0.0, "avg_logprob": -0.348304295539856, "compression_ratio": 1.6979166666666667, "no_speech_prob": 5.0766953791026026e-05}, {"id": 51, "seek": 26860, "start": 272.84000000000003, "end": 281.28000000000003, "text": " can have entries at that point to several contents or no contents at all and each entry", "tokens": [393, 362, 23041, 412, 300, 935, 281, 2940, 15768, 420, 572, 15768, 412, 439, 293, 1184, 8729], "temperature": 0.0, "avg_logprob": -0.348304295539856, "compression_ratio": 1.6979166666666667, "no_speech_prob": 5.0766953791026026e-05}, {"id": 52, "seek": 26860, "start": 281.28000000000003, "end": 291.6, "text": " schema can contain violence, it's kind of union or enum in Proclamation EC or REST and", "tokens": [34078, 393, 5304, 6270, 11, 309, 311, 733, 295, 11671, 420, 465, 449, 294, 1705, 41411, 19081, 420, 497, 14497, 293], "temperature": 0.0, "avg_logprob": -0.348304295539856, "compression_ratio": 1.6979166666666667, "no_speech_prob": 5.0766953791026026e-05}, {"id": 53, "seek": 26860, "start": 291.6, "end": 297.84000000000003, "text": " you can have different kind of entries inside one directory pack.", "tokens": [291, 393, 362, 819, 733, 295, 23041, 1854, 472, 21120, 2844, 13], "temperature": 0.0, "avg_logprob": -0.348304295539856, "compression_ratio": 1.6979166666666667, "no_speech_prob": 5.0766953791026026e-05}, {"id": 54, "seek": 29784, "start": 297.84, "end": 302.71999999999997, "text": " Each use case, why you would like to use Djubaco?", "tokens": [6947, 764, 1389, 11, 983, 291, 576, 411, 281, 764, 33464, 836, 11428, 30], "temperature": 0.0, "avg_logprob": -0.29220999204195464, "compression_ratio": 1.6134020618556701, "no_speech_prob": 6.513204425573349e-05}, {"id": 55, "seek": 29784, "start": 302.71999999999997, "end": 309.44, "text": " The first use case is file archive, there is two arcs which is an equivalent of tar", "tokens": [440, 700, 764, 1389, 307, 3991, 23507, 11, 456, 307, 732, 10346, 82, 597, 307, 364, 10344, 295, 3112], "temperature": 0.0, "avg_logprob": -0.29220999204195464, "compression_ratio": 1.6134020618556701, "no_speech_prob": 6.513204425573349e-05}, {"id": 56, "seek": 29784, "start": 309.44, "end": 318.15999999999997, "text": " and here we have one kind of entry with three variants, file, symlink and directory, all", "tokens": [293, 510, 321, 362, 472, 733, 295, 8729, 365, 1045, 21669, 11, 3991, 11, 6697, 22473, 293, 21120, 11, 439], "temperature": 0.0, "avg_logprob": -0.29220999204195464, "compression_ratio": 1.6134020618556701, "no_speech_prob": 6.513204425573349e-05}, {"id": 57, "seek": 29784, "start": 318.15999999999997, "end": 324.91999999999996, "text": " three variants share two common property and for example the file variants add the pointer", "tokens": [1045, 21669, 2073, 732, 2689, 4707, 293, 337, 1365, 264, 3991, 21669, 909, 264, 23918], "temperature": 0.0, "avg_logprob": -0.29220999204195464, "compression_ratio": 1.6134020618556701, "no_speech_prob": 6.513204425573349e-05}, {"id": 58, "seek": 32492, "start": 324.92, "end": 334.96000000000004, "text": " to a contents, symlink and the directory just store the first and pointer to the first entry", "tokens": [281, 257, 15768, 11, 6697, 22473, 293, 264, 21120, 445, 3531, 264, 700, 293, 23918, 281, 264, 700, 8729], "temperature": 0.0, "avg_logprob": -0.2795846697310327, "compression_ratio": 1.5698924731182795, "no_speech_prob": 9.638047777116299e-05}, {"id": 59, "seek": 32492, "start": 334.96000000000004, "end": 337.88, "text": " and the number of entries in the directory.", "tokens": [293, 264, 1230, 295, 23041, 294, 264, 21120, 13], "temperature": 0.0, "avg_logprob": -0.2795846697310327, "compression_ratio": 1.5698924731182795, "no_speech_prob": 9.638047777116299e-05}, {"id": 60, "seek": 32492, "start": 337.88, "end": 346.44, "text": " So it's kind of an organization and three structure as a file system.", "tokens": [407, 309, 311, 733, 295, 364, 4475, 293, 1045, 3877, 382, 257, 3991, 1185, 13], "temperature": 0.0, "avg_logprob": -0.2795846697310327, "compression_ratio": 1.5698924731182795, "no_speech_prob": 9.638047777116299e-05}, {"id": 61, "seek": 32492, "start": 346.44, "end": 352.12, "text": " There is no index property for now but just mainly because arcs is pretty young and I", "tokens": [821, 307, 572, 8186, 4707, 337, 586, 457, 445, 8704, 570, 10346, 82, 307, 1238, 2037, 293, 286], "temperature": 0.0, "avg_logprob": -0.2795846697310327, "compression_ratio": 1.5698924731182795, "no_speech_prob": 9.638047777116299e-05}, {"id": 62, "seek": 35212, "start": 352.12, "end": 358.44, "text": " don't want to bother with them while testing arcs and Djubaco but it's hard.", "tokens": [500, 380, 528, 281, 8677, 365, 552, 1339, 4997, 10346, 82, 293, 33464, 836, 11428, 457, 309, 311, 1152, 13], "temperature": 0.0, "avg_logprob": -0.2211066436767578, "compression_ratio": 1.5357142857142858, "no_speech_prob": 5.209421942709014e-05}, {"id": 63, "seek": 35212, "start": 358.44, "end": 366.48, "text": " It's a file archive so we can compare a bit arcs with tar to see how Djubaco and arcs", "tokens": [467, 311, 257, 3991, 23507, 370, 321, 393, 6794, 257, 857, 10346, 82, 365, 3112, 281, 536, 577, 33464, 836, 11428, 293, 10346, 82], "temperature": 0.0, "avg_logprob": -0.2211066436767578, "compression_ratio": 1.5357142857142858, "no_speech_prob": 5.209421942709014e-05}, {"id": 64, "seek": 35212, "start": 366.48, "end": 367.48, "text": " perform.", "tokens": [2042, 13], "temperature": 0.0, "avg_logprob": -0.2211066436767578, "compression_ratio": 1.5357142857142858, "no_speech_prob": 5.209421942709014e-05}, {"id": 65, "seek": 35212, "start": 367.48, "end": 376.0, "text": " If we take the Linux source code, the full Linux source code is more than one gigabyte", "tokens": [759, 321, 747, 264, 18734, 4009, 3089, 11, 264, 1577, 18734, 4009, 3089, 307, 544, 813, 472, 8741, 34529], "temperature": 0.0, "avg_logprob": -0.2211066436767578, "compression_ratio": 1.5357142857142858, "no_speech_prob": 5.209421942709014e-05}, {"id": 66, "seek": 37600, "start": 376.0, "end": 386.4, "text": " and both our tar and arcs are compressing the source code is about 130 or 14 megabytes.", "tokens": [293, 1293, 527, 3112, 293, 10346, 82, 366, 14778, 278, 264, 4009, 3089, 307, 466, 19966, 420, 3499, 10816, 24538, 13], "temperature": 0.0, "avg_logprob": -0.21234250424513176, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.097165922052227e-05}, {"id": 67, "seek": 37600, "start": 386.4, "end": 394.16, "text": " Crescent time arcs is a bit faster than tar and expression time we are pretty close arcs", "tokens": [383, 495, 2207, 565, 10346, 82, 307, 257, 857, 4663, 813, 3112, 293, 6114, 565, 321, 366, 1238, 1998, 10346, 82], "temperature": 0.0, "avg_logprob": -0.21234250424513176, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.097165922052227e-05}, {"id": 68, "seek": 37600, "start": 394.16, "end": 400.76, "text": " is a bit slower but we have someone pretty close, both tools are pretty close.", "tokens": [307, 257, 857, 14009, 457, 321, 362, 1580, 1238, 1998, 11, 1293, 3873, 366, 1238, 1998, 13], "temperature": 0.0, "avg_logprob": -0.21234250424513176, "compression_ratio": 1.6666666666666667, "no_speech_prob": 5.097165922052227e-05}, {"id": 69, "seek": 40076, "start": 400.76, "end": 409.88, "text": " What is interesting is when we try to list the contents of the archive, tar took almost", "tokens": [708, 307, 1880, 307, 562, 321, 853, 281, 1329, 264, 15768, 295, 264, 23507, 11, 3112, 1890, 1920], "temperature": 0.0, "avg_logprob": -0.17982344696487207, "compression_ratio": 1.8023952095808384, "no_speech_prob": 4.3431409721961245e-05}, {"id": 70, "seek": 40076, "start": 409.88, "end": 417.48, "text": " the same time that expression because to list the contents in the tar archive you need to", "tokens": [264, 912, 565, 300, 6114, 570, 281, 1329, 264, 15768, 294, 264, 3112, 23507, 291, 643, 281], "temperature": 0.0, "avg_logprob": -0.17982344696487207, "compression_ratio": 1.8023952095808384, "no_speech_prob": 4.3431409721961245e-05}, {"id": 71, "seek": 40076, "start": 417.48, "end": 424.2, "text": " uncompress all the contents and arcs is very faster because the list of the entries are", "tokens": [8585, 11637, 439, 264, 15768, 293, 10346, 82, 307, 588, 4663, 570, 264, 1329, 295, 264, 23041, 366], "temperature": 0.0, "avg_logprob": -0.17982344696487207, "compression_ratio": 1.8023952095808384, "no_speech_prob": 4.3431409721961245e-05}, {"id": 72, "seek": 40076, "start": 424.2, "end": 428.52, "text": " separated from the contents itself.", "tokens": [12005, 490, 264, 15768, 2564, 13], "temperature": 0.0, "avg_logprob": -0.17982344696487207, "compression_ratio": 1.8023952095808384, "no_speech_prob": 4.3431409721961245e-05}, {"id": 73, "seek": 42852, "start": 428.52, "end": 436.15999999999997, "text": " If you want to extract only one content from the archive and we try to, what's that called", "tokens": [759, 291, 528, 281, 8947, 787, 472, 2701, 490, 264, 23507, 293, 321, 853, 281, 11, 437, 311, 300, 1219], "temperature": 0.0, "avg_logprob": -0.18572478661170372, "compression_ratio": 1.65625, "no_speech_prob": 0.00011498133972054347}, {"id": 74, "seek": 42852, "start": 436.15999999999997, "end": 443.15999999999997, "text": " dumping and when you try to dump a third of all the entries, you can see that arcs is", "tokens": [42224, 293, 562, 291, 853, 281, 11430, 257, 2636, 295, 439, 264, 23041, 11, 291, 393, 536, 300, 10346, 82, 307], "temperature": 0.0, "avg_logprob": -0.18572478661170372, "compression_ratio": 1.65625, "no_speech_prob": 0.00011498133972054347}, {"id": 75, "seek": 42852, "start": 443.15999999999997, "end": 451.47999999999996, "text": " really really really faster and the same way extracting one entry from the tar is pretty", "tokens": [534, 534, 534, 4663, 293, 264, 912, 636, 49844, 472, 8729, 490, 264, 3112, 307, 1238], "temperature": 0.0, "avg_logprob": -0.18572478661170372, "compression_ratio": 1.65625, "no_speech_prob": 0.00011498133972054347}, {"id": 76, "seek": 45148, "start": 451.48, "end": 459.32, "text": " close from the time of listing the contents the same way as you need to uncompress all", "tokens": [1998, 490, 264, 565, 295, 22161, 264, 15768, 264, 912, 636, 382, 291, 643, 281, 8585, 11637, 439], "temperature": 0.0, "avg_logprob": -0.2371112060546875, "compression_ratio": 1.8869047619047619, "no_speech_prob": 8.68302013259381e-05}, {"id": 77, "seek": 45148, "start": 459.32, "end": 465.88, "text": " the contents of the tar archive and arcs you can locate the content and do a direct access", "tokens": [264, 15768, 295, 264, 3112, 23507, 293, 10346, 82, 291, 393, 22370, 264, 2701, 293, 360, 257, 2047, 2105], "temperature": 0.0, "avg_logprob": -0.2371112060546875, "compression_ratio": 1.8869047619047619, "no_speech_prob": 8.68302013259381e-05}, {"id": 78, "seek": 45148, "start": 465.88, "end": 471.20000000000005, "text": " to the content without uncompressing other contents.", "tokens": [281, 264, 2701, 1553, 8585, 11637, 278, 661, 15768, 13], "temperature": 0.0, "avg_logprob": -0.2371112060546875, "compression_ratio": 1.8869047619047619, "no_speech_prob": 8.68302013259381e-05}, {"id": 79, "seek": 45148, "start": 471.20000000000005, "end": 479.36, "text": " Once you think that we can do that is mount the archive, directly mount the archive on", "tokens": [3443, 291, 519, 300, 321, 393, 360, 300, 307, 3746, 264, 23507, 11, 3838, 3746, 264, 23507, 322], "temperature": 0.0, "avg_logprob": -0.2371112060546875, "compression_ratio": 1.8869047619047619, "no_speech_prob": 8.68302013259381e-05}, {"id": 80, "seek": 47936, "start": 479.36, "end": 487.12, "text": " the file system and if you mount the archive and you do a diff of the content between the", "tokens": [264, 3991, 1185, 293, 498, 291, 3746, 264, 23507, 293, 291, 360, 257, 7593, 295, 264, 2701, 1296, 264], "temperature": 0.0, "avg_logprob": -0.23175560344349255, "compression_ratio": 1.6772151898734178, "no_speech_prob": 5.2291026804596186e-05}, {"id": 81, "seek": 47936, "start": 487.12, "end": 495.40000000000003, "text": " original source and what is mounted, if you do a diff between two plain directories it's", "tokens": [3380, 4009, 293, 437, 307, 19138, 11, 498, 291, 360, 257, 7593, 1296, 732, 11121, 5391, 530, 309, 311], "temperature": 0.0, "avg_logprob": -0.23175560344349255, "compression_ratio": 1.6772151898734178, "no_speech_prob": 5.2291026804596186e-05}, {"id": 82, "seek": 47936, "start": 495.40000000000003, "end": 503.40000000000003, "text": " a bit less than a second with arcs it's four seconds and half and tar is an estimation", "tokens": [257, 857, 1570, 813, 257, 1150, 365, 10346, 82, 309, 311, 1451, 3949, 293, 1922, 293, 3112, 307, 364, 35701], "temperature": 0.0, "avg_logprob": -0.23175560344349255, "compression_ratio": 1.6772151898734178, "no_speech_prob": 5.2291026804596186e-05}, {"id": 83, "seek": 50340, "start": 503.4, "end": 511.84, "text": " it will take something like ten hours to do the comparison.", "tokens": [309, 486, 747, 746, 411, 2064, 2496, 281, 360, 264, 9660, 13], "temperature": 0.0, "avg_logprob": -0.19633050968772486, "compression_ratio": 1.8418079096045197, "no_speech_prob": 2.3355572920991108e-05}, {"id": 84, "seek": 50340, "start": 511.84, "end": 517.28, "text": " You can do something even more interesting with a mounted file system or with a mounting", "tokens": [509, 393, 360, 746, 754, 544, 1880, 365, 257, 19138, 3991, 1185, 420, 365, 257, 22986], "temperature": 0.0, "avg_logprob": -0.19633050968772486, "compression_ratio": 1.8418079096045197, "no_speech_prob": 2.3355572920991108e-05}, {"id": 85, "seek": 50340, "start": 517.28, "end": 525.4, "text": " Linux source is compiling the kernel so if you compile the kernel on the plain file system", "tokens": [18734, 4009, 307, 715, 4883, 264, 28256, 370, 498, 291, 31413, 264, 28256, 322, 264, 11121, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.19633050968772486, "compression_ratio": 1.8418079096045197, "no_speech_prob": 2.3355572920991108e-05}, {"id": 86, "seek": 50340, "start": 525.4, "end": 532.36, "text": " it's a bit more than half an hour and if you compile the kernel using the mounted arcs", "tokens": [309, 311, 257, 857, 544, 813, 1922, 364, 1773, 293, 498, 291, 31413, 264, 28256, 1228, 264, 19138, 10346, 82], "temperature": 0.0, "avg_logprob": -0.19633050968772486, "compression_ratio": 1.8418079096045197, "no_speech_prob": 2.3355572920991108e-05}, {"id": 87, "seek": 53236, "start": 532.36, "end": 536.52, "text": " archive it's a bit less than an hour.", "tokens": [23507, 309, 311, 257, 857, 1570, 813, 364, 1773, 13], "temperature": 0.0, "avg_logprob": -0.2797388908190605, "compression_ratio": 1.5567567567567568, "no_speech_prob": 3.828673652606085e-05}, {"id": 88, "seek": 53236, "start": 536.52, "end": 543.88, "text": " What is interesting here is that the compilation is made with G8 so there is eight processes", "tokens": [708, 307, 1880, 510, 307, 300, 264, 40261, 307, 1027, 365, 460, 23, 370, 456, 307, 3180, 7555], "temperature": 0.0, "avg_logprob": -0.2797388908190605, "compression_ratio": 1.5567567567567568, "no_speech_prob": 3.828673652606085e-05}, {"id": 89, "seek": 53236, "start": 543.88, "end": 550.32, "text": " and arcs a fuel file system is monostated so there is a huge bottleneck for now but", "tokens": [293, 10346, 82, 257, 6616, 3991, 1185, 307, 1108, 555, 770, 370, 456, 307, 257, 2603, 44641, 547, 337, 586, 457], "temperature": 0.0, "avg_logprob": -0.2797388908190605, "compression_ratio": 1.5567567567567568, "no_speech_prob": 3.828673652606085e-05}, {"id": 90, "seek": 53236, "start": 550.32, "end": 559.72, "text": " if we move to a multi-threaded fuel file system it should be even better.", "tokens": [498, 321, 1286, 281, 257, 4825, 12, 392, 2538, 292, 6616, 3991, 1185, 309, 820, 312, 754, 1101, 13], "temperature": 0.0, "avg_logprob": -0.2797388908190605, "compression_ratio": 1.5567567567567568, "no_speech_prob": 3.828673652606085e-05}, {"id": 91, "seek": 55972, "start": 559.72, "end": 566.36, "text": " The use case is the GIM it's an equivalent of kind of equivalent of ZIM format there", "tokens": [440, 764, 1389, 307, 264, 460, 6324, 309, 311, 364, 10344, 295, 733, 295, 10344, 295, 1176, 6324, 7877, 456], "temperature": 0.0, "avg_logprob": -0.27660028862230707, "compression_ratio": 1.576470588235294, "no_speech_prob": 2.9183700462454e-05}, {"id": 92, "seek": 55972, "start": 566.36, "end": 573.2, "text": " is two variants only and here we are storing the entries as a plain list and there is no", "tokens": [307, 732, 21669, 787, 293, 510, 321, 366, 26085, 264, 23041, 382, 257, 11121, 1329, 293, 456, 307, 572], "temperature": 0.0, "avg_logprob": -0.27660028862230707, "compression_ratio": 1.576470588235294, "no_speech_prob": 2.9183700462454e-05}, {"id": 93, "seek": 55972, "start": 573.2, "end": 582.9200000000001, "text": " tree structure and the GIM binary just integrates a small HTTP server looking for the entries.", "tokens": [4230, 3877, 293, 264, 460, 6324, 17434, 445, 3572, 1024, 257, 1359, 33283, 7154, 1237, 337, 264, 23041, 13], "temperature": 0.0, "avg_logprob": -0.27660028862230707, "compression_ratio": 1.576470588235294, "no_speech_prob": 2.9183700462454e-05}, {"id": 94, "seek": 58292, "start": 582.92, "end": 592.56, "text": " What we can do also is we could replace for example RPM and DEB with arcs or things based", "tokens": [708, 321, 393, 360, 611, 307, 321, 727, 7406, 337, 1365, 37389, 293, 10113, 33, 365, 10346, 82, 420, 721, 2361], "temperature": 0.0, "avg_logprob": -0.32178404751945944, "compression_ratio": 1.4385026737967914, "no_speech_prob": 6.621448846999556e-05}, {"id": 95, "seek": 58292, "start": 592.56, "end": 598.8399999999999, "text": " on jubacca so you could download your package and not extract it from the file system just", "tokens": [322, 361, 836, 326, 496, 370, 291, 727, 5484, 428, 7372, 293, 406, 8947, 309, 490, 264, 3991, 1185, 445], "temperature": 0.0, "avg_logprob": -0.32178404751945944, "compression_ratio": 1.4385026737967914, "no_speech_prob": 6.621448846999556e-05}, {"id": 96, "seek": 58292, "start": 598.8399999999999, "end": 605.56, "text": " open it directly and even a GVL or debugging fault that could be put in specific content", "tokens": [1269, 309, 3838, 293, 754, 257, 460, 53, 43, 420, 45592, 7441, 300, 727, 312, 829, 294, 2685, 2701], "temperature": 0.0, "avg_logprob": -0.32178404751945944, "compression_ratio": 1.4385026737967914, "no_speech_prob": 6.621448846999556e-05}, {"id": 97, "seek": 60556, "start": 605.56, "end": 613.52, "text": " pack of the same archive so it could simplify the management and you will not need to have", "tokens": [2844, 295, 264, 912, 23507, 370, 309, 727, 20460, 264, 4592, 293, 291, 486, 406, 643, 281, 362], "temperature": 0.0, "avg_logprob": -0.2994789954943535, "compression_ratio": 1.6618357487922706, "no_speech_prob": 3.235983967897482e-05}, {"id": 98, "seek": 60556, "start": 613.52, "end": 619.64, "text": " different package to different sub-type of contents of your packages.", "tokens": [819, 7372, 281, 819, 1422, 12, 20467, 295, 15768, 295, 428, 17401, 13], "temperature": 0.0, "avg_logprob": -0.2994789954943535, "compression_ratio": 1.6618357487922706, "no_speech_prob": 3.235983967897482e-05}, {"id": 99, "seek": 60556, "start": 619.64, "end": 627.1199999999999, "text": " OCI containers are based on Tor you need to extract them on the file system before running", "tokens": [422, 25240, 17089, 366, 2361, 322, 7160, 291, 643, 281, 8947, 552, 322, 264, 3991, 1185, 949, 2614], "temperature": 0.0, "avg_logprob": -0.2994789954943535, "compression_ratio": 1.6618357487922706, "no_speech_prob": 3.235983967897482e-05}, {"id": 100, "seek": 60556, "start": 627.1199999999999, "end": 634.68, "text": " a container so you could just use arcs among them or you can even use directly put different", "tokens": [257, 10129, 370, 291, 727, 445, 764, 10346, 82, 3654, 552, 420, 291, 393, 754, 764, 3838, 829, 819], "temperature": 0.0, "avg_logprob": -0.2994789954943535, "compression_ratio": 1.6618357487922706, "no_speech_prob": 3.235983967897482e-05}, {"id": 101, "seek": 63468, "start": 634.68, "end": 645.16, "text": " layer in different content pack and so the wall images will be one jubacca container.", "tokens": [4583, 294, 819, 2701, 2844, 293, 370, 264, 2929, 5267, 486, 312, 472, 361, 836, 326, 496, 10129, 13], "temperature": 0.0, "avg_logprob": -0.20980025827884674, "compression_ratio": 1.6962025316455696, "no_speech_prob": 3.1845440389588475e-05}, {"id": 102, "seek": 63468, "start": 645.16, "end": 656.16, "text": " File format almost all file formats are in fact container for other content so you could", "tokens": [26196, 7877, 1920, 439, 3991, 25879, 366, 294, 1186, 10129, 337, 661, 2701, 370, 291, 727], "temperature": 0.0, "avg_logprob": -0.20980025827884674, "compression_ratio": 1.6962025316455696, "no_speech_prob": 3.1845440389588475e-05}, {"id": 103, "seek": 63468, "start": 656.16, "end": 663.56, "text": " use jubacca to just organize the content you want to store what you want for your own project", "tokens": [764, 361, 836, 326, 496, 281, 445, 13859, 264, 2701, 291, 528, 281, 3531, 437, 291, 528, 337, 428, 1065, 1716], "temperature": 0.0, "avg_logprob": -0.20980025827884674, "compression_ratio": 1.6962025316455696, "no_speech_prob": 3.1845440389588475e-05}, {"id": 104, "seek": 66356, "start": 663.56, "end": 667.7199999999999, "text": " and your own file format.", "tokens": [293, 428, 1065, 3991, 7877, 13], "temperature": 0.0, "avg_logprob": -0.2752084964659156, "compression_ratio": 1.6875, "no_speech_prob": 1.914403219416272e-05}, {"id": 105, "seek": 66356, "start": 667.7199999999999, "end": 675.8399999999999, "text": " Websites jubacca is written in rest you could run it in wasm and so jubacca could run you", "tokens": [45347, 3324, 361, 836, 326, 496, 307, 3720, 294, 1472, 291, 727, 1190, 309, 294, 390, 76, 293, 370, 361, 836, 326, 496, 727, 1190, 291], "temperature": 0.0, "avg_logprob": -0.2752084964659156, "compression_ratio": 1.6875, "no_speech_prob": 1.914403219416272e-05}, {"id": 106, "seek": 66356, "start": 675.8399999999999, "end": 684.0799999999999, "text": " could load your jubacca archive in the browser once and just open it directly in the browser.", "tokens": [727, 3677, 428, 361, 836, 326, 496, 23507, 294, 264, 11185, 1564, 293, 445, 1269, 309, 3838, 294, 264, 11185, 13], "temperature": 0.0, "avg_logprob": -0.2752084964659156, "compression_ratio": 1.6875, "no_speech_prob": 1.914403219416272e-05}, {"id": 107, "seek": 66356, "start": 684.0799999999999, "end": 690.76, "text": " Backups backup jubacca is almost incremental by design if you reuse the content pack of", "tokens": [5833, 7528, 14807, 361, 836, 326, 496, 307, 1920, 35759, 538, 1715, 498, 291, 26225, 264, 2701, 2844, 295], "temperature": 0.0, "avg_logprob": -0.2752084964659156, "compression_ratio": 1.6875, "no_speech_prob": 1.914403219416272e-05}, {"id": 108, "seek": 69076, "start": 690.76, "end": 696.76, "text": " the backups previous backup this is incremental and you can decide which property you want", "tokens": [264, 50160, 3894, 14807, 341, 307, 35759, 293, 291, 393, 4536, 597, 4707, 291, 528], "temperature": 0.0, "avg_logprob": -0.2239600419998169, "compression_ratio": 1.6320754716981132, "no_speech_prob": 2.9631642973981798e-05}, {"id": 109, "seek": 69076, "start": 696.76, "end": 704.76, "text": " to have so for example you can add a checksum on each sentries to do a comparison between", "tokens": [281, 362, 370, 337, 1365, 291, 393, 909, 257, 13834, 449, 322, 1184, 2279, 2244, 281, 360, 257, 9660, 1296], "temperature": 0.0, "avg_logprob": -0.2239600419998169, "compression_ratio": 1.6320754716981132, "no_speech_prob": 2.9631642973981798e-05}, {"id": 110, "seek": 69076, "start": 704.76, "end": 710.28, "text": " the content store in the backup and what you have on the file system.", "tokens": [264, 2701, 3531, 294, 264, 14807, 293, 437, 291, 362, 322, 264, 3991, 1185, 13], "temperature": 0.0, "avg_logprob": -0.2239600419998169, "compression_ratio": 1.6320754716981132, "no_speech_prob": 2.9631642973981798e-05}, {"id": 111, "seek": 69076, "start": 710.28, "end": 719.68, "text": " Embedding resources jubacca can be embedded in executor programs or even more this presentation", "tokens": [24234, 292, 3584, 3593, 361, 836, 326, 496, 393, 312, 16741, 294, 7568, 284, 4268, 420, 754, 544, 341, 5860], "temperature": 0.0, "avg_logprob": -0.2239600419998169, "compression_ratio": 1.6320754716981132, "no_speech_prob": 2.9631642973981798e-05}, {"id": 112, "seek": 71968, "start": 719.68, "end": 725.3599999999999, "text": " you can download this presentation at this address and you will have a file and this", "tokens": [291, 393, 5484, 341, 5860, 412, 341, 2985, 293, 291, 486, 362, 257, 3991, 293, 341], "temperature": 0.0, "avg_logprob": -0.20746424168716243, "compression_ratio": 1.8950276243093922, "no_speech_prob": 5.96541358390823e-05}, {"id": 113, "seek": 71968, "start": 725.3599999999999, "end": 731.68, "text": " file is an arched archive so you can just use the arch tool to list the content extract", "tokens": [3991, 307, 364, 3912, 292, 23507, 370, 291, 393, 445, 764, 264, 3912, 2290, 281, 1329, 264, 2701, 8947], "temperature": 0.0, "avg_logprob": -0.20746424168716243, "compression_ratio": 1.8950276243093922, "no_speech_prob": 5.96541358390823e-05}, {"id": 114, "seek": 71968, "start": 731.68, "end": 736.92, "text": " or month archive and you will have access to all the file of this presentation it is", "tokens": [420, 1618, 23507, 293, 291, 486, 362, 2105, 281, 439, 264, 3991, 295, 341, 5860, 309, 307], "temperature": 0.0, "avg_logprob": -0.20746424168716243, "compression_ratio": 1.8950276243093922, "no_speech_prob": 5.96541358390823e-05}, {"id": 115, "seek": 71968, "start": 736.92, "end": 744.9599999999999, "text": " revealed yes and it's HTML content but the same file is also a gym archive so you can", "tokens": [9599, 2086, 293, 309, 311, 17995, 2701, 457, 264, 912, 3991, 307, 611, 257, 9222, 23507, 370, 291, 393], "temperature": 0.0, "avg_logprob": -0.20746424168716243, "compression_ratio": 1.8950276243093922, "no_speech_prob": 5.96541358390823e-05}, {"id": 116, "seek": 74496, "start": 744.96, "end": 754.52, "text": " just use the gym tool to just set the content and open a browser to the local host and the", "tokens": [445, 764, 264, 9222, 2290, 281, 445, 992, 264, 2701, 293, 1269, 257, 11185, 281, 264, 2654, 3975, 293, 264], "temperature": 0.0, "avg_logprob": -0.19208151196676587, "compression_ratio": 1.7006369426751593, "no_speech_prob": 2.745545862126164e-05}, {"id": 117, "seek": 74496, "start": 754.52, "end": 761.44, "text": " same files is also a program so if you make it executable you can run the program itself", "tokens": [912, 7098, 307, 611, 257, 1461, 370, 498, 291, 652, 309, 7568, 712, 291, 393, 1190, 264, 1461, 2564], "temperature": 0.0, "avg_logprob": -0.19208151196676587, "compression_ratio": 1.7006369426751593, "no_speech_prob": 2.745545862126164e-05}, {"id": 118, "seek": 74496, "start": 761.44, "end": 769.12, "text": " to month extract or set the content what is interesting is that between our the content", "tokens": [281, 1618, 8947, 420, 992, 264, 2701, 437, 307, 1880, 307, 300, 1296, 527, 264, 2701], "temperature": 0.0, "avg_logprob": -0.19208151196676587, "compression_ratio": 1.7006369426751593, "no_speech_prob": 2.745545862126164e-05}, {"id": 119, "seek": 76912, "start": 769.12, "end": 775.84, "text": " is not shared it is an arch and gym archive but it's just a view to the same content there", "tokens": [307, 406, 5507, 309, 307, 364, 3912, 293, 9222, 23507, 457, 309, 311, 445, 257, 1910, 281, 264, 912, 2701, 456], "temperature": 0.0, "avg_logprob": -0.19025408915984324, "compression_ratio": 1.7675675675675675, "no_speech_prob": 4.3739230022765696e-05}, {"id": 120, "seek": 76912, "start": 775.84, "end": 781.52, "text": " is no duplication it's not two archive put together it's really one archive with two", "tokens": [307, 572, 17154, 399, 309, 311, 406, 732, 23507, 829, 1214, 309, 311, 534, 472, 23507, 365, 732], "temperature": 0.0, "avg_logprob": -0.19025408915984324, "compression_ratio": 1.7675675675675675, "no_speech_prob": 4.3739230022765696e-05}, {"id": 121, "seek": 76912, "start": 781.52, "end": 788.88, "text": " kind of view of the same content and the last line is the exact command used to serve this", "tokens": [733, 295, 1910, 295, 264, 912, 2701, 293, 264, 1036, 1622, 307, 264, 1900, 5622, 1143, 281, 4596, 341], "temperature": 0.0, "avg_logprob": -0.19025408915984324, "compression_ratio": 1.7675675675675675, "no_speech_prob": 4.3739230022765696e-05}, {"id": 122, "seek": 76912, "start": 788.88, "end": 798.36, "text": " actual presentation conclusion this is a new way of thinking", "tokens": [3539, 5860, 10063, 341, 307, 257, 777, 636, 295, 1953], "temperature": 0.0, "avg_logprob": -0.19025408915984324, "compression_ratio": 1.7675675675675675, "no_speech_prob": 4.3739230022765696e-05}, {"id": 123, "seek": 79836, "start": 798.36, "end": 806.8000000000001, "text": " we could extract you could use archive directly instead of extracting it so we can reinvent", "tokens": [321, 727, 8947, 291, 727, 764, 23507, 3838, 2602, 295, 49844, 309, 370, 321, 393, 33477], "temperature": 0.0, "avg_logprob": -0.18280902151334083, "compression_ratio": 1.7615894039735098, "no_speech_prob": 2.1060797735117376e-05}, {"id": 124, "seek": 79836, "start": 806.8000000000001, "end": 818.2, "text": " the wall without thinking about using directly the archive it's a new way of thinking it's", "tokens": [264, 2929, 1553, 1953, 466, 1228, 3838, 264, 23507, 309, 311, 257, 777, 636, 295, 1953, 309, 311], "temperature": 0.0, "avg_logprob": -0.18280902151334083, "compression_ratio": 1.7615894039735098, "no_speech_prob": 2.1060797735117376e-05}, {"id": 125, "seek": 79836, "start": 818.2, "end": 825.6, "text": " generic it's a command based tool that can add that can add that to different usage", "tokens": [19577, 309, 311, 257, 5622, 2361, 2290, 300, 393, 909, 300, 393, 909, 300, 281, 819, 14924], "temperature": 0.0, "avg_logprob": -0.18280902151334083, "compression_ratio": 1.7615894039735098, "no_speech_prob": 2.1060797735117376e-05}, {"id": 126, "seek": 82560, "start": 825.6, "end": 834.64, "text": " but it's pretty new maybe some crash and you can expect maybe some change in the specification", "tokens": [457, 309, 311, 1238, 777, 1310, 512, 8252, 293, 291, 393, 2066, 1310, 512, 1319, 294, 264, 31256], "temperature": 0.0, "avg_logprob": -0.1450833732431585, "compression_ratio": 1.2207792207792207, "no_speech_prob": 0.0005179613945074379}, {"id": 127, "seek": 83464, "start": 834.64, "end": 863.88, "text": " thank you are there any questions can you repeat the question okay I don't know", "tokens": [1309, 291, 366, 456, 604, 1651, 393, 291, 7149, 264, 1168, 1392, 286, 500, 380, 458], "temperature": 0.0, "avg_logprob": -0.3691171884536743, "compression_ratio": 1.0972222222222223, "no_speech_prob": 0.0019665888976305723}, {"id": 128, "seek": 86388, "start": 863.88, "end": 876.68, "text": " I know about squash fs but the thing is that jubaco is not a file system arcs is an archive", "tokens": [286, 458, 466, 30725, 283, 82, 457, 264, 551, 307, 300, 361, 836, 11428, 307, 406, 257, 3991, 1185, 10346, 82, 307, 364, 23507], "temperature": 0.0, "avg_logprob": -0.3557709941157588, "compression_ratio": 1.5663716814159292, "no_speech_prob": 0.00047200199333019555}, {"id": 129, "seek": 86388, "start": 876.68, "end": 882.84, "text": " to store files but jubaco is not so jubaco is more generic than crime fs or squash fs", "tokens": [281, 3531, 7098, 457, 361, 836, 11428, 307, 406, 370, 361, 836, 11428, 307, 544, 19577, 813, 7206, 283, 82, 420, 30725, 283, 82], "temperature": 0.0, "avg_logprob": -0.3557709941157588, "compression_ratio": 1.5663716814159292, "no_speech_prob": 0.00047200199333019555}, {"id": 130, "seek": 88284, "start": 882.84, "end": 902.2, "text": " probably and arcs compared to squash fs is is is arcs slower than squash fs on size arcs", "tokens": [1391, 293, 10346, 82, 5347, 281, 30725, 283, 82, 307, 307, 307, 10346, 82, 14009, 813, 30725, 283, 82, 322, 2744, 10346, 82], "temperature": 0.0, "avg_logprob": -0.37378823315655746, "compression_ratio": 1.2394366197183098, "no_speech_prob": 0.000293001503450796}, {"id": 131, "seek": 90220, "start": 902.2, "end": 918.08, "text": " is better but on the performance is slower we could implement that in other languages", "tokens": [307, 1101, 457, 322, 264, 3389, 307, 14009, 321, 727, 4445, 300, 294, 661, 8650], "temperature": 0.0, "avg_logprob": -0.2859132917303788, "compression_ratio": 1.5585585585585586, "no_speech_prob": 0.0006004960741847754}, {"id": 132, "seek": 90220, "start": 918.08, "end": 927.6400000000001, "text": " yeah could we re-implement this in other languages you could there is the specification", "tokens": [1338, 727, 321, 319, 12, 332, 43704, 341, 294, 661, 8650, 291, 727, 456, 307, 264, 31256], "temperature": 0.0, "avg_logprob": -0.2859132917303788, "compression_ratio": 1.5585585585585586, "no_speech_prob": 0.0006004960741847754}, {"id": 133, "seek": 92764, "start": 927.64, "end": 934.12, "text": " is language and mystic but just I just implement reference library in rest battle but the specification", "tokens": [307, 2856, 293, 9111, 299, 457, 445, 286, 445, 4445, 6408, 6405, 294, 1472, 4635, 457, 264, 31256], "temperature": 0.0, "avg_logprob": -0.4549226760864258, "compression_ratio": 1.4651162790697674, "no_speech_prob": 0.00012027487537125126}, {"id": 134, "seek": 92764, "start": 934.12, "end": 949.6, "text": " is is public sorry that zip is pretty small but zip is is a slower the arcs in almost", "tokens": [307, 307, 1908, 2597, 300, 20730, 307, 1238, 1359, 457, 20730, 307, 307, 257, 14009, 264, 10346, 82, 294, 1920], "temperature": 0.0, "avg_logprob": -0.4549226760864258, "compression_ratio": 1.4651162790697674, "no_speech_prob": 0.00012027487537125126}, {"id": 135, "seek": 94960, "start": 949.6, "end": 961.44, "text": " any any kind of operation and is bigger than arcs also thank you", "tokens": [50364, 604, 604, 733, 295, 6916, 293, 307, 3801, 813, 10346, 82, 611, 1309, 291, 50956], "temperature": 0.0, "avg_logprob": -0.2776687285479377, "compression_ratio": 1.0158730158730158, "no_speech_prob": 0.0001802739134291187}], "language": "en"}