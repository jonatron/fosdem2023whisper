{"text": " Hello everyone, I'm Sairper Akdemir and I work for Colobro Productivity. This talk will be about an interoperability improvement in LibreOffice Impress tables. So this is a screenshot from the bug report and let's talk about what was the problem on the surface level. On the right you can see how it appears in PowerPoint and on the left you can see how it appears when it was opened by Impress, the PPTX file exported by PowerPoint. What we need to focus here is the rows pointed by the arrows are somehow shrunk when it was opened in Impress and it wasn't immediately obvious. If we look at how PowerPoint exports the table layout into PPTX files, what we will realize is it defines row heights. So let's just focus on that part but it doesn't really define a total table height to fit inside. While we are importing these row heights what we do is we first calculate what does all of the row heights add up to because we use the total table height to layout a table. So we calculate that by adding up each of the row heights and also we assign each row with their own height. But it turns out when this specific file is exported and if you look at row heights for the empty rows, they are correct, there is nothing wrong there but if you look at for instance the one row that says COLA, it appears to have a row height of zero which doesn't really make sense. So now let's also something to mention here is if we start typing anything in one of the empty rows, there are no text properties actually imported from the PPTX file, they are somehow lost in the process like the text when we start typing in the empty rows in the PowerPoint one, it starts as a blue, it has a blue color, etc. It has a different size but if we write it in the impressed one, it is just defaulted so it's black and 18 points. So before understanding the problem we need to know a little bit about how impressed layouts the table. The table is basically fitted into a given total height but while doing so we also care for what each row heights were. So basically we need to know the total height correctly because if it is smaller than some of the rows, we basically happen to be shrinking, trying to shrink the table. When that happens, what the impressed tries to do is adjust the row height proportionally to what were they before and if there is text inside, there is a minimum height it can go to and when that happens, like in this case when that happens, since it can't shrink the line that says color further, it shrinks the empty line because it can to try to fit in that wrong table height. Also, if we explore the PPTX output, we will realize that the empty cell properties are exported in n-paragraph run properties. We need to import that. There isn't already an implementation for that but I will discuss this a little bit later. If you look at the problem in detail, let's say what we need to fix here is we need to somehow care for these problematic row heights that during import which they don't have a height of zero but they are defined as so, such. Empty cell, we need to know the text sizes for empty cells too. We need to do this from n-paragraph run properties. Also, there was some previous range of pixels here that kind of altered the layouting code instead of the import code and there are some regressions that messed up some table resizing functionality there. We need to revert those changes. So basically, it turns out to be PowerPoint tries to export desired row heights. For instance, if you try to just pull a row to zero while it has text in it, it doesn't let you do it but it actually saves it as such. So, in the end, that creates a problem for us. So, to fix this, what we can do and what I did was during import, before layouting the table into an area which our impress usually does it, we do a pre-layouting which is we just take the row sizes and we don't give the layouting code any area to layout into and we let it layout itself. So, it basically just looks at the row sizes and tries to expand them if they are smaller than possible. And that gives us a final height that we can use in successive layouting attempts. So, we kind of correct the total table heights doing that. And we also don't have the text properties for the empty rows. So, the problem there was, turns out these text properties are actually imported into text nodes but when there's new text is being typed, they actually inherit their properties from the cells' own properties instead of the text nodes. Text nodes are just being dumped and new ones are being created. So, to fix that, we need to push the text properties from the n-paragraph run properties into the cells' properties that themselves to make it work correctly. Well, to finish up, with these fixes, we were able to get rid of the problematic regression causing code in the layout thing and we moved the conceptual fixes from there into the import code, making it possible to work correctly. And additionally, some unit tests were added to make sure the n-paragraph run properties stayed correctly that covered those areas. Thank you. That's all from me.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.64, "text": " Hello everyone, I'm Sairper Akdemir and I work for Colobro Productivity. This talk will", "tokens": [2425, 1518, 11, 286, 478, 318, 1246, 610, 9629, 10730, 347, 293, 286, 589, 337, 4004, 996, 340, 22005, 4253, 13, 639, 751, 486], "temperature": 0.0, "avg_logprob": -0.35309258060178894, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.13820624351501465}, {"id": 1, "seek": 0, "start": 11.64, "end": 21.76, "text": " be about an interoperability improvement in LibreOffice Impress tables. So this is a", "tokens": [312, 466, 364, 728, 7192, 2310, 10444, 294, 15834, 265, 29745, 573, 8270, 735, 8020, 13, 407, 341, 307, 257], "temperature": 0.0, "avg_logprob": -0.35309258060178894, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.13820624351501465}, {"id": 2, "seek": 0, "start": 21.76, "end": 26.92, "text": " screenshot from the bug report and let's talk about what was the problem on the surface", "tokens": [27712, 490, 264, 7426, 2275, 293, 718, 311, 751, 466, 437, 390, 264, 1154, 322, 264, 3753], "temperature": 0.0, "avg_logprob": -0.35309258060178894, "compression_ratio": 1.3829787234042554, "no_speech_prob": 0.13820624351501465}, {"id": 3, "seek": 2692, "start": 26.92, "end": 35.760000000000005, "text": " level. On the right you can see how it appears in PowerPoint and on the left you can see", "tokens": [1496, 13, 1282, 264, 558, 291, 393, 536, 577, 309, 7038, 294, 25584, 293, 322, 264, 1411, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.13855810726390166, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0010703880107030272}, {"id": 4, "seek": 2692, "start": 35.760000000000005, "end": 43.68000000000001, "text": " how it appears when it was opened by Impress, the PPTX file exported by PowerPoint. What", "tokens": [577, 309, 7038, 562, 309, 390, 5625, 538, 8270, 735, 11, 264, 37369, 51, 55, 3991, 42055, 538, 25584, 13, 708], "temperature": 0.0, "avg_logprob": -0.13855810726390166, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0010703880107030272}, {"id": 5, "seek": 2692, "start": 43.68000000000001, "end": 51.400000000000006, "text": " we need to focus here is the rows pointed by the arrows are somehow shrunk when it was", "tokens": [321, 643, 281, 1879, 510, 307, 264, 13241, 10932, 538, 264, 19669, 366, 6063, 9884, 3197, 562, 309, 390], "temperature": 0.0, "avg_logprob": -0.13855810726390166, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.0010703880107030272}, {"id": 6, "seek": 5140, "start": 51.4, "end": 61.2, "text": " opened in Impress and it wasn't immediately obvious. If we look at how PowerPoint exports", "tokens": [5625, 294, 8270, 735, 293, 309, 2067, 380, 4258, 6322, 13, 759, 321, 574, 412, 577, 25584, 31428], "temperature": 0.0, "avg_logprob": -0.17037158427031143, "compression_ratio": 1.2765957446808511, "no_speech_prob": 0.0002925193984992802}, {"id": 7, "seek": 5140, "start": 61.2, "end": 72.32, "text": " the table layout into PPTX files, what we will realize is it defines row heights. So let's", "tokens": [264, 3199, 13333, 666, 37369, 51, 55, 7098, 11, 437, 321, 486, 4325, 307, 309, 23122, 5386, 25930, 13, 407, 718, 311], "temperature": 0.0, "avg_logprob": -0.17037158427031143, "compression_ratio": 1.2765957446808511, "no_speech_prob": 0.0002925193984992802}, {"id": 8, "seek": 7232, "start": 72.32, "end": 81.75999999999999, "text": " just focus on that part but it doesn't really define a total table height to fit inside.", "tokens": [445, 1879, 322, 300, 644, 457, 309, 1177, 380, 534, 6964, 257, 3217, 3199, 6681, 281, 3318, 1854, 13], "temperature": 0.0, "avg_logprob": -0.20585100991385324, "compression_ratio": 1.6477987421383649, "no_speech_prob": 7.848356472095475e-05}, {"id": 9, "seek": 7232, "start": 81.75999999999999, "end": 89.03999999999999, "text": " While we are importing these row heights what we do is we first calculate what does all", "tokens": [3987, 321, 366, 43866, 613, 5386, 25930, 437, 321, 360, 307, 321, 700, 8873, 437, 775, 439], "temperature": 0.0, "avg_logprob": -0.20585100991385324, "compression_ratio": 1.6477987421383649, "no_speech_prob": 7.848356472095475e-05}, {"id": 10, "seek": 7232, "start": 89.03999999999999, "end": 96.24, "text": " of the row heights add up to because we use the total table height to layout a table.", "tokens": [295, 264, 5386, 25930, 909, 493, 281, 570, 321, 764, 264, 3217, 3199, 6681, 281, 13333, 257, 3199, 13], "temperature": 0.0, "avg_logprob": -0.20585100991385324, "compression_ratio": 1.6477987421383649, "no_speech_prob": 7.848356472095475e-05}, {"id": 11, "seek": 9624, "start": 96.24, "end": 102.96, "text": " So we calculate that by adding up each of the row heights and also we assign each row", "tokens": [407, 321, 8873, 300, 538, 5127, 493, 1184, 295, 264, 5386, 25930, 293, 611, 321, 6269, 1184, 5386], "temperature": 0.0, "avg_logprob": -0.1849935442902321, "compression_ratio": 1.6556603773584906, "no_speech_prob": 9.256007615476847e-05}, {"id": 12, "seek": 9624, "start": 102.96, "end": 110.6, "text": " with their own height. But it turns out when this specific file is exported and if you", "tokens": [365, 641, 1065, 6681, 13, 583, 309, 4523, 484, 562, 341, 2685, 3991, 307, 42055, 293, 498, 291], "temperature": 0.0, "avg_logprob": -0.1849935442902321, "compression_ratio": 1.6556603773584906, "no_speech_prob": 9.256007615476847e-05}, {"id": 13, "seek": 9624, "start": 110.6, "end": 115.11999999999999, "text": " look at row heights for the empty rows, they are correct, there is nothing wrong there", "tokens": [574, 412, 5386, 25930, 337, 264, 6707, 13241, 11, 436, 366, 3006, 11, 456, 307, 1825, 2085, 456], "temperature": 0.0, "avg_logprob": -0.1849935442902321, "compression_ratio": 1.6556603773584906, "no_speech_prob": 9.256007615476847e-05}, {"id": 14, "seek": 9624, "start": 115.11999999999999, "end": 122.56, "text": " but if you look at for instance the one row that says COLA, it appears to have a row height", "tokens": [457, 498, 291, 574, 412, 337, 5197, 264, 472, 5386, 300, 1619, 3002, 11435, 11, 309, 7038, 281, 362, 257, 5386, 6681], "temperature": 0.0, "avg_logprob": -0.1849935442902321, "compression_ratio": 1.6556603773584906, "no_speech_prob": 9.256007615476847e-05}, {"id": 15, "seek": 12256, "start": 122.56, "end": 134.28, "text": " of zero which doesn't really make sense. So now let's also something to mention here", "tokens": [295, 4018, 597, 1177, 380, 534, 652, 2020, 13, 407, 586, 718, 311, 611, 746, 281, 2152, 510], "temperature": 0.0, "avg_logprob": -0.15304748595707, "compression_ratio": 1.48, "no_speech_prob": 3.742626722669229e-05}, {"id": 16, "seek": 12256, "start": 134.28, "end": 141.8, "text": " is if we start typing anything in one of the empty rows, there are no text properties", "tokens": [307, 498, 321, 722, 18444, 1340, 294, 472, 295, 264, 6707, 13241, 11, 456, 366, 572, 2487, 7221], "temperature": 0.0, "avg_logprob": -0.15304748595707, "compression_ratio": 1.48, "no_speech_prob": 3.742626722669229e-05}, {"id": 17, "seek": 12256, "start": 141.8, "end": 148.28, "text": " actually imported from the PPTX file, they are somehow lost in the process like the text", "tokens": [767, 25524, 490, 264, 37369, 51, 55, 3991, 11, 436, 366, 6063, 2731, 294, 264, 1399, 411, 264, 2487], "temperature": 0.0, "avg_logprob": -0.15304748595707, "compression_ratio": 1.48, "no_speech_prob": 3.742626722669229e-05}, {"id": 18, "seek": 14828, "start": 148.28, "end": 154.96, "text": " when we start typing in the empty rows in the PowerPoint one, it starts as a blue, it", "tokens": [562, 321, 722, 18444, 294, 264, 6707, 13241, 294, 264, 25584, 472, 11, 309, 3719, 382, 257, 3344, 11, 309], "temperature": 0.0, "avg_logprob": -0.2024600939317183, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002204235061071813}, {"id": 19, "seek": 14828, "start": 154.96, "end": 161.84, "text": " has a blue color, etc. It has a different size but if we write it in the impressed one,", "tokens": [575, 257, 3344, 2017, 11, 5183, 13, 467, 575, 257, 819, 2744, 457, 498, 321, 2464, 309, 294, 264, 11679, 472, 11], "temperature": 0.0, "avg_logprob": -0.2024600939317183, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002204235061071813}, {"id": 20, "seek": 14828, "start": 161.84, "end": 167.76, "text": " it is just defaulted so it's black and 18 points. So before understanding the problem", "tokens": [309, 307, 445, 7576, 292, 370, 309, 311, 2211, 293, 2443, 2793, 13, 407, 949, 3701, 264, 1154], "temperature": 0.0, "avg_logprob": -0.2024600939317183, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002204235061071813}, {"id": 21, "seek": 14828, "start": 167.76, "end": 177.4, "text": " we need to know a little bit about how impressed layouts the table. The table is basically", "tokens": [321, 643, 281, 458, 257, 707, 857, 466, 577, 11679, 46100, 264, 3199, 13, 440, 3199, 307, 1936], "temperature": 0.0, "avg_logprob": -0.2024600939317183, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002204235061071813}, {"id": 22, "seek": 17740, "start": 177.4, "end": 185.88, "text": " fitted into a given total height but while doing so we also care for what each row heights", "tokens": [26321, 666, 257, 2212, 3217, 6681, 457, 1339, 884, 370, 321, 611, 1127, 337, 437, 1184, 5386, 25930], "temperature": 0.0, "avg_logprob": -0.19929648983863094, "compression_ratio": 1.5868263473053892, "no_speech_prob": 0.00017456380010116845}, {"id": 23, "seek": 17740, "start": 185.88, "end": 193.36, "text": " were. So basically we need to know the total height correctly because if it is smaller", "tokens": [645, 13, 407, 1936, 321, 643, 281, 458, 264, 3217, 6681, 8944, 570, 498, 309, 307, 4356], "temperature": 0.0, "avg_logprob": -0.19929648983863094, "compression_ratio": 1.5868263473053892, "no_speech_prob": 0.00017456380010116845}, {"id": 24, "seek": 17740, "start": 193.36, "end": 202.08, "text": " than some of the rows, we basically happen to be shrinking, trying to shrink the table.", "tokens": [813, 512, 295, 264, 13241, 11, 321, 1936, 1051, 281, 312, 41684, 11, 1382, 281, 23060, 264, 3199, 13], "temperature": 0.0, "avg_logprob": -0.19929648983863094, "compression_ratio": 1.5868263473053892, "no_speech_prob": 0.00017456380010116845}, {"id": 25, "seek": 20208, "start": 202.08, "end": 208.32000000000002, "text": " When that happens, what the impressed tries to do is adjust the row height proportionally", "tokens": [1133, 300, 2314, 11, 437, 264, 11679, 9898, 281, 360, 307, 4369, 264, 5386, 6681, 16068, 379], "temperature": 0.0, "avg_logprob": -0.2316640466451645, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.00035279945586808026}, {"id": 26, "seek": 20208, "start": 208.32000000000002, "end": 214.28, "text": " to what were they before and if there is text inside, there is a minimum height it can go", "tokens": [281, 437, 645, 436, 949, 293, 498, 456, 307, 2487, 1854, 11, 456, 307, 257, 7285, 6681, 309, 393, 352], "temperature": 0.0, "avg_logprob": -0.2316640466451645, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.00035279945586808026}, {"id": 27, "seek": 20208, "start": 214.28, "end": 225.04000000000002, "text": " to and when that happens, like in this case when that happens, since it can't shrink", "tokens": [281, 293, 562, 300, 2314, 11, 411, 294, 341, 1389, 562, 300, 2314, 11, 1670, 309, 393, 380, 23060], "temperature": 0.0, "avg_logprob": -0.2316640466451645, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.00035279945586808026}, {"id": 28, "seek": 22504, "start": 225.04, "end": 233.0, "text": " the line that says color further, it shrinks the empty line because it can to try to fit", "tokens": [264, 1622, 300, 1619, 2017, 3052, 11, 309, 9884, 16431, 264, 6707, 1622, 570, 309, 393, 281, 853, 281, 3318], "temperature": 0.0, "avg_logprob": -0.20198463386213275, "compression_ratio": 1.4972677595628416, "no_speech_prob": 8.088091271929443e-05}, {"id": 29, "seek": 22504, "start": 233.0, "end": 241.39999999999998, "text": " in that wrong table height. Also, if we explore the PPTX output, we will realize that the empty", "tokens": [294, 300, 2085, 3199, 6681, 13, 2743, 11, 498, 321, 6839, 264, 37369, 51, 55, 5598, 11, 321, 486, 4325, 300, 264, 6707], "temperature": 0.0, "avg_logprob": -0.20198463386213275, "compression_ratio": 1.4972677595628416, "no_speech_prob": 8.088091271929443e-05}, {"id": 30, "seek": 22504, "start": 241.39999999999998, "end": 248.76, "text": " cell properties are exported in n-paragraph run properties. We need to import that. There", "tokens": [2815, 7221, 366, 42055, 294, 297, 12, 2181, 559, 2662, 1190, 7221, 13, 492, 643, 281, 974, 300, 13, 821], "temperature": 0.0, "avg_logprob": -0.20198463386213275, "compression_ratio": 1.4972677595628416, "no_speech_prob": 8.088091271929443e-05}, {"id": 31, "seek": 24876, "start": 248.76, "end": 255.32, "text": " isn't already an implementation for that but I will discuss this a little bit later.", "tokens": [1943, 380, 1217, 364, 11420, 337, 300, 457, 286, 486, 2248, 341, 257, 707, 857, 1780, 13], "temperature": 0.0, "avg_logprob": -0.20800009541127873, "compression_ratio": 1.6064814814814814, "no_speech_prob": 0.00034099374897778034}, {"id": 32, "seek": 24876, "start": 255.32, "end": 261.12, "text": " If you look at the problem in detail, let's say what we need to fix here is we need to", "tokens": [759, 291, 574, 412, 264, 1154, 294, 2607, 11, 718, 311, 584, 437, 321, 643, 281, 3191, 510, 307, 321, 643, 281], "temperature": 0.0, "avg_logprob": -0.20800009541127873, "compression_ratio": 1.6064814814814814, "no_speech_prob": 0.00034099374897778034}, {"id": 33, "seek": 24876, "start": 261.12, "end": 267.64, "text": " somehow care for these problematic row heights that during import which they don't have", "tokens": [6063, 1127, 337, 613, 19011, 5386, 25930, 300, 1830, 974, 597, 436, 500, 380, 362], "temperature": 0.0, "avg_logprob": -0.20800009541127873, "compression_ratio": 1.6064814814814814, "no_speech_prob": 0.00034099374897778034}, {"id": 34, "seek": 24876, "start": 267.64, "end": 278.2, "text": " a height of zero but they are defined as so, such. Empty cell, we need to know the text", "tokens": [257, 6681, 295, 4018, 457, 436, 366, 7642, 382, 370, 11, 1270, 13, 3968, 39420, 2815, 11, 321, 643, 281, 458, 264, 2487], "temperature": 0.0, "avg_logprob": -0.20800009541127873, "compression_ratio": 1.6064814814814814, "no_speech_prob": 0.00034099374897778034}, {"id": 35, "seek": 27820, "start": 278.2, "end": 283.15999999999997, "text": " sizes for empty cells too. We need to do this from n-paragraph run properties. Also, there", "tokens": [11602, 337, 6707, 5438, 886, 13, 492, 643, 281, 360, 341, 490, 297, 12, 2181, 559, 2662, 1190, 7221, 13, 2743, 11, 456], "temperature": 0.0, "avg_logprob": -0.19345745673546424, "compression_ratio": 1.595959595959596, "no_speech_prob": 8.113816875265911e-05}, {"id": 36, "seek": 27820, "start": 283.15999999999997, "end": 288.24, "text": " was some previous range of pixels here that kind of altered the layouting code instead", "tokens": [390, 512, 3894, 3613, 295, 18668, 510, 300, 733, 295, 28783, 264, 13333, 278, 3089, 2602], "temperature": 0.0, "avg_logprob": -0.19345745673546424, "compression_ratio": 1.595959595959596, "no_speech_prob": 8.113816875265911e-05}, {"id": 37, "seek": 27820, "start": 288.24, "end": 295.59999999999997, "text": " of the import code and there are some regressions that messed up some table resizing functionality", "tokens": [295, 264, 974, 3089, 293, 456, 366, 512, 1121, 735, 626, 300, 16507, 493, 512, 3199, 725, 3319, 14980], "temperature": 0.0, "avg_logprob": -0.19345745673546424, "compression_ratio": 1.595959595959596, "no_speech_prob": 8.113816875265911e-05}, {"id": 38, "seek": 27820, "start": 295.59999999999997, "end": 302.71999999999997, "text": " there. We need to revert those changes.", "tokens": [456, 13, 492, 643, 281, 319, 3281, 729, 2962, 13], "temperature": 0.0, "avg_logprob": -0.19345745673546424, "compression_ratio": 1.595959595959596, "no_speech_prob": 8.113816875265911e-05}, {"id": 39, "seek": 30272, "start": 302.72, "end": 309.52000000000004, "text": " So basically, it turns out to be PowerPoint tries to export desired row heights. For instance,", "tokens": [407, 1936, 11, 309, 4523, 484, 281, 312, 25584, 9898, 281, 10725, 14721, 5386, 25930, 13, 1171, 5197, 11], "temperature": 0.0, "avg_logprob": -0.20449954986572266, "compression_ratio": 1.4754098360655739, "no_speech_prob": 7.205978909041733e-05}, {"id": 40, "seek": 30272, "start": 309.52000000000004, "end": 315.84000000000003, "text": " if you try to just pull a row to zero while it has text in it, it doesn't let you do it", "tokens": [498, 291, 853, 281, 445, 2235, 257, 5386, 281, 4018, 1339, 309, 575, 2487, 294, 309, 11, 309, 1177, 380, 718, 291, 360, 309], "temperature": 0.0, "avg_logprob": -0.20449954986572266, "compression_ratio": 1.4754098360655739, "no_speech_prob": 7.205978909041733e-05}, {"id": 41, "seek": 30272, "start": 315.84000000000003, "end": 326.12, "text": " but it actually saves it as such. So, in the end, that creates a problem for us. So, to", "tokens": [457, 309, 767, 19155, 309, 382, 1270, 13, 407, 11, 294, 264, 917, 11, 300, 7829, 257, 1154, 337, 505, 13, 407, 11, 281], "temperature": 0.0, "avg_logprob": -0.20449954986572266, "compression_ratio": 1.4754098360655739, "no_speech_prob": 7.205978909041733e-05}, {"id": 42, "seek": 32612, "start": 326.12, "end": 335.28000000000003, "text": " fix this, what we can do and what I did was during import, before layouting the table", "tokens": [3191, 341, 11, 437, 321, 393, 360, 293, 437, 286, 630, 390, 1830, 974, 11, 949, 13333, 278, 264, 3199], "temperature": 0.0, "avg_logprob": -0.16922232839796278, "compression_ratio": 1.6419753086419753, "no_speech_prob": 0.00010580263915471733}, {"id": 43, "seek": 32612, "start": 335.28000000000003, "end": 343.2, "text": " into an area which our impress usually does it, we do a pre-layouting which is we just", "tokens": [666, 364, 1859, 597, 527, 6729, 2673, 775, 309, 11, 321, 360, 257, 659, 12, 8376, 346, 278, 597, 307, 321, 445], "temperature": 0.0, "avg_logprob": -0.16922232839796278, "compression_ratio": 1.6419753086419753, "no_speech_prob": 0.00010580263915471733}, {"id": 44, "seek": 32612, "start": 343.2, "end": 349.84000000000003, "text": " take the row sizes and we don't give the layouting code any area to layout into and we let it", "tokens": [747, 264, 5386, 11602, 293, 321, 500, 380, 976, 264, 13333, 278, 3089, 604, 1859, 281, 13333, 666, 293, 321, 718, 309], "temperature": 0.0, "avg_logprob": -0.16922232839796278, "compression_ratio": 1.6419753086419753, "no_speech_prob": 0.00010580263915471733}, {"id": 45, "seek": 34984, "start": 349.84, "end": 357.64, "text": " layout itself. So, it basically just looks at the row sizes and tries to expand them", "tokens": [13333, 2564, 13, 407, 11, 309, 1936, 445, 1542, 412, 264, 5386, 11602, 293, 9898, 281, 5268, 552], "temperature": 0.0, "avg_logprob": -0.17065321012984874, "compression_ratio": 1.3464566929133859, "no_speech_prob": 0.00018866440223064274}, {"id": 46, "seek": 34984, "start": 357.64, "end": 369.2, "text": " if they are smaller than possible. And that gives us a final height that we can use in", "tokens": [498, 436, 366, 4356, 813, 1944, 13, 400, 300, 2709, 505, 257, 2572, 6681, 300, 321, 393, 764, 294], "temperature": 0.0, "avg_logprob": -0.17065321012984874, "compression_ratio": 1.3464566929133859, "no_speech_prob": 0.00018866440223064274}, {"id": 47, "seek": 36920, "start": 369.2, "end": 380.32, "text": " successive layouting attempts. So, we kind of correct the total table heights doing that.", "tokens": [48043, 13333, 278, 15257, 13, 407, 11, 321, 733, 295, 3006, 264, 3217, 3199, 25930, 884, 300, 13], "temperature": 0.0, "avg_logprob": -0.26893768754116326, "compression_ratio": 1.359375, "no_speech_prob": 9.614048758521676e-05}, {"id": 48, "seek": 36920, "start": 380.32, "end": 389.8, "text": " And we also don't have the text properties for the empty rows. So, the problem there", "tokens": [400, 321, 611, 500, 380, 362, 264, 2487, 7221, 337, 264, 6707, 13241, 13, 407, 11, 264, 1154, 456], "temperature": 0.0, "avg_logprob": -0.26893768754116326, "compression_ratio": 1.359375, "no_speech_prob": 9.614048758521676e-05}, {"id": 49, "seek": 38980, "start": 389.8, "end": 401.48, "text": " was, turns out these text properties are actually imported into text nodes but when", "tokens": [390, 11, 4523, 484, 613, 2487, 7221, 366, 767, 25524, 666, 2487, 13891, 457, 562], "temperature": 0.0, "avg_logprob": -0.23034808510228208, "compression_ratio": 1.7039473684210527, "no_speech_prob": 0.0001674147933954373}, {"id": 50, "seek": 38980, "start": 401.48, "end": 407.64, "text": " there's new text is being typed, they actually inherit their properties from the cells'", "tokens": [456, 311, 777, 2487, 307, 885, 33941, 11, 436, 767, 21389, 641, 7221, 490, 264, 5438, 6], "temperature": 0.0, "avg_logprob": -0.23034808510228208, "compression_ratio": 1.7039473684210527, "no_speech_prob": 0.0001674147933954373}, {"id": 51, "seek": 38980, "start": 407.64, "end": 414.40000000000003, "text": " own properties instead of the text nodes. Text nodes are just being dumped and new ones", "tokens": [1065, 7221, 2602, 295, 264, 2487, 13891, 13, 18643, 13891, 366, 445, 885, 32131, 293, 777, 2306], "temperature": 0.0, "avg_logprob": -0.23034808510228208, "compression_ratio": 1.7039473684210527, "no_speech_prob": 0.0001674147933954373}, {"id": 52, "seek": 41440, "start": 414.4, "end": 423.03999999999996, "text": " are being created. So, to fix that, we need to push the text properties from the n-paragraph", "tokens": [366, 885, 2942, 13, 407, 11, 281, 3191, 300, 11, 321, 643, 281, 2944, 264, 2487, 7221, 490, 264, 297, 12, 2181, 559, 2662], "temperature": 0.0, "avg_logprob": -0.23531950765581272, "compression_ratio": 1.563953488372093, "no_speech_prob": 5.8832174545386806e-05}, {"id": 53, "seek": 41440, "start": 423.03999999999996, "end": 432.44, "text": " run properties into the cells' properties that themselves to make it work correctly.", "tokens": [1190, 7221, 666, 264, 5438, 6, 7221, 300, 2969, 281, 652, 309, 589, 8944, 13], "temperature": 0.0, "avg_logprob": -0.23531950765581272, "compression_ratio": 1.563953488372093, "no_speech_prob": 5.8832174545386806e-05}, {"id": 54, "seek": 41440, "start": 432.44, "end": 442.28, "text": " Well, to finish up, with these fixes, we were able to get rid of the problematic regression", "tokens": [1042, 11, 281, 2413, 493, 11, 365, 613, 32539, 11, 321, 645, 1075, 281, 483, 3973, 295, 264, 19011, 24590], "temperature": 0.0, "avg_logprob": -0.23531950765581272, "compression_ratio": 1.563953488372093, "no_speech_prob": 5.8832174545386806e-05}, {"id": 55, "seek": 44228, "start": 442.28, "end": 449.76, "text": " causing code in the layout thing and we moved the conceptual fixes from there into the import", "tokens": [9853, 3089, 294, 264, 13333, 551, 293, 321, 4259, 264, 24106, 32539, 490, 456, 666, 264, 974], "temperature": 0.0, "avg_logprob": -0.1782623291015625, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.00015199043264146894}, {"id": 56, "seek": 44228, "start": 449.76, "end": 457.79999999999995, "text": " code, making it possible to work correctly. And additionally, some unit tests were added", "tokens": [3089, 11, 1455, 309, 1944, 281, 589, 8944, 13, 400, 43181, 11, 512, 4985, 6921, 645, 3869], "temperature": 0.0, "avg_logprob": -0.1782623291015625, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.00015199043264146894}, {"id": 57, "seek": 44228, "start": 457.79999999999995, "end": 468.0, "text": " to make sure the n-paragraph run properties stayed correctly that covered those areas.", "tokens": [281, 652, 988, 264, 297, 12, 2181, 559, 2662, 1190, 7221, 9181, 8944, 300, 5343, 729, 3179, 13], "temperature": 0.0, "avg_logprob": -0.1782623291015625, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.00015199043264146894}, {"id": 58, "seek": 46800, "start": 468.0, "end": 475.0, "text": " Thank you. That's all from me.", "tokens": [50364, 1044, 291, 13, 663, 311, 439, 490, 385, 13, 50714], "temperature": 0.0, "avg_logprob": -0.4222787618637085, "compression_ratio": 0.7894736842105263, "no_speech_prob": 0.0003359904221724719}], "language": "en"}