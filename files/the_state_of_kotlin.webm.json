{"text": " Thank you for joining us today and let's start with a brief intro, probably, of our speakers. All right, thank you. Thank you all for being here. I'm Marco and I'm Kotlin GDE based in Berlin. I'm Italian and today I'm here talking about Kotlin. Same here. I'm Sergey. I'll be talking about Kotlin as well and we were asked to get you the state of Kotlin, whatever it means. I worked for various companies in Kotlin for about seven years now, I guess, such a long time. Early years with the backends in Kotlin now mainly in Android development and infra. But let's start with important things. We live in a modern time with modern technologies available and so this presentation is powered by generative AI. It's really important to remember that the speakers today, both of us, are not anyhow affiliated with any companies that create Kotlin or sponsor it or anything like this. It will be pure, our opinion based on our experience or guesses, I don't know. We might be wrong except for the places when we are right. That's it for today. And generative AI make a thing that probably the speaking these days will be an easy job. Last year, preparing for the FOSDOM talk, I've been writing my videos about 3 a.m. before the deadline. Nicola was already saying why you're not sending me the videos and I had to do and this year I thought, all right, I'm using the modern technologies and ask chatGPT to generate the slides for me. Unfortunately, we ended up in like 5 to 10 minutes saying, oh, I have no idea what is Kotlin because I don't have data after 2021 probably. So the rest of the presentation is really not powered by the generative AI. I'm sorry for this. So it's powered by us. And we had to figure out what is Kotlin and what is the current state. So probably the first reasonable thing thinking about this is to get and try to understand any of the developer service available. And one of the most interesting one in this domain is the JetBrains developer survey that they run, I guess, every year from 2019 or 2020-ish. So here is the data available on the end of 2022. And we can see definitely a domination of mobile development in Kotlin and presumably it's Android mobile development, I guess so. And another leading stream is the web or backend development which is rising and like 40% of all Kotlin engineers are working with backends. I must admit that at the end of like 2022, the majority of population is still in mobile, the backend is rising and backend is trending up. I was under impression like a year ago that, hey, Android is probably the only platform for Kotlin. However, I was like reasonably biased with this and the first time after COVID when I arrived to one of the European conferences that had a few topics there, I was impressed that the majority of topics were with backends. But today let's try to avoid getting too deep into particular Kotlin platforms and focus more on like high-level language stuff, what is coming in the next years, or at least what we can probably predict to come. It's quite funny that it's possible to describe the whole 2022 and 2023 agenda in the Kotlin world with just five letters. And one is common in both of the words. It's K2, the new Kotlin compiler that's coming, and the Kotlin Multiplatform or KMP. So I'm not very surprised that in the past year we didn't see a lot of Kotlin language features and there are a few reasons for this. And we'll definitely discuss them in the next slides and further in this talk. But let's try to first understand what is K2 and what is what it's preparing for us as developers and product owners or engineers. And then we'll get to KMP later in this presentation. First of all, there are a few major problems in the whole Kotlin infrastructure. And they are the stability and performance of the ID. So even though probably IntelliJ is one of the greatest product on the market for developers, it's not great for Kotlin. I mean, it's fine, but whenever your project is growing and growing and growing, and I know something about large project in the industry, it's getting unusable. The second thing is build speed. Like whenever you tried probably Java for its builds before, even if Java is slow, but overall Kotlin is significantly slower. And this is like a drawback, especially if you came from the legacy code base whenever you had like five or 10 years of previously Java code. Yeah, I know, I know, I tried to say we are not getting deeper into the platforms, but it is what it is. And the build setup overall is quite complicated. So for example, Kotlin multiplatform, how to run Kotlin multiplatforms from the common line. If you can give me an answer, I will just take you out for dinner probably. And currently the overall K2 is developing in the two major Kotlin roadmap milestones. Like whenever you're interested was going on in Kotlin, you can get to the Kotlin roadmap. Thanks a lot for publishing it to JetBrains. It's like magic. There are two key things like getting K2 to better. Kotlin is currently in alpha and it's the whole rewrite of the compiler front end. Meaning that if you previously hacked something for the compiler plugins or compiler infrastructure, or you're an owner of the libraries like KSP or KAPT, you basically have to redo everything you did in the past three, five years. The second part is the IntelliJ-based plugin and the story there is the compiler and the compiler front end especially is very coupled with whatever Android Studio or IntelliJ IDEA or your IDEA of choice is doing with the language. Whether it's a language server or the index you have locally, your compiler performance really impact the experience you have in the IDE. Let's get to the other things. Like the unfortunate is the deprioritization of the API for compiler plugins. It means that for all of the engineers outside of JetBrains, it will be still very hard to create tools for a compiler for IDE and evolve them over time. Currently, you don't have a stable and you don't have basically a documented API for the compiler. For example, if you're creating a library that changes something, every major or even minor release of Kotlin, you need to upgrade it and evolve and maintain the compatibility of the version for the compiler. Currently, K2 is in alpha, but as far as we understand, the Kotlin 1.9 is about to get us K2 in beta. For the current numbers, we have the improvement at around a rate of 2x for all the build that JetBrains provided us in their benchmarks and publicly told us about these things. Kotlin itself has been building significantly faster. But if you're impatient, there is the way to bring at least some of the improvements for the build speed earlier in the pipe. You can get to Kotlin 1.7 something and it has probably 10 to 15% improvement in the build speed. You can even experience this in the large-scale code bases. There are a few plans about the K2 going to beta and mainly what JetBrains and Kotlin wants to achieve. It's the full functional compiler and it should work for the whole ecosystem, not only the JVM. It's probably usable for JVM even right now, I tried it. It's not a great experience, but you can experiment at least with it. There is a need for improvement in various plugins like Kotlin annotation processor, serializable, KSP and others. It will take time. As of yesterday, there is a well-done support for Kotlin X serialization. All open, no arc plugins and Lombok. It's already in the source code of Kotlin compiler. I'm not sure which version they're targeting, so I was checking 1.9 daily build and it was fine there. Probably there is something in 1.721, but I'm not quite sure. Unfortunately, KAPT is still not working, so you cannot do any of the annotation processing yet. KSP, the symbol processing, the future of annotation processing for Kotlin also doesn't work. Let's get into some details of the annotation processor support. Luckily in Utrecht, there are tickets for almost everything that works or that doesn't work and what JetBrains is planning to work on. There is a ticket for front-end IR support for KAPT. It's still in progress. It should be done in 1.9, or at least it's the current version now. I tried to understand what doesn't work right now, and it got me to quite interesting things. That KAPT currently doesn't support language version 2.0. Please use language version 1.9 or below. It's just a source code that I saw yesterday. I tried to get deeper so that there is a Kotlin version introduced that has symbols both 2.0. I probably don't want to make any judgment here what the version would be, but there are some things that suggest that we are going to have some major changes in the future. Kotlin symbol processing is another thing that doesn't work currently, but it's expected to get around 1.9. There is some work going on in the domain in the Google repository for KSP, but still nothing there done. The testing info doesn't work at all currently, so one of the major libraries for the compile testing doesn't support K2. I don't know when the support will come there. There is a poor request getting this support, at least partially, but who knows, probably will take another six to eight months. Finally, the IDE support for K2. As far as I understand, the plan is to create the K2-based IDE plugin that will probably start from a quite lightweight one that will support only a few things. It should have the performance that is targeted to be. Everything works fast and correct and likely stable. The IDE plugin will have a lower number of features, will be lightweight and will be released likely after the better or stable of the compiler, so it's not earlier than Kotlin 1.9, probably even later. As stated currently, it should have all the code highlighting. It should have basic code completion, like nothing fancy, probably just the stuff you use on a regular basis, but not for major refactoring or anything else. In debugger, there should be breakpoints and some simple stuff, really simple stuff, as it's declared, and there should be a limited number of diagnostics. The last but not the least thing, as you might notice, another big part is the Kotlin multiplatform support. This new lightweight plugin is aiming to have the full-featured Kotlin multiplatform support as well. That's my third. After some key to magic, let's try to check what went through this year of Kotlin multiplatform and what will come in the future. Let's start our journey from Kotlin 1.6.20. The first magic things, beautiful things that we saw, was the Ierco project structure becoming default. This thing was such a bless, because you finally don't need anymore to do some weird magic stuff like symbolic links and things to cover multiple architecture like iOS version and Intel version and X64 version. You get automatically shared stuff and you can just use an intermediate target for the thing, which was really a good thing to start with. But it wasn't the only thing in 6.20, because we got some improvements on Kotlin native and we got all the improvements that, as an engineer, you can dream of. So runtime, compile time and code size. It was an interesting update that brought many improvements on the developer experience, which was really nice. But the very big thing came later in 1.7.20, which was finally the new memory manager for Kotlin. With that version, it's now enabled by default and basically it's again a huge win in terms of developer experience because a lot of change changed and we got better stuff. That's because the memory manager changed from reference counting garbage collection to tracing garbage collection because in the past it was just made it quick and dirty. Let's put it in a way to just get out, but now that things are getting bigger and people are using it, they realize that some stuff was not the best choice afterwards. So what this means in reality is that there are no more restrictions on sharing objects between threads. There are more leak-free primitives, which means no leaks on the internals, but maybe leaks on stuff that you wrote because we can introduce bad things, but at least the tooling is not sneaking leaks. What does it mean at the end of the day for developers? It means that no more freezing. Finally, we get all the beautiful sun because we don't need to freeze objects anymore. We are really free to use everything and you just don't have to think anymore on free stuff and to understand that it's not crashing, that there's no mobility and stuff, so all magic now. This thing enables a bigger thing, which is the finally cutting-mode platform mobile, the mobile part, to reach the beta version, which is a huge milestone. This means that the technology is basically done and it is safe to use in your project. The fact that it's in beta means that there's still some work to do mostly on the toolchain, but in the general thinking you can use it safely. Maybe there will be some cut-out corners on setting up the toolchain, stuff like that, but don't worry, you can start using and learning your project and do it because it's fun. All right, now let's move to more close to today and with the recent release of Kotlin 1.8, we got a lot more interesting stuff in the field of Objective-C as with interoperability, which is something that people always ask because it could be better sometimes. With this release, we got some nice annotations like Objective-C name that let us specify a more idiomatic or more beautiful naming for some function that we want to expose to Swift so we can just change the name without changing the Kotlin object itself. Another one is hidden from Objective-C, which as the name suggests, we can hide some function from Objective-C because maybe we want to have a duplicated function that works better or has a better representation for the Swift word and we want to just hide the Kotlin one so we can save precious binary size and have a specific function only for the iOS part. Finally, another interesting thing is the should refine in Swift annotation, which basically tells the compiler to mark a function or a property as a Swift private. Basically, it's going to be exported on Objective-C with a double underscore and so with a double underscore, this function will be invisible because autosuggestion doesn't autosuggest. On iOS, sometimes stuff are invisible because autosuggestion doesn't work properly in Xcode, but that's another thing. But in this way, it will be possible to hide some function and then rewrite it on Swift to have a better idiomatic Swift way of doing things. Another experimental thing that we got on Kotlin 1.8 is something that I was dreaming of because every time I saw, I see Android test and Android Android test, my ads explode because every time I think that it's a typo or something, but it's not a typo. But right now, this will change and there will be more descriptive things like instead of Android test, Android unit test, and instead of Android Android test, Android instrumented test. So it's going to be more clear and you got to understand really what is this thing. Connected to that, there will be more clarity also to where to put the manifest. So not in the Android main, but you're going to have a specific folder for the bug and release version, so it's going to be more clear just and you got to understand better. This thing is still experimental, of course. It's going to be enabled by default sometimes in the future, but if you want to use it, you have to opt in with a Gradle option. Another thing that there was in Kotlin 1.8 was the stabilization of the Kotlin.js and so finally, right now, all the three different technologies, so Kotlin for the JVM, Kotlin native and Kotlin.js are using the same backend, which means better handling, less bug, and everything works better. Another interesting goodie that is not specific to a specific version is that since version 1.4 to 1.8, they were experimentally checking binary back to work compatibility, which is always a nice thing. And from now on, there are processes set up on the side to keep binary compatibility from every release, which is going to alleviate the pain of having stuff broken. All right, another very interesting thing about Kotlin and the multi-platform word is the fact that JetBrains is maintaining also a composed version for desktop and the web, which is a fork from the Android one from Google. And yeah, the support is going on, but it's really neat. It's really beautiful because you can just use something nicer to write a desktop application and not still have not to deal with Zwing, Java, whatever stuff. So it's really nice that we have some sort of things. Of course, it takes time to keep it up with Google releases because they have to catch it up. But for example, a couple of days ago, we got the 1.3.0 release, and some stuff is going forward also on this side. Last year, we got also some interesting experimental stuff which is composed for iOS. Yes, it seems happening. It's still some very experimental and technical preview, so absolutely not ready for production. But people in the community are playing with that. For example, folks touch up, they built the DroidCon app for the iOS version of the DroidCon app with compose for iOS, which is something amazing. And yeah, this is something, as I said, not ready, but it's something to keep an eye on because it's going to be wild and interesting. So what is going to come this year? Well, there will be more improvements on the memory manager, even though it's already stable and it's the default memory manager. So folks would keep increasing and fixing bugs and increasing performance on that. Of course, there will be more improvement on compilation time on Kotlin native because it's still sometimes not the fastest thing in the world, and so it has to be improved. Another point, which is, like I was mentioning before, it's always asked from people, is better exporting to Objective-C, so have better APIs to interact with from the iOS part. And also, another thing will be after confirming that there are tools in place to have backward binary compatibility for the Kotlin native version, they will describe and add more improvements and documentation for library developers to maintain a binary compatibility as well. All of that is going to... All of these improvements are connected to have finally Kotlin native platform mobile to stable, which hopefully is going to happen this year. And in order to do that, there are a bunch of things that need to be addressed. Like I said before, it's mostly tool chain and infrastructure stuff, but the main thing is working and you can start already using it because it's in beta and stuff are kind of working right now. With that was it, the introduction of the journey into Kotlin for this year, from the past year and for this year. So, thank you very much. There will be a lot of content today, so feel free to catch it up with all of that and have fun. Thank you very much. We do have four minutes for questions, so if you have any, raise your hand. We'll bring in the microphone. Is it okay if I ask three consecutive questions, two of which are related? First of all, in terms of Kotlin JS and Kotlin native, those are not intended to be a performance alternative for existing solutions. Kotlin JS wasn't meant to be a challenger to TypeScript, and Kotlin native wasn't intended to rival things like Rust or Go, etc. Is there a change in that ambition? That's my first question. My second question is, does JetBrains have any plans to use Compose to port their IDEs to Compose from AWT? Okay, for the first one, I'm not sure if I heard or read some changes or stuff, but yeah, there's just another thing in the ecosystem, probably it's not gonna replace. I'm not sure what you catch or what not, so I'm gonna restart. I haven't read stuff or heard stuff that changed what you were saying. Probably there's gonna be other tooling to support and not to replace. So it's gonna be another thing to cover and other use cases, not to completely replace. But yeah, I don't have more clear guidance or evidence or opinions about that. The second one was about, there was noisy, I didn't get it fully, but... Yeah, I'm not JetBrains, so I don't know, but probably yes, if I have to bet it. I know that they have their own runtime for UI and stuff like that, but probably yes they are gonna use it, but I'm not JetBrains, so I don't know.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 26.0, "text": " Thank you for joining us today and let's start with a brief intro, probably, of our speakers.", "tokens": [1044, 291, 337, 5549, 505, 965, 293, 718, 311, 722, 365, 257, 5353, 12897, 11, 1391, 11, 295, 527, 9518, 13], "temperature": 0.0, "avg_logprob": -0.7789689636230469, "compression_ratio": 1.1071428571428572, "no_speech_prob": 0.5116796493530273}, {"id": 1, "seek": 2600, "start": 26.0, "end": 36.0, "text": " All right, thank you. Thank you all for being here. I'm Marco and I'm Kotlin GDE based in Berlin.", "tokens": [1057, 558, 11, 1309, 291, 13, 1044, 291, 439, 337, 885, 510, 13, 286, 478, 26535, 293, 286, 478, 30123, 5045, 460, 22296, 2361, 294, 13848, 13], "temperature": 0.0, "avg_logprob": -0.18103908020773052, "compression_ratio": 1.5852272727272727, "no_speech_prob": 0.005774714518338442}, {"id": 2, "seek": 2600, "start": 36.0, "end": 42.0, "text": " I'm Italian and today I'm here talking about Kotlin.", "tokens": [286, 478, 10003, 293, 965, 286, 478, 510, 1417, 466, 30123, 5045, 13], "temperature": 0.0, "avg_logprob": -0.18103908020773052, "compression_ratio": 1.5852272727272727, "no_speech_prob": 0.005774714518338442}, {"id": 3, "seek": 2600, "start": 42.0, "end": 54.0, "text": " Same here. I'm Sergey. I'll be talking about Kotlin as well and we were asked to get you the state of Kotlin, whatever it means.", "tokens": [10635, 510, 13, 286, 478, 49238, 13, 286, 603, 312, 1417, 466, 30123, 5045, 382, 731, 293, 321, 645, 2351, 281, 483, 291, 264, 1785, 295, 30123, 5045, 11, 2035, 309, 1355, 13], "temperature": 0.0, "avg_logprob": -0.18103908020773052, "compression_ratio": 1.5852272727272727, "no_speech_prob": 0.005774714518338442}, {"id": 4, "seek": 5400, "start": 54.0, "end": 62.0, "text": " I worked for various companies in Kotlin for about seven years now, I guess, such a long time.", "tokens": [286, 2732, 337, 3683, 3431, 294, 30123, 5045, 337, 466, 3407, 924, 586, 11, 286, 2041, 11, 1270, 257, 938, 565, 13], "temperature": 0.0, "avg_logprob": -0.14046783936329377, "compression_ratio": 1.5159817351598173, "no_speech_prob": 0.001897743553854525}, {"id": 5, "seek": 5400, "start": 62.0, "end": 69.0, "text": " Early years with the backends in Kotlin now mainly in Android development and infra.", "tokens": [18344, 924, 365, 264, 646, 2581, 294, 30123, 5045, 586, 8704, 294, 8853, 3250, 293, 23654, 13], "temperature": 0.0, "avg_logprob": -0.14046783936329377, "compression_ratio": 1.5159817351598173, "no_speech_prob": 0.001897743553854525}, {"id": 6, "seek": 5400, "start": 69.0, "end": 73.0, "text": " But let's start with important things.", "tokens": [583, 718, 311, 722, 365, 1021, 721, 13], "temperature": 0.0, "avg_logprob": -0.14046783936329377, "compression_ratio": 1.5159817351598173, "no_speech_prob": 0.001897743553854525}, {"id": 7, "seek": 5400, "start": 73.0, "end": 83.0, "text": " We live in a modern time with modern technologies available and so this presentation is powered by generative AI.", "tokens": [492, 1621, 294, 257, 4363, 565, 365, 4363, 7943, 2435, 293, 370, 341, 5860, 307, 17786, 538, 1337, 1166, 7318, 13], "temperature": 0.0, "avg_logprob": -0.14046783936329377, "compression_ratio": 1.5159817351598173, "no_speech_prob": 0.001897743553854525}, {"id": 8, "seek": 8300, "start": 83.0, "end": 94.0, "text": " It's really important to remember that the speakers today, both of us, are not anyhow affiliated with any companies that create Kotlin", "tokens": [467, 311, 534, 1021, 281, 1604, 300, 264, 9518, 965, 11, 1293, 295, 505, 11, 366, 406, 44995, 42174, 365, 604, 3431, 300, 1884, 30123, 5045], "temperature": 0.0, "avg_logprob": -0.13212957382202148, "compression_ratio": 1.5068493150684932, "no_speech_prob": 0.0007564666448161006}, {"id": 9, "seek": 8300, "start": 94.0, "end": 104.0, "text": " or sponsor it or anything like this. It will be pure, our opinion based on our experience or guesses, I don't know.", "tokens": [420, 16198, 309, 420, 1340, 411, 341, 13, 467, 486, 312, 6075, 11, 527, 4800, 2361, 322, 527, 1752, 420, 42703, 11, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.13212957382202148, "compression_ratio": 1.5068493150684932, "no_speech_prob": 0.0007564666448161006}, {"id": 10, "seek": 8300, "start": 104.0, "end": 111.0, "text": " We might be wrong except for the places when we are right. That's it for today.", "tokens": [492, 1062, 312, 2085, 3993, 337, 264, 3190, 562, 321, 366, 558, 13, 663, 311, 309, 337, 965, 13], "temperature": 0.0, "avg_logprob": -0.13212957382202148, "compression_ratio": 1.5068493150684932, "no_speech_prob": 0.0007564666448161006}, {"id": 11, "seek": 11100, "start": 111.0, "end": 121.0, "text": " And generative AI make a thing that probably the speaking these days will be an easy job.", "tokens": [400, 1337, 1166, 7318, 652, 257, 551, 300, 1391, 264, 4124, 613, 1708, 486, 312, 364, 1858, 1691, 13], "temperature": 0.0, "avg_logprob": -0.26326222689646595, "compression_ratio": 1.2781456953642385, "no_speech_prob": 0.002081833314150572}, {"id": 12, "seek": 11100, "start": 121.0, "end": 132.0, "text": " Last year, preparing for the FOSDOM talk, I've been writing my videos about 3 a.m. before the deadline.", "tokens": [5264, 1064, 11, 10075, 337, 264, 479, 4367, 35, 5251, 751, 11, 286, 600, 668, 3579, 452, 2145, 466, 805, 257, 13, 76, 13, 949, 264, 20615, 13], "temperature": 0.0, "avg_logprob": -0.26326222689646595, "compression_ratio": 1.2781456953642385, "no_speech_prob": 0.002081833314150572}, {"id": 13, "seek": 13200, "start": 132.0, "end": 142.0, "text": " Nicola was already saying why you're not sending me the videos and I had to do and this year I thought, all right, I'm using the modern technologies", "tokens": [14776, 4711, 390, 1217, 1566, 983, 291, 434, 406, 7750, 385, 264, 2145, 293, 286, 632, 281, 360, 293, 341, 1064, 286, 1194, 11, 439, 558, 11, 286, 478, 1228, 264, 4363, 7943], "temperature": 0.0, "avg_logprob": -0.1863323518599587, "compression_ratio": 1.462882096069869, "no_speech_prob": 0.00114343105815351}, {"id": 14, "seek": 13200, "start": 142.0, "end": 150.0, "text": " and ask chatGPT to generate the slides for me. Unfortunately, we ended up in like 5 to 10 minutes saying,", "tokens": [293, 1029, 5081, 38, 47, 51, 281, 8460, 264, 9788, 337, 385, 13, 8590, 11, 321, 4590, 493, 294, 411, 1025, 281, 1266, 2077, 1566, 11], "temperature": 0.0, "avg_logprob": -0.1863323518599587, "compression_ratio": 1.462882096069869, "no_speech_prob": 0.00114343105815351}, {"id": 15, "seek": 13200, "start": 150.0, "end": 155.0, "text": " oh, I have no idea what is Kotlin because I don't have data after 2021 probably.", "tokens": [1954, 11, 286, 362, 572, 1558, 437, 307, 30123, 5045, 570, 286, 500, 380, 362, 1412, 934, 7201, 1391, 13], "temperature": 0.0, "avg_logprob": -0.1863323518599587, "compression_ratio": 1.462882096069869, "no_speech_prob": 0.00114343105815351}, {"id": 16, "seek": 15500, "start": 155.0, "end": 166.0, "text": " So the rest of the presentation is really not powered by the generative AI. I'm sorry for this. So it's powered by us.", "tokens": [407, 264, 1472, 295, 264, 5860, 307, 534, 406, 17786, 538, 264, 1337, 1166, 7318, 13, 286, 478, 2597, 337, 341, 13, 407, 309, 311, 17786, 538, 505, 13], "temperature": 0.0, "avg_logprob": -0.09279252337170886, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.0006866969051770866}, {"id": 17, "seek": 15500, "start": 166.0, "end": 172.0, "text": " And we had to figure out what is Kotlin and what is the current state.", "tokens": [400, 321, 632, 281, 2573, 484, 437, 307, 30123, 5045, 293, 437, 307, 264, 2190, 1785, 13], "temperature": 0.0, "avg_logprob": -0.09279252337170886, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.0006866969051770866}, {"id": 18, "seek": 15500, "start": 172.0, "end": 181.0, "text": " So probably the first reasonable thing thinking about this is to get and try to understand any of the developer service available.", "tokens": [407, 1391, 264, 700, 10585, 551, 1953, 466, 341, 307, 281, 483, 293, 853, 281, 1223, 604, 295, 264, 10754, 2643, 2435, 13], "temperature": 0.0, "avg_logprob": -0.09279252337170886, "compression_ratio": 1.5763546798029557, "no_speech_prob": 0.0006866969051770866}, {"id": 19, "seek": 18100, "start": 181.0, "end": 192.0, "text": " And one of the most interesting one in this domain is the JetBrains developer survey that they run, I guess, every year from 2019 or 2020-ish.", "tokens": [400, 472, 295, 264, 881, 1880, 472, 294, 341, 9274, 307, 264, 28730, 45606, 1292, 10754, 8984, 300, 436, 1190, 11, 286, 2041, 11, 633, 1064, 490, 6071, 420, 4808, 12, 742, 13], "temperature": 0.0, "avg_logprob": -0.15561987372005687, "compression_ratio": 1.3426573426573427, "no_speech_prob": 0.0006770872860215604}, {"id": 20, "seek": 18100, "start": 192.0, "end": 200.0, "text": " So here is the data available on the end of 2022.", "tokens": [407, 510, 307, 264, 1412, 2435, 322, 264, 917, 295, 20229, 13], "temperature": 0.0, "avg_logprob": -0.15561987372005687, "compression_ratio": 1.3426573426573427, "no_speech_prob": 0.0006770872860215604}, {"id": 21, "seek": 20000, "start": 200.0, "end": 212.0, "text": " And we can see definitely a domination of mobile development in Kotlin and presumably it's Android mobile development, I guess so.", "tokens": [400, 321, 393, 536, 2138, 257, 41502, 295, 6013, 3250, 294, 30123, 5045, 293, 26742, 309, 311, 8853, 6013, 3250, 11, 286, 2041, 370, 13], "temperature": 0.0, "avg_logprob": -0.13099394006244205, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0009931355016306043}, {"id": 22, "seek": 20000, "start": 212.0, "end": 224.0, "text": " And another leading stream is the web or backend development which is rising and like 40% of all Kotlin engineers are working with backends.", "tokens": [400, 1071, 5775, 4309, 307, 264, 3670, 420, 38087, 3250, 597, 307, 11636, 293, 411, 3356, 4, 295, 439, 30123, 5045, 11955, 366, 1364, 365, 646, 2581, 13], "temperature": 0.0, "avg_logprob": -0.13099394006244205, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.0009931355016306043}, {"id": 23, "seek": 22400, "start": 224.0, "end": 241.0, "text": " I must admit that at the end of like 2022, the majority of population is still in mobile, the backend is rising and backend is trending up.", "tokens": [286, 1633, 9796, 300, 412, 264, 917, 295, 411, 20229, 11, 264, 6286, 295, 4415, 307, 920, 294, 6013, 11, 264, 38087, 307, 11636, 293, 38087, 307, 28692, 493, 13], "temperature": 0.0, "avg_logprob": -0.09601729491661334, "compression_ratio": 1.4753086419753085, "no_speech_prob": 0.00032527573057450354}, {"id": 24, "seek": 22400, "start": 241.0, "end": 249.0, "text": " I was under impression like a year ago that, hey, Android is probably the only platform for Kotlin.", "tokens": [286, 390, 833, 9995, 411, 257, 1064, 2057, 300, 11, 4177, 11, 8853, 307, 1391, 264, 787, 3663, 337, 30123, 5045, 13], "temperature": 0.0, "avg_logprob": -0.09601729491661334, "compression_ratio": 1.4753086419753085, "no_speech_prob": 0.00032527573057450354}, {"id": 25, "seek": 24900, "start": 249.0, "end": 261.0, "text": " However, I was like reasonably biased with this and the first time after COVID when I arrived to one of the European conferences that had a few topics there,", "tokens": [2908, 11, 286, 390, 411, 23551, 28035, 365, 341, 293, 264, 700, 565, 934, 4566, 562, 286, 6678, 281, 472, 295, 264, 6473, 22032, 300, 632, 257, 1326, 8378, 456, 11], "temperature": 0.0, "avg_logprob": -0.116326904296875, "compression_ratio": 1.4076433121019107, "no_speech_prob": 0.0012196137104183435}, {"id": 26, "seek": 24900, "start": 261.0, "end": 269.0, "text": " I was impressed that the majority of topics were with backends.", "tokens": [286, 390, 11679, 300, 264, 6286, 295, 8378, 645, 365, 646, 2581, 13], "temperature": 0.0, "avg_logprob": -0.116326904296875, "compression_ratio": 1.4076433121019107, "no_speech_prob": 0.0012196137104183435}, {"id": 27, "seek": 26900, "start": 269.0, "end": 284.0, "text": " But today let's try to avoid getting too deep into particular Kotlin platforms and focus more on like high-level language stuff, what is coming in the next years, or at least what we can probably predict to come.", "tokens": [583, 965, 718, 311, 853, 281, 5042, 1242, 886, 2452, 666, 1729, 30123, 5045, 9473, 293, 1879, 544, 322, 411, 1090, 12, 12418, 2856, 1507, 11, 437, 307, 1348, 294, 264, 958, 924, 11, 420, 412, 1935, 437, 321, 393, 1391, 6069, 281, 808, 13], "temperature": 0.0, "avg_logprob": -0.07572462032367656, "compression_ratio": 1.488888888888889, "no_speech_prob": 0.0009354712092317641}, {"id": 28, "seek": 26900, "start": 284.0, "end": 296.0, "text": " It's quite funny that it's possible to describe the whole 2022 and 2023 agenda in the Kotlin world with just five letters.", "tokens": [467, 311, 1596, 4074, 300, 309, 311, 1944, 281, 6786, 264, 1379, 20229, 293, 44377, 9829, 294, 264, 30123, 5045, 1002, 365, 445, 1732, 7825, 13], "temperature": 0.0, "avg_logprob": -0.07572462032367656, "compression_ratio": 1.488888888888889, "no_speech_prob": 0.0009354712092317641}, {"id": 29, "seek": 29600, "start": 296.0, "end": 299.0, "text": " And one is common in both of the words.", "tokens": [400, 472, 307, 2689, 294, 1293, 295, 264, 2283, 13], "temperature": 0.0, "avg_logprob": -0.13515285823656165, "compression_ratio": 1.518018018018018, "no_speech_prob": 0.0005309224361553788}, {"id": 30, "seek": 29600, "start": 299.0, "end": 305.0, "text": " It's K2, the new Kotlin compiler that's coming, and the Kotlin Multiplatform or KMP.", "tokens": [467, 311, 591, 17, 11, 264, 777, 30123, 5045, 31958, 300, 311, 1348, 11, 293, 264, 30123, 5045, 29238, 39975, 837, 420, 591, 12224, 13], "temperature": 0.0, "avg_logprob": -0.13515285823656165, "compression_ratio": 1.518018018018018, "no_speech_prob": 0.0005309224361553788}, {"id": 31, "seek": 29600, "start": 305.0, "end": 316.0, "text": " So I'm not very surprised that in the past year we didn't see a lot of Kotlin language features and there are a few reasons for this.", "tokens": [407, 286, 478, 406, 588, 6100, 300, 294, 264, 1791, 1064, 321, 994, 380, 536, 257, 688, 295, 30123, 5045, 2856, 4122, 293, 456, 366, 257, 1326, 4112, 337, 341, 13], "temperature": 0.0, "avg_logprob": -0.13515285823656165, "compression_ratio": 1.518018018018018, "no_speech_prob": 0.0005309224361553788}, {"id": 32, "seek": 29600, "start": 316.0, "end": 325.0, "text": " And we'll definitely discuss them in the next slides and further in this talk.", "tokens": [400, 321, 603, 2138, 2248, 552, 294, 264, 958, 9788, 293, 3052, 294, 341, 751, 13], "temperature": 0.0, "avg_logprob": -0.13515285823656165, "compression_ratio": 1.518018018018018, "no_speech_prob": 0.0005309224361553788}, {"id": 33, "seek": 32500, "start": 325.0, "end": 338.0, "text": " But let's try to first understand what is K2 and what is what it's preparing for us as developers and product owners or engineers.", "tokens": [583, 718, 311, 853, 281, 700, 1223, 437, 307, 591, 17, 293, 437, 307, 437, 309, 311, 10075, 337, 505, 382, 8849, 293, 1674, 7710, 420, 11955, 13], "temperature": 0.0, "avg_logprob": -0.06940197944641113, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.00046770801418460906}, {"id": 34, "seek": 32500, "start": 338.0, "end": 344.0, "text": " And then we'll get to KMP later in this presentation.", "tokens": [400, 550, 321, 603, 483, 281, 591, 12224, 1780, 294, 341, 5860, 13], "temperature": 0.0, "avg_logprob": -0.06940197944641113, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.00046770801418460906}, {"id": 35, "seek": 32500, "start": 344.0, "end": 351.0, "text": " First of all, there are a few major problems in the whole Kotlin infrastructure.", "tokens": [2386, 295, 439, 11, 456, 366, 257, 1326, 2563, 2740, 294, 264, 1379, 30123, 5045, 6896, 13], "temperature": 0.0, "avg_logprob": -0.06940197944641113, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.00046770801418460906}, {"id": 36, "seek": 35100, "start": 351.0, "end": 356.0, "text": " And they are the stability and performance of the ID.", "tokens": [400, 436, 366, 264, 11826, 293, 3389, 295, 264, 7348, 13], "temperature": 0.0, "avg_logprob": -0.0962434462559076, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.0007593152113258839}, {"id": 37, "seek": 35100, "start": 356.0, "end": 370.0, "text": " So even though probably IntelliJ is one of the greatest product on the market for developers, it's not great for Kotlin.", "tokens": [407, 754, 1673, 1391, 18762, 72, 41, 307, 472, 295, 264, 6636, 1674, 322, 264, 2142, 337, 8849, 11, 309, 311, 406, 869, 337, 30123, 5045, 13], "temperature": 0.0, "avg_logprob": -0.0962434462559076, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.0007593152113258839}, {"id": 38, "seek": 35100, "start": 370.0, "end": 380.0, "text": " I mean, it's fine, but whenever your project is growing and growing and growing, and I know something about large project in the industry, it's getting unusable.", "tokens": [286, 914, 11, 309, 311, 2489, 11, 457, 5699, 428, 1716, 307, 4194, 293, 4194, 293, 4194, 11, 293, 286, 458, 746, 466, 2416, 1716, 294, 264, 3518, 11, 309, 311, 1242, 10054, 712, 13], "temperature": 0.0, "avg_logprob": -0.0962434462559076, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.0007593152113258839}, {"id": 39, "seek": 38000, "start": 380.0, "end": 384.0, "text": " The second thing is build speed.", "tokens": [440, 1150, 551, 307, 1322, 3073, 13], "temperature": 0.0, "avg_logprob": -0.11665356499808176, "compression_ratio": 1.5279187817258884, "no_speech_prob": 0.0008374155731871724}, {"id": 40, "seek": 38000, "start": 384.0, "end": 395.0, "text": " Like whenever you tried probably Java for its builds before, even if Java is slow, but overall Kotlin is significantly slower.", "tokens": [1743, 5699, 291, 3031, 1391, 10745, 337, 1080, 15182, 949, 11, 754, 498, 10745, 307, 2964, 11, 457, 4787, 30123, 5045, 307, 10591, 14009, 13], "temperature": 0.0, "avg_logprob": -0.11665356499808176, "compression_ratio": 1.5279187817258884, "no_speech_prob": 0.0008374155731871724}, {"id": 41, "seek": 38000, "start": 395.0, "end": 406.0, "text": " And this is like a drawback, especially if you came from the legacy code base whenever you had like five or 10 years of previously Java code.", "tokens": [400, 341, 307, 411, 257, 2642, 3207, 11, 2318, 498, 291, 1361, 490, 264, 11711, 3089, 3096, 5699, 291, 632, 411, 1732, 420, 1266, 924, 295, 8046, 10745, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11665356499808176, "compression_ratio": 1.5279187817258884, "no_speech_prob": 0.0008374155731871724}, {"id": 42, "seek": 40600, "start": 406.0, "end": 413.0, "text": " Yeah, I know, I know, I tried to say we are not getting deeper into the platforms, but it is what it is.", "tokens": [865, 11, 286, 458, 11, 286, 458, 11, 286, 3031, 281, 584, 321, 366, 406, 1242, 7731, 666, 264, 9473, 11, 457, 309, 307, 437, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.11032777421929862, "compression_ratio": 1.5679611650485437, "no_speech_prob": 0.00018021103460341692}, {"id": 43, "seek": 40600, "start": 413.0, "end": 418.0, "text": " And the build setup overall is quite complicated.", "tokens": [400, 264, 1322, 8657, 4787, 307, 1596, 6179, 13], "temperature": 0.0, "avg_logprob": -0.11032777421929862, "compression_ratio": 1.5679611650485437, "no_speech_prob": 0.00018021103460341692}, {"id": 44, "seek": 40600, "start": 418.0, "end": 425.0, "text": " So for example, Kotlin multiplatform, how to run Kotlin multiplatforms from the common line.", "tokens": [407, 337, 1365, 11, 30123, 5045, 12788, 267, 837, 11, 577, 281, 1190, 30123, 5045, 12788, 267, 837, 82, 490, 264, 2689, 1622, 13], "temperature": 0.0, "avg_logprob": -0.11032777421929862, "compression_ratio": 1.5679611650485437, "no_speech_prob": 0.00018021103460341692}, {"id": 45, "seek": 40600, "start": 425.0, "end": 434.0, "text": " If you can give me an answer, I will just take you out for dinner probably.", "tokens": [759, 291, 393, 976, 385, 364, 1867, 11, 286, 486, 445, 747, 291, 484, 337, 6148, 1391, 13], "temperature": 0.0, "avg_logprob": -0.11032777421929862, "compression_ratio": 1.5679611650485437, "no_speech_prob": 0.00018021103460341692}, {"id": 46, "seek": 43400, "start": 434.0, "end": 443.0, "text": " And currently the overall K2 is developing in the two major Kotlin roadmap milestones.", "tokens": [400, 4362, 264, 4787, 591, 17, 307, 6416, 294, 264, 732, 2563, 30123, 5045, 35738, 42038, 13], "temperature": 0.0, "avg_logprob": -0.10808870119926257, "compression_ratio": 1.5, "no_speech_prob": 0.00030686851823702455}, {"id": 47, "seek": 43400, "start": 443.0, "end": 449.0, "text": " Like whenever you're interested was going on in Kotlin, you can get to the Kotlin roadmap.", "tokens": [1743, 5699, 291, 434, 3102, 390, 516, 322, 294, 30123, 5045, 11, 291, 393, 483, 281, 264, 30123, 5045, 35738, 13], "temperature": 0.0, "avg_logprob": -0.10808870119926257, "compression_ratio": 1.5, "no_speech_prob": 0.00030686851823702455}, {"id": 48, "seek": 43400, "start": 449.0, "end": 452.0, "text": " Thanks a lot for publishing it to JetBrains.", "tokens": [2561, 257, 688, 337, 17832, 309, 281, 28730, 45606, 1292, 13], "temperature": 0.0, "avg_logprob": -0.10808870119926257, "compression_ratio": 1.5, "no_speech_prob": 0.00030686851823702455}, {"id": 49, "seek": 43400, "start": 452.0, "end": 455.0, "text": " It's like magic.", "tokens": [467, 311, 411, 5585, 13], "temperature": 0.0, "avg_logprob": -0.10808870119926257, "compression_ratio": 1.5, "no_speech_prob": 0.00030686851823702455}, {"id": 50, "seek": 43400, "start": 455.0, "end": 460.0, "text": " There are two key things like getting K2 to better.", "tokens": [821, 366, 732, 2141, 721, 411, 1242, 591, 17, 281, 1101, 13], "temperature": 0.0, "avg_logprob": -0.10808870119926257, "compression_ratio": 1.5, "no_speech_prob": 0.00030686851823702455}, {"id": 51, "seek": 46000, "start": 460.0, "end": 465.0, "text": " Kotlin is currently in alpha and it's the whole rewrite of the compiler front end.", "tokens": [30123, 5045, 307, 4362, 294, 8961, 293, 309, 311, 264, 1379, 28132, 295, 264, 31958, 1868, 917, 13], "temperature": 0.0, "avg_logprob": -0.15533509572347004, "compression_ratio": 1.5023923444976077, "no_speech_prob": 0.00015851034549996257}, {"id": 52, "seek": 46000, "start": 465.0, "end": 472.0, "text": " Meaning that if you previously hacked something for the compiler plugins or compiler infrastructure,", "tokens": [19948, 300, 498, 291, 8046, 36218, 746, 337, 264, 31958, 33759, 420, 31958, 6896, 11], "temperature": 0.0, "avg_logprob": -0.15533509572347004, "compression_ratio": 1.5023923444976077, "no_speech_prob": 0.00015851034549996257}, {"id": 53, "seek": 46000, "start": 472.0, "end": 478.0, "text": " or you're an owner of the libraries like KSP or KAPT,", "tokens": [420, 291, 434, 364, 7289, 295, 264, 15148, 411, 591, 27921, 420, 591, 4715, 51, 11], "temperature": 0.0, "avg_logprob": -0.15533509572347004, "compression_ratio": 1.5023923444976077, "no_speech_prob": 0.00015851034549996257}, {"id": 54, "seek": 46000, "start": 478.0, "end": 484.0, "text": " you basically have to redo everything you did in the past three, five years.", "tokens": [291, 1936, 362, 281, 29956, 1203, 291, 630, 294, 264, 1791, 1045, 11, 1732, 924, 13], "temperature": 0.0, "avg_logprob": -0.15533509572347004, "compression_ratio": 1.5023923444976077, "no_speech_prob": 0.00015851034549996257}, {"id": 55, "seek": 48400, "start": 484.0, "end": 494.0, "text": " The second part is the IntelliJ-based plugin and the story there is the compiler and the compiler front end", "tokens": [440, 1150, 644, 307, 264, 18762, 72, 41, 12, 6032, 23407, 293, 264, 1657, 456, 307, 264, 31958, 293, 264, 31958, 1868, 917], "temperature": 0.0, "avg_logprob": -0.21319011341441763, "compression_ratio": 1.4903225806451612, "no_speech_prob": 0.0002451698237564415}, {"id": 56, "seek": 48400, "start": 494.0, "end": 504.0, "text": " especially is very coupled with whatever Android Studio or IntelliJ IDEA or your IDEA of choice is doing with the language.", "tokens": [2318, 307, 588, 29482, 365, 2035, 8853, 13500, 420, 18762, 72, 41, 40930, 32, 420, 428, 40930, 32, 295, 3922, 307, 884, 365, 264, 2856, 13], "temperature": 0.0, "avg_logprob": -0.21319011341441763, "compression_ratio": 1.4903225806451612, "no_speech_prob": 0.0002451698237564415}, {"id": 57, "seek": 50400, "start": 504.0, "end": 518.0, "text": " Whether it's a language server or the index you have locally, your compiler performance really impact the experience you have in the IDE.", "tokens": [8503, 309, 311, 257, 2856, 7154, 420, 264, 8186, 291, 362, 16143, 11, 428, 31958, 3389, 534, 2712, 264, 1752, 291, 362, 294, 264, 40930, 13], "temperature": 0.0, "avg_logprob": -0.12711754338494663, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001083611132344231}, {"id": 58, "seek": 50400, "start": 518.0, "end": 524.0, "text": " Let's get to the other things.", "tokens": [961, 311, 483, 281, 264, 661, 721, 13], "temperature": 0.0, "avg_logprob": -0.12711754338494663, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001083611132344231}, {"id": 59, "seek": 50400, "start": 524.0, "end": 533.0, "text": " Like the unfortunate is the deprioritization of the API for compiler plugins.", "tokens": [1743, 264, 17843, 307, 264, 1367, 470, 50017, 2144, 295, 264, 9362, 337, 31958, 33759, 13], "temperature": 0.0, "avg_logprob": -0.12711754338494663, "compression_ratio": 1.4819277108433735, "no_speech_prob": 0.0001083611132344231}, {"id": 60, "seek": 53300, "start": 533.0, "end": 538.0, "text": " It means that for all of the engineers outside of JetBrains,", "tokens": [467, 1355, 300, 337, 439, 295, 264, 11955, 2380, 295, 28730, 45606, 1292, 11], "temperature": 0.0, "avg_logprob": -0.08372946391029963, "compression_ratio": 1.4651162790697674, "no_speech_prob": 0.00028221041429787874}, {"id": 61, "seek": 53300, "start": 538.0, "end": 546.0, "text": " it will be still very hard to create tools for a compiler for IDE and evolve them over time.", "tokens": [309, 486, 312, 920, 588, 1152, 281, 1884, 3873, 337, 257, 31958, 337, 40930, 293, 16693, 552, 670, 565, 13], "temperature": 0.0, "avg_logprob": -0.08372946391029963, "compression_ratio": 1.4651162790697674, "no_speech_prob": 0.00028221041429787874}, {"id": 62, "seek": 53300, "start": 546.0, "end": 553.0, "text": " Currently, you don't have a stable and you don't have basically a documented API for the compiler.", "tokens": [19964, 11, 291, 500, 380, 362, 257, 8351, 293, 291, 500, 380, 362, 1936, 257, 23007, 9362, 337, 264, 31958, 13], "temperature": 0.0, "avg_logprob": -0.08372946391029963, "compression_ratio": 1.4651162790697674, "no_speech_prob": 0.00028221041429787874}, {"id": 63, "seek": 55300, "start": 553.0, "end": 564.0, "text": " For example, if you're creating a library that changes something, every major or even minor release of Kotlin,", "tokens": [1171, 1365, 11, 498, 291, 434, 4084, 257, 6405, 300, 2962, 746, 11, 633, 2563, 420, 754, 6696, 4374, 295, 30123, 5045, 11], "temperature": 0.0, "avg_logprob": -0.10862325100188559, "compression_ratio": 1.3866666666666667, "no_speech_prob": 0.0005293199210427701}, {"id": 64, "seek": 55300, "start": 564.0, "end": 582.0, "text": " you need to upgrade it and evolve and maintain the compatibility of the version for the compiler.", "tokens": [291, 643, 281, 11484, 309, 293, 16693, 293, 6909, 264, 34237, 295, 264, 3037, 337, 264, 31958, 13], "temperature": 0.0, "avg_logprob": -0.10862325100188559, "compression_ratio": 1.3866666666666667, "no_speech_prob": 0.0005293199210427701}, {"id": 65, "seek": 58200, "start": 582.0, "end": 595.0, "text": " Currently, K2 is in alpha, but as far as we understand, the Kotlin 1.9 is about to get us K2 in beta.", "tokens": [19964, 11, 591, 17, 307, 294, 8961, 11, 457, 382, 1400, 382, 321, 1223, 11, 264, 30123, 5045, 502, 13, 24, 307, 466, 281, 483, 505, 591, 17, 294, 9861, 13], "temperature": 0.0, "avg_logprob": -0.1845936630711411, "compression_ratio": 1.4082840236686391, "no_speech_prob": 0.0007003083592280746}, {"id": 66, "seek": 58200, "start": 595.0, "end": 609.0, "text": " For the current numbers, we have the improvement at around a rate of 2x for all the build that JetBrains provided us in their benchmarks", "tokens": [1171, 264, 2190, 3547, 11, 321, 362, 264, 10444, 412, 926, 257, 3314, 295, 568, 87, 337, 439, 264, 1322, 300, 28730, 45606, 1292, 5649, 505, 294, 641, 43751], "temperature": 0.0, "avg_logprob": -0.1845936630711411, "compression_ratio": 1.4082840236686391, "no_speech_prob": 0.0007003083592280746}, {"id": 67, "seek": 60900, "start": 609.0, "end": 613.0, "text": " and publicly told us about these things.", "tokens": [293, 14843, 1907, 505, 466, 613, 721, 13], "temperature": 0.0, "avg_logprob": -0.17060237053113106, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0011165787000209093}, {"id": 68, "seek": 60900, "start": 613.0, "end": 617.0, "text": " Kotlin itself has been building significantly faster.", "tokens": [30123, 5045, 2564, 575, 668, 2390, 10591, 4663, 13], "temperature": 0.0, "avg_logprob": -0.17060237053113106, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0011165787000209093}, {"id": 69, "seek": 60900, "start": 617.0, "end": 627.0, "text": " But if you're impatient, there is the way to bring at least some of the improvements for the build speed earlier in the pipe.", "tokens": [583, 498, 291, 434, 36895, 11, 456, 307, 264, 636, 281, 1565, 412, 1935, 512, 295, 264, 13797, 337, 264, 1322, 3073, 3071, 294, 264, 11240, 13], "temperature": 0.0, "avg_logprob": -0.17060237053113106, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0011165787000209093}, {"id": 70, "seek": 60900, "start": 627.0, "end": 636.0, "text": " You can get to Kotlin 1.7 something and it has probably 10 to 15% improvement in the build speed.", "tokens": [509, 393, 483, 281, 30123, 5045, 502, 13, 22, 746, 293, 309, 575, 1391, 1266, 281, 2119, 4, 10444, 294, 264, 1322, 3073, 13], "temperature": 0.0, "avg_logprob": -0.17060237053113106, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.0011165787000209093}, {"id": 71, "seek": 63600, "start": 636.0, "end": 646.0, "text": " You can even experience this in the large-scale code bases.", "tokens": [509, 393, 754, 1752, 341, 294, 264, 2416, 12, 20033, 3089, 17949, 13], "temperature": 0.0, "avg_logprob": -0.09954655871671789, "compression_ratio": 1.39247311827957, "no_speech_prob": 0.0004812658589798957}, {"id": 72, "seek": 63600, "start": 646.0, "end": 656.0, "text": " There are a few plans about the K2 going to beta and mainly what JetBrains and Kotlin wants to achieve.", "tokens": [821, 366, 257, 1326, 5482, 466, 264, 591, 17, 516, 281, 9861, 293, 8704, 437, 28730, 45606, 1292, 293, 30123, 5045, 2738, 281, 4584, 13], "temperature": 0.0, "avg_logprob": -0.09954655871671789, "compression_ratio": 1.39247311827957, "no_speech_prob": 0.0004812658589798957}, {"id": 73, "seek": 63600, "start": 656.0, "end": 664.0, "text": " It's the full functional compiler and it should work for the whole ecosystem, not only the JVM.", "tokens": [467, 311, 264, 1577, 11745, 31958, 293, 309, 820, 589, 337, 264, 1379, 11311, 11, 406, 787, 264, 508, 53, 44, 13], "temperature": 0.0, "avg_logprob": -0.09954655871671789, "compression_ratio": 1.39247311827957, "no_speech_prob": 0.0004812658589798957}, {"id": 74, "seek": 66400, "start": 664.0, "end": 669.0, "text": " It's probably usable for JVM even right now, I tried it.", "tokens": [467, 311, 1391, 29975, 337, 508, 53, 44, 754, 558, 586, 11, 286, 3031, 309, 13], "temperature": 0.0, "avg_logprob": -0.11164062363760811, "compression_ratio": 1.3978494623655915, "no_speech_prob": 0.0002524614392314106}, {"id": 75, "seek": 66400, "start": 669.0, "end": 675.0, "text": " It's not a great experience, but you can experiment at least with it.", "tokens": [467, 311, 406, 257, 869, 1752, 11, 457, 291, 393, 5120, 412, 1935, 365, 309, 13], "temperature": 0.0, "avg_logprob": -0.11164062363760811, "compression_ratio": 1.3978494623655915, "no_speech_prob": 0.0002524614392314106}, {"id": 76, "seek": 66400, "start": 675.0, "end": 688.0, "text": " There is a need for improvement in various plugins like Kotlin annotation processor, serializable, KSP and others.", "tokens": [821, 307, 257, 643, 337, 10444, 294, 3683, 33759, 411, 30123, 5045, 48654, 15321, 11, 17436, 22395, 11, 591, 27921, 293, 2357, 13], "temperature": 0.0, "avg_logprob": -0.11164062363760811, "compression_ratio": 1.3978494623655915, "no_speech_prob": 0.0002524614392314106}, {"id": 77, "seek": 66400, "start": 688.0, "end": 693.0, "text": " It will take time.", "tokens": [467, 486, 747, 565, 13], "temperature": 0.0, "avg_logprob": -0.11164062363760811, "compression_ratio": 1.3978494623655915, "no_speech_prob": 0.0002524614392314106}, {"id": 78, "seek": 69300, "start": 693.0, "end": 701.0, "text": " As of yesterday, there is a well-done support for Kotlin X serialization.", "tokens": [1018, 295, 5186, 11, 456, 307, 257, 731, 12, 45939, 1406, 337, 30123, 5045, 1783, 17436, 2144, 13], "temperature": 0.0, "avg_logprob": -0.14380162640621788, "compression_ratio": 1.3802083333333333, "no_speech_prob": 0.0006335438811220229}, {"id": 79, "seek": 69300, "start": 701.0, "end": 705.0, "text": " All open, no arc plugins and Lombok.", "tokens": [1057, 1269, 11, 572, 10346, 33759, 293, 441, 3548, 453, 13], "temperature": 0.0, "avg_logprob": -0.14380162640621788, "compression_ratio": 1.3802083333333333, "no_speech_prob": 0.0006335438811220229}, {"id": 80, "seek": 69300, "start": 705.0, "end": 710.0, "text": " It's already in the source code of Kotlin compiler.", "tokens": [467, 311, 1217, 294, 264, 4009, 3089, 295, 30123, 5045, 31958, 13], "temperature": 0.0, "avg_logprob": -0.14380162640621788, "compression_ratio": 1.3802083333333333, "no_speech_prob": 0.0006335438811220229}, {"id": 81, "seek": 69300, "start": 710.0, "end": 718.0, "text": " I'm not sure which version they're targeting, so I was checking 1.9 daily build and it was fine there.", "tokens": [286, 478, 406, 988, 597, 3037, 436, 434, 17918, 11, 370, 286, 390, 8568, 502, 13, 24, 5212, 1322, 293, 309, 390, 2489, 456, 13], "temperature": 0.0, "avg_logprob": -0.14380162640621788, "compression_ratio": 1.3802083333333333, "no_speech_prob": 0.0006335438811220229}, {"id": 82, "seek": 71800, "start": 718.0, "end": 724.0, "text": " Probably there is something in 1.721, but I'm not quite sure.", "tokens": [9210, 456, 307, 746, 294, 502, 13, 22, 4436, 11, 457, 286, 478, 406, 1596, 988, 13], "temperature": 0.0, "avg_logprob": -0.14515071926694928, "compression_ratio": 1.4823529411764707, "no_speech_prob": 0.00017942347039934248}, {"id": 83, "seek": 71800, "start": 724.0, "end": 732.0, "text": " Unfortunately, KAPT is still not working, so you cannot do any of the annotation processing yet.", "tokens": [8590, 11, 591, 4715, 51, 307, 920, 406, 1364, 11, 370, 291, 2644, 360, 604, 295, 264, 48654, 9007, 1939, 13], "temperature": 0.0, "avg_logprob": -0.14515071926694928, "compression_ratio": 1.4823529411764707, "no_speech_prob": 0.00017942347039934248}, {"id": 84, "seek": 71800, "start": 732.0, "end": 742.0, "text": " KSP, the symbol processing, the future of annotation processing for Kotlin also doesn't work.", "tokens": [591, 27921, 11, 264, 5986, 9007, 11, 264, 2027, 295, 48654, 9007, 337, 30123, 5045, 611, 1177, 380, 589, 13], "temperature": 0.0, "avg_logprob": -0.14515071926694928, "compression_ratio": 1.4823529411764707, "no_speech_prob": 0.00017942347039934248}, {"id": 85, "seek": 74200, "start": 742.0, "end": 748.0, "text": " Let's get into some details of the annotation processor support.", "tokens": [961, 311, 483, 666, 512, 4365, 295, 264, 48654, 15321, 1406, 13], "temperature": 0.0, "avg_logprob": -0.09749391804570737, "compression_ratio": 1.5087719298245614, "no_speech_prob": 0.00028998847119510174}, {"id": 86, "seek": 74200, "start": 748.0, "end": 759.0, "text": " Luckily in Utrecht, there are tickets for almost everything that works or that doesn't work and what JetBrains is planning to work on.", "tokens": [19726, 294, 624, 3599, 4701, 11, 456, 366, 12628, 337, 1920, 1203, 300, 1985, 420, 300, 1177, 380, 589, 293, 437, 28730, 45606, 1292, 307, 5038, 281, 589, 322, 13], "temperature": 0.0, "avg_logprob": -0.09749391804570737, "compression_ratio": 1.5087719298245614, "no_speech_prob": 0.00028998847119510174}, {"id": 87, "seek": 74200, "start": 759.0, "end": 765.0, "text": " There is a ticket for front-end IR support for KAPT.", "tokens": [821, 307, 257, 10550, 337, 1868, 12, 521, 16486, 1406, 337, 591, 4715, 51, 13], "temperature": 0.0, "avg_logprob": -0.09749391804570737, "compression_ratio": 1.5087719298245614, "no_speech_prob": 0.00028998847119510174}, {"id": 88, "seek": 74200, "start": 765.0, "end": 771.0, "text": " It's still in progress. It should be done in 1.9, or at least it's the current version now.", "tokens": [467, 311, 920, 294, 4205, 13, 467, 820, 312, 1096, 294, 502, 13, 24, 11, 420, 412, 1935, 309, 311, 264, 2190, 3037, 586, 13], "temperature": 0.0, "avg_logprob": -0.09749391804570737, "compression_ratio": 1.5087719298245614, "no_speech_prob": 0.00028998847119510174}, {"id": 89, "seek": 77100, "start": 771.0, "end": 779.0, "text": " I tried to understand what doesn't work right now, and it got me to quite interesting things.", "tokens": [286, 3031, 281, 1223, 437, 1177, 380, 589, 558, 586, 11, 293, 309, 658, 385, 281, 1596, 1880, 721, 13], "temperature": 0.0, "avg_logprob": -0.11805273237682525, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.0004590635362546891}, {"id": 90, "seek": 77100, "start": 779.0, "end": 786.0, "text": " That KAPT currently doesn't support language version 2.0.", "tokens": [663, 591, 4715, 51, 4362, 1177, 380, 1406, 2856, 3037, 568, 13, 15, 13], "temperature": 0.0, "avg_logprob": -0.11805273237682525, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.0004590635362546891}, {"id": 91, "seek": 77100, "start": 786.0, "end": 792.0, "text": " Please use language version 1.9 or below. It's just a source code that I saw yesterday.", "tokens": [2555, 764, 2856, 3037, 502, 13, 24, 420, 2507, 13, 467, 311, 445, 257, 4009, 3089, 300, 286, 1866, 5186, 13], "temperature": 0.0, "avg_logprob": -0.11805273237682525, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.0004590635362546891}, {"id": 92, "seek": 79200, "start": 792.0, "end": 802.0, "text": " I tried to get deeper so that there is a Kotlin version introduced that has symbols both 2.0.", "tokens": [286, 3031, 281, 483, 7731, 370, 300, 456, 307, 257, 30123, 5045, 3037, 7268, 300, 575, 16944, 1293, 568, 13, 15, 13], "temperature": 0.0, "avg_logprob": -0.1349875276738947, "compression_ratio": 1.5257142857142858, "no_speech_prob": 0.0005379944923333824}, {"id": 93, "seek": 79200, "start": 802.0, "end": 809.0, "text": " I probably don't want to make any judgment here what the version would be,", "tokens": [286, 1391, 500, 380, 528, 281, 652, 604, 12216, 510, 437, 264, 3037, 576, 312, 11], "temperature": 0.0, "avg_logprob": -0.1349875276738947, "compression_ratio": 1.5257142857142858, "no_speech_prob": 0.0005379944923333824}, {"id": 94, "seek": 79200, "start": 809.0, "end": 817.0, "text": " but there are some things that suggest that we are going to have some major changes in the future.", "tokens": [457, 456, 366, 512, 721, 300, 3402, 300, 321, 366, 516, 281, 362, 512, 2563, 2962, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.1349875276738947, "compression_ratio": 1.5257142857142858, "no_speech_prob": 0.0005379944923333824}, {"id": 95, "seek": 81700, "start": 817.0, "end": 826.0, "text": " Kotlin symbol processing is another thing that doesn't work currently, but it's expected to get around 1.9.", "tokens": [30123, 5045, 5986, 9007, 307, 1071, 551, 300, 1177, 380, 589, 4362, 11, 457, 309, 311, 5176, 281, 483, 926, 502, 13, 24, 13], "temperature": 0.0, "avg_logprob": -0.10598068417243238, "compression_ratio": 1.3741935483870968, "no_speech_prob": 0.0005473728524520993}, {"id": 96, "seek": 81700, "start": 826.0, "end": 838.0, "text": " There is some work going on in the domain in the Google repository for KSP, but still nothing there done.", "tokens": [821, 307, 512, 589, 516, 322, 294, 264, 9274, 294, 264, 3329, 25841, 337, 591, 27921, 11, 457, 920, 1825, 456, 1096, 13], "temperature": 0.0, "avg_logprob": -0.10598068417243238, "compression_ratio": 1.3741935483870968, "no_speech_prob": 0.0005473728524520993}, {"id": 97, "seek": 83800, "start": 838.0, "end": 850.0, "text": " The testing info doesn't work at all currently, so one of the major libraries for the compile testing doesn't support K2.", "tokens": [440, 4997, 13614, 1177, 380, 589, 412, 439, 4362, 11, 370, 472, 295, 264, 2563, 15148, 337, 264, 31413, 4997, 1177, 380, 1406, 591, 17, 13], "temperature": 0.0, "avg_logprob": -0.15852012096996038, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00047196162631735206}, {"id": 98, "seek": 83800, "start": 850.0, "end": 857.0, "text": " I don't know when the support will come there. There is a poor request getting this support, at least partially,", "tokens": [286, 500, 380, 458, 562, 264, 1406, 486, 808, 456, 13, 821, 307, 257, 4716, 5308, 1242, 341, 1406, 11, 412, 1935, 18886, 11], "temperature": 0.0, "avg_logprob": -0.15852012096996038, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00047196162631735206}, {"id": 99, "seek": 83800, "start": 857.0, "end": 863.0, "text": " but who knows, probably will take another six to eight months.", "tokens": [457, 567, 3255, 11, 1391, 486, 747, 1071, 2309, 281, 3180, 2493, 13], "temperature": 0.0, "avg_logprob": -0.15852012096996038, "compression_ratio": 1.538860103626943, "no_speech_prob": 0.00047196162631735206}, {"id": 100, "seek": 86300, "start": 863.0, "end": 871.0, "text": " Finally, the IDE support for K2.", "tokens": [6288, 11, 264, 40930, 1406, 337, 591, 17, 13], "temperature": 0.0, "avg_logprob": -0.09489120886876033, "compression_ratio": 1.3402777777777777, "no_speech_prob": 0.00045163818867877126}, {"id": 101, "seek": 86300, "start": 871.0, "end": 879.0, "text": " As far as I understand, the plan is to create the K2-based IDE plugin", "tokens": [1018, 1400, 382, 286, 1223, 11, 264, 1393, 307, 281, 1884, 264, 591, 17, 12, 6032, 40930, 23407], "temperature": 0.0, "avg_logprob": -0.09489120886876033, "compression_ratio": 1.3402777777777777, "no_speech_prob": 0.00045163818867877126}, {"id": 102, "seek": 86300, "start": 879.0, "end": 888.0, "text": " that will probably start from a quite lightweight one that will support only a few things.", "tokens": [300, 486, 1391, 722, 490, 257, 1596, 22052, 472, 300, 486, 1406, 787, 257, 1326, 721, 13], "temperature": 0.0, "avg_logprob": -0.09489120886876033, "compression_ratio": 1.3402777777777777, "no_speech_prob": 0.00045163818867877126}, {"id": 103, "seek": 88800, "start": 888.0, "end": 901.0, "text": " It should have the performance that is targeted to be. Everything works fast and correct and likely stable.", "tokens": [467, 820, 362, 264, 3389, 300, 307, 15045, 281, 312, 13, 5471, 1985, 2370, 293, 3006, 293, 3700, 8351, 13], "temperature": 0.0, "avg_logprob": -0.21318550543351608, "compression_ratio": 1.3862068965517242, "no_speech_prob": 0.00042876534280367196}, {"id": 104, "seek": 88800, "start": 901.0, "end": 911.0, "text": " The IDE plugin will have a lower number of features, will be lightweight and will be released", "tokens": [440, 40930, 23407, 486, 362, 257, 3126, 1230, 295, 4122, 11, 486, 312, 22052, 293, 486, 312, 4736], "temperature": 0.0, "avg_logprob": -0.21318550543351608, "compression_ratio": 1.3862068965517242, "no_speech_prob": 0.00042876534280367196}, {"id": 105, "seek": 91100, "start": 911.0, "end": 924.0, "text": " likely after the better or stable of the compiler, so it's not earlier than Kotlin 1.9, probably even later.", "tokens": [3700, 934, 264, 1101, 420, 8351, 295, 264, 31958, 11, 370, 309, 311, 406, 3071, 813, 30123, 5045, 502, 13, 24, 11, 1391, 754, 1780, 13], "temperature": 0.0, "avg_logprob": -0.13213808970017868, "compression_ratio": 1.2954545454545454, "no_speech_prob": 0.00037851277738809586}, {"id": 106, "seek": 91100, "start": 924.0, "end": 931.0, "text": " As stated currently, it should have all the code highlighting.", "tokens": [1018, 11323, 4362, 11, 309, 820, 362, 439, 264, 3089, 26551, 13], "temperature": 0.0, "avg_logprob": -0.13213808970017868, "compression_ratio": 1.2954545454545454, "no_speech_prob": 0.00037851277738809586}, {"id": 107, "seek": 93100, "start": 931.0, "end": 941.0, "text": " It should have basic code completion, like nothing fancy, probably just the stuff you use on a regular basis,", "tokens": [467, 820, 362, 3875, 3089, 19372, 11, 411, 1825, 10247, 11, 1391, 445, 264, 1507, 291, 764, 322, 257, 3890, 5143, 11], "temperature": 0.0, "avg_logprob": -0.13438302820379083, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.00048132389201782644}, {"id": 108, "seek": 93100, "start": 941.0, "end": 944.0, "text": " but not for major refactoring or anything else.", "tokens": [457, 406, 337, 2563, 1895, 578, 3662, 420, 1340, 1646, 13], "temperature": 0.0, "avg_logprob": -0.13438302820379083, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.00048132389201782644}, {"id": 109, "seek": 93100, "start": 944.0, "end": 953.0, "text": " In debugger, there should be breakpoints and some simple stuff, really simple stuff, as it's declared,", "tokens": [682, 24083, 1321, 11, 456, 820, 312, 1821, 20552, 293, 512, 2199, 1507, 11, 534, 2199, 1507, 11, 382, 309, 311, 15489, 11], "temperature": 0.0, "avg_logprob": -0.13438302820379083, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.00048132389201782644}, {"id": 110, "seek": 93100, "start": 953.0, "end": 958.0, "text": " and there should be a limited number of diagnostics.", "tokens": [293, 456, 820, 312, 257, 5567, 1230, 295, 43215, 1167, 13], "temperature": 0.0, "avg_logprob": -0.13438302820379083, "compression_ratio": 1.596938775510204, "no_speech_prob": 0.00048132389201782644}, {"id": 111, "seek": 95800, "start": 958.0, "end": 968.0, "text": " The last but not the least thing, as you might notice, another big part is the Kotlin multiplatform support.", "tokens": [440, 1036, 457, 406, 264, 1935, 551, 11, 382, 291, 1062, 3449, 11, 1071, 955, 644, 307, 264, 30123, 5045, 12788, 267, 837, 1406, 13], "temperature": 0.0, "avg_logprob": -0.15407145464861835, "compression_ratio": 1.5441176470588236, "no_speech_prob": 0.0006025091279298067}, {"id": 112, "seek": 95800, "start": 968.0, "end": 983.0, "text": " This new lightweight plugin is aiming to have the full-featured Kotlin multiplatform support as well.", "tokens": [639, 777, 22052, 23407, 307, 20253, 281, 362, 264, 1577, 12, 2106, 1503, 67, 30123, 5045, 12788, 267, 837, 1406, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15407145464861835, "compression_ratio": 1.5441176470588236, "no_speech_prob": 0.0006025091279298067}, {"id": 113, "seek": 98300, "start": 983.0, "end": 997.0, "text": " That's my third. After some key to magic, let's try to check what went through this year of Kotlin multiplatform", "tokens": [663, 311, 452, 2636, 13, 2381, 512, 2141, 281, 5585, 11, 718, 311, 853, 281, 1520, 437, 1437, 807, 341, 1064, 295, 30123, 5045, 12788, 267, 837], "temperature": 0.0, "avg_logprob": -0.14175162399024294, "compression_ratio": 1.3194444444444444, "no_speech_prob": 0.001274409587495029}, {"id": 114, "seek": 98300, "start": 997.0, "end": 1001.0, "text": " and what will come in the future.", "tokens": [293, 437, 486, 808, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.14175162399024294, "compression_ratio": 1.3194444444444444, "no_speech_prob": 0.001274409587495029}, {"id": 115, "seek": 98300, "start": 1001.0, "end": 1007.0, "text": " Let's start our journey from Kotlin 1.6.20.", "tokens": [961, 311, 722, 527, 4671, 490, 30123, 5045, 502, 13, 21, 13, 2009, 13], "temperature": 0.0, "avg_logprob": -0.14175162399024294, "compression_ratio": 1.3194444444444444, "no_speech_prob": 0.001274409587495029}, {"id": 116, "seek": 100700, "start": 1007.0, "end": 1015.0, "text": " The first magic things, beautiful things that we saw, was the Ierco project structure becoming default.", "tokens": [440, 700, 5585, 721, 11, 2238, 721, 300, 321, 1866, 11, 390, 264, 286, 260, 1291, 1716, 3877, 5617, 7576, 13], "temperature": 0.0, "avg_logprob": -0.26558953065138596, "compression_ratio": 1.4620253164556962, "no_speech_prob": 0.0012532125692814589}, {"id": 117, "seek": 100700, "start": 1015.0, "end": 1026.0, "text": " This thing was such a bless, because you finally don't need anymore to do some weird magic stuff like symbolic links and things", "tokens": [639, 551, 390, 1270, 257, 5227, 11, 570, 291, 2721, 500, 380, 643, 3602, 281, 360, 512, 3657, 5585, 1507, 411, 25755, 6123, 293, 721], "temperature": 0.0, "avg_logprob": -0.26558953065138596, "compression_ratio": 1.4620253164556962, "no_speech_prob": 0.0012532125692814589}, {"id": 118, "seek": 102600, "start": 1026.0, "end": 1039.0, "text": " to cover multiple architecture like iOS version and Intel version and X64 version.", "tokens": [281, 2060, 3866, 9482, 411, 17430, 3037, 293, 19762, 3037, 293, 1783, 19395, 3037, 13], "temperature": 0.0, "avg_logprob": -0.17775493621826172, "compression_ratio": 1.4076433121019107, "no_speech_prob": 0.0007181353867053986}, {"id": 119, "seek": 102600, "start": 1039.0, "end": 1047.0, "text": " You get automatically shared stuff and you can just use an intermediate target for the thing,", "tokens": [509, 483, 6772, 5507, 1507, 293, 291, 393, 445, 764, 364, 19376, 3779, 337, 264, 551, 11], "temperature": 0.0, "avg_logprob": -0.17775493621826172, "compression_ratio": 1.4076433121019107, "no_speech_prob": 0.0007181353867053986}, {"id": 120, "seek": 102600, "start": 1047.0, "end": 1051.0, "text": " which was really a good thing to start with.", "tokens": [597, 390, 534, 257, 665, 551, 281, 722, 365, 13], "temperature": 0.0, "avg_logprob": -0.17775493621826172, "compression_ratio": 1.4076433121019107, "no_speech_prob": 0.0007181353867053986}, {"id": 121, "seek": 105100, "start": 1051.0, "end": 1059.0, "text": " But it wasn't the only thing in 6.20, because we got some improvements on Kotlin native", "tokens": [583, 309, 2067, 380, 264, 787, 551, 294, 1386, 13, 2009, 11, 570, 321, 658, 512, 13797, 322, 30123, 5045, 8470], "temperature": 0.0, "avg_logprob": -0.11629507416173031, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.0011226594215258956}, {"id": 122, "seek": 105100, "start": 1059.0, "end": 1064.0, "text": " and we got all the improvements that, as an engineer, you can dream of.", "tokens": [293, 321, 658, 439, 264, 13797, 300, 11, 382, 364, 11403, 11, 291, 393, 3055, 295, 13], "temperature": 0.0, "avg_logprob": -0.11629507416173031, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.0011226594215258956}, {"id": 123, "seek": 105100, "start": 1064.0, "end": 1069.0, "text": " So runtime, compile time and code size.", "tokens": [407, 34474, 11, 31413, 565, 293, 3089, 2744, 13], "temperature": 0.0, "avg_logprob": -0.11629507416173031, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.0011226594215258956}, {"id": 124, "seek": 105100, "start": 1069.0, "end": 1080.0, "text": " It was an interesting update that brought many improvements on the developer experience, which was really nice.", "tokens": [467, 390, 364, 1880, 5623, 300, 3038, 867, 13797, 322, 264, 10754, 1752, 11, 597, 390, 534, 1481, 13], "temperature": 0.0, "avg_logprob": -0.11629507416173031, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.0011226594215258956}, {"id": 125, "seek": 108000, "start": 1080.0, "end": 1090.0, "text": " But the very big thing came later in 1.7.20, which was finally the new memory manager for Kotlin.", "tokens": [583, 264, 588, 955, 551, 1361, 1780, 294, 502, 13, 22, 13, 2009, 11, 597, 390, 2721, 264, 777, 4675, 6598, 337, 30123, 5045, 13], "temperature": 0.0, "avg_logprob": -0.16345610338098862, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.000488711753860116}, {"id": 126, "seek": 108000, "start": 1090.0, "end": 1099.0, "text": " With that version, it's now enabled by default and basically it's again a huge win in terms of developer experience", "tokens": [2022, 300, 3037, 11, 309, 311, 586, 15172, 538, 7576, 293, 1936, 309, 311, 797, 257, 2603, 1942, 294, 2115, 295, 10754, 1752], "temperature": 0.0, "avg_logprob": -0.16345610338098862, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.000488711753860116}, {"id": 127, "seek": 108000, "start": 1099.0, "end": 1105.0, "text": " because a lot of change changed and we got better stuff.", "tokens": [570, 257, 688, 295, 1319, 3105, 293, 321, 658, 1101, 1507, 13], "temperature": 0.0, "avg_logprob": -0.16345610338098862, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.000488711753860116}, {"id": 128, "seek": 110500, "start": 1105.0, "end": 1117.0, "text": " That's because the memory manager changed from reference counting garbage collection to tracing garbage collection", "tokens": [663, 311, 570, 264, 4675, 6598, 3105, 490, 6408, 13251, 14150, 5765, 281, 25262, 14150, 5765], "temperature": 0.0, "avg_logprob": -0.11797070503234863, "compression_ratio": 1.5930232558139534, "no_speech_prob": 0.0007687611505389214}, {"id": 129, "seek": 110500, "start": 1117.0, "end": 1123.0, "text": " because in the past it was just made it quick and dirty.", "tokens": [570, 294, 264, 1791, 309, 390, 445, 1027, 309, 1702, 293, 9360, 13], "temperature": 0.0, "avg_logprob": -0.11797070503234863, "compression_ratio": 1.5930232558139534, "no_speech_prob": 0.0007687611505389214}, {"id": 130, "seek": 110500, "start": 1123.0, "end": 1130.0, "text": " Let's put it in a way to just get out, but now that things are getting bigger and people are using it,", "tokens": [961, 311, 829, 309, 294, 257, 636, 281, 445, 483, 484, 11, 457, 586, 300, 721, 366, 1242, 3801, 293, 561, 366, 1228, 309, 11], "temperature": 0.0, "avg_logprob": -0.11797070503234863, "compression_ratio": 1.5930232558139534, "no_speech_prob": 0.0007687611505389214}, {"id": 131, "seek": 113000, "start": 1130.0, "end": 1135.0, "text": " they realize that some stuff was not the best choice afterwards.", "tokens": [436, 4325, 300, 512, 1507, 390, 406, 264, 1151, 3922, 10543, 13], "temperature": 0.0, "avg_logprob": -0.1378610456312025, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0006938056903891265}, {"id": 132, "seek": 113000, "start": 1135.0, "end": 1145.0, "text": " So what this means in reality is that there are no more restrictions on sharing objects between threads.", "tokens": [407, 437, 341, 1355, 294, 4103, 307, 300, 456, 366, 572, 544, 14191, 322, 5414, 6565, 1296, 19314, 13], "temperature": 0.0, "avg_logprob": -0.1378610456312025, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0006938056903891265}, {"id": 133, "seek": 113000, "start": 1145.0, "end": 1153.0, "text": " There are more leak-free primitives, which means no leaks on the internals,", "tokens": [821, 366, 544, 17143, 12, 10792, 2886, 38970, 11, 597, 1355, 572, 28885, 322, 264, 2154, 1124, 11], "temperature": 0.0, "avg_logprob": -0.1378610456312025, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0006938056903891265}, {"id": 134, "seek": 113000, "start": 1153.0, "end": 1159.0, "text": " but maybe leaks on stuff that you wrote because we can introduce bad things,", "tokens": [457, 1310, 28885, 322, 1507, 300, 291, 4114, 570, 321, 393, 5366, 1578, 721, 11], "temperature": 0.0, "avg_logprob": -0.1378610456312025, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0006938056903891265}, {"id": 135, "seek": 115900, "start": 1159.0, "end": 1165.0, "text": " but at least the tooling is not sneaking leaks.", "tokens": [457, 412, 1935, 264, 46593, 307, 406, 48525, 28885, 13], "temperature": 0.0, "avg_logprob": -0.10163904880655222, "compression_ratio": 1.4050632911392404, "no_speech_prob": 0.0008932144846767187}, {"id": 136, "seek": 115900, "start": 1165.0, "end": 1169.0, "text": " What does it mean at the end of the day for developers?", "tokens": [708, 775, 309, 914, 412, 264, 917, 295, 264, 786, 337, 8849, 30], "temperature": 0.0, "avg_logprob": -0.10163904880655222, "compression_ratio": 1.4050632911392404, "no_speech_prob": 0.0008932144846767187}, {"id": 137, "seek": 115900, "start": 1169.0, "end": 1173.0, "text": " It means that no more freezing.", "tokens": [467, 1355, 300, 572, 544, 20200, 13], "temperature": 0.0, "avg_logprob": -0.10163904880655222, "compression_ratio": 1.4050632911392404, "no_speech_prob": 0.0008932144846767187}, {"id": 138, "seek": 115900, "start": 1173.0, "end": 1178.0, "text": " Finally, we get all the beautiful sun because we don't need to freeze objects anymore.", "tokens": [6288, 11, 321, 483, 439, 264, 2238, 3295, 570, 321, 500, 380, 643, 281, 15959, 6565, 3602, 13], "temperature": 0.0, "avg_logprob": -0.10163904880655222, "compression_ratio": 1.4050632911392404, "no_speech_prob": 0.0008932144846767187}, {"id": 139, "seek": 117800, "start": 1178.0, "end": 1189.0, "text": " We are really free to use everything and you just don't have to think anymore on free stuff", "tokens": [492, 366, 534, 1737, 281, 764, 1203, 293, 291, 445, 500, 380, 362, 281, 519, 3602, 322, 1737, 1507], "temperature": 0.0, "avg_logprob": -0.1589940050815014, "compression_ratio": 1.4384615384615385, "no_speech_prob": 0.00035941082751378417}, {"id": 140, "seek": 117800, "start": 1189.0, "end": 1199.0, "text": " and to understand that it's not crashing, that there's no mobility and stuff, so all magic now.", "tokens": [293, 281, 1223, 300, 309, 311, 406, 26900, 11, 300, 456, 311, 572, 16199, 293, 1507, 11, 370, 439, 5585, 586, 13], "temperature": 0.0, "avg_logprob": -0.1589940050815014, "compression_ratio": 1.4384615384615385, "no_speech_prob": 0.00035941082751378417}, {"id": 141, "seek": 119900, "start": 1199.0, "end": 1209.0, "text": " This thing enables a bigger thing, which is the finally cutting-mode platform mobile,", "tokens": [639, 551, 17077, 257, 3801, 551, 11, 597, 307, 264, 2721, 6492, 12, 76, 1429, 3663, 6013, 11], "temperature": 0.0, "avg_logprob": -0.18987174034118653, "compression_ratio": 1.525, "no_speech_prob": 0.0014131410280242562}, {"id": 142, "seek": 119900, "start": 1209.0, "end": 1216.0, "text": " the mobile part, to reach the beta version, which is a huge milestone.", "tokens": [264, 6013, 644, 11, 281, 2524, 264, 9861, 3037, 11, 597, 307, 257, 2603, 28048, 13], "temperature": 0.0, "avg_logprob": -0.18987174034118653, "compression_ratio": 1.525, "no_speech_prob": 0.0014131410280242562}, {"id": 143, "seek": 119900, "start": 1216.0, "end": 1226.0, "text": " This means that the technology is basically done and it is safe to use in your project.", "tokens": [639, 1355, 300, 264, 2899, 307, 1936, 1096, 293, 309, 307, 3273, 281, 764, 294, 428, 1716, 13], "temperature": 0.0, "avg_logprob": -0.18987174034118653, "compression_ratio": 1.525, "no_speech_prob": 0.0014131410280242562}, {"id": 144, "seek": 122600, "start": 1226.0, "end": 1233.0, "text": " The fact that it's in beta means that there's still some work to do mostly on the toolchain,", "tokens": [440, 1186, 300, 309, 311, 294, 9861, 1355, 300, 456, 311, 920, 512, 589, 281, 360, 5240, 322, 264, 2290, 11509, 11], "temperature": 0.0, "avg_logprob": -0.17210212207975842, "compression_ratio": 1.6130653266331658, "no_speech_prob": 0.0011224722256883979}, {"id": 145, "seek": 122600, "start": 1233.0, "end": 1241.0, "text": " but in the general thinking you can use it safely.", "tokens": [457, 294, 264, 2674, 1953, 291, 393, 764, 309, 11750, 13], "temperature": 0.0, "avg_logprob": -0.17210212207975842, "compression_ratio": 1.6130653266331658, "no_speech_prob": 0.0011224722256883979}, {"id": 146, "seek": 122600, "start": 1241.0, "end": 1245.0, "text": " Maybe there will be some cut-out corners on setting up the toolchain, stuff like that,", "tokens": [2704, 456, 486, 312, 512, 1723, 12, 346, 12413, 322, 3287, 493, 264, 2290, 11509, 11, 1507, 411, 300, 11], "temperature": 0.0, "avg_logprob": -0.17210212207975842, "compression_ratio": 1.6130653266331658, "no_speech_prob": 0.0011224722256883979}, {"id": 147, "seek": 122600, "start": 1245.0, "end": 1255.0, "text": " but don't worry, you can start using and learning your project and do it because it's fun.", "tokens": [457, 500, 380, 3292, 11, 291, 393, 722, 1228, 293, 2539, 428, 1716, 293, 360, 309, 570, 309, 311, 1019, 13], "temperature": 0.0, "avg_logprob": -0.17210212207975842, "compression_ratio": 1.6130653266331658, "no_speech_prob": 0.0011224722256883979}, {"id": 148, "seek": 125500, "start": 1255.0, "end": 1270.0, "text": " All right, now let's move to more close to today and with the recent release of Kotlin 1.8,", "tokens": [1057, 558, 11, 586, 718, 311, 1286, 281, 544, 1998, 281, 965, 293, 365, 264, 5162, 4374, 295, 30123, 5045, 502, 13, 23, 11], "temperature": 0.0, "avg_logprob": -0.20639477524102903, "compression_ratio": 1.3211678832116789, "no_speech_prob": 0.0011432667961344123}, {"id": 149, "seek": 125500, "start": 1270.0, "end": 1279.0, "text": " we got a lot more interesting stuff in the field of Objective-C as with interoperability,", "tokens": [321, 658, 257, 688, 544, 1880, 1507, 294, 264, 2519, 295, 24753, 488, 12, 34, 382, 365, 728, 7192, 2310, 11], "temperature": 0.0, "avg_logprob": -0.20639477524102903, "compression_ratio": 1.3211678832116789, "no_speech_prob": 0.0011432667961344123}, {"id": 150, "seek": 127900, "start": 1279.0, "end": 1287.0, "text": " which is something that people always ask because it could be better sometimes.", "tokens": [597, 307, 746, 300, 561, 1009, 1029, 570, 309, 727, 312, 1101, 2171, 13], "temperature": 0.0, "avg_logprob": -0.1252150355644946, "compression_ratio": 1.4223602484472049, "no_speech_prob": 0.0005497995298355818}, {"id": 151, "seek": 127900, "start": 1287.0, "end": 1295.0, "text": " With this release, we got some nice annotations like Objective-C name", "tokens": [2022, 341, 4374, 11, 321, 658, 512, 1481, 25339, 763, 411, 24753, 488, 12, 34, 1315], "temperature": 0.0, "avg_logprob": -0.1252150355644946, "compression_ratio": 1.4223602484472049, "no_speech_prob": 0.0005497995298355818}, {"id": 152, "seek": 127900, "start": 1295.0, "end": 1303.0, "text": " that let us specify a more idiomatic or more beautiful naming for some function", "tokens": [300, 718, 505, 16500, 257, 544, 18014, 13143, 420, 544, 2238, 25290, 337, 512, 2445], "temperature": 0.0, "avg_logprob": -0.1252150355644946, "compression_ratio": 1.4223602484472049, "no_speech_prob": 0.0005497995298355818}, {"id": 153, "seek": 130300, "start": 1303.0, "end": 1313.0, "text": " that we want to expose to Swift so we can just change the name without changing the Kotlin object itself.", "tokens": [300, 321, 528, 281, 19219, 281, 25539, 370, 321, 393, 445, 1319, 264, 1315, 1553, 4473, 264, 30123, 5045, 2657, 2564, 13], "temperature": 0.0, "avg_logprob": -0.12134891086154515, "compression_ratio": 1.5, "no_speech_prob": 0.0008383766398765147}, {"id": 154, "seek": 130300, "start": 1313.0, "end": 1328.0, "text": " Another one is hidden from Objective-C, which as the name suggests, we can hide some function from Objective-C", "tokens": [3996, 472, 307, 7633, 490, 24753, 488, 12, 34, 11, 597, 382, 264, 1315, 13409, 11, 321, 393, 6479, 512, 2445, 490, 24753, 488, 12, 34], "temperature": 0.0, "avg_logprob": -0.12134891086154515, "compression_ratio": 1.5, "no_speech_prob": 0.0008383766398765147}, {"id": 155, "seek": 132800, "start": 1328.0, "end": 1334.0, "text": " because maybe we want to have a duplicated function that works better", "tokens": [570, 1310, 321, 528, 281, 362, 257, 1581, 564, 3587, 2445, 300, 1985, 1101], "temperature": 0.0, "avg_logprob": -0.16768523394051243, "compression_ratio": 1.5632911392405062, "no_speech_prob": 0.0005140246357768774}, {"id": 156, "seek": 132800, "start": 1334.0, "end": 1342.0, "text": " or has a better representation for the Swift word and we want to just hide the Kotlin one", "tokens": [420, 575, 257, 1101, 10290, 337, 264, 25539, 1349, 293, 321, 528, 281, 445, 6479, 264, 30123, 5045, 472], "temperature": 0.0, "avg_logprob": -0.16768523394051243, "compression_ratio": 1.5632911392405062, "no_speech_prob": 0.0005140246357768774}, {"id": 157, "seek": 132800, "start": 1342.0, "end": 1351.0, "text": " so we can save precious binary size and have a specific function only for the iOS part.", "tokens": [370, 321, 393, 3155, 12406, 17434, 2744, 293, 362, 257, 2685, 2445, 787, 337, 264, 17430, 644, 13], "temperature": 0.0, "avg_logprob": -0.16768523394051243, "compression_ratio": 1.5632911392405062, "no_speech_prob": 0.0005140246357768774}, {"id": 158, "seek": 135100, "start": 1351.0, "end": 1359.0, "text": " Finally, another interesting thing is the should refine in Swift annotation,", "tokens": [6288, 11, 1071, 1880, 551, 307, 264, 820, 33906, 294, 25539, 48654, 11], "temperature": 0.0, "avg_logprob": -0.17242050170898438, "compression_ratio": 1.393063583815029, "no_speech_prob": 0.0003784596046898514}, {"id": 159, "seek": 135100, "start": 1359.0, "end": 1368.0, "text": " which basically tells the compiler to mark a function or a property as a Swift private.", "tokens": [597, 1936, 5112, 264, 31958, 281, 1491, 257, 2445, 420, 257, 4707, 382, 257, 25539, 4551, 13], "temperature": 0.0, "avg_logprob": -0.17242050170898438, "compression_ratio": 1.393063583815029, "no_speech_prob": 0.0003784596046898514}, {"id": 160, "seek": 135100, "start": 1368.0, "end": 1374.0, "text": " Basically, it's going to be exported on Objective-C with a double underscore", "tokens": [8537, 11, 309, 311, 516, 281, 312, 42055, 322, 24753, 488, 12, 34, 365, 257, 3834, 37556], "temperature": 0.0, "avg_logprob": -0.17242050170898438, "compression_ratio": 1.393063583815029, "no_speech_prob": 0.0003784596046898514}, {"id": 161, "seek": 137400, "start": 1374.0, "end": 1385.0, "text": " and so with a double underscore, this function will be invisible because autosuggestion doesn't autosuggest.", "tokens": [293, 370, 365, 257, 3834, 37556, 11, 341, 2445, 486, 312, 14603, 570, 1476, 329, 697, 2629, 313, 1177, 380, 1476, 329, 697, 2629, 13], "temperature": 0.0, "avg_logprob": -0.11510074933369954, "compression_ratio": 1.5985915492957747, "no_speech_prob": 0.00022493736469186842}, {"id": 162, "seek": 137400, "start": 1385.0, "end": 1392.0, "text": " On iOS, sometimes stuff are invisible because autosuggestion doesn't work properly in Xcode,", "tokens": [1282, 17430, 11, 2171, 1507, 366, 14603, 570, 1476, 329, 697, 2629, 313, 1177, 380, 589, 6108, 294, 1783, 22332, 11], "temperature": 0.0, "avg_logprob": -0.11510074933369954, "compression_ratio": 1.5985915492957747, "no_speech_prob": 0.00022493736469186842}, {"id": 163, "seek": 137400, "start": 1392.0, "end": 1396.0, "text": " but that's another thing.", "tokens": [457, 300, 311, 1071, 551, 13], "temperature": 0.0, "avg_logprob": -0.11510074933369954, "compression_ratio": 1.5985915492957747, "no_speech_prob": 0.00022493736469186842}, {"id": 164, "seek": 139600, "start": 1396.0, "end": 1405.0, "text": " But in this way, it will be possible to hide some function and then rewrite it on Swift", "tokens": [583, 294, 341, 636, 11, 309, 486, 312, 1944, 281, 6479, 512, 2445, 293, 550, 28132, 309, 322, 25539], "temperature": 0.0, "avg_logprob": -0.10634539867269582, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0003859529097098857}, {"id": 165, "seek": 139600, "start": 1405.0, "end": 1413.0, "text": " to have a better idiomatic Swift way of doing things.", "tokens": [281, 362, 257, 1101, 18014, 13143, 25539, 636, 295, 884, 721, 13], "temperature": 0.0, "avg_logprob": -0.10634539867269582, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0003859529097098857}, {"id": 166, "seek": 139600, "start": 1413.0, "end": 1422.0, "text": " Another experimental thing that we got on Kotlin 1.8 is something that I was dreaming of", "tokens": [3996, 17069, 551, 300, 321, 658, 322, 30123, 5045, 502, 13, 23, 307, 746, 300, 286, 390, 21475, 295], "temperature": 0.0, "avg_logprob": -0.10634539867269582, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0003859529097098857}, {"id": 167, "seek": 142200, "start": 1422.0, "end": 1431.0, "text": " because every time I saw, I see Android test and Android Android test, my ads explode", "tokens": [570, 633, 565, 286, 1866, 11, 286, 536, 8853, 1500, 293, 8853, 8853, 1500, 11, 452, 10342, 21411], "temperature": 0.0, "avg_logprob": -0.14055667384978263, "compression_ratio": 1.5866666666666667, "no_speech_prob": 0.0004485490790102631}, {"id": 168, "seek": 142200, "start": 1431.0, "end": 1440.0, "text": " because every time I think that it's a typo or something, but it's not a typo.", "tokens": [570, 633, 565, 286, 519, 300, 309, 311, 257, 2125, 78, 420, 746, 11, 457, 309, 311, 406, 257, 2125, 78, 13], "temperature": 0.0, "avg_logprob": -0.14055667384978263, "compression_ratio": 1.5866666666666667, "no_speech_prob": 0.0004485490790102631}, {"id": 169, "seek": 142200, "start": 1440.0, "end": 1448.0, "text": " But right now, this will change and there will be more descriptive things", "tokens": [583, 558, 586, 11, 341, 486, 1319, 293, 456, 486, 312, 544, 42585, 721], "temperature": 0.0, "avg_logprob": -0.14055667384978263, "compression_ratio": 1.5866666666666667, "no_speech_prob": 0.0004485490790102631}, {"id": 170, "seek": 144800, "start": 1448.0, "end": 1453.0, "text": " like instead of Android test, Android unit test, and instead of Android Android test,", "tokens": [411, 2602, 295, 8853, 1500, 11, 8853, 4985, 1500, 11, 293, 2602, 295, 8853, 8853, 1500, 11], "temperature": 0.0, "avg_logprob": -0.11496089161306187, "compression_ratio": 1.73125, "no_speech_prob": 7.71577688283287e-05}, {"id": 171, "seek": 144800, "start": 1453.0, "end": 1455.0, "text": " Android instrumented test.", "tokens": [8853, 7198, 292, 1500, 13], "temperature": 0.0, "avg_logprob": -0.11496089161306187, "compression_ratio": 1.73125, "no_speech_prob": 7.71577688283287e-05}, {"id": 172, "seek": 144800, "start": 1455.0, "end": 1464.0, "text": " So it's going to be more clear and you got to understand really what is this thing.", "tokens": [407, 309, 311, 516, 281, 312, 544, 1850, 293, 291, 658, 281, 1223, 534, 437, 307, 341, 551, 13], "temperature": 0.0, "avg_logprob": -0.11496089161306187, "compression_ratio": 1.73125, "no_speech_prob": 7.71577688283287e-05}, {"id": 173, "seek": 144800, "start": 1464.0, "end": 1469.0, "text": " Connected to that, there will be more clarity also to where to put the manifest.", "tokens": [11653, 292, 281, 300, 11, 456, 486, 312, 544, 16992, 611, 281, 689, 281, 829, 264, 10067, 13], "temperature": 0.0, "avg_logprob": -0.11496089161306187, "compression_ratio": 1.73125, "no_speech_prob": 7.71577688283287e-05}, {"id": 174, "seek": 146900, "start": 1469.0, "end": 1481.0, "text": " So not in the Android main, but you're going to have a specific folder for the bug and release version,", "tokens": [407, 406, 294, 264, 8853, 2135, 11, 457, 291, 434, 516, 281, 362, 257, 2685, 10820, 337, 264, 7426, 293, 4374, 3037, 11], "temperature": 0.0, "avg_logprob": -0.1245164736895494, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.00025334086967632174}, {"id": 175, "seek": 146900, "start": 1481.0, "end": 1487.0, "text": " so it's going to be more clear just and you got to understand better.", "tokens": [370, 309, 311, 516, 281, 312, 544, 1850, 445, 293, 291, 658, 281, 1223, 1101, 13], "temperature": 0.0, "avg_logprob": -0.1245164736895494, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.00025334086967632174}, {"id": 176, "seek": 146900, "start": 1487.0, "end": 1490.0, "text": " This thing is still experimental, of course.", "tokens": [639, 551, 307, 920, 17069, 11, 295, 1164, 13], "temperature": 0.0, "avg_logprob": -0.1245164736895494, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.00025334086967632174}, {"id": 177, "seek": 146900, "start": 1490.0, "end": 1496.0, "text": " It's going to be enabled by default sometimes in the future,", "tokens": [467, 311, 516, 281, 312, 15172, 538, 7576, 2171, 294, 264, 2027, 11], "temperature": 0.0, "avg_logprob": -0.1245164736895494, "compression_ratio": 1.508108108108108, "no_speech_prob": 0.00025334086967632174}, {"id": 178, "seek": 149600, "start": 1496.0, "end": 1504.0, "text": " but if you want to use it, you have to opt in with a Gradle option.", "tokens": [457, 498, 291, 528, 281, 764, 309, 11, 291, 362, 281, 2427, 294, 365, 257, 16710, 306, 3614, 13], "temperature": 0.0, "avg_logprob": -0.20493267907036675, "compression_ratio": 1.2844827586206897, "no_speech_prob": 0.0008450380992144346}, {"id": 179, "seek": 149600, "start": 1504.0, "end": 1516.0, "text": " Another thing that there was in Kotlin 1.8 was the stabilization of the Kotlin.js", "tokens": [3996, 551, 300, 456, 390, 294, 30123, 5045, 502, 13, 23, 390, 264, 35476, 295, 264, 30123, 5045, 13, 25530], "temperature": 0.0, "avg_logprob": -0.20493267907036675, "compression_ratio": 1.2844827586206897, "no_speech_prob": 0.0008450380992144346}, {"id": 180, "seek": 151600, "start": 1516.0, "end": 1526.0, "text": " and so finally, right now, all the three different technologies, so Kotlin for the JVM,", "tokens": [293, 370, 2721, 11, 558, 586, 11, 439, 264, 1045, 819, 7943, 11, 370, 30123, 5045, 337, 264, 508, 53, 44, 11], "temperature": 0.0, "avg_logprob": -0.25985767966822576, "compression_ratio": 1.4256756756756757, "no_speech_prob": 0.0007090249564498663}, {"id": 181, "seek": 151600, "start": 1526.0, "end": 1532.0, "text": " Kotlin native and Kotlin.js are using the same backend, which means better handling, less bug,", "tokens": [30123, 5045, 8470, 293, 30123, 5045, 13, 25530, 366, 1228, 264, 912, 38087, 11, 597, 1355, 1101, 13175, 11, 1570, 7426, 11], "temperature": 0.0, "avg_logprob": -0.25985767966822576, "compression_ratio": 1.4256756756756757, "no_speech_prob": 0.0007090249564498663}, {"id": 182, "seek": 151600, "start": 1532.0, "end": 1540.0, "text": " and everything works better.", "tokens": [293, 1203, 1985, 1101, 13], "temperature": 0.0, "avg_logprob": -0.25985767966822576, "compression_ratio": 1.4256756756756757, "no_speech_prob": 0.0007090249564498663}, {"id": 183, "seek": 154000, "start": 1540.0, "end": 1551.0, "text": " Another interesting goodie that is not specific to a specific version is that", "tokens": [3996, 1880, 665, 414, 300, 307, 406, 2685, 281, 257, 2685, 3037, 307, 300], "temperature": 0.0, "avg_logprob": -0.17553232192993165, "compression_ratio": 1.4027777777777777, "no_speech_prob": 0.0010585103882476687}, {"id": 184, "seek": 154000, "start": 1551.0, "end": 1562.0, "text": " since version 1.4 to 1.8, they were experimentally checking binary back to work compatibility,", "tokens": [1670, 3037, 502, 13, 19, 281, 502, 13, 23, 11, 436, 645, 5120, 379, 8568, 17434, 646, 281, 589, 34237, 11], "temperature": 0.0, "avg_logprob": -0.17553232192993165, "compression_ratio": 1.4027777777777777, "no_speech_prob": 0.0010585103882476687}, {"id": 185, "seek": 154000, "start": 1562.0, "end": 1564.0, "text": " which is always a nice thing.", "tokens": [597, 307, 1009, 257, 1481, 551, 13], "temperature": 0.0, "avg_logprob": -0.17553232192993165, "compression_ratio": 1.4027777777777777, "no_speech_prob": 0.0010585103882476687}, {"id": 186, "seek": 156400, "start": 1564.0, "end": 1575.0, "text": " And from now on, there are processes set up on the side to keep binary compatibility from every release,", "tokens": [400, 490, 586, 322, 11, 456, 366, 7555, 992, 493, 322, 264, 1252, 281, 1066, 17434, 34237, 490, 633, 4374, 11], "temperature": 0.0, "avg_logprob": -0.15833125970302483, "compression_ratio": 1.3414634146341464, "no_speech_prob": 0.0001744367618812248}, {"id": 187, "seek": 156400, "start": 1575.0, "end": 1583.0, "text": " which is going to alleviate the pain of having stuff broken.", "tokens": [597, 307, 516, 281, 42701, 264, 1822, 295, 1419, 1507, 5463, 13], "temperature": 0.0, "avg_logprob": -0.15833125970302483, "compression_ratio": 1.3414634146341464, "no_speech_prob": 0.0001744367618812248}, {"id": 188, "seek": 158300, "start": 1583.0, "end": 1594.0, "text": " All right, another very interesting thing about Kotlin and the multi-platform word", "tokens": [1057, 558, 11, 1071, 588, 1880, 551, 466, 30123, 5045, 293, 264, 4825, 12, 39975, 837, 1349], "temperature": 0.0, "avg_logprob": -0.19674698222767223, "compression_ratio": 1.4203821656050954, "no_speech_prob": 0.000510566693264991}, {"id": 189, "seek": 158300, "start": 1594.0, "end": 1601.0, "text": " is the fact that JetBrains is maintaining also a composed version for desktop and the web,", "tokens": [307, 264, 1186, 300, 28730, 45606, 1292, 307, 14916, 611, 257, 18204, 3037, 337, 14502, 293, 264, 3670, 11], "temperature": 0.0, "avg_logprob": -0.19674698222767223, "compression_ratio": 1.4203821656050954, "no_speech_prob": 0.000510566693264991}, {"id": 190, "seek": 158300, "start": 1601.0, "end": 1610.0, "text": " which is a fork from the Android one from Google.", "tokens": [597, 307, 257, 17716, 490, 264, 8853, 472, 490, 3329, 13], "temperature": 0.0, "avg_logprob": -0.19674698222767223, "compression_ratio": 1.4203821656050954, "no_speech_prob": 0.000510566693264991}, {"id": 191, "seek": 161000, "start": 1610.0, "end": 1617.0, "text": " And yeah, the support is going on, but it's really neat.", "tokens": [400, 1338, 11, 264, 1406, 307, 516, 322, 11, 457, 309, 311, 534, 10654, 13], "temperature": 0.0, "avg_logprob": -0.1764336041041783, "compression_ratio": 1.478021978021978, "no_speech_prob": 0.0008773397421464324}, {"id": 192, "seek": 161000, "start": 1617.0, "end": 1624.0, "text": " It's really beautiful because you can just use something nicer to write a desktop application", "tokens": [467, 311, 534, 2238, 570, 291, 393, 445, 764, 746, 22842, 281, 2464, 257, 14502, 3861], "temperature": 0.0, "avg_logprob": -0.1764336041041783, "compression_ratio": 1.478021978021978, "no_speech_prob": 0.0008773397421464324}, {"id": 193, "seek": 161000, "start": 1624.0, "end": 1630.0, "text": " and not still have not to deal with Zwing, Java, whatever stuff.", "tokens": [293, 406, 920, 362, 406, 281, 2028, 365, 1176, 7904, 11, 10745, 11, 2035, 1507, 13], "temperature": 0.0, "avg_logprob": -0.1764336041041783, "compression_ratio": 1.478021978021978, "no_speech_prob": 0.0008773397421464324}, {"id": 194, "seek": 161000, "start": 1630.0, "end": 1635.0, "text": " So it's really nice that we have some sort of things.", "tokens": [407, 309, 311, 534, 1481, 300, 321, 362, 512, 1333, 295, 721, 13], "temperature": 0.0, "avg_logprob": -0.1764336041041783, "compression_ratio": 1.478021978021978, "no_speech_prob": 0.0008773397421464324}, {"id": 195, "seek": 163500, "start": 1635.0, "end": 1643.0, "text": " Of course, it takes time to keep it up with Google releases because they have to catch it up.", "tokens": [2720, 1164, 11, 309, 2516, 565, 281, 1066, 309, 493, 365, 3329, 16952, 570, 436, 362, 281, 3745, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.13123776912689208, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.00045714667066931725}, {"id": 196, "seek": 163500, "start": 1643.0, "end": 1651.0, "text": " But for example, a couple of days ago, we got the 1.3.0 release,", "tokens": [583, 337, 1365, 11, 257, 1916, 295, 1708, 2057, 11, 321, 658, 264, 502, 13, 18, 13, 15, 4374, 11], "temperature": 0.0, "avg_logprob": -0.13123776912689208, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.00045714667066931725}, {"id": 197, "seek": 163500, "start": 1651.0, "end": 1658.0, "text": " and some stuff is going forward also on this side.", "tokens": [293, 512, 1507, 307, 516, 2128, 611, 322, 341, 1252, 13], "temperature": 0.0, "avg_logprob": -0.13123776912689208, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.00045714667066931725}, {"id": 198, "seek": 165800, "start": 1658.0, "end": 1667.0, "text": " Last year, we got also some interesting experimental stuff which is composed for iOS.", "tokens": [5264, 1064, 11, 321, 658, 611, 512, 1880, 17069, 1507, 597, 307, 18204, 337, 17430, 13], "temperature": 0.0, "avg_logprob": -0.07887525881751109, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.0004867964889854193}, {"id": 199, "seek": 165800, "start": 1667.0, "end": 1672.0, "text": " Yes, it seems happening.", "tokens": [1079, 11, 309, 2544, 2737, 13], "temperature": 0.0, "avg_logprob": -0.07887525881751109, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.0004867964889854193}, {"id": 200, "seek": 165800, "start": 1672.0, "end": 1680.0, "text": " It's still some very experimental and technical preview, so absolutely not ready for production.", "tokens": [467, 311, 920, 512, 588, 17069, 293, 6191, 14281, 11, 370, 3122, 406, 1919, 337, 4265, 13], "temperature": 0.0, "avg_logprob": -0.07887525881751109, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.0004867964889854193}, {"id": 201, "seek": 165800, "start": 1680.0, "end": 1684.0, "text": " But people in the community are playing with that.", "tokens": [583, 561, 294, 264, 1768, 366, 2433, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.07887525881751109, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.0004867964889854193}, {"id": 202, "seek": 168400, "start": 1684.0, "end": 1694.0, "text": " For example, folks touch up, they built the DroidCon app for the iOS version of the DroidCon app", "tokens": [1171, 1365, 11, 4024, 2557, 493, 11, 436, 3094, 264, 413, 6490, 9838, 724, 337, 264, 17430, 3037, 295, 264, 413, 6490, 9838, 724], "temperature": 0.0, "avg_logprob": -0.1860848216267375, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.0008630845695734024}, {"id": 203, "seek": 168400, "start": 1694.0, "end": 1699.0, "text": " with compose for iOS, which is something amazing.", "tokens": [365, 35925, 337, 17430, 11, 597, 307, 746, 2243, 13], "temperature": 0.0, "avg_logprob": -0.1860848216267375, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.0008630845695734024}, {"id": 204, "seek": 168400, "start": 1699.0, "end": 1706.0, "text": " And yeah, this is something, as I said, not ready, but it's something to keep an eye on", "tokens": [400, 1338, 11, 341, 307, 746, 11, 382, 286, 848, 11, 406, 1919, 11, 457, 309, 311, 746, 281, 1066, 364, 3313, 322], "temperature": 0.0, "avg_logprob": -0.1860848216267375, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.0008630845695734024}, {"id": 205, "seek": 168400, "start": 1706.0, "end": 1710.0, "text": " because it's going to be wild and interesting.", "tokens": [570, 309, 311, 516, 281, 312, 4868, 293, 1880, 13], "temperature": 0.0, "avg_logprob": -0.1860848216267375, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.0008630845695734024}, {"id": 206, "seek": 171000, "start": 1710.0, "end": 1714.0, "text": " So what is going to come this year?", "tokens": [407, 437, 307, 516, 281, 808, 341, 1064, 30], "temperature": 0.0, "avg_logprob": -0.1340669033139251, "compression_ratio": 1.3524590163934427, "no_speech_prob": 0.0007245805463753641}, {"id": 207, "seek": 171000, "start": 1714.0, "end": 1721.0, "text": " Well, there will be more improvements on the memory manager,", "tokens": [1042, 11, 456, 486, 312, 544, 13797, 322, 264, 4675, 6598, 11], "temperature": 0.0, "avg_logprob": -0.1340669033139251, "compression_ratio": 1.3524590163934427, "no_speech_prob": 0.0007245805463753641}, {"id": 208, "seek": 171000, "start": 1721.0, "end": 1729.0, "text": " even though it's already stable and it's the default memory manager.", "tokens": [754, 1673, 309, 311, 1217, 8351, 293, 309, 311, 264, 7576, 4675, 6598, 13], "temperature": 0.0, "avg_logprob": -0.1340669033139251, "compression_ratio": 1.3524590163934427, "no_speech_prob": 0.0007245805463753641}, {"id": 209, "seek": 172900, "start": 1729.0, "end": 1740.0, "text": " So folks would keep increasing and fixing bugs and increasing performance on that.", "tokens": [407, 4024, 576, 1066, 5662, 293, 19442, 15120, 293, 5662, 3389, 322, 300, 13], "temperature": 0.0, "avg_logprob": -0.23796464602152506, "compression_ratio": 1.514792899408284, "no_speech_prob": 0.00038414649316109717}, {"id": 210, "seek": 172900, "start": 1740.0, "end": 1746.0, "text": " Of course, there will be more improvement on compilation time on Kotlin native", "tokens": [2720, 1164, 11, 456, 486, 312, 544, 10444, 322, 40261, 565, 322, 30123, 5045, 8470], "temperature": 0.0, "avg_logprob": -0.23796464602152506, "compression_ratio": 1.514792899408284, "no_speech_prob": 0.00038414649316109717}, {"id": 211, "seek": 172900, "start": 1746.0, "end": 1751.0, "text": " because it's still sometimes not the fastest thing in the world,", "tokens": [570, 309, 311, 920, 2171, 406, 264, 14573, 551, 294, 264, 1002, 11], "temperature": 0.0, "avg_logprob": -0.23796464602152506, "compression_ratio": 1.514792899408284, "no_speech_prob": 0.00038414649316109717}, {"id": 212, "seek": 172900, "start": 1751.0, "end": 1756.0, "text": " and so it has to be improved.", "tokens": [293, 370, 309, 575, 281, 312, 9689, 13], "temperature": 0.0, "avg_logprob": -0.23796464602152506, "compression_ratio": 1.514792899408284, "no_speech_prob": 0.00038414649316109717}, {"id": 213, "seek": 175600, "start": 1756.0, "end": 1762.0, "text": " Another point, which is, like I was mentioning before, it's always asked from people,", "tokens": [3996, 935, 11, 597, 307, 11, 411, 286, 390, 18315, 949, 11, 309, 311, 1009, 2351, 490, 561, 11], "temperature": 0.0, "avg_logprob": -0.1592392088874938, "compression_ratio": 1.4143646408839778, "no_speech_prob": 0.0007863242644816637}, {"id": 214, "seek": 175600, "start": 1762.0, "end": 1771.0, "text": " is better exporting to Objective-C, so have better APIs to interact with from the iOS part.", "tokens": [307, 1101, 44686, 281, 24753, 488, 12, 34, 11, 370, 362, 1101, 21445, 281, 4648, 365, 490, 264, 17430, 644, 13], "temperature": 0.0, "avg_logprob": -0.1592392088874938, "compression_ratio": 1.4143646408839778, "no_speech_prob": 0.0007863242644816637}, {"id": 215, "seek": 175600, "start": 1771.0, "end": 1779.0, "text": " And also, another thing will be after confirming that there are tools in place", "tokens": [400, 611, 11, 1071, 551, 486, 312, 934, 42861, 300, 456, 366, 3873, 294, 1081], "temperature": 0.0, "avg_logprob": -0.1592392088874938, "compression_ratio": 1.4143646408839778, "no_speech_prob": 0.0007863242644816637}, {"id": 216, "seek": 177900, "start": 1779.0, "end": 1787.0, "text": " to have backward binary compatibility for the Kotlin native version,", "tokens": [281, 362, 23897, 17434, 34237, 337, 264, 30123, 5045, 8470, 3037, 11], "temperature": 0.0, "avg_logprob": -0.15898219906553931, "compression_ratio": 1.490066225165563, "no_speech_prob": 6.721563113387674e-05}, {"id": 217, "seek": 177900, "start": 1787.0, "end": 1794.0, "text": " they will describe and add more improvements and documentation for library developers", "tokens": [436, 486, 6786, 293, 909, 544, 13797, 293, 14333, 337, 6405, 8849], "temperature": 0.0, "avg_logprob": -0.15898219906553931, "compression_ratio": 1.490066225165563, "no_speech_prob": 6.721563113387674e-05}, {"id": 218, "seek": 177900, "start": 1794.0, "end": 1798.0, "text": " to maintain a binary compatibility as well.", "tokens": [281, 6909, 257, 17434, 34237, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.15898219906553931, "compression_ratio": 1.490066225165563, "no_speech_prob": 6.721563113387674e-05}, {"id": 219, "seek": 177900, "start": 1798.0, "end": 1803.0, "text": " All of that is going to...", "tokens": [1057, 295, 300, 307, 516, 281, 485], "temperature": 0.0, "avg_logprob": -0.15898219906553931, "compression_ratio": 1.490066225165563, "no_speech_prob": 6.721563113387674e-05}, {"id": 220, "seek": 180300, "start": 1803.0, "end": 1811.0, "text": " All of these improvements are connected to have finally Kotlin native platform mobile to stable,", "tokens": [1057, 295, 613, 13797, 366, 4582, 281, 362, 2721, 30123, 5045, 8470, 3663, 6013, 281, 8351, 11], "temperature": 0.0, "avg_logprob": -0.1253444284632586, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0010474955197423697}, {"id": 221, "seek": 180300, "start": 1811.0, "end": 1814.0, "text": " which hopefully is going to happen this year.", "tokens": [597, 4696, 307, 516, 281, 1051, 341, 1064, 13], "temperature": 0.0, "avg_logprob": -0.1253444284632586, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0010474955197423697}, {"id": 222, "seek": 180300, "start": 1814.0, "end": 1820.0, "text": " And in order to do that, there are a bunch of things that need to be addressed.", "tokens": [400, 294, 1668, 281, 360, 300, 11, 456, 366, 257, 3840, 295, 721, 300, 643, 281, 312, 13847, 13], "temperature": 0.0, "avg_logprob": -0.1253444284632586, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0010474955197423697}, {"id": 223, "seek": 180300, "start": 1820.0, "end": 1826.0, "text": " Like I said before, it's mostly tool chain and infrastructure stuff,", "tokens": [1743, 286, 848, 949, 11, 309, 311, 5240, 2290, 5021, 293, 6896, 1507, 11], "temperature": 0.0, "avg_logprob": -0.1253444284632586, "compression_ratio": 1.4846938775510203, "no_speech_prob": 0.0010474955197423697}, {"id": 224, "seek": 182600, "start": 1826.0, "end": 1834.0, "text": " but the main thing is working and you can start already using it because it's in beta", "tokens": [457, 264, 2135, 551, 307, 1364, 293, 291, 393, 722, 1217, 1228, 309, 570, 309, 311, 294, 9861], "temperature": 0.0, "avg_logprob": -0.1013185561649383, "compression_ratio": 1.5548387096774194, "no_speech_prob": 0.0005029881140217185}, {"id": 225, "seek": 182600, "start": 1834.0, "end": 1839.0, "text": " and stuff are kind of working right now.", "tokens": [293, 1507, 366, 733, 295, 1364, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.1013185561649383, "compression_ratio": 1.5548387096774194, "no_speech_prob": 0.0005029881140217185}, {"id": 226, "seek": 182600, "start": 1839.0, "end": 1849.0, "text": " With that was it, the introduction of the journey into Kotlin for this year,", "tokens": [2022, 300, 390, 309, 11, 264, 9339, 295, 264, 4671, 666, 30123, 5045, 337, 341, 1064, 11], "temperature": 0.0, "avg_logprob": -0.1013185561649383, "compression_ratio": 1.5548387096774194, "no_speech_prob": 0.0005029881140217185}, {"id": 227, "seek": 182600, "start": 1849.0, "end": 1853.0, "text": " from the past year and for this year.", "tokens": [490, 264, 1791, 1064, 293, 337, 341, 1064, 13], "temperature": 0.0, "avg_logprob": -0.1013185561649383, "compression_ratio": 1.5548387096774194, "no_speech_prob": 0.0005029881140217185}, {"id": 228, "seek": 185300, "start": 1853.0, "end": 1858.0, "text": " So, thank you very much. There will be a lot of content today,", "tokens": [407, 11, 1309, 291, 588, 709, 13, 821, 486, 312, 257, 688, 295, 2701, 965, 11], "temperature": 0.0, "avg_logprob": -0.1549585610628128, "compression_ratio": 1.5244755244755244, "no_speech_prob": 0.0012340855319052935}, {"id": 229, "seek": 185300, "start": 1858.0, "end": 1863.0, "text": " so feel free to catch it up with all of that and have fun.", "tokens": [370, 841, 1737, 281, 3745, 309, 493, 365, 439, 295, 300, 293, 362, 1019, 13], "temperature": 0.0, "avg_logprob": -0.1549585610628128, "compression_ratio": 1.5244755244755244, "no_speech_prob": 0.0012340855319052935}, {"id": 230, "seek": 185300, "start": 1863.0, "end": 1872.0, "text": " Thank you very much.", "tokens": [1044, 291, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.1549585610628128, "compression_ratio": 1.5244755244755244, "no_speech_prob": 0.0012340855319052935}, {"id": 231, "seek": 185300, "start": 1872.0, "end": 1877.0, "text": " We do have four minutes for questions, so if you have any, raise your hand.", "tokens": [492, 360, 362, 1451, 2077, 337, 1651, 11, 370, 498, 291, 362, 604, 11, 5300, 428, 1011, 13], "temperature": 0.0, "avg_logprob": -0.1549585610628128, "compression_ratio": 1.5244755244755244, "no_speech_prob": 0.0012340855319052935}, {"id": 232, "seek": 187700, "start": 1877.0, "end": 1888.0, "text": " We'll bring in the microphone.", "tokens": [492, 603, 1565, 294, 264, 10952, 13], "temperature": 0.0, "avg_logprob": -0.14137480569922406, "compression_ratio": 1.25, "no_speech_prob": 0.0018413820071145892}, {"id": 233, "seek": 187700, "start": 1888.0, "end": 1895.0, "text": " Is it okay if I ask three consecutive questions, two of which are related?", "tokens": [1119, 309, 1392, 498, 286, 1029, 1045, 30497, 1651, 11, 732, 295, 597, 366, 4077, 30], "temperature": 0.0, "avg_logprob": -0.14137480569922406, "compression_ratio": 1.25, "no_speech_prob": 0.0018413820071145892}, {"id": 234, "seek": 187700, "start": 1895.0, "end": 1901.0, "text": " First of all, in terms of Kotlin JS and Kotlin native,", "tokens": [2386, 295, 439, 11, 294, 2115, 295, 30123, 5045, 33063, 293, 30123, 5045, 8470, 11], "temperature": 0.0, "avg_logprob": -0.14137480569922406, "compression_ratio": 1.25, "no_speech_prob": 0.0018413820071145892}, {"id": 235, "seek": 190100, "start": 1901.0, "end": 1908.0, "text": " those are not intended to be a performance alternative for existing solutions.", "tokens": [729, 366, 406, 10226, 281, 312, 257, 3389, 8535, 337, 6741, 6547, 13], "temperature": 0.0, "avg_logprob": -0.19482493064772916, "compression_ratio": 1.5197740112994351, "no_speech_prob": 0.001603824319317937}, {"id": 236, "seek": 190100, "start": 1908.0, "end": 1912.0, "text": " Kotlin JS wasn't meant to be a challenger to TypeScript,", "tokens": [30123, 5045, 33063, 2067, 380, 4140, 281, 312, 257, 2076, 10210, 281, 15576, 14237, 11], "temperature": 0.0, "avg_logprob": -0.19482493064772916, "compression_ratio": 1.5197740112994351, "no_speech_prob": 0.001603824319317937}, {"id": 237, "seek": 190100, "start": 1912.0, "end": 1919.0, "text": " and Kotlin native wasn't intended to rival things like Rust or Go, etc.", "tokens": [293, 30123, 5045, 8470, 2067, 380, 10226, 281, 16286, 721, 411, 34952, 420, 1037, 11, 5183, 13], "temperature": 0.0, "avg_logprob": -0.19482493064772916, "compression_ratio": 1.5197740112994351, "no_speech_prob": 0.001603824319317937}, {"id": 238, "seek": 190100, "start": 1919.0, "end": 1924.0, "text": " Is there a change in that ambition?", "tokens": [1119, 456, 257, 1319, 294, 300, 22814, 30], "temperature": 0.0, "avg_logprob": -0.19482493064772916, "compression_ratio": 1.5197740112994351, "no_speech_prob": 0.001603824319317937}, {"id": 239, "seek": 190100, "start": 1924.0, "end": 1926.0, "text": " That's my first question.", "tokens": [663, 311, 452, 700, 1168, 13], "temperature": 0.0, "avg_logprob": -0.19482493064772916, "compression_ratio": 1.5197740112994351, "no_speech_prob": 0.001603824319317937}, {"id": 240, "seek": 192600, "start": 1926.0, "end": 1931.0, "text": " My second question is, does JetBrains have any plans to use Compose", "tokens": [1222, 1150, 1168, 307, 11, 775, 28730, 45606, 1292, 362, 604, 5482, 281, 764, 6620, 541], "temperature": 0.0, "avg_logprob": -0.13468332068864688, "compression_ratio": 1.168141592920354, "no_speech_prob": 0.001484514563344419}, {"id": 241, "seek": 192600, "start": 1931.0, "end": 1942.0, "text": " to port their IDEs to Compose from AWT?", "tokens": [281, 2436, 641, 7348, 20442, 281, 6620, 541, 490, 25815, 51, 30], "temperature": 0.0, "avg_logprob": -0.13468332068864688, "compression_ratio": 1.168141592920354, "no_speech_prob": 0.001484514563344419}, {"id": 242, "seek": 192600, "start": 1942.0, "end": 1947.0, "text": " Okay, for the first one,", "tokens": [1033, 11, 337, 264, 700, 472, 11], "temperature": 0.0, "avg_logprob": -0.13468332068864688, "compression_ratio": 1.168141592920354, "no_speech_prob": 0.001484514563344419}, {"id": 243, "seek": 194700, "start": 1947.0, "end": 1957.0, "text": " I'm not sure if I heard or read some changes or stuff,", "tokens": [286, 478, 406, 988, 498, 286, 2198, 420, 1401, 512, 2962, 420, 1507, 11], "temperature": 0.0, "avg_logprob": -0.19418362873356518, "compression_ratio": 1.2566371681415929, "no_speech_prob": 0.003103395691141486}, {"id": 244, "seek": 194700, "start": 1957.0, "end": 1966.0, "text": " but yeah, there's just another thing in the ecosystem,", "tokens": [457, 1338, 11, 456, 311, 445, 1071, 551, 294, 264, 11311, 11], "temperature": 0.0, "avg_logprob": -0.19418362873356518, "compression_ratio": 1.2566371681415929, "no_speech_prob": 0.003103395691141486}, {"id": 245, "seek": 194700, "start": 1966.0, "end": 1976.0, "text": " probably it's not gonna replace.", "tokens": [1391, 309, 311, 406, 799, 7406, 13], "temperature": 0.0, "avg_logprob": -0.19418362873356518, "compression_ratio": 1.2566371681415929, "no_speech_prob": 0.003103395691141486}, {"id": 246, "seek": 197600, "start": 1976.0, "end": 1981.0, "text": " I'm not sure what you catch or what not, so I'm gonna restart.", "tokens": [286, 478, 406, 988, 437, 291, 3745, 420, 437, 406, 11, 370, 286, 478, 799, 21022, 13], "temperature": 0.0, "avg_logprob": -0.1707541854293258, "compression_ratio": 1.4366197183098592, "no_speech_prob": 0.0012365409638732672}, {"id": 247, "seek": 197600, "start": 1981.0, "end": 1988.0, "text": " I haven't read stuff or heard stuff that changed what you were saying.", "tokens": [286, 2378, 380, 1401, 1507, 420, 2198, 1507, 300, 3105, 437, 291, 645, 1566, 13], "temperature": 0.0, "avg_logprob": -0.1707541854293258, "compression_ratio": 1.4366197183098592, "no_speech_prob": 0.0012365409638732672}, {"id": 248, "seek": 197600, "start": 1988.0, "end": 2002.0, "text": " Probably there's gonna be other tooling to support and not to replace.", "tokens": [9210, 456, 311, 799, 312, 661, 46593, 281, 1406, 293, 406, 281, 7406, 13], "temperature": 0.0, "avg_logprob": -0.1707541854293258, "compression_ratio": 1.4366197183098592, "no_speech_prob": 0.0012365409638732672}, {"id": 249, "seek": 200200, "start": 2002.0, "end": 2007.0, "text": " So it's gonna be another thing to cover and other use cases,", "tokens": [407, 309, 311, 799, 312, 1071, 551, 281, 2060, 293, 661, 764, 3331, 11], "temperature": 0.0, "avg_logprob": -0.226958128122183, "compression_ratio": 1.4573170731707317, "no_speech_prob": 0.0024073454551398754}, {"id": 250, "seek": 200200, "start": 2007.0, "end": 2011.0, "text": " not to completely replace.", "tokens": [406, 281, 2584, 7406, 13], "temperature": 0.0, "avg_logprob": -0.226958128122183, "compression_ratio": 1.4573170731707317, "no_speech_prob": 0.0024073454551398754}, {"id": 251, "seek": 200200, "start": 2011.0, "end": 2020.0, "text": " But yeah, I don't have more clear guidance or evidence or opinions about that.", "tokens": [583, 1338, 11, 286, 500, 380, 362, 544, 1850, 10056, 420, 4467, 420, 11819, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.226958128122183, "compression_ratio": 1.4573170731707317, "no_speech_prob": 0.0024073454551398754}, {"id": 252, "seek": 200200, "start": 2020.0, "end": 2025.0, "text": " The second one was about, there was noisy, I didn't get it fully, but...", "tokens": [440, 1150, 472, 390, 466, 11, 456, 390, 24518, 11, 286, 994, 380, 483, 309, 4498, 11, 457, 485], "temperature": 0.0, "avg_logprob": -0.226958128122183, "compression_ratio": 1.4573170731707317, "no_speech_prob": 0.0024073454551398754}, {"id": 253, "seek": 202500, "start": 2025.0, "end": 2036.0, "text": " Yeah, I'm not JetBrains, so I don't know,", "tokens": [865, 11, 286, 478, 406, 28730, 45606, 1292, 11, 370, 286, 500, 380, 458, 11], "temperature": 0.0, "avg_logprob": -0.22737584795270646, "compression_ratio": 1.2333333333333334, "no_speech_prob": 0.007432705722749233}, {"id": 254, "seek": 202500, "start": 2036.0, "end": 2040.0, "text": " but probably yes, if I have to bet it.", "tokens": [457, 1391, 2086, 11, 498, 286, 362, 281, 778, 309, 13], "temperature": 0.0, "avg_logprob": -0.22737584795270646, "compression_ratio": 1.2333333333333334, "no_speech_prob": 0.007432705722749233}, {"id": 255, "seek": 202500, "start": 2040.0, "end": 2049.0, "text": " I know that they have their own runtime for UI and stuff like that,", "tokens": [286, 458, 300, 436, 362, 641, 1065, 34474, 337, 15682, 293, 1507, 411, 300, 11], "temperature": 0.0, "avg_logprob": -0.22737584795270646, "compression_ratio": 1.2333333333333334, "no_speech_prob": 0.007432705722749233}, {"id": 256, "seek": 204900, "start": 2049.0, "end": 2055.0, "text": " but probably yes they are gonna use it, but I'm not JetBrains, so I don't know.", "tokens": [50364, 457, 1391, 2086, 436, 366, 799, 764, 309, 11, 457, 286, 478, 406, 28730, 45606, 1292, 11, 370, 286, 500, 380, 458, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17032529757573053, "compression_ratio": 1.0, "no_speech_prob": 0.0025904288049787283}], "language": "en"}