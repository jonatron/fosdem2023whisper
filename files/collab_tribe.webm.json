{"text": " you Hello everyone this presentation is about tribe tribe is a collaborative project management framework it is collaborative as in it affects the ways in which people work together people from different teams UX design content and development it gives a set of conventions to work together kind of smoothens the collaborative process we call it a framework because it has a well-defined folder structure it has a set of conventions that are extendable and we are putting them out in the community so that we can together extend them further it has a defined text stack which is again extendable it has a set of licenses which enable open source collaborations and through this presentation we'll be taking you through all of these aspects to some extent I'll talk a bit about the hall of nations which has been used through this presentation as a metaphor it was a beautiful building an exhibition space in New Delhi built in 1972 it was built to house exhibitions the brief given to the architects was that it must be able to exhibit objects of varying sizes from books to satellites so the architects they came up with a design solution through the constraints of available building material available skill set cost constraints and all of that they broke convention by imagining a building without pillars also the building material for it was not prefabricated it was built on site coming back to tribe firstly I'll give a brief introduction about tribe tribe has been progressively built to provide one language or a unified set of conventions to the following three aspects relational database structure variable type handling in backend scripts and handling html input fields typically used in cms's to smoothen the data entry data editing and moderation processes within a project a bit of info about our team we're a team of four we run a small services company called postcode it was through our collaborations that tribe was progressively built over the last three years we've done around 90 projects we've worked with various external development teams ux folks design studios and content teams we have used tribe to build websites products applications android ios applications platforms and chatpots in terms of tech stack the core backend tech stack is php mysql we use nginx as a web server and composer packages whenever required based on projects tribe provides api support with json api version 1.1 to support any kind of frontend we typically use uh nodejs applications on the frontend before we delve deep into the technicalities of how tribe works i'd like to talk a bit about why did we create tribe we needed more backend agility to support iterations of ux content design and frontend decision making to work on how we build a more agile backend we needed to know the things that slow down backend development so we figured out constraints of database structure the rigid table structure does not allow us to constantly change the column names and table names we wanted to accommodate the agility that json provides while taking advantage of indexing and caching and searchability that mysql provides then while coding api layers we truly realize the importance of conventions looking at how json api has been drawn out really helped us think of more possibilities that could reduce time spent in backend development variable type handling in php takes up a lot of time and was not very agile in our experience in the collaborative process if for example we look from a content person's perspective it seems like a very simple ask when they say they need a multi-select instead of a single select such a simple ask can be a relatively complex task for a backend programmer especially if it is on a project that is live with significant user data also we wanted to date simple cms something that we could have across all our projects we wanted a single place to keep all our assets and uploads arranged by some convention so that things are predictably located and can be looked for at a later stage now let's go deeper in the architecture of tribe one of the core elements of tribe is a config file called types.json it is a pure json file that can be configured and reconfigured quickly it defines the information architecture of the application with precision and it looks somewhat like this and there are a few other terms that will help me explain types.json and its usage better the first term is types a type can be thought of as a data model or a table in a database it is non-hierarchical as it you cannot have subtypes all types are equal on the hierarchy it can accommodate metadata which is extendable a basic example would be a description of a type it's singular or plural form or how it would be called in a different language this is how a type looks within types.json file then there are modules modules are equivalent to columns in a table or attributes in a model they allow for complex relational references for example you could reference and link a module from one type to another module from another type or a module from one type could dynamically link to another type because types are non-hierarchical modules allow types to be referenced thereby creating a hierarchy if needed modules themselves are non-hierarchical so sub modules cannot be created a module also defines usage in input fields for CMS like types metadata of modules is extendable this is an example of how modules look there are there are four important aspects to notice here metadata starting with input underscore tells how the module must be used in an input field metadata starting with list underscore tells how the module must be listed in a list view metadata starting with var underscore defines how the module must be utilized by the php backend scripts input underscore slug can be used as name of the variable in php name of the input field in the front end and the name of the json attribute in mysql json thereby combining all of these use cases then there are objects an object is an instant instance of a model it is the equivalent of rows in a table it has a universal id that never repeats this is particularly unique to the way tribe functions this allows for objects to be shifted from one type to another even after the application goes live and at any stage an object is stored as a json object that retains the type and module structure in readable slugs rather than numbered references this is how an object looks like coming to uploads convention uploads folder follows a very simple convention year month day currently on tribe image file versions are created automatically junction is our content management front end system it is a headless cms it is a front end system built on ember js which is a node js based framework it also connects to the uploads folder the view you are seeing is the least view of a single type and this one is an editing view of a single object towards the end just reiterating our belief that convention is key to collaboration and word about licenses a tribe is in gpl version three junction which is the cms it uses the mit license and types dot json uses the creative commons license that's image called see raj reval associates the people who built the beautiful building a few shots of the building and that's it then thank you everyone you", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 2.06, "text": " you", "tokens": [50364, 291, 50467], "temperature": 0.0, "avg_logprob": -0.5710261464118958, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.9437085390090942}, {"id": 1, "seek": 3000, "start": 30.0, "end": 58.32, "text": " Hello everyone this presentation is about tribe", "tokens": [50364, 2425, 1518, 341, 5860, 307, 466, 17625, 51780], "temperature": 0.0, "avg_logprob": -0.7078498927029696, "compression_ratio": 0.8867924528301887, "no_speech_prob": 0.1706935167312622}, {"id": 2, "seek": 5832, "start": 58.96, "end": 66.0, "text": " tribe is a collaborative project management framework it is collaborative as in it affects", "tokens": [50396, 17625, 307, 257, 16555, 1716, 4592, 8388, 309, 307, 16555, 382, 294, 309, 11807, 50748], "temperature": 0.0, "avg_logprob": -0.13267836252848308, "compression_ratio": 1.803921568627451, "no_speech_prob": 0.7764492630958557}, {"id": 3, "seek": 5832, "start": 66.0, "end": 74.32, "text": " the ways in which people work together people from different teams UX design content and", "tokens": [50748, 264, 2098, 294, 597, 561, 589, 1214, 561, 490, 819, 5491, 40176, 1715, 2701, 293, 51164], "temperature": 0.0, "avg_logprob": -0.13267836252848308, "compression_ratio": 1.803921568627451, "no_speech_prob": 0.7764492630958557}, {"id": 4, "seek": 5832, "start": 74.32, "end": 80.08, "text": " development it gives a set of conventions to work together kind of smoothens the collaborative", "tokens": [51164, 3250, 309, 2709, 257, 992, 295, 33520, 281, 589, 1214, 733, 295, 5508, 694, 264, 16555, 51452], "temperature": 0.0, "avg_logprob": -0.13267836252848308, "compression_ratio": 1.803921568627451, "no_speech_prob": 0.7764492630958557}, {"id": 5, "seek": 5832, "start": 80.08, "end": 86.8, "text": " process we call it a framework because it has a well-defined folder structure it has a set of", "tokens": [51452, 1399, 321, 818, 309, 257, 8388, 570, 309, 575, 257, 731, 12, 37716, 10820, 3877, 309, 575, 257, 992, 295, 51788], "temperature": 0.0, "avg_logprob": -0.13267836252848308, "compression_ratio": 1.803921568627451, "no_speech_prob": 0.7764492630958557}, {"id": 6, "seek": 8680, "start": 86.8, "end": 91.75999999999999, "text": " conventions that are extendable and we are putting them out in the community so that we", "tokens": [50364, 33520, 300, 366, 10101, 712, 293, 321, 366, 3372, 552, 484, 294, 264, 1768, 370, 300, 321, 50612], "temperature": 0.0, "avg_logprob": -0.08157851744671257, "compression_ratio": 1.874493927125506, "no_speech_prob": 0.18378837406635284}, {"id": 7, "seek": 8680, "start": 91.75999999999999, "end": 98.56, "text": " can together extend them further it has a defined text stack which is again extendable it has a", "tokens": [50612, 393, 1214, 10101, 552, 3052, 309, 575, 257, 7642, 2487, 8630, 597, 307, 797, 10101, 712, 309, 575, 257, 50952], "temperature": 0.0, "avg_logprob": -0.08157851744671257, "compression_ratio": 1.874493927125506, "no_speech_prob": 0.18378837406635284}, {"id": 8, "seek": 8680, "start": 98.56, "end": 104.24, "text": " set of licenses which enable open source collaborations and through this presentation", "tokens": [50952, 992, 295, 32821, 597, 9528, 1269, 4009, 36908, 293, 807, 341, 5860, 51236], "temperature": 0.0, "avg_logprob": -0.08157851744671257, "compression_ratio": 1.874493927125506, "no_speech_prob": 0.18378837406635284}, {"id": 9, "seek": 8680, "start": 104.24, "end": 110.96, "text": " we'll be taking you through all of these aspects to some extent I'll talk a bit about the hall of", "tokens": [51236, 321, 603, 312, 1940, 291, 807, 439, 295, 613, 7270, 281, 512, 8396, 286, 603, 751, 257, 857, 466, 264, 6500, 295, 51572], "temperature": 0.0, "avg_logprob": -0.08157851744671257, "compression_ratio": 1.874493927125506, "no_speech_prob": 0.18378837406635284}, {"id": 10, "seek": 8680, "start": 110.96, "end": 116.16, "text": " nations which has been used through this presentation as a metaphor it was a beautiful building", "tokens": [51572, 11035, 597, 575, 668, 1143, 807, 341, 5860, 382, 257, 19157, 309, 390, 257, 2238, 2390, 51832], "temperature": 0.0, "avg_logprob": -0.08157851744671257, "compression_ratio": 1.874493927125506, "no_speech_prob": 0.18378837406635284}, {"id": 11, "seek": 11616, "start": 116.16, "end": 123.52, "text": " an exhibition space in New Delhi built in 1972 it was built to house exhibitions the brief given", "tokens": [50364, 364, 14414, 1901, 294, 1873, 26680, 3094, 294, 32952, 309, 390, 3094, 281, 1782, 41522, 264, 5353, 2212, 50732], "temperature": 0.0, "avg_logprob": -0.07205323169105932, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.08362024277448654}, {"id": 12, "seek": 11616, "start": 123.52, "end": 129.44, "text": " to the architects was that it must be able to exhibit objects of varying sizes from books to", "tokens": [50732, 281, 264, 30491, 390, 300, 309, 1633, 312, 1075, 281, 20487, 6565, 295, 22984, 11602, 490, 3642, 281, 51028], "temperature": 0.0, "avg_logprob": -0.07205323169105932, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.08362024277448654}, {"id": 13, "seek": 11616, "start": 129.44, "end": 136.88, "text": " satellites so the architects they came up with a design solution through the constraints of available", "tokens": [51028, 24960, 370, 264, 30491, 436, 1361, 493, 365, 257, 1715, 3827, 807, 264, 18491, 295, 2435, 51400], "temperature": 0.0, "avg_logprob": -0.07205323169105932, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.08362024277448654}, {"id": 14, "seek": 11616, "start": 136.88, "end": 143.28, "text": " building material available skill set cost constraints and all of that they broke convention", "tokens": [51400, 2390, 2527, 2435, 5389, 992, 2063, 18491, 293, 439, 295, 300, 436, 6902, 10286, 51720], "temperature": 0.0, "avg_logprob": -0.07205323169105932, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.08362024277448654}, {"id": 15, "seek": 14328, "start": 143.36, "end": 150.48, "text": " by imagining a building without pillars also the building material for it was not prefabricated", "tokens": [50368, 538, 27798, 257, 2390, 1553, 26729, 611, 264, 2390, 2527, 337, 309, 390, 406, 18417, 455, 1341, 770, 50724], "temperature": 0.0, "avg_logprob": -0.07791379928588867, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0037409814540296793}, {"id": 16, "seek": 14328, "start": 150.48, "end": 156.8, "text": " it was built on site coming back to tribe firstly I'll give a brief introduction about tribe", "tokens": [50724, 309, 390, 3094, 322, 3621, 1348, 646, 281, 17625, 27376, 286, 603, 976, 257, 5353, 9339, 466, 17625, 51040], "temperature": 0.0, "avg_logprob": -0.07791379928588867, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0037409814540296793}, {"id": 17, "seek": 14328, "start": 157.52, "end": 163.44, "text": " tribe has been progressively built to provide one language or a unified set of conventions", "tokens": [51076, 17625, 575, 668, 46667, 3094, 281, 2893, 472, 2856, 420, 257, 26787, 992, 295, 33520, 51372], "temperature": 0.0, "avg_logprob": -0.07791379928588867, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0037409814540296793}, {"id": 18, "seek": 14328, "start": 163.44, "end": 169.84, "text": " to the following three aspects relational database structure variable type handling in backend scripts", "tokens": [51372, 281, 264, 3480, 1045, 7270, 38444, 8149, 3877, 7006, 2010, 13175, 294, 38087, 23294, 51692], "temperature": 0.0, "avg_logprob": -0.07791379928588867, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0037409814540296793}, {"id": 19, "seek": 16984, "start": 170.4, "end": 177.12, "text": " and handling html input fields typically used in cms's to smoothen the data entry data editing", "tokens": [50392, 293, 13175, 276, 83, 15480, 4846, 7909, 5850, 1143, 294, 269, 2592, 311, 281, 5508, 268, 264, 1412, 8729, 1412, 10000, 50728], "temperature": 0.0, "avg_logprob": -0.08225056103297643, "compression_ratio": 1.625, "no_speech_prob": 0.006740754935890436}, {"id": 20, "seek": 16984, "start": 177.12, "end": 184.24, "text": " and moderation processes within a project a bit of info about our team we're a team of four we", "tokens": [50728, 293, 49471, 7555, 1951, 257, 1716, 257, 857, 295, 13614, 466, 527, 1469, 321, 434, 257, 1469, 295, 1451, 321, 51084], "temperature": 0.0, "avg_logprob": -0.08225056103297643, "compression_ratio": 1.625, "no_speech_prob": 0.006740754935890436}, {"id": 21, "seek": 16984, "start": 184.24, "end": 190.8, "text": " run a small services company called postcode it was through our collaborations that tribe was", "tokens": [51084, 1190, 257, 1359, 3328, 2237, 1219, 2183, 22332, 309, 390, 807, 527, 36908, 300, 17625, 390, 51412], "temperature": 0.0, "avg_logprob": -0.08225056103297643, "compression_ratio": 1.625, "no_speech_prob": 0.006740754935890436}, {"id": 22, "seek": 16984, "start": 190.8, "end": 198.08, "text": " progressively built over the last three years we've done around 90 projects we've worked with", "tokens": [51412, 46667, 3094, 670, 264, 1036, 1045, 924, 321, 600, 1096, 926, 4289, 4455, 321, 600, 2732, 365, 51776], "temperature": 0.0, "avg_logprob": -0.08225056103297643, "compression_ratio": 1.625, "no_speech_prob": 0.006740754935890436}, {"id": 23, "seek": 19808, "start": 198.08, "end": 205.44000000000003, "text": " various external development teams ux folks design studios and content teams we have used", "tokens": [50364, 3683, 8320, 3250, 5491, 344, 87, 4024, 1715, 24593, 293, 2701, 5491, 321, 362, 1143, 50732], "temperature": 0.0, "avg_logprob": -0.1295725554227829, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.0009100940078496933}, {"id": 24, "seek": 19808, "start": 205.44000000000003, "end": 212.56, "text": " tribe to build websites products applications android ios applications platforms and chatpots", "tokens": [50732, 17625, 281, 1322, 12891, 3383, 5821, 36157, 741, 329, 5821, 9473, 293, 5081, 79, 1971, 51088], "temperature": 0.0, "avg_logprob": -0.1295725554227829, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.0009100940078496933}, {"id": 25, "seek": 19808, "start": 214.96, "end": 223.76000000000002, "text": " in terms of tech stack the core backend tech stack is php mysql we use nginx as a web server", "tokens": [51208, 294, 2115, 295, 7553, 8630, 264, 4965, 38087, 7553, 8630, 307, 903, 79, 452, 82, 80, 75, 321, 764, 297, 1494, 87, 382, 257, 3670, 7154, 51648], "temperature": 0.0, "avg_logprob": -0.1295725554227829, "compression_ratio": 1.6235294117647059, "no_speech_prob": 0.0009100940078496933}, {"id": 26, "seek": 22376, "start": 224.32, "end": 231.12, "text": " and composer packages whenever required based on projects tribe provides api support with json", "tokens": [50392, 293, 26003, 17401, 5699, 4739, 2361, 322, 4455, 17625, 6417, 1882, 72, 1406, 365, 361, 3015, 50732], "temperature": 0.0, "avg_logprob": -0.10289771057838618, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.003270465414971113}, {"id": 27, "seek": 22376, "start": 231.12, "end": 238.72, "text": " api version 1.1 to support any kind of frontend we typically use uh nodejs applications on the", "tokens": [50732, 1882, 72, 3037, 502, 13, 16, 281, 1406, 604, 733, 295, 1868, 521, 321, 5850, 764, 2232, 9984, 25530, 5821, 322, 264, 51112], "temperature": 0.0, "avg_logprob": -0.10289771057838618, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.003270465414971113}, {"id": 28, "seek": 22376, "start": 238.72, "end": 246.39999999999998, "text": " frontend before we delve deep into the technicalities of how tribe works i'd like to talk a bit", "tokens": [51112, 1868, 521, 949, 321, 43098, 2452, 666, 264, 6191, 1088, 295, 577, 17625, 1985, 741, 1116, 411, 281, 751, 257, 857, 51496], "temperature": 0.0, "avg_logprob": -0.10289771057838618, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.003270465414971113}, {"id": 29, "seek": 22376, "start": 246.39999999999998, "end": 253.35999999999999, "text": " about why did we create tribe we needed more backend agility to support iterations of ux", "tokens": [51496, 466, 983, 630, 321, 1884, 17625, 321, 2978, 544, 38087, 39794, 281, 1406, 36540, 295, 344, 87, 51844], "temperature": 0.0, "avg_logprob": -0.10289771057838618, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.003270465414971113}, {"id": 30, "seek": 25336, "start": 253.36, "end": 258.88, "text": " content design and frontend decision making to work on how we build a more agile backend we", "tokens": [50364, 2701, 1715, 293, 1868, 521, 3537, 1455, 281, 589, 322, 577, 321, 1322, 257, 544, 30072, 38087, 321, 50640], "temperature": 0.0, "avg_logprob": -0.04332927653664037, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0019226919393986464}, {"id": 31, "seek": 25336, "start": 258.88, "end": 265.28000000000003, "text": " needed to know the things that slow down backend development so we figured out constraints of", "tokens": [50640, 2978, 281, 458, 264, 721, 300, 2964, 760, 38087, 3250, 370, 321, 8932, 484, 18491, 295, 50960], "temperature": 0.0, "avg_logprob": -0.04332927653664037, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0019226919393986464}, {"id": 32, "seek": 25336, "start": 265.28000000000003, "end": 271.12, "text": " database structure the rigid table structure does not allow us to constantly change the column names", "tokens": [50960, 8149, 3877, 264, 22195, 3199, 3877, 775, 406, 2089, 505, 281, 6460, 1319, 264, 7738, 5288, 51252], "temperature": 0.0, "avg_logprob": -0.04332927653664037, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0019226919393986464}, {"id": 33, "seek": 25336, "start": 271.12, "end": 278.64, "text": " and table names we wanted to accommodate the agility that json provides while taking advantage", "tokens": [51252, 293, 3199, 5288, 321, 1415, 281, 21410, 264, 39794, 300, 361, 3015, 6417, 1339, 1940, 5002, 51628], "temperature": 0.0, "avg_logprob": -0.04332927653664037, "compression_ratio": 1.7477064220183487, "no_speech_prob": 0.0019226919393986464}, {"id": 34, "seek": 27864, "start": 278.64, "end": 285.59999999999997, "text": " of indexing and caching and searchability that mysql provides then while coding api layers", "tokens": [50364, 295, 8186, 278, 293, 269, 2834, 293, 3164, 2310, 300, 452, 82, 80, 75, 6417, 550, 1339, 17720, 1882, 72, 7914, 50712], "temperature": 0.0, "avg_logprob": -0.04276132583618164, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0067857494577765465}, {"id": 35, "seek": 27864, "start": 286.32, "end": 291.91999999999996, "text": " we truly realize the importance of conventions looking at how json api has been drawn out really", "tokens": [50748, 321, 4908, 4325, 264, 7379, 295, 33520, 1237, 412, 577, 361, 3015, 1882, 72, 575, 668, 10117, 484, 534, 51028], "temperature": 0.0, "avg_logprob": -0.04276132583618164, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0067857494577765465}, {"id": 36, "seek": 27864, "start": 291.91999999999996, "end": 296.88, "text": " helped us think of more possibilities that could reduce time spent in backend development", "tokens": [51028, 4254, 505, 519, 295, 544, 12178, 300, 727, 5407, 565, 4418, 294, 38087, 3250, 51276], "temperature": 0.0, "avg_logprob": -0.04276132583618164, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0067857494577765465}, {"id": 37, "seek": 27864, "start": 297.76, "end": 303.59999999999997, "text": " variable type handling in php takes up a lot of time and was not very agile in our experience", "tokens": [51320, 7006, 2010, 13175, 294, 903, 79, 2516, 493, 257, 688, 295, 565, 293, 390, 406, 588, 30072, 294, 527, 1752, 51612], "temperature": 0.0, "avg_logprob": -0.04276132583618164, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0067857494577765465}, {"id": 38, "seek": 30360, "start": 304.56, "end": 310.24, "text": " in the collaborative process if for example we look from a content person's perspective", "tokens": [50412, 294, 264, 16555, 1399, 498, 337, 1365, 321, 574, 490, 257, 2701, 954, 311, 4585, 50696], "temperature": 0.0, "avg_logprob": -0.07092697074614375, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.004129562992602587}, {"id": 39, "seek": 30360, "start": 310.24, "end": 315.6, "text": " it seems like a very simple ask when they say they need a multi-select instead of a single", "tokens": [50696, 309, 2544, 411, 257, 588, 2199, 1029, 562, 436, 584, 436, 643, 257, 4825, 12, 405, 1809, 2602, 295, 257, 2167, 50964], "temperature": 0.0, "avg_logprob": -0.07092697074614375, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.004129562992602587}, {"id": 40, "seek": 30360, "start": 315.6, "end": 322.56, "text": " select such a simple ask can be a relatively complex task for a backend programmer especially", "tokens": [50964, 3048, 1270, 257, 2199, 1029, 393, 312, 257, 7226, 3997, 5633, 337, 257, 38087, 32116, 2318, 51312], "temperature": 0.0, "avg_logprob": -0.07092697074614375, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.004129562992602587}, {"id": 41, "seek": 30360, "start": 322.56, "end": 329.52000000000004, "text": " if it is on a project that is live with significant user data also we wanted to date simple cms", "tokens": [51312, 498, 309, 307, 322, 257, 1716, 300, 307, 1621, 365, 4776, 4195, 1412, 611, 321, 1415, 281, 4002, 2199, 269, 2592, 51660], "temperature": 0.0, "avg_logprob": -0.07092697074614375, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.004129562992602587}, {"id": 42, "seek": 32952, "start": 329.52, "end": 332.64, "text": " something that we could have across all our projects", "tokens": [50364, 746, 300, 321, 727, 362, 2108, 439, 527, 4455, 50520], "temperature": 0.0, "avg_logprob": -0.06042068903563452, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.001721192616969347}, {"id": 43, "seek": 32952, "start": 335.2, "end": 341.44, "text": " we wanted a single place to keep all our assets and uploads arranged by some convention so that", "tokens": [50648, 321, 1415, 257, 2167, 1081, 281, 1066, 439, 527, 9769, 293, 48611, 18721, 538, 512, 10286, 370, 300, 50960], "temperature": 0.0, "avg_logprob": -0.06042068903563452, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.001721192616969347}, {"id": 44, "seek": 32952, "start": 342.0, "end": 346.24, "text": " things are predictably located and can be looked for at a later stage", "tokens": [50988, 721, 366, 6069, 1188, 6870, 293, 393, 312, 2956, 337, 412, 257, 1780, 3233, 51200], "temperature": 0.0, "avg_logprob": -0.06042068903563452, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.001721192616969347}, {"id": 45, "seek": 32952, "start": 349.2, "end": 352.08, "text": " now let's go deeper in the architecture of tribe", "tokens": [51348, 586, 718, 311, 352, 7731, 294, 264, 9482, 295, 17625, 51492], "temperature": 0.0, "avg_logprob": -0.06042068903563452, "compression_ratio": 1.552325581395349, "no_speech_prob": 0.001721192616969347}, {"id": 46, "seek": 35208, "start": 353.03999999999996, "end": 359.44, "text": " one of the core elements of tribe is a config file called types.json", "tokens": [50412, 472, 295, 264, 4965, 4959, 295, 17625, 307, 257, 6662, 3991, 1219, 3467, 13, 73, 3015, 50732], "temperature": 0.0, "avg_logprob": -0.11427672155972185, "compression_ratio": 1.6225165562913908, "no_speech_prob": 0.007094907574355602}, {"id": 47, "seek": 35208, "start": 360.8, "end": 365.12, "text": " it is a pure json file that can be configured and reconfigured quickly", "tokens": [50800, 309, 307, 257, 6075, 361, 3015, 3991, 300, 393, 312, 30538, 293, 9993, 20646, 3831, 2661, 51016], "temperature": 0.0, "avg_logprob": -0.11427672155972185, "compression_ratio": 1.6225165562913908, "no_speech_prob": 0.007094907574355602}, {"id": 48, "seek": 35208, "start": 366.0, "end": 370.08, "text": " it defines the information architecture of the application with precision", "tokens": [51060, 309, 23122, 264, 1589, 9482, 295, 264, 3861, 365, 18356, 51264], "temperature": 0.0, "avg_logprob": -0.11427672155972185, "compression_ratio": 1.6225165562913908, "no_speech_prob": 0.007094907574355602}, {"id": 49, "seek": 35208, "start": 371.91999999999996, "end": 373.59999999999997, "text": " and it looks somewhat like this", "tokens": [51356, 293, 309, 1542, 8344, 411, 341, 51440], "temperature": 0.0, "avg_logprob": -0.11427672155972185, "compression_ratio": 1.6225165562913908, "no_speech_prob": 0.007094907574355602}, {"id": 50, "seek": 37360, "start": 374.24, "end": 382.88, "text": " and there are a few other terms that will help me explain types.json and its usage better", "tokens": [50396, 293, 456, 366, 257, 1326, 661, 2115, 300, 486, 854, 385, 2903, 3467, 13, 73, 3015, 293, 1080, 14924, 1101, 50828], "temperature": 0.0, "avg_logprob": -0.11200372378031413, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.005718389060348272}, {"id": 51, "seek": 37360, "start": 384.32000000000005, "end": 391.44, "text": " the first term is types a type can be thought of as a data model or a table in a database", "tokens": [50900, 264, 700, 1433, 307, 3467, 257, 2010, 393, 312, 1194, 295, 382, 257, 1412, 2316, 420, 257, 3199, 294, 257, 8149, 51256], "temperature": 0.0, "avg_logprob": -0.11200372378031413, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.005718389060348272}, {"id": 52, "seek": 37360, "start": 392.16, "end": 398.96000000000004, "text": " it is non-hierarchical as it you cannot have subtypes all types are equal on the hierarchy", "tokens": [51292, 309, 307, 2107, 12, 71, 811, 1178, 804, 382, 309, 291, 2644, 362, 1422, 874, 5190, 439, 3467, 366, 2681, 322, 264, 22333, 51632], "temperature": 0.0, "avg_logprob": -0.11200372378031413, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.005718389060348272}, {"id": 53, "seek": 39896, "start": 399.84, "end": 408.0, "text": " it can accommodate metadata which is extendable a basic example would be a description of a type", "tokens": [50408, 309, 393, 21410, 26603, 597, 307, 10101, 712, 257, 3875, 1365, 576, 312, 257, 3855, 295, 257, 2010, 50816], "temperature": 0.0, "avg_logprob": -0.11447484493255615, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0032542056869715452}, {"id": 54, "seek": 39896, "start": 408.79999999999995, "end": 413.35999999999996, "text": " it's singular or plural form or how it would be called in a different language", "tokens": [50856, 309, 311, 20010, 420, 25377, 1254, 420, 577, 309, 576, 312, 1219, 294, 257, 819, 2856, 51084], "temperature": 0.0, "avg_logprob": -0.11447484493255615, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0032542056869715452}, {"id": 55, "seek": 39896, "start": 413.35999999999996, "end": 416.47999999999996, "text": " this is how a type looks within types.json file", "tokens": [51084, 341, 307, 577, 257, 2010, 1542, 1951, 3467, 13, 73, 3015, 3991, 51240], "temperature": 0.0, "avg_logprob": -0.11447484493255615, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0032542056869715452}, {"id": 56, "seek": 39896, "start": 421.35999999999996, "end": 422.47999999999996, "text": " then there are modules", "tokens": [51484, 550, 456, 366, 16679, 51540], "temperature": 0.0, "avg_logprob": -0.11447484493255615, "compression_ratio": 1.5185185185185186, "no_speech_prob": 0.0032542056869715452}, {"id": 57, "seek": 42248, "start": 423.12, "end": 428.8, "text": " modules are equivalent to columns in a table or attributes in a model", "tokens": [50396, 16679, 366, 10344, 281, 13766, 294, 257, 3199, 420, 17212, 294, 257, 2316, 50680], "temperature": 0.0, "avg_logprob": -0.11583034306356352, "compression_ratio": 1.8681318681318682, "no_speech_prob": 0.04388466849923134}, {"id": 58, "seek": 42248, "start": 430.40000000000003, "end": 435.36, "text": " they allow for complex relational references for example you could reference and link", "tokens": [50760, 436, 2089, 337, 3997, 38444, 15400, 337, 1365, 291, 727, 6408, 293, 2113, 51008], "temperature": 0.0, "avg_logprob": -0.11583034306356352, "compression_ratio": 1.8681318681318682, "no_speech_prob": 0.04388466849923134}, {"id": 59, "seek": 42248, "start": 436.40000000000003, "end": 442.8, "text": " a module from one type to another module from another type or a module from one type could", "tokens": [51060, 257, 10088, 490, 472, 2010, 281, 1071, 10088, 490, 1071, 2010, 420, 257, 10088, 490, 472, 2010, 727, 51380], "temperature": 0.0, "avg_logprob": -0.11583034306356352, "compression_ratio": 1.8681318681318682, "no_speech_prob": 0.04388466849923134}, {"id": 60, "seek": 42248, "start": 442.8, "end": 449.20000000000005, "text": " dynamically link to another type because types are non-hierarchical modules allow types to be", "tokens": [51380, 43492, 2113, 281, 1071, 2010, 570, 3467, 366, 2107, 12, 71, 811, 1178, 804, 16679, 2089, 3467, 281, 312, 51700], "temperature": 0.0, "avg_logprob": -0.11583034306356352, "compression_ratio": 1.8681318681318682, "no_speech_prob": 0.04388466849923134}, {"id": 61, "seek": 44920, "start": 449.2, "end": 455.59999999999997, "text": " referenced thereby creating a hierarchy if needed modules themselves are non-hierarchical so sub", "tokens": [50364, 32734, 28281, 4084, 257, 22333, 498, 2978, 16679, 2969, 366, 2107, 12, 71, 811, 1178, 804, 370, 1422, 50684], "temperature": 0.0, "avg_logprob": -0.08711467291179456, "compression_ratio": 1.705069124423963, "no_speech_prob": 0.01635931059718132}, {"id": 62, "seek": 44920, "start": 455.59999999999997, "end": 464.4, "text": " modules cannot be created a module also defines usage in input fields for CMS like types metadata", "tokens": [50684, 16679, 2644, 312, 2942, 257, 10088, 611, 23122, 14924, 294, 4846, 7909, 337, 33124, 411, 3467, 26603, 51124], "temperature": 0.0, "avg_logprob": -0.08711467291179456, "compression_ratio": 1.705069124423963, "no_speech_prob": 0.01635931059718132}, {"id": 63, "seek": 44920, "start": 464.4, "end": 472.48, "text": " of modules is extendable this is an example of how modules look there are there are four", "tokens": [51124, 295, 16679, 307, 10101, 712, 341, 307, 364, 1365, 295, 577, 16679, 574, 456, 366, 456, 366, 1451, 51528], "temperature": 0.0, "avg_logprob": -0.08711467291179456, "compression_ratio": 1.705069124423963, "no_speech_prob": 0.01635931059718132}, {"id": 64, "seek": 44920, "start": 472.48, "end": 478.4, "text": " important aspects to notice here metadata starting with input underscore tells how the", "tokens": [51528, 1021, 7270, 281, 3449, 510, 26603, 2891, 365, 4846, 37556, 5112, 577, 264, 51824], "temperature": 0.0, "avg_logprob": -0.08711467291179456, "compression_ratio": 1.705069124423963, "no_speech_prob": 0.01635931059718132}, {"id": 65, "seek": 47840, "start": 478.4, "end": 485.28, "text": " module must be used in an input field metadata starting with list underscore tells how the", "tokens": [50364, 10088, 1633, 312, 1143, 294, 364, 4846, 2519, 26603, 2891, 365, 1329, 37556, 5112, 577, 264, 50708], "temperature": 0.0, "avg_logprob": -0.06402053598497735, "compression_ratio": 1.9379310344827587, "no_speech_prob": 0.006875723134726286}, {"id": 66, "seek": 47840, "start": 485.28, "end": 493.35999999999996, "text": " module must be listed in a list view metadata starting with var underscore defines how the", "tokens": [50708, 10088, 1633, 312, 10052, 294, 257, 1329, 1910, 26603, 2891, 365, 1374, 37556, 23122, 577, 264, 51112], "temperature": 0.0, "avg_logprob": -0.06402053598497735, "compression_ratio": 1.9379310344827587, "no_speech_prob": 0.006875723134726286}, {"id": 67, "seek": 47840, "start": 493.35999999999996, "end": 502.08, "text": " module must be utilized by the php backend scripts input underscore slug can be used as name of the", "tokens": [51112, 10088, 1633, 312, 28158, 538, 264, 903, 79, 38087, 23294, 4846, 37556, 1061, 697, 393, 312, 1143, 382, 1315, 295, 264, 51548], "temperature": 0.0, "avg_logprob": -0.06402053598497735, "compression_ratio": 1.9379310344827587, "no_speech_prob": 0.006875723134726286}, {"id": 68, "seek": 50208, "start": 502.08, "end": 509.59999999999997, "text": " variable in php name of the input field in the front end and the name of the json attribute", "tokens": [50364, 7006, 294, 903, 79, 1315, 295, 264, 4846, 2519, 294, 264, 1868, 917, 293, 264, 1315, 295, 264, 361, 3015, 19667, 50740], "temperature": 0.0, "avg_logprob": -0.07614014546076457, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.012768168933689594}, {"id": 69, "seek": 50208, "start": 509.59999999999997, "end": 518.72, "text": " in mysql json thereby combining all of these use cases then there are objects an object is an", "tokens": [50740, 294, 452, 82, 80, 75, 361, 3015, 28281, 21928, 439, 295, 613, 764, 3331, 550, 456, 366, 6565, 364, 2657, 307, 364, 51196], "temperature": 0.0, "avg_logprob": -0.07614014546076457, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.012768168933689594}, {"id": 70, "seek": 50208, "start": 518.72, "end": 527.04, "text": " instant instance of a model it is the equivalent of rows in a table it has a universal id that never", "tokens": [51196, 9836, 5197, 295, 257, 2316, 309, 307, 264, 10344, 295, 13241, 294, 257, 3199, 309, 575, 257, 11455, 4496, 300, 1128, 51612], "temperature": 0.0, "avg_logprob": -0.07614014546076457, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.012768168933689594}, {"id": 71, "seek": 52704, "start": 527.04, "end": 533.12, "text": " repeats this is particularly unique to the way tribe functions this allows for objects to be", "tokens": [50364, 35038, 341, 307, 4098, 3845, 281, 264, 636, 17625, 6828, 341, 4045, 337, 6565, 281, 312, 50668], "temperature": 0.0, "avg_logprob": -0.05434843210073618, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.03669985756278038}, {"id": 72, "seek": 52704, "start": 533.12, "end": 539.52, "text": " shifted from one type to another even after the application goes live and at any stage an object", "tokens": [50668, 18892, 490, 472, 2010, 281, 1071, 754, 934, 264, 3861, 1709, 1621, 293, 412, 604, 3233, 364, 2657, 50988], "temperature": 0.0, "avg_logprob": -0.05434843210073618, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.03669985756278038}, {"id": 73, "seek": 52704, "start": 539.52, "end": 546.7199999999999, "text": " is stored as a json object that retains the type and module structure in readable slugs rather than", "tokens": [50988, 307, 12187, 382, 257, 361, 3015, 2657, 300, 1533, 2315, 264, 2010, 293, 10088, 3877, 294, 49857, 1061, 14950, 2831, 813, 51348], "temperature": 0.0, "avg_logprob": -0.05434843210073618, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.03669985756278038}, {"id": 74, "seek": 52704, "start": 546.7199999999999, "end": 555.76, "text": " numbered references this is how an object looks like coming to uploads convention", "tokens": [51348, 40936, 15400, 341, 307, 577, 364, 2657, 1542, 411, 1348, 281, 48611, 10286, 51800], "temperature": 0.0, "avg_logprob": -0.05434843210073618, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.03669985756278038}, {"id": 75, "seek": 55576, "start": 556.56, "end": 564.0, "text": " uploads folder follows a very simple convention year month day currently on tribe image file", "tokens": [50404, 48611, 10820, 10002, 257, 588, 2199, 10286, 1064, 1618, 786, 4362, 322, 17625, 3256, 3991, 50776], "temperature": 0.0, "avg_logprob": -0.12900066375732422, "compression_ratio": 1.7251184834123223, "no_speech_prob": 0.0033147737849503756}, {"id": 76, "seek": 55576, "start": 564.0, "end": 570.0, "text": " versions are created automatically junction is our content management front end system", "tokens": [50776, 9606, 366, 2942, 6772, 33718, 307, 527, 2701, 4592, 1868, 917, 1185, 51076], "temperature": 0.0, "avg_logprob": -0.12900066375732422, "compression_ratio": 1.7251184834123223, "no_speech_prob": 0.0033147737849503756}, {"id": 77, "seek": 55576, "start": 571.4399999999999, "end": 578.48, "text": " it is a headless cms it is a front end system built on ember js which is a node js based framework", "tokens": [51148, 309, 307, 257, 1378, 1832, 269, 2592, 309, 307, 257, 1868, 917, 1185, 3094, 322, 846, 607, 42713, 597, 307, 257, 9984, 42713, 2361, 8388, 51500], "temperature": 0.0, "avg_logprob": -0.12900066375732422, "compression_ratio": 1.7251184834123223, "no_speech_prob": 0.0033147737849503756}, {"id": 78, "seek": 55576, "start": 579.28, "end": 585.04, "text": " it also connects to the uploads folder the view you are seeing is the least view of a", "tokens": [51540, 309, 611, 16967, 281, 264, 48611, 10820, 264, 1910, 291, 366, 2577, 307, 264, 1935, 1910, 295, 257, 51828], "temperature": 0.0, "avg_logprob": -0.12900066375732422, "compression_ratio": 1.7251184834123223, "no_speech_prob": 0.0033147737849503756}, {"id": 79, "seek": 58504, "start": 585.04, "end": 595.76, "text": " single type and this one is an editing view of a single object towards the end just reiterating", "tokens": [50364, 2167, 2010, 293, 341, 472, 307, 364, 10000, 1910, 295, 257, 2167, 2657, 3030, 264, 917, 445, 25211, 990, 50900], "temperature": 0.0, "avg_logprob": -0.10461334748701616, "compression_ratio": 1.660919540229885, "no_speech_prob": 0.0017803044756874442}, {"id": 80, "seek": 58504, "start": 595.76, "end": 604.0799999999999, "text": " our belief that convention is key to collaboration and word about licenses a tribe is in gpl version", "tokens": [50900, 527, 7107, 300, 10286, 307, 2141, 281, 9363, 293, 1349, 466, 32821, 257, 17625, 307, 294, 290, 564, 3037, 51316], "temperature": 0.0, "avg_logprob": -0.10461334748701616, "compression_ratio": 1.660919540229885, "no_speech_prob": 0.0017803044756874442}, {"id": 81, "seek": 58504, "start": 604.0799999999999, "end": 613.04, "text": " three junction which is the cms it uses the mit license and types dot json uses the creative", "tokens": [51316, 1045, 33718, 597, 307, 264, 269, 2592, 309, 4960, 264, 2194, 10476, 293, 3467, 5893, 361, 3015, 4960, 264, 5880, 51764], "temperature": 0.0, "avg_logprob": -0.10461334748701616, "compression_ratio": 1.660919540229885, "no_speech_prob": 0.0017803044756874442}, {"id": 82, "seek": 61304, "start": 613.12, "end": 621.52, "text": " commons license that's image called see raj reval associates the people who built the beautiful", "tokens": [50368, 800, 892, 10476, 300, 311, 3256, 1219, 536, 36007, 319, 3337, 36914, 264, 561, 567, 3094, 264, 2238, 50788], "temperature": 0.0, "avg_logprob": -0.25615521481162623, "compression_ratio": 1.4655172413793103, "no_speech_prob": 0.0067319972440600395}, {"id": 83, "seek": 61304, "start": 621.52, "end": 638.88, "text": " building a few shots of the building and that's it then thank you everyone", "tokens": [50788, 2390, 257, 1326, 8305, 295, 264, 2390, 293, 300, 311, 309, 550, 1309, 291, 1518, 51656], "temperature": 0.0, "avg_logprob": -0.25615521481162623, "compression_ratio": 1.4655172413793103, "no_speech_prob": 0.0067319972440600395}, {"id": 84, "seek": 64304, "start": 643.04, "end": 644.42, "text": " you", "tokens": [50404, 291, 50433], "temperature": 0.0, "avg_logprob": -0.7706074714660645, "compression_ratio": 0.2727272727272727, "no_speech_prob": 0.40523630380630493}], "language": "en"}