{"text": " Hello. So yeah, I'm talking about PyScrip. So I'm trying to get a catchy title, so it's kind of like a clickbait. So with PyScrip, we replace Django. So maybe a lot of people will be like really, you know, sparking their interest because I mentioned Django, which is a very popular framework for web. But today, I'm not going to talk too much about Django, but I'm mainly going to talk about PyScrip. And I would have some crazy demo at the end, which is very interesting. So you may not want to miss it. But the most important thing is that this is the link to the slides. I should have used some QR code, but kind of lazy. So it's just the link that you could, you know, find the slide deck. It is also uploaded to the FOSTA website. You can find it to follow along if you can't see it very well or anything happened, then you can look at the slides. And all the links are there as well. So I hope that since you're here, you have heard of PyScrip, but who, how much do you know about PyScrip? Like, except that it's something to do with Python? So, yeah, silence. So, yeah. So I think most people that match, I've talked about PyScrip, and then they said that they have heard about PyScrip. They may have read a block or two about PyScrip. It's something that's relatively new. So that's why I think it's important to kind of, you know, to put information together so people have something to, you know, look at when they want to know more about PyScrip. So, by the way, I'm checked. Why am I talking about PyScrip? Why sounds like I know a lot about PyScrip? Because I work in Alaconda. So PyScrip is developed by a team in Alaconda. So I work with them a lot. So I have, you know, kind of, you know, very close to the source. So I kind of have some like information about what's the newest thing about PyScrip. And I love open source project. I have been involved in open source project in the past. I just want to put more pictures there. So that's why I put it here. And I organize a lot of events. So let's jump into it. What is PyScrip? PyScrip is actually a framework. Some people think that PyScrip is a new language, but it's not. It's actually Python. But this, you know, you can write Python in your HTML file. That's what it is. And also, like, it's, or it's a framework. Why? Because later you'll see why. We say PyScrip is a framework because of how you can change the backend and other stuff. So it lets you run Python application in the browser. Basically, it just means that you can, well, you can run, you know, you can write Python script as just like you run, like you write JavaScript in the HTML file. And then the browser would understand what you want it to do, and they would do something. So, but it's not trying to repage JavaScript. You can actually use it with JavaScript. For example, I'm using it with the D3 library, which is crazy. Who knows about D3? Yes. Okay, good. Okay. I'm not, like, speaking to other people. Yeah, it's good. So I will show something more like later. So basically, you can actually parse the objects back and forth. So you can change a Python object into JavaScript object, and then your JavaScript library, like D3, will understand it or the other way around. So it is something that is quite new. So also, so all these things that I talk about that you can, like, change the Python object into JavaScript object, all these stuff won't be happening if we don't have the PyLDI project, which they is, by the way, for those of you who haven't heard, it's kind of, it started as a monselors project called iLDI. They try to, like, have a lot of things that is, like, run, you know, in a WESM, WebAssembly, so the browser can run it. And then there's a, so within that, all those projects, there's a Python, you know, project that is actually, like, converting Python into WebAssembly. So that's the PyLDI project. So that's actually allowed you to run the Python. So without it, like, actually, PyScript won't work. So, well, PyScript will still work. You can change the backend, but, like, it started with PyLDI. Sorry, I'm, like, kind of, I'm trying to be correct in what I'm saying. But the main thing is that you need to, kind of, compile Python into a WebAssembly. So PyLDI is, like, the kind of one of the most popular one that is, like, having the whole, more or less, the whole thing that your standard Python offer is actually compiled into WebAssembly, so you can run Python on the browser. But there's also other things that we are trying, the team is trying now. For example, they are trying to compile MicroPython, which is a lighter version of Python, into WebAssembly. So it more or less works the same, but you have some kind of Python functionality that is not available on MicroPython. So you can actually choose which one you want to use. And also, because one thing about the PyLDI project that is, that is, why it, why it is the first one that PyScript adopts and why is the first one that is, like, why is it so popular? Because the project itself also provides a lot of Python packages. For example, those that we use a lot, for example, NumPy, like, scientists and data scientists use a lot, it's like, like, some of NumPy, SciPy, Cyclo and all those actually are quite difficult to run on the browser because they are not pure Python. So for pure Python, if you have a Python interpreter that actually is compiling to Wasm, of course you can do it because they are just Python, but something like NumPy, SciPy, Cyclo and they are not pure Python, then it's a bit tricky, but PyLDI project also provides that. So now we can also run those very complicated Python packages on the browser, which is cool. So I will show you a little bit of the PyScript basic and then I'll show you the demo and then, like, all the questions will come at the end. Is it too small? I don't know how to zoom in though. That's why the link is important at the beginning. So I can explain, but the content of this code is not the most important thing. It's just like how a typical PyScript will look like. So I'm just talking about this section here. So for the first two lines here, you don't need to see it, but I'm telling you what it is. It's just like when you have a JavaScript code, you would actually have a, probably you have a CSS, which is like the style of how your website would look like, the style sheet, and then you have a JavaScript that you kind of put in and then you can run all these, like, JavaScript functions that you have. So this is actually something like a path to a PyScript.js that's hosted on the PyScript.net. This is actually what allows you to write Python on the websites, on your HTML file. Well, you may ask, like, why is it.js? This is just how awesome work. So we have to follow the standard. So yeah, that's.js, but that's not important. You're not writing JavaScript, so don't worry about it. Next is there is a section that you can actually write Python code. So here is just some NumPy code that is plotting some NumPy random numbers. Okay. So here, like, if it's, sorry, I'm not expecting the room to be this big. So if you can see it, so the first line is basically a HTML tag and it's PyScript, and then it also has a little bit of settings, like output equals to plot and stuff like that. And it is just a Python script. It's just like input NumPy, input Mapolyb, and all that stuff. And then it's, you know, it's Python code. It's just like, you know, you can copy and paste your Python code there. It's more or less the same thing. And the other thing that you may have when you are using PyScript is a PyConfig file. So this PyConfig file is actually, there's multiple format that is supported in this example. It's in JSON format. It's just a JSON file with, like, saying packages is NumPy and Mapolyb, because we are using it in the code, in the Python code. That's why we have to, like, put it there to say that we are using those packages, kind of like your PIP install. It's like putting it in your, in the environment, within your browser. So that's what it does. So this is the code. That's typically how it looks like. One catch is that it's using the latest version in the first two lines there. So if you don't want to, you know, break your code, you can pin a version. Now you can also pin a specific version with the releases and then the version number. Now we are named. We are, we are, we are tacking it as, like, the year, month, date, year month, probably, and then the versions. So, so yeah, you, if, for example, you don't want it to, because now PyScript is still changing a lot. So if you don't want your code to be not working next month, so you may want to pin the version until you want to update it manually when you look at the code again and update it. You can do it. So don't worry about it. I know people will have questions about it. Or you may think that, oh, like, you know, you're a web developer and, like, you, you don't like the CDN, like, calling in from another website that you have no control of, you know, if that website got attacked or something that won't work, it may be very dangerous. You can host it yourself. You can download that two things, you know, the, the, the style sheet and the JavaScript code yourself and, you know, and, and the other things with it as well. There's, there's also a few other things, but they're all downloadable. You can download it and host it yourself if you want to. So, uh, it's getting more complicated because, you know, now we're, like, the PyScript is getting, like, more developed and now there's more things you can config about how PyScript works. So the PyConfig tag is where you can change all those. So first of all, the tag itself, so we're, within inside, there's multiple format you can use. There's the Tomo format, which is the default. So if you don't tell this tag what format you're writing, so it would just assume you're using a Tomo format. So in this demo here, it says, like, packages and, and paths, so it's just, like, you know, what package you're putting in just, like, again, like the pigment store thing you have to, there's an environment within the browser that's running the other PyScript code. So you have to first say what packages you are using, so, uh, to allow it to be usable. Um, the JSON format, again, it's just different format. It's more or less the same thing. Or you can actually have another source. You can write your file in another, for example, either, either JSON file or Tomo file. You can also put it in because, well, you know, you don't want everything to be in your HTML file, right? So you can actually put in other source as well. And also, um, yeah, the PyConfig tag is, uh, it's not just used for putting all your packages and other stuff. There's also other things that you could, uh, you could set in a PyConfig tag. So, you know, you can also host the wheel of the, of the packages. It doesn't need to be using the one that's provided by PyOdi. Um, you can also, if you have your, like, for example, in Python, you can actually import your local script as well. You can also do that. Uh, you can, uh, you can do it by the fetch tag. Uh, but, uh, I'm not showing it here. You can, if you're interested, you can look at the documentation of PyScript. It will show you how to use the fetch tag to actually load in, uh, your other Python script. You can do it as well. Um, you can change the runtime setting, like I said before, uh, because PyOdi is the default one at the, when we first started having PyScript. Now, uh, is, is, I think it's like in development that, like, you can actually change the backend, like, which one time you want to use. If you, like, for example, just want to do some demonstration with Python or you are using, it's a tool to teach, uh, kids how to code in this. You may not want to use PyOdi because it's slow, it's heavy, it's, like, powerful, and it's useful, useful for other things. You can use MicroPython, which take no time to load, um, but it provides some other basic Python, um, code that you could write, uh, in the HTML file. So you can quickly teach someone Python without installing Python and just, like, running, running it on the HTML file. Um, you can also add some metadata. For example, you know, you want to add the author who write this script and the license. You can also do that. No problem. So, uh, another thing that, uh, you may put in your HTML file while you are using PyScript is the PyRepoll, uh, is something that's just like Jupyter Notebook. If you have Jupyter Notebook, you know, it's, like, very nice, um, repo that you can, like, put in the Python code, shift, enter, and then it will execute and give you the result. Um, you can also embed that in your HTML page when you are using PyScript. So you just need to do the same thing, you know, having those two lines of the style sheet and the, um, PyScript.js. And then you can just put the PyRepoll tag and then you will have a Jupyter-like repo that you could use in your site. So why is it so useful, right? Like, uh, it's a new thing, it's exciting, but can I really use it? Um, or is it just a fun thing to do? Um, why doing it on the front-end, right? Like, now you can have, like, application, like Django, like I said, it's a kind of people love Django. And like, I, you know, uh, why do we want PyScript? Um, because sometimes, like, things just need to be run on the front-end. Sometimes, like, we can't really, um, rely on, you know, uh, an application like Django or other Python application to handle all this Python code. Um, for example, if you don't want to use up all your resources, right? Like, if you have a back-end and then the back-end is actually hosted by you or the cloud service that you pay for, if there's a lot of user and like the, if every single user had a very, like, um, heavy use of your resources, then the bills can be expensive. And then you may not want that. You want to maybe, um, you know, give, give back the low into the, the users who is using it, right? So you could, you could maybe push things to the front-end. Um, on all, if I've heard, like, maintainers said that, like, they may want people to try out their code, you know, you can build a sandbox that let people to, um, to run it. Like, for example, a lot of the data science stuff, you know, uh, for example, the NumPy, SciPy, they, they will have, before they will have the binder thing that actually load in, you know, another application, you know, that have the, have the back-end and then they could run some code there to do it as an example. But for these services, uh, they're provided, if they're provided for free, usually they're quite slow or, you know, they have limits. So, um, if you want to provide a, uh, a sandbox for, for users, if it can run on their machine, you don't have to worry about people abusing it as well. Like, for example, some people, if you, that whoever run whatever on your sandbox, they could do crypto mining and then it's not a good thing. So if it's on the front-end, it's, it's using the user's resources, not your resources, which if they want to mine Bitcoin, it's fine. It's on their machine or on your machine, you don't have to pay the bill. Um, also, uh, sometimes, uh, we have applications that, for example, it's some, uh, research data, some medical data, very sensitive. Uh, so you, you can't really, you know, it's like the rules that you, the, the, the data can't leave the machine. So you can't send it to a back-end somewhere to do it. Then, you know, um, maybe you can provide that, you know, provide the code that, um, you know, someone can use it to run on the browser. So it's run on their machine. So instead of, you know, you have, you have built the application and they have to send the data over to your app or whatever the back-end is and then, uh, to run the application. So it's also easier to set up as well. Otherwise, you may have to provide a separate secure environment with the whole kind of, uh, set up of the back-end and the front-end together and stuff. You know, uh, if you just have the front-end, it's much easier. You don't have to worry about it. So, uh, with high script, with page Django, I know that you already know the answer is no, but, uh, actually it's very fun if you use them together. Um, I will show you a few things that I like, uh, that is done by either me or some of my friends. There's actually quite cool things that we have used, like both Django and high script. So, uh, for example, this is what I have done with, um, can I just pass away? Yeah, okay. So this is something that I've done. It's like, uh, using high script with, uh, with Django that I've, so this is what I, I will show you what it is first and then I would explain. So here, this is the thing. I think this one, this one I can assume is cool. So this is a recommender system, right? So I have all these movies that I download from the movie dataset on, uh, cargo and then, um, is there, there are a bunch of ratings. So this recommender, if you put in a movie that you like, if you try to find all the potential movie that you like after, for example, I always like putting Iron Man because I know it works. And then give me five recommendations. If I like Iron Man, what else would you recommend me? And then if I click recommend, and I've got five of them, right? So most of them sci-fi, sci-fi movie, which is quite cool. Um, there's also the Dark Knight, which is, I think it's the, the movie about the Batman, which is also, I like it. Um, so yeah, that's nice. Um, so, but this thing, right? This thing, usually you think of, oh, it's like a machine learning thing, right? It's a, uh, it's a recommend, recommender system. You know, can I run it on the front end? Yes, you can. As long as you have your model already trained, then, um, for example, in my example here, actually you have a link to see the, the, uh, the, how it's set up. If you click on this link, uh, it will show you how I set it up. So you can play around yourself as well. So, um, what I did is just like, I, of course, I download the data as a gif, and you have to have the data to make it work, right? Um, and then after that, you just, uh, you know, run, run some of this script. You can actually do, do it in a more beautiful way. I'm just using some command line to run all this script to load in the data to, uh, to train your model and stuff. You can do it with other ways. For example, you have a user, uh, a mean user interface, right? They upload a new data and other stuff. Then, uh, it will automatically retrain the model when there's new data. You can set that up as well, but it's just a demo. So this is like this. But after that, there will be a model that's already, um, trained. It will deploy to the front end. And then in the front end, that's how this come in. That's like, that's how it works. So this is just a trained model. It's very lightweight. Um, and then you don't have to host all the data. It could be done somewhere else. But, uh, for the user, they, you know, they have a trained model and then they just need to put in the input and it will give you some results. So if a machine learning model deployed on the front end, another thing that my friend has done, which is quite cool, is front end as a back end. So it's, it's running Django on the browser. So yes, this is so small, but yeah, someone has done it. Um, this is not my doing. So I, I, I don't like, uh, you know, I don't have any responsibility, but you know, have a look. So this is actually like you have, so you have two, basically you have two browser, two, uh, browser, like HTML page. One page is the server. One page is the front end. So this is what it is. So you have a back end and a front end on the same page. Yay. Um, so yeah, you can do that. So I, I was like, oh, this is a bit fun, but is it useful? But my friend here, Hugo told me that you can actually use it to test things because you now can run an application on the browser. So everybody have a browser. So you can, you can run an application on it, which is very cool. So, um, yeah, check that out. Um, other things that I use pie square four is not, uh, with Django is, uh, with, uh, other things, for example, use it together with D3. I have this example here. I already preload them because I, I'm not going to like fool you. It's actually take quite a while to load. So that's why I preload them. Um, but yeah, but because I'm using the whole kind of package, right? Here I'm using network X. I have put in a network graph. I have all these network analysis, which is super cool. But, you know, I don't like the network X, uh, visualization because it's kind of basic. So that's why I use D3 for the visualization. I can do this, right? Very cool animation. I can click on things and things change. You know, now I see all the neighbors are colored coded. Um, so yeah, like, uh, you can combine the cool stuff that JavaScript provide, for example, D3 and the cool stuff that Python provide, which is all these like data science stuff, which is cool. Um, also there are other plots as well. You know, um, before, you know, it's, you know, you can't have these interactive, um, things that you could, you know, interactive graph done easily on your website. Um, so yeah, and also a map as well. This is not again, not my demo, but, you know, you can now have this map thingy where you can use folium, which is a, again, Python library. Now you can use it on the browser. Super cool. Um, yeah. And also I have actually a, start building a Pyscript tutorial. Again, this is working progress because things keep changing. I can't keep it up, but, um, if you're interested, if you want to try it, that may be a place you want to have a look at. Um, so yeah, all of these slides, again, is this on the slide. So, uh, yeah, so download my slides if you need to. So, uh, I think I don't, don't have too much, um, time left. I would, uh, I would like to answer your questions, but there are these common questions that I would also ask and answer myself. So, for example, people ask me, can you pull in a Python script? Yes, you can. You can use the fashion now, look at the documentation if you want to. Um, what Python version you're using, it depends on the runtime, which is the, again, PyConfig settings that you could, um, you know, uh, that you can look at it and see which one you want to use, you know, PyOdi version, which version you want to use, you can choose it yourself. And, uh, you know, why we can't do it like JavaScript, having script tag equals to Python, because, uh, this is so new, all the, uh, browsers, they don't support it yet, so we have to make a custom tag, which is PyScript. Okay. Uh, why don't you just use PyOdi? I think PyScript is just easier to use. PyOdi is very nice, um, but, you know, uh, sometimes get quite complicated for beginners, especially, um, also you can change the runtime with PyScript. So it's not just PyOdi, you can, again, you know, there's, my colleague is now working on a compiled version of Michael Python. It would be much faster, much, much more lightweight. So try that. Um, a bunch more other things. So, uh, can you pin a version of the light, of the packages that you use? If you want, well, if you want, then you better host the wheel yourself than, you know, which version you're using, and it's there frozen and changed forever. Um, so also some, do you know Brighton? Maybe some of you have heard about Brighton. So Brighton is a project that tried to, uh, translate Python into JavaScript and then run it in the browser. Um, the difference is that PyScript actually is not using JavaScript, it's actually using Wasm. So, uh, Python is compiled to Wasm, so, uh, more packages is available. Um, so yeah, also you can, again, change the runtime, the backend, which one you want to use. Beware, as someone mentioned, Beware in my previous talk. Uh, so yes, I would love to, I would love to see more support for Beware, but I can't say for the company, so I'm not saying that. Um, yeah, so, uh, that's the end of my talk. I know I have a few minutes left for Q and A, so, or if you didn't get the sticker at the beginning, come to talk to me, I'll give you a sticker. Thank you. Uh, we have a few minutes for questions and, uh, before the questions, I want to thank everyone for joining the Python Dev Room. And I want to thank also Eric Gasoni, uh, my friend who organized, uh, all of the planning of the day and, um, everything upstream. Um, and he made a great worry for the, yeah, all the selection of the speakers are planning everything. He couldn't make it here today, but, um, I really want to, to thank him as well. Thanks everybody. And thanks to Arnaud also for joining me today, uh, to help the Dev Room. Uh, questions, yeah. Hi, uh, thank you for the wonderful talk. Uh, PyScript is, uh, very exciting. Uh, I know people are using WebAssembly to run untrusted code in the browser. You can use it like a sandbox. So, uh, it's very exciting. But my question is, so you are importing packages. Is that easy to do? Do the packages have to be on the machine already? Yeah. So, uh, if you have internet connection, so the, uh, package, if you just simply put in like, you know, in the PyConfig, you put in package equals to something. So those will be actually proved from whatever PyAlgize provided. So it needs to be loaded from online. So you'll see if you have a web page, it will take quite a while to load. But you also have an alternative that you can download the will of the package. As long as that will is purely written in Python. So something like, uh, NumPy, SciPy, those, because they have extension, they are not purely written in Python. Those, you don't have an option. You have to use the one that PyAlgize provided. But otherwise, if it's in other library, for example, first you will see, you know, it's purely written in Python. You can download the will and it can run locally. Yeah. Yeah. My question is about mudplotlib. It's okay. But, um, how is this base map or cartoply? Can it be used also? Uh, mudplotlib, sorry. Mudplotlib is for graphics, but if you have cards, maps, base map, can such a tool also be used then in the browser? Yeah. Most of the library that if it's available in Python, it will also be available. So, it must be pure Python or it's, uh, I'm not sure. I don't know. I try. Yeah. So you have, you have to check like the library that you want to import. Is it purely in Python or not? So, yeah. I'm a bit confused because, uh, the, what we loaded in the browser is a JavaScript module. So is there some WebAssembly somewhere? Yeah. So you see the script that was import is.js, right? But actually that's a WebAssembly. It's just that the standard, the WebAssembly standard is like, when my team provided, like, when they released the thing, which is in WebAssembly, but it's, the extension is.js. It's a bit confusing, but actually it's in WebAssembly. It's not in JavaScript. It's just how the WebAssembly kind of standard work. You have a JS file somehow after you have, will, you know, then the release, the build, and the source. It become, I thought you guessed. We have time for one more question. If you have one. Yeah, there. Thanks for your talk. Um, does PyScript use any web workers? And if so, how do, can you control them? There's the web. Sorry. Does PyScript use any web workers? Like, does your code run parallel? It's purely in the browser. So, um, if you host everything locally, actually, is, is, is just on the browser. So there's no web worker that communicate with other applications. Yeah. How does it, does it all came in with different browsers or Firefox, Chrome? Because I guess it depends on your, your browser supporting that. Yeah. Now definitely work on Chrome. Uh, Firefox, maybe others. I can't guarantee you. Yeah. Yeah. Yeah. But it's very young, the project. So later it will be more support.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 17.04, "text": " Hello. So yeah, I'm talking about PyScrip. So I'm trying to get a catchy title, so it's", "tokens": [2425, 13, 407, 1338, 11, 286, 478, 1417, 466, 9953, 50, 1142, 79, 13, 407, 286, 478, 1382, 281, 483, 257, 47168, 4876, 11, 370, 309, 311], "temperature": 0.0, "avg_logprob": -0.29552833943427365, "compression_ratio": 1.4858757062146892, "no_speech_prob": 0.21318580210208893}, {"id": 1, "seek": 0, "start": 17.04, "end": 21.6, "text": " kind of like a clickbait. So with PyScrip, we replace Django. So maybe a lot of people", "tokens": [733, 295, 411, 257, 2052, 41274, 13, 407, 365, 9953, 50, 1142, 79, 11, 321, 7406, 33464, 17150, 13, 407, 1310, 257, 688, 295, 561], "temperature": 0.0, "avg_logprob": -0.29552833943427365, "compression_ratio": 1.4858757062146892, "no_speech_prob": 0.21318580210208893}, {"id": 2, "seek": 0, "start": 21.6, "end": 25.92, "text": " will be like really, you know, sparking their interest because I mentioned Django, which", "tokens": [486, 312, 411, 534, 11, 291, 458, 11, 9908, 278, 641, 1179, 570, 286, 2835, 33464, 17150, 11, 597], "temperature": 0.0, "avg_logprob": -0.29552833943427365, "compression_ratio": 1.4858757062146892, "no_speech_prob": 0.21318580210208893}, {"id": 3, "seek": 2592, "start": 25.92, "end": 35.2, "text": " is a very popular framework for web. But today, I'm not going to talk too much about Django,", "tokens": [307, 257, 588, 3743, 8388, 337, 3670, 13, 583, 965, 11, 286, 478, 406, 516, 281, 751, 886, 709, 466, 33464, 17150, 11], "temperature": 0.0, "avg_logprob": -0.15002100944519042, "compression_ratio": 1.5646551724137931, "no_speech_prob": 8.573323430027813e-05}, {"id": 4, "seek": 2592, "start": 35.2, "end": 39.36, "text": " but I'm mainly going to talk about PyScrip. And I would have some crazy demo at the end,", "tokens": [457, 286, 478, 8704, 516, 281, 751, 466, 9953, 50, 1142, 79, 13, 400, 286, 576, 362, 512, 3219, 10723, 412, 264, 917, 11], "temperature": 0.0, "avg_logprob": -0.15002100944519042, "compression_ratio": 1.5646551724137931, "no_speech_prob": 8.573323430027813e-05}, {"id": 5, "seek": 2592, "start": 39.36, "end": 46.96, "text": " which is very interesting. So you may not want to miss it. But the most important thing", "tokens": [597, 307, 588, 1880, 13, 407, 291, 815, 406, 528, 281, 1713, 309, 13, 583, 264, 881, 1021, 551], "temperature": 0.0, "avg_logprob": -0.15002100944519042, "compression_ratio": 1.5646551724137931, "no_speech_prob": 8.573323430027813e-05}, {"id": 6, "seek": 2592, "start": 46.96, "end": 52.8, "text": " is that this is the link to the slides. I should have used some QR code, but kind of lazy. So", "tokens": [307, 300, 341, 307, 264, 2113, 281, 264, 9788, 13, 286, 820, 362, 1143, 512, 32784, 3089, 11, 457, 733, 295, 14847, 13, 407], "temperature": 0.0, "avg_logprob": -0.15002100944519042, "compression_ratio": 1.5646551724137931, "no_speech_prob": 8.573323430027813e-05}, {"id": 7, "seek": 5280, "start": 52.8, "end": 58.239999999999995, "text": " it's just the link that you could, you know, find the slide deck. It is also uploaded to the", "tokens": [309, 311, 445, 264, 2113, 300, 291, 727, 11, 291, 458, 11, 915, 264, 4137, 9341, 13, 467, 307, 611, 17135, 281, 264], "temperature": 0.0, "avg_logprob": -0.18827497959136963, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.061400250066072e-05}, {"id": 8, "seek": 5280, "start": 58.239999999999995, "end": 64.32, "text": " FOSTA website. You can find it to follow along if you can't see it very well or anything happened,", "tokens": [479, 4367, 8241, 3144, 13, 509, 393, 915, 309, 281, 1524, 2051, 498, 291, 393, 380, 536, 309, 588, 731, 420, 1340, 2011, 11], "temperature": 0.0, "avg_logprob": -0.18827497959136963, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.061400250066072e-05}, {"id": 9, "seek": 5280, "start": 64.32, "end": 73.36, "text": " then you can look at the slides. And all the links are there as well. So I hope that since you're", "tokens": [550, 291, 393, 574, 412, 264, 9788, 13, 400, 439, 264, 6123, 366, 456, 382, 731, 13, 407, 286, 1454, 300, 1670, 291, 434], "temperature": 0.0, "avg_logprob": -0.18827497959136963, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.061400250066072e-05}, {"id": 10, "seek": 5280, "start": 73.36, "end": 79.44, "text": " here, you have heard of PyScrip, but who, how much do you know about PyScrip? Like, except that it's", "tokens": [510, 11, 291, 362, 2198, 295, 9953, 50, 1142, 79, 11, 457, 567, 11, 577, 709, 360, 291, 458, 466, 9953, 50, 1142, 79, 30, 1743, 11, 3993, 300, 309, 311], "temperature": 0.0, "avg_logprob": -0.18827497959136963, "compression_ratio": 1.5789473684210527, "no_speech_prob": 4.061400250066072e-05}, {"id": 11, "seek": 7944, "start": 79.44, "end": 90.0, "text": " something to do with Python? So, yeah, silence. So, yeah. So I think most people that match,", "tokens": [746, 281, 360, 365, 15329, 30, 407, 11, 1338, 11, 12239, 13, 407, 11, 1338, 13, 407, 286, 519, 881, 561, 300, 2995, 11], "temperature": 0.0, "avg_logprob": -0.10988396185415762, "compression_ratio": 1.751131221719457, "no_speech_prob": 6.892981036799029e-05}, {"id": 12, "seek": 7944, "start": 90.0, "end": 93.67999999999999, "text": " I've talked about PyScrip, and then they said that they have heard about PyScrip. They may have", "tokens": [286, 600, 2825, 466, 9953, 50, 1142, 79, 11, 293, 550, 436, 848, 300, 436, 362, 2198, 466, 9953, 50, 1142, 79, 13, 814, 815, 362], "temperature": 0.0, "avg_logprob": -0.10988396185415762, "compression_ratio": 1.751131221719457, "no_speech_prob": 6.892981036799029e-05}, {"id": 13, "seek": 7944, "start": 93.67999999999999, "end": 99.75999999999999, "text": " read a block or two about PyScrip. It's something that's relatively new. So that's why I think it's", "tokens": [1401, 257, 3461, 420, 732, 466, 9953, 50, 1142, 79, 13, 467, 311, 746, 300, 311, 7226, 777, 13, 407, 300, 311, 983, 286, 519, 309, 311], "temperature": 0.0, "avg_logprob": -0.10988396185415762, "compression_ratio": 1.751131221719457, "no_speech_prob": 6.892981036799029e-05}, {"id": 14, "seek": 7944, "start": 99.75999999999999, "end": 106.0, "text": " important to kind of, you know, to put information together so people have something to, you know,", "tokens": [1021, 281, 733, 295, 11, 291, 458, 11, 281, 829, 1589, 1214, 370, 561, 362, 746, 281, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.10988396185415762, "compression_ratio": 1.751131221719457, "no_speech_prob": 6.892981036799029e-05}, {"id": 15, "seek": 10600, "start": 106.0, "end": 111.2, "text": " look at when they want to know more about PyScrip. So, by the way, I'm checked. Why am I talking", "tokens": [574, 412, 562, 436, 528, 281, 458, 544, 466, 9953, 50, 1142, 79, 13, 407, 11, 538, 264, 636, 11, 286, 478, 10033, 13, 1545, 669, 286, 1417], "temperature": 0.0, "avg_logprob": -0.12673908847195287, "compression_ratio": 1.8449612403100775, "no_speech_prob": 7.69604739616625e-05}, {"id": 16, "seek": 10600, "start": 111.2, "end": 117.12, "text": " about PyScrip? Why sounds like I know a lot about PyScrip? Because I work in Alaconda. So PyScrip", "tokens": [466, 9953, 50, 1142, 79, 30, 1545, 3263, 411, 286, 458, 257, 688, 466, 9953, 50, 1142, 79, 30, 1436, 286, 589, 294, 967, 326, 12233, 13, 407, 9953, 50, 1142, 79], "temperature": 0.0, "avg_logprob": -0.12673908847195287, "compression_ratio": 1.8449612403100775, "no_speech_prob": 7.69604739616625e-05}, {"id": 17, "seek": 10600, "start": 117.12, "end": 122.88, "text": " is developed by a team in Alaconda. So I work with them a lot. So I have, you know, kind of,", "tokens": [307, 4743, 538, 257, 1469, 294, 967, 326, 12233, 13, 407, 286, 589, 365, 552, 257, 688, 13, 407, 286, 362, 11, 291, 458, 11, 733, 295, 11], "temperature": 0.0, "avg_logprob": -0.12673908847195287, "compression_ratio": 1.8449612403100775, "no_speech_prob": 7.69604739616625e-05}, {"id": 18, "seek": 10600, "start": 122.88, "end": 127.03999999999999, "text": " you know, very close to the source. So I kind of have some like information about what's the", "tokens": [291, 458, 11, 588, 1998, 281, 264, 4009, 13, 407, 286, 733, 295, 362, 512, 411, 1589, 466, 437, 311, 264], "temperature": 0.0, "avg_logprob": -0.12673908847195287, "compression_ratio": 1.8449612403100775, "no_speech_prob": 7.69604739616625e-05}, {"id": 19, "seek": 10600, "start": 127.03999999999999, "end": 131.68, "text": " newest thing about PyScrip. And I love open source project. I have been involved in open source", "tokens": [17569, 551, 466, 9953, 50, 1142, 79, 13, 400, 286, 959, 1269, 4009, 1716, 13, 286, 362, 668, 3288, 294, 1269, 4009], "temperature": 0.0, "avg_logprob": -0.12673908847195287, "compression_ratio": 1.8449612403100775, "no_speech_prob": 7.69604739616625e-05}, {"id": 20, "seek": 13168, "start": 131.68, "end": 136.32, "text": " project in the past. I just want to put more pictures there. So that's why I put it here. And", "tokens": [1716, 294, 264, 1791, 13, 286, 445, 528, 281, 829, 544, 5242, 456, 13, 407, 300, 311, 983, 286, 829, 309, 510, 13, 400], "temperature": 0.0, "avg_logprob": -0.08170973353025292, "compression_ratio": 1.5942622950819672, "no_speech_prob": 1.253897153219441e-05}, {"id": 21, "seek": 13168, "start": 136.32, "end": 146.64000000000001, "text": " I organize a lot of events. So let's jump into it. What is PyScrip? PyScrip is actually a framework.", "tokens": [286, 13859, 257, 688, 295, 3931, 13, 407, 718, 311, 3012, 666, 309, 13, 708, 307, 9953, 50, 1142, 79, 30, 9953, 50, 1142, 79, 307, 767, 257, 8388, 13], "temperature": 0.0, "avg_logprob": -0.08170973353025292, "compression_ratio": 1.5942622950819672, "no_speech_prob": 1.253897153219441e-05}, {"id": 22, "seek": 13168, "start": 146.64000000000001, "end": 152.48000000000002, "text": " Some people think that PyScrip is a new language, but it's not. It's actually Python. But this,", "tokens": [2188, 561, 519, 300, 9953, 50, 1142, 79, 307, 257, 777, 2856, 11, 457, 309, 311, 406, 13, 467, 311, 767, 15329, 13, 583, 341, 11], "temperature": 0.0, "avg_logprob": -0.08170973353025292, "compression_ratio": 1.5942622950819672, "no_speech_prob": 1.253897153219441e-05}, {"id": 23, "seek": 13168, "start": 152.48000000000002, "end": 158.96, "text": " you know, you can write Python in your HTML file. That's what it is. And also, like, it's, or it's", "tokens": [291, 458, 11, 291, 393, 2464, 15329, 294, 428, 17995, 3991, 13, 663, 311, 437, 309, 307, 13, 400, 611, 11, 411, 11, 309, 311, 11, 420, 309, 311], "temperature": 0.0, "avg_logprob": -0.08170973353025292, "compression_ratio": 1.5942622950819672, "no_speech_prob": 1.253897153219441e-05}, {"id": 24, "seek": 15896, "start": 158.96, "end": 166.08, "text": " a framework. Why? Because later you'll see why. We say PyScrip is a framework because of how you", "tokens": [257, 8388, 13, 1545, 30, 1436, 1780, 291, 603, 536, 983, 13, 492, 584, 9953, 50, 1142, 79, 307, 257, 8388, 570, 295, 577, 291], "temperature": 0.0, "avg_logprob": -0.1392898854521132, "compression_ratio": 1.6844444444444444, "no_speech_prob": 1.0114014912687708e-05}, {"id": 25, "seek": 15896, "start": 166.08, "end": 171.20000000000002, "text": " can change the backend and other stuff. So it lets you run Python application in the browser.", "tokens": [393, 1319, 264, 38087, 293, 661, 1507, 13, 407, 309, 6653, 291, 1190, 15329, 3861, 294, 264, 11185, 13], "temperature": 0.0, "avg_logprob": -0.1392898854521132, "compression_ratio": 1.6844444444444444, "no_speech_prob": 1.0114014912687708e-05}, {"id": 26, "seek": 15896, "start": 171.20000000000002, "end": 177.92000000000002, "text": " Basically, it just means that you can, well, you can run, you know, you can write Python script", "tokens": [8537, 11, 309, 445, 1355, 300, 291, 393, 11, 731, 11, 291, 393, 1190, 11, 291, 458, 11, 291, 393, 2464, 15329, 5755], "temperature": 0.0, "avg_logprob": -0.1392898854521132, "compression_ratio": 1.6844444444444444, "no_speech_prob": 1.0114014912687708e-05}, {"id": 27, "seek": 15896, "start": 178.64000000000001, "end": 185.92000000000002, "text": " as just like you run, like you write JavaScript in the HTML file. And then the browser would", "tokens": [382, 445, 411, 291, 1190, 11, 411, 291, 2464, 15778, 294, 264, 17995, 3991, 13, 400, 550, 264, 11185, 576], "temperature": 0.0, "avg_logprob": -0.1392898854521132, "compression_ratio": 1.6844444444444444, "no_speech_prob": 1.0114014912687708e-05}, {"id": 28, "seek": 18592, "start": 185.92, "end": 191.76, "text": " understand what you want it to do, and they would do something. So, but it's not trying to repage", "tokens": [1223, 437, 291, 528, 309, 281, 360, 11, 293, 436, 576, 360, 746, 13, 407, 11, 457, 309, 311, 406, 1382, 281, 1085, 609], "temperature": 0.0, "avg_logprob": -0.1801062610661872, "compression_ratio": 1.560483870967742, "no_speech_prob": 1.832192538131494e-05}, {"id": 29, "seek": 18592, "start": 191.76, "end": 197.2, "text": " JavaScript. You can actually use it with JavaScript. For example, I'm using it with the D3 library,", "tokens": [15778, 13, 509, 393, 767, 764, 309, 365, 15778, 13, 1171, 1365, 11, 286, 478, 1228, 309, 365, 264, 413, 18, 6405, 11], "temperature": 0.0, "avg_logprob": -0.1801062610661872, "compression_ratio": 1.560483870967742, "no_speech_prob": 1.832192538131494e-05}, {"id": 30, "seek": 18592, "start": 197.2, "end": 206.23999999999998, "text": " which is crazy. Who knows about D3? Yes. Okay, good. Okay. I'm not, like, speaking to other", "tokens": [597, 307, 3219, 13, 2102, 3255, 466, 413, 18, 30, 1079, 13, 1033, 11, 665, 13, 1033, 13, 286, 478, 406, 11, 411, 11, 4124, 281, 661], "temperature": 0.0, "avg_logprob": -0.1801062610661872, "compression_ratio": 1.560483870967742, "no_speech_prob": 1.832192538131494e-05}, {"id": 31, "seek": 18592, "start": 206.23999999999998, "end": 212.72, "text": " people. Yeah, it's good. So I will show something more like later. So basically, you can actually", "tokens": [561, 13, 865, 11, 309, 311, 665, 13, 407, 286, 486, 855, 746, 544, 411, 1780, 13, 407, 1936, 11, 291, 393, 767], "temperature": 0.0, "avg_logprob": -0.1801062610661872, "compression_ratio": 1.560483870967742, "no_speech_prob": 1.832192538131494e-05}, {"id": 32, "seek": 21272, "start": 212.72, "end": 217.44, "text": " parse the objects back and forth. So you can change a Python object into JavaScript object,", "tokens": [48377, 264, 6565, 646, 293, 5220, 13, 407, 291, 393, 1319, 257, 15329, 2657, 666, 15778, 2657, 11], "temperature": 0.0, "avg_logprob": -0.1571354324167425, "compression_ratio": 1.7644230769230769, "no_speech_prob": 1.4467135770246387e-05}, {"id": 33, "seek": 21272, "start": 217.44, "end": 224.48, "text": " and then your JavaScript library, like D3, will understand it or the other way around. So it", "tokens": [293, 550, 428, 15778, 6405, 11, 411, 413, 18, 11, 486, 1223, 309, 420, 264, 661, 636, 926, 13, 407, 309], "temperature": 0.0, "avg_logprob": -0.1571354324167425, "compression_ratio": 1.7644230769230769, "no_speech_prob": 1.4467135770246387e-05}, {"id": 34, "seek": 21272, "start": 224.48, "end": 232.88, "text": " is something that is quite new. So also, so all these things that I talk about that you can,", "tokens": [307, 746, 300, 307, 1596, 777, 13, 407, 611, 11, 370, 439, 613, 721, 300, 286, 751, 466, 300, 291, 393, 11], "temperature": 0.0, "avg_logprob": -0.1571354324167425, "compression_ratio": 1.7644230769230769, "no_speech_prob": 1.4467135770246387e-05}, {"id": 35, "seek": 21272, "start": 232.88, "end": 236.56, "text": " like, change the Python object into JavaScript object, all these stuff won't be happening", "tokens": [411, 11, 1319, 264, 15329, 2657, 666, 15778, 2657, 11, 439, 613, 1507, 1582, 380, 312, 2737], "temperature": 0.0, "avg_logprob": -0.1571354324167425, "compression_ratio": 1.7644230769230769, "no_speech_prob": 1.4467135770246387e-05}, {"id": 36, "seek": 23656, "start": 236.56, "end": 244.64000000000001, "text": " if we don't have the PyLDI project, which they is, by the way, for those of you who haven't heard,", "tokens": [498, 321, 500, 380, 362, 264, 9953, 43, 3085, 1716, 11, 597, 436, 307, 11, 538, 264, 636, 11, 337, 729, 295, 291, 567, 2378, 380, 2198, 11], "temperature": 0.0, "avg_logprob": -0.2512546886097301, "compression_ratio": 1.6317991631799162, "no_speech_prob": 1.2972758668183815e-05}, {"id": 37, "seek": 23656, "start": 244.64000000000001, "end": 250.48, "text": " it's kind of, it started as a monselors project called iLDI. They try to, like, have a lot of", "tokens": [309, 311, 733, 295, 11, 309, 1409, 382, 257, 1108, 790, 830, 1716, 1219, 741, 43, 3085, 13, 814, 853, 281, 11, 411, 11, 362, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.2512546886097301, "compression_ratio": 1.6317991631799162, "no_speech_prob": 1.2972758668183815e-05}, {"id": 38, "seek": 23656, "start": 250.48, "end": 257.52, "text": " things that is, like, run, you know, in a WESM, WebAssembly, so the browser can run it. And then", "tokens": [721, 300, 307, 11, 411, 11, 1190, 11, 291, 458, 11, 294, 257, 343, 2358, 44, 11, 9573, 10884, 19160, 11, 370, 264, 11185, 393, 1190, 309, 13, 400, 550], "temperature": 0.0, "avg_logprob": -0.2512546886097301, "compression_ratio": 1.6317991631799162, "no_speech_prob": 1.2972758668183815e-05}, {"id": 39, "seek": 23656, "start": 257.52, "end": 264.56, "text": " there's a, so within that, all those projects, there's a Python, you know, project that is actually,", "tokens": [456, 311, 257, 11, 370, 1951, 300, 11, 439, 729, 4455, 11, 456, 311, 257, 15329, 11, 291, 458, 11, 1716, 300, 307, 767, 11], "temperature": 0.0, "avg_logprob": -0.2512546886097301, "compression_ratio": 1.6317991631799162, "no_speech_prob": 1.2972758668183815e-05}, {"id": 40, "seek": 26456, "start": 264.56, "end": 272.48, "text": " like, converting Python into WebAssembly. So that's the PyLDI project. So that's actually", "tokens": [411, 11, 29942, 15329, 666, 9573, 10884, 19160, 13, 407, 300, 311, 264, 9953, 43, 3085, 1716, 13, 407, 300, 311, 767], "temperature": 0.0, "avg_logprob": -0.1430019118569114, "compression_ratio": 1.6255506607929515, "no_speech_prob": 9.05977503862232e-06}, {"id": 41, "seek": 26456, "start": 272.48, "end": 282.72, "text": " allowed you to run the Python. So without it, like, actually, PyScript won't work. So, well,", "tokens": [4350, 291, 281, 1190, 264, 15329, 13, 407, 1553, 309, 11, 411, 11, 767, 11, 9953, 50, 5944, 1582, 380, 589, 13, 407, 11, 731, 11], "temperature": 0.0, "avg_logprob": -0.1430019118569114, "compression_ratio": 1.6255506607929515, "no_speech_prob": 9.05977503862232e-06}, {"id": 42, "seek": 26456, "start": 282.72, "end": 287.12, "text": " PyScript will still work. You can change the backend, but, like, it started with PyLDI. Sorry,", "tokens": [9953, 50, 5944, 486, 920, 589, 13, 509, 393, 1319, 264, 38087, 11, 457, 11, 411, 11, 309, 1409, 365, 9953, 43, 3085, 13, 4919, 11], "temperature": 0.0, "avg_logprob": -0.1430019118569114, "compression_ratio": 1.6255506607929515, "no_speech_prob": 9.05977503862232e-06}, {"id": 43, "seek": 26456, "start": 287.12, "end": 293.68, "text": " I'm, like, kind of, I'm trying to be correct in what I'm saying. But the main thing is that", "tokens": [286, 478, 11, 411, 11, 733, 295, 11, 286, 478, 1382, 281, 312, 3006, 294, 437, 286, 478, 1566, 13, 583, 264, 2135, 551, 307, 300], "temperature": 0.0, "avg_logprob": -0.1430019118569114, "compression_ratio": 1.6255506607929515, "no_speech_prob": 9.05977503862232e-06}, {"id": 44, "seek": 29368, "start": 293.68, "end": 302.16, "text": " you need to, kind of, compile Python into a WebAssembly. So PyLDI is, like, the kind of one", "tokens": [291, 643, 281, 11, 733, 295, 11, 31413, 15329, 666, 257, 9573, 10884, 19160, 13, 407, 9953, 43, 3085, 307, 11, 411, 11, 264, 733, 295, 472], "temperature": 0.0, "avg_logprob": -0.11523268699645996, "compression_ratio": 1.6696428571428572, "no_speech_prob": 2.6441603040439077e-05}, {"id": 45, "seek": 29368, "start": 302.16, "end": 308.0, "text": " of the most popular one that is, like, having the whole, more or less, the whole thing that", "tokens": [295, 264, 881, 3743, 472, 300, 307, 11, 411, 11, 1419, 264, 1379, 11, 544, 420, 1570, 11, 264, 1379, 551, 300], "temperature": 0.0, "avg_logprob": -0.11523268699645996, "compression_ratio": 1.6696428571428572, "no_speech_prob": 2.6441603040439077e-05}, {"id": 46, "seek": 29368, "start": 308.88, "end": 314.64, "text": " your standard Python offer is actually compiled into WebAssembly, so you can run Python on the", "tokens": [428, 3832, 15329, 2626, 307, 767, 36548, 666, 9573, 10884, 19160, 11, 370, 291, 393, 1190, 15329, 322, 264], "temperature": 0.0, "avg_logprob": -0.11523268699645996, "compression_ratio": 1.6696428571428572, "no_speech_prob": 2.6441603040439077e-05}, {"id": 47, "seek": 29368, "start": 314.64, "end": 318.88, "text": " browser. But there's also other things that we are trying, the team is trying now. For example,", "tokens": [11185, 13, 583, 456, 311, 611, 661, 721, 300, 321, 366, 1382, 11, 264, 1469, 307, 1382, 586, 13, 1171, 1365, 11], "temperature": 0.0, "avg_logprob": -0.11523268699645996, "compression_ratio": 1.6696428571428572, "no_speech_prob": 2.6441603040439077e-05}, {"id": 48, "seek": 31888, "start": 318.88, "end": 324.32, "text": " they are trying to compile MicroPython, which is a lighter version of Python, into WebAssembly. So", "tokens": [436, 366, 1382, 281, 31413, 25642, 47, 88, 11943, 11, 597, 307, 257, 11546, 3037, 295, 15329, 11, 666, 9573, 10884, 19160, 13, 407], "temperature": 0.0, "avg_logprob": -0.14005272797863894, "compression_ratio": 1.5991379310344827, "no_speech_prob": 1.1308017747069243e-05}, {"id": 49, "seek": 31888, "start": 325.04, "end": 331.12, "text": " it more or less works the same, but you have some kind of Python functionality that is not", "tokens": [309, 544, 420, 1570, 1985, 264, 912, 11, 457, 291, 362, 512, 733, 295, 15329, 14980, 300, 307, 406], "temperature": 0.0, "avg_logprob": -0.14005272797863894, "compression_ratio": 1.5991379310344827, "no_speech_prob": 1.1308017747069243e-05}, {"id": 50, "seek": 31888, "start": 331.12, "end": 338.88, "text": " available on MicroPython. So you can actually choose which one you want to use. And also,", "tokens": [2435, 322, 25642, 47, 88, 11943, 13, 407, 291, 393, 767, 2826, 597, 472, 291, 528, 281, 764, 13, 400, 611, 11], "temperature": 0.0, "avg_logprob": -0.14005272797863894, "compression_ratio": 1.5991379310344827, "no_speech_prob": 1.1308017747069243e-05}, {"id": 51, "seek": 31888, "start": 338.88, "end": 345.52, "text": " because one thing about the PyLDI project that is, that is, why it, why it is the first one", "tokens": [570, 472, 551, 466, 264, 9953, 43, 3085, 1716, 300, 307, 11, 300, 307, 11, 983, 309, 11, 983, 309, 307, 264, 700, 472], "temperature": 0.0, "avg_logprob": -0.14005272797863894, "compression_ratio": 1.5991379310344827, "no_speech_prob": 1.1308017747069243e-05}, {"id": 52, "seek": 34552, "start": 345.52, "end": 350.24, "text": " that PyScript adopts and why is the first one that is, like, why is it so popular? Because", "tokens": [300, 9953, 14237, 22486, 1373, 293, 983, 307, 264, 700, 472, 300, 307, 11, 411, 11, 983, 307, 309, 370, 3743, 30, 1436], "temperature": 0.0, "avg_logprob": -0.23208114475879854, "compression_ratio": 1.6877828054298643, "no_speech_prob": 2.2116480977274477e-05}, {"id": 53, "seek": 34552, "start": 350.79999999999995, "end": 356.96, "text": " the project itself also provides a lot of Python packages. For example, those that we use a lot,", "tokens": [264, 1716, 2564, 611, 6417, 257, 688, 295, 15329, 17401, 13, 1171, 1365, 11, 729, 300, 321, 764, 257, 688, 11], "temperature": 0.0, "avg_logprob": -0.23208114475879854, "compression_ratio": 1.6877828054298643, "no_speech_prob": 2.2116480977274477e-05}, {"id": 54, "seek": 34552, "start": 356.96, "end": 362.64, "text": " for example, NumPy, like, scientists and data scientists use a lot, it's like, like, some of", "tokens": [337, 1365, 11, 22592, 47, 88, 11, 411, 11, 7708, 293, 1412, 7708, 764, 257, 688, 11, 309, 311, 411, 11, 411, 11, 512, 295], "temperature": 0.0, "avg_logprob": -0.23208114475879854, "compression_ratio": 1.6877828054298643, "no_speech_prob": 2.2116480977274477e-05}, {"id": 55, "seek": 34552, "start": 362.64, "end": 370.0, "text": " NumPy, SciPy, Cyclo and all those actually are quite difficult to run on the browser because", "tokens": [22592, 47, 88, 11, 16942, 47, 88, 11, 10295, 66, 752, 293, 439, 729, 767, 366, 1596, 2252, 281, 1190, 322, 264, 11185, 570], "temperature": 0.0, "avg_logprob": -0.23208114475879854, "compression_ratio": 1.6877828054298643, "no_speech_prob": 2.2116480977274477e-05}, {"id": 56, "seek": 37000, "start": 370.0, "end": 376.0, "text": " they are not pure Python. So for pure Python, if you have a Python interpreter that actually is", "tokens": [436, 366, 406, 6075, 15329, 13, 407, 337, 6075, 15329, 11, 498, 291, 362, 257, 15329, 34132, 300, 767, 307], "temperature": 0.0, "avg_logprob": -0.1290190861775325, "compression_ratio": 1.6265560165975104, "no_speech_prob": 2.6660598450689577e-05}, {"id": 57, "seek": 37000, "start": 376.0, "end": 381.84, "text": " compiling to Wasm, of course you can do it because they are just Python, but something like NumPy,", "tokens": [715, 4883, 281, 3027, 76, 11, 295, 1164, 291, 393, 360, 309, 570, 436, 366, 445, 15329, 11, 457, 746, 411, 22592, 47, 88, 11], "temperature": 0.0, "avg_logprob": -0.1290190861775325, "compression_ratio": 1.6265560165975104, "no_speech_prob": 2.6660598450689577e-05}, {"id": 58, "seek": 37000, "start": 381.84, "end": 388.24, "text": " SciPy, Cyclo and they are not pure Python, then it's a bit tricky, but PyLDI project also provides", "tokens": [16942, 47, 88, 11, 10295, 66, 752, 293, 436, 366, 406, 6075, 15329, 11, 550, 309, 311, 257, 857, 12414, 11, 457, 9953, 43, 3085, 1716, 611, 6417], "temperature": 0.0, "avg_logprob": -0.1290190861775325, "compression_ratio": 1.6265560165975104, "no_speech_prob": 2.6660598450689577e-05}, {"id": 59, "seek": 37000, "start": 388.24, "end": 394.64, "text": " that. So now we can also run those very complicated Python packages on the browser, which is cool.", "tokens": [300, 13, 407, 586, 321, 393, 611, 1190, 729, 588, 6179, 15329, 17401, 322, 264, 11185, 11, 597, 307, 1627, 13], "temperature": 0.0, "avg_logprob": -0.1290190861775325, "compression_ratio": 1.6265560165975104, "no_speech_prob": 2.6660598450689577e-05}, {"id": 60, "seek": 39464, "start": 394.64, "end": 400.64, "text": " So I will show you a little bit of the PyScript basic and then I'll show you the demo and then,", "tokens": [407, 286, 486, 855, 291, 257, 707, 857, 295, 264, 9953, 14237, 3875, 293, 550, 286, 603, 855, 291, 264, 10723, 293, 550, 11], "temperature": 0.0, "avg_logprob": -0.16641273498535156, "compression_ratio": 1.5208333333333333, "no_speech_prob": 5.502315252670087e-05}, {"id": 61, "seek": 39464, "start": 400.64, "end": 409.44, "text": " like, all the questions will come at the end. Is it too small? I don't know how to zoom in though.", "tokens": [411, 11, 439, 264, 1651, 486, 808, 412, 264, 917, 13, 1119, 309, 886, 1359, 30, 286, 500, 380, 458, 577, 281, 8863, 294, 1673, 13], "temperature": 0.0, "avg_logprob": -0.16641273498535156, "compression_ratio": 1.5208333333333333, "no_speech_prob": 5.502315252670087e-05}, {"id": 62, "seek": 39464, "start": 411.12, "end": 418.88, "text": " That's why the link is important at the beginning. So I can explain, but the content of this code", "tokens": [663, 311, 983, 264, 2113, 307, 1021, 412, 264, 2863, 13, 407, 286, 393, 2903, 11, 457, 264, 2701, 295, 341, 3089], "temperature": 0.0, "avg_logprob": -0.16641273498535156, "compression_ratio": 1.5208333333333333, "no_speech_prob": 5.502315252670087e-05}, {"id": 63, "seek": 41888, "start": 418.88, "end": 425.52, "text": " is not the most important thing. It's just like how a typical PyScript will look like. So I'm just", "tokens": [307, 406, 264, 881, 1021, 551, 13, 467, 311, 445, 411, 577, 257, 7476, 9953, 14237, 486, 574, 411, 13, 407, 286, 478, 445], "temperature": 0.0, "avg_logprob": -0.10898542779637134, "compression_ratio": 1.8239700374531835, "no_speech_prob": 3.329375249450095e-05}, {"id": 64, "seek": 41888, "start": 425.52, "end": 429.92, "text": " talking about this section here. So for the first two lines here, you don't need to see it, but I'm", "tokens": [1417, 466, 341, 3541, 510, 13, 407, 337, 264, 700, 732, 3876, 510, 11, 291, 500, 380, 643, 281, 536, 309, 11, 457, 286, 478], "temperature": 0.0, "avg_logprob": -0.10898542779637134, "compression_ratio": 1.8239700374531835, "no_speech_prob": 3.329375249450095e-05}, {"id": 65, "seek": 41888, "start": 429.92, "end": 436.08, "text": " telling you what it is. It's just like when you have a JavaScript code, you would actually have a,", "tokens": [3585, 291, 437, 309, 307, 13, 467, 311, 445, 411, 562, 291, 362, 257, 15778, 3089, 11, 291, 576, 767, 362, 257, 11], "temperature": 0.0, "avg_logprob": -0.10898542779637134, "compression_ratio": 1.8239700374531835, "no_speech_prob": 3.329375249450095e-05}, {"id": 66, "seek": 41888, "start": 436.08, "end": 440.88, "text": " probably you have a CSS, which is like the style of how your website would look like, the style", "tokens": [1391, 291, 362, 257, 24387, 11, 597, 307, 411, 264, 3758, 295, 577, 428, 3144, 576, 574, 411, 11, 264, 3758], "temperature": 0.0, "avg_logprob": -0.10898542779637134, "compression_ratio": 1.8239700374531835, "no_speech_prob": 3.329375249450095e-05}, {"id": 67, "seek": 41888, "start": 440.88, "end": 445.76, "text": " sheet, and then you have a JavaScript that you kind of put in and then you can run all these,", "tokens": [8193, 11, 293, 550, 291, 362, 257, 15778, 300, 291, 733, 295, 829, 294, 293, 550, 291, 393, 1190, 439, 613, 11], "temperature": 0.0, "avg_logprob": -0.10898542779637134, "compression_ratio": 1.8239700374531835, "no_speech_prob": 3.329375249450095e-05}, {"id": 68, "seek": 44576, "start": 445.76, "end": 452.8, "text": " like, JavaScript functions that you have. So this is actually something like a path to a", "tokens": [411, 11, 15778, 6828, 300, 291, 362, 13, 407, 341, 307, 767, 746, 411, 257, 3100, 281, 257], "temperature": 0.0, "avg_logprob": -0.15614090467754163, "compression_ratio": 1.5333333333333334, "no_speech_prob": 2.2763581000617705e-05}, {"id": 69, "seek": 44576, "start": 452.8, "end": 460.56, "text": " PyScript.js that's hosted on the PyScript.net. This is actually what allows you to write Python", "tokens": [9953, 14237, 13, 25530, 300, 311, 19204, 322, 264, 9953, 14237, 13, 7129, 13, 639, 307, 767, 437, 4045, 291, 281, 2464, 15329], "temperature": 0.0, "avg_logprob": -0.15614090467754163, "compression_ratio": 1.5333333333333334, "no_speech_prob": 2.2763581000617705e-05}, {"id": 70, "seek": 44576, "start": 460.56, "end": 469.12, "text": " on the websites, on your HTML file. Well, you may ask, like, why is it.js? This is just how", "tokens": [322, 264, 12891, 11, 322, 428, 17995, 3991, 13, 1042, 11, 291, 815, 1029, 11, 411, 11, 983, 307, 309, 2411, 25530, 30, 639, 307, 445, 577], "temperature": 0.0, "avg_logprob": -0.15614090467754163, "compression_ratio": 1.5333333333333334, "no_speech_prob": 2.2763581000617705e-05}, {"id": 71, "seek": 46912, "start": 469.12, "end": 476.24, "text": " awesome work. So we have to follow the standard. So yeah, that's.js, but that's not important.", "tokens": [3476, 589, 13, 407, 321, 362, 281, 1524, 264, 3832, 13, 407, 1338, 11, 300, 311, 2411, 25530, 11, 457, 300, 311, 406, 1021, 13], "temperature": 0.0, "avg_logprob": -0.14134276253836495, "compression_ratio": 1.5847457627118644, "no_speech_prob": 1.1425504453654867e-05}, {"id": 72, "seek": 46912, "start": 476.24, "end": 480.8, "text": " You're not writing JavaScript, so don't worry about it. Next is there is a section that you can", "tokens": [509, 434, 406, 3579, 15778, 11, 370, 500, 380, 3292, 466, 309, 13, 3087, 307, 456, 307, 257, 3541, 300, 291, 393], "temperature": 0.0, "avg_logprob": -0.14134276253836495, "compression_ratio": 1.5847457627118644, "no_speech_prob": 1.1425504453654867e-05}, {"id": 73, "seek": 46912, "start": 480.8, "end": 486.24, "text": " actually write Python code. So here is just some NumPy code that is plotting some NumPy", "tokens": [767, 2464, 15329, 3089, 13, 407, 510, 307, 445, 512, 22592, 47, 88, 3089, 300, 307, 41178, 512, 22592, 47, 88], "temperature": 0.0, "avg_logprob": -0.14134276253836495, "compression_ratio": 1.5847457627118644, "no_speech_prob": 1.1425504453654867e-05}, {"id": 74, "seek": 46912, "start": 486.24, "end": 493.68, "text": " random numbers. Okay. So here, like, if it's, sorry, I'm not expecting the room to be this big.", "tokens": [4974, 3547, 13, 1033, 13, 407, 510, 11, 411, 11, 498, 309, 311, 11, 2597, 11, 286, 478, 406, 9650, 264, 1808, 281, 312, 341, 955, 13], "temperature": 0.0, "avg_logprob": -0.14134276253836495, "compression_ratio": 1.5847457627118644, "no_speech_prob": 1.1425504453654867e-05}, {"id": 75, "seek": 49368, "start": 493.68, "end": 501.6, "text": " So if you can see it, so the first line is basically a HTML tag and it's PyScript, and then", "tokens": [407, 498, 291, 393, 536, 309, 11, 370, 264, 700, 1622, 307, 1936, 257, 17995, 6162, 293, 309, 311, 9953, 14237, 11, 293, 550], "temperature": 0.0, "avg_logprob": -0.18177259885347807, "compression_ratio": 1.796875, "no_speech_prob": 1.1641647688520607e-05}, {"id": 76, "seek": 49368, "start": 501.6, "end": 506.8, "text": " it also has a little bit of settings, like output equals to plot and stuff like that. And it is", "tokens": [309, 611, 575, 257, 707, 857, 295, 6257, 11, 411, 5598, 6915, 281, 7542, 293, 1507, 411, 300, 13, 400, 309, 307], "temperature": 0.0, "avg_logprob": -0.18177259885347807, "compression_ratio": 1.796875, "no_speech_prob": 1.1641647688520607e-05}, {"id": 77, "seek": 49368, "start": 506.8, "end": 512.4, "text": " just a Python script. It's just like input NumPy, input Mapolyb, and all that stuff.", "tokens": [445, 257, 15329, 5755, 13, 467, 311, 445, 411, 4846, 22592, 47, 88, 11, 4846, 22053, 16453, 65, 11, 293, 439, 300, 1507, 13], "temperature": 0.0, "avg_logprob": -0.18177259885347807, "compression_ratio": 1.796875, "no_speech_prob": 1.1641647688520607e-05}, {"id": 78, "seek": 49368, "start": 512.4, "end": 517.36, "text": " And then it's, you know, it's Python code. It's just like, you know, you can copy and paste your", "tokens": [400, 550, 309, 311, 11, 291, 458, 11, 309, 311, 15329, 3089, 13, 467, 311, 445, 411, 11, 291, 458, 11, 291, 393, 5055, 293, 9163, 428], "temperature": 0.0, "avg_logprob": -0.18177259885347807, "compression_ratio": 1.796875, "no_speech_prob": 1.1641647688520607e-05}, {"id": 79, "seek": 49368, "start": 517.36, "end": 522.72, "text": " Python code there. It's more or less the same thing. And the other thing that you may have", "tokens": [15329, 3089, 456, 13, 467, 311, 544, 420, 1570, 264, 912, 551, 13, 400, 264, 661, 551, 300, 291, 815, 362], "temperature": 0.0, "avg_logprob": -0.18177259885347807, "compression_ratio": 1.796875, "no_speech_prob": 1.1641647688520607e-05}, {"id": 80, "seek": 52272, "start": 522.72, "end": 527.84, "text": " when you are using PyScript is a PyConfig file. So this PyConfig file is actually,", "tokens": [562, 291, 366, 1228, 9953, 14237, 307, 257, 9953, 9838, 20646, 3991, 13, 407, 341, 9953, 9838, 20646, 3991, 307, 767, 11], "temperature": 0.0, "avg_logprob": -0.1298018928587906, "compression_ratio": 1.75, "no_speech_prob": 1.3389710147748701e-05}, {"id": 81, "seek": 52272, "start": 528.72, "end": 533.9200000000001, "text": " there's multiple format that is supported in this example. It's in JSON format. It's just a", "tokens": [456, 311, 3866, 7877, 300, 307, 8104, 294, 341, 1365, 13, 467, 311, 294, 31828, 7877, 13, 467, 311, 445, 257], "temperature": 0.0, "avg_logprob": -0.1298018928587906, "compression_ratio": 1.75, "no_speech_prob": 1.3389710147748701e-05}, {"id": 82, "seek": 52272, "start": 533.9200000000001, "end": 541.52, "text": " JSON file with, like, saying packages is NumPy and Mapolyb, because we are using it in the code,", "tokens": [31828, 3991, 365, 11, 411, 11, 1566, 17401, 307, 22592, 47, 88, 293, 22053, 16453, 65, 11, 570, 321, 366, 1228, 309, 294, 264, 3089, 11], "temperature": 0.0, "avg_logprob": -0.1298018928587906, "compression_ratio": 1.75, "no_speech_prob": 1.3389710147748701e-05}, {"id": 83, "seek": 52272, "start": 541.52, "end": 546.5600000000001, "text": " in the Python code. That's why we have to, like, put it there to say that we are using those packages,", "tokens": [294, 264, 15329, 3089, 13, 663, 311, 983, 321, 362, 281, 11, 411, 11, 829, 309, 456, 281, 584, 300, 321, 366, 1228, 729, 17401, 11], "temperature": 0.0, "avg_logprob": -0.1298018928587906, "compression_ratio": 1.75, "no_speech_prob": 1.3389710147748701e-05}, {"id": 84, "seek": 52272, "start": 546.5600000000001, "end": 552.08, "text": " kind of like your PIP install. It's like putting it in your, in the environment,", "tokens": [733, 295, 411, 428, 430, 9139, 3625, 13, 467, 311, 411, 3372, 309, 294, 428, 11, 294, 264, 2823, 11], "temperature": 0.0, "avg_logprob": -0.1298018928587906, "compression_ratio": 1.75, "no_speech_prob": 1.3389710147748701e-05}, {"id": 85, "seek": 55208, "start": 552.08, "end": 557.6, "text": " within your browser. So that's what it does. So this is the code. That's typically how it looks", "tokens": [1951, 428, 11185, 13, 407, 300, 311, 437, 309, 775, 13, 407, 341, 307, 264, 3089, 13, 663, 311, 5850, 577, 309, 1542], "temperature": 0.0, "avg_logprob": -0.08860028831704149, "compression_ratio": 1.7285067873303168, "no_speech_prob": 2.581708031357266e-05}, {"id": 86, "seek": 55208, "start": 557.6, "end": 562.32, "text": " like. One catch is that it's using the latest version in the first two lines there. So if you", "tokens": [411, 13, 1485, 3745, 307, 300, 309, 311, 1228, 264, 6792, 3037, 294, 264, 700, 732, 3876, 456, 13, 407, 498, 291], "temperature": 0.0, "avg_logprob": -0.08860028831704149, "compression_ratio": 1.7285067873303168, "no_speech_prob": 2.581708031357266e-05}, {"id": 87, "seek": 55208, "start": 562.32, "end": 568.4000000000001, "text": " don't want to, you know, break your code, you can pin a version. Now you can also pin a specific", "tokens": [500, 380, 528, 281, 11, 291, 458, 11, 1821, 428, 3089, 11, 291, 393, 5447, 257, 3037, 13, 823, 291, 393, 611, 5447, 257, 2685], "temperature": 0.0, "avg_logprob": -0.08860028831704149, "compression_ratio": 1.7285067873303168, "no_speech_prob": 2.581708031357266e-05}, {"id": 88, "seek": 55208, "start": 568.4000000000001, "end": 576.6400000000001, "text": " version with the releases and then the version number. Now we are named. We are, we are, we are", "tokens": [3037, 365, 264, 16952, 293, 550, 264, 3037, 1230, 13, 823, 321, 366, 4926, 13, 492, 366, 11, 321, 366, 11, 321, 366], "temperature": 0.0, "avg_logprob": -0.08860028831704149, "compression_ratio": 1.7285067873303168, "no_speech_prob": 2.581708031357266e-05}, {"id": 89, "seek": 57664, "start": 576.64, "end": 582.64, "text": " tacking it as, like, the year, month, date, year month, probably, and then the versions. So,", "tokens": [9426, 278, 309, 382, 11, 411, 11, 264, 1064, 11, 1618, 11, 4002, 11, 1064, 1618, 11, 1391, 11, 293, 550, 264, 9606, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.13704861618402436, "compression_ratio": 1.77734375, "no_speech_prob": 8.237398105848115e-06}, {"id": 90, "seek": 57664, "start": 584.0, "end": 588.48, "text": " so yeah, you, if, for example, you don't want it to, because now PyScript is still changing a lot.", "tokens": [370, 1338, 11, 291, 11, 498, 11, 337, 1365, 11, 291, 500, 380, 528, 309, 281, 11, 570, 586, 9953, 14237, 307, 920, 4473, 257, 688, 13], "temperature": 0.0, "avg_logprob": -0.13704861618402436, "compression_ratio": 1.77734375, "no_speech_prob": 8.237398105848115e-06}, {"id": 91, "seek": 57664, "start": 588.48, "end": 593.52, "text": " So if you don't want your code to be not working next month, so you may want to pin the version", "tokens": [407, 498, 291, 500, 380, 528, 428, 3089, 281, 312, 406, 1364, 958, 1618, 11, 370, 291, 815, 528, 281, 5447, 264, 3037], "temperature": 0.0, "avg_logprob": -0.13704861618402436, "compression_ratio": 1.77734375, "no_speech_prob": 8.237398105848115e-06}, {"id": 92, "seek": 57664, "start": 593.52, "end": 597.28, "text": " until you want to update it manually when you look at the code again and update it.", "tokens": [1826, 291, 528, 281, 5623, 309, 16945, 562, 291, 574, 412, 264, 3089, 797, 293, 5623, 309, 13], "temperature": 0.0, "avg_logprob": -0.13704861618402436, "compression_ratio": 1.77734375, "no_speech_prob": 8.237398105848115e-06}, {"id": 93, "seek": 57664, "start": 598.0, "end": 601.04, "text": " You can do it. So don't worry about it. I know people will have questions about it.", "tokens": [509, 393, 360, 309, 13, 407, 500, 380, 3292, 466, 309, 13, 286, 458, 561, 486, 362, 1651, 466, 309, 13], "temperature": 0.0, "avg_logprob": -0.13704861618402436, "compression_ratio": 1.77734375, "no_speech_prob": 8.237398105848115e-06}, {"id": 94, "seek": 60104, "start": 601.04, "end": 608.7199999999999, "text": " Or you may think that, oh, like, you know, you're a web developer and, like, you, you don't like", "tokens": [1610, 291, 815, 519, 300, 11, 1954, 11, 411, 11, 291, 458, 11, 291, 434, 257, 3670, 10754, 293, 11, 411, 11, 291, 11, 291, 500, 380, 411], "temperature": 0.0, "avg_logprob": -0.14278256715233648, "compression_ratio": 1.878787878787879, "no_speech_prob": 1.859892472566571e-05}, {"id": 95, "seek": 60104, "start": 608.7199999999999, "end": 613.52, "text": " the CDN, like, calling in from another website that you have no control of, you know, if that", "tokens": [264, 6743, 45, 11, 411, 11, 5141, 294, 490, 1071, 3144, 300, 291, 362, 572, 1969, 295, 11, 291, 458, 11, 498, 300], "temperature": 0.0, "avg_logprob": -0.14278256715233648, "compression_ratio": 1.878787878787879, "no_speech_prob": 1.859892472566571e-05}, {"id": 96, "seek": 60104, "start": 613.52, "end": 619.1999999999999, "text": " website got attacked or something that won't work, it may be very dangerous. You can host it yourself.", "tokens": [3144, 658, 12692, 420, 746, 300, 1582, 380, 589, 11, 309, 815, 312, 588, 5795, 13, 509, 393, 3975, 309, 1803, 13], "temperature": 0.0, "avg_logprob": -0.14278256715233648, "compression_ratio": 1.878787878787879, "no_speech_prob": 1.859892472566571e-05}, {"id": 97, "seek": 60104, "start": 619.1999999999999, "end": 624.4, "text": " You can download that two things, you know, the, the, the style sheet and the JavaScript code yourself", "tokens": [509, 393, 5484, 300, 732, 721, 11, 291, 458, 11, 264, 11, 264, 11, 264, 3758, 8193, 293, 264, 15778, 3089, 1803], "temperature": 0.0, "avg_logprob": -0.14278256715233648, "compression_ratio": 1.878787878787879, "no_speech_prob": 1.859892472566571e-05}, {"id": 98, "seek": 60104, "start": 624.4, "end": 627.76, "text": " and, you know, and, and the other things with it as well. There's, there's also a few other things,", "tokens": [293, 11, 291, 458, 11, 293, 11, 293, 264, 661, 721, 365, 309, 382, 731, 13, 821, 311, 11, 456, 311, 611, 257, 1326, 661, 721, 11], "temperature": 0.0, "avg_logprob": -0.14278256715233648, "compression_ratio": 1.878787878787879, "no_speech_prob": 1.859892472566571e-05}, {"id": 99, "seek": 62776, "start": 627.76, "end": 631.4399999999999, "text": " but they're all downloadable. You can download it and host it yourself if you want to.", "tokens": [457, 436, 434, 439, 5484, 712, 13, 509, 393, 5484, 309, 293, 3975, 309, 1803, 498, 291, 528, 281, 13], "temperature": 0.0, "avg_logprob": -0.15768068663927973, "compression_ratio": 1.672811059907834, "no_speech_prob": 2.4974804546218365e-05}, {"id": 100, "seek": 62776, "start": 633.76, "end": 639.04, "text": " So, uh, it's getting more complicated because, you know, now we're, like, the PyScript is", "tokens": [407, 11, 2232, 11, 309, 311, 1242, 544, 6179, 570, 11, 291, 458, 11, 586, 321, 434, 11, 411, 11, 264, 9953, 14237, 307], "temperature": 0.0, "avg_logprob": -0.15768068663927973, "compression_ratio": 1.672811059907834, "no_speech_prob": 2.4974804546218365e-05}, {"id": 101, "seek": 62776, "start": 639.04, "end": 644.8, "text": " getting, like, more developed and now there's more things you can config about how PyScript works.", "tokens": [1242, 11, 411, 11, 544, 4743, 293, 586, 456, 311, 544, 721, 291, 393, 6662, 466, 577, 9953, 14237, 1985, 13], "temperature": 0.0, "avg_logprob": -0.15768068663927973, "compression_ratio": 1.672811059907834, "no_speech_prob": 2.4974804546218365e-05}, {"id": 102, "seek": 62776, "start": 644.8, "end": 653.12, "text": " So the PyConfig tag is where you can change all those. So first of all, the tag itself,", "tokens": [407, 264, 9953, 9838, 20646, 6162, 307, 689, 291, 393, 1319, 439, 729, 13, 407, 700, 295, 439, 11, 264, 6162, 2564, 11], "temperature": 0.0, "avg_logprob": -0.15768068663927973, "compression_ratio": 1.672811059907834, "no_speech_prob": 2.4974804546218365e-05}, {"id": 103, "seek": 65312, "start": 653.12, "end": 658.0, "text": " so we're, within inside, there's multiple format you can use. There's the Tomo format,", "tokens": [370, 321, 434, 11, 1951, 1854, 11, 456, 311, 3866, 7877, 291, 393, 764, 13, 821, 311, 264, 5041, 78, 7877, 11], "temperature": 0.0, "avg_logprob": -0.169162841070266, "compression_ratio": 1.876, "no_speech_prob": 2.008868432312738e-05}, {"id": 104, "seek": 65312, "start": 658.0, "end": 663.28, "text": " which is the default. So if you don't tell this tag what format you're writing, so it would just", "tokens": [597, 307, 264, 7576, 13, 407, 498, 291, 500, 380, 980, 341, 6162, 437, 7877, 291, 434, 3579, 11, 370, 309, 576, 445], "temperature": 0.0, "avg_logprob": -0.169162841070266, "compression_ratio": 1.876, "no_speech_prob": 2.008868432312738e-05}, {"id": 105, "seek": 65312, "start": 663.28, "end": 669.12, "text": " assume you're using a Tomo format. So in this demo here, it says, like, packages and, and paths,", "tokens": [6552, 291, 434, 1228, 257, 5041, 78, 7877, 13, 407, 294, 341, 10723, 510, 11, 309, 1619, 11, 411, 11, 17401, 293, 11, 293, 14518, 11], "temperature": 0.0, "avg_logprob": -0.169162841070266, "compression_ratio": 1.876, "no_speech_prob": 2.008868432312738e-05}, {"id": 106, "seek": 65312, "start": 669.12, "end": 673.36, "text": " so it's just, like, you know, what package you're putting in just, like, again, like the pigment", "tokens": [370, 309, 311, 445, 11, 411, 11, 291, 458, 11, 437, 7372, 291, 434, 3372, 294, 445, 11, 411, 11, 797, 11, 411, 264, 31325], "temperature": 0.0, "avg_logprob": -0.169162841070266, "compression_ratio": 1.876, "no_speech_prob": 2.008868432312738e-05}, {"id": 107, "seek": 65312, "start": 673.36, "end": 678.72, "text": " store thing you have to, there's an environment within the browser that's running the other", "tokens": [3531, 551, 291, 362, 281, 11, 456, 311, 364, 2823, 1951, 264, 11185, 300, 311, 2614, 264, 661], "temperature": 0.0, "avg_logprob": -0.169162841070266, "compression_ratio": 1.876, "no_speech_prob": 2.008868432312738e-05}, {"id": 108, "seek": 67872, "start": 678.72, "end": 684.32, "text": " PyScript code. So you have to first say what packages you are using, so, uh, to allow it to be", "tokens": [9953, 14237, 3089, 13, 407, 291, 362, 281, 700, 584, 437, 17401, 291, 366, 1228, 11, 370, 11, 2232, 11, 281, 2089, 309, 281, 312], "temperature": 0.0, "avg_logprob": -0.1415434105451717, "compression_ratio": 1.7122302158273381, "no_speech_prob": 6.426665095204953e-06}, {"id": 109, "seek": 67872, "start": 684.32, "end": 689.6800000000001, "text": " usable. Um, the JSON format, again, it's just different format. It's more or less the same thing.", "tokens": [29975, 13, 3301, 11, 264, 31828, 7877, 11, 797, 11, 309, 311, 445, 819, 7877, 13, 467, 311, 544, 420, 1570, 264, 912, 551, 13], "temperature": 0.0, "avg_logprob": -0.1415434105451717, "compression_ratio": 1.7122302158273381, "no_speech_prob": 6.426665095204953e-06}, {"id": 110, "seek": 67872, "start": 690.24, "end": 694.32, "text": " Or you can actually have another source. You can write your file in another, for example, either,", "tokens": [1610, 291, 393, 767, 362, 1071, 4009, 13, 509, 393, 2464, 428, 3991, 294, 1071, 11, 337, 1365, 11, 2139, 11], "temperature": 0.0, "avg_logprob": -0.1415434105451717, "compression_ratio": 1.7122302158273381, "no_speech_prob": 6.426665095204953e-06}, {"id": 111, "seek": 67872, "start": 694.32, "end": 701.2, "text": " either JSON file or Tomo file. You can also put it in because, well, you know, you don't want", "tokens": [2139, 31828, 3991, 420, 5041, 78, 3991, 13, 509, 393, 611, 829, 309, 294, 570, 11, 731, 11, 291, 458, 11, 291, 500, 380, 528], "temperature": 0.0, "avg_logprob": -0.1415434105451717, "compression_ratio": 1.7122302158273381, "no_speech_prob": 6.426665095204953e-06}, {"id": 112, "seek": 67872, "start": 701.2, "end": 705.52, "text": " everything to be in your HTML file, right? So you can actually put in other source as well.", "tokens": [1203, 281, 312, 294, 428, 17995, 3991, 11, 558, 30, 407, 291, 393, 767, 829, 294, 661, 4009, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.1415434105451717, "compression_ratio": 1.7122302158273381, "no_speech_prob": 6.426665095204953e-06}, {"id": 113, "seek": 70552, "start": 705.52, "end": 716.96, "text": " And also, um, yeah, the PyConfig tag is, uh, it's not just used for putting all your packages", "tokens": [400, 611, 11, 1105, 11, 1338, 11, 264, 9953, 9838, 20646, 6162, 307, 11, 2232, 11, 309, 311, 406, 445, 1143, 337, 3372, 439, 428, 17401], "temperature": 0.0, "avg_logprob": -0.14508136681147984, "compression_ratio": 1.6504424778761062, "no_speech_prob": 1.1825537512777373e-05}, {"id": 114, "seek": 70552, "start": 716.96, "end": 722.8, "text": " and other stuff. There's also other things that you could, uh, you could set in a PyConfig tag.", "tokens": [293, 661, 1507, 13, 821, 311, 611, 661, 721, 300, 291, 727, 11, 2232, 11, 291, 727, 992, 294, 257, 9953, 9838, 20646, 6162, 13], "temperature": 0.0, "avg_logprob": -0.14508136681147984, "compression_ratio": 1.6504424778761062, "no_speech_prob": 1.1825537512777373e-05}, {"id": 115, "seek": 70552, "start": 722.8, "end": 727.28, "text": " So, you know, you can also host the wheel of the, of the packages. It doesn't need to be", "tokens": [407, 11, 291, 458, 11, 291, 393, 611, 3975, 264, 5589, 295, 264, 11, 295, 264, 17401, 13, 467, 1177, 380, 643, 281, 312], "temperature": 0.0, "avg_logprob": -0.14508136681147984, "compression_ratio": 1.6504424778761062, "no_speech_prob": 1.1825537512777373e-05}, {"id": 116, "seek": 70552, "start": 727.28, "end": 733.68, "text": " using the one that's provided by PyOdi. Um, you can also, if you have your, like, for example,", "tokens": [1228, 264, 472, 300, 311, 5649, 538, 9953, 46, 4504, 13, 3301, 11, 291, 393, 611, 11, 498, 291, 362, 428, 11, 411, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.14508136681147984, "compression_ratio": 1.6504424778761062, "no_speech_prob": 1.1825537512777373e-05}, {"id": 117, "seek": 73368, "start": 733.68, "end": 739.04, "text": " in Python, you can actually import your local script as well. You can also do that. Uh, you can,", "tokens": [294, 15329, 11, 291, 393, 767, 974, 428, 2654, 5755, 382, 731, 13, 509, 393, 611, 360, 300, 13, 4019, 11, 291, 393, 11], "temperature": 0.0, "avg_logprob": -0.08912823218425722, "compression_ratio": 1.844, "no_speech_prob": 5.1318264013389125e-05}, {"id": 118, "seek": 73368, "start": 739.92, "end": 744.8, "text": " uh, you can do it by the fetch tag. Uh, but, uh, I'm not showing it here. You can, if you're", "tokens": [2232, 11, 291, 393, 360, 309, 538, 264, 23673, 6162, 13, 4019, 11, 457, 11, 2232, 11, 286, 478, 406, 4099, 309, 510, 13, 509, 393, 11, 498, 291, 434], "temperature": 0.0, "avg_logprob": -0.08912823218425722, "compression_ratio": 1.844, "no_speech_prob": 5.1318264013389125e-05}, {"id": 119, "seek": 73368, "start": 744.8, "end": 748.7199999999999, "text": " interested, you can look at the documentation of PyScript. It will show you how to use the", "tokens": [3102, 11, 291, 393, 574, 412, 264, 14333, 295, 9953, 14237, 13, 467, 486, 855, 291, 577, 281, 764, 264], "temperature": 0.0, "avg_logprob": -0.08912823218425722, "compression_ratio": 1.844, "no_speech_prob": 5.1318264013389125e-05}, {"id": 120, "seek": 73368, "start": 748.7199999999999, "end": 755.12, "text": " fetch tag to actually load in, uh, your other Python script. You can do it as well. Um, you", "tokens": [23673, 6162, 281, 767, 3677, 294, 11, 2232, 11, 428, 661, 15329, 5755, 13, 509, 393, 360, 309, 382, 731, 13, 3301, 11, 291], "temperature": 0.0, "avg_logprob": -0.08912823218425722, "compression_ratio": 1.844, "no_speech_prob": 5.1318264013389125e-05}, {"id": 121, "seek": 73368, "start": 755.12, "end": 759.5999999999999, "text": " can change the runtime setting, like I said before, uh, because PyOdi is the default one", "tokens": [393, 1319, 264, 34474, 3287, 11, 411, 286, 848, 949, 11, 2232, 11, 570, 9953, 46, 4504, 307, 264, 7576, 472], "temperature": 0.0, "avg_logprob": -0.08912823218425722, "compression_ratio": 1.844, "no_speech_prob": 5.1318264013389125e-05}, {"id": 122, "seek": 75960, "start": 759.6, "end": 766.32, "text": " at the, when we first started having PyScript. Now, uh, is, is, I think it's like in development", "tokens": [412, 264, 11, 562, 321, 700, 1409, 1419, 9953, 14237, 13, 823, 11, 2232, 11, 307, 11, 307, 11, 286, 519, 309, 311, 411, 294, 3250], "temperature": 0.0, "avg_logprob": -0.12950671059744698, "compression_ratio": 1.7188612099644127, "no_speech_prob": 2.915113691415172e-05}, {"id": 123, "seek": 75960, "start": 766.32, "end": 771.36, "text": " that, like, you can actually change the backend, like, which one time you want to use. If you,", "tokens": [300, 11, 411, 11, 291, 393, 767, 1319, 264, 38087, 11, 411, 11, 597, 472, 565, 291, 528, 281, 764, 13, 759, 291, 11], "temperature": 0.0, "avg_logprob": -0.12950671059744698, "compression_ratio": 1.7188612099644127, "no_speech_prob": 2.915113691415172e-05}, {"id": 124, "seek": 75960, "start": 771.36, "end": 776.24, "text": " like, for example, just want to do some demonstration with Python or you are using, it's a tool to", "tokens": [411, 11, 337, 1365, 11, 445, 528, 281, 360, 512, 16520, 365, 15329, 420, 291, 366, 1228, 11, 309, 311, 257, 2290, 281], "temperature": 0.0, "avg_logprob": -0.12950671059744698, "compression_ratio": 1.7188612099644127, "no_speech_prob": 2.915113691415172e-05}, {"id": 125, "seek": 75960, "start": 776.24, "end": 781.76, "text": " teach, uh, kids how to code in this. You may not want to use PyOdi because it's slow, it's heavy,", "tokens": [2924, 11, 2232, 11, 2301, 577, 281, 3089, 294, 341, 13, 509, 815, 406, 528, 281, 764, 9953, 46, 4504, 570, 309, 311, 2964, 11, 309, 311, 4676, 11], "temperature": 0.0, "avg_logprob": -0.12950671059744698, "compression_ratio": 1.7188612099644127, "no_speech_prob": 2.915113691415172e-05}, {"id": 126, "seek": 75960, "start": 781.76, "end": 787.6800000000001, "text": " it's, like, powerful, and it's useful, useful for other things. You can use MicroPython, which", "tokens": [309, 311, 11, 411, 11, 4005, 11, 293, 309, 311, 4420, 11, 4420, 337, 661, 721, 13, 509, 393, 764, 25642, 47, 88, 11943, 11, 597], "temperature": 0.0, "avg_logprob": -0.12950671059744698, "compression_ratio": 1.7188612099644127, "no_speech_prob": 2.915113691415172e-05}, {"id": 127, "seek": 78768, "start": 787.68, "end": 793.68, "text": " take no time to load, um, but it provides some other basic Python, um, code that you could write,", "tokens": [747, 572, 565, 281, 3677, 11, 1105, 11, 457, 309, 6417, 512, 661, 3875, 15329, 11, 1105, 11, 3089, 300, 291, 727, 2464, 11], "temperature": 0.0, "avg_logprob": -0.14068645477294922, "compression_ratio": 1.6782608695652175, "no_speech_prob": 5.853086804563645e-06}, {"id": 128, "seek": 78768, "start": 793.68, "end": 799.4399999999999, "text": " uh, in the HTML file. So you can quickly teach someone Python without installing Python and just,", "tokens": [2232, 11, 294, 264, 17995, 3991, 13, 407, 291, 393, 2661, 2924, 1580, 15329, 1553, 20762, 15329, 293, 445, 11], "temperature": 0.0, "avg_logprob": -0.14068645477294922, "compression_ratio": 1.6782608695652175, "no_speech_prob": 5.853086804563645e-06}, {"id": 129, "seek": 78768, "start": 799.4399999999999, "end": 806.2399999999999, "text": " like, running, running it on the HTML file. Um, you can also add some metadata. For example,", "tokens": [411, 11, 2614, 11, 2614, 309, 322, 264, 17995, 3991, 13, 3301, 11, 291, 393, 611, 909, 512, 26603, 13, 1171, 1365, 11], "temperature": 0.0, "avg_logprob": -0.14068645477294922, "compression_ratio": 1.6782608695652175, "no_speech_prob": 5.853086804563645e-06}, {"id": 130, "seek": 78768, "start": 806.2399999999999, "end": 810.3199999999999, "text": " you know, you want to add the author who write this script and the license. You can also do that.", "tokens": [291, 458, 11, 291, 528, 281, 909, 264, 3793, 567, 2464, 341, 5755, 293, 264, 10476, 13, 509, 393, 611, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.14068645477294922, "compression_ratio": 1.6782608695652175, "no_speech_prob": 5.853086804563645e-06}, {"id": 131, "seek": 81032, "start": 810.32, "end": 817.84, "text": " No problem. So, uh, another thing that, uh, you may put in your HTML file while you are using", "tokens": [883, 1154, 13, 407, 11, 2232, 11, 1071, 551, 300, 11, 2232, 11, 291, 815, 829, 294, 428, 17995, 3991, 1339, 291, 366, 1228], "temperature": 0.0, "avg_logprob": -0.19457642928413724, "compression_ratio": 1.646808510638298, "no_speech_prob": 4.557295142149087e-06}, {"id": 132, "seek": 81032, "start": 817.84, "end": 822.72, "text": " PyScript is the PyRepoll, uh, is something that's just like Jupyter Notebook. If you have", "tokens": [9953, 14237, 307, 264, 9953, 25554, 1833, 11, 2232, 11, 307, 746, 300, 311, 445, 411, 22125, 88, 391, 11633, 2939, 13, 759, 291, 362], "temperature": 0.0, "avg_logprob": -0.19457642928413724, "compression_ratio": 1.646808510638298, "no_speech_prob": 4.557295142149087e-06}, {"id": 133, "seek": 81032, "start": 822.72, "end": 827.9200000000001, "text": " Jupyter Notebook, you know, it's, like, very nice, um, repo that you can, like, put in the Python code,", "tokens": [22125, 88, 391, 11633, 2939, 11, 291, 458, 11, 309, 311, 11, 411, 11, 588, 1481, 11, 1105, 11, 49040, 300, 291, 393, 11, 411, 11, 829, 294, 264, 15329, 3089, 11], "temperature": 0.0, "avg_logprob": -0.19457642928413724, "compression_ratio": 1.646808510638298, "no_speech_prob": 4.557295142149087e-06}, {"id": 134, "seek": 81032, "start": 827.9200000000001, "end": 834.5600000000001, "text": " shift, enter, and then it will execute and give you the result. Um, you can also embed that in your", "tokens": [5513, 11, 3242, 11, 293, 550, 309, 486, 14483, 293, 976, 291, 264, 1874, 13, 3301, 11, 291, 393, 611, 12240, 300, 294, 428], "temperature": 0.0, "avg_logprob": -0.19457642928413724, "compression_ratio": 1.646808510638298, "no_speech_prob": 4.557295142149087e-06}, {"id": 135, "seek": 83456, "start": 834.56, "end": 841.3599999999999, "text": " HTML page when you are using PyScript. So you just need to do the same thing, you know,", "tokens": [17995, 3028, 562, 291, 366, 1228, 9953, 14237, 13, 407, 291, 445, 643, 281, 360, 264, 912, 551, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.11893841879708426, "compression_ratio": 1.5784753363228698, "no_speech_prob": 5.946491910435725e-06}, {"id": 136, "seek": 83456, "start": 841.3599999999999, "end": 847.76, "text": " having those two lines of the style sheet and the, um, PyScript.js. And then you can just put the", "tokens": [1419, 729, 732, 3876, 295, 264, 3758, 8193, 293, 264, 11, 1105, 11, 9953, 14237, 13, 25530, 13, 400, 550, 291, 393, 445, 829, 264], "temperature": 0.0, "avg_logprob": -0.11893841879708426, "compression_ratio": 1.5784753363228698, "no_speech_prob": 5.946491910435725e-06}, {"id": 137, "seek": 83456, "start": 847.76, "end": 852.4, "text": " PyRepoll tag and then you will have a Jupyter-like repo that you could use in your site.", "tokens": [9953, 25554, 1833, 6162, 293, 550, 291, 486, 362, 257, 22125, 88, 391, 12, 4092, 49040, 300, 291, 727, 764, 294, 428, 3621, 13], "temperature": 0.0, "avg_logprob": -0.11893841879708426, "compression_ratio": 1.5784753363228698, "no_speech_prob": 5.946491910435725e-06}, {"id": 138, "seek": 83456, "start": 854.2399999999999, "end": 858.3199999999999, "text": " So why is it so useful, right? Like, uh, it's a new thing, it's exciting, but", "tokens": [407, 983, 307, 309, 370, 4420, 11, 558, 30, 1743, 11, 2232, 11, 309, 311, 257, 777, 551, 11, 309, 311, 4670, 11, 457], "temperature": 0.0, "avg_logprob": -0.11893841879708426, "compression_ratio": 1.5784753363228698, "no_speech_prob": 5.946491910435725e-06}, {"id": 139, "seek": 85832, "start": 858.32, "end": 865.36, "text": " can I really use it? Um, or is it just a fun thing to do? Um, why doing it on the front-end, right?", "tokens": [393, 286, 534, 764, 309, 30, 3301, 11, 420, 307, 309, 445, 257, 1019, 551, 281, 360, 30, 3301, 11, 983, 884, 309, 322, 264, 1868, 12, 521, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.17623419988723027, "compression_ratio": 1.708695652173913, "no_speech_prob": 9.748092452355195e-06}, {"id": 140, "seek": 85832, "start": 865.36, "end": 870.8000000000001, "text": " Like, now you can have, like, application, like Django, like I said, it's a kind of people love", "tokens": [1743, 11, 586, 291, 393, 362, 11, 411, 11, 3861, 11, 411, 33464, 17150, 11, 411, 286, 848, 11, 309, 311, 257, 733, 295, 561, 959], "temperature": 0.0, "avg_logprob": -0.17623419988723027, "compression_ratio": 1.708695652173913, "no_speech_prob": 9.748092452355195e-06}, {"id": 141, "seek": 85832, "start": 870.8000000000001, "end": 879.44, "text": " Django. And like, I, you know, uh, why do we want PyScript? Um, because sometimes, like, things just", "tokens": [33464, 17150, 13, 400, 411, 11, 286, 11, 291, 458, 11, 2232, 11, 983, 360, 321, 528, 9953, 14237, 30, 3301, 11, 570, 2171, 11, 411, 11, 721, 445], "temperature": 0.0, "avg_logprob": -0.17623419988723027, "compression_ratio": 1.708695652173913, "no_speech_prob": 9.748092452355195e-06}, {"id": 142, "seek": 85832, "start": 879.44, "end": 885.6800000000001, "text": " need to be run on the front-end. Sometimes, like, we can't really, um, rely on, you know, uh, an", "tokens": [643, 281, 312, 1190, 322, 264, 1868, 12, 521, 13, 4803, 11, 411, 11, 321, 393, 380, 534, 11, 1105, 11, 10687, 322, 11, 291, 458, 11, 2232, 11, 364], "temperature": 0.0, "avg_logprob": -0.17623419988723027, "compression_ratio": 1.708695652173913, "no_speech_prob": 9.748092452355195e-06}, {"id": 143, "seek": 88568, "start": 885.68, "end": 893.12, "text": " application like Django or other Python application to handle all this Python code. Um, for example,", "tokens": [3861, 411, 33464, 17150, 420, 661, 15329, 3861, 281, 4813, 439, 341, 15329, 3089, 13, 3301, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.11655496148502126, "compression_ratio": 1.668122270742358, "no_speech_prob": 1.5648232874809764e-05}, {"id": 144, "seek": 88568, "start": 893.12, "end": 899.4399999999999, "text": " if you don't want to use up all your resources, right? Like, if you have a back-end and then the", "tokens": [498, 291, 500, 380, 528, 281, 764, 493, 439, 428, 3593, 11, 558, 30, 1743, 11, 498, 291, 362, 257, 646, 12, 521, 293, 550, 264], "temperature": 0.0, "avg_logprob": -0.11655496148502126, "compression_ratio": 1.668122270742358, "no_speech_prob": 1.5648232874809764e-05}, {"id": 145, "seek": 88568, "start": 899.4399999999999, "end": 905.04, "text": " back-end is actually hosted by you or the cloud service that you pay for, if there's a lot of", "tokens": [646, 12, 521, 307, 767, 19204, 538, 291, 420, 264, 4588, 2643, 300, 291, 1689, 337, 11, 498, 456, 311, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.11655496148502126, "compression_ratio": 1.668122270742358, "no_speech_prob": 1.5648232874809764e-05}, {"id": 146, "seek": 88568, "start": 905.04, "end": 911.76, "text": " user and like the, if every single user had a very, like, um, heavy use of your resources,", "tokens": [4195, 293, 411, 264, 11, 498, 633, 2167, 4195, 632, 257, 588, 11, 411, 11, 1105, 11, 4676, 764, 295, 428, 3593, 11], "temperature": 0.0, "avg_logprob": -0.11655496148502126, "compression_ratio": 1.668122270742358, "no_speech_prob": 1.5648232874809764e-05}, {"id": 147, "seek": 91176, "start": 911.76, "end": 917.68, "text": " then the bills can be expensive. And then you may not want that. You want to maybe, um, you know,", "tokens": [550, 264, 12433, 393, 312, 5124, 13, 400, 550, 291, 815, 406, 528, 300, 13, 509, 528, 281, 1310, 11, 1105, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.1529727085031194, "compression_ratio": 1.7418181818181817, "no_speech_prob": 3.181412466801703e-06}, {"id": 148, "seek": 91176, "start": 917.68, "end": 922.8, "text": " give, give back the low into the, the users who is using it, right? So you could, you could maybe", "tokens": [976, 11, 976, 646, 264, 2295, 666, 264, 11, 264, 5022, 567, 307, 1228, 309, 11, 558, 30, 407, 291, 727, 11, 291, 727, 1310], "temperature": 0.0, "avg_logprob": -0.1529727085031194, "compression_ratio": 1.7418181818181817, "no_speech_prob": 3.181412466801703e-06}, {"id": 149, "seek": 91176, "start": 922.8, "end": 929.68, "text": " push things to the front-end. Um, on all, if I've heard, like, maintainers said that, like, they", "tokens": [2944, 721, 281, 264, 1868, 12, 521, 13, 3301, 11, 322, 439, 11, 498, 286, 600, 2198, 11, 411, 11, 6909, 433, 848, 300, 11, 411, 11, 436], "temperature": 0.0, "avg_logprob": -0.1529727085031194, "compression_ratio": 1.7418181818181817, "no_speech_prob": 3.181412466801703e-06}, {"id": 150, "seek": 91176, "start": 929.68, "end": 935.6, "text": " may want people to try out their code, you know, you can build a sandbox that let people to, um,", "tokens": [815, 528, 561, 281, 853, 484, 641, 3089, 11, 291, 458, 11, 291, 393, 1322, 257, 42115, 300, 718, 561, 281, 11, 1105, 11], "temperature": 0.0, "avg_logprob": -0.1529727085031194, "compression_ratio": 1.7418181818181817, "no_speech_prob": 3.181412466801703e-06}, {"id": 151, "seek": 91176, "start": 935.6, "end": 941.12, "text": " to run it. Like, for example, a lot of the data science stuff, you know, uh, for example,", "tokens": [281, 1190, 309, 13, 1743, 11, 337, 1365, 11, 257, 688, 295, 264, 1412, 3497, 1507, 11, 291, 458, 11, 2232, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.1529727085031194, "compression_ratio": 1.7418181818181817, "no_speech_prob": 3.181412466801703e-06}, {"id": 152, "seek": 94112, "start": 941.12, "end": 946.0, "text": " the NumPy, SciPy, they, they will have, before they will have the binder thing that actually load", "tokens": [264, 22592, 47, 88, 11, 16942, 47, 88, 11, 436, 11, 436, 486, 362, 11, 949, 436, 486, 362, 264, 45630, 551, 300, 767, 3677], "temperature": 0.0, "avg_logprob": -0.15343459447224936, "compression_ratio": 1.821705426356589, "no_speech_prob": 1.2490224435168784e-05}, {"id": 153, "seek": 94112, "start": 946.0, "end": 949.92, "text": " in, you know, another application, you know, that have the, have the back-end and then they", "tokens": [294, 11, 291, 458, 11, 1071, 3861, 11, 291, 458, 11, 300, 362, 264, 11, 362, 264, 646, 12, 521, 293, 550, 436], "temperature": 0.0, "avg_logprob": -0.15343459447224936, "compression_ratio": 1.821705426356589, "no_speech_prob": 1.2490224435168784e-05}, {"id": 154, "seek": 94112, "start": 949.92, "end": 956.48, "text": " could run some code there to do it as an example. But for these services, uh, they're provided,", "tokens": [727, 1190, 512, 3089, 456, 281, 360, 309, 382, 364, 1365, 13, 583, 337, 613, 3328, 11, 2232, 11, 436, 434, 5649, 11], "temperature": 0.0, "avg_logprob": -0.15343459447224936, "compression_ratio": 1.821705426356589, "no_speech_prob": 1.2490224435168784e-05}, {"id": 155, "seek": 94112, "start": 956.48, "end": 961.52, "text": " if they're provided for free, usually they're quite slow or, you know, they have limits. So, um,", "tokens": [498, 436, 434, 5649, 337, 1737, 11, 2673, 436, 434, 1596, 2964, 420, 11, 291, 458, 11, 436, 362, 10406, 13, 407, 11, 1105, 11], "temperature": 0.0, "avg_logprob": -0.15343459447224936, "compression_ratio": 1.821705426356589, "no_speech_prob": 1.2490224435168784e-05}, {"id": 156, "seek": 94112, "start": 962.32, "end": 968.0, "text": " if you want to provide a, uh, a sandbox for, for users, if it can run on their machine,", "tokens": [498, 291, 528, 281, 2893, 257, 11, 2232, 11, 257, 42115, 337, 11, 337, 5022, 11, 498, 309, 393, 1190, 322, 641, 3479, 11], "temperature": 0.0, "avg_logprob": -0.15343459447224936, "compression_ratio": 1.821705426356589, "no_speech_prob": 1.2490224435168784e-05}, {"id": 157, "seek": 96800, "start": 968.0, "end": 972.64, "text": " you don't have to worry about people abusing it as well. Like, for example, some people, if you,", "tokens": [291, 500, 380, 362, 281, 3292, 466, 561, 410, 7981, 309, 382, 731, 13, 1743, 11, 337, 1365, 11, 512, 561, 11, 498, 291, 11], "temperature": 0.0, "avg_logprob": -0.12041552263991277, "compression_ratio": 1.7798507462686568, "no_speech_prob": 1.4442521205637604e-05}, {"id": 158, "seek": 96800, "start": 972.64, "end": 977.2, "text": " that whoever run whatever on your sandbox, they could do crypto mining and then it's not a good", "tokens": [300, 11387, 1190, 2035, 322, 428, 42115, 11, 436, 727, 360, 17240, 15512, 293, 550, 309, 311, 406, 257, 665], "temperature": 0.0, "avg_logprob": -0.12041552263991277, "compression_ratio": 1.7798507462686568, "no_speech_prob": 1.4442521205637604e-05}, {"id": 159, "seek": 96800, "start": 977.2, "end": 982.96, "text": " thing. So if it's on the front-end, it's, it's using the user's resources, not your resources,", "tokens": [551, 13, 407, 498, 309, 311, 322, 264, 1868, 12, 521, 11, 309, 311, 11, 309, 311, 1228, 264, 4195, 311, 3593, 11, 406, 428, 3593, 11], "temperature": 0.0, "avg_logprob": -0.12041552263991277, "compression_ratio": 1.7798507462686568, "no_speech_prob": 1.4442521205637604e-05}, {"id": 160, "seek": 96800, "start": 982.96, "end": 986.8, "text": " which if they want to mine Bitcoin, it's fine. It's on their machine or on your machine, you don't", "tokens": [597, 498, 436, 528, 281, 3892, 11414, 11, 309, 311, 2489, 13, 467, 311, 322, 641, 3479, 420, 322, 428, 3479, 11, 291, 500, 380], "temperature": 0.0, "avg_logprob": -0.12041552263991277, "compression_ratio": 1.7798507462686568, "no_speech_prob": 1.4442521205637604e-05}, {"id": 161, "seek": 96800, "start": 986.8, "end": 992.88, "text": " have to pay the bill. Um, also, uh, sometimes, uh, we have applications that, for example,", "tokens": [362, 281, 1689, 264, 2961, 13, 3301, 11, 611, 11, 2232, 11, 2171, 11, 2232, 11, 321, 362, 5821, 300, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.12041552263991277, "compression_ratio": 1.7798507462686568, "no_speech_prob": 1.4442521205637604e-05}, {"id": 162, "seek": 99288, "start": 992.88, "end": 998.24, "text": " it's some, uh, research data, some medical data, very sensitive. Uh, so you, you can't really,", "tokens": [309, 311, 512, 11, 2232, 11, 2132, 1412, 11, 512, 4625, 1412, 11, 588, 9477, 13, 4019, 11, 370, 291, 11, 291, 393, 380, 534, 11], "temperature": 0.0, "avg_logprob": -0.12807428135591395, "compression_ratio": 1.9829787234042553, "no_speech_prob": 5.007492745789932e-06}, {"id": 163, "seek": 99288, "start": 998.24, "end": 1003.04, "text": " you know, it's like the rules that you, the, the, the data can't leave the machine. So", "tokens": [291, 458, 11, 309, 311, 411, 264, 4474, 300, 291, 11, 264, 11, 264, 11, 264, 1412, 393, 380, 1856, 264, 3479, 13, 407], "temperature": 0.0, "avg_logprob": -0.12807428135591395, "compression_ratio": 1.9829787234042553, "no_speech_prob": 5.007492745789932e-06}, {"id": 164, "seek": 99288, "start": 1003.76, "end": 1008.72, "text": " you can't send it to a back-end somewhere to do it. Then, you know, um, maybe you can provide that,", "tokens": [291, 393, 380, 2845, 309, 281, 257, 646, 12, 521, 4079, 281, 360, 309, 13, 1396, 11, 291, 458, 11, 1105, 11, 1310, 291, 393, 2893, 300, 11], "temperature": 0.0, "avg_logprob": -0.12807428135591395, "compression_ratio": 1.9829787234042553, "no_speech_prob": 5.007492745789932e-06}, {"id": 165, "seek": 99288, "start": 1009.36, "end": 1014.96, "text": " you know, provide the code that, um, you know, someone can use it to run on the browser. So", "tokens": [291, 458, 11, 2893, 264, 3089, 300, 11, 1105, 11, 291, 458, 11, 1580, 393, 764, 309, 281, 1190, 322, 264, 11185, 13, 407], "temperature": 0.0, "avg_logprob": -0.12807428135591395, "compression_ratio": 1.9829787234042553, "no_speech_prob": 5.007492745789932e-06}, {"id": 166, "seek": 99288, "start": 1014.96, "end": 1018.96, "text": " it's run on their machine. So instead of, you know, you have, you have built the application", "tokens": [309, 311, 1190, 322, 641, 3479, 13, 407, 2602, 295, 11, 291, 458, 11, 291, 362, 11, 291, 362, 3094, 264, 3861], "temperature": 0.0, "avg_logprob": -0.12807428135591395, "compression_ratio": 1.9829787234042553, "no_speech_prob": 5.007492745789932e-06}, {"id": 167, "seek": 101896, "start": 1018.96, "end": 1024.96, "text": " and they have to send the data over to your app or whatever the back-end is and then, uh,", "tokens": [293, 436, 362, 281, 2845, 264, 1412, 670, 281, 428, 724, 420, 2035, 264, 646, 12, 521, 307, 293, 550, 11, 2232, 11], "temperature": 0.0, "avg_logprob": -0.11670355032418521, "compression_ratio": 1.7846153846153847, "no_speech_prob": 3.960526100854622e-06}, {"id": 168, "seek": 101896, "start": 1024.96, "end": 1029.8400000000001, "text": " to run the application. So it's also easier to set up as well. Otherwise, you may have to", "tokens": [281, 1190, 264, 3861, 13, 407, 309, 311, 611, 3571, 281, 992, 493, 382, 731, 13, 10328, 11, 291, 815, 362, 281], "temperature": 0.0, "avg_logprob": -0.11670355032418521, "compression_ratio": 1.7846153846153847, "no_speech_prob": 3.960526100854622e-06}, {"id": 169, "seek": 101896, "start": 1029.8400000000001, "end": 1035.44, "text": " provide a separate secure environment with the whole kind of, uh, set up of the back-end and", "tokens": [2893, 257, 4994, 7144, 2823, 365, 264, 1379, 733, 295, 11, 2232, 11, 992, 493, 295, 264, 646, 12, 521, 293], "temperature": 0.0, "avg_logprob": -0.11670355032418521, "compression_ratio": 1.7846153846153847, "no_speech_prob": 3.960526100854622e-06}, {"id": 170, "seek": 101896, "start": 1035.44, "end": 1040.08, "text": " the front-end together and stuff. You know, uh, if you just have the front-end, it's much easier.", "tokens": [264, 1868, 12, 521, 1214, 293, 1507, 13, 509, 458, 11, 2232, 11, 498, 291, 445, 362, 264, 1868, 12, 521, 11, 309, 311, 709, 3571, 13], "temperature": 0.0, "avg_logprob": -0.11670355032418521, "compression_ratio": 1.7846153846153847, "no_speech_prob": 3.960526100854622e-06}, {"id": 171, "seek": 101896, "start": 1040.08, "end": 1046.16, "text": " You don't have to worry about it. So, uh, with high script, with page Django, I know that you", "tokens": [509, 500, 380, 362, 281, 3292, 466, 309, 13, 407, 11, 2232, 11, 365, 1090, 5755, 11, 365, 3028, 33464, 17150, 11, 286, 458, 300, 291], "temperature": 0.0, "avg_logprob": -0.11670355032418521, "compression_ratio": 1.7846153846153847, "no_speech_prob": 3.960526100854622e-06}, {"id": 172, "seek": 104616, "start": 1046.16, "end": 1053.0400000000002, "text": " already know the answer is no, but, uh, actually it's very fun if you use them together. Um,", "tokens": [1217, 458, 264, 1867, 307, 572, 11, 457, 11, 2232, 11, 767, 309, 311, 588, 1019, 498, 291, 764, 552, 1214, 13, 3301, 11], "temperature": 0.0, "avg_logprob": -0.1764202117919922, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.0391842554090545e-05}, {"id": 173, "seek": 104616, "start": 1053.0400000000002, "end": 1059.92, "text": " I will show you a few things that I like, uh, that is done by either me or some of my friends.", "tokens": [286, 486, 855, 291, 257, 1326, 721, 300, 286, 411, 11, 2232, 11, 300, 307, 1096, 538, 2139, 385, 420, 512, 295, 452, 1855, 13], "temperature": 0.0, "avg_logprob": -0.1764202117919922, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.0391842554090545e-05}, {"id": 174, "seek": 104616, "start": 1059.92, "end": 1066.72, "text": " There's actually quite cool things that we have used, like both Django and high script. So, uh,", "tokens": [821, 311, 767, 1596, 1627, 721, 300, 321, 362, 1143, 11, 411, 1293, 33464, 17150, 293, 1090, 5755, 13, 407, 11, 2232, 11], "temperature": 0.0, "avg_logprob": -0.1764202117919922, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.0391842554090545e-05}, {"id": 175, "seek": 104616, "start": 1066.72, "end": 1073.68, "text": " for example, this is what I have done with, um, can I just pass away? Yeah, okay. So this is something", "tokens": [337, 1365, 11, 341, 307, 437, 286, 362, 1096, 365, 11, 1105, 11, 393, 286, 445, 1320, 1314, 30, 865, 11, 1392, 13, 407, 341, 307, 746], "temperature": 0.0, "avg_logprob": -0.1764202117919922, "compression_ratio": 1.5950413223140496, "no_speech_prob": 2.0391842554090545e-05}, {"id": 176, "seek": 107368, "start": 1073.68, "end": 1080.0, "text": " that I've done. It's like, uh, using high script with, uh, with Django that I've, so this is what", "tokens": [300, 286, 600, 1096, 13, 467, 311, 411, 11, 2232, 11, 1228, 1090, 5755, 365, 11, 2232, 11, 365, 33464, 17150, 300, 286, 600, 11, 370, 341, 307, 437], "temperature": 0.0, "avg_logprob": -0.15409031874841925, "compression_ratio": 1.787313432835821, "no_speech_prob": 1.0106753506988753e-05}, {"id": 177, "seek": 107368, "start": 1080.0, "end": 1085.04, "text": " I, I will show you what it is first and then I would explain. So here, this is the thing. I", "tokens": [286, 11, 286, 486, 855, 291, 437, 309, 307, 700, 293, 550, 286, 576, 2903, 13, 407, 510, 11, 341, 307, 264, 551, 13, 286], "temperature": 0.0, "avg_logprob": -0.15409031874841925, "compression_ratio": 1.787313432835821, "no_speech_prob": 1.0106753506988753e-05}, {"id": 178, "seek": 107368, "start": 1085.04, "end": 1090.0800000000002, "text": " think this one, this one I can assume is cool. So this is a recommender system, right? So I have", "tokens": [519, 341, 472, 11, 341, 472, 286, 393, 6552, 307, 1627, 13, 407, 341, 307, 257, 2748, 260, 1185, 11, 558, 30, 407, 286, 362], "temperature": 0.0, "avg_logprob": -0.15409031874841925, "compression_ratio": 1.787313432835821, "no_speech_prob": 1.0106753506988753e-05}, {"id": 179, "seek": 107368, "start": 1090.0800000000002, "end": 1096.4, "text": " all these movies that I download from the movie dataset on, uh, cargo and then, um, is there,", "tokens": [439, 613, 6233, 300, 286, 5484, 490, 264, 3169, 28872, 322, 11, 2232, 11, 19449, 293, 550, 11, 1105, 11, 307, 456, 11], "temperature": 0.0, "avg_logprob": -0.15409031874841925, "compression_ratio": 1.787313432835821, "no_speech_prob": 1.0106753506988753e-05}, {"id": 180, "seek": 107368, "start": 1096.4, "end": 1101.2, "text": " there are a bunch of ratings. So this recommender, if you put in a movie that you like, if you try", "tokens": [456, 366, 257, 3840, 295, 24603, 13, 407, 341, 2748, 260, 11, 498, 291, 829, 294, 257, 3169, 300, 291, 411, 11, 498, 291, 853], "temperature": 0.0, "avg_logprob": -0.15409031874841925, "compression_ratio": 1.787313432835821, "no_speech_prob": 1.0106753506988753e-05}, {"id": 181, "seek": 110120, "start": 1101.2, "end": 1106.4, "text": " to find all the potential movie that you like after, for example, I always like putting Iron Man", "tokens": [281, 915, 439, 264, 3995, 3169, 300, 291, 411, 934, 11, 337, 1365, 11, 286, 1009, 411, 3372, 13720, 2458], "temperature": 0.0, "avg_logprob": -0.11387716321384206, "compression_ratio": 1.7163120567375887, "no_speech_prob": 5.6303841120097786e-05}, {"id": 182, "seek": 110120, "start": 1106.4, "end": 1112.56, "text": " because I know it works. And then give me five recommendations. If I like Iron Man, what else", "tokens": [570, 286, 458, 309, 1985, 13, 400, 550, 976, 385, 1732, 10434, 13, 759, 286, 411, 13720, 2458, 11, 437, 1646], "temperature": 0.0, "avg_logprob": -0.11387716321384206, "compression_ratio": 1.7163120567375887, "no_speech_prob": 5.6303841120097786e-05}, {"id": 183, "seek": 110120, "start": 1112.56, "end": 1117.76, "text": " would you recommend me? And then if I click recommend, and I've got five of them, right? So", "tokens": [576, 291, 2748, 385, 30, 400, 550, 498, 286, 2052, 2748, 11, 293, 286, 600, 658, 1732, 295, 552, 11, 558, 30, 407], "temperature": 0.0, "avg_logprob": -0.11387716321384206, "compression_ratio": 1.7163120567375887, "no_speech_prob": 5.6303841120097786e-05}, {"id": 184, "seek": 110120, "start": 1117.76, "end": 1123.3600000000001, "text": " most of them sci-fi, sci-fi movie, which is quite cool. Um, there's also the Dark Knight, which is,", "tokens": [881, 295, 552, 2180, 12, 13325, 11, 2180, 12, 13325, 3169, 11, 597, 307, 1596, 1627, 13, 3301, 11, 456, 311, 611, 264, 9563, 18708, 11, 597, 307, 11], "temperature": 0.0, "avg_logprob": -0.11387716321384206, "compression_ratio": 1.7163120567375887, "no_speech_prob": 5.6303841120097786e-05}, {"id": 185, "seek": 110120, "start": 1123.3600000000001, "end": 1129.04, "text": " I think it's the, the movie about the Batman, which is also, I like it. Um, so yeah, that's nice. Um,", "tokens": [286, 519, 309, 311, 264, 11, 264, 3169, 466, 264, 15432, 11, 597, 307, 611, 11, 286, 411, 309, 13, 3301, 11, 370, 1338, 11, 300, 311, 1481, 13, 3301, 11], "temperature": 0.0, "avg_logprob": -0.11387716321384206, "compression_ratio": 1.7163120567375887, "no_speech_prob": 5.6303841120097786e-05}, {"id": 186, "seek": 112904, "start": 1129.04, "end": 1134.8, "text": " so, but this thing, right? This thing, usually you think of, oh, it's like a machine learning thing,", "tokens": [370, 11, 457, 341, 551, 11, 558, 30, 639, 551, 11, 2673, 291, 519, 295, 11, 1954, 11, 309, 311, 411, 257, 3479, 2539, 551, 11], "temperature": 0.0, "avg_logprob": -0.14487484296162922, "compression_ratio": 1.7081545064377683, "no_speech_prob": 1.1642086974461563e-05}, {"id": 187, "seek": 112904, "start": 1134.8, "end": 1141.52, "text": " right? It's a, uh, it's a recommend, recommender system. You know, can I run it on the front end?", "tokens": [558, 30, 467, 311, 257, 11, 2232, 11, 309, 311, 257, 2748, 11, 2748, 260, 1185, 13, 509, 458, 11, 393, 286, 1190, 309, 322, 264, 1868, 917, 30], "temperature": 0.0, "avg_logprob": -0.14487484296162922, "compression_ratio": 1.7081545064377683, "no_speech_prob": 1.1642086974461563e-05}, {"id": 188, "seek": 112904, "start": 1141.52, "end": 1148.3999999999999, "text": " Yes, you can. As long as you have your model already trained, then, um, for example, in my example", "tokens": [1079, 11, 291, 393, 13, 1018, 938, 382, 291, 362, 428, 2316, 1217, 8895, 11, 550, 11, 1105, 11, 337, 1365, 11, 294, 452, 1365], "temperature": 0.0, "avg_logprob": -0.14487484296162922, "compression_ratio": 1.7081545064377683, "no_speech_prob": 1.1642086974461563e-05}, {"id": 189, "seek": 112904, "start": 1148.3999999999999, "end": 1155.52, "text": " here, actually you have a link to see the, the, uh, the, how it's set up. If you click on this link,", "tokens": [510, 11, 767, 291, 362, 257, 2113, 281, 536, 264, 11, 264, 11, 2232, 11, 264, 11, 577, 309, 311, 992, 493, 13, 759, 291, 2052, 322, 341, 2113, 11], "temperature": 0.0, "avg_logprob": -0.14487484296162922, "compression_ratio": 1.7081545064377683, "no_speech_prob": 1.1642086974461563e-05}, {"id": 190, "seek": 115552, "start": 1155.52, "end": 1162.6399999999999, "text": " uh, it will show you how I set it up. So you can play around yourself as well. So, um, what I did", "tokens": [2232, 11, 309, 486, 855, 291, 577, 286, 992, 309, 493, 13, 407, 291, 393, 862, 926, 1803, 382, 731, 13, 407, 11, 1105, 11, 437, 286, 630], "temperature": 0.0, "avg_logprob": -0.11426948176489936, "compression_ratio": 1.7545126353790614, "no_speech_prob": 5.856876668985933e-06}, {"id": 191, "seek": 115552, "start": 1162.6399999999999, "end": 1166.8799999999999, "text": " is just like, I, of course, I download the data as a gif, and you have to have the data to make", "tokens": [307, 445, 411, 11, 286, 11, 295, 1164, 11, 286, 5484, 264, 1412, 382, 257, 290, 351, 11, 293, 291, 362, 281, 362, 264, 1412, 281, 652], "temperature": 0.0, "avg_logprob": -0.11426948176489936, "compression_ratio": 1.7545126353790614, "no_speech_prob": 5.856876668985933e-06}, {"id": 192, "seek": 115552, "start": 1166.8799999999999, "end": 1172.32, "text": " it work, right? Um, and then after that, you just, uh, you know, run, run some of this script. You", "tokens": [309, 589, 11, 558, 30, 3301, 11, 293, 550, 934, 300, 11, 291, 445, 11, 2232, 11, 291, 458, 11, 1190, 11, 1190, 512, 295, 341, 5755, 13, 509], "temperature": 0.0, "avg_logprob": -0.11426948176489936, "compression_ratio": 1.7545126353790614, "no_speech_prob": 5.856876668985933e-06}, {"id": 193, "seek": 115552, "start": 1172.32, "end": 1177.68, "text": " can actually do, do it in a more beautiful way. I'm just using some command line to run all this", "tokens": [393, 767, 360, 11, 360, 309, 294, 257, 544, 2238, 636, 13, 286, 478, 445, 1228, 512, 5622, 1622, 281, 1190, 439, 341], "temperature": 0.0, "avg_logprob": -0.11426948176489936, "compression_ratio": 1.7545126353790614, "no_speech_prob": 5.856876668985933e-06}, {"id": 194, "seek": 115552, "start": 1177.68, "end": 1184.0, "text": " script to load in the data to, uh, to train your model and stuff. You can do it with other ways.", "tokens": [5755, 281, 3677, 294, 264, 1412, 281, 11, 2232, 11, 281, 3847, 428, 2316, 293, 1507, 13, 509, 393, 360, 309, 365, 661, 2098, 13], "temperature": 0.0, "avg_logprob": -0.11426948176489936, "compression_ratio": 1.7545126353790614, "no_speech_prob": 5.856876668985933e-06}, {"id": 195, "seek": 118400, "start": 1184.0, "end": 1188.88, "text": " For example, you have a user, uh, a mean user interface, right? They upload a new data and", "tokens": [1171, 1365, 11, 291, 362, 257, 4195, 11, 2232, 11, 257, 914, 4195, 9226, 11, 558, 30, 814, 6580, 257, 777, 1412, 293], "temperature": 0.0, "avg_logprob": -0.10302900966209701, "compression_ratio": 1.7827476038338659, "no_speech_prob": 4.9304526328342035e-06}, {"id": 196, "seek": 118400, "start": 1188.88, "end": 1193.68, "text": " other stuff. Then, uh, it will automatically retrain the model when there's new data.", "tokens": [661, 1507, 13, 1396, 11, 2232, 11, 309, 486, 6772, 1533, 7146, 264, 2316, 562, 456, 311, 777, 1412, 13], "temperature": 0.0, "avg_logprob": -0.10302900966209701, "compression_ratio": 1.7827476038338659, "no_speech_prob": 4.9304526328342035e-06}, {"id": 197, "seek": 118400, "start": 1193.68, "end": 1197.68, "text": " You can set that up as well, but it's just a demo. So this is like this. But after that,", "tokens": [509, 393, 992, 300, 493, 382, 731, 11, 457, 309, 311, 445, 257, 10723, 13, 407, 341, 307, 411, 341, 13, 583, 934, 300, 11], "temperature": 0.0, "avg_logprob": -0.10302900966209701, "compression_ratio": 1.7827476038338659, "no_speech_prob": 4.9304526328342035e-06}, {"id": 198, "seek": 118400, "start": 1197.68, "end": 1203.04, "text": " there will be a model that's already, um, trained. It will deploy to the front end. And then in the", "tokens": [456, 486, 312, 257, 2316, 300, 311, 1217, 11, 1105, 11, 8895, 13, 467, 486, 7274, 281, 264, 1868, 917, 13, 400, 550, 294, 264], "temperature": 0.0, "avg_logprob": -0.10302900966209701, "compression_ratio": 1.7827476038338659, "no_speech_prob": 4.9304526328342035e-06}, {"id": 199, "seek": 118400, "start": 1203.04, "end": 1206.96, "text": " front end, that's how this come in. That's like, that's how it works. So this is just a trained", "tokens": [1868, 917, 11, 300, 311, 577, 341, 808, 294, 13, 663, 311, 411, 11, 300, 311, 577, 309, 1985, 13, 407, 341, 307, 445, 257, 8895], "temperature": 0.0, "avg_logprob": -0.10302900966209701, "compression_ratio": 1.7827476038338659, "no_speech_prob": 4.9304526328342035e-06}, {"id": 200, "seek": 118400, "start": 1206.96, "end": 1212.16, "text": " model. It's very lightweight. Um, and then you don't have to host all the data. It could be done", "tokens": [2316, 13, 467, 311, 588, 22052, 13, 3301, 11, 293, 550, 291, 500, 380, 362, 281, 3975, 439, 264, 1412, 13, 467, 727, 312, 1096], "temperature": 0.0, "avg_logprob": -0.10302900966209701, "compression_ratio": 1.7827476038338659, "no_speech_prob": 4.9304526328342035e-06}, {"id": 201, "seek": 121216, "start": 1212.16, "end": 1218.0, "text": " somewhere else. But, uh, for the user, they, you know, they have a trained model and then they", "tokens": [4079, 1646, 13, 583, 11, 2232, 11, 337, 264, 4195, 11, 436, 11, 291, 458, 11, 436, 362, 257, 8895, 2316, 293, 550, 436], "temperature": 0.0, "avg_logprob": -0.12682732939720154, "compression_ratio": 1.6192660550458715, "no_speech_prob": 2.25236017286079e-05}, {"id": 202, "seek": 121216, "start": 1218.0, "end": 1223.2, "text": " just need to put in the input and it will give you some results. So if a machine learning model", "tokens": [445, 643, 281, 829, 294, 264, 4846, 293, 309, 486, 976, 291, 512, 3542, 13, 407, 498, 257, 3479, 2539, 2316], "temperature": 0.0, "avg_logprob": -0.12682732939720154, "compression_ratio": 1.6192660550458715, "no_speech_prob": 2.25236017286079e-05}, {"id": 203, "seek": 121216, "start": 1223.2, "end": 1228.5600000000002, "text": " deployed on the front end, another thing that my friend has done, which is quite cool, is", "tokens": [17826, 322, 264, 1868, 917, 11, 1071, 551, 300, 452, 1277, 575, 1096, 11, 597, 307, 1596, 1627, 11, 307], "temperature": 0.0, "avg_logprob": -0.12682732939720154, "compression_ratio": 1.6192660550458715, "no_speech_prob": 2.25236017286079e-05}, {"id": 204, "seek": 121216, "start": 1230.3200000000002, "end": 1236.3200000000002, "text": " front end as a back end. So it's, it's running Django on the browser. So", "tokens": [1868, 917, 382, 257, 646, 917, 13, 407, 309, 311, 11, 309, 311, 2614, 33464, 17150, 322, 264, 11185, 13, 407], "temperature": 0.0, "avg_logprob": -0.12682732939720154, "compression_ratio": 1.6192660550458715, "no_speech_prob": 2.25236017286079e-05}, {"id": 205, "seek": 123632, "start": 1236.32, "end": 1246.96, "text": " yes, this is so small, but yeah, someone has done it. Um, this is not my doing. So I, I, I don't", "tokens": [2086, 11, 341, 307, 370, 1359, 11, 457, 1338, 11, 1580, 575, 1096, 309, 13, 3301, 11, 341, 307, 406, 452, 884, 13, 407, 286, 11, 286, 11, 286, 500, 380], "temperature": 0.0, "avg_logprob": -0.18779929209563692, "compression_ratio": 1.835680751173709, "no_speech_prob": 3.520056634442881e-05}, {"id": 206, "seek": 123632, "start": 1246.96, "end": 1252.56, "text": " like, uh, you know, I don't have any responsibility, but you know, have a look. So this is actually", "tokens": [411, 11, 2232, 11, 291, 458, 11, 286, 500, 380, 362, 604, 6357, 11, 457, 291, 458, 11, 362, 257, 574, 13, 407, 341, 307, 767], "temperature": 0.0, "avg_logprob": -0.18779929209563692, "compression_ratio": 1.835680751173709, "no_speech_prob": 3.520056634442881e-05}, {"id": 207, "seek": 123632, "start": 1252.56, "end": 1259.04, "text": " like you have, so you have two, basically you have two browser, two, uh, browser, like HTML page.", "tokens": [411, 291, 362, 11, 370, 291, 362, 732, 11, 1936, 291, 362, 732, 11185, 11, 732, 11, 2232, 11, 11185, 11, 411, 17995, 3028, 13], "temperature": 0.0, "avg_logprob": -0.18779929209563692, "compression_ratio": 1.835680751173709, "no_speech_prob": 3.520056634442881e-05}, {"id": 208, "seek": 123632, "start": 1259.04, "end": 1264.56, "text": " One page is the server. One page is the front end. So this is what it is. So you have a back end", "tokens": [1485, 3028, 307, 264, 7154, 13, 1485, 3028, 307, 264, 1868, 917, 13, 407, 341, 307, 437, 309, 307, 13, 407, 291, 362, 257, 646, 917], "temperature": 0.0, "avg_logprob": -0.18779929209563692, "compression_ratio": 1.835680751173709, "no_speech_prob": 3.520056634442881e-05}, {"id": 209, "seek": 126456, "start": 1264.56, "end": 1271.6, "text": " and a front end on the same page. Yay. Um, so yeah, you can do that. So I, I was like, oh, this is", "tokens": [293, 257, 1868, 917, 322, 264, 912, 3028, 13, 13268, 13, 3301, 11, 370, 1338, 11, 291, 393, 360, 300, 13, 407, 286, 11, 286, 390, 411, 11, 1954, 11, 341, 307], "temperature": 0.0, "avg_logprob": -0.11836130577221252, "compression_ratio": 1.6796536796536796, "no_speech_prob": 9.13568219402805e-05}, {"id": 210, "seek": 126456, "start": 1271.6, "end": 1276.6399999999999, "text": " a bit fun, but is it useful? But my friend here, Hugo told me that you can actually use it to test", "tokens": [257, 857, 1019, 11, 457, 307, 309, 4420, 30, 583, 452, 1277, 510, 11, 32504, 1907, 385, 300, 291, 393, 767, 764, 309, 281, 1500], "temperature": 0.0, "avg_logprob": -0.11836130577221252, "compression_ratio": 1.6796536796536796, "no_speech_prob": 9.13568219402805e-05}, {"id": 211, "seek": 126456, "start": 1276.6399999999999, "end": 1282.0, "text": " things because you now can run an application on the browser. So everybody have a browser. So you", "tokens": [721, 570, 291, 586, 393, 1190, 364, 3861, 322, 264, 11185, 13, 407, 2201, 362, 257, 11185, 13, 407, 291], "temperature": 0.0, "avg_logprob": -0.11836130577221252, "compression_ratio": 1.6796536796536796, "no_speech_prob": 9.13568219402805e-05}, {"id": 212, "seek": 126456, "start": 1282.0, "end": 1287.6, "text": " can, you can run an application on it, which is very cool. So, um, yeah, check that out. Um,", "tokens": [393, 11, 291, 393, 1190, 364, 3861, 322, 309, 11, 597, 307, 588, 1627, 13, 407, 11, 1105, 11, 1338, 11, 1520, 300, 484, 13, 3301, 11], "temperature": 0.0, "avg_logprob": -0.11836130577221252, "compression_ratio": 1.6796536796536796, "no_speech_prob": 9.13568219402805e-05}, {"id": 213, "seek": 128760, "start": 1287.6, "end": 1294.3999999999999, "text": " other things that I use pie square four is not, uh, with Django is, uh, with, uh, other things,", "tokens": [661, 721, 300, 286, 764, 1730, 3732, 1451, 307, 406, 11, 2232, 11, 365, 33464, 17150, 307, 11, 2232, 11, 365, 11, 2232, 11, 661, 721, 11], "temperature": 0.0, "avg_logprob": -0.15103787534377155, "compression_ratio": 1.7391304347826086, "no_speech_prob": 2.837692591128871e-05}, {"id": 214, "seek": 128760, "start": 1294.3999999999999, "end": 1299.1999999999998, "text": " for example, use it together with D3. I have this example here. I already preload them because I,", "tokens": [337, 1365, 11, 764, 309, 1214, 365, 413, 18, 13, 286, 362, 341, 1365, 510, 13, 286, 1217, 659, 2907, 552, 570, 286, 11], "temperature": 0.0, "avg_logprob": -0.15103787534377155, "compression_ratio": 1.7391304347826086, "no_speech_prob": 2.837692591128871e-05}, {"id": 215, "seek": 128760, "start": 1299.1999999999998, "end": 1304.32, "text": " I'm not going to like fool you. It's actually take quite a while to load. So that's why I preload", "tokens": [286, 478, 406, 516, 281, 411, 7979, 291, 13, 467, 311, 767, 747, 1596, 257, 1339, 281, 3677, 13, 407, 300, 311, 983, 286, 659, 2907], "temperature": 0.0, "avg_logprob": -0.15103787534377155, "compression_ratio": 1.7391304347826086, "no_speech_prob": 2.837692591128871e-05}, {"id": 216, "seek": 128760, "start": 1304.32, "end": 1309.9199999999998, "text": " them. Um, but yeah, but because I'm using the whole kind of package, right? Here I'm using", "tokens": [552, 13, 3301, 11, 457, 1338, 11, 457, 570, 286, 478, 1228, 264, 1379, 733, 295, 7372, 11, 558, 30, 1692, 286, 478, 1228], "temperature": 0.0, "avg_logprob": -0.15103787534377155, "compression_ratio": 1.7391304347826086, "no_speech_prob": 2.837692591128871e-05}, {"id": 217, "seek": 128760, "start": 1309.9199999999998, "end": 1315.6799999999998, "text": " network X. I have put in a network graph. I have all these network analysis, which is super cool.", "tokens": [3209, 1783, 13, 286, 362, 829, 294, 257, 3209, 4295, 13, 286, 362, 439, 613, 3209, 5215, 11, 597, 307, 1687, 1627, 13], "temperature": 0.0, "avg_logprob": -0.15103787534377155, "compression_ratio": 1.7391304347826086, "no_speech_prob": 2.837692591128871e-05}, {"id": 218, "seek": 131568, "start": 1315.68, "end": 1321.28, "text": " But, you know, I don't like the network X, uh, visualization because it's kind of basic. So", "tokens": [583, 11, 291, 458, 11, 286, 500, 380, 411, 264, 3209, 1783, 11, 2232, 11, 25801, 570, 309, 311, 733, 295, 3875, 13, 407], "temperature": 0.0, "avg_logprob": -0.1244859319972241, "compression_ratio": 1.713768115942029, "no_speech_prob": 5.848316504852846e-06}, {"id": 219, "seek": 131568, "start": 1321.28, "end": 1325.92, "text": " that's why I use D3 for the visualization. I can do this, right? Very cool animation. I can click", "tokens": [300, 311, 983, 286, 764, 413, 18, 337, 264, 25801, 13, 286, 393, 360, 341, 11, 558, 30, 4372, 1627, 9603, 13, 286, 393, 2052], "temperature": 0.0, "avg_logprob": -0.1244859319972241, "compression_ratio": 1.713768115942029, "no_speech_prob": 5.848316504852846e-06}, {"id": 220, "seek": 131568, "start": 1325.92, "end": 1330.96, "text": " on things and things change. You know, now I see all the neighbors are colored coded. Um, so yeah,", "tokens": [322, 721, 293, 721, 1319, 13, 509, 458, 11, 586, 286, 536, 439, 264, 12512, 366, 14332, 34874, 13, 3301, 11, 370, 1338, 11], "temperature": 0.0, "avg_logprob": -0.1244859319972241, "compression_ratio": 1.713768115942029, "no_speech_prob": 5.848316504852846e-06}, {"id": 221, "seek": 131568, "start": 1330.96, "end": 1336.8, "text": " like, uh, you can combine the cool stuff that JavaScript provide, for example, D3 and the", "tokens": [411, 11, 2232, 11, 291, 393, 10432, 264, 1627, 1507, 300, 15778, 2893, 11, 337, 1365, 11, 413, 18, 293, 264], "temperature": 0.0, "avg_logprob": -0.1244859319972241, "compression_ratio": 1.713768115942029, "no_speech_prob": 5.848316504852846e-06}, {"id": 222, "seek": 131568, "start": 1336.8, "end": 1341.44, "text": " cool stuff that Python provide, which is all these like data science stuff, which is cool. Um,", "tokens": [1627, 1507, 300, 15329, 2893, 11, 597, 307, 439, 613, 411, 1412, 3497, 1507, 11, 597, 307, 1627, 13, 3301, 11], "temperature": 0.0, "avg_logprob": -0.1244859319972241, "compression_ratio": 1.713768115942029, "no_speech_prob": 5.848316504852846e-06}, {"id": 223, "seek": 134144, "start": 1341.44, "end": 1348.64, "text": " also there are other plots as well. You know, um, before, you know, it's, you know, you can't have", "tokens": [611, 456, 366, 661, 28609, 382, 731, 13, 509, 458, 11, 1105, 11, 949, 11, 291, 458, 11, 309, 311, 11, 291, 458, 11, 291, 393, 380, 362], "temperature": 0.0, "avg_logprob": -0.1705205570567738, "compression_ratio": 1.7488584474885844, "no_speech_prob": 1.7198613932123408e-05}, {"id": 224, "seek": 134144, "start": 1348.64, "end": 1355.3600000000001, "text": " these interactive, um, things that you could, you know, interactive graph done easily on your", "tokens": [613, 15141, 11, 1105, 11, 721, 300, 291, 727, 11, 291, 458, 11, 15141, 4295, 1096, 3612, 322, 428], "temperature": 0.0, "avg_logprob": -0.1705205570567738, "compression_ratio": 1.7488584474885844, "no_speech_prob": 1.7198613932123408e-05}, {"id": 225, "seek": 134144, "start": 1355.3600000000001, "end": 1360.8, "text": " website. Um, so yeah, and also a map as well. This is not again, not my demo, but, you know,", "tokens": [3144, 13, 3301, 11, 370, 1338, 11, 293, 611, 257, 4471, 382, 731, 13, 639, 307, 406, 797, 11, 406, 452, 10723, 11, 457, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.1705205570567738, "compression_ratio": 1.7488584474885844, "no_speech_prob": 1.7198613932123408e-05}, {"id": 226, "seek": 134144, "start": 1360.8, "end": 1365.6000000000001, "text": " you can now have this map thingy where you can use folium, which is a, again, Python library. Now", "tokens": [291, 393, 586, 362, 341, 4471, 551, 88, 689, 291, 393, 764, 3339, 2197, 11, 597, 307, 257, 11, 797, 11, 15329, 6405, 13, 823], "temperature": 0.0, "avg_logprob": -0.1705205570567738, "compression_ratio": 1.7488584474885844, "no_speech_prob": 1.7198613932123408e-05}, {"id": 227, "seek": 136560, "start": 1365.6, "end": 1371.6, "text": " you can use it on the browser. Super cool. Um, yeah. And also I have actually a, start building a", "tokens": [291, 393, 764, 309, 322, 264, 11185, 13, 4548, 1627, 13, 3301, 11, 1338, 13, 400, 611, 286, 362, 767, 257, 11, 722, 2390, 257], "temperature": 0.0, "avg_logprob": -0.15403260411442937, "compression_ratio": 1.6920415224913494, "no_speech_prob": 1.0271392056893092e-05}, {"id": 228, "seek": 136560, "start": 1371.6, "end": 1376.24, "text": " Pyscript tutorial. Again, this is working progress because things keep changing. I can't keep it", "tokens": [430, 749, 5944, 7073, 13, 3764, 11, 341, 307, 1364, 4205, 570, 721, 1066, 4473, 13, 286, 393, 380, 1066, 309], "temperature": 0.0, "avg_logprob": -0.15403260411442937, "compression_ratio": 1.6920415224913494, "no_speech_prob": 1.0271392056893092e-05}, {"id": 229, "seek": 136560, "start": 1376.24, "end": 1381.4399999999998, "text": " up, but, um, if you're interested, if you want to try it, that may be a place you want to have a", "tokens": [493, 11, 457, 11, 1105, 11, 498, 291, 434, 3102, 11, 498, 291, 528, 281, 853, 309, 11, 300, 815, 312, 257, 1081, 291, 528, 281, 362, 257], "temperature": 0.0, "avg_logprob": -0.15403260411442937, "compression_ratio": 1.6920415224913494, "no_speech_prob": 1.0271392056893092e-05}, {"id": 230, "seek": 136560, "start": 1381.4399999999998, "end": 1387.1999999999998, "text": " look at. Um, so yeah, all of these slides, again, is this on the slide. So, uh, yeah, so download", "tokens": [574, 412, 13, 3301, 11, 370, 1338, 11, 439, 295, 613, 9788, 11, 797, 11, 307, 341, 322, 264, 4137, 13, 407, 11, 2232, 11, 1338, 11, 370, 5484], "temperature": 0.0, "avg_logprob": -0.15403260411442937, "compression_ratio": 1.6920415224913494, "no_speech_prob": 1.0271392056893092e-05}, {"id": 231, "seek": 136560, "start": 1387.1999999999998, "end": 1394.6399999999999, "text": " my slides if you need to. So, uh, I think I don't, don't have too much, um, time left. I would, uh,", "tokens": [452, 9788, 498, 291, 643, 281, 13, 407, 11, 2232, 11, 286, 519, 286, 500, 380, 11, 500, 380, 362, 886, 709, 11, 1105, 11, 565, 1411, 13, 286, 576, 11, 2232, 11], "temperature": 0.0, "avg_logprob": -0.15403260411442937, "compression_ratio": 1.6920415224913494, "no_speech_prob": 1.0271392056893092e-05}, {"id": 232, "seek": 139464, "start": 1394.64, "end": 1399.3600000000001, "text": " I would like to answer your questions, but there are these common questions that I would also", "tokens": [286, 576, 411, 281, 1867, 428, 1651, 11, 457, 456, 366, 613, 2689, 1651, 300, 286, 576, 611], "temperature": 0.0, "avg_logprob": -0.09471398451196866, "compression_ratio": 1.7262773722627738, "no_speech_prob": 1.4485783140116837e-05}, {"id": 233, "seek": 139464, "start": 1399.3600000000001, "end": 1404.72, "text": " ask and answer myself. So, for example, people ask me, can you pull in a Python script? Yes,", "tokens": [1029, 293, 1867, 2059, 13, 407, 11, 337, 1365, 11, 561, 1029, 385, 11, 393, 291, 2235, 294, 257, 15329, 5755, 30, 1079, 11], "temperature": 0.0, "avg_logprob": -0.09471398451196866, "compression_ratio": 1.7262773722627738, "no_speech_prob": 1.4485783140116837e-05}, {"id": 234, "seek": 139464, "start": 1404.72, "end": 1409.5200000000002, "text": " you can. You can use the fashion now, look at the documentation if you want to. Um, what Python", "tokens": [291, 393, 13, 509, 393, 764, 264, 6700, 586, 11, 574, 412, 264, 14333, 498, 291, 528, 281, 13, 3301, 11, 437, 15329], "temperature": 0.0, "avg_logprob": -0.09471398451196866, "compression_ratio": 1.7262773722627738, "no_speech_prob": 1.4485783140116837e-05}, {"id": 235, "seek": 139464, "start": 1409.5200000000002, "end": 1414.64, "text": " version you're using, it depends on the runtime, which is the, again, PyConfig settings that you", "tokens": [3037, 291, 434, 1228, 11, 309, 5946, 322, 264, 34474, 11, 597, 307, 264, 11, 797, 11, 9953, 9838, 20646, 6257, 300, 291], "temperature": 0.0, "avg_logprob": -0.09471398451196866, "compression_ratio": 1.7262773722627738, "no_speech_prob": 1.4485783140116837e-05}, {"id": 236, "seek": 139464, "start": 1414.64, "end": 1419.2800000000002, "text": " could, um, you know, uh, that you can look at it and see which one you want to use, you know,", "tokens": [727, 11, 1105, 11, 291, 458, 11, 2232, 11, 300, 291, 393, 574, 412, 309, 293, 536, 597, 472, 291, 528, 281, 764, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.09471398451196866, "compression_ratio": 1.7262773722627738, "no_speech_prob": 1.4485783140116837e-05}, {"id": 237, "seek": 141928, "start": 1419.28, "end": 1425.2, "text": " PyOdi version, which version you want to use, you can choose it yourself. And, uh, you know, why we", "tokens": [9953, 46, 4504, 3037, 11, 597, 3037, 291, 528, 281, 764, 11, 291, 393, 2826, 309, 1803, 13, 400, 11, 2232, 11, 291, 458, 11, 983, 321], "temperature": 0.0, "avg_logprob": -0.14926475133651343, "compression_ratio": 1.634453781512605, "no_speech_prob": 2.658832454471849e-05}, {"id": 238, "seek": 141928, "start": 1425.2, "end": 1431.84, "text": " can't do it like JavaScript, having script tag equals to Python, because, uh, this is so new,", "tokens": [393, 380, 360, 309, 411, 15778, 11, 1419, 5755, 6162, 6915, 281, 15329, 11, 570, 11, 2232, 11, 341, 307, 370, 777, 11], "temperature": 0.0, "avg_logprob": -0.14926475133651343, "compression_ratio": 1.634453781512605, "no_speech_prob": 2.658832454471849e-05}, {"id": 239, "seek": 141928, "start": 1431.84, "end": 1437.92, "text": " all the, uh, browsers, they don't support it yet, so we have to make a custom tag, which is PyScript.", "tokens": [439, 264, 11, 2232, 11, 36069, 11, 436, 500, 380, 1406, 309, 1939, 11, 370, 321, 362, 281, 652, 257, 2375, 6162, 11, 597, 307, 9953, 14237, 13], "temperature": 0.0, "avg_logprob": -0.14926475133651343, "compression_ratio": 1.634453781512605, "no_speech_prob": 2.658832454471849e-05}, {"id": 240, "seek": 141928, "start": 1438.96, "end": 1445.44, "text": " Okay. Uh, why don't you just use PyOdi? I think PyScript is just easier to use. PyOdi is very", "tokens": [1033, 13, 4019, 11, 983, 500, 380, 291, 445, 764, 9953, 46, 4504, 30, 286, 519, 9953, 14237, 307, 445, 3571, 281, 764, 13, 9953, 46, 4504, 307, 588], "temperature": 0.0, "avg_logprob": -0.14926475133651343, "compression_ratio": 1.634453781512605, "no_speech_prob": 2.658832454471849e-05}, {"id": 241, "seek": 144544, "start": 1445.44, "end": 1451.44, "text": " nice, um, but, you know, uh, sometimes get quite complicated for beginners, especially, um, also", "tokens": [1481, 11, 1105, 11, 457, 11, 291, 458, 11, 2232, 11, 2171, 483, 1596, 6179, 337, 26992, 11, 2318, 11, 1105, 11, 611], "temperature": 0.0, "avg_logprob": -0.13188663881216475, "compression_ratio": 1.6933797909407666, "no_speech_prob": 1.3798559848510195e-05}, {"id": 242, "seek": 144544, "start": 1451.44, "end": 1455.92, "text": " you can change the runtime with PyScript. So it's not just PyOdi, you can, again, you know, there's,", "tokens": [291, 393, 1319, 264, 34474, 365, 9953, 14237, 13, 407, 309, 311, 406, 445, 9953, 46, 4504, 11, 291, 393, 11, 797, 11, 291, 458, 11, 456, 311, 11], "temperature": 0.0, "avg_logprob": -0.13188663881216475, "compression_ratio": 1.6933797909407666, "no_speech_prob": 1.3798559848510195e-05}, {"id": 243, "seek": 144544, "start": 1456.72, "end": 1461.2, "text": " my colleague is now working on a compiled version of Michael Python. It would be much faster, much,", "tokens": [452, 13532, 307, 586, 1364, 322, 257, 36548, 3037, 295, 5116, 15329, 13, 467, 576, 312, 709, 4663, 11, 709, 11], "temperature": 0.0, "avg_logprob": -0.13188663881216475, "compression_ratio": 1.6933797909407666, "no_speech_prob": 1.3798559848510195e-05}, {"id": 244, "seek": 144544, "start": 1461.2, "end": 1467.76, "text": " much more lightweight. So try that. Um, a bunch more other things. So, uh, can you pin a version", "tokens": [709, 544, 22052, 13, 407, 853, 300, 13, 3301, 11, 257, 3840, 544, 661, 721, 13, 407, 11, 2232, 11, 393, 291, 5447, 257, 3037], "temperature": 0.0, "avg_logprob": -0.13188663881216475, "compression_ratio": 1.6933797909407666, "no_speech_prob": 1.3798559848510195e-05}, {"id": 245, "seek": 144544, "start": 1468.48, "end": 1473.1200000000001, "text": " of the light, of the packages that you use? If you want, well, if you want, then you better", "tokens": [295, 264, 1442, 11, 295, 264, 17401, 300, 291, 764, 30, 759, 291, 528, 11, 731, 11, 498, 291, 528, 11, 550, 291, 1101], "temperature": 0.0, "avg_logprob": -0.13188663881216475, "compression_ratio": 1.6933797909407666, "no_speech_prob": 1.3798559848510195e-05}, {"id": 246, "seek": 147312, "start": 1473.12, "end": 1477.6799999999998, "text": " host the wheel yourself than, you know, which version you're using, and it's there frozen and", "tokens": [3975, 264, 5589, 1803, 813, 11, 291, 458, 11, 597, 3037, 291, 434, 1228, 11, 293, 309, 311, 456, 12496, 293], "temperature": 0.0, "avg_logprob": -0.13840263366699218, "compression_ratio": 1.730909090909091, "no_speech_prob": 2.108039552695118e-05}, {"id": 247, "seek": 147312, "start": 1477.6799999999998, "end": 1483.28, "text": " changed forever. Um, so also some, do you know Brighton? Maybe some of you have heard about", "tokens": [3105, 5680, 13, 3301, 11, 370, 611, 512, 11, 360, 291, 458, 24271, 266, 30, 2704, 512, 295, 291, 362, 2198, 466], "temperature": 0.0, "avg_logprob": -0.13840263366699218, "compression_ratio": 1.730909090909091, "no_speech_prob": 2.108039552695118e-05}, {"id": 248, "seek": 147312, "start": 1483.28, "end": 1488.8, "text": " Brighton. So Brighton is a project that tried to, uh, translate Python into JavaScript and then run", "tokens": [24271, 266, 13, 407, 24271, 266, 307, 257, 1716, 300, 3031, 281, 11, 2232, 11, 13799, 15329, 666, 15778, 293, 550, 1190], "temperature": 0.0, "avg_logprob": -0.13840263366699218, "compression_ratio": 1.730909090909091, "no_speech_prob": 2.108039552695118e-05}, {"id": 249, "seek": 147312, "start": 1488.8, "end": 1493.04, "text": " it in the browser. Um, the difference is that PyScript actually is not using JavaScript, it's", "tokens": [309, 294, 264, 11185, 13, 3301, 11, 264, 2649, 307, 300, 9953, 14237, 767, 307, 406, 1228, 15778, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.13840263366699218, "compression_ratio": 1.730909090909091, "no_speech_prob": 2.108039552695118e-05}, {"id": 250, "seek": 147312, "start": 1493.04, "end": 1500.1599999999999, "text": " actually using Wasm. So, uh, Python is compiled to Wasm, so, uh, more packages is available. Um,", "tokens": [767, 1228, 3027, 76, 13, 407, 11, 2232, 11, 15329, 307, 36548, 281, 3027, 76, 11, 370, 11, 2232, 11, 544, 17401, 307, 2435, 13, 3301, 11], "temperature": 0.0, "avg_logprob": -0.13840263366699218, "compression_ratio": 1.730909090909091, "no_speech_prob": 2.108039552695118e-05}, {"id": 251, "seek": 150016, "start": 1500.16, "end": 1505.2, "text": " so yeah, also you can, again, change the runtime, the backend, which one you want to use. Beware,", "tokens": [370, 1338, 11, 611, 291, 393, 11, 797, 11, 1319, 264, 34474, 11, 264, 38087, 11, 597, 472, 291, 528, 281, 764, 13, 879, 3039, 11], "temperature": 0.0, "avg_logprob": -0.13711167734565463, "compression_ratio": 1.7054545454545456, "no_speech_prob": 4.2114173993468285e-05}, {"id": 252, "seek": 150016, "start": 1505.2, "end": 1510.5600000000002, "text": " as someone mentioned, Beware in my previous talk. Uh, so yes, I would love to, I would love to see", "tokens": [382, 1580, 2835, 11, 879, 3039, 294, 452, 3894, 751, 13, 4019, 11, 370, 2086, 11, 286, 576, 959, 281, 11, 286, 576, 959, 281, 536], "temperature": 0.0, "avg_logprob": -0.13711167734565463, "compression_ratio": 1.7054545454545456, "no_speech_prob": 4.2114173993468285e-05}, {"id": 253, "seek": 150016, "start": 1510.5600000000002, "end": 1516.16, "text": " more support for Beware, but I can't say for the company, so I'm not saying that. Um, yeah, so, uh,", "tokens": [544, 1406, 337, 879, 3039, 11, 457, 286, 393, 380, 584, 337, 264, 2237, 11, 370, 286, 478, 406, 1566, 300, 13, 3301, 11, 1338, 11, 370, 11, 2232, 11], "temperature": 0.0, "avg_logprob": -0.13711167734565463, "compression_ratio": 1.7054545454545456, "no_speech_prob": 4.2114173993468285e-05}, {"id": 254, "seek": 150016, "start": 1516.16, "end": 1520.8000000000002, "text": " that's the end of my talk. I know I have a few minutes left for Q and A, so, or if you didn't", "tokens": [300, 311, 264, 917, 295, 452, 751, 13, 286, 458, 286, 362, 257, 1326, 2077, 1411, 337, 1249, 293, 316, 11, 370, 11, 420, 498, 291, 994, 380], "temperature": 0.0, "avg_logprob": -0.13711167734565463, "compression_ratio": 1.7054545454545456, "no_speech_prob": 4.2114173993468285e-05}, {"id": 255, "seek": 152080, "start": 1520.8, "end": 1532.0, "text": " get the sticker at the beginning, come to talk to me, I'll give you a sticker.", "tokens": [483, 264, 20400, 412, 264, 2863, 11, 808, 281, 751, 281, 385, 11, 286, 603, 976, 291, 257, 20400, 13], "temperature": 0.0, "avg_logprob": -0.20110788981119793, "compression_ratio": 1.5054945054945055, "no_speech_prob": 9.086858335649595e-05}, {"id": 256, "seek": 152080, "start": 1536.56, "end": 1542.1599999999999, "text": " Thank you. Uh, we have a few minutes for questions and, uh, before the questions, I want to thank", "tokens": [1044, 291, 13, 4019, 11, 321, 362, 257, 1326, 2077, 337, 1651, 293, 11, 2232, 11, 949, 264, 1651, 11, 286, 528, 281, 1309], "temperature": 0.0, "avg_logprob": -0.20110788981119793, "compression_ratio": 1.5054945054945055, "no_speech_prob": 9.086858335649595e-05}, {"id": 257, "seek": 152080, "start": 1542.1599999999999, "end": 1548.8, "text": " everyone for joining the Python Dev Room. And I want to thank also Eric Gasoni, uh, my friend who", "tokens": [1518, 337, 5549, 264, 15329, 9096, 19190, 13, 400, 286, 528, 281, 1309, 611, 9336, 24025, 17049, 11, 2232, 11, 452, 1277, 567], "temperature": 0.0, "avg_logprob": -0.20110788981119793, "compression_ratio": 1.5054945054945055, "no_speech_prob": 9.086858335649595e-05}, {"id": 258, "seek": 154880, "start": 1548.8, "end": 1556.8, "text": " organized, uh, all of the planning of the day and, um, everything upstream. Um, and he made a great", "tokens": [9983, 11, 2232, 11, 439, 295, 264, 5038, 295, 264, 786, 293, 11, 1105, 11, 1203, 33915, 13, 3301, 11, 293, 415, 1027, 257, 869], "temperature": 0.0, "avg_logprob": -0.12968630884207932, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0019329370697960258}, {"id": 259, "seek": 154880, "start": 1556.8, "end": 1560.8799999999999, "text": " worry for the, yeah, all the selection of the speakers are planning everything. He couldn't", "tokens": [3292, 337, 264, 11, 1338, 11, 439, 264, 9450, 295, 264, 9518, 366, 5038, 1203, 13, 634, 2809, 380], "temperature": 0.0, "avg_logprob": -0.12968630884207932, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0019329370697960258}, {"id": 260, "seek": 154880, "start": 1560.8799999999999, "end": 1566.8, "text": " make it here today, but, um, I really want to, to thank him as well. Thanks everybody.", "tokens": [652, 309, 510, 965, 11, 457, 11, 1105, 11, 286, 534, 528, 281, 11, 281, 1309, 796, 382, 731, 13, 2561, 2201, 13], "temperature": 0.0, "avg_logprob": -0.12968630884207932, "compression_ratio": 1.5872340425531914, "no_speech_prob": 0.0019329370697960258}, {"id": 261, "seek": 156680, "start": 1566.8, "end": 1577.6, "text": " And thanks to Arnaud also for joining me today, uh, to help the Dev Room. Uh, questions, yeah.", "tokens": [400, 3231, 281, 1587, 629, 532, 611, 337, 5549, 385, 965, 11, 2232, 11, 281, 854, 264, 9096, 19190, 13, 4019, 11, 1651, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.22080053132155847, "compression_ratio": 1.425, "no_speech_prob": 0.0007216181256808341}, {"id": 262, "seek": 156680, "start": 1583.6, "end": 1590.0, "text": " Hi, uh, thank you for the wonderful talk. Uh, PyScript is, uh, very exciting. Uh, I know people", "tokens": [2421, 11, 2232, 11, 1309, 291, 337, 264, 3715, 751, 13, 4019, 11, 9953, 50, 5944, 307, 11, 2232, 11, 588, 4670, 13, 4019, 11, 286, 458, 561], "temperature": 0.0, "avg_logprob": -0.22080053132155847, "compression_ratio": 1.425, "no_speech_prob": 0.0007216181256808341}, {"id": 263, "seek": 156680, "start": 1590.0, "end": 1595.76, "text": " are using WebAssembly to run untrusted code in the browser. You can use it like a sandbox. So,", "tokens": [366, 1228, 9573, 10884, 19160, 281, 1190, 1701, 81, 6589, 3089, 294, 264, 11185, 13, 509, 393, 764, 309, 411, 257, 42115, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.22080053132155847, "compression_ratio": 1.425, "no_speech_prob": 0.0007216181256808341}, {"id": 264, "seek": 159576, "start": 1595.76, "end": 1603.36, "text": " uh, it's very exciting. But my question is, so you are importing packages. Is that easy to do? Do", "tokens": [2232, 11, 309, 311, 588, 4670, 13, 583, 452, 1168, 307, 11, 370, 291, 366, 43866, 17401, 13, 1119, 300, 1858, 281, 360, 30, 1144], "temperature": 0.0, "avg_logprob": -0.1772899627685547, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0003021276497747749}, {"id": 265, "seek": 159576, "start": 1603.36, "end": 1609.76, "text": " the packages have to be on the machine already? Yeah. So, uh, if you have internet connection,", "tokens": [264, 17401, 362, 281, 312, 322, 264, 3479, 1217, 30, 865, 13, 407, 11, 2232, 11, 498, 291, 362, 4705, 4984, 11], "temperature": 0.0, "avg_logprob": -0.1772899627685547, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0003021276497747749}, {"id": 266, "seek": 159576, "start": 1609.76, "end": 1615.68, "text": " so the, uh, package, if you just simply put in like, you know, in the PyConfig, you put in package", "tokens": [370, 264, 11, 2232, 11, 7372, 11, 498, 291, 445, 2935, 829, 294, 411, 11, 291, 458, 11, 294, 264, 9953, 9838, 20646, 11, 291, 829, 294, 7372], "temperature": 0.0, "avg_logprob": -0.1772899627685547, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0003021276497747749}, {"id": 267, "seek": 159576, "start": 1615.68, "end": 1621.84, "text": " equals to something. So those will be actually proved from whatever PyAlgize provided. So it", "tokens": [6915, 281, 746, 13, 407, 729, 486, 312, 767, 14617, 490, 2035, 9953, 9171, 70, 1125, 5649, 13, 407, 309], "temperature": 0.0, "avg_logprob": -0.1772899627685547, "compression_ratio": 1.5867768595041323, "no_speech_prob": 0.0003021276497747749}, {"id": 268, "seek": 162184, "start": 1621.84, "end": 1626.3999999999999, "text": " needs to be loaded from online. So you'll see if you have a web page, it will take quite a while", "tokens": [2203, 281, 312, 13210, 490, 2950, 13, 407, 291, 603, 536, 498, 291, 362, 257, 3670, 3028, 11, 309, 486, 747, 1596, 257, 1339], "temperature": 0.0, "avg_logprob": -0.142198242679719, "compression_ratio": 1.8954248366013071, "no_speech_prob": 0.00015388254541903734}, {"id": 269, "seek": 162184, "start": 1626.3999999999999, "end": 1631.52, "text": " to load. But you also have an alternative that you can download the will of the package. As long", "tokens": [281, 3677, 13, 583, 291, 611, 362, 364, 8535, 300, 291, 393, 5484, 264, 486, 295, 264, 7372, 13, 1018, 938], "temperature": 0.0, "avg_logprob": -0.142198242679719, "compression_ratio": 1.8954248366013071, "no_speech_prob": 0.00015388254541903734}, {"id": 270, "seek": 162184, "start": 1631.52, "end": 1638.48, "text": " as that will is purely written in Python. So something like, uh, NumPy, SciPy, those, because", "tokens": [382, 300, 486, 307, 17491, 3720, 294, 15329, 13, 407, 746, 411, 11, 2232, 11, 22592, 47, 88, 11, 16942, 47, 88, 11, 729, 11, 570], "temperature": 0.0, "avg_logprob": -0.142198242679719, "compression_ratio": 1.8954248366013071, "no_speech_prob": 0.00015388254541903734}, {"id": 271, "seek": 162184, "start": 1638.48, "end": 1642.56, "text": " they have extension, they are not purely written in Python. Those, you don't have an option. You", "tokens": [436, 362, 10320, 11, 436, 366, 406, 17491, 3720, 294, 15329, 13, 3950, 11, 291, 500, 380, 362, 364, 3614, 13, 509], "temperature": 0.0, "avg_logprob": -0.142198242679719, "compression_ratio": 1.8954248366013071, "no_speech_prob": 0.00015388254541903734}, {"id": 272, "seek": 162184, "start": 1642.56, "end": 1646.8, "text": " have to use the one that PyAlgize provided. But otherwise, if it's in other library, for example,", "tokens": [362, 281, 764, 264, 472, 300, 9953, 9171, 70, 1125, 5649, 13, 583, 5911, 11, 498, 309, 311, 294, 661, 6405, 11, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.142198242679719, "compression_ratio": 1.8954248366013071, "no_speech_prob": 0.00015388254541903734}, {"id": 273, "seek": 162184, "start": 1646.8, "end": 1650.72, "text": " first you will see, you know, it's purely written in Python. You can download the will and it can", "tokens": [700, 291, 486, 536, 11, 291, 458, 11, 309, 311, 17491, 3720, 294, 15329, 13, 509, 393, 5484, 264, 486, 293, 309, 393], "temperature": 0.0, "avg_logprob": -0.142198242679719, "compression_ratio": 1.8954248366013071, "no_speech_prob": 0.00015388254541903734}, {"id": 274, "seek": 165072, "start": 1650.72, "end": 1659.68, "text": " run locally. Yeah. Yeah. My question is about mudplotlib. It's okay. But, um, how is this", "tokens": [1190, 16143, 13, 865, 13, 865, 13, 1222, 1168, 307, 466, 8933, 564, 310, 38270, 13, 467, 311, 1392, 13, 583, 11, 1105, 11, 577, 307, 341], "temperature": 0.0, "avg_logprob": -0.2214465311595372, "compression_ratio": 1.6061946902654867, "no_speech_prob": 0.00036026141606271267}, {"id": 275, "seek": 165072, "start": 1659.68, "end": 1667.44, "text": " base map or cartoply? Can it be used also? Uh, mudplotlib, sorry. Mudplotlib is for graphics,", "tokens": [3096, 4471, 420, 5467, 404, 356, 30, 1664, 309, 312, 1143, 611, 30, 4019, 11, 8933, 564, 310, 38270, 11, 2597, 13, 39231, 564, 310, 38270, 307, 337, 11837, 11], "temperature": 0.0, "avg_logprob": -0.2214465311595372, "compression_ratio": 1.6061946902654867, "no_speech_prob": 0.00036026141606271267}, {"id": 276, "seek": 165072, "start": 1667.44, "end": 1674.64, "text": " but if you have cards, maps, base map, can such a tool also be used then in the browser?", "tokens": [457, 498, 291, 362, 5632, 11, 11317, 11, 3096, 4471, 11, 393, 1270, 257, 2290, 611, 312, 1143, 550, 294, 264, 11185, 30], "temperature": 0.0, "avg_logprob": -0.2214465311595372, "compression_ratio": 1.6061946902654867, "no_speech_prob": 0.00036026141606271267}, {"id": 277, "seek": 165072, "start": 1675.28, "end": 1680.48, "text": " Yeah. Most of the library that if it's available in Python, it will also be available. So,", "tokens": [865, 13, 4534, 295, 264, 6405, 300, 498, 309, 311, 2435, 294, 15329, 11, 309, 486, 611, 312, 2435, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.2214465311595372, "compression_ratio": 1.6061946902654867, "no_speech_prob": 0.00036026141606271267}, {"id": 278, "seek": 168048, "start": 1680.48, "end": 1693.92, "text": " it must be pure Python or it's, uh, I'm not sure. I don't know. I try. Yeah. So you have,", "tokens": [309, 1633, 312, 6075, 15329, 420, 309, 311, 11, 2232, 11, 286, 478, 406, 988, 13, 286, 500, 380, 458, 13, 286, 853, 13, 865, 13, 407, 291, 362, 11], "temperature": 0.0, "avg_logprob": -0.2506263865980991, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.0028200007509440184}, {"id": 279, "seek": 168048, "start": 1693.92, "end": 1698.48, "text": " you have to check like the library that you want to import. Is it purely in Python or not? So, yeah.", "tokens": [291, 362, 281, 1520, 411, 264, 6405, 300, 291, 528, 281, 974, 13, 1119, 309, 17491, 294, 15329, 420, 406, 30, 407, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.2506263865980991, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.0028200007509440184}, {"id": 280, "seek": 168048, "start": 1703.3600000000001, "end": 1709.3600000000001, "text": " I'm a bit confused because, uh, the, what we loaded in the browser is a JavaScript module. So", "tokens": [286, 478, 257, 857, 9019, 570, 11, 2232, 11, 264, 11, 437, 321, 13210, 294, 264, 11185, 307, 257, 15778, 10088, 13, 407], "temperature": 0.0, "avg_logprob": -0.2506263865980991, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.0028200007509440184}, {"id": 281, "seek": 170936, "start": 1709.36, "end": 1715.4399999999998, "text": " is there some WebAssembly somewhere? Yeah. So you see the script that was import is.js, right?", "tokens": [307, 456, 512, 9573, 10884, 19160, 4079, 30, 865, 13, 407, 291, 536, 264, 5755, 300, 390, 974, 307, 2411, 25530, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13312314161613806, "compression_ratio": 1.872093023255814, "no_speech_prob": 0.0005750944255851209}, {"id": 282, "seek": 170936, "start": 1715.4399999999998, "end": 1721.04, "text": " But actually that's a WebAssembly. It's just that the standard, the WebAssembly standard is like,", "tokens": [583, 767, 300, 311, 257, 9573, 10884, 19160, 13, 467, 311, 445, 300, 264, 3832, 11, 264, 9573, 10884, 19160, 3832, 307, 411, 11], "temperature": 0.0, "avg_logprob": -0.13312314161613806, "compression_ratio": 1.872093023255814, "no_speech_prob": 0.0005750944255851209}, {"id": 283, "seek": 170936, "start": 1721.04, "end": 1727.52, "text": " when my team provided, like, when they released the thing, which is in WebAssembly, but it's,", "tokens": [562, 452, 1469, 5649, 11, 411, 11, 562, 436, 4736, 264, 551, 11, 597, 307, 294, 9573, 10884, 19160, 11, 457, 309, 311, 11], "temperature": 0.0, "avg_logprob": -0.13312314161613806, "compression_ratio": 1.872093023255814, "no_speech_prob": 0.0005750944255851209}, {"id": 284, "seek": 170936, "start": 1727.52, "end": 1731.6799999999998, "text": " the extension is.js. It's a bit confusing, but actually it's in WebAssembly. It's not in JavaScript.", "tokens": [264, 10320, 307, 2411, 25530, 13, 467, 311, 257, 857, 13181, 11, 457, 767, 309, 311, 294, 9573, 10884, 19160, 13, 467, 311, 406, 294, 15778, 13], "temperature": 0.0, "avg_logprob": -0.13312314161613806, "compression_ratio": 1.872093023255814, "no_speech_prob": 0.0005750944255851209}, {"id": 285, "seek": 170936, "start": 1731.6799999999998, "end": 1737.84, "text": " It's just how the WebAssembly kind of standard work. You have a JS file somehow after you have,", "tokens": [467, 311, 445, 577, 264, 9573, 10884, 19160, 733, 295, 3832, 589, 13, 509, 362, 257, 33063, 3991, 6063, 934, 291, 362, 11], "temperature": 0.0, "avg_logprob": -0.13312314161613806, "compression_ratio": 1.872093023255814, "no_speech_prob": 0.0005750944255851209}, {"id": 286, "seek": 173784, "start": 1737.84, "end": 1743.76, "text": " will, you know, then the release, the build, and the source. It become, I thought you guessed.", "tokens": [486, 11, 291, 458, 11, 550, 264, 4374, 11, 264, 1322, 11, 293, 264, 4009, 13, 467, 1813, 11, 286, 1194, 291, 21852, 13], "temperature": 0.0, "avg_logprob": -0.2747980005600873, "compression_ratio": 1.6, "no_speech_prob": 0.0007336200796999037}, {"id": 287, "seek": 173784, "start": 1744.56, "end": 1748.0, "text": " We have time for one more question. If you have one. Yeah, there.", "tokens": [492, 362, 565, 337, 472, 544, 1168, 13, 759, 291, 362, 472, 13, 865, 11, 456, 13], "temperature": 0.0, "avg_logprob": -0.2747980005600873, "compression_ratio": 1.6, "no_speech_prob": 0.0007336200796999037}, {"id": 288, "seek": 173784, "start": 1753.52, "end": 1760.1599999999999, "text": " Thanks for your talk. Um, does PyScript use any web workers? And if so, how do, can you control them?", "tokens": [2561, 337, 428, 751, 13, 3301, 11, 775, 9953, 14237, 764, 604, 3670, 5600, 30, 400, 498, 370, 11, 577, 360, 11, 393, 291, 1969, 552, 30], "temperature": 0.0, "avg_logprob": -0.2747980005600873, "compression_ratio": 1.6, "no_speech_prob": 0.0007336200796999037}, {"id": 289, "seek": 176016, "start": 1760.16, "end": 1767.0400000000002, "text": " There's the web. Sorry. Does PyScript use any web workers? Like, does your code run parallel?", "tokens": [821, 311, 264, 3670, 13, 4919, 13, 4402, 9953, 14237, 764, 604, 3670, 5600, 30, 1743, 11, 775, 428, 3089, 1190, 8952, 30], "temperature": 0.0, "avg_logprob": -0.28372393372238325, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000608351721893996}, {"id": 290, "seek": 176016, "start": 1767.8400000000001, "end": 1773.6000000000001, "text": " It's purely in the browser. So, um, if you host everything locally, actually, is, is,", "tokens": [467, 311, 17491, 294, 264, 11185, 13, 407, 11, 1105, 11, 498, 291, 3975, 1203, 16143, 11, 767, 11, 307, 11, 307, 11], "temperature": 0.0, "avg_logprob": -0.28372393372238325, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000608351721893996}, {"id": 291, "seek": 176016, "start": 1773.6000000000001, "end": 1777.44, "text": " is just on the browser. So there's no web worker that communicate with other applications.", "tokens": [307, 445, 322, 264, 11185, 13, 407, 456, 311, 572, 3670, 11346, 300, 7890, 365, 661, 5821, 13], "temperature": 0.0, "avg_logprob": -0.28372393372238325, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000608351721893996}, {"id": 292, "seek": 176016, "start": 1778.24, "end": 1782.24, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.28372393372238325, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000608351721893996}, {"id": 293, "seek": 176016, "start": 1784.4, "end": 1788.3200000000002, "text": " How does it, does it all came in with different browsers or Firefox,", "tokens": [1012, 775, 309, 11, 775, 309, 439, 1361, 294, 365, 819, 36069, 420, 46613, 11], "temperature": 0.0, "avg_logprob": -0.28372393372238325, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000608351721893996}, {"id": 294, "seek": 178832, "start": 1788.32, "end": 1792.0, "text": " Chrome? Because I guess it depends on your, your browser supporting that.", "tokens": [15327, 30, 1436, 286, 2041, 309, 5946, 322, 428, 11, 428, 11185, 7231, 300, 13], "temperature": 0.0, "avg_logprob": -0.3176620602607727, "compression_ratio": 1.3559322033898304, "no_speech_prob": 0.0006401988794095814}, {"id": 295, "seek": 178832, "start": 1792.0, "end": 1798.3999999999999, "text": " Yeah. Now definitely work on Chrome. Uh, Firefox, maybe others. I can't guarantee you.", "tokens": [865, 13, 823, 2138, 589, 322, 15327, 13, 4019, 11, 46613, 11, 1310, 2357, 13, 286, 393, 380, 10815, 291, 13], "temperature": 0.0, "avg_logprob": -0.3176620602607727, "compression_ratio": 1.3559322033898304, "no_speech_prob": 0.0006401988794095814}, {"id": 296, "seek": 179840, "start": 1798.4, "end": 1818.48, "text": " Yeah. Yeah. Yeah. But it's very young, the project. So later it will be more support.", "tokens": [50364, 865, 13, 865, 13, 865, 13, 583, 309, 311, 588, 2037, 11, 264, 1716, 13, 407, 1780, 309, 486, 312, 544, 1406, 13, 51368], "temperature": 0.0, "avg_logprob": -0.3222646346459022, "compression_ratio": 1.0625, "no_speech_prob": 0.00015928484208416194}], "language": "en"}