{"text": " Hello, so my name is Cisco Foley. I work for the Document Foundation as a keyway engineer and today I'm going to explain how in the last month I cleaned up the unit test code that we used. So it all started. So basically this is a report from Jenkins and there was one test, this one CPP unit test, SCVBA macro test failing on Windows. We didn't know it was failing for quite some time and we didn't really know what was the problem. It was failing every now and then. And in the end it turned out that it was a problem that the teardown method disposing this MX component was missing and well eventually it was fixed thanks to Noel. So I started to look at other places where this kind of problems might happen in the unit test. So basically when we want to create a unit test class these are the three, sorry the four main classes that we can use. So this one is the one inheriting directly from the library CPP unit test. So this is the basic one you use to create a basic test and basically it handles the setup and teardown of the test. Then if you want to let's say work with documents to load them and so on you can use also this library, this class or macro test and then when you want to work with XML let's say you want to parse those XMLs you can use that class XML test tools and finally we have a special class that we use to load and save documents but we only care if they fail or if they pass. So the idea because most of the classes that we have in unit test they normally inherit from these two here or in some special cases they inherit from the three of these three. So basically the idea was to create kind of a wrapper for these two and then another one for the other three. So when I started to do it well a lot of duplicates were found especially with the setup and teardown methods so this could be removed in all the classes. Then same for the X component each class define their own X component so now we only define it in the you know AP test class so this remove a lot of duplicate definitions and I also found that we had a special you know AP test class for Cog for no real reason so this was merged into the you know AP test class and actually we also well I also factor out other methods like for parsing PDF export or execute a macro or create a template. So in we have the impress and calc modules we had their own methods to load and save files they were actually copy paste from from this from the filter test class and they were actually very complicated to set up basically you have to define all the formats that you wanted to use then create this array with all the formats and then finally the load of the document looks something like this where you have to define the clipboard the version and yeah it was in the end really complicated and we already had a method for that and yeah so basically now instead of returning a reference a doc shell reference we just basically load the local document and save and reload and makes it easy and the problem before it was that after we were done with the test we need to close the reference and in some case some test it was missing so that's not a problem anymore and also there were many places where this kind of chunk of code was used to save and save and reload the document so this they are gone there were many of them so now it's just one line to that and the good thing is that now we always validate the files on a sport and in case there is a problem with the validator we can also use the skip validation and there is also support for password sporting and importing that's something that in the past only that was only available in writer module okay and yeah the same for parts export sd sw and sc they use their own ways of handling this while we already have it in macro test so there was also duplicate for that and right now we just do it like that and yeah there there were also operators that were duplicates like for instance this one for comparing colors there was also for comparing every tangles so they were already duplicates in in pairs and calc and writer so all of them are gone now and there was also a problem with this unit test the problem is that the way it works it compares the calculations using open cl enable and disable and the problem is that before I found out they were always the comparison was always when it's enabled so it the test didn't actually test anything and now that's fixed and also we also had some custom asserts like this one as a formula equal which can be done as a string comparison and just using the get formula so yeah in the end a lot of duplicated code was dropped and yeah that's that's it thank you I think we still have time for maybe a quick question if anyone yeah okay thank you", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.92, "text": " Hello, so my name is Cisco Foley.", "tokens": [50364, 2425, 11, 370, 452, 1315, 307, 383, 271, 1291, 8564, 3420, 13, 50810], "temperature": 0.0, "avg_logprob": -0.2736888635353964, "compression_ratio": 1.361842105263158, "no_speech_prob": 0.19458626210689545}, {"id": 1, "seek": 0, "start": 8.92, "end": 15.0, "text": " I work for the Document Foundation as a keyway engineer and today I'm going to explain how", "tokens": [50810, 286, 589, 337, 264, 37684, 10335, 382, 257, 2141, 676, 11403, 293, 965, 286, 478, 516, 281, 2903, 577, 51114], "temperature": 0.0, "avg_logprob": -0.2736888635353964, "compression_ratio": 1.361842105263158, "no_speech_prob": 0.19458626210689545}, {"id": 2, "seek": 0, "start": 15.0, "end": 22.32, "text": " in the last month I cleaned up the unit test code that we used.", "tokens": [51114, 294, 264, 1036, 1618, 286, 16146, 493, 264, 4985, 1500, 3089, 300, 321, 1143, 13, 51480], "temperature": 0.0, "avg_logprob": -0.2736888635353964, "compression_ratio": 1.361842105263158, "no_speech_prob": 0.19458626210689545}, {"id": 3, "seek": 0, "start": 22.32, "end": 24.68, "text": " So it all started.", "tokens": [51480, 407, 309, 439, 1409, 13, 51598], "temperature": 0.0, "avg_logprob": -0.2736888635353964, "compression_ratio": 1.361842105263158, "no_speech_prob": 0.19458626210689545}, {"id": 4, "seek": 2468, "start": 24.68, "end": 33.4, "text": " So basically this is a report from Jenkins and there was one test, this one CPP unit", "tokens": [50364, 407, 1936, 341, 307, 257, 2275, 490, 41273, 293, 456, 390, 472, 1500, 11, 341, 472, 383, 17755, 4985, 50800], "temperature": 0.0, "avg_logprob": -0.21780757109324136, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.038088105618953705}, {"id": 5, "seek": 2468, "start": 33.4, "end": 40.480000000000004, "text": " test, SCVBA macro test failing on Windows.", "tokens": [50800, 1500, 11, 9028, 53, 9295, 18887, 1500, 18223, 322, 8591, 13, 51154], "temperature": 0.0, "avg_logprob": -0.21780757109324136, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.038088105618953705}, {"id": 6, "seek": 2468, "start": 40.480000000000004, "end": 45.64, "text": " We didn't know it was failing for quite some time and we didn't really know what was the", "tokens": [51154, 492, 994, 380, 458, 309, 390, 18223, 337, 1596, 512, 565, 293, 321, 994, 380, 534, 458, 437, 390, 264, 51412], "temperature": 0.0, "avg_logprob": -0.21780757109324136, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.038088105618953705}, {"id": 7, "seek": 2468, "start": 45.64, "end": 46.64, "text": " problem.", "tokens": [51412, 1154, 13, 51462], "temperature": 0.0, "avg_logprob": -0.21780757109324136, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.038088105618953705}, {"id": 8, "seek": 2468, "start": 46.64, "end": 50.6, "text": " It was failing every now and then.", "tokens": [51462, 467, 390, 18223, 633, 586, 293, 550, 13, 51660], "temperature": 0.0, "avg_logprob": -0.21780757109324136, "compression_ratio": 1.5116279069767442, "no_speech_prob": 0.038088105618953705}, {"id": 9, "seek": 5060, "start": 50.6, "end": 58.4, "text": " And in the end it turned out that it was a problem that the teardown method disposing", "tokens": [50364, 400, 294, 264, 917, 309, 3574, 484, 300, 309, 390, 257, 1154, 300, 264, 535, 515, 648, 3170, 4920, 6110, 50754], "temperature": 0.0, "avg_logprob": -0.17688114459698018, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.021551748737692833}, {"id": 10, "seek": 5060, "start": 58.4, "end": 67.16, "text": " this MX component was missing and well eventually it was fixed thanks to Noel.", "tokens": [50754, 341, 47509, 6542, 390, 5361, 293, 731, 4728, 309, 390, 6806, 3231, 281, 38824, 13, 51192], "temperature": 0.0, "avg_logprob": -0.17688114459698018, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.021551748737692833}, {"id": 11, "seek": 5060, "start": 67.16, "end": 74.72, "text": " So I started to look at other places where this kind of problems might happen in the", "tokens": [51192, 407, 286, 1409, 281, 574, 412, 661, 3190, 689, 341, 733, 295, 2740, 1062, 1051, 294, 264, 51570], "temperature": 0.0, "avg_logprob": -0.17688114459698018, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.021551748737692833}, {"id": 12, "seek": 5060, "start": 74.72, "end": 76.92, "text": " unit test.", "tokens": [51570, 4985, 1500, 13, 51680], "temperature": 0.0, "avg_logprob": -0.17688114459698018, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.021551748737692833}, {"id": 13, "seek": 7692, "start": 76.92, "end": 84.52, "text": " So basically when we want to create a unit test class these are the three, sorry the", "tokens": [50364, 407, 1936, 562, 321, 528, 281, 1884, 257, 4985, 1500, 1508, 613, 366, 264, 1045, 11, 2597, 264, 50744], "temperature": 0.0, "avg_logprob": -0.16293459403805616, "compression_ratio": 1.7277777777777779, "no_speech_prob": 0.013987916521728039}, {"id": 14, "seek": 7692, "start": 84.52, "end": 88.04, "text": " four main classes that we can use.", "tokens": [50744, 1451, 2135, 5359, 300, 321, 393, 764, 13, 50920], "temperature": 0.0, "avg_logprob": -0.16293459403805616, "compression_ratio": 1.7277777777777779, "no_speech_prob": 0.013987916521728039}, {"id": 15, "seek": 7692, "start": 88.04, "end": 94.76, "text": " So this one is the one inheriting directly from the library CPP unit test.", "tokens": [50920, 407, 341, 472, 307, 264, 472, 9484, 1748, 3838, 490, 264, 6405, 383, 17755, 4985, 1500, 13, 51256], "temperature": 0.0, "avg_logprob": -0.16293459403805616, "compression_ratio": 1.7277777777777779, "no_speech_prob": 0.013987916521728039}, {"id": 16, "seek": 7692, "start": 94.76, "end": 101.72, "text": " So this is the basic one you use to create a basic test and basically it handles the", "tokens": [51256, 407, 341, 307, 264, 3875, 472, 291, 764, 281, 1884, 257, 3875, 1500, 293, 1936, 309, 18722, 264, 51604], "temperature": 0.0, "avg_logprob": -0.16293459403805616, "compression_ratio": 1.7277777777777779, "no_speech_prob": 0.013987916521728039}, {"id": 17, "seek": 7692, "start": 101.72, "end": 104.64, "text": " setup and teardown of the test.", "tokens": [51604, 8657, 293, 535, 515, 648, 295, 264, 1500, 13, 51750], "temperature": 0.0, "avg_logprob": -0.16293459403805616, "compression_ratio": 1.7277777777777779, "no_speech_prob": 0.013987916521728039}, {"id": 18, "seek": 10464, "start": 104.68, "end": 112.84, "text": " Then if you want to let's say work with documents to load them and so on you can use also this", "tokens": [50366, 1396, 498, 291, 528, 281, 718, 311, 584, 589, 365, 8512, 281, 3677, 552, 293, 370, 322, 291, 393, 764, 611, 341, 50774], "temperature": 0.0, "avg_logprob": -0.20493574703440948, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.11833826452493668}, {"id": 19, "seek": 10464, "start": 112.84, "end": 122.2, "text": " library, this class or macro test and then when you want to work with XML let's say", "tokens": [50774, 6405, 11, 341, 1508, 420, 18887, 1500, 293, 550, 562, 291, 528, 281, 589, 365, 43484, 718, 311, 584, 51242], "temperature": 0.0, "avg_logprob": -0.20493574703440948, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.11833826452493668}, {"id": 20, "seek": 10464, "start": 122.2, "end": 130.12, "text": " you want to parse those XMLs you can use that class XML test tools and finally we have", "tokens": [51242, 291, 528, 281, 48377, 729, 43484, 82, 291, 393, 764, 300, 1508, 43484, 1500, 3873, 293, 2721, 321, 362, 51638], "temperature": 0.0, "avg_logprob": -0.20493574703440948, "compression_ratio": 1.6987179487179487, "no_speech_prob": 0.11833826452493668}, {"id": 21, "seek": 13012, "start": 130.12, "end": 138.96, "text": " a special class that we use to load and save documents but we only care if they fail or", "tokens": [50364, 257, 2121, 1508, 300, 321, 764, 281, 3677, 293, 3155, 8512, 457, 321, 787, 1127, 498, 436, 3061, 420, 50806], "temperature": 0.0, "avg_logprob": -0.16486824260038488, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.02712838537991047}, {"id": 22, "seek": 13012, "start": 138.96, "end": 140.48000000000002, "text": " if they pass.", "tokens": [50806, 498, 436, 1320, 13, 50882], "temperature": 0.0, "avg_logprob": -0.16486824260038488, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.02712838537991047}, {"id": 23, "seek": 13012, "start": 140.48000000000002, "end": 147.72, "text": " So the idea because most of the classes that we have in unit test they normally inherit", "tokens": [50882, 407, 264, 1558, 570, 881, 295, 264, 5359, 300, 321, 362, 294, 4985, 1500, 436, 5646, 21389, 51244], "temperature": 0.0, "avg_logprob": -0.16486824260038488, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.02712838537991047}, {"id": 24, "seek": 13012, "start": 147.72, "end": 155.32, "text": " from these two here or in some special cases they inherit from the three of these three.", "tokens": [51244, 490, 613, 732, 510, 420, 294, 512, 2121, 3331, 436, 21389, 490, 264, 1045, 295, 613, 1045, 13, 51624], "temperature": 0.0, "avg_logprob": -0.16486824260038488, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.02712838537991047}, {"id": 25, "seek": 15532, "start": 155.32, "end": 162.35999999999999, "text": " So basically the idea was to create kind of a wrapper for these two and then another", "tokens": [50364, 407, 1936, 264, 1558, 390, 281, 1884, 733, 295, 257, 46906, 337, 613, 732, 293, 550, 1071, 50716], "temperature": 0.0, "avg_logprob": -0.15042376162400886, "compression_ratio": 1.5621301775147929, "no_speech_prob": 0.010893930681049824}, {"id": 26, "seek": 15532, "start": 162.35999999999999, "end": 164.51999999999998, "text": " one for the other three.", "tokens": [50716, 472, 337, 264, 661, 1045, 13, 50824], "temperature": 0.0, "avg_logprob": -0.15042376162400886, "compression_ratio": 1.5621301775147929, "no_speech_prob": 0.010893930681049824}, {"id": 27, "seek": 15532, "start": 164.51999999999998, "end": 174.64, "text": " So when I started to do it well a lot of duplicates were found especially with the setup and teardown", "tokens": [50824, 407, 562, 286, 1409, 281, 360, 309, 731, 257, 688, 295, 17154, 1024, 645, 1352, 2318, 365, 264, 8657, 293, 535, 515, 648, 51330], "temperature": 0.0, "avg_logprob": -0.15042376162400886, "compression_ratio": 1.5621301775147929, "no_speech_prob": 0.010893930681049824}, {"id": 28, "seek": 15532, "start": 174.64, "end": 180.56, "text": " methods so this could be removed in all the classes.", "tokens": [51330, 7150, 370, 341, 727, 312, 7261, 294, 439, 264, 5359, 13, 51626], "temperature": 0.0, "avg_logprob": -0.15042376162400886, "compression_ratio": 1.5621301775147929, "no_speech_prob": 0.010893930681049824}, {"id": 29, "seek": 18056, "start": 180.56, "end": 189.0, "text": " Then same for the X component each class define their own X component so now we only define", "tokens": [50364, 1396, 912, 337, 264, 1783, 6542, 1184, 1508, 6964, 641, 1065, 1783, 6542, 370, 586, 321, 787, 6964, 50786], "temperature": 0.0, "avg_logprob": -0.28008865587639087, "compression_ratio": 1.6625766871165644, "no_speech_prob": 0.06274422258138657}, {"id": 30, "seek": 18056, "start": 189.0, "end": 200.64000000000001, "text": " it in the you know AP test class so this remove a lot of duplicate definitions and I also", "tokens": [50786, 309, 294, 264, 291, 458, 5372, 1500, 1508, 370, 341, 4159, 257, 688, 295, 23976, 21988, 293, 286, 611, 51368], "temperature": 0.0, "avg_logprob": -0.28008865587639087, "compression_ratio": 1.6625766871165644, "no_speech_prob": 0.06274422258138657}, {"id": 31, "seek": 18056, "start": 200.64000000000001, "end": 209.28, "text": " found that we had a special you know AP test class for Cog for no real reason so this was", "tokens": [51368, 1352, 300, 321, 632, 257, 2121, 291, 458, 5372, 1500, 1508, 337, 383, 664, 337, 572, 957, 1778, 370, 341, 390, 51800], "temperature": 0.0, "avg_logprob": -0.28008865587639087, "compression_ratio": 1.6625766871165644, "no_speech_prob": 0.06274422258138657}, {"id": 32, "seek": 20928, "start": 209.28, "end": 218.76, "text": " merged into the you know AP test class and actually we also well I also factor out other", "tokens": [50364, 36427, 666, 264, 291, 458, 5372, 1500, 1508, 293, 767, 321, 611, 731, 286, 611, 5952, 484, 661, 50838], "temperature": 0.0, "avg_logprob": -0.23844576663658268, "compression_ratio": 1.4705882352941178, "no_speech_prob": 0.14913521707057953}, {"id": 33, "seek": 20928, "start": 218.76, "end": 227.8, "text": " methods like for parsing PDF export or execute a macro or create a template.", "tokens": [50838, 7150, 411, 337, 21156, 278, 17752, 10725, 420, 14483, 257, 18887, 420, 1884, 257, 12379, 13, 51290], "temperature": 0.0, "avg_logprob": -0.23844576663658268, "compression_ratio": 1.4705882352941178, "no_speech_prob": 0.14913521707057953}, {"id": 34, "seek": 20928, "start": 227.8, "end": 236.32, "text": " So in we have the impress and calc modules we had their own methods to load and save", "tokens": [51290, 407, 294, 321, 362, 264, 6729, 293, 2104, 66, 16679, 321, 632, 641, 1065, 7150, 281, 3677, 293, 3155, 51716], "temperature": 0.0, "avg_logprob": -0.23844576663658268, "compression_ratio": 1.4705882352941178, "no_speech_prob": 0.14913521707057953}, {"id": 35, "seek": 23632, "start": 236.32, "end": 248.95999999999998, "text": " files they were actually copy paste from from this from the filter test class and they were", "tokens": [50364, 7098, 436, 645, 767, 5055, 9163, 490, 490, 341, 490, 264, 6608, 1500, 1508, 293, 436, 645, 50996], "temperature": 0.0, "avg_logprob": -0.24884568727933443, "compression_ratio": 1.5739130434782609, "no_speech_prob": 0.08548276871442795}, {"id": 36, "seek": 23632, "start": 248.95999999999998, "end": 258.56, "text": " actually very complicated to set up basically you have to define all the formats that you", "tokens": [50996, 767, 588, 6179, 281, 992, 493, 1936, 291, 362, 281, 6964, 439, 264, 25879, 300, 291, 51476], "temperature": 0.0, "avg_logprob": -0.24884568727933443, "compression_ratio": 1.5739130434782609, "no_speech_prob": 0.08548276871442795}, {"id": 37, "seek": 25856, "start": 258.56, "end": 270.32, "text": " wanted to use then create this array with all the formats and then finally the load", "tokens": [50364, 1415, 281, 764, 550, 1884, 341, 10225, 365, 439, 264, 25879, 293, 550, 2721, 264, 3677, 50952], "temperature": 0.0, "avg_logprob": -0.18723489527116743, "compression_ratio": 1.6178343949044587, "no_speech_prob": 0.3715481162071228}, {"id": 38, "seek": 25856, "start": 270.32, "end": 274.6, "text": " of the document looks something like this where you have to define the clipboard the", "tokens": [50952, 295, 264, 4166, 1542, 746, 411, 341, 689, 291, 362, 281, 6964, 264, 7353, 3787, 264, 51166], "temperature": 0.0, "avg_logprob": -0.18723489527116743, "compression_ratio": 1.6178343949044587, "no_speech_prob": 0.3715481162071228}, {"id": 39, "seek": 25856, "start": 274.6, "end": 283.6, "text": " version and yeah it was in the end really complicated and we already had a method for", "tokens": [51166, 3037, 293, 1338, 309, 390, 294, 264, 917, 534, 6179, 293, 321, 1217, 632, 257, 3170, 337, 51616], "temperature": 0.0, "avg_logprob": -0.18723489527116743, "compression_ratio": 1.6178343949044587, "no_speech_prob": 0.3715481162071228}, {"id": 40, "seek": 28360, "start": 283.6, "end": 297.0, "text": " that and yeah so basically now instead of returning a reference a doc shell reference", "tokens": [50364, 300, 293, 1338, 370, 1936, 586, 2602, 295, 12678, 257, 6408, 257, 3211, 8720, 6408, 51034], "temperature": 0.0, "avg_logprob": -0.23376178741455078, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.05518140271306038}, {"id": 41, "seek": 28360, "start": 297.0, "end": 303.68, "text": " we just basically load the local document and save and reload and makes it easy and", "tokens": [51034, 321, 445, 1936, 3677, 264, 2654, 4166, 293, 3155, 293, 25628, 293, 1669, 309, 1858, 293, 51368], "temperature": 0.0, "avg_logprob": -0.23376178741455078, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.05518140271306038}, {"id": 42, "seek": 28360, "start": 303.68, "end": 311.08000000000004, "text": " the problem before it was that after we were done with the test we need to close the reference", "tokens": [51368, 264, 1154, 949, 309, 390, 300, 934, 321, 645, 1096, 365, 264, 1500, 321, 643, 281, 1998, 264, 6408, 51738], "temperature": 0.0, "avg_logprob": -0.23376178741455078, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.05518140271306038}, {"id": 43, "seek": 31108, "start": 311.12, "end": 318.32, "text": " and in some case some test it was missing so that's not a problem anymore and also there", "tokens": [50366, 293, 294, 512, 1389, 512, 1500, 309, 390, 5361, 370, 300, 311, 406, 257, 1154, 3602, 293, 611, 456, 50726], "temperature": 0.0, "avg_logprob": -0.2222145227285532, "compression_ratio": 1.6751592356687899, "no_speech_prob": 0.03583182394504547}, {"id": 44, "seek": 31108, "start": 318.32, "end": 327.28, "text": " were many places where this kind of chunk of code was used to save and save and reload", "tokens": [50726, 645, 867, 3190, 689, 341, 733, 295, 16635, 295, 3089, 390, 1143, 281, 3155, 293, 3155, 293, 25628, 51174], "temperature": 0.0, "avg_logprob": -0.2222145227285532, "compression_ratio": 1.6751592356687899, "no_speech_prob": 0.03583182394504547}, {"id": 45, "seek": 31108, "start": 327.28, "end": 334.79999999999995, "text": " the document so this they are gone there were many of them so now it's just one line to", "tokens": [51174, 264, 4166, 370, 341, 436, 366, 2780, 456, 645, 867, 295, 552, 370, 586, 309, 311, 445, 472, 1622, 281, 51550], "temperature": 0.0, "avg_logprob": -0.2222145227285532, "compression_ratio": 1.6751592356687899, "no_speech_prob": 0.03583182394504547}, {"id": 46, "seek": 33480, "start": 334.96000000000004, "end": 341.68, "text": " that and the good thing is that now we always validate the files on a sport and in case there", "tokens": [50372, 300, 293, 264, 665, 551, 307, 300, 586, 321, 1009, 29562, 264, 7098, 322, 257, 7282, 293, 294, 1389, 456, 50708], "temperature": 0.0, "avg_logprob": -0.20732392205132377, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.09336882829666138}, {"id": 47, "seek": 33480, "start": 341.68, "end": 347.12, "text": " is a problem with the validator we can also use the skip validation and there is also support", "tokens": [50708, 307, 257, 1154, 365, 264, 7363, 1639, 321, 393, 611, 764, 264, 10023, 24071, 293, 456, 307, 611, 1406, 50980], "temperature": 0.0, "avg_logprob": -0.20732392205132377, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.09336882829666138}, {"id": 48, "seek": 33480, "start": 347.12, "end": 353.28000000000003, "text": " for password sporting and importing that's something that in the past only that was only", "tokens": [50980, 337, 11524, 32366, 293, 43866, 300, 311, 746, 300, 294, 264, 1791, 787, 300, 390, 787, 51288], "temperature": 0.0, "avg_logprob": -0.20732392205132377, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.09336882829666138}, {"id": 49, "seek": 35328, "start": 353.35999999999996, "end": 364.35999999999996, "text": " available in writer module okay and yeah the same for parts export sd sw and sc they use", "tokens": [50368, 2435, 294, 9936, 10088, 1392, 293, 1338, 264, 912, 337, 3166, 10725, 262, 67, 1693, 293, 795, 436, 764, 50918], "temperature": 0.0, "avg_logprob": -0.22545264317439154, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.06581440567970276}, {"id": 50, "seek": 35328, "start": 364.35999999999996, "end": 373.35999999999996, "text": " their own ways of handling this while we already have it in macro test so there was also duplicate", "tokens": [50918, 641, 1065, 2098, 295, 13175, 341, 1339, 321, 1217, 362, 309, 294, 18887, 1500, 370, 456, 390, 611, 23976, 51368], "temperature": 0.0, "avg_logprob": -0.22545264317439154, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.06581440567970276}, {"id": 51, "seek": 35328, "start": 373.35999999999996, "end": 382.55999999999995, "text": " for that and right now we just do it like that and yeah there there were also operators that", "tokens": [51368, 337, 300, 293, 558, 586, 321, 445, 360, 309, 411, 300, 293, 1338, 456, 456, 645, 611, 19077, 300, 51828], "temperature": 0.0, "avg_logprob": -0.22545264317439154, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.06581440567970276}, {"id": 52, "seek": 38256, "start": 382.64, "end": 388.68, "text": " were duplicates like for instance this one for comparing colors there was also for comparing", "tokens": [50368, 645, 17154, 1024, 411, 337, 5197, 341, 472, 337, 15763, 4577, 456, 390, 611, 337, 15763, 50670], "temperature": 0.0, "avg_logprob": -0.2334191336560605, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.01847960613667965}, {"id": 53, "seek": 38256, "start": 388.68, "end": 396.72, "text": " every tangles so they were already duplicates in in pairs and calc and writer so all of them are", "tokens": [50670, 633, 10266, 904, 370, 436, 645, 1217, 17154, 1024, 294, 294, 15494, 293, 2104, 66, 293, 9936, 370, 439, 295, 552, 366, 51072], "temperature": 0.0, "avg_logprob": -0.2334191336560605, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.01847960613667965}, {"id": 54, "seek": 38256, "start": 396.72, "end": 404.6, "text": " gone now and there was also a problem with this unit test the problem is that the way it works it", "tokens": [51072, 2780, 586, 293, 456, 390, 611, 257, 1154, 365, 341, 4985, 1500, 264, 1154, 307, 300, 264, 636, 309, 1985, 309, 51466], "temperature": 0.0, "avg_logprob": -0.2334191336560605, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.01847960613667965}, {"id": 55, "seek": 40460, "start": 404.92, "end": 412.88, "text": " compares the calculations using open cl enable and disable and the problem is that before I", "tokens": [50380, 38334, 264, 20448, 1228, 1269, 596, 9528, 293, 28362, 293, 264, 1154, 307, 300, 949, 286, 50778], "temperature": 0.0, "avg_logprob": -0.24208845630768808, "compression_ratio": 1.622093023255814, "no_speech_prob": 0.065677210688591}, {"id": 56, "seek": 40460, "start": 412.88, "end": 420.48, "text": " found out they were always the comparison was always when it's enabled so it the test didn't", "tokens": [50778, 1352, 484, 436, 645, 1009, 264, 9660, 390, 1009, 562, 309, 311, 15172, 370, 309, 264, 1500, 994, 380, 51158], "temperature": 0.0, "avg_logprob": -0.24208845630768808, "compression_ratio": 1.622093023255814, "no_speech_prob": 0.065677210688591}, {"id": 57, "seek": 40460, "start": 420.48, "end": 428.6, "text": " actually test anything and now that's fixed and also we also had some custom asserts like this", "tokens": [51158, 767, 1500, 1340, 293, 586, 300, 311, 6806, 293, 611, 321, 611, 632, 512, 2375, 19810, 82, 411, 341, 51564], "temperature": 0.0, "avg_logprob": -0.24208845630768808, "compression_ratio": 1.622093023255814, "no_speech_prob": 0.065677210688591}, {"id": 58, "seek": 42860, "start": 428.6, "end": 437.56, "text": " one as a formula equal which can be done as a string comparison and just using the get formula so", "tokens": [50364, 472, 382, 257, 8513, 2681, 597, 393, 312, 1096, 382, 257, 6798, 9660, 293, 445, 1228, 264, 483, 8513, 370, 50812], "temperature": 0.0, "avg_logprob": -0.21098482608795166, "compression_ratio": 1.488, "no_speech_prob": 0.027145111933350563}, {"id": 59, "seek": 42860, "start": 437.56, "end": 446.72, "text": " yeah in the end a lot of duplicated code was dropped and yeah that's that's it thank you", "tokens": [50812, 1338, 294, 264, 917, 257, 688, 295, 1581, 564, 3587, 3089, 390, 8119, 293, 1338, 300, 311, 300, 311, 309, 1309, 291, 51270], "temperature": 0.0, "avg_logprob": -0.21098482608795166, "compression_ratio": 1.488, "no_speech_prob": 0.027145111933350563}, {"id": 60, "seek": 44672, "start": 446.72, "end": 457.28000000000003, "text": " I think we still have time for maybe a quick question if anyone", "tokens": [50364, 286, 519, 321, 920, 362, 565, 337, 1310, 257, 1702, 1168, 498, 2878, 50892], "temperature": 0.0, "avg_logprob": -0.4752260446548462, "compression_ratio": 0.9692307692307692, "no_speech_prob": 0.1720152646303177}, {"id": 61, "seek": 47672, "start": 476.72, "end": 483.88000000000005, "text": " yeah okay thank you", "tokens": [50414, 1338, 1392, 1309, 291, 50722], "temperature": 0.0, "avg_logprob": -0.7702848570687431, "compression_ratio": 0.7037037037037037, "no_speech_prob": 0.09330959618091583}], "language": "en"}