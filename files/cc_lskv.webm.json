{"text": " All right, our next speaker is Andrew Jeffery from University of Cambridge talking about LSKB. Hello. So yes, I'm Andrew Jeffery from University of Cambridge, emails there if you want to email me about any questions that I can't answer today. As a brief kind of precursor, I kind of come from the distributed systems world, not necessarily confidential computing world, so this is kind of like a hybrid of both worlds here. So today we're going to talk about LSKB aiming to democratise confidential computing from the core. So first of all, we've got to work out what this core actually is that we kind of want to start replacing. And so we're going to start working with distributed key value stores. In particular, we're going to look at CD. And as the CD website defines itself, it's a distributed, reliable key value store and importantly, it's for the most critical data of your distributed systems. So CD runs as a cluster, it's distributed, so you have this one leader node and you might have some more followers in this setup as well. CD is also not alone, it's the core, so you have some applications around that. Some of those applications might be some sort of orchestration, so using Kubernetes on top is like one of the main candidates. Otherwise you might use M3 or Rook or Core DNS or other applications that use CD internally as well. So effectively, it's really widely used, it's quite a critical piece of a lot of infrastructure. And so you have to interact with CD in some way, even if you're just using one of these services. And so primarily you use some key value operations like you can put, so you might write foo one equals bar into the data store and it keeps some history so you kind of have this revision system. So when you do that first write, it'll be stored as a version five and you write to be six, seven, eight going on like that. So you can, after you've written, you can get something back out using the range queries and with this you can say, I'd like all keys between foo and foo five in history, so you would be able to get multiple keys at once. And you can also specify the revision here if you wanted to go back in time just to see what it was some previous point. After you've read something, you might no longer need stuff, so you can delete it. So you can also delete with this range as well, so you can delete say foo to foo five. Transactions are a nice ability here, so you can do some kind of conditional logic at the data store side. So if you can use put range of deletes or more or less the transactions internally to do kind of bulk operations here, so you can say write foo two and foo three in the same revision. Additionally, you can have leases on top of the data store, so these can be used for building high level primitives and distributed systems, and primarily you might want some like leadership mechanism. One final thing here is the watch API that Etsy provides, similar to ranges you can do a range between a start and an end, and you can also do a watch, a certain point in history. So for watches, that history is where you start watching from. So if you start revision five, you'll be notified that foo equals bar, and then you'll be notified of the things in revision six, foo two and foo three, and everything that kind of comes in after that as well while you keep the connection open. And this is just like a really core API that's used by lots of these other systems, so this is kind of something we might want to mimic if we want to like replace Etsy. So Etsy is a big system, we want to run it somewhere, primarily lots of people run it in the cloud. You don't always want to trust this cloud, because it's run by cloud providers. They might themselves be trustworthy, but the things that they're operating might not be. So if a high provider gets a weakness, then might get attackers going through to the lower layers and being able to access some of the hardware themselves. Clients that are interacting with your service might be within the cloud themselves, they might have already accepted some of the cloud primitives, they might also just be outside of the cloud and just having to use your service for some reason, so they might not be wanting to use the cloud directly themselves. Additionally, they might not necessarily speak directly to your data store. Lots of things they talked through a proxy, so if you're in Kubernetes as well, you might have Cubelets and Kube CTL, they speak through the API server, which basically terminates the CLS connections before passing and doing some logic back on the data store itself. And so today we're going to speak about two problems. Problem one here is this LCD cluster that's running in the cloud. If we're not trusting in this cloud, then all of the data in memory is currently unencrypted and so we want to be able to do something about that. And problem two is this proxy. If this proxy is terminating some CLS connections, we don't really want that to be able to happen. We'll actually see how the proxy can be a bit distrustful with our interactions. We want to be able to show when it's not being very trustworthy. So diving into problem one. So we've got this XED cluster, XED like any kind of storage service has some storage, it has some memory and some processing application. It's also distributed, so we have some CLS connections between the peers. And effectively, as you can see in yellow here, we have some level of security. So recommended setups have XED communicating for XED nodes over TLS. And we also can have this optional sort of file system encryption that gets put down to storage. One main problem with this, all of those keys are in memory. So the TLS key that we were using for TLS is now in memory, so the attackers got that. And they've also got the private key for any file system encryption. So basically renders our TLS connections and our storage encryption pretty much worthless if we're not trusting that someone can't access our memory. So if we actually swap out CD for LSKV, which is our data store, we run LSKV inside of an SGX enclave, which gives us those confidentiality properties that we just mentioned in the previous talk, then we can build some of these privileges to be a bit more trustworthy. So now that our memory is encrypted and integrity protected, we can store our TLS keys and file system keys there and trust that they're not going to be able to be accessed. The actual application itself is running in a secure enclave, so we can show you that it's not going to be able to be modified. While TLS connections, we can be sure that they're actually secure TLS because our TLS keys are in memory, and we can actually upgrade those to a tested TLS where rather than just trusting the other application to ever end, we can make sure the other application is running in a secure enclave as well, so it's in the same environment that we trust. And finally, we've got this file system key in memory, so we can trust that anything we write to disk is actually going to be encrypted properly as well and safe. So this is like one nice solution to that problem one. So if we delve into a bit of what LSKV is a bit more, we can see that it builds on something called CCF. It runs in the SJX enclave, and like most services in the cloud, it will run on top of a hypervisor and has some memory and storage and other resources attached as well. So if we quickly jump into CCF, which is the confidential consortium framework, it's a pretty nice project that basically splits up the interactions and the management of it into three distinct roles. So the first role is the operator. So this is the kind of cloud provider, the person who's standing up VMs for you. You might say, I'd like one LSKV node to run with, and then you might later want more to join into the network. And so this operator is untrusted, so all they can do is stand those nodes up. They can't do any sort of giving those nodes access to the data in the cluster. They don't auto join the cluster. That's the responsibility of the governance, who we partly trust. There's a few of them, and so any interactions they do have to be done in some sort of majority way. And so these people will be responsible for things like once a node has been stood up, except checking the configuration of it, and finally accepting it into the network so it can start serving application requests and handle some of the data in the cluster. And finally, we have users that need to actually access the application that we're running. And so these are treated as kind of trusted towards the application, but the application itself can have internal access controls inside. And all the data is stored on an encrypted ledger that gets written to the disks. Governance requests are stored publicly in this ledger, and they're also signed so that everyone can see those and verify those. User interactions that go through the application are normally stored encrypted by default. You can make them public if you have certain use cases for those. So LSKV actually has an HCD-compatible API. This slide might look pretty familiar. It's basically the same API at the core. One asterisk is that this watch is at the bottom, is currently requiring a patch on CCF because it hasn't got around to being merged in yet, but that's something that should be fixed and should be expected to work. So effectively, this basically means that we can switch out HCD for LSKV in most cases, solving problem one. So before we quickly go into problem two, we've just swapped out HCD and LSKV, and it might not always be as simple as this. So some quick trade-offs. LSKV is actually optimistically consistent in the way it replicates data rather than HCD is strongly consistent, and otherwise we have the normal things we might expect that LSKV actually gives us confidentiality properties of our data, makes more operations transparent so those governance operations we can see. It also has this HCD API at its core. It also has some extra features that we're not going to cover too much here. There's one later. So quickly on this optimistic sense, rather than replicating data in a synchronous way, when you write to LSKV, it will replicate asynchronously, and in turn, you get an ID back. You can later follow up with this ID to say, was this replicated properly or was it not allowed? And this basically puts the decision at the client's side, so they can either be optimistic and say, I'm going to trust that that's fine, or they can come back later and say, no, I wanted to make sure that was replicated first. So this is just a key difference. If we go quickly on to problem two, we have this proxy that we might want to communicate to the data store too, but in this instance, Alice wants to write 500 pounds into an account, but the proxy is going to intercept that and write that money into Bob's account instead. LSKV is none the wiser here. It's just gone on the request. It's going to process that request and handle the response. The proxy in turn has an opportunity to return to the client and say, OK, Alice, we've written your money into the account. Now hopefully you can see here that Alice is not equal to Bob, and so she hasn't actually got the money. So LSKV gives us this receipt functionality where we can actually kind of expose untrustworthy proxies. So when the client first does the request to write money into Alice's account, they can also ask for a receipt for that operation. This goes through the proxy. The proxy can rewrite the normal, write request as normal, so the LSKV actually puts the money into Bob's account, but we still want to get that receipt back. So when the receipt actually comes back from LSKV, the client can actually detect that either the proxy's manipulated this receipt in some way, so it's no longer valid because it's a signature, or it is valid, and in which case it says that the money went into Bob's account, which is not what they wanted. So you can use this to kind of flag to someone else that this proxy's not trustworthy and you'd probably stop talking to it. So that's also how we can kind of solve problem two quickly with LSKV. Just a quick summary of things here is now that we don't think current data stores are really suited for confidential operation, primarily looking at CD. We don't think that lifting and shifting them into confidential environments gets you all the properties that you necessarily want. You get some kind of memory encryption integrity just by running them in enclaves, but you don't get some of the other properties that we kind of get from building on the ledger, and also like having a different trust model compared to what some systems have. We've introduced LSKV, which is a new confidentiality store we've built on CCF, and it actually has an HD compatible API, which basically means that you can swap out HD for LSKV in most cases. LSKV is also able to highlight these untrustworthy proxies using receipts, and yeah, it's kind of fast. Thanks to that optimism, it basically has a higher throughput and lower latency than an HDD, so if you do replace an HDD with it, hopefully your performance of stuff will start increasing as well. And that's pretty much me, so I'm around for a few questions, and please check out the GitHub repo, its open source and everything. And yeah, my email is there if you have any questions after the talk, so thank you. We definitely have time, so feel free to go ahead and answer your first question. On the proxy side, the receipts, is that an API extension, or is that an API change? If I'm using the proxy lab, I switch it to LSKV, do I need to change my application? So that's a question about the HDD API, does that include the write receipts by default? No, it does not. They're a separate GRPC service on top, so your clients would need to be manipulated with that. Either your clients or you'll build that into a proxy, so you could say, because the idea of the proxy is that it's a different kind of exposing different API to a client, right? So if you do a write request to a proxy, your proxy, you could by default ask for a receipt and present that to the user as well, they might need some extra functionality to be able to verify that. Is that because it's, I don't know how the receipt works, with extending the HDD API to have some sort of, I don't know, a non-source or a request for signature, is that something that you're planning to, would it make sense to extend the actual HDD API? Questions, would it make sense to extend the HDD API for receipts? We don't really think so, we're not really planning on doing changes directly in HDD, just primarily because HDD has a different kind of threat model and trust model, so some of the things that we have, HDD doesn't necessarily support against. So that's one reason we're not going to stop putting some of this back into HDD itself. It's kind of designed to be a separate service. Yeah. Yeah. I'm wondering how the authentication would work, like if I have confidential services that and only those should be able to access the confidential storage, how would the mutual authentication work here? Between, so do you mean, the HDD should just give out secrets to those confidential services and the confidential service should know that they access the correct HDD storage essentially. By HDD storage, do you mean a key or? I mean the LSKV as an HDD replacement in the Kubernetes state. Okay. So I think the question is about how do you make sure you access the right HDD cluster from a confidential client? Yes. Yeah. So you'd be speaking through the API server right in Kubernetes? Yeah. Or you're saying you want to connect directly? Maybe you have a confidential controller or you connect directly, I guess. Okay. So we wouldn't, I'm not sure if we can do that directly in LSKV. It has a cluster ID like a normal HDD cluster, so you can go about trusting that. But we don't, I don't think we've really worked through that use case directly. The main thing is that if you want to write a proxy around it, then you might want that in a proxy. Okay. Thanks. What are the things that LSKV have to be careful of as compared to like HDD? In what context? Like, what are the things that LSKV need to be taken care of that GTC don't take care of? Okay. Why do you need to do that? Yeah, yeah. So the question is about why do we, well, some things that LSKV kind of supports that doesn't, HDD doesn't. So one of the main things is storage. In HDD, everything gets written to disks right away and that's part of the consensus process. You won't get returned until it's written to disk. In LSKV, that's not the case, we don't write to disk synchronously, which basically means that we're not trusting this host to necessarily persist our data or even give it back to us correctly when we ask for it. It's only used for like disaster recovery scenarios. So that's like one primary difference, which basically means that HDD is open to rollback attacks. So if you trust the host to do the data, they can cut some off and when you load back, you've got a subset of what you had before. Okay. Yeah? So I saw in the trade-offs that LSKV cannot have a strong replication like HDD. So what was the cause of LSKV, what's the case to have to do that trade-off? Yeah. So the question is about why does LSKV not have strongly consistent replication? Primarily, if we're not trusting the host, then A, we don't want to write things to disk, like we just said. So that's one reason for that part. And then on the replication side, we're not trusting the host, so we don't want to block everyone on wanting to replicate everything. And so it does do the replication, and you can follow up again with that ID from your operation. So if you do care about it being strongly replicated, you can just follow up the ID and wait until it's committed. It's just kind of giving the users a bit more flexibility in that operation choice. Okay. So I have one more, so Tom will set up while we're in the last session, but I have one more. So I'm going to write for your performance numbers, because 50% latency loss I expect, but then three and a half times gain in performance, something I didn't expect. Can you say why that is, or how well it keeps them consistent? It's actually consistent. I mean, maybe I missed that. Yeah, of course you don't see the slide anymore. Oh, that's a good slide, yes. Yes. Great. Yes. So the question is about why it's so fast. Unfortunately, it was a consistency slide, but I think I missed it, but thank you. Yeah. I kind of won. Yeah. Even the slides are confidential now, but yeah, slides are on there for some pitch. One minute, second question. Otherwise. Yeah. So one of the first slides, when you get an example of a typical architecture, there were like simple types. Mm-hmm. Yeah, so primarily you can replace ETD with LSKV at the moment, if you took the clusters and swap them, because the ETD API is still there, your things will still work. If you wanted to take advantage of the extra things like the receipts for the proxies and things, you would need to add some logic into your proxy or into your client's fave route. There are, I think, apps that support the specificity support as well. No, there's not currently apps that support those receipts and extra bits at the moment. That's, we haven't got to add a bit. It's just on the data store focus at the moment. Cool. All right.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 9.44, "text": " All right, our next speaker is Andrew Jeffery from University of Cambridge talking about", "tokens": [1057, 558, 11, 527, 958, 8145, 307, 10110, 7506, 2109, 490, 3535, 295, 24876, 1417, 466], "temperature": 0.0, "avg_logprob": -0.32186177133143634, "compression_ratio": 1.599056603773585, "no_speech_prob": 0.21951331198215485}, {"id": 1, "seek": 0, "start": 9.44, "end": 10.44, "text": " LSKB.", "tokens": [36657, 42, 33, 13], "temperature": 0.0, "avg_logprob": -0.32186177133143634, "compression_ratio": 1.599056603773585, "no_speech_prob": 0.21951331198215485}, {"id": 2, "seek": 0, "start": 10.44, "end": 11.44, "text": " Hello.", "tokens": [2425, 13], "temperature": 0.0, "avg_logprob": -0.32186177133143634, "compression_ratio": 1.599056603773585, "no_speech_prob": 0.21951331198215485}, {"id": 3, "seek": 0, "start": 11.44, "end": 18.400000000000002, "text": " So yes, I'm Andrew Jeffery from University of Cambridge, emails there if you want to", "tokens": [407, 2086, 11, 286, 478, 10110, 7506, 2109, 490, 3535, 295, 24876, 11, 12524, 456, 498, 291, 528, 281], "temperature": 0.0, "avg_logprob": -0.32186177133143634, "compression_ratio": 1.599056603773585, "no_speech_prob": 0.21951331198215485}, {"id": 4, "seek": 0, "start": 18.400000000000002, "end": 21.84, "text": " email me about any questions that I can't answer today.", "tokens": [3796, 385, 466, 604, 1651, 300, 286, 393, 380, 1867, 965, 13], "temperature": 0.0, "avg_logprob": -0.32186177133143634, "compression_ratio": 1.599056603773585, "no_speech_prob": 0.21951331198215485}, {"id": 5, "seek": 0, "start": 21.84, "end": 26.8, "text": " As a brief kind of precursor, I kind of come from the distributed systems world, not necessarily", "tokens": [1018, 257, 5353, 733, 295, 41736, 284, 11, 286, 733, 295, 808, 490, 264, 12631, 3652, 1002, 11, 406, 4725], "temperature": 0.0, "avg_logprob": -0.32186177133143634, "compression_ratio": 1.599056603773585, "no_speech_prob": 0.21951331198215485}, {"id": 6, "seek": 2680, "start": 26.8, "end": 32.0, "text": " confidential computing world, so this is kind of like a hybrid of both worlds here.", "tokens": [27054, 15866, 1002, 11, 370, 341, 307, 733, 295, 411, 257, 13051, 295, 1293, 13401, 510, 13], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 7, "seek": 2680, "start": 32.0, "end": 36.96, "text": " So today we're going to talk about LSKB aiming to democratise confidential computing from", "tokens": [407, 965, 321, 434, 516, 281, 751, 466, 36657, 42, 33, 20253, 281, 37221, 908, 27054, 15866, 490], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 8, "seek": 2680, "start": 36.96, "end": 39.04, "text": " the core.", "tokens": [264, 4965, 13], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 9, "seek": 2680, "start": 39.04, "end": 42.04, "text": " So first of all, we've got to work out what this core actually is that we kind of want", "tokens": [407, 700, 295, 439, 11, 321, 600, 658, 281, 589, 484, 437, 341, 4965, 767, 307, 300, 321, 733, 295, 528], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 10, "seek": 2680, "start": 42.04, "end": 43.040000000000006, "text": " to start replacing.", "tokens": [281, 722, 19139, 13], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 11, "seek": 2680, "start": 43.040000000000006, "end": 48.08, "text": " And so we're going to start working with distributed key value stores.", "tokens": [400, 370, 321, 434, 516, 281, 722, 1364, 365, 12631, 2141, 2158, 9512, 13], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 12, "seek": 2680, "start": 48.08, "end": 50.68, "text": " In particular, we're going to look at CD.", "tokens": [682, 1729, 11, 321, 434, 516, 281, 574, 412, 6743, 13], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 13, "seek": 2680, "start": 50.68, "end": 55.68, "text": " And as the CD website defines itself, it's a distributed, reliable key value store and", "tokens": [400, 382, 264, 6743, 3144, 23122, 2564, 11, 309, 311, 257, 12631, 11, 12924, 2141, 2158, 3531, 293], "temperature": 0.0, "avg_logprob": -0.18718817926222278, "compression_ratio": 1.7753623188405796, "no_speech_prob": 2.4106107957777567e-05}, {"id": 14, "seek": 5568, "start": 55.68, "end": 60.76, "text": " importantly, it's for the most critical data of your distributed systems.", "tokens": [8906, 11, 309, 311, 337, 264, 881, 4924, 1412, 295, 428, 12631, 3652, 13], "temperature": 0.0, "avg_logprob": -0.22270560033113054, "compression_ratio": 1.7131147540983607, "no_speech_prob": 1.3905628293287009e-05}, {"id": 15, "seek": 5568, "start": 60.76, "end": 65.92, "text": " So CD runs as a cluster, it's distributed, so you have this one leader node and you might", "tokens": [407, 6743, 6676, 382, 257, 13630, 11, 309, 311, 12631, 11, 370, 291, 362, 341, 472, 5263, 9984, 293, 291, 1062], "temperature": 0.0, "avg_logprob": -0.22270560033113054, "compression_ratio": 1.7131147540983607, "no_speech_prob": 1.3905628293287009e-05}, {"id": 16, "seek": 5568, "start": 65.92, "end": 69.4, "text": " have some more followers in this setup as well.", "tokens": [362, 512, 544, 13071, 294, 341, 8657, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.22270560033113054, "compression_ratio": 1.7131147540983607, "no_speech_prob": 1.3905628293287009e-05}, {"id": 17, "seek": 5568, "start": 69.4, "end": 73.96000000000001, "text": " CD is also not alone, it's the core, so you have some applications around that.", "tokens": [6743, 307, 611, 406, 3312, 11, 309, 311, 264, 4965, 11, 370, 291, 362, 512, 5821, 926, 300, 13], "temperature": 0.0, "avg_logprob": -0.22270560033113054, "compression_ratio": 1.7131147540983607, "no_speech_prob": 1.3905628293287009e-05}, {"id": 18, "seek": 5568, "start": 73.96000000000001, "end": 77.8, "text": " Some of those applications might be some sort of orchestration, so using Kubernetes on", "tokens": [2188, 295, 729, 5821, 1062, 312, 512, 1333, 295, 14161, 2405, 11, 370, 1228, 23145, 322], "temperature": 0.0, "avg_logprob": -0.22270560033113054, "compression_ratio": 1.7131147540983607, "no_speech_prob": 1.3905628293287009e-05}, {"id": 19, "seek": 5568, "start": 77.8, "end": 79.88, "text": " top is like one of the main candidates.", "tokens": [1192, 307, 411, 472, 295, 264, 2135, 11255, 13], "temperature": 0.0, "avg_logprob": -0.22270560033113054, "compression_ratio": 1.7131147540983607, "no_speech_prob": 1.3905628293287009e-05}, {"id": 20, "seek": 7988, "start": 79.88, "end": 86.32, "text": " Otherwise you might use M3 or Rook or Core DNS or other applications that use CD internally", "tokens": [10328, 291, 1062, 764, 376, 18, 420, 497, 1212, 420, 14798, 35153, 420, 661, 5821, 300, 764, 6743, 19501], "temperature": 0.0, "avg_logprob": -0.2161395762226369, "compression_ratio": 1.582995951417004, "no_speech_prob": 1.3845981811755337e-05}, {"id": 21, "seek": 7988, "start": 86.32, "end": 87.32, "text": " as well.", "tokens": [382, 731, 13], "temperature": 0.0, "avg_logprob": -0.2161395762226369, "compression_ratio": 1.582995951417004, "no_speech_prob": 1.3845981811755337e-05}, {"id": 22, "seek": 7988, "start": 87.32, "end": 94.0, "text": " So effectively, it's really widely used, it's quite a critical piece of a lot of infrastructure.", "tokens": [407, 8659, 11, 309, 311, 534, 13371, 1143, 11, 309, 311, 1596, 257, 4924, 2522, 295, 257, 688, 295, 6896, 13], "temperature": 0.0, "avg_logprob": -0.2161395762226369, "compression_ratio": 1.582995951417004, "no_speech_prob": 1.3845981811755337e-05}, {"id": 23, "seek": 7988, "start": 94.0, "end": 98.56, "text": " And so you have to interact with CD in some way, even if you're just using one of these", "tokens": [400, 370, 291, 362, 281, 4648, 365, 6743, 294, 512, 636, 11, 754, 498, 291, 434, 445, 1228, 472, 295, 613], "temperature": 0.0, "avg_logprob": -0.2161395762226369, "compression_ratio": 1.582995951417004, "no_speech_prob": 1.3845981811755337e-05}, {"id": 24, "seek": 7988, "start": 98.56, "end": 99.56, "text": " services.", "tokens": [3328, 13], "temperature": 0.0, "avg_logprob": -0.2161395762226369, "compression_ratio": 1.582995951417004, "no_speech_prob": 1.3845981811755337e-05}, {"id": 25, "seek": 7988, "start": 99.56, "end": 106.67999999999999, "text": " And so primarily you use some key value operations like you can put, so you might write foo one", "tokens": [400, 370, 10029, 291, 764, 512, 2141, 2158, 7705, 411, 291, 393, 829, 11, 370, 291, 1062, 2464, 726, 78, 472], "temperature": 0.0, "avg_logprob": -0.2161395762226369, "compression_ratio": 1.582995951417004, "no_speech_prob": 1.3845981811755337e-05}, {"id": 26, "seek": 10668, "start": 106.68, "end": 111.52000000000001, "text": " equals bar into the data store and it keeps some history so you kind of have this revision", "tokens": [6915, 2159, 666, 264, 1412, 3531, 293, 309, 5965, 512, 2503, 370, 291, 733, 295, 362, 341, 34218], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 27, "seek": 10668, "start": 111.52000000000001, "end": 112.52000000000001, "text": " system.", "tokens": [1185, 13], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 28, "seek": 10668, "start": 112.52000000000001, "end": 116.0, "text": " So when you do that first write, it'll be stored as a version five and you write to", "tokens": [407, 562, 291, 360, 300, 700, 2464, 11, 309, 603, 312, 12187, 382, 257, 3037, 1732, 293, 291, 2464, 281], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 29, "seek": 10668, "start": 116.0, "end": 118.68, "text": " be six, seven, eight going on like that.", "tokens": [312, 2309, 11, 3407, 11, 3180, 516, 322, 411, 300, 13], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 30, "seek": 10668, "start": 118.68, "end": 123.36000000000001, "text": " So you can, after you've written, you can get something back out using the range queries", "tokens": [407, 291, 393, 11, 934, 291, 600, 3720, 11, 291, 393, 483, 746, 646, 484, 1228, 264, 3613, 24109], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 31, "seek": 10668, "start": 123.36000000000001, "end": 129.92000000000002, "text": " and with this you can say, I'd like all keys between foo and foo five in history, so you", "tokens": [293, 365, 341, 291, 393, 584, 11, 286, 1116, 411, 439, 9317, 1296, 726, 78, 293, 726, 78, 1732, 294, 2503, 11, 370, 291], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 32, "seek": 10668, "start": 129.92000000000002, "end": 131.88, "text": " would be able to get multiple keys at once.", "tokens": [576, 312, 1075, 281, 483, 3866, 9317, 412, 1564, 13], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 33, "seek": 10668, "start": 131.88, "end": 135.48000000000002, "text": " And you can also specify the revision here if you wanted to go back in time just to see", "tokens": [400, 291, 393, 611, 16500, 264, 34218, 510, 498, 291, 1415, 281, 352, 646, 294, 565, 445, 281, 536], "temperature": 0.0, "avg_logprob": -0.20371849655259586, "compression_ratio": 1.7766666666666666, "no_speech_prob": 3.7344074371503666e-05}, {"id": 34, "seek": 13548, "start": 135.48, "end": 139.35999999999999, "text": " what it was some previous point.", "tokens": [437, 309, 390, 512, 3894, 935, 13], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 35, "seek": 13548, "start": 139.35999999999999, "end": 142.0, "text": " After you've read something, you might no longer need stuff, so you can delete it.", "tokens": [2381, 291, 600, 1401, 746, 11, 291, 1062, 572, 2854, 643, 1507, 11, 370, 291, 393, 12097, 309, 13], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 36, "seek": 13548, "start": 142.0, "end": 148.35999999999999, "text": " So you can also delete with this range as well, so you can delete say foo to foo five.", "tokens": [407, 291, 393, 611, 12097, 365, 341, 3613, 382, 731, 11, 370, 291, 393, 12097, 584, 726, 78, 281, 726, 78, 1732, 13], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 37, "seek": 13548, "start": 148.35999999999999, "end": 150.79999999999998, "text": " Transactions are a nice ability here, so you can do some kind of conditional logic at the", "tokens": [6531, 12299, 366, 257, 1481, 3485, 510, 11, 370, 291, 393, 360, 512, 733, 295, 27708, 9952, 412, 264], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 38, "seek": 13548, "start": 150.79999999999998, "end": 153.04, "text": " data store side.", "tokens": [1412, 3531, 1252, 13], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 39, "seek": 13548, "start": 153.04, "end": 157.56, "text": " So if you can use put range of deletes or more or less the transactions internally to", "tokens": [407, 498, 291, 393, 764, 829, 3613, 295, 1103, 37996, 420, 544, 420, 1570, 264, 16856, 19501, 281], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 40, "seek": 13548, "start": 157.56, "end": 162.35999999999999, "text": " do kind of bulk operations here, so you can say write foo two and foo three in the same", "tokens": [360, 733, 295, 16139, 7705, 510, 11, 370, 291, 393, 584, 2464, 726, 78, 732, 293, 726, 78, 1045, 294, 264, 912], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 41, "seek": 13548, "start": 162.35999999999999, "end": 163.35999999999999, "text": " revision.", "tokens": [34218, 13], "temperature": 0.0, "avg_logprob": -0.19256765192205255, "compression_ratio": 1.8395522388059702, "no_speech_prob": 1.9070881535299122e-05}, {"id": 42, "seek": 16336, "start": 163.36, "end": 170.12, "text": " Additionally, you can have leases on top of the data store, so these can be used for building", "tokens": [19927, 11, 291, 393, 362, 476, 1957, 322, 1192, 295, 264, 1412, 3531, 11, 370, 613, 393, 312, 1143, 337, 2390], "temperature": 0.0, "avg_logprob": -0.17931689156426323, "compression_ratio": 1.6754716981132076, "no_speech_prob": 1.712034827505704e-05}, {"id": 43, "seek": 16336, "start": 170.12, "end": 174.0, "text": " high level primitives and distributed systems, and primarily you might want some like leadership", "tokens": [1090, 1496, 2886, 38970, 293, 12631, 3652, 11, 293, 10029, 291, 1062, 528, 512, 411, 5848], "temperature": 0.0, "avg_logprob": -0.17931689156426323, "compression_ratio": 1.6754716981132076, "no_speech_prob": 1.712034827505704e-05}, {"id": 44, "seek": 16336, "start": 174.0, "end": 176.72000000000003, "text": " mechanism.", "tokens": [7513, 13], "temperature": 0.0, "avg_logprob": -0.17931689156426323, "compression_ratio": 1.6754716981132076, "no_speech_prob": 1.712034827505704e-05}, {"id": 45, "seek": 16336, "start": 176.72000000000003, "end": 181.96, "text": " One final thing here is the watch API that Etsy provides, similar to ranges you can do", "tokens": [1485, 2572, 551, 510, 307, 264, 1159, 9362, 300, 47170, 88, 6417, 11, 2531, 281, 22526, 291, 393, 360], "temperature": 0.0, "avg_logprob": -0.17931689156426323, "compression_ratio": 1.6754716981132076, "no_speech_prob": 1.712034827505704e-05}, {"id": 46, "seek": 16336, "start": 181.96, "end": 187.52, "text": " a range between a start and an end, and you can also do a watch, a certain point in history.", "tokens": [257, 3613, 1296, 257, 722, 293, 364, 917, 11, 293, 291, 393, 611, 360, 257, 1159, 11, 257, 1629, 935, 294, 2503, 13], "temperature": 0.0, "avg_logprob": -0.17931689156426323, "compression_ratio": 1.6754716981132076, "no_speech_prob": 1.712034827505704e-05}, {"id": 47, "seek": 16336, "start": 187.52, "end": 190.92000000000002, "text": " So for watches, that history is where you start watching from.", "tokens": [407, 337, 17062, 11, 300, 2503, 307, 689, 291, 722, 1976, 490, 13], "temperature": 0.0, "avg_logprob": -0.17931689156426323, "compression_ratio": 1.6754716981132076, "no_speech_prob": 1.712034827505704e-05}, {"id": 48, "seek": 19092, "start": 190.92, "end": 195.16, "text": " So if you start revision five, you'll be notified that foo equals bar, and then you'll be notified", "tokens": [407, 498, 291, 722, 34218, 1732, 11, 291, 603, 312, 18013, 300, 726, 78, 6915, 2159, 11, 293, 550, 291, 603, 312, 18013], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 49, "seek": 19092, "start": 195.16, "end": 198.72, "text": " of the things in revision six, foo two and foo three, and everything that kind of comes", "tokens": [295, 264, 721, 294, 34218, 2309, 11, 726, 78, 732, 293, 726, 78, 1045, 11, 293, 1203, 300, 733, 295, 1487], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 50, "seek": 19092, "start": 198.72, "end": 201.56, "text": " in after that as well while you keep the connection open.", "tokens": [294, 934, 300, 382, 731, 1339, 291, 1066, 264, 4984, 1269, 13], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 51, "seek": 19092, "start": 201.56, "end": 206.27999999999997, "text": " And this is just like a really core API that's used by lots of these other systems, so this", "tokens": [400, 341, 307, 445, 411, 257, 534, 4965, 9362, 300, 311, 1143, 538, 3195, 295, 613, 661, 3652, 11, 370, 341], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 52, "seek": 19092, "start": 206.27999999999997, "end": 211.35999999999999, "text": " is kind of something we might want to mimic if we want to like replace Etsy.", "tokens": [307, 733, 295, 746, 321, 1062, 528, 281, 31075, 498, 321, 528, 281, 411, 7406, 47170, 88, 13], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 53, "seek": 19092, "start": 211.35999999999999, "end": 216.72, "text": " So Etsy is a big system, we want to run it somewhere, primarily lots of people run it", "tokens": [407, 47170, 88, 307, 257, 955, 1185, 11, 321, 528, 281, 1190, 309, 4079, 11, 10029, 3195, 295, 561, 1190, 309], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 54, "seek": 19092, "start": 216.72, "end": 217.92, "text": " in the cloud.", "tokens": [294, 264, 4588, 13], "temperature": 0.0, "avg_logprob": -0.16993064038893757, "compression_ratio": 1.812720848056537, "no_speech_prob": 9.23844982025912e-06}, {"id": 55, "seek": 21792, "start": 217.92, "end": 222.11999999999998, "text": " You don't always want to trust this cloud, because it's run by cloud providers.", "tokens": [509, 500, 380, 1009, 528, 281, 3361, 341, 4588, 11, 570, 309, 311, 1190, 538, 4588, 11330, 13], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 56, "seek": 21792, "start": 222.11999999999998, "end": 224.83999999999997, "text": " They might themselves be trustworthy, but the things that they're operating might not", "tokens": [814, 1062, 2969, 312, 39714, 11, 457, 264, 721, 300, 436, 434, 7447, 1062, 406], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 57, "seek": 21792, "start": 224.83999999999997, "end": 225.83999999999997, "text": " be.", "tokens": [312, 13], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 58, "seek": 21792, "start": 225.83999999999997, "end": 229.51999999999998, "text": " So if a high provider gets a weakness, then might get attackers going through to the lower", "tokens": [407, 498, 257, 1090, 12398, 2170, 257, 12772, 11, 550, 1062, 483, 45129, 516, 807, 281, 264, 3126], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 59, "seek": 21792, "start": 229.51999999999998, "end": 234.51999999999998, "text": " layers and being able to access some of the hardware themselves.", "tokens": [7914, 293, 885, 1075, 281, 2105, 512, 295, 264, 8837, 2969, 13], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 60, "seek": 21792, "start": 234.51999999999998, "end": 237.6, "text": " Clients that are interacting with your service might be within the cloud themselves, they", "tokens": [2033, 2448, 300, 366, 18017, 365, 428, 2643, 1062, 312, 1951, 264, 4588, 2969, 11, 436], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 61, "seek": 21792, "start": 237.6, "end": 241.76, "text": " might have already accepted some of the cloud primitives, they might also just be outside", "tokens": [1062, 362, 1217, 9035, 512, 295, 264, 4588, 2886, 38970, 11, 436, 1062, 611, 445, 312, 2380], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 62, "seek": 21792, "start": 241.76, "end": 245.11999999999998, "text": " of the cloud and just having to use your service for some reason, so they might not be wanting", "tokens": [295, 264, 4588, 293, 445, 1419, 281, 764, 428, 2643, 337, 512, 1778, 11, 370, 436, 1062, 406, 312, 7935], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 63, "seek": 21792, "start": 245.11999999999998, "end": 246.79999999999998, "text": " to use the cloud directly themselves.", "tokens": [281, 764, 264, 4588, 3838, 2969, 13], "temperature": 0.0, "avg_logprob": -0.1692291785930765, "compression_ratio": 1.99375, "no_speech_prob": 4.661328148358734e-06}, {"id": 64, "seek": 24680, "start": 246.8, "end": 252.16000000000003, "text": " Additionally, they might not necessarily speak directly to your data store.", "tokens": [19927, 11, 436, 1062, 406, 4725, 1710, 3838, 281, 428, 1412, 3531, 13], "temperature": 0.0, "avg_logprob": -0.19942184795032847, "compression_ratio": 1.6153846153846154, "no_speech_prob": 2.2170657757669687e-05}, {"id": 65, "seek": 24680, "start": 252.16000000000003, "end": 255.52, "text": " Lots of things they talked through a proxy, so if you're in Kubernetes as well, you might", "tokens": [15908, 295, 721, 436, 2825, 807, 257, 29690, 11, 370, 498, 291, 434, 294, 23145, 382, 731, 11, 291, 1062], "temperature": 0.0, "avg_logprob": -0.19942184795032847, "compression_ratio": 1.6153846153846154, "no_speech_prob": 2.2170657757669687e-05}, {"id": 66, "seek": 24680, "start": 255.52, "end": 260.96000000000004, "text": " have Cubelets and Kube CTL, they speak through the API server, which basically terminates", "tokens": [362, 21300, 37220, 293, 591, 1977, 19529, 43, 11, 436, 1710, 807, 264, 9362, 7154, 11, 597, 1936, 10761, 1024], "temperature": 0.0, "avg_logprob": -0.19942184795032847, "compression_ratio": 1.6153846153846154, "no_speech_prob": 2.2170657757669687e-05}, {"id": 67, "seek": 24680, "start": 260.96000000000004, "end": 266.92, "text": " the CLS connections before passing and doing some logic back on the data store itself.", "tokens": [264, 12855, 50, 9271, 949, 8437, 293, 884, 512, 9952, 646, 322, 264, 1412, 3531, 2564, 13], "temperature": 0.0, "avg_logprob": -0.19942184795032847, "compression_ratio": 1.6153846153846154, "no_speech_prob": 2.2170657757669687e-05}, {"id": 68, "seek": 24680, "start": 266.92, "end": 269.52, "text": " And so today we're going to speak about two problems.", "tokens": [400, 370, 965, 321, 434, 516, 281, 1710, 466, 732, 2740, 13], "temperature": 0.0, "avg_logprob": -0.19942184795032847, "compression_ratio": 1.6153846153846154, "no_speech_prob": 2.2170657757669687e-05}, {"id": 69, "seek": 24680, "start": 269.52, "end": 272.84000000000003, "text": " Problem one here is this LCD cluster that's running in the cloud.", "tokens": [11676, 472, 510, 307, 341, 33158, 13630, 300, 311, 2614, 294, 264, 4588, 13], "temperature": 0.0, "avg_logprob": -0.19942184795032847, "compression_ratio": 1.6153846153846154, "no_speech_prob": 2.2170657757669687e-05}, {"id": 70, "seek": 27284, "start": 272.84, "end": 277.28, "text": " If we're not trusting in this cloud, then all of the data in memory is currently unencrypted", "tokens": [759, 321, 434, 406, 28235, 294, 341, 4588, 11, 550, 439, 295, 264, 1412, 294, 4675, 307, 4362, 517, 22660, 627, 25383], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 71, "seek": 27284, "start": 277.28, "end": 280.03999999999996, "text": " and so we want to be able to do something about that.", "tokens": [293, 370, 321, 528, 281, 312, 1075, 281, 360, 746, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 72, "seek": 27284, "start": 280.03999999999996, "end": 283.08, "text": " And problem two is this proxy.", "tokens": [400, 1154, 732, 307, 341, 29690, 13], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 73, "seek": 27284, "start": 283.08, "end": 287.28, "text": " If this proxy is terminating some CLS connections, we don't really want that to be able to happen.", "tokens": [759, 341, 29690, 307, 1433, 8205, 512, 12855, 50, 9271, 11, 321, 500, 380, 534, 528, 300, 281, 312, 1075, 281, 1051, 13], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 74, "seek": 27284, "start": 287.28, "end": 293.79999999999995, "text": " We'll actually see how the proxy can be a bit distrustful with our interactions.", "tokens": [492, 603, 767, 536, 577, 264, 29690, 393, 312, 257, 857, 1483, 22326, 906, 365, 527, 13280, 13], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 75, "seek": 27284, "start": 293.79999999999995, "end": 298.15999999999997, "text": " We want to be able to show when it's not being very trustworthy.", "tokens": [492, 528, 281, 312, 1075, 281, 855, 562, 309, 311, 406, 885, 588, 39714, 13], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 76, "seek": 27284, "start": 298.15999999999997, "end": 299.15999999999997, "text": " So diving into problem one.", "tokens": [407, 20241, 666, 1154, 472, 13], "temperature": 0.0, "avg_logprob": -0.1820639451344808, "compression_ratio": 1.717557251908397, "no_speech_prob": 1.7681848476058803e-05}, {"id": 77, "seek": 29916, "start": 299.16, "end": 304.32000000000005, "text": " So we've got this XED cluster, XED like any kind of storage service has some storage,", "tokens": [407, 321, 600, 658, 341, 1783, 4731, 13630, 11, 1783, 4731, 411, 604, 733, 295, 6725, 2643, 575, 512, 6725, 11], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 78, "seek": 29916, "start": 304.32000000000005, "end": 306.92, "text": " it has some memory and some processing application.", "tokens": [309, 575, 512, 4675, 293, 512, 9007, 3861, 13], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 79, "seek": 29916, "start": 306.92, "end": 310.6, "text": " It's also distributed, so we have some CLS connections between the peers.", "tokens": [467, 311, 611, 12631, 11, 370, 321, 362, 512, 12855, 50, 9271, 1296, 264, 16739, 13], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 80, "seek": 29916, "start": 310.6, "end": 315.20000000000005, "text": " And effectively, as you can see in yellow here, we have some level of security.", "tokens": [400, 8659, 11, 382, 291, 393, 536, 294, 5566, 510, 11, 321, 362, 512, 1496, 295, 3825, 13], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 81, "seek": 29916, "start": 315.20000000000005, "end": 320.84000000000003, "text": " So recommended setups have XED communicating for XED nodes over TLS.", "tokens": [407, 9628, 46832, 362, 1783, 4731, 17559, 337, 1783, 4731, 13891, 670, 314, 19198, 13], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 82, "seek": 29916, "start": 320.84000000000003, "end": 325.04, "text": " And we also can have this optional sort of file system encryption that gets put down", "tokens": [400, 321, 611, 393, 362, 341, 17312, 1333, 295, 3991, 1185, 29575, 300, 2170, 829, 760], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 83, "seek": 29916, "start": 325.04, "end": 327.32000000000005, "text": " to storage.", "tokens": [281, 6725, 13], "temperature": 0.0, "avg_logprob": -0.2275308642471046, "compression_ratio": 1.6321428571428571, "no_speech_prob": 2.1279491193126887e-05}, {"id": 84, "seek": 32732, "start": 327.32, "end": 330.04, "text": " One main problem with this, all of those keys are in memory.", "tokens": [1485, 2135, 1154, 365, 341, 11, 439, 295, 729, 9317, 366, 294, 4675, 13], "temperature": 0.0, "avg_logprob": -0.13578882055767513, "compression_ratio": 1.6654411764705883, "no_speech_prob": 3.161785934935324e-05}, {"id": 85, "seek": 32732, "start": 330.04, "end": 336.36, "text": " So the TLS key that we were using for TLS is now in memory, so the attackers got that.", "tokens": [407, 264, 314, 19198, 2141, 300, 321, 645, 1228, 337, 314, 19198, 307, 586, 294, 4675, 11, 370, 264, 45129, 658, 300, 13], "temperature": 0.0, "avg_logprob": -0.13578882055767513, "compression_ratio": 1.6654411764705883, "no_speech_prob": 3.161785934935324e-05}, {"id": 86, "seek": 32732, "start": 336.36, "end": 339.2, "text": " And they've also got the private key for any file system encryption.", "tokens": [400, 436, 600, 611, 658, 264, 4551, 2141, 337, 604, 3991, 1185, 29575, 13], "temperature": 0.0, "avg_logprob": -0.13578882055767513, "compression_ratio": 1.6654411764705883, "no_speech_prob": 3.161785934935324e-05}, {"id": 87, "seek": 32732, "start": 339.2, "end": 343.76, "text": " So basically renders our TLS connections and our storage encryption pretty much worthless", "tokens": [407, 1936, 6125, 433, 527, 314, 19198, 9271, 293, 527, 6725, 29575, 1238, 709, 34857], "temperature": 0.0, "avg_logprob": -0.13578882055767513, "compression_ratio": 1.6654411764705883, "no_speech_prob": 3.161785934935324e-05}, {"id": 88, "seek": 32732, "start": 343.76, "end": 348.15999999999997, "text": " if we're not trusting that someone can't access our memory.", "tokens": [498, 321, 434, 406, 28235, 300, 1580, 393, 380, 2105, 527, 4675, 13], "temperature": 0.0, "avg_logprob": -0.13578882055767513, "compression_ratio": 1.6654411764705883, "no_speech_prob": 3.161785934935324e-05}, {"id": 89, "seek": 32732, "start": 348.15999999999997, "end": 354.08, "text": " So if we actually swap out CD for LSKV, which is our data store, we run LSKV inside of", "tokens": [407, 498, 321, 767, 18135, 484, 6743, 337, 36657, 42, 53, 11, 597, 307, 527, 1412, 3531, 11, 321, 1190, 36657, 42, 53, 1854, 295], "temperature": 0.0, "avg_logprob": -0.13578882055767513, "compression_ratio": 1.6654411764705883, "no_speech_prob": 3.161785934935324e-05}, {"id": 90, "seek": 35408, "start": 354.08, "end": 357.96, "text": " an SGX enclave, which gives us those confidentiality properties that we just mentioned in the", "tokens": [364, 34520, 55, 2058, 27995, 11, 597, 2709, 505, 729, 27054, 507, 7221, 300, 321, 445, 2835, 294, 264], "temperature": 0.0, "avg_logprob": -0.16193257845365083, "compression_ratio": 1.7563636363636363, "no_speech_prob": 1.8490496586309746e-05}, {"id": 91, "seek": 35408, "start": 357.96, "end": 364.0, "text": " previous talk, then we can build some of these privileges to be a bit more trustworthy.", "tokens": [3894, 751, 11, 550, 321, 393, 1322, 512, 295, 613, 32588, 281, 312, 257, 857, 544, 39714, 13], "temperature": 0.0, "avg_logprob": -0.16193257845365083, "compression_ratio": 1.7563636363636363, "no_speech_prob": 1.8490496586309746e-05}, {"id": 92, "seek": 35408, "start": 364.0, "end": 368.52, "text": " So now that our memory is encrypted and integrity protected, we can store our TLS keys and file", "tokens": [407, 586, 300, 527, 4675, 307, 36663, 293, 16000, 10594, 11, 321, 393, 3531, 527, 314, 19198, 9317, 293, 3991], "temperature": 0.0, "avg_logprob": -0.16193257845365083, "compression_ratio": 1.7563636363636363, "no_speech_prob": 1.8490496586309746e-05}, {"id": 93, "seek": 35408, "start": 368.52, "end": 372.71999999999997, "text": " system keys there and trust that they're not going to be able to be accessed.", "tokens": [1185, 9317, 456, 293, 3361, 300, 436, 434, 406, 516, 281, 312, 1075, 281, 312, 34211, 13], "temperature": 0.0, "avg_logprob": -0.16193257845365083, "compression_ratio": 1.7563636363636363, "no_speech_prob": 1.8490496586309746e-05}, {"id": 94, "seek": 35408, "start": 372.71999999999997, "end": 376.59999999999997, "text": " The actual application itself is running in a secure enclave, so we can show you that", "tokens": [440, 3539, 3861, 2564, 307, 2614, 294, 257, 7144, 2058, 27995, 11, 370, 321, 393, 855, 291, 300], "temperature": 0.0, "avg_logprob": -0.16193257845365083, "compression_ratio": 1.7563636363636363, "no_speech_prob": 1.8490496586309746e-05}, {"id": 95, "seek": 35408, "start": 376.59999999999997, "end": 380.28, "text": " it's not going to be able to be modified.", "tokens": [309, 311, 406, 516, 281, 312, 1075, 281, 312, 15873, 13], "temperature": 0.0, "avg_logprob": -0.16193257845365083, "compression_ratio": 1.7563636363636363, "no_speech_prob": 1.8490496586309746e-05}, {"id": 96, "seek": 38028, "start": 380.28, "end": 384.15999999999997, "text": " While TLS connections, we can be sure that they're actually secure TLS because our TLS", "tokens": [3987, 314, 19198, 9271, 11, 321, 393, 312, 988, 300, 436, 434, 767, 7144, 314, 19198, 570, 527, 314, 19198], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 97, "seek": 38028, "start": 384.15999999999997, "end": 388.67999999999995, "text": " keys are in memory, and we can actually upgrade those to a tested TLS where rather than just", "tokens": [9317, 366, 294, 4675, 11, 293, 321, 393, 767, 11484, 729, 281, 257, 8246, 314, 19198, 689, 2831, 813, 445], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 98, "seek": 38028, "start": 388.67999999999995, "end": 391.76, "text": " trusting the other application to ever end, we can make sure the other application is", "tokens": [28235, 264, 661, 3861, 281, 1562, 917, 11, 321, 393, 652, 988, 264, 661, 3861, 307], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 99, "seek": 38028, "start": 391.76, "end": 395.96, "text": " running in a secure enclave as well, so it's in the same environment that we trust.", "tokens": [2614, 294, 257, 7144, 2058, 27995, 382, 731, 11, 370, 309, 311, 294, 264, 912, 2823, 300, 321, 3361, 13], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 100, "seek": 38028, "start": 395.96, "end": 400.59999999999997, "text": " And finally, we've got this file system key in memory, so we can trust that anything we", "tokens": [400, 2721, 11, 321, 600, 658, 341, 3991, 1185, 2141, 294, 4675, 11, 370, 321, 393, 3361, 300, 1340, 321], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 101, "seek": 38028, "start": 400.59999999999997, "end": 405.15999999999997, "text": " write to disk is actually going to be encrypted properly as well and safe.", "tokens": [2464, 281, 12355, 307, 767, 516, 281, 312, 36663, 6108, 382, 731, 293, 3273, 13], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 102, "seek": 38028, "start": 405.15999999999997, "end": 408.0, "text": " So this is like one nice solution to that problem one.", "tokens": [407, 341, 307, 411, 472, 1481, 3827, 281, 300, 1154, 472, 13], "temperature": 0.0, "avg_logprob": -0.1413090657844818, "compression_ratio": 1.8349514563106797, "no_speech_prob": 6.945687346160412e-06}, {"id": 103, "seek": 40800, "start": 408.0, "end": 411.8, "text": " So if we delve into a bit of what LSKV is a bit more, we can see that it builds on something", "tokens": [407, 498, 321, 43098, 666, 257, 857, 295, 437, 36657, 42, 53, 307, 257, 857, 544, 11, 321, 393, 536, 300, 309, 15182, 322, 746], "temperature": 0.0, "avg_logprob": -0.13387282827626104, "compression_ratio": 1.6064981949458483, "no_speech_prob": 1.6339641661033966e-05}, {"id": 104, "seek": 40800, "start": 411.8, "end": 412.8, "text": " called CCF.", "tokens": [1219, 12630, 37, 13], "temperature": 0.0, "avg_logprob": -0.13387282827626104, "compression_ratio": 1.6064981949458483, "no_speech_prob": 1.6339641661033966e-05}, {"id": 105, "seek": 40800, "start": 412.8, "end": 418.2, "text": " It runs in the SJX enclave, and like most services in the cloud, it will run on top", "tokens": [467, 6676, 294, 264, 44883, 55, 2058, 27995, 11, 293, 411, 881, 3328, 294, 264, 4588, 11, 309, 486, 1190, 322, 1192], "temperature": 0.0, "avg_logprob": -0.13387282827626104, "compression_ratio": 1.6064981949458483, "no_speech_prob": 1.6339641661033966e-05}, {"id": 106, "seek": 40800, "start": 418.2, "end": 423.36, "text": " of a hypervisor and has some memory and storage and other resources attached as well.", "tokens": [295, 257, 9848, 16457, 293, 575, 512, 4675, 293, 6725, 293, 661, 3593, 8570, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.13387282827626104, "compression_ratio": 1.6064981949458483, "no_speech_prob": 1.6339641661033966e-05}, {"id": 107, "seek": 40800, "start": 423.36, "end": 428.72, "text": " So if we quickly jump into CCF, which is the confidential consortium framework, it's", "tokens": [407, 498, 321, 2661, 3012, 666, 12630, 37, 11, 597, 307, 264, 27054, 38343, 2197, 8388, 11, 309, 311], "temperature": 0.0, "avg_logprob": -0.13387282827626104, "compression_ratio": 1.6064981949458483, "no_speech_prob": 1.6339641661033966e-05}, {"id": 108, "seek": 40800, "start": 428.72, "end": 434.36, "text": " a pretty nice project that basically splits up the interactions and the management of", "tokens": [257, 1238, 1481, 1716, 300, 1936, 37741, 493, 264, 13280, 293, 264, 4592, 295], "temperature": 0.0, "avg_logprob": -0.13387282827626104, "compression_ratio": 1.6064981949458483, "no_speech_prob": 1.6339641661033966e-05}, {"id": 109, "seek": 43436, "start": 434.36, "end": 438.08000000000004, "text": " it into three distinct roles.", "tokens": [309, 666, 1045, 10644, 9604, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 110, "seek": 43436, "start": 438.08000000000004, "end": 439.92, "text": " So the first role is the operator.", "tokens": [407, 264, 700, 3090, 307, 264, 12973, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 111, "seek": 43436, "start": 439.92, "end": 443.48, "text": " So this is the kind of cloud provider, the person who's standing up VMs for you.", "tokens": [407, 341, 307, 264, 733, 295, 4588, 12398, 11, 264, 954, 567, 311, 4877, 493, 18038, 82, 337, 291, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 112, "seek": 43436, "start": 443.48, "end": 448.92, "text": " You might say, I'd like one LSKV node to run with, and then you might later want more", "tokens": [509, 1062, 584, 11, 286, 1116, 411, 472, 36657, 42, 53, 9984, 281, 1190, 365, 11, 293, 550, 291, 1062, 1780, 528, 544], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 113, "seek": 43436, "start": 448.92, "end": 450.8, "text": " to join into the network.", "tokens": [281, 3917, 666, 264, 3209, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 114, "seek": 43436, "start": 450.8, "end": 455.24, "text": " And so this operator is untrusted, so all they can do is stand those nodes up.", "tokens": [400, 370, 341, 12973, 307, 1701, 81, 6589, 11, 370, 439, 436, 393, 360, 307, 1463, 729, 13891, 493, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 115, "seek": 43436, "start": 455.24, "end": 460.0, "text": " They can't do any sort of giving those nodes access to the data in the cluster.", "tokens": [814, 393, 380, 360, 604, 1333, 295, 2902, 729, 13891, 2105, 281, 264, 1412, 294, 264, 13630, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 116, "seek": 43436, "start": 460.0, "end": 462.72, "text": " They don't auto join the cluster.", "tokens": [814, 500, 380, 8399, 3917, 264, 13630, 13], "temperature": 0.0, "avg_logprob": -0.12297444831667922, "compression_ratio": 1.7578125, "no_speech_prob": 1.993176556425169e-05}, {"id": 117, "seek": 46272, "start": 462.72, "end": 465.92, "text": " That's the responsibility of the governance, who we partly trust.", "tokens": [663, 311, 264, 6357, 295, 264, 17449, 11, 567, 321, 17031, 3361, 13], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 118, "seek": 46272, "start": 465.92, "end": 469.84000000000003, "text": " There's a few of them, and so any interactions they do have to be done in some sort of majority", "tokens": [821, 311, 257, 1326, 295, 552, 11, 293, 370, 604, 13280, 436, 360, 362, 281, 312, 1096, 294, 512, 1333, 295, 6286], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 119, "seek": 46272, "start": 469.84000000000003, "end": 471.24, "text": " way.", "tokens": [636, 13], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 120, "seek": 46272, "start": 471.24, "end": 475.88000000000005, "text": " And so these people will be responsible for things like once a node has been stood up,", "tokens": [400, 370, 613, 561, 486, 312, 6250, 337, 721, 411, 1564, 257, 9984, 575, 668, 9371, 493, 11], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 121, "seek": 46272, "start": 475.88000000000005, "end": 479.12, "text": " except checking the configuration of it, and finally accepting it into the network", "tokens": [3993, 8568, 264, 11694, 295, 309, 11, 293, 2721, 17391, 309, 666, 264, 3209], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 122, "seek": 46272, "start": 479.12, "end": 484.28000000000003, "text": " so it can start serving application requests and handle some of the data in the cluster.", "tokens": [370, 309, 393, 722, 8148, 3861, 12475, 293, 4813, 512, 295, 264, 1412, 294, 264, 13630, 13], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 123, "seek": 46272, "start": 484.28000000000003, "end": 488.16, "text": " And finally, we have users that need to actually access the application that we're running.", "tokens": [400, 2721, 11, 321, 362, 5022, 300, 643, 281, 767, 2105, 264, 3861, 300, 321, 434, 2614, 13], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 124, "seek": 46272, "start": 488.16, "end": 492.44000000000005, "text": " And so these are treated as kind of trusted towards the application, but the application", "tokens": [400, 370, 613, 366, 8668, 382, 733, 295, 16034, 3030, 264, 3861, 11, 457, 264, 3861], "temperature": 0.0, "avg_logprob": -0.15507714644722317, "compression_ratio": 1.8588957055214723, "no_speech_prob": 1.1933851965295617e-05}, {"id": 125, "seek": 49244, "start": 492.44, "end": 496.48, "text": " itself can have internal access controls inside.", "tokens": [2564, 393, 362, 6920, 2105, 9003, 1854, 13], "temperature": 0.0, "avg_logprob": -0.12479651227910468, "compression_ratio": 1.6814516129032258, "no_speech_prob": 1.5229484233714174e-05}, {"id": 126, "seek": 49244, "start": 496.48, "end": 504.92, "text": " And all the data is stored on an encrypted ledger that gets written to the disks.", "tokens": [400, 439, 264, 1412, 307, 12187, 322, 364, 36663, 4684, 1321, 300, 2170, 3720, 281, 264, 41617, 13], "temperature": 0.0, "avg_logprob": -0.12479651227910468, "compression_ratio": 1.6814516129032258, "no_speech_prob": 1.5229484233714174e-05}, {"id": 127, "seek": 49244, "start": 504.92, "end": 509.64, "text": " Governance requests are stored publicly in this ledger, and they're also signed so that", "tokens": [5515, 719, 12475, 366, 12187, 14843, 294, 341, 4684, 1321, 11, 293, 436, 434, 611, 8175, 370, 300], "temperature": 0.0, "avg_logprob": -0.12479651227910468, "compression_ratio": 1.6814516129032258, "no_speech_prob": 1.5229484233714174e-05}, {"id": 128, "seek": 49244, "start": 509.64, "end": 512.56, "text": " everyone can see those and verify those.", "tokens": [1518, 393, 536, 729, 293, 16888, 729, 13], "temperature": 0.0, "avg_logprob": -0.12479651227910468, "compression_ratio": 1.6814516129032258, "no_speech_prob": 1.5229484233714174e-05}, {"id": 129, "seek": 49244, "start": 512.56, "end": 517.52, "text": " User interactions that go through the application are normally stored encrypted by default.", "tokens": [32127, 13280, 300, 352, 807, 264, 3861, 366, 5646, 12187, 36663, 538, 7576, 13], "temperature": 0.0, "avg_logprob": -0.12479651227910468, "compression_ratio": 1.6814516129032258, "no_speech_prob": 1.5229484233714174e-05}, {"id": 130, "seek": 49244, "start": 517.52, "end": 522.0, "text": " You can make them public if you have certain use cases for those.", "tokens": [509, 393, 652, 552, 1908, 498, 291, 362, 1629, 764, 3331, 337, 729, 13], "temperature": 0.0, "avg_logprob": -0.12479651227910468, "compression_ratio": 1.6814516129032258, "no_speech_prob": 1.5229484233714174e-05}, {"id": 131, "seek": 52200, "start": 522.0, "end": 525.44, "text": " So LSKV actually has an HCD-compatible API.", "tokens": [407, 36657, 42, 53, 767, 575, 364, 389, 16508, 12, 1112, 11584, 964, 9362, 13], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 132, "seek": 52200, "start": 525.44, "end": 528.88, "text": " This slide might look pretty familiar.", "tokens": [639, 4137, 1062, 574, 1238, 4963, 13], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 133, "seek": 52200, "start": 528.88, "end": 531.68, "text": " It's basically the same API at the core.", "tokens": [467, 311, 1936, 264, 912, 9362, 412, 264, 4965, 13], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 134, "seek": 52200, "start": 531.68, "end": 535.52, "text": " One asterisk is that this watch is at the bottom, is currently requiring a patch on", "tokens": [1485, 257, 3120, 7797, 307, 300, 341, 1159, 307, 412, 264, 2767, 11, 307, 4362, 24165, 257, 9972, 322], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 135, "seek": 52200, "start": 535.52, "end": 541.2, "text": " CCF because it hasn't got around to being merged in yet, but that's something that should", "tokens": [12630, 37, 570, 309, 6132, 380, 658, 926, 281, 885, 36427, 294, 1939, 11, 457, 300, 311, 746, 300, 820], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 136, "seek": 52200, "start": 541.2, "end": 543.96, "text": " be fixed and should be expected to work.", "tokens": [312, 6806, 293, 820, 312, 5176, 281, 589, 13], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 137, "seek": 52200, "start": 543.96, "end": 549.64, "text": " So effectively, this basically means that we can switch out HCD for LSKV in most cases,", "tokens": [407, 8659, 11, 341, 1936, 1355, 300, 321, 393, 3679, 484, 389, 16508, 337, 36657, 42, 53, 294, 881, 3331, 11], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 138, "seek": 52200, "start": 549.64, "end": 551.88, "text": " solving problem one.", "tokens": [12606, 1154, 472, 13], "temperature": 0.0, "avg_logprob": -0.18086985456265084, "compression_ratio": 1.5574912891986064, "no_speech_prob": 3.167581598972902e-05}, {"id": 139, "seek": 55188, "start": 551.88, "end": 556.64, "text": " So before we quickly go into problem two, we've just swapped out HCD and LSKV, and", "tokens": [407, 949, 321, 2661, 352, 666, 1154, 732, 11, 321, 600, 445, 50011, 484, 389, 16508, 293, 36657, 42, 53, 11, 293], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 140, "seek": 55188, "start": 556.64, "end": 559.0, "text": " it might not always be as simple as this.", "tokens": [309, 1062, 406, 1009, 312, 382, 2199, 382, 341, 13], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 141, "seek": 55188, "start": 559.0, "end": 561.84, "text": " So some quick trade-offs.", "tokens": [407, 512, 1702, 4923, 12, 19231, 13], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 142, "seek": 55188, "start": 561.84, "end": 567.52, "text": " LSKV is actually optimistically consistent in the way it replicates data rather than", "tokens": [36657, 42, 53, 307, 767, 5028, 20458, 8398, 294, 264, 636, 309, 3248, 299, 1024, 1412, 2831, 813], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 143, "seek": 55188, "start": 567.52, "end": 572.0, "text": " HCD is strongly consistent, and otherwise we have the normal things we might expect", "tokens": [389, 16508, 307, 10613, 8398, 11, 293, 5911, 321, 362, 264, 2710, 721, 321, 1062, 2066], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 144, "seek": 55188, "start": 572.0, "end": 577.52, "text": " that LSKV actually gives us confidentiality properties of our data, makes more operations", "tokens": [300, 36657, 42, 53, 767, 2709, 505, 27054, 507, 7221, 295, 527, 1412, 11, 1669, 544, 7705], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 145, "seek": 55188, "start": 577.52, "end": 580.0, "text": " transparent so those governance operations we can see.", "tokens": [12737, 370, 729, 17449, 7705, 321, 393, 536, 13], "temperature": 0.0, "avg_logprob": -0.2238691412884256, "compression_ratio": 1.6571428571428573, "no_speech_prob": 2.3003094611340202e-05}, {"id": 146, "seek": 58000, "start": 580.0, "end": 582.6, "text": " It also has this HCD API at its core.", "tokens": [467, 611, 575, 341, 389, 16508, 9362, 412, 1080, 4965, 13], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 147, "seek": 58000, "start": 582.6, "end": 585.96, "text": " It also has some extra features that we're not going to cover too much here.", "tokens": [467, 611, 575, 512, 2857, 4122, 300, 321, 434, 406, 516, 281, 2060, 886, 709, 510, 13], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 148, "seek": 58000, "start": 585.96, "end": 587.56, "text": " There's one later.", "tokens": [821, 311, 472, 1780, 13], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 149, "seek": 58000, "start": 587.56, "end": 594.88, "text": " So quickly on this optimistic sense, rather than replicating data in a synchronous way,", "tokens": [407, 2661, 322, 341, 19397, 2020, 11, 2831, 813, 3248, 30541, 1412, 294, 257, 44743, 636, 11], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 150, "seek": 58000, "start": 594.88, "end": 599.44, "text": " when you write to LSKV, it will replicate asynchronously, and in turn, you get an ID", "tokens": [562, 291, 2464, 281, 36657, 42, 53, 11, 309, 486, 25356, 42642, 5098, 11, 293, 294, 1261, 11, 291, 483, 364, 7348], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 151, "seek": 58000, "start": 599.44, "end": 600.44, "text": " back.", "tokens": [646, 13], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 152, "seek": 58000, "start": 600.44, "end": 604.76, "text": " You can later follow up with this ID to say, was this replicated properly or was it not", "tokens": [509, 393, 1780, 1524, 493, 365, 341, 7348, 281, 584, 11, 390, 341, 46365, 6108, 420, 390, 309, 406], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 153, "seek": 58000, "start": 604.76, "end": 605.76, "text": " allowed?", "tokens": [4350, 30], "temperature": 0.0, "avg_logprob": -0.1536354470042001, "compression_ratio": 1.579150579150579, "no_speech_prob": 1.8631639250088483e-05}, {"id": 154, "seek": 60576, "start": 605.76, "end": 611.72, "text": " And this basically puts the decision at the client's side, so they can either be optimistic", "tokens": [400, 341, 1936, 8137, 264, 3537, 412, 264, 6423, 311, 1252, 11, 370, 436, 393, 2139, 312, 19397], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 155, "seek": 60576, "start": 611.72, "end": 614.8, "text": " and say, I'm going to trust that that's fine, or they can come back later and say, no,", "tokens": [293, 584, 11, 286, 478, 516, 281, 3361, 300, 300, 311, 2489, 11, 420, 436, 393, 808, 646, 1780, 293, 584, 11, 572, 11], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 156, "seek": 60576, "start": 614.8, "end": 617.56, "text": " I wanted to make sure that was replicated first.", "tokens": [286, 1415, 281, 652, 988, 300, 390, 46365, 700, 13], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 157, "seek": 60576, "start": 617.56, "end": 620.28, "text": " So this is just a key difference.", "tokens": [407, 341, 307, 445, 257, 2141, 2649, 13], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 158, "seek": 60576, "start": 620.28, "end": 624.08, "text": " If we go quickly on to problem two, we have this proxy that we might want to communicate", "tokens": [759, 321, 352, 2661, 322, 281, 1154, 732, 11, 321, 362, 341, 29690, 300, 321, 1062, 528, 281, 7890], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 159, "seek": 60576, "start": 624.08, "end": 631.08, "text": " to the data store too, but in this instance, Alice wants to write 500 pounds into an account,", "tokens": [281, 264, 1412, 3531, 886, 11, 457, 294, 341, 5197, 11, 16004, 2738, 281, 2464, 5923, 8319, 666, 364, 2696, 11], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 160, "seek": 60576, "start": 631.08, "end": 634.72, "text": " but the proxy is going to intercept that and write that money into Bob's account instead.", "tokens": [457, 264, 29690, 307, 516, 281, 24700, 300, 293, 2464, 300, 1460, 666, 6085, 311, 2696, 2602, 13], "temperature": 0.0, "avg_logprob": -0.1912809912838153, "compression_ratio": 1.7337662337662338, "no_speech_prob": 1.4364663911692332e-05}, {"id": 161, "seek": 63472, "start": 634.72, "end": 636.1600000000001, "text": " LSKV is none the wiser here.", "tokens": [36657, 42, 53, 307, 6022, 264, 261, 6694, 510, 13], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 162, "seek": 63472, "start": 636.1600000000001, "end": 637.1600000000001, "text": " It's just gone on the request.", "tokens": [467, 311, 445, 2780, 322, 264, 5308, 13], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 163, "seek": 63472, "start": 637.1600000000001, "end": 640.28, "text": " It's going to process that request and handle the response.", "tokens": [467, 311, 516, 281, 1399, 300, 5308, 293, 4813, 264, 4134, 13], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 164, "seek": 63472, "start": 640.28, "end": 645.6800000000001, "text": " The proxy in turn has an opportunity to return to the client and say, OK, Alice, we've written", "tokens": [440, 29690, 294, 1261, 575, 364, 2650, 281, 2736, 281, 264, 6423, 293, 584, 11, 2264, 11, 16004, 11, 321, 600, 3720], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 165, "seek": 63472, "start": 645.6800000000001, "end": 648.48, "text": " your money into the account.", "tokens": [428, 1460, 666, 264, 2696, 13], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 166, "seek": 63472, "start": 648.48, "end": 652.32, "text": " Now hopefully you can see here that Alice is not equal to Bob, and so she hasn't actually", "tokens": [823, 4696, 291, 393, 536, 510, 300, 16004, 307, 406, 2681, 281, 6085, 11, 293, 370, 750, 6132, 380, 767], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 167, "seek": 63472, "start": 652.32, "end": 654.0400000000001, "text": " got the money.", "tokens": [658, 264, 1460, 13], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 168, "seek": 63472, "start": 654.0400000000001, "end": 659.44, "text": " So LSKV gives us this receipt functionality where we can actually kind of expose untrustworthy", "tokens": [407, 36657, 42, 53, 2709, 505, 341, 33882, 14980, 689, 321, 393, 767, 733, 295, 19219, 1701, 22326, 23727], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 169, "seek": 63472, "start": 659.44, "end": 660.8000000000001, "text": " proxies.", "tokens": [447, 87, 530, 13], "temperature": 0.0, "avg_logprob": -0.1846626739501953, "compression_ratio": 1.6376811594202898, "no_speech_prob": 9.006485015561339e-06}, {"id": 170, "seek": 66080, "start": 660.8, "end": 665.0799999999999, "text": " So when the client first does the request to write money into Alice's account, they", "tokens": [407, 562, 264, 6423, 700, 775, 264, 5308, 281, 2464, 1460, 666, 16004, 311, 2696, 11, 436], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 171, "seek": 66080, "start": 665.0799999999999, "end": 667.8, "text": " can also ask for a receipt for that operation.", "tokens": [393, 611, 1029, 337, 257, 33882, 337, 300, 6916, 13], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 172, "seek": 66080, "start": 667.8, "end": 668.8, "text": " This goes through the proxy.", "tokens": [639, 1709, 807, 264, 29690, 13], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 173, "seek": 66080, "start": 668.8, "end": 673.04, "text": " The proxy can rewrite the normal, write request as normal, so the LSKV actually puts the money", "tokens": [440, 29690, 393, 28132, 264, 2710, 11, 2464, 5308, 382, 2710, 11, 370, 264, 36657, 42, 53, 767, 8137, 264, 1460], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 174, "seek": 66080, "start": 673.04, "end": 678.04, "text": " into Bob's account, but we still want to get that receipt back.", "tokens": [666, 6085, 311, 2696, 11, 457, 321, 920, 528, 281, 483, 300, 33882, 646, 13], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 175, "seek": 66080, "start": 678.04, "end": 683.88, "text": " So when the receipt actually comes back from LSKV, the client can actually detect that", "tokens": [407, 562, 264, 33882, 767, 1487, 646, 490, 36657, 42, 53, 11, 264, 6423, 393, 767, 5531, 300], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 176, "seek": 66080, "start": 683.88, "end": 688.04, "text": " either the proxy's manipulated this receipt in some way, so it's no longer valid because", "tokens": [2139, 264, 29690, 311, 37161, 341, 33882, 294, 512, 636, 11, 370, 309, 311, 572, 2854, 7363, 570], "temperature": 0.0, "avg_logprob": -0.13459873987623483, "compression_ratio": 1.8571428571428572, "no_speech_prob": 3.3635412819421617e-06}, {"id": 177, "seek": 68804, "start": 688.04, "end": 692.16, "text": " it's a signature, or it is valid, and in which case it says that the money went into Bob's", "tokens": [309, 311, 257, 13397, 11, 420, 309, 307, 7363, 11, 293, 294, 597, 1389, 309, 1619, 300, 264, 1460, 1437, 666, 6085, 311], "temperature": 0.0, "avg_logprob": -0.14089380491764172, "compression_ratio": 1.619607843137255, "no_speech_prob": 1.914498170663137e-05}, {"id": 178, "seek": 68804, "start": 692.16, "end": 694.92, "text": " account, which is not what they wanted.", "tokens": [2696, 11, 597, 307, 406, 437, 436, 1415, 13], "temperature": 0.0, "avg_logprob": -0.14089380491764172, "compression_ratio": 1.619607843137255, "no_speech_prob": 1.914498170663137e-05}, {"id": 179, "seek": 68804, "start": 694.92, "end": 699.3199999999999, "text": " So you can use this to kind of flag to someone else that this proxy's not trustworthy and", "tokens": [407, 291, 393, 764, 341, 281, 733, 295, 7166, 281, 1580, 1646, 300, 341, 29690, 311, 406, 39714, 293], "temperature": 0.0, "avg_logprob": -0.14089380491764172, "compression_ratio": 1.619607843137255, "no_speech_prob": 1.914498170663137e-05}, {"id": 180, "seek": 68804, "start": 699.3199999999999, "end": 704.7199999999999, "text": " you'd probably stop talking to it.", "tokens": [291, 1116, 1391, 1590, 1417, 281, 309, 13], "temperature": 0.0, "avg_logprob": -0.14089380491764172, "compression_ratio": 1.619607843137255, "no_speech_prob": 1.914498170663137e-05}, {"id": 181, "seek": 68804, "start": 704.7199999999999, "end": 711.8399999999999, "text": " So that's also how we can kind of solve problem two quickly with LSKV.", "tokens": [407, 300, 311, 611, 577, 321, 393, 733, 295, 5039, 1154, 732, 2661, 365, 36657, 42, 53, 13], "temperature": 0.0, "avg_logprob": -0.14089380491764172, "compression_ratio": 1.619607843137255, "no_speech_prob": 1.914498170663137e-05}, {"id": 182, "seek": 68804, "start": 711.8399999999999, "end": 717.4, "text": " Just a quick summary of things here is now that we don't think current data stores are", "tokens": [1449, 257, 1702, 12691, 295, 721, 510, 307, 586, 300, 321, 500, 380, 519, 2190, 1412, 9512, 366], "temperature": 0.0, "avg_logprob": -0.14089380491764172, "compression_ratio": 1.619607843137255, "no_speech_prob": 1.914498170663137e-05}, {"id": 183, "seek": 71740, "start": 717.4, "end": 722.52, "text": " really suited for confidential operation, primarily looking at CD.", "tokens": [534, 24736, 337, 27054, 6916, 11, 10029, 1237, 412, 6743, 13], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 184, "seek": 71740, "start": 722.52, "end": 726.88, "text": " We don't think that lifting and shifting them into confidential environments gets you all", "tokens": [492, 500, 380, 519, 300, 15798, 293, 17573, 552, 666, 27054, 12388, 2170, 291, 439], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 185, "seek": 71740, "start": 726.88, "end": 729.68, "text": " the properties that you necessarily want.", "tokens": [264, 7221, 300, 291, 4725, 528, 13], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 186, "seek": 71740, "start": 729.68, "end": 734.92, "text": " You get some kind of memory encryption integrity just by running them in enclaves, but you don't", "tokens": [509, 483, 512, 733, 295, 4675, 29575, 16000, 445, 538, 2614, 552, 294, 20987, 5423, 11, 457, 291, 500, 380], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 187, "seek": 71740, "start": 734.92, "end": 738.1999999999999, "text": " get some of the other properties that we kind of get from building on the ledger, and also", "tokens": [483, 512, 295, 264, 661, 7221, 300, 321, 733, 295, 483, 490, 2390, 322, 264, 4684, 1321, 11, 293, 611], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 188, "seek": 71740, "start": 738.1999999999999, "end": 743.04, "text": " like having a different trust model compared to what some systems have.", "tokens": [411, 1419, 257, 819, 3361, 2316, 5347, 281, 437, 512, 3652, 362, 13], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 189, "seek": 71740, "start": 743.04, "end": 747.3199999999999, "text": " We've introduced LSKV, which is a new confidentiality store we've built on CCF, and it actually", "tokens": [492, 600, 7268, 36657, 42, 53, 11, 597, 307, 257, 777, 27054, 507, 3531, 321, 600, 3094, 322, 12630, 37, 11, 293, 309, 767], "temperature": 0.0, "avg_logprob": -0.14896096123589408, "compression_ratio": 1.7531645569620253, "no_speech_prob": 2.8615493647521362e-05}, {"id": 190, "seek": 74732, "start": 747.32, "end": 751.1600000000001, "text": " has an HD compatible API, which basically means that you can swap out HD for LSKV in", "tokens": [575, 364, 12149, 18218, 9362, 11, 597, 1936, 1355, 300, 291, 393, 18135, 484, 12149, 337, 36657, 42, 53, 294], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 191, "seek": 74732, "start": 751.1600000000001, "end": 752.1600000000001, "text": " most cases.", "tokens": [881, 3331, 13], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 192, "seek": 74732, "start": 752.1600000000001, "end": 758.7600000000001, "text": " LSKV is also able to highlight these untrustworthy proxies using receipts, and yeah, it's kind", "tokens": [36657, 42, 53, 307, 611, 1075, 281, 5078, 613, 1701, 22326, 23727, 447, 87, 530, 1228, 2268, 48908, 11, 293, 1338, 11, 309, 311, 733], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 193, "seek": 74732, "start": 758.7600000000001, "end": 759.7600000000001, "text": " of fast.", "tokens": [295, 2370, 13], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 194, "seek": 74732, "start": 759.7600000000001, "end": 763.2, "text": " Thanks to that optimism, it basically has a higher throughput and lower latency than", "tokens": [2561, 281, 300, 31074, 11, 309, 1936, 575, 257, 2946, 44629, 293, 3126, 27043, 813], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 195, "seek": 74732, "start": 763.2, "end": 766.5600000000001, "text": " an HDD, so if you do replace an HDD with it, hopefully your performance of stuff will", "tokens": [364, 12149, 35, 11, 370, 498, 291, 360, 7406, 364, 12149, 35, 365, 309, 11, 4696, 428, 3389, 295, 1507, 486], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 196, "seek": 74732, "start": 766.5600000000001, "end": 769.32, "text": " start increasing as well.", "tokens": [722, 5662, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 197, "seek": 74732, "start": 769.32, "end": 773.5600000000001, "text": " And that's pretty much me, so I'm around for a few questions, and please check out the", "tokens": [400, 300, 311, 1238, 709, 385, 11, 370, 286, 478, 926, 337, 257, 1326, 1651, 11, 293, 1767, 1520, 484, 264], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 198, "seek": 74732, "start": 773.5600000000001, "end": 776.2, "text": " GitHub repo, its open source and everything.", "tokens": [23331, 49040, 11, 1080, 1269, 4009, 293, 1203, 13], "temperature": 0.0, "avg_logprob": -0.22026837040001238, "compression_ratio": 1.5885885885885886, "no_speech_prob": 1.8925902622868307e-05}, {"id": 199, "seek": 77620, "start": 776.2, "end": 783.2, "text": " And yeah, my email is there if you have any questions after the talk, so thank you.", "tokens": [400, 1338, 11, 452, 3796, 307, 456, 498, 291, 362, 604, 1651, 934, 264, 751, 11, 370, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.3742517860986853, "compression_ratio": 1.536697247706422, "no_speech_prob": 0.00017507822485640645}, {"id": 200, "seek": 77620, "start": 783.2, "end": 790.2, "text": " We definitely have time, so feel free to go ahead and answer your first question.", "tokens": [492, 2138, 362, 565, 11, 370, 841, 1737, 281, 352, 2286, 293, 1867, 428, 700, 1168, 13], "temperature": 0.0, "avg_logprob": -0.3742517860986853, "compression_ratio": 1.536697247706422, "no_speech_prob": 0.00017507822485640645}, {"id": 201, "seek": 77620, "start": 790.2, "end": 797.2, "text": " On the proxy side, the receipts, is that an API extension, or is that an API change?", "tokens": [1282, 264, 29690, 1252, 11, 264, 2268, 48908, 11, 307, 300, 364, 9362, 10320, 11, 420, 307, 300, 364, 9362, 1319, 30], "temperature": 0.0, "avg_logprob": -0.3742517860986853, "compression_ratio": 1.536697247706422, "no_speech_prob": 0.00017507822485640645}, {"id": 202, "seek": 77620, "start": 797.2, "end": 804.2, "text": " If I'm using the proxy lab, I switch it to LSKV, do I need to change my application?", "tokens": [759, 286, 478, 1228, 264, 29690, 2715, 11, 286, 3679, 309, 281, 36657, 42, 53, 11, 360, 286, 643, 281, 1319, 452, 3861, 30], "temperature": 0.0, "avg_logprob": -0.3742517860986853, "compression_ratio": 1.536697247706422, "no_speech_prob": 0.00017507822485640645}, {"id": 203, "seek": 80420, "start": 804.2, "end": 813.0, "text": " So that's a question about the HDD API, does that include the write receipts by default?", "tokens": [407, 300, 311, 257, 1168, 466, 264, 12149, 35, 9362, 11, 775, 300, 4090, 264, 2464, 2268, 48908, 538, 7576, 30], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 204, "seek": 80420, "start": 813.0, "end": 814.2, "text": " No, it does not.", "tokens": [883, 11, 309, 775, 406, 13], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 205, "seek": 80420, "start": 814.2, "end": 819.5600000000001, "text": " They're a separate GRPC service on top, so your clients would need to be manipulated", "tokens": [814, 434, 257, 4994, 10903, 12986, 2643, 322, 1192, 11, 370, 428, 6982, 576, 643, 281, 312, 37161], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 206, "seek": 80420, "start": 819.5600000000001, "end": 820.5600000000001, "text": " with that.", "tokens": [365, 300, 13], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 207, "seek": 80420, "start": 820.5600000000001, "end": 824.4000000000001, "text": " Either your clients or you'll build that into a proxy, so you could say, because the idea", "tokens": [13746, 428, 6982, 420, 291, 603, 1322, 300, 666, 257, 29690, 11, 370, 291, 727, 584, 11, 570, 264, 1558], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 208, "seek": 80420, "start": 824.4000000000001, "end": 828.0400000000001, "text": " of the proxy is that it's a different kind of exposing different API to a client, right?", "tokens": [295, 264, 29690, 307, 300, 309, 311, 257, 819, 733, 295, 33178, 819, 9362, 281, 257, 6423, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 209, "seek": 80420, "start": 828.0400000000001, "end": 831.6800000000001, "text": " So if you do a write request to a proxy, your proxy, you could by default ask for a receipt", "tokens": [407, 498, 291, 360, 257, 2464, 5308, 281, 257, 29690, 11, 428, 29690, 11, 291, 727, 538, 7576, 1029, 337, 257, 33882], "temperature": 0.0, "avg_logprob": -0.24004304976690383, "compression_ratio": 1.7611940298507462, "no_speech_prob": 5.424645496532321e-05}, {"id": 210, "seek": 83168, "start": 831.68, "end": 835.1999999999999, "text": " and present that to the user as well, they might need some extra functionality to be", "tokens": [293, 1974, 300, 281, 264, 4195, 382, 731, 11, 436, 1062, 643, 512, 2857, 14980, 281, 312], "temperature": 0.0, "avg_logprob": -0.29188063248344087, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.00023334169236477464}, {"id": 211, "seek": 83168, "start": 835.1999999999999, "end": 836.1999999999999, "text": " able to verify that.", "tokens": [1075, 281, 16888, 300, 13], "temperature": 0.0, "avg_logprob": -0.29188063248344087, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.00023334169236477464}, {"id": 212, "seek": 83168, "start": 836.1999999999999, "end": 842.1999999999999, "text": " Is that because it's, I don't know how the receipt works, with extending the HDD API", "tokens": [1119, 300, 570, 309, 311, 11, 286, 500, 380, 458, 577, 264, 33882, 1985, 11, 365, 24360, 264, 12149, 35, 9362], "temperature": 0.0, "avg_logprob": -0.29188063248344087, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.00023334169236477464}, {"id": 213, "seek": 83168, "start": 842.1999999999999, "end": 849.1999999999999, "text": " to have some sort of, I don't know, a non-source or a request for signature, is that something", "tokens": [281, 362, 512, 1333, 295, 11, 286, 500, 380, 458, 11, 257, 2107, 12, 41676, 420, 257, 5308, 337, 13397, 11, 307, 300, 746], "temperature": 0.0, "avg_logprob": -0.29188063248344087, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.00023334169236477464}, {"id": 214, "seek": 83168, "start": 849.1999999999999, "end": 855.1999999999999, "text": " that you're planning to, would it make sense to extend the actual HDD API?", "tokens": [300, 291, 434, 5038, 281, 11, 576, 309, 652, 2020, 281, 10101, 264, 3539, 12149, 35, 9362, 30], "temperature": 0.0, "avg_logprob": -0.29188063248344087, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.00023334169236477464}, {"id": 215, "seek": 83168, "start": 855.1999999999999, "end": 859.7199999999999, "text": " Questions, would it make sense to extend the HDD API for receipts?", "tokens": [27738, 11, 576, 309, 652, 2020, 281, 10101, 264, 12149, 35, 9362, 337, 2268, 48908, 30], "temperature": 0.0, "avg_logprob": -0.29188063248344087, "compression_ratio": 1.728744939271255, "no_speech_prob": 0.00023334169236477464}, {"id": 216, "seek": 85972, "start": 859.72, "end": 863.76, "text": " We don't really think so, we're not really planning on doing changes directly in HDD,", "tokens": [492, 500, 380, 534, 519, 370, 11, 321, 434, 406, 534, 5038, 322, 884, 2962, 3838, 294, 12149, 35, 11], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 217, "seek": 85972, "start": 863.76, "end": 867.28, "text": " just primarily because HDD has a different kind of threat model and trust model, so some", "tokens": [445, 10029, 570, 12149, 35, 575, 257, 819, 733, 295, 4734, 2316, 293, 3361, 2316, 11, 370, 512], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 218, "seek": 85972, "start": 867.28, "end": 870.88, "text": " of the things that we have, HDD doesn't necessarily support against.", "tokens": [295, 264, 721, 300, 321, 362, 11, 12149, 35, 1177, 380, 4725, 1406, 1970, 13], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 219, "seek": 85972, "start": 870.88, "end": 875.32, "text": " So that's one reason we're not going to stop putting some of this back into HDD itself.", "tokens": [407, 300, 311, 472, 1778, 321, 434, 406, 516, 281, 1590, 3372, 512, 295, 341, 646, 666, 12149, 35, 2564, 13], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 220, "seek": 85972, "start": 875.32, "end": 877.32, "text": " It's kind of designed to be a separate service.", "tokens": [467, 311, 733, 295, 4761, 281, 312, 257, 4994, 2643, 13], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 221, "seek": 85972, "start": 877.32, "end": 878.32, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 222, "seek": 85972, "start": 878.32, "end": 879.32, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.22903553190685455, "compression_ratio": 1.6359832635983265, "no_speech_prob": 3.1325580494012684e-05}, {"id": 223, "seek": 87932, "start": 879.32, "end": 890.0, "text": " I'm wondering how the authentication would work, like if I have confidential services", "tokens": [286, 478, 6359, 577, 264, 26643, 576, 589, 11, 411, 498, 286, 362, 27054, 3328], "temperature": 0.0, "avg_logprob": -0.3929763242422816, "compression_ratio": 1.861904761904762, "no_speech_prob": 0.000611998955719173}, {"id": 224, "seek": 87932, "start": 890.0, "end": 893.5600000000001, "text": " that and only those should be able to access the confidential storage, how would the mutual", "tokens": [300, 293, 787, 729, 820, 312, 1075, 281, 2105, 264, 27054, 6725, 11, 577, 576, 264, 16917], "temperature": 0.0, "avg_logprob": -0.3929763242422816, "compression_ratio": 1.861904761904762, "no_speech_prob": 0.000611998955719173}, {"id": 225, "seek": 87932, "start": 893.5600000000001, "end": 896.32, "text": " authentication work here?", "tokens": [26643, 589, 510, 30], "temperature": 0.0, "avg_logprob": -0.3929763242422816, "compression_ratio": 1.861904761904762, "no_speech_prob": 0.000611998955719173}, {"id": 226, "seek": 87932, "start": 896.32, "end": 901.84, "text": " Between, so do you mean, the HDD should just give out secrets to those confidential services", "tokens": [18967, 11, 370, 360, 291, 914, 11, 264, 12149, 35, 820, 445, 976, 484, 14093, 281, 729, 27054, 3328], "temperature": 0.0, "avg_logprob": -0.3929763242422816, "compression_ratio": 1.861904761904762, "no_speech_prob": 0.000611998955719173}, {"id": 227, "seek": 87932, "start": 901.84, "end": 907.96, "text": " and the confidential service should know that they access the correct HDD storage essentially.", "tokens": [293, 264, 27054, 2643, 820, 458, 300, 436, 2105, 264, 3006, 12149, 35, 6725, 4476, 13], "temperature": 0.0, "avg_logprob": -0.3929763242422816, "compression_ratio": 1.861904761904762, "no_speech_prob": 0.000611998955719173}, {"id": 228, "seek": 90796, "start": 907.96, "end": 910.48, "text": " By HDD storage, do you mean a key or?", "tokens": [3146, 12149, 35, 6725, 11, 360, 291, 914, 257, 2141, 420, 30], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 229, "seek": 90796, "start": 910.48, "end": 915.96, "text": " I mean the LSKV as an HDD replacement in the Kubernetes state.", "tokens": [286, 914, 264, 36657, 42, 53, 382, 364, 12149, 35, 14419, 294, 264, 23145, 1785, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 230, "seek": 90796, "start": 915.96, "end": 916.96, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 231, "seek": 90796, "start": 916.96, "end": 919.88, "text": " So I think the question is about how do you make sure you access the right HDD cluster", "tokens": [407, 286, 519, 264, 1168, 307, 466, 577, 360, 291, 652, 988, 291, 2105, 264, 558, 12149, 35, 13630], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 232, "seek": 90796, "start": 919.88, "end": 921.2, "text": " from a confidential client?", "tokens": [490, 257, 27054, 6423, 30], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 233, "seek": 90796, "start": 921.2, "end": 922.2, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 234, "seek": 90796, "start": 922.2, "end": 923.2, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 235, "seek": 90796, "start": 923.2, "end": 926.6800000000001, "text": " So you'd be speaking through the API server right in Kubernetes?", "tokens": [407, 291, 1116, 312, 4124, 807, 264, 9362, 7154, 558, 294, 23145, 30], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 236, "seek": 90796, "start": 926.6800000000001, "end": 927.6800000000001, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 237, "seek": 90796, "start": 927.6800000000001, "end": 929.96, "text": " Or you're saying you want to connect directly?", "tokens": [1610, 291, 434, 1566, 291, 528, 281, 1745, 3838, 30], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 238, "seek": 90796, "start": 929.96, "end": 933.48, "text": " Maybe you have a confidential controller or you connect directly, I guess.", "tokens": [2704, 291, 362, 257, 27054, 10561, 420, 291, 1745, 3838, 11, 286, 2041, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 239, "seek": 90796, "start": 933.48, "end": 934.48, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 240, "seek": 90796, "start": 934.48, "end": 936.6800000000001, "text": " So we wouldn't, I'm not sure if we can do that directly in LSKV.", "tokens": [407, 321, 2759, 380, 11, 286, 478, 406, 988, 498, 321, 393, 360, 300, 3838, 294, 36657, 42, 53, 13], "temperature": 0.0, "avg_logprob": -0.32084422208824936, "compression_ratio": 1.6928327645051195, "no_speech_prob": 6.904063775436953e-05}, {"id": 241, "seek": 93668, "start": 936.68, "end": 941.52, "text": " It has a cluster ID like a normal HDD cluster, so you can go about trusting that.", "tokens": [467, 575, 257, 13630, 7348, 411, 257, 2710, 12149, 35, 13630, 11, 370, 291, 393, 352, 466, 28235, 300, 13], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 242, "seek": 93668, "start": 941.52, "end": 945.68, "text": " But we don't, I don't think we've really worked through that use case directly.", "tokens": [583, 321, 500, 380, 11, 286, 500, 380, 519, 321, 600, 534, 2732, 807, 300, 764, 1389, 3838, 13], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 243, "seek": 93668, "start": 945.68, "end": 949.3599999999999, "text": " The main thing is that if you want to write a proxy around it, then you might want that", "tokens": [440, 2135, 551, 307, 300, 498, 291, 528, 281, 2464, 257, 29690, 926, 309, 11, 550, 291, 1062, 528, 300], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 244, "seek": 93668, "start": 949.3599999999999, "end": 950.3599999999999, "text": " in a proxy.", "tokens": [294, 257, 29690, 13], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 245, "seek": 93668, "start": 950.3599999999999, "end": 951.3599999999999, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 246, "seek": 93668, "start": 951.3599999999999, "end": 952.3599999999999, "text": " Thanks.", "tokens": [2561, 13], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 247, "seek": 93668, "start": 952.3599999999999, "end": 959.28, "text": " What are the things that LSKV have to be careful of as compared to like HDD?", "tokens": [708, 366, 264, 721, 300, 36657, 42, 53, 362, 281, 312, 5026, 295, 382, 5347, 281, 411, 12149, 35, 30], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 248, "seek": 93668, "start": 959.28, "end": 960.3599999999999, "text": " In what context?", "tokens": [682, 437, 4319, 30], "temperature": 0.0, "avg_logprob": -0.28414014063843895, "compression_ratio": 1.550420168067227, "no_speech_prob": 0.00010449364344822243}, {"id": 249, "seek": 96036, "start": 960.36, "end": 966.88, "text": " Like, what are the things that LSKV need to be taken care of that GTC don't take care", "tokens": [1743, 11, 437, 366, 264, 721, 300, 36657, 42, 53, 643, 281, 312, 2726, 1127, 295, 300, 17530, 34, 500, 380, 747, 1127], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 250, "seek": 96036, "start": 966.88, "end": 967.88, "text": " of?", "tokens": [295, 30], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 251, "seek": 96036, "start": 967.88, "end": 968.88, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 252, "seek": 96036, "start": 968.88, "end": 969.88, "text": " Why do you need to do that?", "tokens": [1545, 360, 291, 643, 281, 360, 300, 30], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 253, "seek": 96036, "start": 969.88, "end": 970.88, "text": " Yeah, yeah.", "tokens": [865, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 254, "seek": 96036, "start": 970.88, "end": 975.08, "text": " So the question is about why do we, well, some things that LSKV kind of supports that", "tokens": [407, 264, 1168, 307, 466, 983, 360, 321, 11, 731, 11, 512, 721, 300, 36657, 42, 53, 733, 295, 9346, 300], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 255, "seek": 96036, "start": 975.08, "end": 977.0, "text": " doesn't, HDD doesn't.", "tokens": [1177, 380, 11, 12149, 35, 1177, 380, 13], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 256, "seek": 96036, "start": 977.0, "end": 979.44, "text": " So one of the main things is storage.", "tokens": [407, 472, 295, 264, 2135, 721, 307, 6725, 13], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 257, "seek": 96036, "start": 979.44, "end": 984.24, "text": " In HDD, everything gets written to disks right away and that's part of the consensus", "tokens": [682, 12149, 35, 11, 1203, 2170, 3720, 281, 41617, 558, 1314, 293, 300, 311, 644, 295, 264, 19115], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 258, "seek": 96036, "start": 984.24, "end": 985.24, "text": " process.", "tokens": [1399, 13], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 259, "seek": 96036, "start": 985.24, "end": 987.48, "text": " You won't get returned until it's written to disk.", "tokens": [509, 1582, 380, 483, 8752, 1826, 309, 311, 3720, 281, 12355, 13], "temperature": 0.0, "avg_logprob": -0.27389985278136747, "compression_ratio": 1.6705882352941177, "no_speech_prob": 6.995863805059344e-05}, {"id": 260, "seek": 98748, "start": 987.48, "end": 992.6, "text": " In LSKV, that's not the case, we don't write to disk synchronously, which basically means", "tokens": [682, 36657, 42, 53, 11, 300, 311, 406, 264, 1389, 11, 321, 500, 380, 2464, 281, 12355, 19331, 5098, 11, 597, 1936, 1355], "temperature": 0.0, "avg_logprob": -0.16928831059881982, "compression_ratio": 1.5895196506550218, "no_speech_prob": 4.4917353079654276e-05}, {"id": 261, "seek": 98748, "start": 992.6, "end": 998.04, "text": " that we're not trusting this host to necessarily persist our data or even give it back to us", "tokens": [300, 321, 434, 406, 28235, 341, 3975, 281, 4725, 13233, 527, 1412, 420, 754, 976, 309, 646, 281, 505], "temperature": 0.0, "avg_logprob": -0.16928831059881982, "compression_ratio": 1.5895196506550218, "no_speech_prob": 4.4917353079654276e-05}, {"id": 262, "seek": 98748, "start": 998.04, "end": 999.6, "text": " correctly when we ask for it.", "tokens": [8944, 562, 321, 1029, 337, 309, 13], "temperature": 0.0, "avg_logprob": -0.16928831059881982, "compression_ratio": 1.5895196506550218, "no_speech_prob": 4.4917353079654276e-05}, {"id": 263, "seek": 98748, "start": 999.6, "end": 1003.9200000000001, "text": " It's only used for like disaster recovery scenarios.", "tokens": [467, 311, 787, 1143, 337, 411, 11293, 8597, 15077, 13], "temperature": 0.0, "avg_logprob": -0.16928831059881982, "compression_ratio": 1.5895196506550218, "no_speech_prob": 4.4917353079654276e-05}, {"id": 264, "seek": 98748, "start": 1003.9200000000001, "end": 1012.6, "text": " So that's like one primary difference, which basically means that HDD is open to rollback", "tokens": [407, 300, 311, 411, 472, 6194, 2649, 11, 597, 1936, 1355, 300, 12149, 35, 307, 1269, 281, 3373, 3207], "temperature": 0.0, "avg_logprob": -0.16928831059881982, "compression_ratio": 1.5895196506550218, "no_speech_prob": 4.4917353079654276e-05}, {"id": 265, "seek": 98748, "start": 1012.6, "end": 1013.6, "text": " attacks.", "tokens": [8122, 13], "temperature": 0.0, "avg_logprob": -0.16928831059881982, "compression_ratio": 1.5895196506550218, "no_speech_prob": 4.4917353079654276e-05}, {"id": 266, "seek": 101360, "start": 1013.6, "end": 1017.6, "text": " So if you trust the host to do the data, they can cut some off and when you load back, you've", "tokens": [407, 498, 291, 3361, 264, 3975, 281, 360, 264, 1412, 11, 436, 393, 1723, 512, 766, 293, 562, 291, 3677, 646, 11, 291, 600], "temperature": 0.0, "avg_logprob": -0.2540702274867466, "compression_ratio": 1.3454545454545455, "no_speech_prob": 7.925853424239904e-05}, {"id": 267, "seek": 101360, "start": 1017.6, "end": 1020.6, "text": " got a subset of what you had before.", "tokens": [658, 257, 25993, 295, 437, 291, 632, 949, 13], "temperature": 0.0, "avg_logprob": -0.2540702274867466, "compression_ratio": 1.3454545454545455, "no_speech_prob": 7.925853424239904e-05}, {"id": 268, "seek": 101360, "start": 1020.6, "end": 1021.6, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.2540702274867466, "compression_ratio": 1.3454545454545455, "no_speech_prob": 7.925853424239904e-05}, {"id": 269, "seek": 101360, "start": 1021.6, "end": 1022.6, "text": " Yeah?", "tokens": [865, 30], "temperature": 0.0, "avg_logprob": -0.2540702274867466, "compression_ratio": 1.3454545454545455, "no_speech_prob": 7.925853424239904e-05}, {"id": 270, "seek": 101360, "start": 1022.6, "end": 1035.3600000000001, "text": " So I saw in the trade-offs that LSKV cannot have a strong replication like HDD.", "tokens": [407, 286, 1866, 294, 264, 4923, 12, 19231, 300, 36657, 42, 53, 2644, 362, 257, 2068, 39911, 411, 12149, 35, 13], "temperature": 0.0, "avg_logprob": -0.2540702274867466, "compression_ratio": 1.3454545454545455, "no_speech_prob": 7.925853424239904e-05}, {"id": 271, "seek": 103536, "start": 1035.36, "end": 1045.4799999999998, "text": " So what was the cause of LSKV, what's the case to have to do that trade-off?", "tokens": [407, 437, 390, 264, 3082, 295, 36657, 42, 53, 11, 437, 311, 264, 1389, 281, 362, 281, 360, 300, 4923, 12, 4506, 30], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 272, "seek": 103536, "start": 1045.4799999999998, "end": 1046.4799999999998, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 273, "seek": 103536, "start": 1046.4799999999998, "end": 1051.28, "text": " So the question is about why does LSKV not have strongly consistent replication?", "tokens": [407, 264, 1168, 307, 466, 983, 775, 36657, 42, 53, 406, 362, 10613, 8398, 39911, 30], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 274, "seek": 103536, "start": 1051.28, "end": 1056.12, "text": " Primarily, if we're not trusting the host, then A, we don't want to write things to disk,", "tokens": [19671, 3289, 11, 498, 321, 434, 406, 28235, 264, 3975, 11, 550, 316, 11, 321, 500, 380, 528, 281, 2464, 721, 281, 12355, 11], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 275, "seek": 103536, "start": 1056.12, "end": 1057.12, "text": " like we just said.", "tokens": [411, 321, 445, 848, 13], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 276, "seek": 103536, "start": 1057.12, "end": 1058.4799999999998, "text": " So that's one reason for that part.", "tokens": [407, 300, 311, 472, 1778, 337, 300, 644, 13], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 277, "seek": 103536, "start": 1058.4799999999998, "end": 1062.6, "text": " And then on the replication side, we're not trusting the host, so we don't want to block", "tokens": [400, 550, 322, 264, 39911, 1252, 11, 321, 434, 406, 28235, 264, 3975, 11, 370, 321, 500, 380, 528, 281, 3461], "temperature": 0.0, "avg_logprob": -0.2474973283965012, "compression_ratio": 1.7112068965517242, "no_speech_prob": 3.2271447707898915e-05}, {"id": 278, "seek": 106260, "start": 1062.6, "end": 1065.7199999999998, "text": " everyone on wanting to replicate everything.", "tokens": [1518, 322, 7935, 281, 25356, 1203, 13], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 279, "seek": 106260, "start": 1065.7199999999998, "end": 1072.6399999999999, "text": " And so it does do the replication, and you can follow up again with that ID from your", "tokens": [400, 370, 309, 775, 360, 264, 39911, 11, 293, 291, 393, 1524, 493, 797, 365, 300, 7348, 490, 428], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 280, "seek": 106260, "start": 1072.6399999999999, "end": 1073.6399999999999, "text": " operation.", "tokens": [6916, 13], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 281, "seek": 106260, "start": 1073.6399999999999, "end": 1076.4399999999998, "text": " So if you do care about it being strongly replicated, you can just follow up the ID and", "tokens": [407, 498, 291, 360, 1127, 466, 309, 885, 10613, 46365, 11, 291, 393, 445, 1524, 493, 264, 7348, 293], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 282, "seek": 106260, "start": 1076.4399999999998, "end": 1077.4399999999998, "text": " wait until it's committed.", "tokens": [1699, 1826, 309, 311, 7784, 13], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 283, "seek": 106260, "start": 1077.4399999999998, "end": 1081.8799999999999, "text": " It's just kind of giving the users a bit more flexibility in that operation choice.", "tokens": [467, 311, 445, 733, 295, 2902, 264, 5022, 257, 857, 544, 12635, 294, 300, 6916, 3922, 13], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 284, "seek": 106260, "start": 1081.8799999999999, "end": 1082.8799999999999, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 285, "seek": 106260, "start": 1082.8799999999999, "end": 1088.6, "text": " So I have one more, so Tom will set up while we're in the last session, but I have one", "tokens": [407, 286, 362, 472, 544, 11, 370, 5041, 486, 992, 493, 1339, 321, 434, 294, 264, 1036, 5481, 11, 457, 286, 362, 472], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 286, "seek": 106260, "start": 1088.6, "end": 1089.6, "text": " more.", "tokens": [544, 13], "temperature": 0.0, "avg_logprob": -0.26409957755325186, "compression_ratio": 1.6884615384615385, "no_speech_prob": 5.045246143708937e-05}, {"id": 287, "seek": 108960, "start": 1089.6, "end": 1092.6799999999998, "text": " So I'm going to write for your performance numbers, because 50% latency loss I expect,", "tokens": [407, 286, 478, 516, 281, 2464, 337, 428, 3389, 3547, 11, 570, 2625, 4, 27043, 4470, 286, 2066, 11], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 288, "seek": 108960, "start": 1092.6799999999998, "end": 1096.1599999999999, "text": " but then three and a half times gain in performance, something I didn't expect.", "tokens": [457, 550, 1045, 293, 257, 1922, 1413, 6052, 294, 3389, 11, 746, 286, 994, 380, 2066, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 289, "seek": 108960, "start": 1096.1599999999999, "end": 1099.1599999999999, "text": " Can you say why that is, or how well it keeps them consistent?", "tokens": [1664, 291, 584, 983, 300, 307, 11, 420, 577, 731, 309, 5965, 552, 8398, 30], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 290, "seek": 108960, "start": 1099.1599999999999, "end": 1100.1599999999999, "text": " It's actually consistent.", "tokens": [467, 311, 767, 8398, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 291, "seek": 108960, "start": 1100.1599999999999, "end": 1101.1599999999999, "text": " I mean, maybe I missed that.", "tokens": [286, 914, 11, 1310, 286, 6721, 300, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 292, "seek": 108960, "start": 1101.1599999999999, "end": 1102.1599999999999, "text": " Yeah, of course you don't see the slide anymore.", "tokens": [865, 11, 295, 1164, 291, 500, 380, 536, 264, 4137, 3602, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 293, "seek": 108960, "start": 1102.1599999999999, "end": 1103.1599999999999, "text": " Oh, that's a good slide, yes.", "tokens": [876, 11, 300, 311, 257, 665, 4137, 11, 2086, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 294, "seek": 108960, "start": 1103.1599999999999, "end": 1104.1599999999999, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 295, "seek": 108960, "start": 1104.1599999999999, "end": 1105.1599999999999, "text": " Great.", "tokens": [3769, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 296, "seek": 108960, "start": 1105.1599999999999, "end": 1106.1599999999999, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 297, "seek": 108960, "start": 1106.1599999999999, "end": 1108.1599999999999, "text": " So the question is about why it's so fast.", "tokens": [407, 264, 1168, 307, 466, 983, 309, 311, 370, 2370, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 298, "seek": 108960, "start": 1108.1599999999999, "end": 1109.1599999999999, "text": " Unfortunately, it was a consistency slide, but I think I missed it, but thank you.", "tokens": [8590, 11, 309, 390, 257, 14416, 4137, 11, 457, 286, 519, 286, 6721, 309, 11, 457, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 299, "seek": 108960, "start": 1109.1599999999999, "end": 1110.1599999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 300, "seek": 108960, "start": 1110.1599999999999, "end": 1111.1599999999999, "text": " I kind of won.", "tokens": [286, 733, 295, 1582, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 301, "seek": 108960, "start": 1111.1599999999999, "end": 1112.1599999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.4814530355067341, "compression_ratio": 1.670846394984326, "no_speech_prob": 0.001343821524642408}, {"id": 302, "seek": 111216, "start": 1112.16, "end": 1123.68, "text": " Even the slides are confidential now, but yeah, slides are on there for some pitch.", "tokens": [2754, 264, 9788, 366, 27054, 586, 11, 457, 1338, 11, 9788, 366, 322, 456, 337, 512, 7293, 13], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 303, "seek": 111216, "start": 1123.68, "end": 1124.68, "text": " One minute, second question.", "tokens": [1485, 3456, 11, 1150, 1168, 13], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 304, "seek": 111216, "start": 1124.68, "end": 1125.68, "text": " Otherwise.", "tokens": [10328, 13], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 305, "seek": 111216, "start": 1125.68, "end": 1126.68, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 306, "seek": 111216, "start": 1126.68, "end": 1131.68, "text": " So one of the first slides, when you get an example of a typical architecture, there", "tokens": [407, 472, 295, 264, 700, 9788, 11, 562, 291, 483, 364, 1365, 295, 257, 7476, 9482, 11, 456], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 307, "seek": 111216, "start": 1131.68, "end": 1132.68, "text": " were like simple types.", "tokens": [645, 411, 2199, 3467, 13], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 308, "seek": 111216, "start": 1132.68, "end": 1133.68, "text": " Mm-hmm.", "tokens": [8266, 12, 10250, 13], "temperature": 0.0, "avg_logprob": -0.6066239048057879, "compression_ratio": 1.4470588235294117, "no_speech_prob": 0.00031434660195373}, {"id": 309, "seek": 113368, "start": 1133.68, "end": 1158.3200000000002, "text": " Yeah, so primarily you can replace ETD with LSKV at the moment, if you took the clusters", "tokens": [865, 11, 370, 10029, 291, 393, 7406, 36953, 35, 365, 36657, 42, 53, 412, 264, 1623, 11, 498, 291, 1890, 264, 23313], "temperature": 0.0, "avg_logprob": -0.39921971584888216, "compression_ratio": 1.2537313432835822, "no_speech_prob": 0.00023409970162902027}, {"id": 310, "seek": 113368, "start": 1158.3200000000002, "end": 1163.0800000000002, "text": " and swap them, because the ETD API is still there, your things will still work.", "tokens": [293, 18135, 552, 11, 570, 264, 36953, 35, 9362, 307, 920, 456, 11, 428, 721, 486, 920, 589, 13], "temperature": 0.0, "avg_logprob": -0.39921971584888216, "compression_ratio": 1.2537313432835822, "no_speech_prob": 0.00023409970162902027}, {"id": 311, "seek": 116308, "start": 1163.08, "end": 1166.08, "text": " If you wanted to take advantage of the extra things like the receipts for the proxies", "tokens": [759, 291, 1415, 281, 747, 5002, 295, 264, 2857, 721, 411, 264, 2268, 48908, 337, 264, 447, 87, 530], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 312, "seek": 116308, "start": 1166.08, "end": 1169.8799999999999, "text": " and things, you would need to add some logic into your proxy or into your client's fave", "tokens": [293, 721, 11, 291, 576, 643, 281, 909, 512, 9952, 666, 428, 29690, 420, 666, 428, 6423, 311, 283, 946], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 313, "seek": 116308, "start": 1169.8799999999999, "end": 1170.8799999999999, "text": " route.", "tokens": [7955, 13], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 314, "seek": 116308, "start": 1170.8799999999999, "end": 1176.8799999999999, "text": " There are, I think, apps that support the specificity support as well.", "tokens": [821, 366, 11, 286, 519, 11, 7733, 300, 1406, 264, 2685, 507, 1406, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 315, "seek": 116308, "start": 1176.8799999999999, "end": 1181.36, "text": " No, there's not currently apps that support those receipts and extra bits at the moment.", "tokens": [883, 11, 456, 311, 406, 4362, 7733, 300, 1406, 729, 2268, 48908, 293, 2857, 9239, 412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 316, "seek": 116308, "start": 1181.36, "end": 1183.6399999999999, "text": " That's, we haven't got to add a bit.", "tokens": [663, 311, 11, 321, 2378, 380, 658, 281, 909, 257, 857, 13], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 317, "seek": 116308, "start": 1183.6399999999999, "end": 1186.6799999999998, "text": " It's just on the data store focus at the moment.", "tokens": [467, 311, 445, 322, 264, 1412, 3531, 1879, 412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 318, "seek": 116308, "start": 1186.6799999999998, "end": 1187.6799999999998, "text": " Cool.", "tokens": [8561, 13], "temperature": 0.0, "avg_logprob": -0.32537542978922523, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.00028946209931746125}, {"id": 319, "seek": 118768, "start": 1187.68, "end": 1200.5600000000002, "text": " All right.", "tokens": [50364, 1057, 558, 13, 51008], "temperature": 1.0, "avg_logprob": -1.6202300389607747, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.0007671127677895129}], "language": "en"}