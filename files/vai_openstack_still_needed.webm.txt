[00:00.000 --> 00:12.000]  Thank you for coming, first and quick introduction, my name is Thierry Thaïd, I've been involved
[00:12.000 --> 00:17.000]  in a software and software project for the last three years, and today I'm working on
[00:17.000 --> 00:21.000]  a software and software project. I'm also the general manager for the Open Infrastructure
[00:21.000 --> 00:27.000]  Foundation, which is the foundation that hosts OpenStack and Curator projects in OLC.
[00:27.000 --> 00:34.000]  So I'm here as the vice-chair of the OpenSoft Initiative as the next project, and today I
[00:34.000 --> 00:40.000]  wanted to talk to you about OpenStack and its relevance today, because a lot of people
[00:40.000 --> 00:46.000]  are saying that OpenStack is dead. I mean, it's a fair question, right? It's been around
[00:46.000 --> 00:55.000]  for 13 years and nobody has much anymore and less than you mentioned, so I mean, is it
[00:55.000 --> 01:02.000]  dead? It could be, maybe, you know, nobody is using it anymore and nobody cares. So let's
[01:02.000 --> 01:09.000]  look at the data. So OpenStack, according to our latest user survey that was run in
[01:09.000 --> 01:16.000]  2022, is run over a footprint of more than 40 million CPU cores of 15 hours. So that's
[01:16.000 --> 01:23.000]  a massive footprint. There's a lot of usage of OpenStack and a lot more people getting
[01:23.000 --> 01:29.000]  comfortable mentioning it. It's actually increased from 25 million to 40 million
[01:29.000 --> 01:37.000]  around the course of between 2021 and 2022. So it grew between 25 to 40 million CPU cores
[01:37.000 --> 01:44.000]  in our user survey reports between 2021 and 2022. It's happening in all verticals, so
[01:44.000 --> 01:54.000]  you can see the traditional OpenStack strongholds. It was originally formed by a public cloud
[01:54.000 --> 02:00.000]  company and a research institution. So on the public cloud side, it's still very strong
[02:00.000 --> 02:07.000]  with workspace being involved, but also OVH Cloud or Infomaniac or Deutsche Telecom or
[02:07.000 --> 02:13.000]  Leroy. All of those companies running OpenStack based public clouds. It's also strong in the
[02:13.000 --> 02:20.000]  research area where it started at NASA, but now it's used at CERN, it's used at Harvard,
[02:20.000 --> 02:25.000]  it's used at MIT, it's used at the European Center for Medium Weather Forecast, which
[02:25.000 --> 02:30.000]  right now has hold up, and basically that's one of the weather forecasts here. So all of
[02:30.000 --> 02:41.000]  those research institutions that have developed for public cloud, it's also strong in the
[02:41.000 --> 02:47.000]  telecom industry. It's well known that OpenStack is used there. Nine out of the ten telecom
[02:47.000 --> 02:53.000]  companies are actually using OpenStack as their back-end for handling everyday calls.
[02:53.000 --> 02:58.000]  It's also strong in retail and e-commerce with the largest company in the world, Walmart,
[02:58.000 --> 03:05.000]  still using it. Financial services with banks like Société Générale or Financial Services
[03:05.000 --> 03:12.000]  like PayPal or China Union Bank. It's strong in energy, transportation, government manufacturing,
[03:12.000 --> 03:18.000]  web entertainment with one-on-one brands, Comcast, Salesforce, Adobe, Bloomberg,
[03:19.000 --> 03:35.000]  all the games, game servers, it's a lot of usage. It's also that those users are actually
[03:35.000 --> 03:41.000]  increasing their usage. We used to give stickers to companies that would reach 100,000 CPU
[03:41.000 --> 03:46.000]  calls, and now we have to create a new sticker because a bunch of them are actually more
[03:46.000 --> 03:52.000]  than one billion CPU calls, including China Mobile and China Unicom, which are the two
[03:52.000 --> 04:00.000]  cell-phone mobile companies in China. So that's providing basically all Chinese citizens
[04:00.000 --> 04:08.000]  with their users. So it definitely has usage. So why are people saying it's dead? It may
[04:08.000 --> 04:15.000]  be, you know, it's still working, but it's dead inside, and nobody's really developing
[04:15.000 --> 04:20.000]  it anymore, and has no development activity, so it moves more like it's only me or something.
[04:20.000 --> 04:26.000]  It's not dead, but it's almost dead. And if you look at activity, development activity,
[04:26.000 --> 04:32.000]  you have to compare with very well-known, very active projects like Kubernetes for example.
[04:32.000 --> 04:37.000]  Kubernetes is a massive, open collaboration, and I'm sure everyone in this room has heard
[04:37.000 --> 04:42.000]  of Kubernetes, and they have a very large, it's one of the most active business projects
[04:42.000 --> 04:49.000]  in the world. It has more than 33,000 Internet public requests, I mean, reviewed by Uniman
[04:49.000 --> 04:56.000]  and merged into the code base over the last year. It's more like one of our changed
[04:56.000 --> 05:01.000]  projects today, which is really massive. And if we try to see how OpenStack compares
[05:01.000 --> 05:07.000]  with that, OpenStack in 2022 was actually 29,000 year changes merged, the same thing
[05:07.000 --> 05:14.000]  for the reviewed by Uniman, and then merged into the code. And so it's definitely the
[05:14.000 --> 05:20.000]  same ballpark. It's definitely the same level of activity. Definitely one of the three most
[05:20.000 --> 05:26.000]  active open source projects out there in terms of development activity, like with the
[05:26.000 --> 05:35.000]  Linux kernel and Chromium. So it's not dead from the development perspective either.
[05:35.000 --> 05:39.000]  So why are people saying it's dead? I used to think it's because they just didn't like
[05:39.000 --> 05:47.000]  us. They just wanted us to feel bad and get up in the morning. But then I started thinking,
[05:47.000 --> 05:51.000]  like, maybe there's something else. Maybe there is a deeper reason why people think
[05:51.000 --> 05:58.000]  about OpenStack is dead. But then we did think about it. So why are people thinking of
[05:58.000 --> 06:03.000]  OpenStack is dead? We need to take a step back and look at OpenStack is strange. We need
[06:03.000 --> 06:09.000]  to answer that question. So let's rewind back to 2010. It might sound like yesterday,
[06:09.000 --> 06:16.000]  as for all those people, young people, it will be very, very near.
[06:16.000 --> 06:42.000]  So it might sound like yesterday, but from an open source perspective, it's actually
[06:42.000 --> 06:48.000]  a long time. Back in 2010, Open Source and the open source initiative has been there
[06:48.000 --> 06:55.000]  for 12 years. And 12 years have passed since OpenStack was created. If you look at popular
[06:55.000 --> 07:01.000]  projects, Firefox was eight years old when OpenStack was created. Ubuntu was six years
[07:01.000 --> 07:07.000]  old. Git was five years old. Android was only two and a half years old. So it's really
[07:07.000 --> 07:12.000]  the middle ages of Open Source. And Open Source was very successful back then. But we didn't
[07:12.000 --> 07:19.000]  have that much open source options for infrastructure. The infrastructure market was cornered by proprietary
[07:19.000 --> 07:25.000]  software. It was VMware on the private side and Amazon Web Services on the public side,
[07:25.000 --> 07:31.000]  which is no option there. And that's what OpenStack was created. We created an open source
[07:31.000 --> 07:37.000]  solution for providing infrastructure to power clouds of all sizes, public clouds and private
[07:37.000 --> 07:44.000]  clouds. It was the first solution to try to be a bit universal. And so the first six
[07:44.000 --> 07:50.000]  years of OpenStack was famously created by, like I said, Nova, which is the compute, the
[07:50.000 --> 07:57.000]  VMware as a service component that came out of NASA. So we've researched private cloud
[07:57.000 --> 08:03.000]  systems, baked into it, and Swift, which is an object storage component that came from
[08:03.000 --> 08:09.000]  a white space with all the public cloud providers. It's how we set the requirements from both
[08:09.000 --> 08:16.000]  areas just online. And then people got very excited. It was called the Linux of the
[08:16.000 --> 08:23.000]  data center. It was called the technology to end old technology. So you ended up with
[08:23.000 --> 08:28.000]  like startups everywhere, trying to make money, going to the gold mine, and trying to say,
[08:28.000 --> 08:33.000]  oh, you can get involved with OpenStack. And then that's when we had more than 100,000
[08:33.000 --> 08:38.000]  changes per year. So like three times more active than Kubernetes is today. It was like
[08:38.000 --> 08:43.000]  crazy to think about it. Everyone wanted to be a part of it. Everyone wanted their use
[08:43.000 --> 08:48.000]  case. Everyone wanted their product to be integrated with it. And so that created a lot of
[08:48.000 --> 08:52.000]  scope creep because we basically extended to solve all of those, all of that demands.
[08:52.000 --> 08:57.000]  Really hard to say no if you are not going to be developed open source product. People
[08:57.000 --> 09:03.000]  want to give you code and why would you reject it? So in the end, that resulted in a lot of
[09:03.000 --> 09:08.000]  scope creep, especially in areas where OpenStack was not as strong like orchestration, for
[09:08.000 --> 09:17.000]  example. And that's when we had this question, like who is the OpenStack user? Is it the
[09:17.000 --> 09:24.000]  people that actually choose to deploy, install it, operate it? Is it the people that consume
[09:24.000 --> 09:29.000]  the cloud APIs? Is it the end user? Is it the person that uses the consumer? And that
[09:29.000 --> 09:36.000]  tension between the two was really difficult to solve from an audience perspective. How
[09:36.000 --> 09:43.000]  do you present it? That's when Kubernetes appeared. Kubernetes appeared mid-2014, moved
[09:44.000 --> 09:53.000]  to open development around 2015. And it really brought for us a welcome clarification. Because
[09:53.000 --> 10:00.000]  to understand how it helped us, we need to take a step back and look at how you provide
[10:00.000 --> 10:05.000]  applications. Like 20 years ago, you would just procure some physical hardware. And as
[10:05.000 --> 10:11.000]  an application developer, as a developer, you would install the operating system, your
[10:11.000 --> 10:15.000]  dependencies, and your application on top of that. But that was a bit inconvenient. So
[10:15.000 --> 10:20.000]  we added layers. The first layer that was added, one of these devos, is hardware
[10:20.000 --> 10:25.000]  actualization. Basically, abstracting the server on your application is running on from
[10:25.000 --> 10:31.000]  the physical hardware that runs on it. And then we added cloud APIs, basically allowing
[10:31.000 --> 10:37.000]  to programmatically access those virtualized resources. And then another layer, which is
[10:37.000 --> 10:42.000]  application deployment APIs, basically what Kubernetes does, which is providing higher
[10:42.000 --> 10:48.000]  level privilege to deploy complex applications on top of that programmable infrastructure.
[10:48.000 --> 10:53.000]  So you have this programmable infrastructure on one side, and cloud native cloud aware
[10:53.000 --> 10:58.000]  applications being deployed on top of that. It's actually two different types of
[10:58.000 --> 11:03.000]  populations, people that provide infrastructure on one end, and people that write applications
[11:03.000 --> 11:08.000]  and deploy them at the top. And Kubernetes really helped us having that layer between
[11:08.000 --> 11:16.000]  those two different, very different things. And so, yes, the advent of Kubernetes really
[11:16.000 --> 11:21.000]  provided this welcome clarification about this interface layer between infrastructure
[11:21.000 --> 11:28.000]  providers and infrastructure consumers. And if you are an infrastructure consumer, developers,
[11:28.000 --> 11:34.000]  employers, infrastructure is a given. It's someone else's job. You don't have to care
[11:34.000 --> 11:40.000]  about it. And so, they no longer talk to OpenStack directly. OpenStack is irrelevant to them.
[11:40.000 --> 11:47.000]  OpenStack is invisible to them. So OpenStack is dead to them. It's not dead. It just grew
[11:47.000 --> 11:55.000]  up. It found its purpose in life. And it found its user. So, in the end, its users are the
[11:55.000 --> 12:00.000]  people that are providing infrastructure. Only had appropriate solutions before, and now
[12:00.000 --> 12:07.000]  can rely on open source solutions to do that. It's a role that is very separate from the
[12:07.000 --> 12:13.000]  traditional developers. It's a new class of actors. And that's recognizing that it's a
[12:13.000 --> 12:19.000]  new group of people. That's why the foundation, the OpenStack Foundation transitioned to
[12:19.000 --> 12:23.000]  becoming the opening infrastructure foundation. Because there is this group of people that
[12:23.000 --> 12:27.000]  want to provide infrastructure using open source solutions. They need more than just
[12:27.000 --> 12:32.000]  OpenStack. They need all the help they can get. So, that's why we formed the OpenInfra
[12:32.000 --> 12:37.000]  Foundation, and we have more than OpenStack now. We also have Kata containers, or Zoo,
[12:37.000 --> 12:44.000]  or Starling eggs, or other projects. All about providing infrastructure for open source
[12:44.000 --> 12:52.000]  solutions for open source providers. Back to OpenStack. If OpenStack is not dead, what
[12:52.000 --> 12:58.000]  makes it relevant for the next year? Why would you care? Why should we just all use
[12:58.000 --> 13:03.000]  public peer for the hyperscaler of public clouds and not care about infrastructure?
[13:03.000 --> 13:10.000]  I mean, hyperscalers are not going away. Amazon will be there tomorrow. The initial goal of
[13:10.000 --> 13:17.000]  OpenStack ends all the Amazons. It's not going to happen, it's fine. But we think it's
[13:17.000 --> 13:22.000]  important that there is open source solutions for providing infrastructure. There is an
[13:22.000 --> 13:33.000]  option there. The reason for that is that there is this combination of solutions that
[13:33.000 --> 13:38.000]  you can use. Basically, Linux and the organic system layer, OpenStack and the cloud
[13:38.000 --> 13:43.000]  APIs layer, combined with Kubernetes and the application deployment layer. And that
[13:43.000 --> 13:49.000]  forms an end-to-end solution for providing infrastructure using purely open source
[13:49.000 --> 13:54.000]  software. That's what we call the log stack. So, Linux, OpenStack, Kubernetes,
[13:54.000 --> 13:59.000]  and infrastructure. End-to-end solution to provide basic infrastructure to run cloud
[13:59.000 --> 14:04.000]  native orchestration on and for public and for private cloud. It's a very popular
[14:04.000 --> 14:10.000]  combination to use all of them together. But why would you use it? Why would you go
[14:10.000 --> 14:17.000]  through the hustle of running your own? There are like three main reasons to do that.
[14:17.000 --> 14:23.000]  That's the cost, compliance and capabilities. It's a framework that's been there for a while.
[14:23.000 --> 14:30.000]  We first talked about it in 2017. But it's more relevant than ever today. So, for example,
[14:30.000 --> 14:36.000]  if you look at cost, there was this study by Amazon over its last year about the cost
[14:36.000 --> 14:43.000]  of cloud. And that's the idea of venture executives. They are not financial business.
[14:43.000 --> 14:49.000]  They looked at the cost of operating all those startups on top of Amazon Web Services
[14:49.000 --> 14:56.000]  and Microsoft. And they found that when those companies would repatriate their
[14:56.000 --> 15:02.000]  workloads locally, they would save half to two thirds of the cost. So, they would get
[15:02.000 --> 15:09.000]  from 50 to 66 percent cost reduction by repatriating their workloads in the private
[15:09.000 --> 15:17.000]  cloud. And the reason for that is once you get a stable workload, once you get a stable
[15:17.000 --> 15:22.000]  workload, public infrastructure is great to handle the elasticity, the growth, all of
[15:22.000 --> 15:27.000]  those things. But once you have a stable workload, it's an exceptionally costly way of
[15:27.000 --> 15:32.000]  finding infrastructure. And so, the ideal model is a hybrid model where you use private
[15:32.000 --> 15:38.000]  infrastructure for the base and public infrastructure for the spikes.
[15:38.000 --> 15:44.000]  Compliance. I'll try to go fast. So, digital service IT is a big topic. There is a full
[15:44.000 --> 15:50.000]  development service cloud this afternoon. So, you should go there if you like that you
[15:50.000 --> 15:55.000]  will be running right now. So, it drives a lot of open stack adoption, especially in
[15:55.000 --> 16:00.000]  South-East Asia. Not in the U.S. I don't really care that much. But for open stack, it's
[16:00.000 --> 16:04.000]  clearly where the growth is. All the research institutions need to have their own thing.
[16:04.000 --> 16:10.000]  All the EU countries want to have solutions that are local. And that drives a lot of
[16:10.000 --> 16:17.000]  adoption today. Most of that 25 to 40 million job is probably linked to digital service.
[16:17.000 --> 16:24.000]  And finally, there is this capability state. You would think that cloud is a pretty defined
[16:24.000 --> 16:30.000]  space by now. It's been around for a while. But there are new use cases. And those new
[16:30.000 --> 16:35.000]  use cases are enabled by the fact that you have a solution to experiment and play with.
[16:35.000 --> 16:41.000]  Like, for example, we have this company called OneCode that is running game servers in a small
[16:41.000 --> 16:47.000]  island in the middle of the Pacific Ocean that sits on top of Internet cables. Because
[16:47.000 --> 16:52.000]  what they want to provide is equal latency to players in the U.S., in China, in Japan,
[16:52.000 --> 16:58.000]  and in Australia, which is quite a corner case, I guess. But they couldn't wait until...
[16:58.000 --> 17:05.000]  And they, like, post-game e-sports tournaments. They could have waited for Amazon Web Services
[17:05.000 --> 17:11.000]  to set up the data center there, but it probably would never have happened. So clearly, one
[17:11.000 --> 17:16.000]  use case that could not be served without an open source option out there. Closer up to
[17:16.000 --> 17:23.000]  here, Exion is a French subsidiary of ETF for French people in the room. That's where most
[17:23.000 --> 17:29.000]  of our electricity is coming from. And so they had those super calculators that are used
[17:29.000 --> 17:34.000]  for nuclear plant simulation that are regularly decommissioned because clearly they need more
[17:34.000 --> 17:41.000]  power to simulate what's happening in there. And what they used to do is they would just
[17:41.000 --> 17:47.000]  put them to school. And what that guy at Exion decided to do is to actually repurpose that
[17:47.000 --> 17:56.000]  into high-density, super-converged clouds that basically use the resources that are within
[17:56.000 --> 18:02.000]  those super calculators. And they are running HPC as a service, like workloads, with an
[18:02.000 --> 18:10.000]  high environmental impact. Because since they got the servers for free from climate impact,
[18:10.000 --> 18:16.000]  they're also tracking exactly the mixed energy mix of your workloads based on when you run
[18:16.000 --> 18:22.000]  them so that they track the environmental impact of your workloads as well. And finally,
[18:22.000 --> 18:29.000]  LeafCloud is a public cloud based in Amsterdam where they actually distribute the compute
[18:29.000 --> 18:36.000]  servers all over the city. And those are used to heat the water for those buildings.
[18:36.000 --> 18:45.000]  Swimming pools, apartment complexes, all of them being served by those servers. So clearly,
[18:45.000 --> 18:50.000]  again, a corner case because Amsterdam has those black fiber things between those buildings
[18:50.000 --> 18:55.000]  that actually make that possible. But you end up with the data center that's really the
[18:55.000 --> 19:00.000]  most energy efficiency in the world just by doing that. And so those use cases, those
[19:00.000 --> 19:07.000]  specific things, this kind of research innovation is enabled by opening infrastructure. So I
[19:07.000 --> 19:13.000]  think it's simple. In conclusion, OpenStack is not dead. It has a massive user footprint.
[19:13.000 --> 19:17.000]  It's growing year over year. It's still one of the most active open source projects in
[19:17.000 --> 19:24.000]  the world. But it might be dead to you. It's someone else's job to provide infrastructure.
[19:24.000 --> 19:33.000]  It's someone else's job to care. And it's fine. It will not take over Amazon Web Services.
[19:33.000 --> 19:40.000]  Andrea still has a job. It will not replace every technology going forward. It will not
[19:40.000 --> 19:46.000]  be the technology that ends all technology. But it is a necessary component in the infrastructure
[19:46.000 --> 19:51.000]  to provide investment. It's a tool for enabling hybrid usage. It's a tool for use cases that
[19:51.000 --> 19:56.000]  are not served by hyperscale. It's a tool for workloads which can't be served out of
[19:56.000 --> 20:02.000]  U.S. based servers due to digital services. So for costs, for compliance, for catalytic
[20:02.000 --> 20:07.000]  reasons, OpenStack is here to stay for the next decade. Thank you.
[20:07.000 --> 20:10.000]  Thank you.
[20:20.000 --> 20:27.000]  Obviously, six years ago I went to a conference that was about using OpenStack in scientific
[20:27.000 --> 20:34.000]  and in large data analysis. The thing I came away from that conference was that OpenStack
[20:34.000 --> 20:39.000]  was really complicated to set up. And your only hope of getting something working was the
[20:39.000 --> 20:45.000]  higher-end app to do it for you. So is that, I mean, is that kind of, I mean, is that
[20:45.000 --> 20:48.000]  the part because of the scope, I think, that now that you've focused on is kind of easy
[20:48.000 --> 20:50.000]  to set up, or can you take a comment on that?
[20:50.000 --> 20:55.000]  So the question is, OpenStack has this information of being very hard to set up, and
[20:55.000 --> 21:00.000]  this message that you have to hire somebody who will do it for you, is it still the case
[21:00.000 --> 21:04.000]  and what's the minimum cost?
[21:04.000 --> 21:10.000]  So I would say, I mean, it's still a complex job to run infrastructure, like for various
[21:10.000 --> 21:18.000]  reasons, mostly because of the 24-hour type service constraints, one of those things.
[21:18.000 --> 21:22.000]  But I would say that running OpenStack has gotten a lot easier, especially one of the
[21:22.000 --> 21:27.000]  big concerns, but not necessarily the scope, because you can just deploy a few services.
[21:27.000 --> 21:31.000]  And it wasn't really affecting that. And today, yes, there is less scope.
[21:31.000 --> 21:37.000]  We've focused on the main pieces. It was really more the upgrade cycle.
[21:37.000 --> 21:43.000]  If you wanted to keep up to date with the release that were produced, it created a lot of
[21:43.000 --> 21:47.000]  tension because every six months you would have to upgrade your infrastructure if you
[21:47.000 --> 21:53.000]  wanted to do that. And so the work was done to really make those upgrades a lot more
[21:53.000 --> 22:02.000]  streamlined. There is a lot less breaking changes happening, because the pace of, I would
[22:02.000 --> 22:07.000]  say, new future development is still going on in the maintenance and maintenance mode.
[22:07.000 --> 22:12.000]  I believe in new hardware functions, all of those. It's more like a driver space than
[22:12.000 --> 22:16.000]  a course space. So you see a lot less disruption when you do the upgrade.
[22:16.000 --> 22:23.000]  It's also that the upgrades are much more tested. We have solutions for distributions
[22:23.000 --> 22:29.000]  that can be used, that handle that, that are pretty nice, not necessarily solved by one
[22:29.000 --> 22:36.000]  of the players in the OpenStack space that you can rely on to actually do the updates.
[22:36.000 --> 22:41.000]  So it's no longer that difficult, but it's still a job in itself.
[22:41.000 --> 22:47.000]  It's still like something that you have to talk about. It's an interesting thing to think about.
[22:47.000 --> 22:56.000]  I'm always amazed when, so the use of guys are running this gigantic OpenStack to power
[22:56.000 --> 23:00.000]  game servers and they are doing that to the best team of the team.
[23:00.000 --> 23:06.000]  It's not curable not to buy yourself a new crash, but it's still doable with a relatively
[23:06.000 --> 23:14.000]  small team. And I think no big guys, they have a very large, they have a very large team.
[23:14.000 --> 23:22.000]  Well, it's like, it's not, it's not completely out of reach.
[23:22.000 --> 23:27.000]  The smaller it is, the less constrained there is from the users.
[23:27.000 --> 23:46.000]  Do you think the fact that you've got 29,000 full requests over quite a number of projects
[23:46.000 --> 23:51.000]  where, you know, you've got, for example, Nova, Keystone, but you've also got some more skill
[23:51.000 --> 23:57.000]  projects versus, sorry, Kubernetes, which has like one key component that everyone contributes
[23:57.000 --> 24:03.000]  to, based towards this perception of, you know, things don't move as fast as Kubernetes?
[24:03.000 --> 24:10.000]  No, I don't think it's, it's the fact that OpenStack is more of a collection of services
[24:10.000 --> 24:17.000]  versus Kubernetes, which is much more in Monolith, could play to the, like, the scale
[24:17.000 --> 24:21.000]  that people, people see as less active.
[24:21.000 --> 24:25.000]  I think there are a lot of reasons. We are not using GitHub.
[24:25.000 --> 24:30.000]  We are using our own, we software tools based on Garrett and Zool.
[24:30.000 --> 24:36.000]  And so, there is a bit of a visibility that is right there, because we are not appealing
[24:36.000 --> 24:40.000]  on those, like, reports, gender reports that we are using.
[24:40.000 --> 24:46.000]  There is this perception that all of this is happening in GitHub and everything else is not really existing.
[24:46.000 --> 24:49.000]  So all of those things contribute to it.
[24:49.000 --> 24:55.000]  The fact that it's a Monolith versus a set of projects, I don't think that plays that matter,
[24:55.000 --> 25:00.000]  because if you look at the amount of development that's happening on those French services,
[25:00.000 --> 25:07.000]  it's not that much. It's sort of the core of the developments we have in, you know, the I1A.
[25:07.000 --> 25:12.000]  And so, it's, I would say it's not, yeah.
[25:13.000 --> 25:14.000]  Thank you.
[25:14.000 --> 25:16.000]  I'll take questions outside.
