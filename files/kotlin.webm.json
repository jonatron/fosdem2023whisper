{"text": " So, do you have an answer to that question? Okay, don't worry, I have some answers. And so we'll start with the wrong answers, of course. Because Kotlin is cool, because of the hype, because we love to hate JavaScript. First JavaScript was designed in just seven days, while Kotlin was designed in six years. It's not completely false, but I don't think it's super accurate, because JavaScript kept evolving and Kotlin as well, and JavaScript is still older than Kotlin, anyway. So what can we do on the web with Kotlin? I think it's important to answer that question first, because, well, it's Kotlin.js, so it still has some JS inside. So can we do as much as we can do with JS? And so I want to show you a demo of that website, and hopefully the switch of the tabs will happen smoothly. Give me a second. Oh crap. Forgot to add internet. How in 20, 20, 30 people still forget to connect to internet, give me 10, 20 seconds to go. So this website has been done with Kotlin.js, so it's a place where you can play with data to use. That's the name of our company. And so it's about the data visualization. Some of you maybe know D3JS, who knows D3JS? Okay, so basically data to use, I mean, there's an open source repository named data to use, same as the company. This is D3JS, but for Kotlin, and it doesn't compile just for JavaScript, but also for other platforms that Kotlin supports, you will see which platforms Kotlin support. And so you can do this kind of thing that look like those. So this, I wanted to show you a few examples, dynamic example, because this was just a web page, and just a web page is not very interesting nowadays. So this is entirely made with Kotlin.js, please. What is happening? Should respond to, yeah, so you see it's reacting with forces, can fix a big one, we'd have a better effect. So this was done with Kotlin.js with the calculations and the rendering. There's also this one, rip curtains. Didn't like switching density for monitors, but now it's smooth again. Okay, really uncomfortable to have two different screens. The one, same, but with some color. Okay, anyway, now I also want to show you something built on top of data to use, which is Charles's Katie. Unfortunately, Charles's Katie is not open source, but the examples are. I know we are for them, so it's a bit, how can I say, the team line sometimes, but yeah, this is the kind of thing, so it's a charting average, just basically with as little code as possible, we want to have a chart that makes sense with the right bounds, with the right zooming, and all these kind of things. There are also a lot of charts, but you will find them in the presentation. The links are clickable. I will share the link at the end. Okay, so what can we do on the web? A lot of complicated things, just like JavaScript, you can manipulate the DOM, go on canvas, write reliable and shareable business logic. There's no hard limit. And so now why, actual answers, why we did JavaScript or code.js for this, and other projects as well, sometimes I should say. So the first reason was safety and reliability, especially when working with multiple people over time. We don't need to transfer a lot of knowledge because it's already built into the code itself thanks to typing, for example, the types, like this is a number, this is a string, this is whatever object we have, maybe this is a duration. Duration is not just an integer or a long, it's a duration, so we know what we are dealing with, the language design, the concise syntax, because that's also something we like in JavaScript and we like a bit less in Java, for example, having a concise syntax is actually important, type safety, concelable async programming, also named coroutines, and other features in the language design, but also code sharing. So we can share what we want and we can have native interoperability with a platform, say at some point we want to make a mobile app, we can actually compile the same way all the native apps are made with the same code, granted that we are not using JavaScript or web-only APIs. And there are some APIs that work the same, for example, plus adding two numbers, it works on all platforms, and there are a lot of other things that work on all platforms, actually. So let's focus on code sharing first, because sharing is caring, right, that's what some people say. And so I want to answer which platforms does Kotlin run on or compile to, I should say, because Kotlin, in a way, unfortunately, but at the same time, it's so strange, is a compile language, which means that you might need to wait a bit before you can actually test your code. Yeah, so it compiles for the JVM, that means server, desktop, apps, libraries, JavaScript, browser, Node.js as well, Android, and whereas in what is within the Android runtime, which is kind of a JVM, but not really, and native, so kind of like C++, you can compile Kotlin for iOS, watchOS, I don't have an Apple watch, but you get it, macOS, CVOS, Linux, Windows, and also the Android NDK, which is kind of outside the Android runtime, the kind of JVM art, you know, you can also compile there, if you want, can be useful if you make a video game, for example. So basically Kotlin runs natively on almost all devices, at least devices where we run what we call apps, so maybe not a microcontroller, but if it's slightly more powerful, yes, but Kotlin is not all about Kotlin, actually, interoperability is a key thing in Kotlin, and so Kotlin has direct interoperability, which means that you don't have to use a special API where you pass a string for the name of the method and then the list of arguments, you just call it like it was made in Kotlin. So it has direct interoperability with Java, with JavaScript. Now with TypeScript as well, very recently, in the last release of Kotlin, a few weeks ago, Objective-C, and therefore Swift and C, but unfortunately there are quirks, because languages have specific design and sometimes it's hard to have the square fit into the square-ish, so it works both ways for most of the languages, but sometimes you are limited. Just want to be completely honest about that, for Java it works well, actually I should put Java in orange as well, because a few features now don't work supernaturally with Kotlin, you have to jump to slide hoops when it comes to async programming. If you do it the best way in Kotlin, you cannot apply that in Java, but you will be able to support all the results that you've got yourself. What direct interoperability means is that also you are not reliant on third-party plug-in updates, for example, it could be Cordova or Flutter, you are waiting for them to support the new release of something or that new standard in web, you don't need that in Kotlin, because you are still doing a native app, but just you don't have to write to duplicate the code for each platform, it's like you are doing JavaScript if you use it for the web, so in JavaScript, no, it doesn't need to compile for JavaScript. You can use native APIs like they were built in Kotlin, so calling new Kotlin code from Java, like it was built in Java, the same for Swift, same for JavaScript. Sometimes there are limitations, as I told you, but for most of the use cases, it works just like this and sometimes it's only a minor thing and you will find the answer on the internet. Kotlin nowadays is the most interoperable programming language, unlike C++, which doesn't compile for JavaScript, for example, and I know C++ was used for multi-platform libraries, even though I don't really want to deal with overflows on a daily basis, personally. And so back to that slide, now we look at safety and reliability, because, oh, okay, let's move on. So for me, it's reason number one. I don't know if it speaks to you, but your user might be in display. And so that's how JavaScript is like. It doesn't care. It's like it's on you, check whether you still have the wing. Missing both? Wing off? No problem. Let's try to fly it anyway. Let's try to run it anyway. That also applies to other programming languages like Python, Bash, all PHP, not PHP 7, but yeah, and basically languages that say, yeah, types, we don't need them or when you want. So on the other side, Kotlin is more like this, bolt required, no takeoff possible, wrong bolt type, no takeoff possible, expect the pilot seat but got an economic seat. No takeoff possible. So you don't have to fly the plane to realize that one wing wasn't attached properly or that you were missing the wheels for landing because you want to realize that before taking off. And that also means that compiling is not just about browsing the web while waiting. Compile languages mean less tests to write. You don't have to check whether the input is of the right kind. You only have to check for the values but not for like, someone gave me a horse but I was expecting an integer. So it can save you time. But not at the time you might expect. That's the quirk. Anyway, so what should we do on the web with Kotlin? Because in my opinion, it doesn't suite all use cases, a lot of them but not all. So first web apps, when I mean web apps, I mean like something where you are not just going to look at one page but something where you are going to do some interaction, say watch a video ad, oh no. Web pages with a lot of dynamic logic that can't move to server side. Kotlin might be a good alternative to do that. Because when you have a lot of logic, types and correctness is even more important. So you actually, personally I feel less stressed when I do complex logic with programming language that checks a lot of things for me. Anything that doesn't have to be less than 300 kilobytes. If you have video ads, you don't need to be less than 300 kilobytes. Otherwise, if it's a landing page, maybe it's not the best solution, maybe you want to generate your web page, maybe even with Kotlin code. But you don't really want to have a bundle compiled with Kotlin on your landing page. But anything further than a landing page, or if your landing page is heavy or all your users have a fast internet, you don't really care, network is cheap when you are lucky these days. So that's when you're lucky, think about it. You can generate HTML with Kotlin, as I told you, with Kotlin JVM, it's actually the simplest way to do it. But there's an API, Kotlin X.html that works on both JVM and JS. You can also do libraries for Kotlin consumers, complex libraries for TypeScript and JavaScript consumers also. This is a good fit for Kotlin. And now I want to talk about language design, because I told about Kotlin, but who of you have ever seen the syntax of Kotlin? Who hasn't? Yeah. Okay. Anyway. A lot of curious people in this room. So basically, if you want to have a variable, you can just write it like this. You see, we don't declare the type, because we don't need this obvious. It's an integer, 23, what else could it be? If you want to increment it like this, it won't compile, because it's an immutable reference, Val. As opposed to Val, variable, you can change the value like this, and it will increment. You have functions. You write the keyword from, and here if I pass, I don't know, first them to name, then it will have welcome back first them, a few years after. And we can actually put it on one line if you want, if it's short enough. So that's great for our conciseness. Sometimes you just want to give a name to a dumb operation, but you want it to be more clear in the code, and we spend more time reading code than writing code usually. You can also omit the type if it can be inferred from the expression after it. Only when it's a one-liner, even though you could have something that has some curly braces, it has to be like an entire expression. You cannot have multiple expressions or statements if you want to omit the types. You can make a class. This actually compiles. If you want to put something in it, you can add parenthesis. And now it's a data holder. Usually we write it like this for indentation, but it's not mandatory. It will still compile. It's not Python common. You can also add the data keyword. So the data keyword can come handy when you want to have the equals implementation based not on the identity of the object, but on the content. Say if you use a hash map, for example, then if you make a copy, but it's still exactly the same, somehow you make a copy in your program because it's complex, then the key will match. But if you don't use data and you still want that behavior, you have to implement or let the IDE implement the equals function. There's also hash code that speeds up dictionary operations. And there's two strings when you want to log the content. So data keyword, you just add this, and the compiler implements the thing. You can make it open. By default, they are not open, the classes, so you cannot subclass them because usually people didn't really want their class to be subclass, so yeah. And then you can have a subclass like this. Then this is how you can implement an interface and override a function. If it was comparable, if it was a class, you would have parenthesis next to it, but otherwise it's exactly the same syntax, same principle of inheritance. There's the handy to-do function when you want your code to compile, but you are not done yet. So if it actually runs that function, it will crash, but maybe you can see if the plane is able to take off. And then it's very easy to find back the to-do calls because you control or command click on to-do. It will take you to the declaration, and if you do it back at the declaration site, it will show you all the usages in your project. A few cool language tutorials, null safety, nullable types, and null pointer exception safe equals, so it's kind of type error when you try to add an integer, but it's not initialized. And for example, this doesn't compile because string is not nullable. If you want it to be nullable, you have to add the question mark here. And now this can compile. But this doesn't compile, again, because greeting might be null, and actually you set it to null. And even if you remove that, it still doesn't compile because you explicitly stated that the type was nullable. But this, with the question mark before the call, it becomes its name is safe call, and this compiles. If there's no value, if string is put to null, then you won't get null instead, or it will just skip the function call. You can also crash a program in case it wasn't null, so in this case, it will work fine because hello world is there. But if you add null, it compiles again, but it crashes at runtime. But you wanted it, right? This doesn't compile because the type is int, but it returns int question mark. But you can also use the Elvis operator. If you turn it 90 degrees, it looks a bit like Elvis haircut. And so when the first part is null, then you get the expression after. Don't overuse it, but it's quite cool for search cases. The equals, equals checks for equals, and doesn't check for identity, like in Java. So this is similar to this code in Java if you compile for the JBM. And if you add a triple equals, then it's comparing the identity. And in Java, that's a double equals. We think it makes more sense the way it's done in Kotlin. I think it's very similar to what's done in JavaScript, in a way. And if both values are null, it doesn't crash. It won't try to call equals on a null object. It will see, oh, both are null. Okay. One is null, one is not equal. Seems more intuitive when you say it like this, I think. Other things are properties. So val and var, if you put it in a class, those are properties. Otherwise, they are local properties if they are not in a class. And so they are similar to fields, but they also include getters and setters. And they can be delegated. You can Google for Kotlin delegated properties if you want to find out more. But basically, it helps you to not repeat the get and set on and on. So properties, these are properties. You can specify the type or not, then it infers whatever the expression is. This is a custom getter and setter. And if you type get or set in the ID, it will suggest you the right curly braces to make it work. And there's also extension functions, which are static methods, kind of like instance method when you call them, but you don't need to edit the class. So it works on any type, including integer, which is built in Kotlin, right, into whatever platform is behind. So this allows you to have ease even on any integer where the distinction is visible or imported. You can use it like this, three dot ease even, it works. I think I'm out of time. Maybe I have one extra minute. Okay, few seconds. I want to show higher order functions, so you can pass a function. And I guess some of you are familiar with lemdas. So higher order functions are functions that take lemdas. And in Kotlin, they can be in line. And so this is a lemda. This is a lemda, so it's just curly braces. And whenever you see curly braces, it's not just a function, it's a lemda. You can also check types, but you don't have to cast again, like you would in Java. And string templates, if you want to use a variable, you don't have to do concatenation. You just use dollar and put the name of the variable. Anyway, the entire content is here. I think I said the most important thing. You can flash that QR code and go on speakerdeck.com, my handle, and you will find the presentation with all the links, including some links if you want to get started if you never try Kotlin. Thank you. So we have time for one or two questions. And I'll ask the first question, which is for the next speaker. Are you here? Okay, so you don't have to move. Next question then. You raise your hand, I run to you with the mic. I can't dust it because it's dangerous. Okay, so you mentioned the Kotlin X HTML, right? So is that something like for CSS? I think there's like Kotlin X CSS for extensions also for JavaScript. Yeah, CSS, it's a bit of a complicated topic. There are multiple ways. You can do it the way you do with plain HTML and you have a link ref. But there's also some special support where you can compile a SAS into CSS. Or you can also write Kotlin that translates to CSS. But I think it's runtime CSS. I think the best way to answer the question will be to Google for Kotlin CSS. Because I don't have the perfect answer in my head. But yeah, there are some things about that. Another question? Thank you. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.16, "text": " So, do you have an answer to that question?", "tokens": [50364, 407, 11, 360, 291, 362, 364, 1867, 281, 300, 1168, 30, 50772], "temperature": 0.0, "avg_logprob": -0.3273976341126457, "compression_ratio": 1.3974358974358974, "no_speech_prob": 0.35349041223526}, {"id": 1, "seek": 0, "start": 8.16, "end": 12.6, "text": " Okay, don't worry, I have some answers.", "tokens": [50772, 1033, 11, 500, 380, 3292, 11, 286, 362, 512, 6338, 13, 50994], "temperature": 0.0, "avg_logprob": -0.3273976341126457, "compression_ratio": 1.3974358974358974, "no_speech_prob": 0.35349041223526}, {"id": 2, "seek": 0, "start": 12.6, "end": 16.080000000000002, "text": " And so we'll start with the wrong answers, of course.", "tokens": [50994, 400, 370, 321, 603, 722, 365, 264, 2085, 6338, 11, 295, 1164, 13, 51168], "temperature": 0.0, "avg_logprob": -0.3273976341126457, "compression_ratio": 1.3974358974358974, "no_speech_prob": 0.35349041223526}, {"id": 3, "seek": 0, "start": 16.080000000000002, "end": 25.52, "text": " Because Kotlin is cool, because of the hype, because we love to hate JavaScript.", "tokens": [51168, 1436, 30123, 5045, 307, 1627, 11, 570, 295, 264, 24144, 11, 570, 321, 959, 281, 4700, 15778, 13, 51640], "temperature": 0.0, "avg_logprob": -0.3273976341126457, "compression_ratio": 1.3974358974358974, "no_speech_prob": 0.35349041223526}, {"id": 4, "seek": 2552, "start": 25.52, "end": 31.4, "text": " First JavaScript was designed in just seven days, while Kotlin was designed in six years.", "tokens": [50364, 2386, 15778, 390, 4761, 294, 445, 3407, 1708, 11, 1339, 30123, 5045, 390, 4761, 294, 2309, 924, 13, 50658], "temperature": 0.0, "avg_logprob": -0.23190666865376594, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.14017480611801147}, {"id": 5, "seek": 2552, "start": 31.4, "end": 38.0, "text": " It's not completely false, but I don't think it's super accurate, because JavaScript kept", "tokens": [50658, 467, 311, 406, 2584, 7908, 11, 457, 286, 500, 380, 519, 309, 311, 1687, 8559, 11, 570, 15778, 4305, 50988], "temperature": 0.0, "avg_logprob": -0.23190666865376594, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.14017480611801147}, {"id": 6, "seek": 2552, "start": 38.0, "end": 44.44, "text": " evolving and Kotlin as well, and JavaScript is still older than Kotlin, anyway.", "tokens": [50988, 21085, 293, 30123, 5045, 382, 731, 11, 293, 15778, 307, 920, 4906, 813, 30123, 5045, 11, 4033, 13, 51310], "temperature": 0.0, "avg_logprob": -0.23190666865376594, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.14017480611801147}, {"id": 7, "seek": 2552, "start": 44.44, "end": 47.120000000000005, "text": " So what can we do on the web with Kotlin?", "tokens": [51310, 407, 437, 393, 321, 360, 322, 264, 3670, 365, 30123, 5045, 30, 51444], "temperature": 0.0, "avg_logprob": -0.23190666865376594, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.14017480611801147}, {"id": 8, "seek": 2552, "start": 47.120000000000005, "end": 53.08, "text": " I think it's important to answer that question first, because, well, it's Kotlin.js, so it", "tokens": [51444, 286, 519, 309, 311, 1021, 281, 1867, 300, 1168, 700, 11, 570, 11, 731, 11, 309, 311, 30123, 5045, 13, 25530, 11, 370, 309, 51742], "temperature": 0.0, "avg_logprob": -0.23190666865376594, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.14017480611801147}, {"id": 9, "seek": 5308, "start": 53.08, "end": 55.0, "text": " still has some JS inside.", "tokens": [50364, 920, 575, 512, 33063, 1854, 13, 50460], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 10, "seek": 5308, "start": 55.0, "end": 58.76, "text": " So can we do as much as we can do with JS?", "tokens": [50460, 407, 393, 321, 360, 382, 709, 382, 321, 393, 360, 365, 33063, 30, 50648], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 11, "seek": 5308, "start": 58.76, "end": 65.44, "text": " And so I want to show you a demo of that website, and hopefully the switch of the tabs will", "tokens": [50648, 400, 370, 286, 528, 281, 855, 291, 257, 10723, 295, 300, 3144, 11, 293, 4696, 264, 3679, 295, 264, 20743, 486, 50982], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 12, "seek": 5308, "start": 65.44, "end": 67.4, "text": " happen smoothly.", "tokens": [50982, 1051, 19565, 13, 51080], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 13, "seek": 5308, "start": 67.4, "end": 68.4, "text": " Give me a second.", "tokens": [51080, 5303, 385, 257, 1150, 13, 51130], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 14, "seek": 5308, "start": 68.4, "end": 69.4, "text": " Oh crap.", "tokens": [51130, 876, 12426, 13, 51180], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 15, "seek": 5308, "start": 69.4, "end": 72.4, "text": " Forgot to add internet.", "tokens": [51180, 1171, 13178, 281, 909, 4705, 13, 51330], "temperature": 0.0, "avg_logprob": -0.24930225006521564, "compression_ratio": 1.3734939759036144, "no_speech_prob": 0.07596682012081146}, {"id": 16, "seek": 7240, "start": 72.4, "end": 92.4, "text": " How in 20, 20, 30 people still forget to connect to internet, give me 10, 20 seconds to go.", "tokens": [50364, 1012, 294, 945, 11, 945, 11, 2217, 561, 920, 2870, 281, 1745, 281, 4705, 11, 976, 385, 1266, 11, 945, 3949, 281, 352, 13, 51364], "temperature": 0.0, "avg_logprob": -0.3363498831694981, "compression_ratio": 1.318840579710145, "no_speech_prob": 0.09609159082174301}, {"id": 17, "seek": 7240, "start": 92.4, "end": 98.28, "text": " So this website has been done with Kotlin.js, so it's a place where you can play with data", "tokens": [51364, 407, 341, 3144, 575, 668, 1096, 365, 30123, 5045, 13, 25530, 11, 370, 309, 311, 257, 1081, 689, 291, 393, 862, 365, 1412, 51658], "temperature": 0.0, "avg_logprob": -0.3363498831694981, "compression_ratio": 1.318840579710145, "no_speech_prob": 0.09609159082174301}, {"id": 18, "seek": 9828, "start": 98.28, "end": 99.28, "text": " to use.", "tokens": [50364, 281, 764, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 19, "seek": 9828, "start": 99.28, "end": 103.24, "text": " That's the name of our company.", "tokens": [50414, 663, 311, 264, 1315, 295, 527, 2237, 13, 50612], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 20, "seek": 9828, "start": 103.24, "end": 105.68, "text": " And so it's about the data visualization.", "tokens": [50612, 400, 370, 309, 311, 466, 264, 1412, 25801, 13, 50734], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 21, "seek": 9828, "start": 105.68, "end": 109.76, "text": " Some of you maybe know D3JS, who knows D3JS?", "tokens": [50734, 2188, 295, 291, 1310, 458, 413, 18, 41, 50, 11, 567, 3255, 413, 18, 41, 50, 30, 50938], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 22, "seek": 9828, "start": 109.76, "end": 115.96000000000001, "text": " Okay, so basically data to use, I mean, there's an open source repository named data to use,", "tokens": [50938, 1033, 11, 370, 1936, 1412, 281, 764, 11, 286, 914, 11, 456, 311, 364, 1269, 4009, 25841, 4926, 1412, 281, 764, 11, 51248], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 23, "seek": 9828, "start": 115.96000000000001, "end": 116.96000000000001, "text": " same as the company.", "tokens": [51248, 912, 382, 264, 2237, 13, 51298], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 24, "seek": 9828, "start": 116.96000000000001, "end": 123.4, "text": " This is D3JS, but for Kotlin, and it doesn't compile just for JavaScript, but also for", "tokens": [51298, 639, 307, 413, 18, 41, 50, 11, 457, 337, 30123, 5045, 11, 293, 309, 1177, 380, 31413, 445, 337, 15778, 11, 457, 611, 337, 51620], "temperature": 0.0, "avg_logprob": -0.2764011529775766, "compression_ratio": 1.5424528301886793, "no_speech_prob": 0.3135398030281067}, {"id": 25, "seek": 12340, "start": 123.4, "end": 129.04, "text": " other platforms that Kotlin supports, you will see which platforms Kotlin support.", "tokens": [50364, 661, 9473, 300, 30123, 5045, 9346, 11, 291, 486, 536, 597, 9473, 30123, 5045, 1406, 13, 50646], "temperature": 0.0, "avg_logprob": -0.19278204118883288, "compression_ratio": 1.6043956043956045, "no_speech_prob": 0.138636976480484}, {"id": 26, "seek": 12340, "start": 129.04, "end": 139.88, "text": " And so you can do this kind of thing that look like those.", "tokens": [50646, 400, 370, 291, 393, 360, 341, 733, 295, 551, 300, 574, 411, 729, 13, 51188], "temperature": 0.0, "avg_logprob": -0.19278204118883288, "compression_ratio": 1.6043956043956045, "no_speech_prob": 0.138636976480484}, {"id": 27, "seek": 12340, "start": 139.88, "end": 147.4, "text": " So this, I wanted to show you a few examples, dynamic example, because this was just a web", "tokens": [51188, 407, 341, 11, 286, 1415, 281, 855, 291, 257, 1326, 5110, 11, 8546, 1365, 11, 570, 341, 390, 445, 257, 3670, 51564], "temperature": 0.0, "avg_logprob": -0.19278204118883288, "compression_ratio": 1.6043956043956045, "no_speech_prob": 0.138636976480484}, {"id": 28, "seek": 12340, "start": 147.4, "end": 151.52, "text": " page, and just a web page is not very interesting nowadays.", "tokens": [51564, 3028, 11, 293, 445, 257, 3670, 3028, 307, 406, 588, 1880, 13434, 13, 51770], "temperature": 0.0, "avg_logprob": -0.19278204118883288, "compression_ratio": 1.6043956043956045, "no_speech_prob": 0.138636976480484}, {"id": 29, "seek": 15152, "start": 151.52, "end": 156.64000000000001, "text": " So this is entirely made with Kotlin.js, please.", "tokens": [50364, 407, 341, 307, 7696, 1027, 365, 30123, 5045, 13, 25530, 11, 1767, 13, 50620], "temperature": 0.0, "avg_logprob": -0.36893003280848674, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.031996745616197586}, {"id": 30, "seek": 15152, "start": 156.64000000000001, "end": 157.64000000000001, "text": " What is happening?", "tokens": [50620, 708, 307, 2737, 30, 50670], "temperature": 0.0, "avg_logprob": -0.36893003280848674, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.031996745616197586}, {"id": 31, "seek": 15152, "start": 157.64000000000001, "end": 168.88, "text": " Should respond to, yeah, so you see it's reacting with forces, can fix a big one, we'd have a", "tokens": [50670, 6454, 4196, 281, 11, 1338, 11, 370, 291, 536, 309, 311, 25817, 365, 5874, 11, 393, 3191, 257, 955, 472, 11, 321, 1116, 362, 257, 51232], "temperature": 0.0, "avg_logprob": -0.36893003280848674, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.031996745616197586}, {"id": 32, "seek": 15152, "start": 168.88, "end": 169.88, "text": " better effect.", "tokens": [51232, 1101, 1802, 13, 51282], "temperature": 0.0, "avg_logprob": -0.36893003280848674, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.031996745616197586}, {"id": 33, "seek": 15152, "start": 169.88, "end": 175.44, "text": " So this was done with Kotlin.js with the calculations and the rendering.", "tokens": [51282, 407, 341, 390, 1096, 365, 30123, 5045, 13, 25530, 365, 264, 20448, 293, 264, 22407, 13, 51560], "temperature": 0.0, "avg_logprob": -0.36893003280848674, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.031996745616197586}, {"id": 34, "seek": 17544, "start": 175.44, "end": 183.52, "text": " There's also this one, rip curtains.", "tokens": [50364, 821, 311, 611, 341, 472, 11, 12782, 36539, 13, 50768], "temperature": 0.0, "avg_logprob": -0.3650379180908203, "compression_ratio": 1.2595419847328244, "no_speech_prob": 0.21470317244529724}, {"id": 35, "seek": 17544, "start": 183.52, "end": 190.28, "text": " Didn't like switching density for monitors, but now it's smooth again.", "tokens": [50768, 11151, 380, 411, 16493, 10305, 337, 26518, 11, 457, 586, 309, 311, 5508, 797, 13, 51106], "temperature": 0.0, "avg_logprob": -0.3650379180908203, "compression_ratio": 1.2595419847328244, "no_speech_prob": 0.21470317244529724}, {"id": 36, "seek": 17544, "start": 190.28, "end": 199.2, "text": " Okay, really uncomfortable to have two different screens.", "tokens": [51106, 1033, 11, 534, 10532, 281, 362, 732, 819, 11171, 13, 51552], "temperature": 0.0, "avg_logprob": -0.3650379180908203, "compression_ratio": 1.2595419847328244, "no_speech_prob": 0.21470317244529724}, {"id": 37, "seek": 19920, "start": 199.2, "end": 212.92, "text": " The one, same, but with some color.", "tokens": [50364, 440, 472, 11, 912, 11, 457, 365, 512, 2017, 13, 51050], "temperature": 0.0, "avg_logprob": -0.3848229705310259, "compression_ratio": 1.4144736842105263, "no_speech_prob": 0.09043062478303909}, {"id": 38, "seek": 19920, "start": 212.92, "end": 222.2, "text": " Okay, anyway, now I also want to show you something built on top of data to use, which", "tokens": [51050, 1033, 11, 4033, 11, 586, 286, 611, 528, 281, 855, 291, 746, 3094, 322, 1192, 295, 1412, 281, 764, 11, 597, 51514], "temperature": 0.0, "avg_logprob": -0.3848229705310259, "compression_ratio": 1.4144736842105263, "no_speech_prob": 0.09043062478303909}, {"id": 39, "seek": 19920, "start": 222.2, "end": 223.2, "text": " is Charles's Katie.", "tokens": [51514, 307, 10523, 311, 19602, 13, 51564], "temperature": 0.0, "avg_logprob": -0.3848229705310259, "compression_ratio": 1.4144736842105263, "no_speech_prob": 0.09043062478303909}, {"id": 40, "seek": 19920, "start": 223.2, "end": 226.2, "text": " Unfortunately, Charles's Katie is not open source, but the examples are.", "tokens": [51564, 8590, 11, 10523, 311, 19602, 307, 406, 1269, 4009, 11, 457, 264, 5110, 366, 13, 51714], "temperature": 0.0, "avg_logprob": -0.3848229705310259, "compression_ratio": 1.4144736842105263, "no_speech_prob": 0.09043062478303909}, {"id": 41, "seek": 22620, "start": 226.2, "end": 236.48, "text": " I know we are for them, so it's a bit, how can I say, the team line sometimes, but yeah,", "tokens": [50364, 286, 458, 321, 366, 337, 552, 11, 370, 309, 311, 257, 857, 11, 577, 393, 286, 584, 11, 264, 1469, 1622, 2171, 11, 457, 1338, 11, 50878], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 42, "seek": 22620, "start": 236.48, "end": 241.11999999999998, "text": " this is the kind of thing, so it's a charting average, just basically with as little code", "tokens": [50878, 341, 307, 264, 733, 295, 551, 11, 370, 309, 311, 257, 6927, 278, 4274, 11, 445, 1936, 365, 382, 707, 3089, 51110], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 43, "seek": 22620, "start": 241.11999999999998, "end": 244.6, "text": " as possible, we want to have a chart that makes sense with the right bounds, with the", "tokens": [51110, 382, 1944, 11, 321, 528, 281, 362, 257, 6927, 300, 1669, 2020, 365, 264, 558, 29905, 11, 365, 264, 51284], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 44, "seek": 22620, "start": 244.6, "end": 247.28, "text": " right zooming, and all these kind of things.", "tokens": [51284, 558, 48226, 11, 293, 439, 613, 733, 295, 721, 13, 51418], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 45, "seek": 22620, "start": 247.28, "end": 251.35999999999999, "text": " There are also a lot of charts, but you will find them in the presentation.", "tokens": [51418, 821, 366, 611, 257, 688, 295, 17767, 11, 457, 291, 486, 915, 552, 294, 264, 5860, 13, 51622], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 46, "seek": 22620, "start": 251.35999999999999, "end": 252.35999999999999, "text": " The links are clickable.", "tokens": [51622, 440, 6123, 366, 2052, 712, 13, 51672], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 47, "seek": 22620, "start": 252.35999999999999, "end": 254.56, "text": " I will share the link at the end.", "tokens": [51672, 286, 486, 2073, 264, 2113, 412, 264, 917, 13, 51782], "temperature": 0.0, "avg_logprob": -0.3560287721695439, "compression_ratio": 1.7549407114624507, "no_speech_prob": 0.18310080468654633}, {"id": 48, "seek": 25456, "start": 254.56, "end": 257.24, "text": " Okay, so what can we do on the web?", "tokens": [50364, 1033, 11, 370, 437, 393, 321, 360, 322, 264, 3670, 30, 50498], "temperature": 0.0, "avg_logprob": -0.390927261181092, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.02074744552373886}, {"id": 49, "seek": 25456, "start": 257.24, "end": 261.6, "text": " A lot of complicated things, just like JavaScript, you can manipulate the DOM, go on canvas,", "tokens": [50498, 316, 688, 295, 6179, 721, 11, 445, 411, 15778, 11, 291, 393, 20459, 264, 35727, 11, 352, 322, 16267, 11, 50716], "temperature": 0.0, "avg_logprob": -0.390927261181092, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.02074744552373886}, {"id": 50, "seek": 25456, "start": 261.6, "end": 265.24, "text": " write reliable and shareable business logic.", "tokens": [50716, 2464, 12924, 293, 2073, 712, 1606, 9952, 13, 50898], "temperature": 0.0, "avg_logprob": -0.390927261181092, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.02074744552373886}, {"id": 51, "seek": 25456, "start": 265.24, "end": 268.76, "text": " There's no hard limit.", "tokens": [50898, 821, 311, 572, 1152, 4948, 13, 51074], "temperature": 0.0, "avg_logprob": -0.390927261181092, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.02074744552373886}, {"id": 52, "seek": 25456, "start": 268.76, "end": 274.44, "text": " And so now why, actual answers, why we did JavaScript or code.js for this, and other", "tokens": [51074, 400, 370, 586, 983, 11, 3539, 6338, 11, 983, 321, 630, 15778, 420, 3089, 13, 25530, 337, 341, 11, 293, 661, 51358], "temperature": 0.0, "avg_logprob": -0.390927261181092, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.02074744552373886}, {"id": 53, "seek": 25456, "start": 274.44, "end": 278.72, "text": " projects as well, sometimes I should say.", "tokens": [51358, 4455, 382, 731, 11, 2171, 286, 820, 584, 13, 51572], "temperature": 0.0, "avg_logprob": -0.390927261181092, "compression_ratio": 1.4615384615384615, "no_speech_prob": 0.02074744552373886}, {"id": 54, "seek": 27872, "start": 278.72, "end": 285.20000000000005, "text": " So the first reason was safety and reliability, especially when working with multiple people", "tokens": [50364, 407, 264, 700, 1778, 390, 4514, 293, 24550, 11, 2318, 562, 1364, 365, 3866, 561, 50688], "temperature": 0.0, "avg_logprob": -0.18453499122902198, "compression_ratio": 1.6627906976744187, "no_speech_prob": 0.11641556024551392}, {"id": 55, "seek": 27872, "start": 285.20000000000005, "end": 287.20000000000005, "text": " over time.", "tokens": [50688, 670, 565, 13, 50788], "temperature": 0.0, "avg_logprob": -0.18453499122902198, "compression_ratio": 1.6627906976744187, "no_speech_prob": 0.11641556024551392}, {"id": 56, "seek": 27872, "start": 287.20000000000005, "end": 292.12, "text": " We don't need to transfer a lot of knowledge because it's already built into the code itself", "tokens": [50788, 492, 500, 380, 643, 281, 5003, 257, 688, 295, 3601, 570, 309, 311, 1217, 3094, 666, 264, 3089, 2564, 51034], "temperature": 0.0, "avg_logprob": -0.18453499122902198, "compression_ratio": 1.6627906976744187, "no_speech_prob": 0.11641556024551392}, {"id": 57, "seek": 27872, "start": 292.12, "end": 298.36, "text": " thanks to typing, for example, the types, like this is a number, this is a string, this", "tokens": [51034, 3231, 281, 18444, 11, 337, 1365, 11, 264, 3467, 11, 411, 341, 307, 257, 1230, 11, 341, 307, 257, 6798, 11, 341, 51346], "temperature": 0.0, "avg_logprob": -0.18453499122902198, "compression_ratio": 1.6627906976744187, "no_speech_prob": 0.11641556024551392}, {"id": 58, "seek": 27872, "start": 298.36, "end": 303.08000000000004, "text": " is whatever object we have, maybe this is a duration.", "tokens": [51346, 307, 2035, 2657, 321, 362, 11, 1310, 341, 307, 257, 16365, 13, 51582], "temperature": 0.0, "avg_logprob": -0.18453499122902198, "compression_ratio": 1.6627906976744187, "no_speech_prob": 0.11641556024551392}, {"id": 59, "seek": 27872, "start": 303.08000000000004, "end": 308.52000000000004, "text": " Duration is not just an integer or a long, it's a duration, so we know what we are dealing", "tokens": [51582, 413, 8167, 307, 406, 445, 364, 24922, 420, 257, 938, 11, 309, 311, 257, 16365, 11, 370, 321, 458, 437, 321, 366, 6260, 51854], "temperature": 0.0, "avg_logprob": -0.18453499122902198, "compression_ratio": 1.6627906976744187, "no_speech_prob": 0.11641556024551392}, {"id": 60, "seek": 30852, "start": 308.52, "end": 315.03999999999996, "text": " with, the language design, the concise syntax, because that's also something we like in JavaScript", "tokens": [50364, 365, 11, 264, 2856, 1715, 11, 264, 44882, 28431, 11, 570, 300, 311, 611, 746, 321, 411, 294, 15778, 50690], "temperature": 0.0, "avg_logprob": -0.26343908309936526, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.009235377423465252}, {"id": 61, "seek": 30852, "start": 315.03999999999996, "end": 321.44, "text": " and we like a bit less in Java, for example, having a concise syntax is actually important,", "tokens": [50690, 293, 321, 411, 257, 857, 1570, 294, 10745, 11, 337, 1365, 11, 1419, 257, 44882, 28431, 307, 767, 1021, 11, 51010], "temperature": 0.0, "avg_logprob": -0.26343908309936526, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.009235377423465252}, {"id": 62, "seek": 30852, "start": 321.44, "end": 327.96, "text": " type safety, concelable async programming, also named coroutines, and other features", "tokens": [51010, 2010, 4514, 11, 1588, 338, 712, 382, 34015, 9410, 11, 611, 4926, 1181, 346, 1652, 11, 293, 661, 4122, 51336], "temperature": 0.0, "avg_logprob": -0.26343908309936526, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.009235377423465252}, {"id": 63, "seek": 30852, "start": 327.96, "end": 332.79999999999995, "text": " in the language design, but also code sharing.", "tokens": [51336, 294, 264, 2856, 1715, 11, 457, 611, 3089, 5414, 13, 51578], "temperature": 0.0, "avg_logprob": -0.26343908309936526, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.009235377423465252}, {"id": 64, "seek": 30852, "start": 332.79999999999995, "end": 338.12, "text": " So we can share what we want and we can have native interoperability with a platform, say", "tokens": [51578, 407, 321, 393, 2073, 437, 321, 528, 293, 321, 393, 362, 8470, 728, 7192, 2310, 365, 257, 3663, 11, 584, 51844], "temperature": 0.0, "avg_logprob": -0.26343908309936526, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.009235377423465252}, {"id": 65, "seek": 33812, "start": 338.12, "end": 343.68, "text": " at some point we want to make a mobile app, we can actually compile the same way all the", "tokens": [50364, 412, 512, 935, 321, 528, 281, 652, 257, 6013, 724, 11, 321, 393, 767, 31413, 264, 912, 636, 439, 264, 50642], "temperature": 0.0, "avg_logprob": -0.20947588250992147, "compression_ratio": 1.7417840375586855, "no_speech_prob": 0.024952106177806854}, {"id": 66, "seek": 33812, "start": 343.68, "end": 349.28000000000003, "text": " native apps are made with the same code, granted that we are not using JavaScript or web-only", "tokens": [50642, 8470, 7733, 366, 1027, 365, 264, 912, 3089, 11, 12344, 300, 321, 366, 406, 1228, 15778, 420, 3670, 12, 25202, 50922], "temperature": 0.0, "avg_logprob": -0.20947588250992147, "compression_ratio": 1.7417840375586855, "no_speech_prob": 0.024952106177806854}, {"id": 67, "seek": 33812, "start": 349.28000000000003, "end": 351.88, "text": " APIs.", "tokens": [50922, 21445, 13, 51052], "temperature": 0.0, "avg_logprob": -0.20947588250992147, "compression_ratio": 1.7417840375586855, "no_speech_prob": 0.024952106177806854}, {"id": 68, "seek": 33812, "start": 351.88, "end": 356.64, "text": " And there are some APIs that work the same, for example, plus adding two numbers, it works", "tokens": [51052, 400, 456, 366, 512, 21445, 300, 589, 264, 912, 11, 337, 1365, 11, 1804, 5127, 732, 3547, 11, 309, 1985, 51290], "temperature": 0.0, "avg_logprob": -0.20947588250992147, "compression_ratio": 1.7417840375586855, "no_speech_prob": 0.024952106177806854}, {"id": 69, "seek": 33812, "start": 356.64, "end": 361.48, "text": " on all platforms, and there are a lot of other things that work on all platforms, actually.", "tokens": [51290, 322, 439, 9473, 11, 293, 456, 366, 257, 688, 295, 661, 721, 300, 589, 322, 439, 9473, 11, 767, 13, 51532], "temperature": 0.0, "avg_logprob": -0.20947588250992147, "compression_ratio": 1.7417840375586855, "no_speech_prob": 0.024952106177806854}, {"id": 70, "seek": 36148, "start": 361.48, "end": 369.04, "text": " So let's focus on code sharing first, because sharing is caring, right, that's what some", "tokens": [50364, 407, 718, 311, 1879, 322, 3089, 5414, 700, 11, 570, 5414, 307, 15365, 11, 558, 11, 300, 311, 437, 512, 50742], "temperature": 0.0, "avg_logprob": -0.2421288047869181, "compression_ratio": 1.6266666666666667, "no_speech_prob": 0.0947110578417778}, {"id": 71, "seek": 36148, "start": 369.04, "end": 370.04, "text": " people say.", "tokens": [50742, 561, 584, 13, 50792], "temperature": 0.0, "avg_logprob": -0.2421288047869181, "compression_ratio": 1.6266666666666667, "no_speech_prob": 0.0947110578417778}, {"id": 72, "seek": 36148, "start": 370.04, "end": 375.92, "text": " And so I want to answer which platforms does Kotlin run on or compile to, I should say,", "tokens": [50792, 400, 370, 286, 528, 281, 1867, 597, 9473, 775, 30123, 5045, 1190, 322, 420, 31413, 281, 11, 286, 820, 584, 11, 51086], "temperature": 0.0, "avg_logprob": -0.2421288047869181, "compression_ratio": 1.6266666666666667, "no_speech_prob": 0.0947110578417778}, {"id": 73, "seek": 36148, "start": 375.92, "end": 382.40000000000003, "text": " because Kotlin, in a way, unfortunately, but at the same time, it's so strange, is a compile", "tokens": [51086, 570, 30123, 5045, 11, 294, 257, 636, 11, 7015, 11, 457, 412, 264, 912, 565, 11, 309, 311, 370, 5861, 11, 307, 257, 31413, 51410], "temperature": 0.0, "avg_logprob": -0.2421288047869181, "compression_ratio": 1.6266666666666667, "no_speech_prob": 0.0947110578417778}, {"id": 74, "seek": 36148, "start": 382.40000000000003, "end": 386.76, "text": " language, which means that you might need to wait a bit before you can actually test", "tokens": [51410, 2856, 11, 597, 1355, 300, 291, 1062, 643, 281, 1699, 257, 857, 949, 291, 393, 767, 1500, 51628], "temperature": 0.0, "avg_logprob": -0.2421288047869181, "compression_ratio": 1.6266666666666667, "no_speech_prob": 0.0947110578417778}, {"id": 75, "seek": 38676, "start": 386.88, "end": 388.88, "text": " your code.", "tokens": [50370, 428, 3089, 13, 50470], "temperature": 0.0, "avg_logprob": -0.3164808385512408, "compression_ratio": 1.4512820512820512, "no_speech_prob": 0.09421943128108978}, {"id": 76, "seek": 38676, "start": 388.88, "end": 396.4, "text": " Yeah, so it compiles for the JVM, that means server, desktop, apps, libraries, JavaScript,", "tokens": [50470, 865, 11, 370, 309, 715, 4680, 337, 264, 508, 53, 44, 11, 300, 1355, 7154, 11, 14502, 11, 7733, 11, 15148, 11, 15778, 11, 50846], "temperature": 0.0, "avg_logprob": -0.3164808385512408, "compression_ratio": 1.4512820512820512, "no_speech_prob": 0.09421943128108978}, {"id": 77, "seek": 38676, "start": 396.4, "end": 404.76, "text": " browser, Node.js as well, Android, and whereas in what is within the Android runtime, which", "tokens": [50846, 11185, 11, 38640, 13, 25530, 382, 731, 11, 8853, 11, 293, 9735, 294, 437, 307, 1951, 264, 8853, 34474, 11, 597, 51264], "temperature": 0.0, "avg_logprob": -0.3164808385512408, "compression_ratio": 1.4512820512820512, "no_speech_prob": 0.09421943128108978}, {"id": 78, "seek": 38676, "start": 404.76, "end": 413.59999999999997, "text": " is kind of a JVM, but not really, and native, so kind of like C++, you can compile Kotlin", "tokens": [51264, 307, 733, 295, 257, 508, 53, 44, 11, 457, 406, 534, 11, 293, 8470, 11, 370, 733, 295, 411, 383, 25472, 11, 291, 393, 31413, 30123, 5045, 51706], "temperature": 0.0, "avg_logprob": -0.3164808385512408, "compression_ratio": 1.4512820512820512, "no_speech_prob": 0.09421943128108978}, {"id": 79, "seek": 41360, "start": 413.6, "end": 422.76000000000005, "text": " for iOS, watchOS, I don't have an Apple watch, but you get it, macOS, CVOS, Linux, Windows,", "tokens": [50364, 337, 17430, 11, 1159, 4367, 11, 286, 500, 380, 362, 364, 6373, 1159, 11, 457, 291, 483, 309, 11, 7912, 4367, 11, 22995, 4367, 11, 18734, 11, 8591, 11, 50822], "temperature": 0.0, "avg_logprob": -0.22055937390808666, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.02484995685517788}, {"id": 80, "seek": 41360, "start": 422.76000000000005, "end": 428.12, "text": " and also the Android NDK, which is kind of outside the Android runtime, the kind of JVM", "tokens": [50822, 293, 611, 264, 8853, 40709, 42, 11, 597, 307, 733, 295, 2380, 264, 8853, 34474, 11, 264, 733, 295, 508, 53, 44, 51090], "temperature": 0.0, "avg_logprob": -0.22055937390808666, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.02484995685517788}, {"id": 81, "seek": 41360, "start": 428.12, "end": 434.36, "text": " art, you know, you can also compile there, if you want, can be useful if you make a video", "tokens": [51090, 1523, 11, 291, 458, 11, 291, 393, 611, 31413, 456, 11, 498, 291, 528, 11, 393, 312, 4420, 498, 291, 652, 257, 960, 51402], "temperature": 0.0, "avg_logprob": -0.22055937390808666, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.02484995685517788}, {"id": 82, "seek": 41360, "start": 434.36, "end": 436.6, "text": " game, for example.", "tokens": [51402, 1216, 11, 337, 1365, 13, 51514], "temperature": 0.0, "avg_logprob": -0.22055937390808666, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.02484995685517788}, {"id": 83, "seek": 41360, "start": 436.6, "end": 442.64000000000004, "text": " So basically Kotlin runs natively on almost all devices, at least devices where we run", "tokens": [51514, 407, 1936, 30123, 5045, 6676, 8470, 356, 322, 1920, 439, 5759, 11, 412, 1935, 5759, 689, 321, 1190, 51816], "temperature": 0.0, "avg_logprob": -0.22055937390808666, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.02484995685517788}, {"id": 84, "seek": 44264, "start": 442.64, "end": 452.2, "text": " what we call apps, so maybe not a microcontroller, but if it's slightly more powerful, yes, but", "tokens": [50364, 437, 321, 818, 7733, 11, 370, 1310, 406, 257, 4532, 9000, 22922, 11, 457, 498, 309, 311, 4748, 544, 4005, 11, 2086, 11, 457, 50842], "temperature": 0.0, "avg_logprob": -0.18625702460606894, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.002647333312779665}, {"id": 85, "seek": 44264, "start": 452.2, "end": 463.64, "text": " Kotlin is not all about Kotlin, actually, interoperability is a key thing in Kotlin,", "tokens": [50842, 30123, 5045, 307, 406, 439, 466, 30123, 5045, 11, 767, 11, 728, 7192, 2310, 307, 257, 2141, 551, 294, 30123, 5045, 11, 51414], "temperature": 0.0, "avg_logprob": -0.18625702460606894, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.002647333312779665}, {"id": 86, "seek": 44264, "start": 463.64, "end": 468.32, "text": " and so Kotlin has direct interoperability, which means that you don't have to use a special", "tokens": [51414, 293, 370, 30123, 5045, 575, 2047, 728, 7192, 2310, 11, 597, 1355, 300, 291, 500, 380, 362, 281, 764, 257, 2121, 51648], "temperature": 0.0, "avg_logprob": -0.18625702460606894, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.002647333312779665}, {"id": 87, "seek": 44264, "start": 468.32, "end": 471.96, "text": " API where you pass a string for the name of the method and then the list of arguments,", "tokens": [51648, 9362, 689, 291, 1320, 257, 6798, 337, 264, 1315, 295, 264, 3170, 293, 550, 264, 1329, 295, 12869, 11, 51830], "temperature": 0.0, "avg_logprob": -0.18625702460606894, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.002647333312779665}, {"id": 88, "seek": 47196, "start": 471.96, "end": 474.64, "text": " you just call it like it was made in Kotlin.", "tokens": [50364, 291, 445, 818, 309, 411, 309, 390, 1027, 294, 30123, 5045, 13, 50498], "temperature": 0.0, "avg_logprob": -0.24366993099064022, "compression_ratio": 1.46875, "no_speech_prob": 0.2698829174041748}, {"id": 89, "seek": 47196, "start": 474.64, "end": 478.71999999999997, "text": " So it has direct interoperability with Java, with JavaScript.", "tokens": [50498, 407, 309, 575, 2047, 728, 7192, 2310, 365, 10745, 11, 365, 15778, 13, 50702], "temperature": 0.0, "avg_logprob": -0.24366993099064022, "compression_ratio": 1.46875, "no_speech_prob": 0.2698829174041748}, {"id": 90, "seek": 47196, "start": 478.71999999999997, "end": 484.84, "text": " Now with TypeScript as well, very recently, in the last release of Kotlin, a few weeks", "tokens": [50702, 823, 365, 15576, 14237, 382, 731, 11, 588, 3938, 11, 294, 264, 1036, 4374, 295, 30123, 5045, 11, 257, 1326, 3259, 51008], "temperature": 0.0, "avg_logprob": -0.24366993099064022, "compression_ratio": 1.46875, "no_speech_prob": 0.2698829174041748}, {"id": 91, "seek": 47196, "start": 484.84, "end": 496.08, "text": " ago, Objective-C, and therefore Swift and C, but unfortunately there are quirks, because", "tokens": [51008, 2057, 11, 24753, 488, 12, 34, 11, 293, 4412, 25539, 293, 383, 11, 457, 7015, 456, 366, 35645, 1694, 11, 570, 51570], "temperature": 0.0, "avg_logprob": -0.24366993099064022, "compression_ratio": 1.46875, "no_speech_prob": 0.2698829174041748}, {"id": 92, "seek": 49608, "start": 496.08, "end": 502.2, "text": " languages have specific design and sometimes it's hard to have the square fit into the", "tokens": [50364, 8650, 362, 2685, 1715, 293, 2171, 309, 311, 1152, 281, 362, 264, 3732, 3318, 666, 264, 50670], "temperature": 0.0, "avg_logprob": -0.22014427185058594, "compression_ratio": 1.644859813084112, "no_speech_prob": 0.4286815822124481}, {"id": 93, "seek": 49608, "start": 502.2, "end": 512.56, "text": " square-ish, so it works both ways for most of the languages, but sometimes you are limited.", "tokens": [50670, 3732, 12, 742, 11, 370, 309, 1985, 1293, 2098, 337, 881, 295, 264, 8650, 11, 457, 2171, 291, 366, 5567, 13, 51188], "temperature": 0.0, "avg_logprob": -0.22014427185058594, "compression_ratio": 1.644859813084112, "no_speech_prob": 0.4286815822124481}, {"id": 94, "seek": 49608, "start": 512.56, "end": 517.48, "text": " Just want to be completely honest about that, for Java it works well, actually I should", "tokens": [51188, 1449, 528, 281, 312, 2584, 3245, 466, 300, 11, 337, 10745, 309, 1985, 731, 11, 767, 286, 820, 51434], "temperature": 0.0, "avg_logprob": -0.22014427185058594, "compression_ratio": 1.644859813084112, "no_speech_prob": 0.4286815822124481}, {"id": 95, "seek": 49608, "start": 517.48, "end": 523.92, "text": " put Java in orange as well, because a few features now don't work supernaturally with", "tokens": [51434, 829, 10745, 294, 7671, 382, 731, 11, 570, 257, 1326, 4122, 586, 500, 380, 589, 1687, 12241, 6512, 365, 51756], "temperature": 0.0, "avg_logprob": -0.22014427185058594, "compression_ratio": 1.644859813084112, "no_speech_prob": 0.4286815822124481}, {"id": 96, "seek": 52392, "start": 523.92, "end": 528.4399999999999, "text": " Kotlin, you have to jump to slide hoops when it comes to async programming.", "tokens": [50364, 30123, 5045, 11, 291, 362, 281, 3012, 281, 4137, 1106, 3370, 562, 309, 1487, 281, 382, 34015, 9410, 13, 50590], "temperature": 0.0, "avg_logprob": -0.4097614994755498, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.10424098372459412}, {"id": 97, "seek": 52392, "start": 528.4399999999999, "end": 535.8, "text": " If you do it the best way in Kotlin, you cannot apply that in Java, but you will be able to", "tokens": [50590, 759, 291, 360, 309, 264, 1151, 636, 294, 30123, 5045, 11, 291, 2644, 3079, 300, 294, 10745, 11, 457, 291, 486, 312, 1075, 281, 50958], "temperature": 0.0, "avg_logprob": -0.4097614994755498, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.10424098372459412}, {"id": 98, "seek": 52392, "start": 535.8, "end": 540.52, "text": " support all the results that you've got yourself.", "tokens": [50958, 1406, 439, 264, 3542, 300, 291, 600, 658, 1803, 13, 51194], "temperature": 0.0, "avg_logprob": -0.4097614994755498, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.10424098372459412}, {"id": 99, "seek": 52392, "start": 540.52, "end": 545.76, "text": " What direct interoperability means is that also you are not reliant on third-party plug-in", "tokens": [51194, 708, 2047, 728, 7192, 2310, 1355, 307, 300, 611, 291, 366, 406, 1039, 5798, 322, 2636, 12, 23409, 5452, 12, 259, 51456], "temperature": 0.0, "avg_logprob": -0.4097614994755498, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.10424098372459412}, {"id": 100, "seek": 52392, "start": 545.76, "end": 549.76, "text": " updates, for example, it could be Cordova or Flutter, you are waiting for them to support", "tokens": [51456, 9205, 11, 337, 1365, 11, 309, 727, 312, 383, 23872, 2757, 420, 3235, 9947, 11, 291, 366, 3806, 337, 552, 281, 1406, 51656], "temperature": 0.0, "avg_logprob": -0.4097614994755498, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.10424098372459412}, {"id": 101, "seek": 54976, "start": 549.76, "end": 554.2, "text": " the new release of something or that new standard in web, you don't need that in Kotlin, because", "tokens": [50364, 264, 777, 4374, 295, 746, 420, 300, 777, 3832, 294, 3670, 11, 291, 500, 380, 643, 300, 294, 30123, 5045, 11, 570, 50586], "temperature": 0.0, "avg_logprob": -0.24336827242815937, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.27204978466033936}, {"id": 102, "seek": 54976, "start": 554.2, "end": 559.2, "text": " you are still doing a native app, but just you don't have to write to duplicate the code", "tokens": [50586, 291, 366, 920, 884, 257, 8470, 724, 11, 457, 445, 291, 500, 380, 362, 281, 2464, 281, 23976, 264, 3089, 50836], "temperature": 0.0, "avg_logprob": -0.24336827242815937, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.27204978466033936}, {"id": 103, "seek": 54976, "start": 559.2, "end": 564.4, "text": " for each platform, it's like you are doing JavaScript if you use it for the web, so in", "tokens": [50836, 337, 1184, 3663, 11, 309, 311, 411, 291, 366, 884, 15778, 498, 291, 764, 309, 337, 264, 3670, 11, 370, 294, 51096], "temperature": 0.0, "avg_logprob": -0.24336827242815937, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.27204978466033936}, {"id": 104, "seek": 54976, "start": 564.4, "end": 570.0, "text": " JavaScript, no, it doesn't need to compile for JavaScript.", "tokens": [51096, 15778, 11, 572, 11, 309, 1177, 380, 643, 281, 31413, 337, 15778, 13, 51376], "temperature": 0.0, "avg_logprob": -0.24336827242815937, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.27204978466033936}, {"id": 105, "seek": 54976, "start": 570.0, "end": 575.68, "text": " You can use native APIs like they were built in Kotlin, so calling new Kotlin code from", "tokens": [51376, 509, 393, 764, 8470, 21445, 411, 436, 645, 3094, 294, 30123, 5045, 11, 370, 5141, 777, 30123, 5045, 3089, 490, 51660], "temperature": 0.0, "avg_logprob": -0.24336827242815937, "compression_ratio": 1.7679324894514767, "no_speech_prob": 0.27204978466033936}, {"id": 106, "seek": 57568, "start": 575.68, "end": 581.7199999999999, "text": " Java, like it was built in Java, the same for Swift, same for JavaScript.", "tokens": [50364, 10745, 11, 411, 309, 390, 3094, 294, 10745, 11, 264, 912, 337, 25539, 11, 912, 337, 15778, 13, 50666], "temperature": 0.0, "avg_logprob": -0.18700148842551492, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.03950439393520355}, {"id": 107, "seek": 57568, "start": 581.7199999999999, "end": 587.7199999999999, "text": " Sometimes there are limitations, as I told you, but for most of the use cases, it works", "tokens": [50666, 4803, 456, 366, 15705, 11, 382, 286, 1907, 291, 11, 457, 337, 881, 295, 264, 764, 3331, 11, 309, 1985, 50966], "temperature": 0.0, "avg_logprob": -0.18700148842551492, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.03950439393520355}, {"id": 108, "seek": 57568, "start": 587.7199999999999, "end": 595.88, "text": " just like this and sometimes it's only a minor thing and you will find the answer on the internet.", "tokens": [50966, 445, 411, 341, 293, 2171, 309, 311, 787, 257, 6696, 551, 293, 291, 486, 915, 264, 1867, 322, 264, 4705, 13, 51374], "temperature": 0.0, "avg_logprob": -0.18700148842551492, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.03950439393520355}, {"id": 109, "seek": 57568, "start": 595.88, "end": 600.88, "text": " Kotlin nowadays is the most interoperable programming language, unlike C++, which doesn't", "tokens": [51374, 30123, 5045, 13434, 307, 264, 881, 728, 7192, 712, 9410, 2856, 11, 8343, 383, 25472, 11, 597, 1177, 380, 51624], "temperature": 0.0, "avg_logprob": -0.18700148842551492, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.03950439393520355}, {"id": 110, "seek": 60088, "start": 600.88, "end": 609.4399999999999, "text": " compile for JavaScript, for example, and I know C++ was used for multi-platform libraries,", "tokens": [50364, 31413, 337, 15778, 11, 337, 1365, 11, 293, 286, 458, 383, 25472, 390, 1143, 337, 4825, 12, 39975, 837, 15148, 11, 50792], "temperature": 0.0, "avg_logprob": -0.26851335324739156, "compression_ratio": 1.4175257731958764, "no_speech_prob": 0.041374992579221725}, {"id": 111, "seek": 60088, "start": 609.4399999999999, "end": 617.4, "text": " even though I don't really want to deal with overflows on a daily basis, personally.", "tokens": [50792, 754, 1673, 286, 500, 380, 534, 528, 281, 2028, 365, 670, 33229, 322, 257, 5212, 5143, 11, 5665, 13, 51190], "temperature": 0.0, "avg_logprob": -0.26851335324739156, "compression_ratio": 1.4175257731958764, "no_speech_prob": 0.041374992579221725}, {"id": 112, "seek": 60088, "start": 617.4, "end": 624.16, "text": " And so back to that slide, now we look at safety and reliability, because, oh, okay,", "tokens": [51190, 400, 370, 646, 281, 300, 4137, 11, 586, 321, 574, 412, 4514, 293, 24550, 11, 570, 11, 1954, 11, 1392, 11, 51528], "temperature": 0.0, "avg_logprob": -0.26851335324739156, "compression_ratio": 1.4175257731958764, "no_speech_prob": 0.041374992579221725}, {"id": 113, "seek": 60088, "start": 624.16, "end": 626.64, "text": " let's move on.", "tokens": [51528, 718, 311, 1286, 322, 13, 51652], "temperature": 0.0, "avg_logprob": -0.26851335324739156, "compression_ratio": 1.4175257731958764, "no_speech_prob": 0.041374992579221725}, {"id": 114, "seek": 62664, "start": 626.64, "end": 633.12, "text": " So for me, it's reason number one.", "tokens": [50364, 407, 337, 385, 11, 309, 311, 1778, 1230, 472, 13, 50688], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 115, "seek": 62664, "start": 633.12, "end": 640.04, "text": " I don't know if it speaks to you, but your user might be in display.", "tokens": [50688, 286, 500, 380, 458, 498, 309, 10789, 281, 291, 11, 457, 428, 4195, 1062, 312, 294, 4674, 13, 51034], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 116, "seek": 62664, "start": 640.04, "end": 641.52, "text": " And so that's how JavaScript is like.", "tokens": [51034, 400, 370, 300, 311, 577, 15778, 307, 411, 13, 51108], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 117, "seek": 62664, "start": 641.52, "end": 642.52, "text": " It doesn't care.", "tokens": [51108, 467, 1177, 380, 1127, 13, 51158], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 118, "seek": 62664, "start": 642.52, "end": 648.08, "text": " It's like it's on you, check whether you still have the wing.", "tokens": [51158, 467, 311, 411, 309, 311, 322, 291, 11, 1520, 1968, 291, 920, 362, 264, 11162, 13, 51436], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 119, "seek": 62664, "start": 648.08, "end": 649.08, "text": " Missing both?", "tokens": [51436, 5275, 278, 1293, 30, 51486], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 120, "seek": 62664, "start": 649.08, "end": 650.08, "text": " Wing off?", "tokens": [51486, 28785, 766, 30, 51536], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 121, "seek": 62664, "start": 650.08, "end": 651.08, "text": " No problem.", "tokens": [51536, 883, 1154, 13, 51586], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 122, "seek": 62664, "start": 651.08, "end": 652.08, "text": " Let's try to fly it anyway.", "tokens": [51586, 961, 311, 853, 281, 3603, 309, 4033, 13, 51636], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 123, "seek": 62664, "start": 652.08, "end": 654.64, "text": " Let's try to run it anyway.", "tokens": [51636, 961, 311, 853, 281, 1190, 309, 4033, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1705613226260779, "compression_ratio": 1.5072463768115942, "no_speech_prob": 0.00736194895580411}, {"id": 124, "seek": 65464, "start": 654.64, "end": 660.76, "text": " That also applies to other programming languages like Python, Bash, all PHP, not PHP 7, but", "tokens": [50364, 663, 611, 13165, 281, 661, 9410, 8650, 411, 15329, 11, 43068, 11, 439, 47298, 11, 406, 47298, 1614, 11, 457, 50670], "temperature": 0.0, "avg_logprob": -0.30933979283208435, "compression_ratio": 1.5810810810810811, "no_speech_prob": 0.08063685894012451}, {"id": 125, "seek": 65464, "start": 660.76, "end": 668.72, "text": " yeah, and basically languages that say, yeah, types, we don't need them or when you want.", "tokens": [50670, 1338, 11, 293, 1936, 8650, 300, 584, 11, 1338, 11, 3467, 11, 321, 500, 380, 643, 552, 420, 562, 291, 528, 13, 51068], "temperature": 0.0, "avg_logprob": -0.30933979283208435, "compression_ratio": 1.5810810810810811, "no_speech_prob": 0.08063685894012451}, {"id": 126, "seek": 65464, "start": 668.72, "end": 677.08, "text": " So on the other side, Kotlin is more like this, bolt required, no takeoff possible, wrong", "tokens": [51068, 407, 322, 264, 661, 1252, 11, 30123, 5045, 307, 544, 411, 341, 11, 13436, 4739, 11, 572, 747, 4506, 1944, 11, 2085, 51486], "temperature": 0.0, "avg_logprob": -0.30933979283208435, "compression_ratio": 1.5810810810810811, "no_speech_prob": 0.08063685894012451}, {"id": 127, "seek": 65464, "start": 677.08, "end": 684.4399999999999, "text": " bolt type, no takeoff possible, expect the pilot seat but got an economic seat.", "tokens": [51486, 13436, 2010, 11, 572, 747, 4506, 1944, 11, 2066, 264, 9691, 6121, 457, 658, 364, 4836, 6121, 13, 51854], "temperature": 0.0, "avg_logprob": -0.30933979283208435, "compression_ratio": 1.5810810810810811, "no_speech_prob": 0.08063685894012451}, {"id": 128, "seek": 68444, "start": 684.44, "end": 686.08, "text": " No takeoff possible.", "tokens": [50364, 883, 747, 4506, 1944, 13, 50446], "temperature": 0.0, "avg_logprob": -0.17015028491462628, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.01628636009991169}, {"id": 129, "seek": 68444, "start": 686.08, "end": 691.48, "text": " So you don't have to fly the plane to realize that one wing wasn't attached properly or that", "tokens": [50446, 407, 291, 500, 380, 362, 281, 3603, 264, 5720, 281, 4325, 300, 472, 11162, 2067, 380, 8570, 6108, 420, 300, 50716], "temperature": 0.0, "avg_logprob": -0.17015028491462628, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.01628636009991169}, {"id": 130, "seek": 68444, "start": 691.48, "end": 700.7600000000001, "text": " you were missing the wheels for landing because you want to realize that before taking off.", "tokens": [50716, 291, 645, 5361, 264, 10046, 337, 11202, 570, 291, 528, 281, 4325, 300, 949, 1940, 766, 13, 51180], "temperature": 0.0, "avg_logprob": -0.17015028491462628, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.01628636009991169}, {"id": 131, "seek": 68444, "start": 700.7600000000001, "end": 706.32, "text": " And that also means that compiling is not just about browsing the web while waiting.", "tokens": [51180, 400, 300, 611, 1355, 300, 715, 4883, 307, 406, 445, 466, 38602, 264, 3670, 1339, 3806, 13, 51458], "temperature": 0.0, "avg_logprob": -0.17015028491462628, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.01628636009991169}, {"id": 132, "seek": 68444, "start": 706.32, "end": 708.32, "text": " Compile languages mean less tests to write.", "tokens": [51458, 6620, 794, 8650, 914, 1570, 6921, 281, 2464, 13, 51558], "temperature": 0.0, "avg_logprob": -0.17015028491462628, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.01628636009991169}, {"id": 133, "seek": 68444, "start": 708.32, "end": 712.32, "text": " You don't have to check whether the input is of the right kind.", "tokens": [51558, 509, 500, 380, 362, 281, 1520, 1968, 264, 4846, 307, 295, 264, 558, 733, 13, 51758], "temperature": 0.0, "avg_logprob": -0.17015028491462628, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.01628636009991169}, {"id": 134, "seek": 71232, "start": 712.32, "end": 718.24, "text": " You only have to check for the values but not for like, someone gave me a horse but", "tokens": [50364, 509, 787, 362, 281, 1520, 337, 264, 4190, 457, 406, 337, 411, 11, 1580, 2729, 385, 257, 6832, 457, 50660], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 135, "seek": 71232, "start": 718.24, "end": 722.48, "text": " I was expecting an integer.", "tokens": [50660, 286, 390, 9650, 364, 24922, 13, 50872], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 136, "seek": 71232, "start": 722.48, "end": 724.4000000000001, "text": " So it can save you time.", "tokens": [50872, 407, 309, 393, 3155, 291, 565, 13, 50968], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 137, "seek": 71232, "start": 724.4000000000001, "end": 726.88, "text": " But not at the time you might expect.", "tokens": [50968, 583, 406, 412, 264, 565, 291, 1062, 2066, 13, 51092], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 138, "seek": 71232, "start": 726.88, "end": 728.4000000000001, "text": " That's the quirk.", "tokens": [51092, 663, 311, 264, 421, 18610, 13, 51168], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 139, "seek": 71232, "start": 728.4000000000001, "end": 732.72, "text": " Anyway, so what should we do on the web with Kotlin?", "tokens": [51168, 5684, 11, 370, 437, 820, 321, 360, 322, 264, 3670, 365, 30123, 5045, 30, 51384], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 140, "seek": 71232, "start": 732.72, "end": 738.4000000000001, "text": " Because in my opinion, it doesn't suite all use cases, a lot of them but not all.", "tokens": [51384, 1436, 294, 452, 4800, 11, 309, 1177, 380, 14205, 439, 764, 3331, 11, 257, 688, 295, 552, 457, 406, 439, 13, 51668], "temperature": 0.0, "avg_logprob": -0.23035384197624362, "compression_ratio": 1.5209302325581395, "no_speech_prob": 0.053051676601171494}, {"id": 141, "seek": 73840, "start": 738.4, "end": 743.6, "text": " So first web apps, when I mean web apps, I mean like something where you are not just", "tokens": [50364, 407, 700, 3670, 7733, 11, 562, 286, 914, 3670, 7733, 11, 286, 914, 411, 746, 689, 291, 366, 406, 445, 50624], "temperature": 0.0, "avg_logprob": -0.28709975878397626, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.3155449628829956}, {"id": 142, "seek": 73840, "start": 743.6, "end": 749.64, "text": " going to look at one page but something where you are going to do some interaction, say", "tokens": [50624, 516, 281, 574, 412, 472, 3028, 457, 746, 689, 291, 366, 516, 281, 360, 512, 9285, 11, 584, 50926], "temperature": 0.0, "avg_logprob": -0.28709975878397626, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.3155449628829956}, {"id": 143, "seek": 73840, "start": 749.64, "end": 755.28, "text": " watch a video ad, oh no.", "tokens": [50926, 1159, 257, 960, 614, 11, 1954, 572, 13, 51208], "temperature": 0.0, "avg_logprob": -0.28709975878397626, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.3155449628829956}, {"id": 144, "seek": 73840, "start": 755.28, "end": 759.8, "text": " Web pages with a lot of dynamic logic that can't move to server side.", "tokens": [51208, 9573, 7183, 365, 257, 688, 295, 8546, 9952, 300, 393, 380, 1286, 281, 7154, 1252, 13, 51434], "temperature": 0.0, "avg_logprob": -0.28709975878397626, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.3155449628829956}, {"id": 145, "seek": 75980, "start": 759.8, "end": 765.64, "text": " Kotlin might be a good alternative to do that.", "tokens": [50364, 30123, 5045, 1062, 312, 257, 665, 8535, 281, 360, 300, 13, 50656], "temperature": 0.0, "avg_logprob": -0.17361817536530672, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.4244764447212219}, {"id": 146, "seek": 75980, "start": 765.64, "end": 773.28, "text": " Because when you have a lot of logic, types and correctness is even more important.", "tokens": [50656, 1436, 562, 291, 362, 257, 688, 295, 9952, 11, 3467, 293, 3006, 1287, 307, 754, 544, 1021, 13, 51038], "temperature": 0.0, "avg_logprob": -0.17361817536530672, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.4244764447212219}, {"id": 147, "seek": 75980, "start": 773.28, "end": 779.24, "text": " So you actually, personally I feel less stressed when I do complex logic with programming language", "tokens": [51038, 407, 291, 767, 11, 5665, 286, 841, 1570, 14471, 562, 286, 360, 3997, 9952, 365, 9410, 2856, 51336], "temperature": 0.0, "avg_logprob": -0.17361817536530672, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.4244764447212219}, {"id": 148, "seek": 75980, "start": 779.24, "end": 782.3599999999999, "text": " that checks a lot of things for me.", "tokens": [51336, 300, 13834, 257, 688, 295, 721, 337, 385, 13, 51492], "temperature": 0.0, "avg_logprob": -0.17361817536530672, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.4244764447212219}, {"id": 149, "seek": 75980, "start": 782.3599999999999, "end": 785.3199999999999, "text": " Anything that doesn't have to be less than 300 kilobytes.", "tokens": [51492, 11998, 300, 1177, 380, 362, 281, 312, 1570, 813, 6641, 5128, 996, 43673, 13, 51640], "temperature": 0.0, "avg_logprob": -0.17361817536530672, "compression_ratio": 1.4953703703703705, "no_speech_prob": 0.4244764447212219}, {"id": 150, "seek": 78532, "start": 785.32, "end": 790.44, "text": " If you have video ads, you don't need to be less than 300 kilobytes.", "tokens": [50364, 759, 291, 362, 960, 10342, 11, 291, 500, 380, 643, 281, 312, 1570, 813, 6641, 5128, 996, 43673, 13, 50620], "temperature": 0.0, "avg_logprob": -0.2154031659736008, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.14753331243991852}, {"id": 151, "seek": 78532, "start": 790.44, "end": 794.6400000000001, "text": " Otherwise, if it's a landing page, maybe it's not the best solution, maybe you want to generate", "tokens": [50620, 10328, 11, 498, 309, 311, 257, 11202, 3028, 11, 1310, 309, 311, 406, 264, 1151, 3827, 11, 1310, 291, 528, 281, 8460, 50830], "temperature": 0.0, "avg_logprob": -0.2154031659736008, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.14753331243991852}, {"id": 152, "seek": 78532, "start": 794.6400000000001, "end": 797.7600000000001, "text": " your web page, maybe even with Kotlin code.", "tokens": [50830, 428, 3670, 3028, 11, 1310, 754, 365, 30123, 5045, 3089, 13, 50986], "temperature": 0.0, "avg_logprob": -0.2154031659736008, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.14753331243991852}, {"id": 153, "seek": 78532, "start": 797.7600000000001, "end": 804.0400000000001, "text": " But you don't really want to have a bundle compiled with Kotlin on your landing page.", "tokens": [50986, 583, 291, 500, 380, 534, 528, 281, 362, 257, 24438, 36548, 365, 30123, 5045, 322, 428, 11202, 3028, 13, 51300], "temperature": 0.0, "avg_logprob": -0.2154031659736008, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.14753331243991852}, {"id": 154, "seek": 78532, "start": 804.0400000000001, "end": 807.9200000000001, "text": " But anything further than a landing page, or if your landing page is heavy or all your", "tokens": [51300, 583, 1340, 3052, 813, 257, 11202, 3028, 11, 420, 498, 428, 11202, 3028, 307, 4676, 420, 439, 428, 51494], "temperature": 0.0, "avg_logprob": -0.2154031659736008, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.14753331243991852}, {"id": 155, "seek": 78532, "start": 807.9200000000001, "end": 814.0400000000001, "text": " users have a fast internet, you don't really care, network is cheap when you are lucky", "tokens": [51494, 5022, 362, 257, 2370, 4705, 11, 291, 500, 380, 534, 1127, 11, 3209, 307, 7084, 562, 291, 366, 6356, 51800], "temperature": 0.0, "avg_logprob": -0.2154031659736008, "compression_ratio": 1.8645418326693226, "no_speech_prob": 0.14753331243991852}, {"id": 156, "seek": 81404, "start": 814.04, "end": 815.04, "text": " these days.", "tokens": [50364, 613, 1708, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2178609614469567, "compression_ratio": 1.5330188679245282, "no_speech_prob": 0.15663602948188782}, {"id": 157, "seek": 81404, "start": 815.04, "end": 818.56, "text": " So that's when you're lucky, think about it.", "tokens": [50414, 407, 300, 311, 562, 291, 434, 6356, 11, 519, 466, 309, 13, 50590], "temperature": 0.0, "avg_logprob": -0.2178609614469567, "compression_ratio": 1.5330188679245282, "no_speech_prob": 0.15663602948188782}, {"id": 158, "seek": 81404, "start": 818.56, "end": 822.9599999999999, "text": " You can generate HTML with Kotlin, as I told you, with Kotlin JVM, it's actually the simplest", "tokens": [50590, 509, 393, 8460, 17995, 365, 30123, 5045, 11, 382, 286, 1907, 291, 11, 365, 30123, 5045, 508, 53, 44, 11, 309, 311, 767, 264, 22811, 50810], "temperature": 0.0, "avg_logprob": -0.2178609614469567, "compression_ratio": 1.5330188679245282, "no_speech_prob": 0.15663602948188782}, {"id": 159, "seek": 81404, "start": 822.9599999999999, "end": 823.9599999999999, "text": " way to do it.", "tokens": [50810, 636, 281, 360, 309, 13, 50860], "temperature": 0.0, "avg_logprob": -0.2178609614469567, "compression_ratio": 1.5330188679245282, "no_speech_prob": 0.15663602948188782}, {"id": 160, "seek": 81404, "start": 823.9599999999999, "end": 831.5999999999999, "text": " But there's an API, Kotlin X.html that works on both JVM and JS.", "tokens": [50860, 583, 456, 311, 364, 9362, 11, 30123, 5045, 1783, 13, 357, 15480, 300, 1985, 322, 1293, 508, 53, 44, 293, 33063, 13, 51242], "temperature": 0.0, "avg_logprob": -0.2178609614469567, "compression_ratio": 1.5330188679245282, "no_speech_prob": 0.15663602948188782}, {"id": 161, "seek": 81404, "start": 831.5999999999999, "end": 838.48, "text": " You can also do libraries for Kotlin consumers, complex libraries for TypeScript and JavaScript", "tokens": [51242, 509, 393, 611, 360, 15148, 337, 30123, 5045, 11883, 11, 3997, 15148, 337, 15576, 14237, 293, 15778, 51586], "temperature": 0.0, "avg_logprob": -0.2178609614469567, "compression_ratio": 1.5330188679245282, "no_speech_prob": 0.15663602948188782}, {"id": 162, "seek": 83848, "start": 838.48, "end": 841.48, "text": " consumers also.", "tokens": [50364, 11883, 611, 13, 50514], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 163, "seek": 83848, "start": 841.48, "end": 846.2, "text": " This is a good fit for Kotlin.", "tokens": [50514, 639, 307, 257, 665, 3318, 337, 30123, 5045, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 164, "seek": 83848, "start": 846.2, "end": 852.5600000000001, "text": " And now I want to talk about language design, because I told about Kotlin, but who of you", "tokens": [50750, 400, 586, 286, 528, 281, 751, 466, 2856, 1715, 11, 570, 286, 1907, 466, 30123, 5045, 11, 457, 567, 295, 291, 51068], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 165, "seek": 83848, "start": 852.5600000000001, "end": 857.36, "text": " have ever seen the syntax of Kotlin?", "tokens": [51068, 362, 1562, 1612, 264, 28431, 295, 30123, 5045, 30, 51308], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 166, "seek": 83848, "start": 857.36, "end": 858.36, "text": " Who hasn't?", "tokens": [51308, 2102, 6132, 380, 30, 51358], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 167, "seek": 83848, "start": 858.36, "end": 859.36, "text": " Yeah.", "tokens": [51358, 865, 13, 51408], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 168, "seek": 83848, "start": 859.36, "end": 860.36, "text": " Okay.", "tokens": [51408, 1033, 13, 51458], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 169, "seek": 83848, "start": 860.36, "end": 861.36, "text": " Anyway.", "tokens": [51458, 5684, 13, 51508], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 170, "seek": 83848, "start": 861.36, "end": 865.32, "text": " A lot of curious people in this room.", "tokens": [51508, 316, 688, 295, 6369, 561, 294, 341, 1808, 13, 51706], "temperature": 0.0, "avg_logprob": -0.2905266844196084, "compression_ratio": 1.3651685393258426, "no_speech_prob": 0.013504847884178162}, {"id": 171, "seek": 86532, "start": 865.32, "end": 868.6400000000001, "text": " So basically, if you want to have a variable, you can just write it like this.", "tokens": [50364, 407, 1936, 11, 498, 291, 528, 281, 362, 257, 7006, 11, 291, 393, 445, 2464, 309, 411, 341, 13, 50530], "temperature": 0.0, "avg_logprob": -0.2178789597970468, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.137040913105011}, {"id": 172, "seek": 86532, "start": 868.6400000000001, "end": 871.8000000000001, "text": " You see, we don't declare the type, because we don't need this obvious.", "tokens": [50530, 509, 536, 11, 321, 500, 380, 19710, 264, 2010, 11, 570, 321, 500, 380, 643, 341, 6322, 13, 50688], "temperature": 0.0, "avg_logprob": -0.2178789597970468, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.137040913105011}, {"id": 173, "seek": 86532, "start": 871.8000000000001, "end": 876.48, "text": " It's an integer, 23, what else could it be?", "tokens": [50688, 467, 311, 364, 24922, 11, 6673, 11, 437, 1646, 727, 309, 312, 30, 50922], "temperature": 0.0, "avg_logprob": -0.2178789597970468, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.137040913105011}, {"id": 174, "seek": 86532, "start": 876.48, "end": 884.12, "text": " If you want to increment it like this, it won't compile, because it's an immutable reference,", "tokens": [50922, 759, 291, 528, 281, 26200, 309, 411, 341, 11, 309, 1582, 380, 31413, 11, 570, 309, 311, 364, 3397, 32148, 6408, 11, 51304], "temperature": 0.0, "avg_logprob": -0.2178789597970468, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.137040913105011}, {"id": 175, "seek": 86532, "start": 884.12, "end": 885.12, "text": " Val.", "tokens": [51304, 7188, 13, 51354], "temperature": 0.0, "avg_logprob": -0.2178789597970468, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.137040913105011}, {"id": 176, "seek": 86532, "start": 885.12, "end": 892.6, "text": " As opposed to Val, variable, you can change the value like this, and it will increment.", "tokens": [51354, 1018, 8851, 281, 7188, 11, 7006, 11, 291, 393, 1319, 264, 2158, 411, 341, 11, 293, 309, 486, 26200, 13, 51728], "temperature": 0.0, "avg_logprob": -0.2178789597970468, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.137040913105011}, {"id": 177, "seek": 89260, "start": 892.6, "end": 895.08, "text": " You have functions.", "tokens": [50364, 509, 362, 6828, 13, 50488], "temperature": 0.0, "avg_logprob": -0.2498761890003982, "compression_ratio": 1.5493562231759657, "no_speech_prob": 0.08745354413986206}, {"id": 178, "seek": 89260, "start": 895.08, "end": 903.08, "text": " You write the keyword from, and here if I pass, I don't know, first them to name, then", "tokens": [50488, 509, 2464, 264, 20428, 490, 11, 293, 510, 498, 286, 1320, 11, 286, 500, 380, 458, 11, 700, 552, 281, 1315, 11, 550, 50888], "temperature": 0.0, "avg_logprob": -0.2498761890003982, "compression_ratio": 1.5493562231759657, "no_speech_prob": 0.08745354413986206}, {"id": 179, "seek": 89260, "start": 903.08, "end": 908.64, "text": " it will have welcome back first them, a few years after.", "tokens": [50888, 309, 486, 362, 2928, 646, 700, 552, 11, 257, 1326, 924, 934, 13, 51166], "temperature": 0.0, "avg_logprob": -0.2498761890003982, "compression_ratio": 1.5493562231759657, "no_speech_prob": 0.08745354413986206}, {"id": 180, "seek": 89260, "start": 908.64, "end": 912.32, "text": " And we can actually put it on one line if you want, if it's short enough.", "tokens": [51166, 400, 321, 393, 767, 829, 309, 322, 472, 1622, 498, 291, 528, 11, 498, 309, 311, 2099, 1547, 13, 51350], "temperature": 0.0, "avg_logprob": -0.2498761890003982, "compression_ratio": 1.5493562231759657, "no_speech_prob": 0.08745354413986206}, {"id": 181, "seek": 89260, "start": 912.32, "end": 916.08, "text": " So that's great for our conciseness.", "tokens": [51350, 407, 300, 311, 869, 337, 527, 1588, 11106, 442, 13, 51538], "temperature": 0.0, "avg_logprob": -0.2498761890003982, "compression_ratio": 1.5493562231759657, "no_speech_prob": 0.08745354413986206}, {"id": 182, "seek": 89260, "start": 916.08, "end": 921.72, "text": " Sometimes you just want to give a name to a dumb operation, but you want it to be more", "tokens": [51538, 4803, 291, 445, 528, 281, 976, 257, 1315, 281, 257, 10316, 6916, 11, 457, 291, 528, 309, 281, 312, 544, 51820], "temperature": 0.0, "avg_logprob": -0.2498761890003982, "compression_ratio": 1.5493562231759657, "no_speech_prob": 0.08745354413986206}, {"id": 183, "seek": 92172, "start": 921.72, "end": 927.64, "text": " clear in the code, and we spend more time reading code than writing code usually.", "tokens": [50364, 1850, 294, 264, 3089, 11, 293, 321, 3496, 544, 565, 3760, 3089, 813, 3579, 3089, 2673, 13, 50660], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 184, "seek": 92172, "start": 927.64, "end": 932.2, "text": " You can also omit the type if it can be inferred from the expression after it.", "tokens": [50660, 509, 393, 611, 3406, 270, 264, 2010, 498, 309, 393, 312, 13596, 986, 490, 264, 6114, 934, 309, 13, 50888], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 185, "seek": 92172, "start": 932.2, "end": 936.0400000000001, "text": " Only when it's a one-liner, even though you could have something that has some curly braces,", "tokens": [50888, 5686, 562, 309, 311, 257, 472, 12, 36849, 11, 754, 1673, 291, 727, 362, 746, 300, 575, 512, 32066, 41537, 11, 51080], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 186, "seek": 92172, "start": 936.0400000000001, "end": 939.28, "text": " it has to be like an entire expression.", "tokens": [51080, 309, 575, 281, 312, 411, 364, 2302, 6114, 13, 51242], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 187, "seek": 92172, "start": 939.28, "end": 945.24, "text": " You cannot have multiple expressions or statements if you want to omit the types.", "tokens": [51242, 509, 2644, 362, 3866, 15277, 420, 12363, 498, 291, 528, 281, 3406, 270, 264, 3467, 13, 51540], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 188, "seek": 92172, "start": 945.24, "end": 946.24, "text": " You can make a class.", "tokens": [51540, 509, 393, 652, 257, 1508, 13, 51590], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 189, "seek": 92172, "start": 946.24, "end": 947.8000000000001, "text": " This actually compiles.", "tokens": [51590, 639, 767, 715, 4680, 13, 51668], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 190, "seek": 92172, "start": 947.8000000000001, "end": 950.8000000000001, "text": " If you want to put something in it, you can add parenthesis.", "tokens": [51668, 759, 291, 528, 281, 829, 746, 294, 309, 11, 291, 393, 909, 23350, 9374, 13, 51818], "temperature": 0.0, "avg_logprob": -0.18032217782641213, "compression_ratio": 1.7851851851851852, "no_speech_prob": 0.006665019318461418}, {"id": 191, "seek": 95080, "start": 950.8, "end": 952.8399999999999, "text": " And now it's a data holder.", "tokens": [50364, 400, 586, 309, 311, 257, 1412, 20349, 13, 50466], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 192, "seek": 95080, "start": 952.8399999999999, "end": 958.1999999999999, "text": " Usually we write it like this for indentation, but it's not mandatory.", "tokens": [50466, 11419, 321, 2464, 309, 411, 341, 337, 44494, 399, 11, 457, 309, 311, 406, 22173, 13, 50734], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 193, "seek": 95080, "start": 958.1999999999999, "end": 959.1999999999999, "text": " It will still compile.", "tokens": [50734, 467, 486, 920, 31413, 13, 50784], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 194, "seek": 95080, "start": 959.1999999999999, "end": 962.8399999999999, "text": " It's not Python common.", "tokens": [50784, 467, 311, 406, 15329, 2689, 13, 50966], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 195, "seek": 95080, "start": 962.8399999999999, "end": 965.68, "text": " You can also add the data keyword.", "tokens": [50966, 509, 393, 611, 909, 264, 1412, 20428, 13, 51108], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 196, "seek": 95080, "start": 965.68, "end": 970.9599999999999, "text": " So the data keyword can come handy when you want to have the equals implementation based", "tokens": [51108, 407, 264, 1412, 20428, 393, 808, 13239, 562, 291, 528, 281, 362, 264, 6915, 11420, 2361, 51372], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 197, "seek": 95080, "start": 970.9599999999999, "end": 975.3199999999999, "text": " not on the identity of the object, but on the content.", "tokens": [51372, 406, 322, 264, 6575, 295, 264, 2657, 11, 457, 322, 264, 2701, 13, 51590], "temperature": 0.0, "avg_logprob": -0.20298881964250046, "compression_ratio": 1.5804878048780489, "no_speech_prob": 0.011737600900232792}, {"id": 198, "seek": 97532, "start": 975.32, "end": 981.6800000000001, "text": " Say if you use a hash map, for example, then if you make a copy, but it's still exactly", "tokens": [50364, 6463, 498, 291, 764, 257, 22019, 4471, 11, 337, 1365, 11, 550, 498, 291, 652, 257, 5055, 11, 457, 309, 311, 920, 2293, 50682], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 199, "seek": 97532, "start": 981.6800000000001, "end": 985.48, "text": " the same, somehow you make a copy in your program because it's complex, then the key", "tokens": [50682, 264, 912, 11, 6063, 291, 652, 257, 5055, 294, 428, 1461, 570, 309, 311, 3997, 11, 550, 264, 2141, 50872], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 200, "seek": 97532, "start": 985.48, "end": 986.48, "text": " will match.", "tokens": [50872, 486, 2995, 13, 50922], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 201, "seek": 97532, "start": 986.48, "end": 991.72, "text": " But if you don't use data and you still want that behavior, you have to implement or let", "tokens": [50922, 583, 498, 291, 500, 380, 764, 1412, 293, 291, 920, 528, 300, 5223, 11, 291, 362, 281, 4445, 420, 718, 51184], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 202, "seek": 97532, "start": 991.72, "end": 994.0, "text": " the IDE implement the equals function.", "tokens": [51184, 264, 40930, 4445, 264, 6915, 2445, 13, 51298], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 203, "seek": 97532, "start": 994.0, "end": 998.72, "text": " There's also hash code that speeds up dictionary operations.", "tokens": [51298, 821, 311, 611, 22019, 3089, 300, 16411, 493, 25890, 7705, 13, 51534], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 204, "seek": 97532, "start": 998.72, "end": 1001.8000000000001, "text": " And there's two strings when you want to log the content.", "tokens": [51534, 400, 456, 311, 732, 13985, 562, 291, 528, 281, 3565, 264, 2701, 13, 51688], "temperature": 0.0, "avg_logprob": -0.17081921441214426, "compression_ratio": 1.7035573122529644, "no_speech_prob": 0.03957244008779526}, {"id": 205, "seek": 100180, "start": 1001.8, "end": 1008.0, "text": " So data keyword, you just add this, and the compiler implements the thing.", "tokens": [50364, 407, 1412, 20428, 11, 291, 445, 909, 341, 11, 293, 264, 31958, 704, 17988, 264, 551, 13, 50674], "temperature": 0.0, "avg_logprob": -0.21167254447937012, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.004410393536090851}, {"id": 206, "seek": 100180, "start": 1008.0, "end": 1009.0, "text": " You can make it open.", "tokens": [50674, 509, 393, 652, 309, 1269, 13, 50724], "temperature": 0.0, "avg_logprob": -0.21167254447937012, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.004410393536090851}, {"id": 207, "seek": 100180, "start": 1009.0, "end": 1012.5999999999999, "text": " By default, they are not open, the classes, so you cannot subclass them because usually", "tokens": [50724, 3146, 7576, 11, 436, 366, 406, 1269, 11, 264, 5359, 11, 370, 291, 2644, 1422, 11665, 552, 570, 2673, 50904], "temperature": 0.0, "avg_logprob": -0.21167254447937012, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.004410393536090851}, {"id": 208, "seek": 100180, "start": 1012.5999999999999, "end": 1019.8, "text": " people didn't really want their class to be subclass, so yeah.", "tokens": [50904, 561, 994, 380, 534, 528, 641, 1508, 281, 312, 1422, 11665, 11, 370, 1338, 13, 51264], "temperature": 0.0, "avg_logprob": -0.21167254447937012, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.004410393536090851}, {"id": 209, "seek": 100180, "start": 1019.8, "end": 1023.3199999999999, "text": " And then you can have a subclass like this.", "tokens": [51264, 400, 550, 291, 393, 362, 257, 1422, 11665, 411, 341, 13, 51440], "temperature": 0.0, "avg_logprob": -0.21167254447937012, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.004410393536090851}, {"id": 210, "seek": 100180, "start": 1023.3199999999999, "end": 1027.36, "text": " Then this is how you can implement an interface and override a function.", "tokens": [51440, 1396, 341, 307, 577, 291, 393, 4445, 364, 9226, 293, 42321, 257, 2445, 13, 51642], "temperature": 0.0, "avg_logprob": -0.21167254447937012, "compression_ratio": 1.6774193548387097, "no_speech_prob": 0.004410393536090851}, {"id": 211, "seek": 102736, "start": 1027.36, "end": 1032.24, "text": " If it was comparable, if it was a class, you would have parenthesis next to it, but otherwise", "tokens": [50364, 759, 309, 390, 25323, 11, 498, 309, 390, 257, 1508, 11, 291, 576, 362, 23350, 9374, 958, 281, 309, 11, 457, 5911, 50608], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 212, "seek": 102736, "start": 1032.24, "end": 1035.9599999999998, "text": " it's exactly the same syntax, same principle of inheritance.", "tokens": [50608, 309, 311, 2293, 264, 912, 28431, 11, 912, 8665, 295, 32122, 13, 50794], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 213, "seek": 102736, "start": 1035.9599999999998, "end": 1040.76, "text": " There's the handy to-do function when you want your code to compile, but you are not", "tokens": [50794, 821, 311, 264, 13239, 281, 12, 2595, 2445, 562, 291, 528, 428, 3089, 281, 31413, 11, 457, 291, 366, 406, 51034], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 214, "seek": 102736, "start": 1040.76, "end": 1041.76, "text": " done yet.", "tokens": [51034, 1096, 1939, 13, 51084], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 215, "seek": 102736, "start": 1041.76, "end": 1047.7199999999998, "text": " So if it actually runs that function, it will crash, but maybe you can see if the plane", "tokens": [51084, 407, 498, 309, 767, 6676, 300, 2445, 11, 309, 486, 8252, 11, 457, 1310, 291, 393, 536, 498, 264, 5720, 51382], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 216, "seek": 102736, "start": 1047.7199999999998, "end": 1049.6399999999999, "text": " is able to take off.", "tokens": [51382, 307, 1075, 281, 747, 766, 13, 51478], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 217, "seek": 102736, "start": 1049.6399999999999, "end": 1054.6399999999999, "text": " And then it's very easy to find back the to-do calls because you control or command click", "tokens": [51478, 400, 550, 309, 311, 588, 1858, 281, 915, 646, 264, 281, 12, 2595, 5498, 570, 291, 1969, 420, 5622, 2052, 51728], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 218, "seek": 102736, "start": 1054.6399999999999, "end": 1055.6399999999999, "text": " on to-do.", "tokens": [51728, 322, 281, 12, 2595, 13, 51778], "temperature": 0.0, "avg_logprob": -0.1709526909722222, "compression_ratio": 1.6776556776556777, "no_speech_prob": 0.10381568223237991}, {"id": 219, "seek": 105564, "start": 1055.88, "end": 1058.68, "text": " It will take you to the declaration, and if you do it back at the declaration site, it", "tokens": [50376, 467, 486, 747, 291, 281, 264, 27606, 11, 293, 498, 291, 360, 309, 646, 412, 264, 27606, 3621, 11, 309, 50516], "temperature": 0.0, "avg_logprob": -0.21852689743041992, "compression_ratio": 1.6609442060085837, "no_speech_prob": 0.012923321686685085}, {"id": 220, "seek": 105564, "start": 1058.68, "end": 1062.16, "text": " will show you all the usages in your project.", "tokens": [50516, 486, 855, 291, 439, 264, 505, 1660, 294, 428, 1716, 13, 50690], "temperature": 0.0, "avg_logprob": -0.21852689743041992, "compression_ratio": 1.6609442060085837, "no_speech_prob": 0.012923321686685085}, {"id": 221, "seek": 105564, "start": 1062.16, "end": 1070.72, "text": " A few cool language tutorials, null safety, nullable types, and null pointer exception", "tokens": [50690, 316, 1326, 1627, 2856, 17616, 11, 18184, 4514, 11, 18184, 712, 3467, 11, 293, 18184, 23918, 11183, 51118], "temperature": 0.0, "avg_logprob": -0.21852689743041992, "compression_ratio": 1.6609442060085837, "no_speech_prob": 0.012923321686685085}, {"id": 222, "seek": 105564, "start": 1070.72, "end": 1080.44, "text": " safe equals, so it's kind of type error when you try to add an integer, but it's not initialized.", "tokens": [51118, 3273, 6915, 11, 370, 309, 311, 733, 295, 2010, 6713, 562, 291, 853, 281, 909, 364, 24922, 11, 457, 309, 311, 406, 5883, 1602, 13, 51604], "temperature": 0.0, "avg_logprob": -0.21852689743041992, "compression_ratio": 1.6609442060085837, "no_speech_prob": 0.012923321686685085}, {"id": 223, "seek": 105564, "start": 1080.44, "end": 1083.64, "text": " And for example, this doesn't compile because string is not nullable.", "tokens": [51604, 400, 337, 1365, 11, 341, 1177, 380, 31413, 570, 6798, 307, 406, 18184, 712, 13, 51764], "temperature": 0.0, "avg_logprob": -0.21852689743041992, "compression_ratio": 1.6609442060085837, "no_speech_prob": 0.012923321686685085}, {"id": 224, "seek": 108364, "start": 1083.64, "end": 1088.0800000000002, "text": " If you want it to be nullable, you have to add the question mark here.", "tokens": [50364, 759, 291, 528, 309, 281, 312, 18184, 712, 11, 291, 362, 281, 909, 264, 1168, 1491, 510, 13, 50586], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 225, "seek": 108364, "start": 1088.0800000000002, "end": 1090.72, "text": " And now this can compile.", "tokens": [50586, 400, 586, 341, 393, 31413, 13, 50718], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 226, "seek": 108364, "start": 1090.72, "end": 1096.88, "text": " But this doesn't compile, again, because greeting might be null, and actually you set it to", "tokens": [50718, 583, 341, 1177, 380, 31413, 11, 797, 11, 570, 28174, 1062, 312, 18184, 11, 293, 767, 291, 992, 309, 281, 51026], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 227, "seek": 108364, "start": 1096.88, "end": 1097.88, "text": " null.", "tokens": [51026, 18184, 13, 51076], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 228, "seek": 108364, "start": 1097.88, "end": 1101.92, "text": " And even if you remove that, it still doesn't compile because you explicitly stated that", "tokens": [51076, 400, 754, 498, 291, 4159, 300, 11, 309, 920, 1177, 380, 31413, 570, 291, 20803, 11323, 300, 51278], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 229, "seek": 108364, "start": 1101.92, "end": 1105.72, "text": " the type was nullable.", "tokens": [51278, 264, 2010, 390, 18184, 712, 13, 51468], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 230, "seek": 108364, "start": 1105.72, "end": 1110.92, "text": " But this, with the question mark before the call, it becomes its name is safe call, and", "tokens": [51468, 583, 341, 11, 365, 264, 1168, 1491, 949, 264, 818, 11, 309, 3643, 1080, 1315, 307, 3273, 818, 11, 293, 51728], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 231, "seek": 108364, "start": 1110.92, "end": 1111.92, "text": " this compiles.", "tokens": [51728, 341, 715, 4680, 13, 51778], "temperature": 0.0, "avg_logprob": -0.17665527962349556, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0036611335817724466}, {"id": 232, "seek": 111192, "start": 1111.92, "end": 1118.48, "text": " If there's no value, if string is put to null, then you won't get null instead, or it will", "tokens": [50364, 759, 456, 311, 572, 2158, 11, 498, 6798, 307, 829, 281, 18184, 11, 550, 291, 1582, 380, 483, 18184, 2602, 11, 420, 309, 486, 50692], "temperature": 0.0, "avg_logprob": -0.2774421175320943, "compression_ratio": 1.5639810426540284, "no_speech_prob": 0.0038868968840688467}, {"id": 233, "seek": 111192, "start": 1118.48, "end": 1121.88, "text": " just skip the function call.", "tokens": [50692, 445, 10023, 264, 2445, 818, 13, 50862], "temperature": 0.0, "avg_logprob": -0.2774421175320943, "compression_ratio": 1.5639810426540284, "no_speech_prob": 0.0038868968840688467}, {"id": 234, "seek": 111192, "start": 1121.88, "end": 1126.52, "text": " You can also crash a program in case it wasn't null, so in this case, it will work fine because", "tokens": [50862, 509, 393, 611, 8252, 257, 1461, 294, 1389, 309, 2067, 380, 18184, 11, 370, 294, 341, 1389, 11, 309, 486, 589, 2489, 570, 51094], "temperature": 0.0, "avg_logprob": -0.2774421175320943, "compression_ratio": 1.5639810426540284, "no_speech_prob": 0.0038868968840688467}, {"id": 235, "seek": 111192, "start": 1126.52, "end": 1129.52, "text": " hello world is there.", "tokens": [51094, 7751, 1002, 307, 456, 13, 51244], "temperature": 0.0, "avg_logprob": -0.2774421175320943, "compression_ratio": 1.5639810426540284, "no_speech_prob": 0.0038868968840688467}, {"id": 236, "seek": 111192, "start": 1129.52, "end": 1134.8000000000002, "text": " But if you add null, it compiles again, but it crashes at runtime.", "tokens": [51244, 583, 498, 291, 909, 18184, 11, 309, 715, 4680, 797, 11, 457, 309, 28642, 412, 34474, 13, 51508], "temperature": 0.0, "avg_logprob": -0.2774421175320943, "compression_ratio": 1.5639810426540284, "no_speech_prob": 0.0038868968840688467}, {"id": 237, "seek": 111192, "start": 1134.8000000000002, "end": 1137.4, "text": " But you wanted it, right?", "tokens": [51508, 583, 291, 1415, 309, 11, 558, 30, 51638], "temperature": 0.0, "avg_logprob": -0.2774421175320943, "compression_ratio": 1.5639810426540284, "no_speech_prob": 0.0038868968840688467}, {"id": 238, "seek": 113740, "start": 1138.4, "end": 1147.24, "text": " This doesn't compile because the type is int, but it returns int question mark.", "tokens": [50414, 639, 1177, 380, 31413, 570, 264, 2010, 307, 560, 11, 457, 309, 11247, 560, 1168, 1491, 13, 50856], "temperature": 0.0, "avg_logprob": -0.18699548358008974, "compression_ratio": 1.4927536231884058, "no_speech_prob": 0.029322106391191483}, {"id": 239, "seek": 113740, "start": 1147.24, "end": 1149.8000000000002, "text": " But you can also use the Elvis operator.", "tokens": [50856, 583, 291, 393, 611, 764, 264, 39944, 12973, 13, 50984], "temperature": 0.0, "avg_logprob": -0.18699548358008974, "compression_ratio": 1.4927536231884058, "no_speech_prob": 0.029322106391191483}, {"id": 240, "seek": 113740, "start": 1149.8000000000002, "end": 1154.92, "text": " If you turn it 90 degrees, it looks a bit like Elvis haircut.", "tokens": [50984, 759, 291, 1261, 309, 4289, 5310, 11, 309, 1542, 257, 857, 411, 39944, 30328, 13, 51240], "temperature": 0.0, "avg_logprob": -0.18699548358008974, "compression_ratio": 1.4927536231884058, "no_speech_prob": 0.029322106391191483}, {"id": 241, "seek": 113740, "start": 1154.92, "end": 1160.76, "text": " And so when the first part is null, then you get the expression after.", "tokens": [51240, 400, 370, 562, 264, 700, 644, 307, 18184, 11, 550, 291, 483, 264, 6114, 934, 13, 51532], "temperature": 0.0, "avg_logprob": -0.18699548358008974, "compression_ratio": 1.4927536231884058, "no_speech_prob": 0.029322106391191483}, {"id": 242, "seek": 113740, "start": 1160.76, "end": 1166.6000000000001, "text": " Don't overuse it, but it's quite cool for search cases.", "tokens": [51532, 1468, 380, 670, 438, 309, 11, 457, 309, 311, 1596, 1627, 337, 3164, 3331, 13, 51824], "temperature": 0.0, "avg_logprob": -0.18699548358008974, "compression_ratio": 1.4927536231884058, "no_speech_prob": 0.029322106391191483}, {"id": 243, "seek": 116660, "start": 1166.6, "end": 1173.9599999999998, "text": " The equals, equals checks for equals, and doesn't check for identity, like in Java.", "tokens": [50364, 440, 6915, 11, 6915, 13834, 337, 6915, 11, 293, 1177, 380, 1520, 337, 6575, 11, 411, 294, 10745, 13, 50732], "temperature": 0.0, "avg_logprob": -0.18700916967659353, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.06124001741409302}, {"id": 244, "seek": 116660, "start": 1173.9599999999998, "end": 1178.8799999999999, "text": " So this is similar to this code in Java if you compile for the JBM.", "tokens": [50732, 407, 341, 307, 2531, 281, 341, 3089, 294, 10745, 498, 291, 31413, 337, 264, 508, 18345, 13, 50978], "temperature": 0.0, "avg_logprob": -0.18700916967659353, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.06124001741409302}, {"id": 245, "seek": 116660, "start": 1178.8799999999999, "end": 1182.48, "text": " And if you add a triple equals, then it's comparing the identity.", "tokens": [50978, 400, 498, 291, 909, 257, 15508, 6915, 11, 550, 309, 311, 15763, 264, 6575, 13, 51158], "temperature": 0.0, "avg_logprob": -0.18700916967659353, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.06124001741409302}, {"id": 246, "seek": 116660, "start": 1182.48, "end": 1185.56, "text": " And in Java, that's a double equals.", "tokens": [51158, 400, 294, 10745, 11, 300, 311, 257, 3834, 6915, 13, 51312], "temperature": 0.0, "avg_logprob": -0.18700916967659353, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.06124001741409302}, {"id": 247, "seek": 116660, "start": 1185.56, "end": 1187.76, "text": " We think it makes more sense the way it's done in Kotlin.", "tokens": [51312, 492, 519, 309, 1669, 544, 2020, 264, 636, 309, 311, 1096, 294, 30123, 5045, 13, 51422], "temperature": 0.0, "avg_logprob": -0.18700916967659353, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.06124001741409302}, {"id": 248, "seek": 116660, "start": 1187.76, "end": 1193.08, "text": " I think it's very similar to what's done in JavaScript, in a way.", "tokens": [51422, 286, 519, 309, 311, 588, 2531, 281, 437, 311, 1096, 294, 15778, 11, 294, 257, 636, 13, 51688], "temperature": 0.0, "avg_logprob": -0.18700916967659353, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.06124001741409302}, {"id": 249, "seek": 119308, "start": 1193.08, "end": 1195.56, "text": " And if both values are null, it doesn't crash.", "tokens": [50364, 400, 498, 1293, 4190, 366, 18184, 11, 309, 1177, 380, 8252, 13, 50488], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 250, "seek": 119308, "start": 1195.56, "end": 1197.6, "text": " It won't try to call equals on a null object.", "tokens": [50488, 467, 1582, 380, 853, 281, 818, 6915, 322, 257, 18184, 2657, 13, 50590], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 251, "seek": 119308, "start": 1197.6, "end": 1199.32, "text": " It will see, oh, both are null.", "tokens": [50590, 467, 486, 536, 11, 1954, 11, 1293, 366, 18184, 13, 50676], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 252, "seek": 119308, "start": 1199.32, "end": 1200.32, "text": " Okay.", "tokens": [50676, 1033, 13, 50726], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 253, "seek": 119308, "start": 1200.32, "end": 1203.3999999999999, "text": " One is null, one is not equal.", "tokens": [50726, 1485, 307, 18184, 11, 472, 307, 406, 2681, 13, 50880], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 254, "seek": 119308, "start": 1203.3999999999999, "end": 1207.0, "text": " Seems more intuitive when you say it like this, I think.", "tokens": [50880, 22524, 544, 21769, 562, 291, 584, 309, 411, 341, 11, 286, 519, 13, 51060], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 255, "seek": 119308, "start": 1207.0, "end": 1208.08, "text": " Other things are properties.", "tokens": [51060, 5358, 721, 366, 7221, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 256, "seek": 119308, "start": 1208.08, "end": 1211.8, "text": " So val and var, if you put it in a class, those are properties.", "tokens": [51114, 407, 1323, 293, 1374, 11, 498, 291, 829, 309, 294, 257, 1508, 11, 729, 366, 7221, 13, 51300], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 257, "seek": 119308, "start": 1211.8, "end": 1214.36, "text": " Otherwise, they are local properties if they are not in a class.", "tokens": [51300, 10328, 11, 436, 366, 2654, 7221, 498, 436, 366, 406, 294, 257, 1508, 13, 51428], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 258, "seek": 119308, "start": 1214.36, "end": 1218.48, "text": " And so they are similar to fields, but they also include getters and setters.", "tokens": [51428, 400, 370, 436, 366, 2531, 281, 7909, 11, 457, 436, 611, 4090, 483, 1559, 293, 992, 1559, 13, 51634], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 259, "seek": 119308, "start": 1218.48, "end": 1220.12, "text": " And they can be delegated.", "tokens": [51634, 400, 436, 393, 312, 15824, 770, 13, 51716], "temperature": 0.0, "avg_logprob": -0.2479973906403655, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04365645349025726}, {"id": 260, "seek": 122012, "start": 1220.12, "end": 1223.4399999999998, "text": " You can Google for Kotlin delegated properties if you want to find out more.", "tokens": [50364, 509, 393, 3329, 337, 30123, 5045, 15824, 770, 7221, 498, 291, 528, 281, 915, 484, 544, 13, 50530], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 261, "seek": 122012, "start": 1223.4399999999998, "end": 1229.84, "text": " But basically, it helps you to not repeat the get and set on and on.", "tokens": [50530, 583, 1936, 11, 309, 3665, 291, 281, 406, 7149, 264, 483, 293, 992, 322, 293, 322, 13, 50850], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 262, "seek": 122012, "start": 1229.84, "end": 1232.28, "text": " So properties, these are properties.", "tokens": [50850, 407, 7221, 11, 613, 366, 7221, 13, 50972], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 263, "seek": 122012, "start": 1232.28, "end": 1237.28, "text": " You can specify the type or not, then it infers whatever the expression is.", "tokens": [50972, 509, 393, 16500, 264, 2010, 420, 406, 11, 550, 309, 1536, 433, 2035, 264, 6114, 307, 13, 51222], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 264, "seek": 122012, "start": 1237.28, "end": 1240.7199999999998, "text": " This is a custom getter and setter.", "tokens": [51222, 639, 307, 257, 2375, 483, 391, 293, 992, 391, 13, 51394], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 265, "seek": 122012, "start": 1240.7199999999998, "end": 1245.6799999999998, "text": " And if you type get or set in the ID, it will suggest you the right curly braces to make", "tokens": [51394, 400, 498, 291, 2010, 483, 420, 992, 294, 264, 7348, 11, 309, 486, 3402, 291, 264, 558, 32066, 41537, 281, 652, 51642], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 266, "seek": 122012, "start": 1245.6799999999998, "end": 1246.9199999999998, "text": " it work.", "tokens": [51642, 309, 589, 13, 51704], "temperature": 0.0, "avg_logprob": -0.24609239013106735, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.007301972713321447}, {"id": 267, "seek": 124692, "start": 1246.92, "end": 1251.68, "text": " And there's also extension functions, which are static methods, kind of like instance", "tokens": [50364, 400, 456, 311, 611, 10320, 6828, 11, 597, 366, 13437, 7150, 11, 733, 295, 411, 5197, 50602], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 268, "seek": 124692, "start": 1251.68, "end": 1254.28, "text": " method when you call them, but you don't need to edit the class.", "tokens": [50602, 3170, 562, 291, 818, 552, 11, 457, 291, 500, 380, 643, 281, 8129, 264, 1508, 13, 50732], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 269, "seek": 124692, "start": 1254.28, "end": 1260.24, "text": " So it works on any type, including integer, which is built in Kotlin, right, into whatever", "tokens": [50732, 407, 309, 1985, 322, 604, 2010, 11, 3009, 24922, 11, 597, 307, 3094, 294, 30123, 5045, 11, 558, 11, 666, 2035, 51030], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 270, "seek": 124692, "start": 1260.24, "end": 1261.76, "text": " platform is behind.", "tokens": [51030, 3663, 307, 2261, 13, 51106], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 271, "seek": 124692, "start": 1261.76, "end": 1266.48, "text": " So this allows you to have ease even on any integer where the distinction is visible or", "tokens": [51106, 407, 341, 4045, 291, 281, 362, 12708, 754, 322, 604, 24922, 689, 264, 16844, 307, 8974, 420, 51342], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 272, "seek": 124692, "start": 1266.48, "end": 1270.04, "text": " imported.", "tokens": [51342, 25524, 13, 51520], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 273, "seek": 124692, "start": 1270.04, "end": 1273.72, "text": " You can use it like this, three dot ease even, it works.", "tokens": [51520, 509, 393, 764, 309, 411, 341, 11, 1045, 5893, 12708, 754, 11, 309, 1985, 13, 51704], "temperature": 0.0, "avg_logprob": -0.21276261873334368, "compression_ratio": 1.6442687747035574, "no_speech_prob": 0.010125908069312572}, {"id": 274, "seek": 127372, "start": 1273.72, "end": 1275.44, "text": " I think I'm out of time.", "tokens": [50364, 286, 519, 286, 478, 484, 295, 565, 13, 50450], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 275, "seek": 127372, "start": 1275.44, "end": 1277.32, "text": " Maybe I have one extra minute.", "tokens": [50450, 2704, 286, 362, 472, 2857, 3456, 13, 50544], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 276, "seek": 127372, "start": 1277.32, "end": 1283.8, "text": " Okay, few seconds.", "tokens": [50544, 1033, 11, 1326, 3949, 13, 50868], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 277, "seek": 127372, "start": 1283.8, "end": 1289.3600000000001, "text": " I want to show higher order functions, so you can pass a function.", "tokens": [50868, 286, 528, 281, 855, 2946, 1668, 6828, 11, 370, 291, 393, 1320, 257, 2445, 13, 51146], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 278, "seek": 127372, "start": 1289.3600000000001, "end": 1292.1200000000001, "text": " And I guess some of you are familiar with lemdas.", "tokens": [51146, 400, 286, 2041, 512, 295, 291, 366, 4963, 365, 7495, 27476, 13, 51284], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 279, "seek": 127372, "start": 1292.1200000000001, "end": 1295.84, "text": " So higher order functions are functions that take lemdas.", "tokens": [51284, 407, 2946, 1668, 6828, 366, 6828, 300, 747, 7495, 27476, 13, 51470], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 280, "seek": 127372, "start": 1295.84, "end": 1299.08, "text": " And in Kotlin, they can be in line.", "tokens": [51470, 400, 294, 30123, 5045, 11, 436, 393, 312, 294, 1622, 13, 51632], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 281, "seek": 127372, "start": 1299.08, "end": 1301.24, "text": " And so this is a lemda.", "tokens": [51632, 400, 370, 341, 307, 257, 7495, 2675, 13, 51740], "temperature": 0.0, "avg_logprob": -0.23938885738975124, "compression_ratio": 1.5846153846153845, "no_speech_prob": 0.007287753280252218}, {"id": 282, "seek": 130124, "start": 1301.24, "end": 1303.8, "text": " This is a lemda, so it's just curly braces.", "tokens": [50364, 639, 307, 257, 7495, 2675, 11, 370, 309, 311, 445, 32066, 41537, 13, 50492], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 283, "seek": 130124, "start": 1303.8, "end": 1307.72, "text": " And whenever you see curly braces, it's not just a function, it's a lemda.", "tokens": [50492, 400, 5699, 291, 536, 32066, 41537, 11, 309, 311, 406, 445, 257, 2445, 11, 309, 311, 257, 7495, 2675, 13, 50688], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 284, "seek": 130124, "start": 1307.72, "end": 1314.16, "text": " You can also check types, but you don't have to cast again, like you would in Java.", "tokens": [50688, 509, 393, 611, 1520, 3467, 11, 457, 291, 500, 380, 362, 281, 4193, 797, 11, 411, 291, 576, 294, 10745, 13, 51010], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 285, "seek": 130124, "start": 1314.16, "end": 1318.28, "text": " And string templates, if you want to use a variable, you don't have to do concatenation.", "tokens": [51010, 400, 6798, 21165, 11, 498, 291, 528, 281, 764, 257, 7006, 11, 291, 500, 380, 362, 281, 360, 1588, 7186, 399, 13, 51216], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 286, "seek": 130124, "start": 1318.28, "end": 1322.16, "text": " You just use dollar and put the name of the variable.", "tokens": [51216, 509, 445, 764, 7241, 293, 829, 264, 1315, 295, 264, 7006, 13, 51410], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 287, "seek": 130124, "start": 1322.16, "end": 1325.04, "text": " Anyway, the entire content is here.", "tokens": [51410, 5684, 11, 264, 2302, 2701, 307, 510, 13, 51554], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 288, "seek": 130124, "start": 1325.04, "end": 1327.28, "text": " I think I said the most important thing.", "tokens": [51554, 286, 519, 286, 848, 264, 881, 1021, 551, 13, 51666], "temperature": 0.0, "avg_logprob": -0.19613781448238152, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.006986833643168211}, {"id": 289, "seek": 132728, "start": 1327.28, "end": 1335.8799999999999, "text": " You can flash that QR code and go on speakerdeck.com, my handle, and you will find the presentation", "tokens": [50364, 509, 393, 7319, 300, 32784, 3089, 293, 352, 322, 8145, 1479, 547, 13, 1112, 11, 452, 4813, 11, 293, 291, 486, 915, 264, 5860, 50794], "temperature": 0.0, "avg_logprob": -0.2674343557918773, "compression_ratio": 1.5073170731707317, "no_speech_prob": 0.026485048234462738}, {"id": 290, "seek": 132728, "start": 1335.8799999999999, "end": 1342.76, "text": " with all the links, including some links if you want to get started if you never try Kotlin.", "tokens": [50794, 365, 439, 264, 6123, 11, 3009, 512, 6123, 498, 291, 528, 281, 483, 1409, 498, 291, 1128, 853, 30123, 5045, 13, 51138], "temperature": 0.0, "avg_logprob": -0.2674343557918773, "compression_ratio": 1.5073170731707317, "no_speech_prob": 0.026485048234462738}, {"id": 291, "seek": 132728, "start": 1342.76, "end": 1345.76, "text": " Thank you.", "tokens": [51138, 1044, 291, 13, 51288], "temperature": 0.0, "avg_logprob": -0.2674343557918773, "compression_ratio": 1.5073170731707317, "no_speech_prob": 0.026485048234462738}, {"id": 292, "seek": 132728, "start": 1345.76, "end": 1352.36, "text": " So we have time for one or two questions.", "tokens": [51288, 407, 321, 362, 565, 337, 472, 420, 732, 1651, 13, 51618], "temperature": 0.0, "avg_logprob": -0.2674343557918773, "compression_ratio": 1.5073170731707317, "no_speech_prob": 0.026485048234462738}, {"id": 293, "seek": 132728, "start": 1352.36, "end": 1357.24, "text": " And I'll ask the first question, which is for the next speaker.", "tokens": [51618, 400, 286, 603, 1029, 264, 700, 1168, 11, 597, 307, 337, 264, 958, 8145, 13, 51862], "temperature": 0.0, "avg_logprob": -0.2674343557918773, "compression_ratio": 1.5073170731707317, "no_speech_prob": 0.026485048234462738}, {"id": 294, "seek": 135724, "start": 1357.36, "end": 1359.36, "text": " Are you here?", "tokens": [50370, 2014, 291, 510, 30, 50470], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 295, "seek": 135724, "start": 1359.36, "end": 1361.36, "text": " Okay, so you don't have to move.", "tokens": [50470, 1033, 11, 370, 291, 500, 380, 362, 281, 1286, 13, 50570], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 296, "seek": 135724, "start": 1361.36, "end": 1364.36, "text": " Next question then.", "tokens": [50570, 3087, 1168, 550, 13, 50720], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 297, "seek": 135724, "start": 1364.36, "end": 1367.36, "text": " You raise your hand, I run to you with the mic.", "tokens": [50720, 509, 5300, 428, 1011, 11, 286, 1190, 281, 291, 365, 264, 3123, 13, 50870], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 298, "seek": 135724, "start": 1367.36, "end": 1377.36, "text": " I can't dust it because it's dangerous.", "tokens": [50870, 286, 393, 380, 8634, 309, 570, 309, 311, 5795, 13, 51370], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 299, "seek": 135724, "start": 1377.36, "end": 1383.36, "text": " Okay, so you mentioned the Kotlin X HTML, right?", "tokens": [51370, 1033, 11, 370, 291, 2835, 264, 30123, 5045, 1783, 17995, 11, 558, 30, 51670], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 300, "seek": 135724, "start": 1383.36, "end": 1386.36, "text": " So is that something like for CSS?", "tokens": [51670, 407, 307, 300, 746, 411, 337, 24387, 30, 51820], "temperature": 0.0, "avg_logprob": -0.3783720701168745, "compression_ratio": 1.3757225433526012, "no_speech_prob": 0.037665728479623795}, {"id": 301, "seek": 138636, "start": 1386.4799999999998, "end": 1393.4799999999998, "text": " I think there's like Kotlin X CSS for extensions also for JavaScript.", "tokens": [50370, 286, 519, 456, 311, 411, 30123, 5045, 1783, 24387, 337, 25129, 611, 337, 15778, 13, 50720], "temperature": 0.0, "avg_logprob": -0.20416048521636634, "compression_ratio": 1.5133928571428572, "no_speech_prob": 0.027366092428565025}, {"id": 302, "seek": 138636, "start": 1393.4799999999998, "end": 1397.4799999999998, "text": " Yeah, CSS, it's a bit of a complicated topic.", "tokens": [50720, 865, 11, 24387, 11, 309, 311, 257, 857, 295, 257, 6179, 4829, 13, 50920], "temperature": 0.0, "avg_logprob": -0.20416048521636634, "compression_ratio": 1.5133928571428572, "no_speech_prob": 0.027366092428565025}, {"id": 303, "seek": 138636, "start": 1397.4799999999998, "end": 1398.4799999999998, "text": " There are multiple ways.", "tokens": [50920, 821, 366, 3866, 2098, 13, 50970], "temperature": 0.0, "avg_logprob": -0.20416048521636634, "compression_ratio": 1.5133928571428572, "no_speech_prob": 0.027366092428565025}, {"id": 304, "seek": 138636, "start": 1398.4799999999998, "end": 1403.4799999999998, "text": " You can do it the way you do with plain HTML and you have a link ref.", "tokens": [50970, 509, 393, 360, 309, 264, 636, 291, 360, 365, 11121, 17995, 293, 291, 362, 257, 2113, 1895, 13, 51220], "temperature": 0.0, "avg_logprob": -0.20416048521636634, "compression_ratio": 1.5133928571428572, "no_speech_prob": 0.027366092428565025}, {"id": 305, "seek": 138636, "start": 1403.4799999999998, "end": 1408.4799999999998, "text": " But there's also some special support where you can compile a SAS into CSS.", "tokens": [51220, 583, 456, 311, 611, 512, 2121, 1406, 689, 291, 393, 31413, 257, 33441, 666, 24387, 13, 51470], "temperature": 0.0, "avg_logprob": -0.20416048521636634, "compression_ratio": 1.5133928571428572, "no_speech_prob": 0.027366092428565025}, {"id": 306, "seek": 138636, "start": 1408.4799999999998, "end": 1412.4799999999998, "text": " Or you can also write Kotlin that translates to CSS.", "tokens": [51470, 1610, 291, 393, 611, 2464, 30123, 5045, 300, 28468, 281, 24387, 13, 51670], "temperature": 0.0, "avg_logprob": -0.20416048521636634, "compression_ratio": 1.5133928571428572, "no_speech_prob": 0.027366092428565025}, {"id": 307, "seek": 141248, "start": 1412.48, "end": 1416.48, "text": " But I think it's runtime CSS.", "tokens": [50364, 583, 286, 519, 309, 311, 34474, 24387, 13, 50564], "temperature": 0.0, "avg_logprob": -0.22993675630484053, "compression_ratio": 1.4233128834355828, "no_speech_prob": 0.014524628408253193}, {"id": 308, "seek": 141248, "start": 1416.48, "end": 1421.48, "text": " I think the best way to answer the question will be to Google for Kotlin CSS.", "tokens": [50564, 286, 519, 264, 1151, 636, 281, 1867, 264, 1168, 486, 312, 281, 3329, 337, 30123, 5045, 24387, 13, 50814], "temperature": 0.0, "avg_logprob": -0.22993675630484053, "compression_ratio": 1.4233128834355828, "no_speech_prob": 0.014524628408253193}, {"id": 309, "seek": 141248, "start": 1421.48, "end": 1424.48, "text": " Because I don't have the perfect answer in my head.", "tokens": [50814, 1436, 286, 500, 380, 362, 264, 2176, 1867, 294, 452, 1378, 13, 50964], "temperature": 0.0, "avg_logprob": -0.22993675630484053, "compression_ratio": 1.4233128834355828, "no_speech_prob": 0.014524628408253193}, {"id": 310, "seek": 141248, "start": 1424.48, "end": 1428.48, "text": " But yeah, there are some things about that.", "tokens": [50964, 583, 1338, 11, 456, 366, 512, 721, 466, 300, 13, 51164], "temperature": 0.0, "avg_logprob": -0.22993675630484053, "compression_ratio": 1.4233128834355828, "no_speech_prob": 0.014524628408253193}, {"id": 311, "seek": 141248, "start": 1428.48, "end": 1431.48, "text": " Another question?", "tokens": [51164, 3996, 1168, 30, 51314], "temperature": 0.0, "avg_logprob": -0.22993675630484053, "compression_ratio": 1.4233128834355828, "no_speech_prob": 0.014524628408253193}, {"id": 312, "seek": 141248, "start": 1431.48, "end": 1434.48, "text": " Thank you.", "tokens": [51314, 1044, 291, 13, 51464], "temperature": 0.0, "avg_logprob": -0.22993675630484053, "compression_ratio": 1.4233128834355828, "no_speech_prob": 0.014524628408253193}, {"id": 313, "seek": 144248, "start": 1442.48, "end": 1445.48, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.6123563448588053, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.9948588609695435}], "language": "en"}