{"text": " Okay, so, last talk of the dev room, Paolo Bonzini is going to be talking about. Reverse engineering a solar roof panel. Sorry, roof. Yeah, whatever. Well, whatever he said. Here, yes. So as a quick introduction to myself and to set the expectation straight, I'm not a hardware guy. I'm not a security guy. This is basically something I did for fun. So I'm a beginner in these topics. On the other hand, I'm not a total idiot either. I know assembly pretty well. I work with compilers, kernel stuff, so I know X dumps enough to do this stuff. So anyway, this all starts almost five years ago when I bought a solar roof for my family. And the installer asked about having this optional data logging component. And I didn't really want to have anything cloud related because IoT is short for Internet of Things that shouldn't be on the Internet. So I didn't want it to be on the Internet, but it's entirely local. So I said, sure, why not? And this is what I got from them. This is the normal solar roof setup, the stuff that they want to touch with them football. This is the part that this talk will be about. And it was already suspicious from the beginning. But I mean, who knows? Maybe they bought it on sale. I don't know. But the plot thickened when I by chance had wireshark running and I saw there was a Raspberry Pi that I didn't know of. I have other Raspberry Pies, but none with this IP address. So actually, a few years later, when I was not really preparing for this talk, but I noticed these on their website. So these are the specifications for this. It has quad core ARM cortex. It even has a microSD inside. Okay, so you know what kind of Raspberry Pi is going to be in there. But anyway, let's take a step back and go back to 2018 and say, let's see what this thing does. So it's pretty nice. I mean, you can only see these from outside, but actually there's extra things around. Here you can see that they power it through the GPIO. In fact, the power brick, they actually cut out the USB part and they just screwed the wires to the GPIO here. So what does it do? It basically logs data to the SD card every five minutes. It lets you plot nice graphs. Unfortunately, I don't have any picture of the graphs because I don't use the software anymore. But it also has five relays. You can see them here. Some of them have normally closed, normally open. Some of them only have normally open. And it's based on five volt inputs, which is a bit weird because usually you use 12 volts or 24 volts DC for communication. Five volts is a bit weird. And it's not very useful also because you have to actually put the wires on the wall and it was already hard to find a place for the whole solar roof things retrofitted into a relatively old house. Another interesting thing is that it has a built-in UPS because the inverter has like a 10 ampere line that stays up 24-7. If the grid goes away, it's still battery powered. So this is another incentive to actually reuse the Raspberry Pi for something else. And also on a slightly lower level, what does it do? It has port 22 open. Unfortunately, there's no way to upload keys. It has a remote update, but it triggered exactly once when I plugged it in and then not anymore for four years. The web server is not Apache. It's not nginx. It's just an embedded web server with a vanilla server header in HTTP. But it has a nice JSON API. It's easily discoverable with the Firefox developer tools and that's how I used this thing for some time. So for example, there is the API login. There is the API dash, which is basically what is used for the dashboard. And it returns the instant data like one minute old at most with some really cryptic names. Okay, Ver is not cryptic. Temp is not cryptic, but the other ones are a bit weird. And it also has the possibility to get CSV data with similar headers for a particular day or average across the whole year. The daily one is the most useful because if you have a lot of data for the same header, it's easy to figure out what it might be. So for example, this one, ENPH, okay, V probably stands for voltage, W stands for what, but H you may not know of hand. But if you look at the number, you can see that pretty clearly that it's probably the frequency of the grid or something like that because it's about 50. So you get lots of data. You get voltage, current, power values. You get a few computed fields that are easy to recognize because the name starts with X. So for example, X home is the current consumption of the home, independent of whether there is data coming from this, sorry, there is power coming from the solar panels, or maybe instead it's coming from the battery. The actual data from the inverter are a bit not suited, for example, to plotting useful graphs, but they have a few computed fields that put things together. There's also a few dozen flags that are interesting. They are almost all zero, and so they will be a bit harder to reverse engineer. And also you can see the five-volt inputs and the relay outputs in the logs. I actually never use these, so they are always zero, but they're named like in one, in two, in three, in four, in five, so it's pretty easy to figure out. So what you can do with this is already do simple-minded hacks with curls. So for example, you can gather all the yearly data and do your own plots. For example, you can see here is when I do laundry because the weekend and Tuesday is where I consume more power. And another thing that I did very early on was push data to MQTT to get some nice widgets on my phone that could give me instant data without opening the web interface. And also for home automation, at some point I was using these to turn on and off some ZigBee smart plug bugs. But this was not any reverse engineering at the Raspberry Pi level. It was just looking at JSON stuff and doing just stuff with curl. But this was already enough to find some interesting bugs. There are some weird stuff in the logs. So for example, here you can see this probably stands for day and hour, and this stands for month and seconds, but it's a value that has a decimal point in it, so it makes no sense. And I will show later what happens. Also, there are some fields that end with L and H, but sometimes they are swapped. So you can see that L is the one that stays always the same, and H is the one that keeps going up and down, up and down. And also with L and H, they didn't really care a lot about them because also if you plot them, the plot looks like this. So this is the solar production from the total solar production since the day that I installed it. And this is how much it had produced in January, 2021. This is in December, and it's really weird. What actually happened is that they put the low as a signed value, but it should have been unsigned. So whenever it goes from 2 to the 15 minus 1 to the 15, it actually flips back to minus 32,000, whatever. So you can see that this is exactly 655.36 kilowatt hours. And if you fix it, it's still wrong because there are some bugs. But I mean, this was not supposed really to be used by the buyers of the appliance. People were just supposed to look at the nice plots. Also, this is way more worrisome because there are flags that seem to be passing correctly. If you look at the logs, it keeps giving these weird names that they keep going on and off like a few times every day. And the name is very scary. It's battery charge over the current hard limit, and same for this charge. And the weird thing is that you can see this error in the web interface all the time, but you never see it on the inverter. The inverter has a little panel with errors, and you cannot see that any time. So that's weird. And I didn't really like that. I asked customer support, which were otherwise very nice, but they just said, yeah, don't worry, it's fine. So all the time while I was doing these things for fun, I had the lingering thought that the microSD card would die over me because they say diamonds are forever. I don't know if it's true, but certainly microSD cards are not forever. So even worse, I couldn't just go and say, okay, it's 10 years warranty, please send me another SD card. Because the newer models, they moved the storage to cloud, and they only have five years of service, which is suspiciously close to the time before my own SD card died. So people won't pay for the cloud service. You won't have to repair the data logger. Anyway, I never did anything about it until last year. Last year, I got the data logger to shut down on me twice in a week, and I naively thought that it was just a network problem, and I said, okay, I will just take out the SD card and set up a static address. Actually, the SD card was dying. I don't know why it really had all these problems in general. It didn't have any problem until last November, and last November, it really died in a matter of a week. So I have no idea what happened, but I'm very thankful to the SD card gods for. So when I open it, this is what it looks like, and this is the behind of Raspberry Pi 3. It's potato quality, but okay, the first impressions was that it's a standard Raspbian install, so I guess I can forgive them for not obeying the GPL because they didn't do anything weird. I mean, it was just Raspbian. And there were two statically linked binaries in OMPI. One was running on TTY1. Nobody ever noticed that it was running there because there's no room for an HDMI cable, so it was there, though. The main use of that HomePI, I think, was that if you plug a keyboard through the USB and you press there, it rebooted, so it probably was a quick way for them to do some testing. But it had some nice ASCII art of the company logo. The other one is the one that we care more about. The data is placed in HomePI storage, and the nice thing is that Strays is installed, so I was already thinking of ways to get some data from this because with Strays, it's so easy. Anyway, there's basically, again, in stock install, some files are newer than the others, so that's an easy way to see what's going on and what they changed. There's a couple system D units. There's an I2C RTC. This is nice because at the time, I hadn't even looked at the PCB or anything, so I didn't know what was in there. And knowing that there is a real-time clock on the board is nice to know. They disabled Bluetooth for no particular reason. Well, there is a reason, but I will say it later. So what I do is just I copy the binaries to my computer, I add my SSH, and I turn it back on and it works. So one thing that you need to consider before doing this kind of work is what about the warranty, especially for something as expensive as the Solar Roof. The thing is the connection to the inverter is through USB. It's not direct RS485. There is a scooter. This thing is away from the board, so I didn't touch it. I just removed the screws to take a picture, and that was it. It's basically RS485 to USB adapter. So also, the inverter has the Baud rate. You can customize it, and the user manual has basically three choices. Date and time. What was the other one? It was the total that it reports for the produced energy. So you can reset it to zero if you give it to another person or for whatever reason you want to change it. And the Baud rate for RS5. So the user is supposed to know that it is based on RS485 and is supposed to look at RS485 data. I don't think this is any kind of lawyer analysis, but still I'm pretty sure I didn't break the warranty on the inverter, which is the really expensive part. So anyway, I got the binaries. The first thing I do is using strings, and just doing strings by plus is awesome source of information. And what I noticed by doing quick search, for example, for the API endpoints and for DevTTY USB, is that all the strings are together, and this means the program is unlikely to be written in C, because in C they will be null terminated, and they will be all one after another. So it could be go because, I mean, there's not that many languages that you would use to write a web server in and that produce a large binary. Certainly, it wouldn't be rushed because it was four years ago, so it wasn't as fancy as today. And anyway, if you do a read-elf, you can see some section editors that go sim, tab, go pcl, and tab is basically the go format for the bug information. So it's almost certainly go, like what? Certainly go. Another thing that you can do for strings is for GitHub, because why wouldn't people use RPIO libraries from GitHub? And also, you can find some nice names and things. And this is the name of the model of my inverter, so I know that what they call it in the source code or in the files can be handy. So anyway, the thing is, there is running this, I have SSH access, so what I can do is just trace it and see what happens. And one nice thing is that the T2 opens and closes the DevTTY USB 0 every minute, so it's pretty easy to also get not just the board rate, but also the parity, the stop bits. Okay, that's very little, but okay. I will go fast. So with go, the thing is it has an event loop that can move a subroutine from one thread to another, so you need to track the file descriptor numbers. So what you get here is something that is basically you can recognize to be Modbus. This is a read 16-bit register request. This is read one-bit register request. So what I did is I basically took this from the logs and I put it in a small C program to the code what it was. I mean, I could probably do something with Wireshark or whatever, but trace gave me already some C strings, so I put it in a C program. And this is enough, for example, to compare with the CSV files, at least for the 16-bit registers. So for example, I can see now that these are probably low and high. So this was the minutes and seconds, the hour, the day, the month, and the year. This is 21 in hexadecimal. And I can also see that some values are fixed points. So this one is the version multiplied by 100, and this one is the temperature multiplied by 10. For the discrete inputs, it's a lot more complicated. I could find in strings some nice names of the fields. So for example, GRN was no voltage from the grid and so on. It's a bit weird that they put it an alert that there was a blackout, but they didn't put as an alert that the fan broke, whatever. And this also doesn't make a lot of sense to average the bulls, but whatever. So anyway, this is already nice because I have the names corresponding to all the fields, but I don't have the mappings of the discrete inputs. That's what Modbus calls the one-bit Boolean values to the flag. So, and I knew that this was the part that was broken in the code. So this was probably not going to succeed, but actually it was successful. I used radar 2 for this, and I will super, super quickly go through radar 2. This is what I learned about radar 2 because I had never used it before. So the commands are one letter per word. So ADF means analyze data in functions. There are some people here that are old enough to remember Lotus 1, 2, 3. That's the way the menus worked in Lotus 1, 2, 3. Basically, you had like one letter per word in the command that you wanted to execute. And the main ones are seek, print, and slash for search. And another interesting thing to know is that the state of your work is saved in a project, which is actually a single file in the Git repository with thousands of commands in it that say all the nice things about your binary. You can get some information from the debug info that I showed earlier. There's a nice command to do all the analysis that is possible, but it doesn't really work for a static binary-linked binary. So I use these ones instead. It starts giving some nice information. So for example, in the project file, after I do the analyze strings commands, I can see that it has these CS commands. And now when I do the disassembly, it actually prints these as a string and not as instructions. Likewise, when I do AXD, I can see that it loads these. And it also says what is the data that is loaded from here. This is probably in the constant pool. So for example, this instruction is the one that loads the address of dev.tty.usb0. One thing that you can do is also you can write your own commands and add them to the file. So for example, here, I know that this location is a data operand for this instruction. And I can tell Rader 2, for everything that is in here, make it dumped as bytes, not instructions. So after I add all these things to the project file, it will not be dumped as a rubbish ARM instruction. It will actually print the word. Then you can also search keys. For example, if I search for the two flags that went up and down, I can see that they are here. And here, they are closed. So I decided to search for this address. You have to put it backwards, because it's little Indian. So this is the first byte and this is the last one. But then I found that they were found relatively close, like 68 bytes apart. So you dump them and it's very helpful that it even tells you where the hits were from the previous searches. And here, you can see some nice things. It seems to repeat every 68 bytes. And it's always pointed to the string followed by the length. And also, there's these nice numbers, which might be maybe the numbers of the discrete inputs, who knows. And if you go back and back, you can see using the seek command, I can go back 68 bytes at the time. And sooner or later, I get to a point where the format changes. 68 bytes before, there's nothing like what was afterwards. So this was the beginning of the array. And now, I know exactly which discrete input was with which name and so on. I can also tell to print data. So, for example, this was a floating point number. And if I print it, it's 0.1. So the guess is that this would also be something related to the fixed point values. And now, it's time to actually find the pointer to this. I do, I search for this address here. And I find it here. It's also address followed by the number of entries. So it's probably some kind of array descriptor for go. And then, I search for the address of the descriptor. And then, if I go here, I see that there is a reference from the query function of my model of the inverter. So I guess we have a winner. And in fact, what I did then was rewrite the software using Modbus. It outputs the logs in exactly the same format. So I still have a continuous log from the date of the installation, except I didn't fix, I didn't leave it exactly the same. I fixed the bugs. So, no averages of dates. The scary flags are not logged anymore. I can see now whether it's using the battery or not. And I even got the grid non-flag during a blackout. So I guess that's full confirmation that it works. It also does the same thing that I was doing before with curl. Now, I do it natively. So every minute, I export it to MQTT with Home Assistant. I don't have the plot functionality, but I can get it from Home Assistant. So that's fine. This is the source code. And sooner or later, I will try to put an Ansible playbook so that if the SD card dies once more, I will just have a very quick way to deploy it. As a bonus, for the last minute of the talk, I have a picture of the PCB because at some point, I wanted to update the DBN11. The nickname changed, so it didn't get the network anymore. I had to really connect the Raspberry Pi to the keyboard and monitor. So here's the PCB. It's a work of art. It's all through whole components. Don't ask me why. The inputs are voltage dividers, so learning that the blue resistors are the more precise one finally paid off after, like, 40 years of my life. Here's the battery-backed RTC. There's a power LED and an alert LED connected to the GPIO. This is nice. This is a driver I see for the relays and also for the LEDs because these are powered in five volts, not 3.3. And there's also, this is nice if somebody wanted to hack further on it. These are test pins and they are connected to eight more GPIOs on the Raspberry Pi thing. But there's something really weird here because this part, these Q-terminals are not exposed. They're unused. And this is a bias resistor. This is a terminal resistor. This is another RS485 transducer because remember that it was connected through USB. And it actually works. I have no idea why it's there. But if you look at the website, there is probably an older version of the board where you can actually read here common A and B. So at some point they wanted to use it. And then they didn't so on the brochure picture, this is not used on the website picture. They still have the older version. And that's it.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 29.84, "text": " Okay, so, last talk of the dev room, Paolo Bonzini is going to be talking about.", "tokens": [1033, 11, 370, 11, 1036, 751, 295, 264, 1905, 1808, 11, 3426, 7902, 7368, 89, 3812, 307, 516, 281, 312, 1417, 466, 13], "temperature": 0.0, "avg_logprob": -0.5073808740686487, "compression_ratio": 1.0256410256410255, "no_speech_prob": 0.4824605882167816}, {"id": 1, "seek": 2984, "start": 29.84, "end": 40.0, "text": " Reverse engineering a solar roof panel. Sorry, roof. Yeah, whatever. Well, whatever he said.", "tokens": [26314, 405, 7043, 257, 7936, 8418, 4831, 13, 4919, 11, 8418, 13, 865, 11, 2035, 13, 1042, 11, 2035, 415, 848, 13], "temperature": 0.0, "avg_logprob": -0.5173409902132474, "compression_ratio": 1.1358024691358024, "no_speech_prob": 0.0018368582241237164}, {"id": 2, "seek": 4000, "start": 40.0, "end": 59.92, "text": " Here, yes. So as a quick introduction to myself and to set the expectation straight, I'm not a", "tokens": [1692, 11, 2086, 13, 407, 382, 257, 1702, 9339, 281, 2059, 293, 281, 992, 264, 14334, 2997, 11, 286, 478, 406, 257], "temperature": 0.0, "avg_logprob": -0.218720582815317, "compression_ratio": 1.3496503496503496, "no_speech_prob": 0.0012462845770642161}, {"id": 3, "seek": 4000, "start": 59.92, "end": 65.76, "text": " hardware guy. I'm not a security guy. This is basically something I did for fun. So I'm a beginner", "tokens": [8837, 2146, 13, 286, 478, 406, 257, 3825, 2146, 13, 639, 307, 1936, 746, 286, 630, 337, 1019, 13, 407, 286, 478, 257, 22080], "temperature": 0.0, "avg_logprob": -0.218720582815317, "compression_ratio": 1.3496503496503496, "no_speech_prob": 0.0012462845770642161}, {"id": 4, "seek": 6576, "start": 65.76, "end": 73.2, "text": " in these topics. On the other hand, I'm not a total idiot either. I know assembly pretty well.", "tokens": [294, 613, 8378, 13, 1282, 264, 661, 1011, 11, 286, 478, 406, 257, 3217, 14270, 2139, 13, 286, 458, 12103, 1238, 731, 13], "temperature": 0.0, "avg_logprob": -0.18318423471952738, "compression_ratio": 1.458762886597938, "no_speech_prob": 0.00016413297271355987}, {"id": 5, "seek": 6576, "start": 73.2, "end": 81.12, "text": " I work with compilers, kernel stuff, so I know X dumps enough to do this stuff. So anyway,", "tokens": [286, 589, 365, 715, 388, 433, 11, 28256, 1507, 11, 370, 286, 458, 1783, 11430, 82, 1547, 281, 360, 341, 1507, 13, 407, 4033, 11], "temperature": 0.0, "avg_logprob": -0.18318423471952738, "compression_ratio": 1.458762886597938, "no_speech_prob": 0.00016413297271355987}, {"id": 6, "seek": 6576, "start": 81.12, "end": 90.32000000000001, "text": " this all starts almost five years ago when I bought a solar roof for my family. And the installer", "tokens": [341, 439, 3719, 1920, 1732, 924, 2057, 562, 286, 4243, 257, 7936, 8418, 337, 452, 1605, 13, 400, 264, 46620], "temperature": 0.0, "avg_logprob": -0.18318423471952738, "compression_ratio": 1.458762886597938, "no_speech_prob": 0.00016413297271355987}, {"id": 7, "seek": 9032, "start": 90.32, "end": 95.83999999999999, "text": " asked about having this optional data logging component. And I didn't really want to have", "tokens": [2351, 466, 1419, 341, 17312, 1412, 27991, 6542, 13, 400, 286, 994, 380, 534, 528, 281, 362], "temperature": 0.0, "avg_logprob": -0.1294637187834709, "compression_ratio": 1.6343612334801763, "no_speech_prob": 8.187507773982361e-05}, {"id": 8, "seek": 9032, "start": 95.83999999999999, "end": 101.75999999999999, "text": " anything cloud related because IoT is short for Internet of Things that shouldn't be on the Internet.", "tokens": [1340, 4588, 4077, 570, 30112, 307, 2099, 337, 7703, 295, 9514, 300, 4659, 380, 312, 322, 264, 7703, 13], "temperature": 0.0, "avg_logprob": -0.1294637187834709, "compression_ratio": 1.6343612334801763, "no_speech_prob": 8.187507773982361e-05}, {"id": 9, "seek": 9032, "start": 102.39999999999999, "end": 107.19999999999999, "text": " So I didn't want it to be on the Internet, but it's entirely local. So I said, sure,", "tokens": [407, 286, 994, 380, 528, 309, 281, 312, 322, 264, 7703, 11, 457, 309, 311, 7696, 2654, 13, 407, 286, 848, 11, 988, 11], "temperature": 0.0, "avg_logprob": -0.1294637187834709, "compression_ratio": 1.6343612334801763, "no_speech_prob": 8.187507773982361e-05}, {"id": 10, "seek": 9032, "start": 107.19999999999999, "end": 115.52, "text": " why not? And this is what I got from them. This is the normal solar roof setup, the stuff that", "tokens": [983, 406, 30, 400, 341, 307, 437, 286, 658, 490, 552, 13, 639, 307, 264, 2710, 7936, 8418, 8657, 11, 264, 1507, 300], "temperature": 0.0, "avg_logprob": -0.1294637187834709, "compression_ratio": 1.6343612334801763, "no_speech_prob": 8.187507773982361e-05}, {"id": 11, "seek": 11552, "start": 115.52, "end": 121.84, "text": " they want to touch with them football. This is the part that this talk will be about. And", "tokens": [436, 528, 281, 2557, 365, 552, 7346, 13, 639, 307, 264, 644, 300, 341, 751, 486, 312, 466, 13, 400], "temperature": 0.0, "avg_logprob": -0.17575128728693182, "compression_ratio": 1.3289473684210527, "no_speech_prob": 0.00019416678696870804}, {"id": 12, "seek": 11552, "start": 122.64, "end": 124.64, "text": " it was already suspicious from the beginning.", "tokens": [309, 390, 1217, 17931, 490, 264, 2863, 13], "temperature": 0.0, "avg_logprob": -0.17575128728693182, "compression_ratio": 1.3289473684210527, "no_speech_prob": 0.00019416678696870804}, {"id": 13, "seek": 11552, "start": 133.84, "end": 137.84, "text": " But I mean, who knows? Maybe they bought it on sale. I don't know.", "tokens": [583, 286, 914, 11, 567, 3255, 30, 2704, 436, 4243, 309, 322, 8680, 13, 286, 500, 380, 458, 13], "temperature": 0.0, "avg_logprob": -0.17575128728693182, "compression_ratio": 1.3289473684210527, "no_speech_prob": 0.00019416678696870804}, {"id": 14, "seek": 13784, "start": 137.84, "end": 146.96, "text": " But the plot thickened when I by chance had wireshark running and I saw there was", "tokens": [583, 264, 7542, 33821, 292, 562, 286, 538, 2931, 632, 15537, 71, 809, 2614, 293, 286, 1866, 456, 390], "temperature": 0.0, "avg_logprob": -0.2101445472103426, "compression_ratio": 1.572093023255814, "no_speech_prob": 0.0001568165171192959}, {"id": 15, "seek": 13784, "start": 146.96, "end": 153.6, "text": " a Raspberry Pi that I didn't know of. I have other Raspberry Pies, but none with this IP address.", "tokens": [257, 41154, 17741, 300, 286, 994, 380, 458, 295, 13, 286, 362, 661, 41154, 430, 530, 11, 457, 6022, 365, 341, 8671, 2985, 13], "temperature": 0.0, "avg_logprob": -0.2101445472103426, "compression_ratio": 1.572093023255814, "no_speech_prob": 0.0001568165171192959}, {"id": 16, "seek": 13784, "start": 153.6, "end": 160.72, "text": " So actually, a few years later, when I was not really preparing for this talk,", "tokens": [407, 767, 11, 257, 1326, 924, 1780, 11, 562, 286, 390, 406, 534, 10075, 337, 341, 751, 11], "temperature": 0.0, "avg_logprob": -0.2101445472103426, "compression_ratio": 1.572093023255814, "no_speech_prob": 0.0001568165171192959}, {"id": 17, "seek": 13784, "start": 160.72, "end": 166.64000000000001, "text": " but I noticed these on their website. So these are the specifications for this.", "tokens": [457, 286, 5694, 613, 322, 641, 3144, 13, 407, 613, 366, 264, 29448, 337, 341, 13], "temperature": 0.0, "avg_logprob": -0.2101445472103426, "compression_ratio": 1.572093023255814, "no_speech_prob": 0.0001568165171192959}, {"id": 18, "seek": 16664, "start": 166.64, "end": 177.11999999999998, "text": " It has quad core ARM cortex. It even has a microSD inside. Okay, so you know what kind of Raspberry", "tokens": [467, 575, 10787, 4965, 45209, 33312, 13, 467, 754, 575, 257, 4532, 23969, 1854, 13, 1033, 11, 370, 291, 458, 437, 733, 295, 41154], "temperature": 0.0, "avg_logprob": -0.15594769687187382, "compression_ratio": 1.4166666666666667, "no_speech_prob": 0.00020117709937039763}, {"id": 19, "seek": 16664, "start": 177.11999999999998, "end": 184.48, "text": " Pi is going to be in there. But anyway, let's take a step back and go back to 2018 and say,", "tokens": [17741, 307, 516, 281, 312, 294, 456, 13, 583, 4033, 11, 718, 311, 747, 257, 1823, 646, 293, 352, 646, 281, 6096, 293, 584, 11], "temperature": 0.0, "avg_logprob": -0.15594769687187382, "compression_ratio": 1.4166666666666667, "no_speech_prob": 0.00020117709937039763}, {"id": 20, "seek": 16664, "start": 184.48, "end": 190.79999999999998, "text": " let's see what this thing does. So it's pretty nice. I mean, you can only see these from outside,", "tokens": [718, 311, 536, 437, 341, 551, 775, 13, 407, 309, 311, 1238, 1481, 13, 286, 914, 11, 291, 393, 787, 536, 613, 490, 2380, 11], "temperature": 0.0, "avg_logprob": -0.15594769687187382, "compression_ratio": 1.4166666666666667, "no_speech_prob": 0.00020117709937039763}, {"id": 21, "seek": 19080, "start": 190.8, "end": 196.72, "text": " but actually there's extra things around. Here you can see that they power it through the GPIO.", "tokens": [457, 767, 456, 311, 2857, 721, 926, 13, 1692, 291, 393, 536, 300, 436, 1347, 309, 807, 264, 26039, 15167, 13], "temperature": 0.0, "avg_logprob": -0.09398261536943152, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00015868428454268724}, {"id": 22, "seek": 19080, "start": 196.72, "end": 203.20000000000002, "text": " In fact, the power brick, they actually cut out the USB part and they just screwed the", "tokens": [682, 1186, 11, 264, 1347, 16725, 11, 436, 767, 1723, 484, 264, 10109, 644, 293, 436, 445, 20331, 264], "temperature": 0.0, "avg_logprob": -0.09398261536943152, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00015868428454268724}, {"id": 23, "seek": 19080, "start": 206.4, "end": 213.12, "text": " wires to the GPIO here. So what does it do? It basically logs data to the SD card every five", "tokens": [15537, 281, 264, 26039, 15167, 510, 13, 407, 437, 775, 309, 360, 30, 467, 1936, 20820, 1412, 281, 264, 14638, 2920, 633, 1732], "temperature": 0.0, "avg_logprob": -0.09398261536943152, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00015868428454268724}, {"id": 24, "seek": 19080, "start": 213.12, "end": 218.0, "text": " minutes. It lets you plot nice graphs. Unfortunately, I don't have any picture of the graphs because", "tokens": [2077, 13, 467, 6653, 291, 7542, 1481, 24877, 13, 8590, 11, 286, 500, 380, 362, 604, 3036, 295, 264, 24877, 570], "temperature": 0.0, "avg_logprob": -0.09398261536943152, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.00015868428454268724}, {"id": 25, "seek": 21800, "start": 218.0, "end": 225.12, "text": " I don't use the software anymore. But it also has five relays. You can see them here. Some of them", "tokens": [286, 500, 380, 764, 264, 4722, 3602, 13, 583, 309, 611, 575, 1732, 1039, 3772, 13, 509, 393, 536, 552, 510, 13, 2188, 295, 552], "temperature": 0.0, "avg_logprob": -0.09922322538710132, "compression_ratio": 1.7276785714285714, "no_speech_prob": 4.780274321092293e-05}, {"id": 26, "seek": 21800, "start": 225.12, "end": 231.36, "text": " have normally closed, normally open. Some of them only have normally open. And it's based on five", "tokens": [362, 5646, 5395, 11, 5646, 1269, 13, 2188, 295, 552, 787, 362, 5646, 1269, 13, 400, 309, 311, 2361, 322, 1732], "temperature": 0.0, "avg_logprob": -0.09922322538710132, "compression_ratio": 1.7276785714285714, "no_speech_prob": 4.780274321092293e-05}, {"id": 27, "seek": 21800, "start": 231.36, "end": 237.36, "text": " volt inputs, which is a bit weird because usually you use 12 volts or 24 volts DC for communication.", "tokens": [5962, 15743, 11, 597, 307, 257, 857, 3657, 570, 2673, 291, 764, 2272, 22322, 420, 4022, 22322, 9114, 337, 6101, 13], "temperature": 0.0, "avg_logprob": -0.09922322538710132, "compression_ratio": 1.7276785714285714, "no_speech_prob": 4.780274321092293e-05}, {"id": 28, "seek": 21800, "start": 238.16, "end": 243.84, "text": " Five volts is a bit weird. And it's not very useful also because you have to actually put", "tokens": [9436, 22322, 307, 257, 857, 3657, 13, 400, 309, 311, 406, 588, 4420, 611, 570, 291, 362, 281, 767, 829], "temperature": 0.0, "avg_logprob": -0.09922322538710132, "compression_ratio": 1.7276785714285714, "no_speech_prob": 4.780274321092293e-05}, {"id": 29, "seek": 24384, "start": 243.84, "end": 248.64000000000001, "text": " the wires on the wall and it was already hard to find a place for the whole solar roof things", "tokens": [264, 15537, 322, 264, 2929, 293, 309, 390, 1217, 1152, 281, 915, 257, 1081, 337, 264, 1379, 7936, 8418, 721], "temperature": 0.0, "avg_logprob": -0.12054893534670594, "compression_ratio": 1.5346938775510204, "no_speech_prob": 4.796787106897682e-05}, {"id": 30, "seek": 24384, "start": 249.36, "end": 254.96, "text": " retrofitted into a relatively old house. Another interesting thing is that it has a built-in UPS", "tokens": [18820, 69, 3944, 666, 257, 7226, 1331, 1782, 13, 3996, 1880, 551, 307, 300, 309, 575, 257, 3094, 12, 259, 624, 6273], "temperature": 0.0, "avg_logprob": -0.12054893534670594, "compression_ratio": 1.5346938775510204, "no_speech_prob": 4.796787106897682e-05}, {"id": 31, "seek": 24384, "start": 256.08, "end": 264.16, "text": " because the inverter has like a 10 ampere line that stays up 24-7. If the grid goes away,", "tokens": [570, 264, 47201, 575, 411, 257, 1266, 18648, 323, 1622, 300, 10834, 493, 4022, 12, 22, 13, 759, 264, 10748, 1709, 1314, 11], "temperature": 0.0, "avg_logprob": -0.12054893534670594, "compression_ratio": 1.5346938775510204, "no_speech_prob": 4.796787106897682e-05}, {"id": 32, "seek": 24384, "start": 264.16, "end": 270.48, "text": " it's still battery powered. So this is another incentive to actually reuse the Raspberry Pi for", "tokens": [309, 311, 920, 5809, 17786, 13, 407, 341, 307, 1071, 22346, 281, 767, 26225, 264, 41154, 17741, 337], "temperature": 0.0, "avg_logprob": -0.12054893534670594, "compression_ratio": 1.5346938775510204, "no_speech_prob": 4.796787106897682e-05}, {"id": 33, "seek": 27048, "start": 270.48, "end": 277.12, "text": " something else. And also on a slightly lower level, what does it do? It has port 22 open.", "tokens": [746, 1646, 13, 400, 611, 322, 257, 4748, 3126, 1496, 11, 437, 775, 309, 360, 30, 467, 575, 2436, 5853, 1269, 13], "temperature": 0.0, "avg_logprob": -0.10001574064555921, "compression_ratio": 1.5230125523012552, "no_speech_prob": 4.61071431345772e-05}, {"id": 34, "seek": 27048, "start": 277.12, "end": 281.76, "text": " Unfortunately, there's no way to upload keys. It has a remote update, but it triggered exactly", "tokens": [8590, 11, 456, 311, 572, 636, 281, 6580, 9317, 13, 467, 575, 257, 8607, 5623, 11, 457, 309, 21710, 2293], "temperature": 0.0, "avg_logprob": -0.10001574064555921, "compression_ratio": 1.5230125523012552, "no_speech_prob": 4.61071431345772e-05}, {"id": 35, "seek": 27048, "start": 281.76, "end": 288.72, "text": " once when I plugged it in and then not anymore for four years. The web server is not Apache.", "tokens": [1564, 562, 286, 25679, 309, 294, 293, 550, 406, 3602, 337, 1451, 924, 13, 440, 3670, 7154, 307, 406, 46597, 13], "temperature": 0.0, "avg_logprob": -0.10001574064555921, "compression_ratio": 1.5230125523012552, "no_speech_prob": 4.61071431345772e-05}, {"id": 36, "seek": 27048, "start": 288.72, "end": 294.8, "text": " It's not nginx. It's just an embedded web server with a vanilla server header in HTTP.", "tokens": [467, 311, 406, 297, 1494, 87, 13, 467, 311, 445, 364, 16741, 3670, 7154, 365, 257, 17528, 7154, 23117, 294, 33283, 13], "temperature": 0.0, "avg_logprob": -0.10001574064555921, "compression_ratio": 1.5230125523012552, "no_speech_prob": 4.61071431345772e-05}, {"id": 37, "seek": 29480, "start": 294.8, "end": 301.36, "text": " But it has a nice JSON API. It's easily discoverable with the Firefox developer tools and that's how", "tokens": [583, 309, 575, 257, 1481, 31828, 9362, 13, 467, 311, 3612, 4411, 712, 365, 264, 46613, 10754, 3873, 293, 300, 311, 577], "temperature": 0.0, "avg_logprob": -0.17731006622314452, "compression_ratio": 1.5884773662551441, "no_speech_prob": 0.00010767437925096601}, {"id": 38, "seek": 29480, "start": 301.36, "end": 307.84000000000003, "text": " I used this thing for some time. So for example, there is the API login. There is the API dash,", "tokens": [286, 1143, 341, 551, 337, 512, 565, 13, 407, 337, 1365, 11, 456, 307, 264, 9362, 24276, 13, 821, 307, 264, 9362, 8240, 11], "temperature": 0.0, "avg_logprob": -0.17731006622314452, "compression_ratio": 1.5884773662551441, "no_speech_prob": 0.00010767437925096601}, {"id": 39, "seek": 29480, "start": 307.84000000000003, "end": 312.96000000000004, "text": " which is basically what is used for the dashboard. And it returns the instant data like one minute", "tokens": [597, 307, 1936, 437, 307, 1143, 337, 264, 18342, 13, 400, 309, 11247, 264, 9836, 1412, 411, 472, 3456], "temperature": 0.0, "avg_logprob": -0.17731006622314452, "compression_ratio": 1.5884773662551441, "no_speech_prob": 0.00010767437925096601}, {"id": 40, "seek": 29480, "start": 312.96000000000004, "end": 318.96000000000004, "text": " old at most with some really cryptic names. Okay, Ver is not cryptic. Temp is not cryptic,", "tokens": [1331, 412, 881, 365, 512, 534, 9844, 299, 5288, 13, 1033, 11, 4281, 307, 406, 9844, 299, 13, 8095, 79, 307, 406, 9844, 299, 11], "temperature": 0.0, "avg_logprob": -0.17731006622314452, "compression_ratio": 1.5884773662551441, "no_speech_prob": 0.00010767437925096601}, {"id": 41, "seek": 31896, "start": 318.96, "end": 325.12, "text": " but the other ones are a bit weird. And it also has the possibility to get CSV data with similar", "tokens": [457, 264, 661, 2306, 366, 257, 857, 3657, 13, 400, 309, 611, 575, 264, 7959, 281, 483, 48814, 1412, 365, 2531], "temperature": 0.0, "avg_logprob": -0.03218539555867513, "compression_ratio": 1.4896907216494846, "no_speech_prob": 5.093249637866393e-05}, {"id": 42, "seek": 31896, "start": 325.12, "end": 331.91999999999996, "text": " headers for a particular day or average across the whole year. The daily one is the most useful", "tokens": [45101, 337, 257, 1729, 786, 420, 4274, 2108, 264, 1379, 1064, 13, 440, 5212, 472, 307, 264, 881, 4420], "temperature": 0.0, "avg_logprob": -0.03218539555867513, "compression_ratio": 1.4896907216494846, "no_speech_prob": 5.093249637866393e-05}, {"id": 43, "seek": 31896, "start": 331.91999999999996, "end": 339.59999999999997, "text": " because if you have a lot of data for the same header, it's easy to figure out what it might be.", "tokens": [570, 498, 291, 362, 257, 688, 295, 1412, 337, 264, 912, 23117, 11, 309, 311, 1858, 281, 2573, 484, 437, 309, 1062, 312, 13], "temperature": 0.0, "avg_logprob": -0.03218539555867513, "compression_ratio": 1.4896907216494846, "no_speech_prob": 5.093249637866393e-05}, {"id": 44, "seek": 33960, "start": 339.6, "end": 349.28000000000003, "text": " So for example, this one, ENPH, okay, V probably stands for voltage, W stands for what, but H", "tokens": [407, 337, 1365, 11, 341, 472, 11, 15244, 21904, 11, 1392, 11, 691, 1391, 7382, 337, 8352, 11, 343, 7382, 337, 437, 11, 457, 389], "temperature": 0.0, "avg_logprob": -0.1388112247580349, "compression_ratio": 1.5778688524590163, "no_speech_prob": 2.9246641133795492e-05}, {"id": 45, "seek": 33960, "start": 349.28000000000003, "end": 353.84000000000003, "text": " you may not know of hand. But if you look at the number, you can see that pretty clearly that it's", "tokens": [291, 815, 406, 458, 295, 1011, 13, 583, 498, 291, 574, 412, 264, 1230, 11, 291, 393, 536, 300, 1238, 4448, 300, 309, 311], "temperature": 0.0, "avg_logprob": -0.1388112247580349, "compression_ratio": 1.5778688524590163, "no_speech_prob": 2.9246641133795492e-05}, {"id": 46, "seek": 33960, "start": 353.84000000000003, "end": 360.48, "text": " probably the frequency of the grid or something like that because it's about 50. So you get lots", "tokens": [1391, 264, 7893, 295, 264, 10748, 420, 746, 411, 300, 570, 309, 311, 466, 2625, 13, 407, 291, 483, 3195], "temperature": 0.0, "avg_logprob": -0.1388112247580349, "compression_ratio": 1.5778688524590163, "no_speech_prob": 2.9246641133795492e-05}, {"id": 47, "seek": 33960, "start": 360.48, "end": 365.6, "text": " of data. You get voltage, current, power values. You get a few computed fields that are easy to", "tokens": [295, 1412, 13, 509, 483, 8352, 11, 2190, 11, 1347, 4190, 13, 509, 483, 257, 1326, 40610, 7909, 300, 366, 1858, 281], "temperature": 0.0, "avg_logprob": -0.1388112247580349, "compression_ratio": 1.5778688524590163, "no_speech_prob": 2.9246641133795492e-05}, {"id": 48, "seek": 36560, "start": 365.6, "end": 372.08000000000004, "text": " recognize because the name starts with X. So for example, X home is the current consumption of", "tokens": [5521, 570, 264, 1315, 3719, 365, 1783, 13, 407, 337, 1365, 11, 1783, 1280, 307, 264, 2190, 12126, 295], "temperature": 0.0, "avg_logprob": -0.14770843043471826, "compression_ratio": 1.6079545454545454, "no_speech_prob": 3.422472582315095e-05}, {"id": 49, "seek": 36560, "start": 372.08000000000004, "end": 379.52000000000004, "text": " the home, independent of whether there is data coming from this, sorry, there is power coming", "tokens": [264, 1280, 11, 6695, 295, 1968, 456, 307, 1412, 1348, 490, 341, 11, 2597, 11, 456, 307, 1347, 1348], "temperature": 0.0, "avg_logprob": -0.14770843043471826, "compression_ratio": 1.6079545454545454, "no_speech_prob": 3.422472582315095e-05}, {"id": 50, "seek": 36560, "start": 379.52000000000004, "end": 388.32000000000005, "text": " from the solar panels, or maybe instead it's coming from the battery. The actual data from the", "tokens": [490, 264, 7936, 13419, 11, 420, 1310, 2602, 309, 311, 1348, 490, 264, 5809, 13, 440, 3539, 1412, 490, 264], "temperature": 0.0, "avg_logprob": -0.14770843043471826, "compression_ratio": 1.6079545454545454, "no_speech_prob": 3.422472582315095e-05}, {"id": 51, "seek": 38832, "start": 388.32, "end": 395.59999999999997, "text": " inverter are a bit not suited, for example, to plotting useful graphs, but they have a few", "tokens": [47201, 366, 257, 857, 406, 24736, 11, 337, 1365, 11, 281, 41178, 4420, 24877, 11, 457, 436, 362, 257, 1326], "temperature": 0.0, "avg_logprob": -0.1358898663129963, "compression_ratio": 1.7158273381294964, "no_speech_prob": 1.8819942852132954e-05}, {"id": 52, "seek": 38832, "start": 395.59999999999997, "end": 400.15999999999997, "text": " computed fields that put things together. There's also a few dozen flags that are interesting. They", "tokens": [40610, 7909, 300, 829, 721, 1214, 13, 821, 311, 611, 257, 1326, 16654, 23265, 300, 366, 1880, 13, 814], "temperature": 0.0, "avg_logprob": -0.1358898663129963, "compression_ratio": 1.7158273381294964, "no_speech_prob": 1.8819942852132954e-05}, {"id": 53, "seek": 38832, "start": 400.15999999999997, "end": 406.8, "text": " are almost all zero, and so they will be a bit harder to reverse engineer. And also you can see", "tokens": [366, 1920, 439, 4018, 11, 293, 370, 436, 486, 312, 257, 857, 6081, 281, 9943, 11403, 13, 400, 611, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.1358898663129963, "compression_ratio": 1.7158273381294964, "no_speech_prob": 1.8819942852132954e-05}, {"id": 54, "seek": 38832, "start": 406.8, "end": 412.15999999999997, "text": " the five-volt inputs and the relay outputs in the logs. I actually never use these, so they are", "tokens": [264, 1732, 12, 47610, 15743, 293, 264, 24214, 23930, 294, 264, 20820, 13, 286, 767, 1128, 764, 613, 11, 370, 436, 366], "temperature": 0.0, "avg_logprob": -0.1358898663129963, "compression_ratio": 1.7158273381294964, "no_speech_prob": 1.8819942852132954e-05}, {"id": 55, "seek": 38832, "start": 412.15999999999997, "end": 416.48, "text": " always zero, but they're named like in one, in two, in three, in four, in five, so it's pretty", "tokens": [1009, 4018, 11, 457, 436, 434, 4926, 411, 294, 472, 11, 294, 732, 11, 294, 1045, 11, 294, 1451, 11, 294, 1732, 11, 370, 309, 311, 1238], "temperature": 0.0, "avg_logprob": -0.1358898663129963, "compression_ratio": 1.7158273381294964, "no_speech_prob": 1.8819942852132954e-05}, {"id": 56, "seek": 41648, "start": 416.48, "end": 422.32, "text": " easy to figure out. So what you can do with this is already do simple-minded hacks with curls. So", "tokens": [1858, 281, 2573, 484, 13, 407, 437, 291, 393, 360, 365, 341, 307, 1217, 360, 2199, 12, 23310, 33617, 365, 36950, 13, 407], "temperature": 0.0, "avg_logprob": -0.08660073487654976, "compression_ratio": 1.6810035842293907, "no_speech_prob": 4.2014049540739506e-05}, {"id": 57, "seek": 41648, "start": 422.32, "end": 426.0, "text": " for example, you can gather all the yearly data and do your own plots. For example, you can see", "tokens": [337, 1365, 11, 291, 393, 5448, 439, 264, 39102, 1412, 293, 360, 428, 1065, 28609, 13, 1171, 1365, 11, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.08660073487654976, "compression_ratio": 1.6810035842293907, "no_speech_prob": 4.2014049540739506e-05}, {"id": 58, "seek": 41648, "start": 426.0, "end": 434.08000000000004, "text": " here is when I do laundry because the weekend and Tuesday is where I consume more power.", "tokens": [510, 307, 562, 286, 360, 19811, 570, 264, 6711, 293, 10017, 307, 689, 286, 14732, 544, 1347, 13], "temperature": 0.0, "avg_logprob": -0.08660073487654976, "compression_ratio": 1.6810035842293907, "no_speech_prob": 4.2014049540739506e-05}, {"id": 59, "seek": 41648, "start": 435.28000000000003, "end": 440.8, "text": " And another thing that I did very early on was push data to MQTT to get some nice widgets on", "tokens": [400, 1071, 551, 300, 286, 630, 588, 2440, 322, 390, 2944, 1412, 281, 376, 48, 28178, 281, 483, 512, 1481, 43355, 322], "temperature": 0.0, "avg_logprob": -0.08660073487654976, "compression_ratio": 1.6810035842293907, "no_speech_prob": 4.2014049540739506e-05}, {"id": 60, "seek": 41648, "start": 440.8, "end": 445.6, "text": " my phone that could give me instant data without opening the web interface. And also for home", "tokens": [452, 2593, 300, 727, 976, 385, 9836, 1412, 1553, 5193, 264, 3670, 9226, 13, 400, 611, 337, 1280], "temperature": 0.0, "avg_logprob": -0.08660073487654976, "compression_ratio": 1.6810035842293907, "no_speech_prob": 4.2014049540739506e-05}, {"id": 61, "seek": 44560, "start": 445.6, "end": 452.72, "text": " automation, at some point I was using these to turn on and off some ZigBee smart plug bugs.", "tokens": [17769, 11, 412, 512, 935, 286, 390, 1228, 613, 281, 1261, 322, 293, 766, 512, 50004, 33, 1653, 4069, 5452, 15120, 13], "temperature": 0.0, "avg_logprob": -0.1629949036766501, "compression_ratio": 1.518716577540107, "no_speech_prob": 3.214174648746848e-05}, {"id": 62, "seek": 44560, "start": 454.0, "end": 461.68, "text": " But this was not any reverse engineering at the Raspberry Pi level. It was just looking at JSON", "tokens": [583, 341, 390, 406, 604, 9943, 7043, 412, 264, 41154, 17741, 1496, 13, 467, 390, 445, 1237, 412, 31828], "temperature": 0.0, "avg_logprob": -0.1629949036766501, "compression_ratio": 1.518716577540107, "no_speech_prob": 3.214174648746848e-05}, {"id": 63, "seek": 44560, "start": 461.68, "end": 470.72, "text": " stuff and doing just stuff with curl. But this was already enough to find some interesting bugs.", "tokens": [1507, 293, 884, 445, 1507, 365, 22591, 13, 583, 341, 390, 1217, 1547, 281, 915, 512, 1880, 15120, 13], "temperature": 0.0, "avg_logprob": -0.1629949036766501, "compression_ratio": 1.518716577540107, "no_speech_prob": 3.214174648746848e-05}, {"id": 64, "seek": 47072, "start": 470.72, "end": 477.04, "text": " There are some weird stuff in the logs. So for example, here you can see this probably stands", "tokens": [821, 366, 512, 3657, 1507, 294, 264, 20820, 13, 407, 337, 1365, 11, 510, 291, 393, 536, 341, 1391, 7382], "temperature": 0.0, "avg_logprob": -0.11079413481432983, "compression_ratio": 1.68, "no_speech_prob": 2.804653013299685e-05}, {"id": 65, "seek": 47072, "start": 477.04, "end": 484.64000000000004, "text": " for day and hour, and this stands for month and seconds, but it's a value that has a decimal", "tokens": [337, 786, 293, 1773, 11, 293, 341, 7382, 337, 1618, 293, 3949, 11, 457, 309, 311, 257, 2158, 300, 575, 257, 26601], "temperature": 0.0, "avg_logprob": -0.11079413481432983, "compression_ratio": 1.68, "no_speech_prob": 2.804653013299685e-05}, {"id": 66, "seek": 47072, "start": 484.64000000000004, "end": 489.76000000000005, "text": " point in it, so it makes no sense. And I will show later what happens. Also, there are some fields", "tokens": [935, 294, 309, 11, 370, 309, 1669, 572, 2020, 13, 400, 286, 486, 855, 1780, 437, 2314, 13, 2743, 11, 456, 366, 512, 7909], "temperature": 0.0, "avg_logprob": -0.11079413481432983, "compression_ratio": 1.68, "no_speech_prob": 2.804653013299685e-05}, {"id": 67, "seek": 47072, "start": 489.76000000000005, "end": 495.84000000000003, "text": " that end with L and H, but sometimes they are swapped. So you can see that L is the one that", "tokens": [300, 917, 365, 441, 293, 389, 11, 457, 2171, 436, 366, 50011, 13, 407, 291, 393, 536, 300, 441, 307, 264, 472, 300], "temperature": 0.0, "avg_logprob": -0.11079413481432983, "compression_ratio": 1.68, "no_speech_prob": 2.804653013299685e-05}, {"id": 68, "seek": 49584, "start": 495.84, "end": 503.91999999999996, "text": " stays always the same, and H is the one that keeps going up and down, up and down. And also with", "tokens": [10834, 1009, 264, 912, 11, 293, 389, 307, 264, 472, 300, 5965, 516, 493, 293, 760, 11, 493, 293, 760, 13, 400, 611, 365], "temperature": 0.0, "avg_logprob": -0.11135896476539406, "compression_ratio": 1.6457142857142857, "no_speech_prob": 2.2729996999260038e-05}, {"id": 69, "seek": 49584, "start": 503.91999999999996, "end": 509.44, "text": " L and H, they didn't really care a lot about them because also if you plot them, the plot looks", "tokens": [441, 293, 389, 11, 436, 994, 380, 534, 1127, 257, 688, 466, 552, 570, 611, 498, 291, 7542, 552, 11, 264, 7542, 1542], "temperature": 0.0, "avg_logprob": -0.11135896476539406, "compression_ratio": 1.6457142857142857, "no_speech_prob": 2.2729996999260038e-05}, {"id": 70, "seek": 49584, "start": 509.44, "end": 515.92, "text": " like this. So this is the solar production from the total solar production since the day that I", "tokens": [411, 341, 13, 407, 341, 307, 264, 7936, 4265, 490, 264, 3217, 7936, 4265, 1670, 264, 786, 300, 286], "temperature": 0.0, "avg_logprob": -0.11135896476539406, "compression_ratio": 1.6457142857142857, "no_speech_prob": 2.2729996999260038e-05}, {"id": 71, "seek": 51592, "start": 515.92, "end": 525.76, "text": " installed it. And this is how much it had produced in January, 2021. This is in December, and it's", "tokens": [8899, 309, 13, 400, 341, 307, 577, 709, 309, 632, 7126, 294, 7061, 11, 7201, 13, 639, 307, 294, 7687, 11, 293, 309, 311], "temperature": 0.0, "avg_logprob": -0.10513066626214362, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.476884244766552e-05}, {"id": 72, "seek": 51592, "start": 525.76, "end": 536.16, "text": " really weird. What actually happened is that they put the low as a signed value, but it should have", "tokens": [534, 3657, 13, 708, 767, 2011, 307, 300, 436, 829, 264, 2295, 382, 257, 8175, 2158, 11, 457, 309, 820, 362], "temperature": 0.0, "avg_logprob": -0.10513066626214362, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.476884244766552e-05}, {"id": 73, "seek": 51592, "start": 536.16, "end": 544.7199999999999, "text": " been unsigned. So whenever it goes from 2 to the 15 minus 1 to the 15, it actually flips back to", "tokens": [668, 2693, 16690, 13, 407, 5699, 309, 1709, 490, 568, 281, 264, 2119, 3175, 502, 281, 264, 2119, 11, 309, 767, 40249, 646, 281], "temperature": 0.0, "avg_logprob": -0.10513066626214362, "compression_ratio": 1.4603960396039604, "no_speech_prob": 1.476884244766552e-05}, {"id": 74, "seek": 54472, "start": 544.72, "end": 556.88, "text": " minus 32,000, whatever. So you can see that this is exactly 655.36 kilowatt hours. And if you fix it,", "tokens": [3175, 8858, 11, 1360, 11, 2035, 13, 407, 291, 393, 536, 300, 341, 307, 2293, 11624, 20, 13, 11309, 41295, 1591, 2496, 13, 400, 498, 291, 3191, 309, 11], "temperature": 0.0, "avg_logprob": -0.10688677701083096, "compression_ratio": 1.4059405940594059, "no_speech_prob": 6.557664892170578e-05}, {"id": 75, "seek": 54472, "start": 556.88, "end": 562.8000000000001, "text": " it's still wrong because there are some bugs. But I mean, this was not supposed really to be", "tokens": [309, 311, 920, 2085, 570, 456, 366, 512, 15120, 13, 583, 286, 914, 11, 341, 390, 406, 3442, 534, 281, 312], "temperature": 0.0, "avg_logprob": -0.10688677701083096, "compression_ratio": 1.4059405940594059, "no_speech_prob": 6.557664892170578e-05}, {"id": 76, "seek": 54472, "start": 564.1600000000001, "end": 570.48, "text": " used by the buyers of the appliance. People were just supposed to look at the nice plots.", "tokens": [1143, 538, 264, 23465, 295, 264, 45646, 13, 3432, 645, 445, 3442, 281, 574, 412, 264, 1481, 28609, 13], "temperature": 0.0, "avg_logprob": -0.10688677701083096, "compression_ratio": 1.4059405940594059, "no_speech_prob": 6.557664892170578e-05}, {"id": 77, "seek": 57048, "start": 570.48, "end": 578.4, "text": " Also, this is way more worrisome because there are flags that seem to be passing correctly. If you", "tokens": [2743, 11, 341, 307, 636, 544, 469, 5714, 423, 570, 456, 366, 23265, 300, 1643, 281, 312, 8437, 8944, 13, 759, 291], "temperature": 0.0, "avg_logprob": -0.1128339968229595, "compression_ratio": 1.6885964912280702, "no_speech_prob": 7.789195660734549e-05}, {"id": 78, "seek": 57048, "start": 578.4, "end": 584.8000000000001, "text": " look at the logs, it keeps giving these weird names that they keep going on and off like a few times", "tokens": [574, 412, 264, 20820, 11, 309, 5965, 2902, 613, 3657, 5288, 300, 436, 1066, 516, 322, 293, 766, 411, 257, 1326, 1413], "temperature": 0.0, "avg_logprob": -0.1128339968229595, "compression_ratio": 1.6885964912280702, "no_speech_prob": 7.789195660734549e-05}, {"id": 79, "seek": 57048, "start": 584.8000000000001, "end": 591.76, "text": " every day. And the name is very scary. It's battery charge over the current hard limit,", "tokens": [633, 786, 13, 400, 264, 1315, 307, 588, 6958, 13, 467, 311, 5809, 4602, 670, 264, 2190, 1152, 4948, 11], "temperature": 0.0, "avg_logprob": -0.1128339968229595, "compression_ratio": 1.6885964912280702, "no_speech_prob": 7.789195660734549e-05}, {"id": 80, "seek": 57048, "start": 591.76, "end": 598.48, "text": " and same for this charge. And the weird thing is that you can see this error in the web interface", "tokens": [293, 912, 337, 341, 4602, 13, 400, 264, 3657, 551, 307, 300, 291, 393, 536, 341, 6713, 294, 264, 3670, 9226], "temperature": 0.0, "avg_logprob": -0.1128339968229595, "compression_ratio": 1.6885964912280702, "no_speech_prob": 7.789195660734549e-05}, {"id": 81, "seek": 59848, "start": 598.48, "end": 604.08, "text": " all the time, but you never see it on the inverter. The inverter has a little panel with errors,", "tokens": [439, 264, 565, 11, 457, 291, 1128, 536, 309, 322, 264, 47201, 13, 440, 47201, 575, 257, 707, 4831, 365, 13603, 11], "temperature": 0.0, "avg_logprob": -0.10828638558435921, "compression_ratio": 1.6406926406926408, "no_speech_prob": 6.350284820655361e-05}, {"id": 82, "seek": 59848, "start": 604.08, "end": 609.28, "text": " and you cannot see that any time. So that's weird. And I didn't really like that. I asked", "tokens": [293, 291, 2644, 536, 300, 604, 565, 13, 407, 300, 311, 3657, 13, 400, 286, 994, 380, 534, 411, 300, 13, 286, 2351], "temperature": 0.0, "avg_logprob": -0.10828638558435921, "compression_ratio": 1.6406926406926408, "no_speech_prob": 6.350284820655361e-05}, {"id": 83, "seek": 59848, "start": 609.28, "end": 614.72, "text": " customer support, which were otherwise very nice, but they just said, yeah, don't worry, it's fine.", "tokens": [5474, 1406, 11, 597, 645, 5911, 588, 1481, 11, 457, 436, 445, 848, 11, 1338, 11, 500, 380, 3292, 11, 309, 311, 2489, 13], "temperature": 0.0, "avg_logprob": -0.10828638558435921, "compression_ratio": 1.6406926406926408, "no_speech_prob": 6.350284820655361e-05}, {"id": 84, "seek": 59848, "start": 617.04, "end": 622.96, "text": " So all the time while I was doing these things for fun, I had the lingering thought that the", "tokens": [407, 439, 264, 565, 1339, 286, 390, 884, 613, 721, 337, 1019, 11, 286, 632, 264, 49542, 1194, 300, 264], "temperature": 0.0, "avg_logprob": -0.10828638558435921, "compression_ratio": 1.6406926406926408, "no_speech_prob": 6.350284820655361e-05}, {"id": 85, "seek": 62296, "start": 622.96, "end": 629.6, "text": " microSD card would die over me because they say diamonds are forever. I don't know if it's true,", "tokens": [4532, 23969, 2920, 576, 978, 670, 385, 570, 436, 584, 22612, 366, 5680, 13, 286, 500, 380, 458, 498, 309, 311, 2074, 11], "temperature": 0.0, "avg_logprob": -0.1274694167461592, "compression_ratio": 1.6050420168067228, "no_speech_prob": 0.00019923776562791318}, {"id": 86, "seek": 62296, "start": 629.6, "end": 635.6800000000001, "text": " but certainly microSD cards are not forever. So even worse, I couldn't just go and say, okay,", "tokens": [457, 3297, 4532, 23969, 5632, 366, 406, 5680, 13, 407, 754, 5324, 11, 286, 2809, 380, 445, 352, 293, 584, 11, 1392, 11], "temperature": 0.0, "avg_logprob": -0.1274694167461592, "compression_ratio": 1.6050420168067228, "no_speech_prob": 0.00019923776562791318}, {"id": 87, "seek": 62296, "start": 635.6800000000001, "end": 643.44, "text": " it's 10 years warranty, please send me another SD card. Because the newer models, they moved the", "tokens": [309, 311, 1266, 924, 26852, 11, 1767, 2845, 385, 1071, 14638, 2920, 13, 1436, 264, 17628, 5245, 11, 436, 4259, 264], "temperature": 0.0, "avg_logprob": -0.1274694167461592, "compression_ratio": 1.6050420168067228, "no_speech_prob": 0.00019923776562791318}, {"id": 88, "seek": 62296, "start": 643.44, "end": 650.0, "text": " storage to cloud, and they only have five years of service, which is suspiciously close to the", "tokens": [6725, 281, 4588, 11, 293, 436, 787, 362, 1732, 924, 295, 2643, 11, 597, 307, 17931, 356, 1998, 281, 264], "temperature": 0.0, "avg_logprob": -0.1274694167461592, "compression_ratio": 1.6050420168067228, "no_speech_prob": 0.00019923776562791318}, {"id": 89, "seek": 65000, "start": 650.0, "end": 656.96, "text": " time before my own SD card died. So people won't pay for the cloud service. You won't have to repair", "tokens": [565, 949, 452, 1065, 14638, 2920, 4539, 13, 407, 561, 1582, 380, 1689, 337, 264, 4588, 2643, 13, 509, 1582, 380, 362, 281, 10535], "temperature": 0.0, "avg_logprob": -0.07210067143807045, "compression_ratio": 1.6127659574468085, "no_speech_prob": 7.418799214065075e-05}, {"id": 90, "seek": 65000, "start": 656.96, "end": 663.44, "text": " the data logger. Anyway, I never did anything about it until last year. Last year, I got the", "tokens": [264, 1412, 3565, 1321, 13, 5684, 11, 286, 1128, 630, 1340, 466, 309, 1826, 1036, 1064, 13, 5264, 1064, 11, 286, 658, 264], "temperature": 0.0, "avg_logprob": -0.07210067143807045, "compression_ratio": 1.6127659574468085, "no_speech_prob": 7.418799214065075e-05}, {"id": 91, "seek": 65000, "start": 663.44, "end": 670.88, "text": " data logger to shut down on me twice in a week, and I naively thought that it was just a network", "tokens": [1412, 3565, 1321, 281, 5309, 760, 322, 385, 6091, 294, 257, 1243, 11, 293, 286, 1667, 3413, 1194, 300, 309, 390, 445, 257, 3209], "temperature": 0.0, "avg_logprob": -0.07210067143807045, "compression_ratio": 1.6127659574468085, "no_speech_prob": 7.418799214065075e-05}, {"id": 92, "seek": 65000, "start": 670.88, "end": 675.2, "text": " problem, and I said, okay, I will just take out the SD card and set up a static address.", "tokens": [1154, 11, 293, 286, 848, 11, 1392, 11, 286, 486, 445, 747, 484, 264, 14638, 2920, 293, 992, 493, 257, 13437, 2985, 13], "temperature": 0.0, "avg_logprob": -0.07210067143807045, "compression_ratio": 1.6127659574468085, "no_speech_prob": 7.418799214065075e-05}, {"id": 93, "seek": 67520, "start": 675.2, "end": 681.84, "text": " Actually, the SD card was dying. I don't know why it really had all these problems in general.", "tokens": [5135, 11, 264, 14638, 2920, 390, 8639, 13, 286, 500, 380, 458, 983, 309, 534, 632, 439, 613, 2740, 294, 2674, 13], "temperature": 0.0, "avg_logprob": -0.11461759817720664, "compression_ratio": 1.593073593073593, "no_speech_prob": 9.875826799543574e-05}, {"id": 94, "seek": 67520, "start": 681.84, "end": 686.72, "text": " It didn't have any problem until last November, and last November, it really died in a matter", "tokens": [467, 994, 380, 362, 604, 1154, 1826, 1036, 7674, 11, 293, 1036, 7674, 11, 309, 534, 4539, 294, 257, 1871], "temperature": 0.0, "avg_logprob": -0.11461759817720664, "compression_ratio": 1.593073593073593, "no_speech_prob": 9.875826799543574e-05}, {"id": 95, "seek": 67520, "start": 686.72, "end": 694.72, "text": " of a week. So I have no idea what happened, but I'm very thankful to the SD card gods for.", "tokens": [295, 257, 1243, 13, 407, 286, 362, 572, 1558, 437, 2011, 11, 457, 286, 478, 588, 13611, 281, 264, 14638, 2920, 14049, 337, 13], "temperature": 0.0, "avg_logprob": -0.11461759817720664, "compression_ratio": 1.593073593073593, "no_speech_prob": 9.875826799543574e-05}, {"id": 96, "seek": 67520, "start": 696.1600000000001, "end": 701.36, "text": " So when I open it, this is what it looks like, and this is the behind of Raspberry Pi 3.", "tokens": [407, 562, 286, 1269, 309, 11, 341, 307, 437, 309, 1542, 411, 11, 293, 341, 307, 264, 2261, 295, 41154, 17741, 805, 13], "temperature": 0.0, "avg_logprob": -0.11461759817720664, "compression_ratio": 1.593073593073593, "no_speech_prob": 9.875826799543574e-05}, {"id": 97, "seek": 70136, "start": 701.36, "end": 709.6800000000001, "text": " It's potato quality, but okay, the first impressions was that it's a standard Raspbian", "tokens": [467, 311, 7445, 3125, 11, 457, 1392, 11, 264, 700, 24245, 390, 300, 309, 311, 257, 3832, 497, 9375, 20196], "temperature": 0.0, "avg_logprob": -0.13925447269361846, "compression_ratio": 1.5252100840336134, "no_speech_prob": 0.00011206693307030946}, {"id": 98, "seek": 70136, "start": 709.6800000000001, "end": 714.88, "text": " install, so I guess I can forgive them for not obeying the GPL because they didn't do anything", "tokens": [3625, 11, 370, 286, 2041, 286, 393, 10718, 552, 337, 406, 36346, 1840, 264, 460, 21593, 570, 436, 994, 380, 360, 1340], "temperature": 0.0, "avg_logprob": -0.13925447269361846, "compression_ratio": 1.5252100840336134, "no_speech_prob": 0.00011206693307030946}, {"id": 99, "seek": 70136, "start": 714.88, "end": 720.4, "text": " weird. I mean, it was just Raspbian. And there were two statically linked binaries in OMPI.", "tokens": [3657, 13, 286, 914, 11, 309, 390, 445, 497, 9375, 20196, 13, 400, 456, 645, 732, 2219, 984, 9408, 5171, 4889, 294, 422, 12224, 40, 13], "temperature": 0.0, "avg_logprob": -0.13925447269361846, "compression_ratio": 1.5252100840336134, "no_speech_prob": 0.00011206693307030946}, {"id": 100, "seek": 70136, "start": 721.36, "end": 726.48, "text": " One was running on TTY1. Nobody ever noticed that it was running there because there's no", "tokens": [1485, 390, 2614, 322, 314, 23433, 16, 13, 9297, 1562, 5694, 300, 309, 390, 2614, 456, 570, 456, 311, 572], "temperature": 0.0, "avg_logprob": -0.13925447269361846, "compression_ratio": 1.5252100840336134, "no_speech_prob": 0.00011206693307030946}, {"id": 101, "seek": 72648, "start": 726.48, "end": 733.76, "text": " room for an HDMI cable, so it was there, though. The main use of that HomePI, I think, was that", "tokens": [1808, 337, 364, 30811, 8220, 11, 370, 309, 390, 456, 11, 1673, 13, 440, 2135, 764, 295, 300, 8719, 31701, 11, 286, 519, 11, 390, 300], "temperature": 0.0, "avg_logprob": -0.13852162880472618, "compression_ratio": 1.5659574468085107, "no_speech_prob": 4.5604549086419865e-05}, {"id": 102, "seek": 72648, "start": 733.76, "end": 741.52, "text": " if you plug a keyboard through the USB and you press there, it rebooted, so it probably was", "tokens": [498, 291, 5452, 257, 10186, 807, 264, 10109, 293, 291, 1886, 456, 11, 309, 26802, 23325, 11, 370, 309, 1391, 390], "temperature": 0.0, "avg_logprob": -0.13852162880472618, "compression_ratio": 1.5659574468085107, "no_speech_prob": 4.5604549086419865e-05}, {"id": 103, "seek": 72648, "start": 741.52, "end": 748.5600000000001, "text": " a quick way for them to do some testing. But it had some nice ASCII art of the company logo.", "tokens": [257, 1702, 636, 337, 552, 281, 360, 512, 4997, 13, 583, 309, 632, 512, 1481, 7469, 34, 9503, 1523, 295, 264, 2237, 9699, 13], "temperature": 0.0, "avg_logprob": -0.13852162880472618, "compression_ratio": 1.5659574468085107, "no_speech_prob": 4.5604549086419865e-05}, {"id": 104, "seek": 74856, "start": 748.56, "end": 756.16, "text": " The other one is the one that we care more about. The data is placed in HomePI storage,", "tokens": [440, 661, 472, 307, 264, 472, 300, 321, 1127, 544, 466, 13, 440, 1412, 307, 7074, 294, 8719, 31701, 6725, 11], "temperature": 0.0, "avg_logprob": -0.1771536947975696, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.00018916216504294425}, {"id": 105, "seek": 74856, "start": 757.04, "end": 764.2399999999999, "text": " and the nice thing is that Strays is installed, so I was already thinking of ways to get some data", "tokens": [293, 264, 1481, 551, 307, 300, 745, 36212, 307, 8899, 11, 370, 286, 390, 1217, 1953, 295, 2098, 281, 483, 512, 1412], "temperature": 0.0, "avg_logprob": -0.1771536947975696, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.00018916216504294425}, {"id": 106, "seek": 74856, "start": 764.2399999999999, "end": 769.92, "text": " from this because with Strays, it's so easy. Anyway, there's basically, again,", "tokens": [490, 341, 570, 365, 745, 36212, 11, 309, 311, 370, 1858, 13, 5684, 11, 456, 311, 1936, 11, 797, 11], "temperature": 0.0, "avg_logprob": -0.1771536947975696, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.00018916216504294425}, {"id": 107, "seek": 76992, "start": 769.92, "end": 778.4799999999999, "text": " in stock install, some files are newer than the others, so that's an easy way to see what's going", "tokens": [294, 4127, 3625, 11, 512, 7098, 366, 17628, 813, 264, 2357, 11, 370, 300, 311, 364, 1858, 636, 281, 536, 437, 311, 516], "temperature": 0.0, "avg_logprob": -0.11657540303356242, "compression_ratio": 1.6141078838174274, "no_speech_prob": 0.00011081209231633693}, {"id": 108, "seek": 76992, "start": 778.4799999999999, "end": 785.36, "text": " on and what they changed. There's a couple system D units. There's an I2C RTC. This is nice because", "tokens": [322, 293, 437, 436, 3105, 13, 821, 311, 257, 1916, 1185, 413, 6815, 13, 821, 311, 364, 286, 17, 34, 497, 18238, 13, 639, 307, 1481, 570], "temperature": 0.0, "avg_logprob": -0.11657540303356242, "compression_ratio": 1.6141078838174274, "no_speech_prob": 0.00011081209231633693}, {"id": 109, "seek": 76992, "start": 785.36, "end": 790.0, "text": " at the time, I hadn't even looked at the PCB or anything, so I didn't know what was in there.", "tokens": [412, 264, 565, 11, 286, 8782, 380, 754, 2956, 412, 264, 42065, 420, 1340, 11, 370, 286, 994, 380, 458, 437, 390, 294, 456, 13], "temperature": 0.0, "avg_logprob": -0.11657540303356242, "compression_ratio": 1.6141078838174274, "no_speech_prob": 0.00011081209231633693}, {"id": 110, "seek": 76992, "start": 790.0, "end": 797.68, "text": " And knowing that there is a real-time clock on the board is nice to know. They disabled Bluetooth", "tokens": [400, 5276, 300, 456, 307, 257, 957, 12, 3766, 7830, 322, 264, 3150, 307, 1481, 281, 458, 13, 814, 15191, 20286], "temperature": 0.0, "avg_logprob": -0.11657540303356242, "compression_ratio": 1.6141078838174274, "no_speech_prob": 0.00011081209231633693}, {"id": 111, "seek": 79768, "start": 797.68, "end": 804.7199999999999, "text": " for no particular reason. Well, there is a reason, but I will say it later. So what I do", "tokens": [337, 572, 1729, 1778, 13, 1042, 11, 456, 307, 257, 1778, 11, 457, 286, 486, 584, 309, 1780, 13, 407, 437, 286, 360], "temperature": 0.0, "avg_logprob": -0.10976090723154497, "compression_ratio": 1.5965665236051503, "no_speech_prob": 3.656039189081639e-05}, {"id": 112, "seek": 79768, "start": 804.7199999999999, "end": 810.7199999999999, "text": " is just I copy the binaries to my computer, I add my SSH, and I turn it back on and it works.", "tokens": [307, 445, 286, 5055, 264, 5171, 4889, 281, 452, 3820, 11, 286, 909, 452, 12238, 39, 11, 293, 286, 1261, 309, 646, 322, 293, 309, 1985, 13], "temperature": 0.0, "avg_logprob": -0.10976090723154497, "compression_ratio": 1.5965665236051503, "no_speech_prob": 3.656039189081639e-05}, {"id": 113, "seek": 79768, "start": 812.0, "end": 818.3199999999999, "text": " So one thing that you need to consider before doing this kind of work is what about the warranty,", "tokens": [407, 472, 551, 300, 291, 643, 281, 1949, 949, 884, 341, 733, 295, 589, 307, 437, 466, 264, 26852, 11], "temperature": 0.0, "avg_logprob": -0.10976090723154497, "compression_ratio": 1.5965665236051503, "no_speech_prob": 3.656039189081639e-05}, {"id": 114, "seek": 79768, "start": 818.3199999999999, "end": 823.04, "text": " especially for something as expensive as the Solar Roof. The thing is the connection to the", "tokens": [2318, 337, 746, 382, 5124, 382, 264, 22385, 497, 29496, 13, 440, 551, 307, 264, 4984, 281, 264], "temperature": 0.0, "avg_logprob": -0.10976090723154497, "compression_ratio": 1.5965665236051503, "no_speech_prob": 3.656039189081639e-05}, {"id": 115, "seek": 82304, "start": 823.04, "end": 831.1999999999999, "text": " inverter is through USB. It's not direct RS485. There is a scooter. This thing is away from the", "tokens": [47201, 307, 807, 10109, 13, 467, 311, 406, 2047, 25855, 13318, 20, 13, 821, 307, 257, 30441, 13, 639, 551, 307, 1314, 490, 264], "temperature": 0.0, "avg_logprob": -0.16702708289736792, "compression_ratio": 1.5679012345679013, "no_speech_prob": 7.574384653707966e-05}, {"id": 116, "seek": 82304, "start": 831.1999999999999, "end": 836.16, "text": " board, so I didn't touch it. I just removed the screws to take a picture, and that was it.", "tokens": [3150, 11, 370, 286, 994, 380, 2557, 309, 13, 286, 445, 7261, 264, 13050, 281, 747, 257, 3036, 11, 293, 300, 390, 309, 13], "temperature": 0.0, "avg_logprob": -0.16702708289736792, "compression_ratio": 1.5679012345679013, "no_speech_prob": 7.574384653707966e-05}, {"id": 117, "seek": 82304, "start": 837.1999999999999, "end": 845.36, "text": " It's basically RS485 to USB adapter. So also, the inverter has the Baud rate. You can customize it,", "tokens": [467, 311, 1936, 25855, 13318, 20, 281, 10109, 22860, 13, 407, 611, 11, 264, 47201, 575, 264, 363, 3751, 3314, 13, 509, 393, 19734, 309, 11], "temperature": 0.0, "avg_logprob": -0.16702708289736792, "compression_ratio": 1.5679012345679013, "no_speech_prob": 7.574384653707966e-05}, {"id": 118, "seek": 82304, "start": 845.36, "end": 852.48, "text": " and the user manual has basically three choices. Date and time. What was the other one? It was", "tokens": [293, 264, 4195, 9688, 575, 1936, 1045, 7994, 13, 31805, 293, 565, 13, 708, 390, 264, 661, 472, 30, 467, 390], "temperature": 0.0, "avg_logprob": -0.16702708289736792, "compression_ratio": 1.5679012345679013, "no_speech_prob": 7.574384653707966e-05}, {"id": 119, "seek": 85248, "start": 852.48, "end": 862.32, "text": " the total that it reports for the produced energy. So you can reset it to zero if you give it to", "tokens": [264, 3217, 300, 309, 7122, 337, 264, 7126, 2281, 13, 407, 291, 393, 14322, 309, 281, 4018, 498, 291, 976, 309, 281], "temperature": 0.0, "avg_logprob": -0.09903375602062837, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.00011304660438327119}, {"id": 120, "seek": 85248, "start": 862.32, "end": 868.8000000000001, "text": " another person or for whatever reason you want to change it. And the Baud rate for RS5. So the user", "tokens": [1071, 954, 420, 337, 2035, 1778, 291, 528, 281, 1319, 309, 13, 400, 264, 363, 3751, 3314, 337, 25855, 20, 13, 407, 264, 4195], "temperature": 0.0, "avg_logprob": -0.09903375602062837, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.00011304660438327119}, {"id": 121, "seek": 85248, "start": 868.8000000000001, "end": 880.16, "text": " is supposed to know that it is based on RS485 and is supposed to look at RS485 data. I don't think", "tokens": [307, 3442, 281, 458, 300, 309, 307, 2361, 322, 25855, 13318, 20, 293, 307, 3442, 281, 574, 412, 25855, 13318, 20, 1412, 13, 286, 500, 380, 519], "temperature": 0.0, "avg_logprob": -0.09903375602062837, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.00011304660438327119}, {"id": 122, "seek": 88016, "start": 880.16, "end": 886.3199999999999, "text": " this is any kind of lawyer analysis, but still I'm pretty sure I didn't break the warranty", "tokens": [341, 307, 604, 733, 295, 11613, 5215, 11, 457, 920, 286, 478, 1238, 988, 286, 994, 380, 1821, 264, 26852], "temperature": 0.0, "avg_logprob": -0.1139107174343533, "compression_ratio": 1.5381355932203389, "no_speech_prob": 5.8579767937771976e-05}, {"id": 123, "seek": 88016, "start": 886.3199999999999, "end": 892.8, "text": " on the inverter, which is the really expensive part. So anyway, I got the binaries. The first", "tokens": [322, 264, 47201, 11, 597, 307, 264, 534, 5124, 644, 13, 407, 4033, 11, 286, 658, 264, 5171, 4889, 13, 440, 700], "temperature": 0.0, "avg_logprob": -0.1139107174343533, "compression_ratio": 1.5381355932203389, "no_speech_prob": 5.8579767937771976e-05}, {"id": 124, "seek": 88016, "start": 892.8, "end": 900.88, "text": " thing I do is using strings, and just doing strings by plus is awesome source of information.", "tokens": [551, 286, 360, 307, 1228, 13985, 11, 293, 445, 884, 13985, 538, 1804, 307, 3476, 4009, 295, 1589, 13], "temperature": 0.0, "avg_logprob": -0.1139107174343533, "compression_ratio": 1.5381355932203389, "no_speech_prob": 5.8579767937771976e-05}, {"id": 125, "seek": 88016, "start": 900.88, "end": 906.72, "text": " And what I noticed by doing quick search, for example, for the API endpoints and for", "tokens": [400, 437, 286, 5694, 538, 884, 1702, 3164, 11, 337, 1365, 11, 337, 264, 9362, 917, 20552, 293, 337], "temperature": 0.0, "avg_logprob": -0.1139107174343533, "compression_ratio": 1.5381355932203389, "no_speech_prob": 5.8579767937771976e-05}, {"id": 126, "seek": 90672, "start": 906.72, "end": 912.0, "text": " DevTTY USB, is that all the strings are together, and this means the program is unlikely to be", "tokens": [9096, 51, 23433, 10109, 11, 307, 300, 439, 264, 13985, 366, 1214, 11, 293, 341, 1355, 264, 1461, 307, 17518, 281, 312], "temperature": 0.0, "avg_logprob": -0.18108354296003068, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.00016551926091779023}, {"id": 127, "seek": 90672, "start": 912.0, "end": 917.2, "text": " written in C, because in C they will be null terminated, and they will be all one after another.", "tokens": [3720, 294, 383, 11, 570, 294, 383, 436, 486, 312, 18184, 1433, 5410, 11, 293, 436, 486, 312, 439, 472, 934, 1071, 13], "temperature": 0.0, "avg_logprob": -0.18108354296003068, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.00016551926091779023}, {"id": 128, "seek": 90672, "start": 918.4, "end": 925.12, "text": " So it could be go because, I mean, there's not that many languages that you would use to write", "tokens": [407, 309, 727, 312, 352, 570, 11, 286, 914, 11, 456, 311, 406, 300, 867, 8650, 300, 291, 576, 764, 281, 2464], "temperature": 0.0, "avg_logprob": -0.18108354296003068, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.00016551926091779023}, {"id": 129, "seek": 90672, "start": 925.12, "end": 931.2, "text": " a web server in and that produce a large binary. Certainly, it wouldn't be rushed because it was", "tokens": [257, 3670, 7154, 294, 293, 300, 5258, 257, 2416, 17434, 13, 16628, 11, 309, 2759, 380, 312, 24421, 570, 309, 390], "temperature": 0.0, "avg_logprob": -0.18108354296003068, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.00016551926091779023}, {"id": 130, "seek": 93120, "start": 931.2, "end": 938.5600000000001, "text": " four years ago, so it wasn't as fancy as today. And anyway, if you do a read-elf, you can see", "tokens": [1451, 924, 2057, 11, 370, 309, 2067, 380, 382, 10247, 382, 965, 13, 400, 4033, 11, 498, 291, 360, 257, 1401, 12, 1967, 11, 291, 393, 536], "temperature": 0.0, "avg_logprob": -0.2419156183170367, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.00020606492762453854}, {"id": 131, "seek": 93120, "start": 938.5600000000001, "end": 945.6800000000001, "text": " some section editors that go sim, tab, go pcl, and tab is basically the go format for the bug", "tokens": [512, 3541, 31446, 300, 352, 1034, 11, 4421, 11, 352, 280, 3474, 11, 293, 4421, 307, 1936, 264, 352, 7877, 337, 264, 7426], "temperature": 0.0, "avg_logprob": -0.2419156183170367, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.00020606492762453854}, {"id": 132, "seek": 93120, "start": 945.6800000000001, "end": 953.44, "text": " information. So it's almost certainly go, like what? Certainly go. Another thing that you can do", "tokens": [1589, 13, 407, 309, 311, 1920, 3297, 352, 11, 411, 437, 30, 16628, 352, 13, 3996, 551, 300, 291, 393, 360], "temperature": 0.0, "avg_logprob": -0.2419156183170367, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.00020606492762453854}, {"id": 133, "seek": 95344, "start": 953.44, "end": 966.24, "text": " for strings is for GitHub, because why wouldn't people use RPIO libraries from GitHub? And also,", "tokens": [337, 13985, 307, 337, 23331, 11, 570, 983, 2759, 380, 561, 764, 14105, 15167, 15148, 490, 23331, 30, 400, 611, 11], "temperature": 0.0, "avg_logprob": -0.16105414430300394, "compression_ratio": 1.3169014084507042, "no_speech_prob": 8.835978951537982e-05}, {"id": 134, "seek": 95344, "start": 966.24, "end": 976.48, "text": " you can find some nice names and things. And this is the name of the model of my inverter,", "tokens": [291, 393, 915, 512, 1481, 5288, 293, 721, 13, 400, 341, 307, 264, 1315, 295, 264, 2316, 295, 452, 47201, 11], "temperature": 0.0, "avg_logprob": -0.16105414430300394, "compression_ratio": 1.3169014084507042, "no_speech_prob": 8.835978951537982e-05}, {"id": 135, "seek": 97648, "start": 976.48, "end": 986.5600000000001, "text": " so I know that what they call it in the source code or in the files can be handy. So anyway,", "tokens": [370, 286, 458, 300, 437, 436, 818, 309, 294, 264, 4009, 3089, 420, 294, 264, 7098, 393, 312, 13239, 13, 407, 4033, 11], "temperature": 0.0, "avg_logprob": -0.1442712590664248, "compression_ratio": 1.4946236559139785, "no_speech_prob": 3.5694512916961685e-05}, {"id": 136, "seek": 97648, "start": 986.5600000000001, "end": 993.36, "text": " the thing is, there is running this, I have SSH access, so what I can do is just trace it", "tokens": [264, 551, 307, 11, 456, 307, 2614, 341, 11, 286, 362, 12238, 39, 2105, 11, 370, 437, 286, 393, 360, 307, 445, 13508, 309], "temperature": 0.0, "avg_logprob": -0.1442712590664248, "compression_ratio": 1.4946236559139785, "no_speech_prob": 3.5694512916961685e-05}, {"id": 137, "seek": 97648, "start": 993.36, "end": 1000.32, "text": " and see what happens. And one nice thing is that the T2 opens and closes the DevTTY USB 0 every", "tokens": [293, 536, 437, 2314, 13, 400, 472, 1481, 551, 307, 300, 264, 314, 17, 9870, 293, 24157, 264, 9096, 51, 23433, 10109, 1958, 633], "temperature": 0.0, "avg_logprob": -0.1442712590664248, "compression_ratio": 1.4946236559139785, "no_speech_prob": 3.5694512916961685e-05}, {"id": 138, "seek": 100032, "start": 1000.32, "end": 1007.6800000000001, "text": " minute, so it's pretty easy to also get not just the board rate, but also the parity, the stop bits.", "tokens": [3456, 11, 370, 309, 311, 1238, 1858, 281, 611, 483, 406, 445, 264, 3150, 3314, 11, 457, 611, 264, 44747, 11, 264, 1590, 9239, 13], "temperature": 0.0, "avg_logprob": -0.16808729905348557, "compression_ratio": 1.6329113924050633, "no_speech_prob": 3.637134796008468e-05}, {"id": 139, "seek": 100032, "start": 1009.7600000000001, "end": 1017.36, "text": " Okay, that's very little, but okay. I will go fast. So with go, the thing is it has an event", "tokens": [1033, 11, 300, 311, 588, 707, 11, 457, 1392, 13, 286, 486, 352, 2370, 13, 407, 365, 352, 11, 264, 551, 307, 309, 575, 364, 2280], "temperature": 0.0, "avg_logprob": -0.16808729905348557, "compression_ratio": 1.6329113924050633, "no_speech_prob": 3.637134796008468e-05}, {"id": 140, "seek": 100032, "start": 1017.36, "end": 1022.72, "text": " loop that can move a subroutine from one thread to another, so you need to track the file descriptor", "tokens": [6367, 300, 393, 1286, 257, 1422, 81, 45075, 490, 472, 7207, 281, 1071, 11, 370, 291, 643, 281, 2837, 264, 3991, 31280, 284], "temperature": 0.0, "avg_logprob": -0.16808729905348557, "compression_ratio": 1.6329113924050633, "no_speech_prob": 3.637134796008468e-05}, {"id": 141, "seek": 100032, "start": 1022.72, "end": 1030.0, "text": " numbers. So what you get here is something that is basically you can recognize to be Modbus.", "tokens": [3547, 13, 407, 437, 291, 483, 510, 307, 746, 300, 307, 1936, 291, 393, 5521, 281, 312, 6583, 21441, 13], "temperature": 0.0, "avg_logprob": -0.16808729905348557, "compression_ratio": 1.6329113924050633, "no_speech_prob": 3.637134796008468e-05}, {"id": 142, "seek": 103000, "start": 1030.0, "end": 1040.88, "text": " This is a read 16-bit register request. This is read one-bit register request. So what I did is", "tokens": [639, 307, 257, 1401, 3165, 12, 5260, 7280, 5308, 13, 639, 307, 1401, 472, 12, 5260, 7280, 5308, 13, 407, 437, 286, 630, 307], "temperature": 0.0, "avg_logprob": -0.20882242153852415, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00016221354599110782}, {"id": 143, "seek": 103000, "start": 1040.88, "end": 1048.88, "text": " I basically took this from the logs and I put it in a small C program to the code what it was.", "tokens": [286, 1936, 1890, 341, 490, 264, 20820, 293, 286, 829, 309, 294, 257, 1359, 383, 1461, 281, 264, 3089, 437, 309, 390, 13], "temperature": 0.0, "avg_logprob": -0.20882242153852415, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00016221354599110782}, {"id": 144, "seek": 103000, "start": 1048.88, "end": 1054.64, "text": " I mean, I could probably do something with Wireshark or whatever, but trace gave me already some C", "tokens": [286, 914, 11, 286, 727, 1391, 360, 746, 365, 343, 3145, 71, 809, 420, 2035, 11, 457, 13508, 2729, 385, 1217, 512, 383], "temperature": 0.0, "avg_logprob": -0.20882242153852415, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00016221354599110782}, {"id": 145, "seek": 105464, "start": 1054.64, "end": 1062.0800000000002, "text": " strings, so I put it in a C program. And this is enough, for example, to compare with the CSV files,", "tokens": [13985, 11, 370, 286, 829, 309, 294, 257, 383, 1461, 13, 400, 341, 307, 1547, 11, 337, 1365, 11, 281, 6794, 365, 264, 48814, 7098, 11], "temperature": 0.0, "avg_logprob": -0.1443571817307245, "compression_ratio": 1.505050505050505, "no_speech_prob": 9.156492160400376e-05}, {"id": 146, "seek": 105464, "start": 1063.44, "end": 1070.0, "text": " at least for the 16-bit registers. So for example, I can see now that these are probably low and high.", "tokens": [412, 1935, 337, 264, 3165, 12, 5260, 38351, 13, 407, 337, 1365, 11, 286, 393, 536, 586, 300, 613, 366, 1391, 2295, 293, 1090, 13], "temperature": 0.0, "avg_logprob": -0.1443571817307245, "compression_ratio": 1.505050505050505, "no_speech_prob": 9.156492160400376e-05}, {"id": 147, "seek": 105464, "start": 1070.0, "end": 1078.88, "text": " So this was the minutes and seconds, the hour, the day, the month, and the year. This is 21 in", "tokens": [407, 341, 390, 264, 2077, 293, 3949, 11, 264, 1773, 11, 264, 786, 11, 264, 1618, 11, 293, 264, 1064, 13, 639, 307, 5080, 294], "temperature": 0.0, "avg_logprob": -0.1443571817307245, "compression_ratio": 1.505050505050505, "no_speech_prob": 9.156492160400376e-05}, {"id": 148, "seek": 107888, "start": 1078.88, "end": 1086.3200000000002, "text": " hexadecimal. And I can also see that some values are fixed points. So this one is the version", "tokens": [23291, 762, 66, 10650, 13, 400, 286, 393, 611, 536, 300, 512, 4190, 366, 6806, 2793, 13, 407, 341, 472, 307, 264, 3037], "temperature": 0.0, "avg_logprob": -0.11163524170996438, "compression_ratio": 1.5444444444444445, "no_speech_prob": 2.690301880647894e-05}, {"id": 149, "seek": 107888, "start": 1086.3200000000002, "end": 1092.0, "text": " multiplied by 100, and this one is the temperature multiplied by 10. For the discrete inputs,", "tokens": [17207, 538, 2319, 11, 293, 341, 472, 307, 264, 4292, 17207, 538, 1266, 13, 1171, 264, 27706, 15743, 11], "temperature": 0.0, "avg_logprob": -0.11163524170996438, "compression_ratio": 1.5444444444444445, "no_speech_prob": 2.690301880647894e-05}, {"id": 150, "seek": 107888, "start": 1092.0, "end": 1102.64, "text": " it's a lot more complicated. I could find in strings some nice names of the fields. So for", "tokens": [309, 311, 257, 688, 544, 6179, 13, 286, 727, 915, 294, 13985, 512, 1481, 5288, 295, 264, 7909, 13, 407, 337], "temperature": 0.0, "avg_logprob": -0.11163524170996438, "compression_ratio": 1.5444444444444445, "no_speech_prob": 2.690301880647894e-05}, {"id": 151, "seek": 110264, "start": 1102.64, "end": 1112.8000000000002, "text": " example, GRN was no voltage from the grid and so on. It's a bit weird that they put it an alert", "tokens": [1365, 11, 10903, 45, 390, 572, 8352, 490, 264, 10748, 293, 370, 322, 13, 467, 311, 257, 857, 3657, 300, 436, 829, 309, 364, 9615], "temperature": 0.0, "avg_logprob": -0.11253619661518172, "compression_ratio": 1.6754385964912282, "no_speech_prob": 3.891372398356907e-05}, {"id": 152, "seek": 110264, "start": 1112.8000000000002, "end": 1119.6000000000001, "text": " that there was a blackout, but they didn't put as an alert that the fan broke, whatever. And this", "tokens": [300, 456, 390, 257, 2211, 346, 11, 457, 436, 994, 380, 829, 382, 364, 9615, 300, 264, 3429, 6902, 11, 2035, 13, 400, 341], "temperature": 0.0, "avg_logprob": -0.11253619661518172, "compression_ratio": 1.6754385964912282, "no_speech_prob": 3.891372398356907e-05}, {"id": 153, "seek": 110264, "start": 1119.6000000000001, "end": 1124.5600000000002, "text": " also doesn't make a lot of sense to average the bulls, but whatever. So anyway, this is already", "tokens": [611, 1177, 380, 652, 257, 688, 295, 2020, 281, 4274, 264, 4693, 82, 11, 457, 2035, 13, 407, 4033, 11, 341, 307, 1217], "temperature": 0.0, "avg_logprob": -0.11253619661518172, "compression_ratio": 1.6754385964912282, "no_speech_prob": 3.891372398356907e-05}, {"id": 154, "seek": 110264, "start": 1124.5600000000002, "end": 1128.88, "text": " nice because I have the names corresponding to all the fields, but I don't have the mappings", "tokens": [1481, 570, 286, 362, 264, 5288, 11760, 281, 439, 264, 7909, 11, 457, 286, 500, 380, 362, 264, 463, 28968], "temperature": 0.0, "avg_logprob": -0.11253619661518172, "compression_ratio": 1.6754385964912282, "no_speech_prob": 3.891372398356907e-05}, {"id": 155, "seek": 112888, "start": 1128.88, "end": 1135.6000000000001, "text": " of the discrete inputs. That's what Modbus calls the one-bit Boolean values to the flag.", "tokens": [295, 264, 27706, 15743, 13, 663, 311, 437, 6583, 21441, 5498, 264, 472, 12, 5260, 23351, 28499, 4190, 281, 264, 7166, 13], "temperature": 0.0, "avg_logprob": -0.13535725593566894, "compression_ratio": 1.6228813559322033, "no_speech_prob": 0.0001289055508095771}, {"id": 156, "seek": 112888, "start": 1135.6000000000001, "end": 1143.0400000000002, "text": " So, and I knew that this was the part that was broken in the code. So this was probably not going", "tokens": [407, 11, 293, 286, 2586, 300, 341, 390, 264, 644, 300, 390, 5463, 294, 264, 3089, 13, 407, 341, 390, 1391, 406, 516], "temperature": 0.0, "avg_logprob": -0.13535725593566894, "compression_ratio": 1.6228813559322033, "no_speech_prob": 0.0001289055508095771}, {"id": 157, "seek": 112888, "start": 1143.0400000000002, "end": 1151.2800000000002, "text": " to succeed, but actually it was successful. I used radar 2 for this, and I will super, super quickly", "tokens": [281, 7754, 11, 457, 767, 309, 390, 4406, 13, 286, 1143, 16544, 568, 337, 341, 11, 293, 286, 486, 1687, 11, 1687, 2661], "temperature": 0.0, "avg_logprob": -0.13535725593566894, "compression_ratio": 1.6228813559322033, "no_speech_prob": 0.0001289055508095771}, {"id": 158, "seek": 112888, "start": 1151.2800000000002, "end": 1156.8000000000002, "text": " go through radar 2. This is what I learned about radar 2 because I had never used it before. So", "tokens": [352, 807, 16544, 568, 13, 639, 307, 437, 286, 3264, 466, 16544, 568, 570, 286, 632, 1128, 1143, 309, 949, 13, 407], "temperature": 0.0, "avg_logprob": -0.13535725593566894, "compression_ratio": 1.6228813559322033, "no_speech_prob": 0.0001289055508095771}, {"id": 159, "seek": 115680, "start": 1156.8, "end": 1163.68, "text": " the commands are one letter per word. So ADF means analyze data in functions. There are some", "tokens": [264, 16901, 366, 472, 5063, 680, 1349, 13, 407, 9135, 37, 1355, 12477, 1412, 294, 6828, 13, 821, 366, 512], "temperature": 0.0, "avg_logprob": -0.12445154968573123, "compression_ratio": 1.6297872340425532, "no_speech_prob": 6.999825563980266e-05}, {"id": 160, "seek": 115680, "start": 1163.68, "end": 1169.52, "text": " people here that are old enough to remember Lotus 1, 2, 3. That's the way the menus worked in", "tokens": [561, 510, 300, 366, 1331, 1547, 281, 1604, 44769, 502, 11, 568, 11, 805, 13, 663, 311, 264, 636, 264, 30347, 2732, 294], "temperature": 0.0, "avg_logprob": -0.12445154968573123, "compression_ratio": 1.6297872340425532, "no_speech_prob": 6.999825563980266e-05}, {"id": 161, "seek": 115680, "start": 1169.52, "end": 1176.48, "text": " Lotus 1, 2, 3. Basically, you had like one letter per word in the command that you wanted to execute.", "tokens": [44769, 502, 11, 568, 11, 805, 13, 8537, 11, 291, 632, 411, 472, 5063, 680, 1349, 294, 264, 5622, 300, 291, 1415, 281, 14483, 13], "temperature": 0.0, "avg_logprob": -0.12445154968573123, "compression_ratio": 1.6297872340425532, "no_speech_prob": 6.999825563980266e-05}, {"id": 162, "seek": 115680, "start": 1176.48, "end": 1183.84, "text": " And the main ones are seek, print, and slash for search. And another interesting thing to know", "tokens": [400, 264, 2135, 2306, 366, 8075, 11, 4482, 11, 293, 17330, 337, 3164, 13, 400, 1071, 1880, 551, 281, 458], "temperature": 0.0, "avg_logprob": -0.12445154968573123, "compression_ratio": 1.6297872340425532, "no_speech_prob": 6.999825563980266e-05}, {"id": 163, "seek": 118384, "start": 1183.84, "end": 1189.9199999999998, "text": " is that the state of your work is saved in a project, which is actually a single file in the", "tokens": [307, 300, 264, 1785, 295, 428, 589, 307, 6624, 294, 257, 1716, 11, 597, 307, 767, 257, 2167, 3991, 294, 264], "temperature": 0.0, "avg_logprob": -0.12823013761150304, "compression_ratio": 1.5212765957446808, "no_speech_prob": 3.134235885227099e-05}, {"id": 164, "seek": 118384, "start": 1189.9199999999998, "end": 1195.6799999999998, "text": " Git repository with thousands of commands in it that say all the nice things about your binary.", "tokens": [16939, 25841, 365, 5383, 295, 16901, 294, 309, 300, 584, 439, 264, 1481, 721, 466, 428, 17434, 13], "temperature": 0.0, "avg_logprob": -0.12823013761150304, "compression_ratio": 1.5212765957446808, "no_speech_prob": 3.134235885227099e-05}, {"id": 165, "seek": 118384, "start": 1197.52, "end": 1209.12, "text": " You can get some information from the debug info that I showed earlier. There's a nice command to", "tokens": [509, 393, 483, 512, 1589, 490, 264, 24083, 13614, 300, 286, 4712, 3071, 13, 821, 311, 257, 1481, 5622, 281], "temperature": 0.0, "avg_logprob": -0.12823013761150304, "compression_ratio": 1.5212765957446808, "no_speech_prob": 3.134235885227099e-05}, {"id": 166, "seek": 120912, "start": 1209.12, "end": 1214.1599999999999, "text": " do all the analysis that is possible, but it doesn't really work for a static binary-linked", "tokens": [360, 439, 264, 5215, 300, 307, 1944, 11, 457, 309, 1177, 380, 534, 589, 337, 257, 13437, 17434, 12, 22473, 292], "temperature": 0.0, "avg_logprob": -0.11579436640585622, "compression_ratio": 1.6238938053097345, "no_speech_prob": 1.4738957361259963e-05}, {"id": 167, "seek": 120912, "start": 1216.4799999999998, "end": 1222.3999999999999, "text": " binary. So I use these ones instead. It starts giving some nice information. So for example,", "tokens": [17434, 13, 407, 286, 764, 613, 2306, 2602, 13, 467, 3719, 2902, 512, 1481, 1589, 13, 407, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.11579436640585622, "compression_ratio": 1.6238938053097345, "no_speech_prob": 1.4738957361259963e-05}, {"id": 168, "seek": 120912, "start": 1223.52, "end": 1229.28, "text": " in the project file, after I do the analyze strings commands, I can see that it has these", "tokens": [294, 264, 1716, 3991, 11, 934, 286, 360, 264, 12477, 13985, 16901, 11, 286, 393, 536, 300, 309, 575, 613], "temperature": 0.0, "avg_logprob": -0.11579436640585622, "compression_ratio": 1.6238938053097345, "no_speech_prob": 1.4738957361259963e-05}, {"id": 169, "seek": 120912, "start": 1229.28, "end": 1236.3999999999999, "text": " CS commands. And now when I do the disassembly, it actually prints these as a string and not", "tokens": [9460, 16901, 13, 400, 586, 562, 286, 360, 264, 717, 29386, 356, 11, 309, 767, 22305, 613, 382, 257, 6798, 293, 406], "temperature": 0.0, "avg_logprob": -0.11579436640585622, "compression_ratio": 1.6238938053097345, "no_speech_prob": 1.4738957361259963e-05}, {"id": 170, "seek": 123640, "start": 1236.4, "end": 1245.92, "text": " as instructions. Likewise, when I do AXD, I can see that it loads these. And it also says what is", "tokens": [382, 9415, 13, 30269, 11, 562, 286, 360, 316, 55, 35, 11, 286, 393, 536, 300, 309, 12668, 613, 13, 400, 309, 611, 1619, 437, 307], "temperature": 0.0, "avg_logprob": -0.1454011899120403, "compression_ratio": 1.6637931034482758, "no_speech_prob": 2.331013820366934e-05}, {"id": 171, "seek": 123640, "start": 1245.92, "end": 1249.6000000000001, "text": " the data that is loaded from here. This is probably in the constant pool. So for example,", "tokens": [264, 1412, 300, 307, 13210, 490, 510, 13, 639, 307, 1391, 294, 264, 5754, 7005, 13, 407, 337, 1365, 11], "temperature": 0.0, "avg_logprob": -0.1454011899120403, "compression_ratio": 1.6637931034482758, "no_speech_prob": 2.331013820366934e-05}, {"id": 172, "seek": 123640, "start": 1249.6000000000001, "end": 1255.92, "text": " this instruction is the one that loads the address of dev.tty.usb0. One thing that you can do is also", "tokens": [341, 10951, 307, 264, 472, 300, 12668, 264, 2985, 295, 1905, 13, 83, 874, 13, 301, 65, 15, 13, 1485, 551, 300, 291, 393, 360, 307, 611], "temperature": 0.0, "avg_logprob": -0.1454011899120403, "compression_ratio": 1.6637931034482758, "no_speech_prob": 2.331013820366934e-05}, {"id": 173, "seek": 123640, "start": 1255.92, "end": 1262.0, "text": " you can write your own commands and add them to the file. So for example, here, I know that this", "tokens": [291, 393, 2464, 428, 1065, 16901, 293, 909, 552, 281, 264, 3991, 13, 407, 337, 1365, 11, 510, 11, 286, 458, 300, 341], "temperature": 0.0, "avg_logprob": -0.1454011899120403, "compression_ratio": 1.6637931034482758, "no_speech_prob": 2.331013820366934e-05}, {"id": 174, "seek": 126200, "start": 1262.0, "end": 1268.32, "text": " location is a data operand for this instruction. And I can tell Rader 2, for everything that is", "tokens": [4914, 307, 257, 1412, 2208, 474, 337, 341, 10951, 13, 400, 286, 393, 980, 497, 8312, 568, 11, 337, 1203, 300, 307], "temperature": 0.0, "avg_logprob": -0.1368041435877482, "compression_ratio": 1.574585635359116, "no_speech_prob": 3.0287352274172008e-05}, {"id": 175, "seek": 126200, "start": 1268.32, "end": 1278.24, "text": " in here, make it dumped as bytes, not instructions. So after I add all these things to the project", "tokens": [294, 510, 11, 652, 309, 32131, 382, 36088, 11, 406, 9415, 13, 407, 934, 286, 909, 439, 613, 721, 281, 264, 1716], "temperature": 0.0, "avg_logprob": -0.1368041435877482, "compression_ratio": 1.574585635359116, "no_speech_prob": 3.0287352274172008e-05}, {"id": 176, "seek": 126200, "start": 1278.24, "end": 1284.32, "text": " file, it will not be dumped as a rubbish ARM instruction. It will actually print the word.", "tokens": [3991, 11, 309, 486, 406, 312, 32131, 382, 257, 29978, 45209, 10951, 13, 467, 486, 767, 4482, 264, 1349, 13], "temperature": 0.0, "avg_logprob": -0.1368041435877482, "compression_ratio": 1.574585635359116, "no_speech_prob": 3.0287352274172008e-05}, {"id": 177, "seek": 128432, "start": 1284.32, "end": 1292.24, "text": " Then you can also search keys. For example, if I search for the two flags that went up and", "tokens": [1396, 291, 393, 611, 3164, 9317, 13, 1171, 1365, 11, 498, 286, 3164, 337, 264, 732, 23265, 300, 1437, 493, 293], "temperature": 0.0, "avg_logprob": -0.19138448262952037, "compression_ratio": 1.6622222222222223, "no_speech_prob": 9.257258352590725e-05}, {"id": 178, "seek": 128432, "start": 1292.24, "end": 1299.52, "text": " down, I can see that they are here. And here, they are closed. So I decided to search for this", "tokens": [760, 11, 286, 393, 536, 300, 436, 366, 510, 13, 400, 510, 11, 436, 366, 5395, 13, 407, 286, 3047, 281, 3164, 337, 341], "temperature": 0.0, "avg_logprob": -0.19138448262952037, "compression_ratio": 1.6622222222222223, "no_speech_prob": 9.257258352590725e-05}, {"id": 179, "seek": 128432, "start": 1299.52, "end": 1305.28, "text": " address. You have to put it backwards, because it's little Indian. So this is the first byte and", "tokens": [2985, 13, 509, 362, 281, 829, 309, 12204, 11, 570, 309, 311, 707, 6427, 13, 407, 341, 307, 264, 700, 40846, 293], "temperature": 0.0, "avg_logprob": -0.19138448262952037, "compression_ratio": 1.6622222222222223, "no_speech_prob": 9.257258352590725e-05}, {"id": 180, "seek": 128432, "start": 1305.28, "end": 1312.08, "text": " this is the last one. But then I found that they were found relatively close, like 68 bytes", "tokens": [341, 307, 264, 1036, 472, 13, 583, 550, 286, 1352, 300, 436, 645, 1352, 7226, 1998, 11, 411, 23317, 36088], "temperature": 0.0, "avg_logprob": -0.19138448262952037, "compression_ratio": 1.6622222222222223, "no_speech_prob": 9.257258352590725e-05}, {"id": 181, "seek": 131208, "start": 1312.08, "end": 1320.56, "text": " apart. So you dump them and it's very helpful that it even tells you where the hits were from", "tokens": [4936, 13, 407, 291, 11430, 552, 293, 309, 311, 588, 4961, 300, 309, 754, 5112, 291, 689, 264, 8664, 645, 490], "temperature": 0.0, "avg_logprob": -0.16500047956194197, "compression_ratio": 1.5054347826086956, "no_speech_prob": 9.29621746763587e-05}, {"id": 182, "seek": 131208, "start": 1320.56, "end": 1328.08, "text": " the previous searches. And here, you can see some nice things. It seems to repeat every", "tokens": [264, 3894, 26701, 13, 400, 510, 11, 291, 393, 536, 512, 1481, 721, 13, 467, 2544, 281, 7149, 633], "temperature": 0.0, "avg_logprob": -0.16500047956194197, "compression_ratio": 1.5054347826086956, "no_speech_prob": 9.29621746763587e-05}, {"id": 183, "seek": 131208, "start": 1332.0, "end": 1340.0, "text": " 68 bytes. And it's always pointed to the string followed by the length. And also, there's these", "tokens": [23317, 36088, 13, 400, 309, 311, 1009, 10932, 281, 264, 6798, 6263, 538, 264, 4641, 13, 400, 611, 11, 456, 311, 613], "temperature": 0.0, "avg_logprob": -0.16500047956194197, "compression_ratio": 1.5054347826086956, "no_speech_prob": 9.29621746763587e-05}, {"id": 184, "seek": 134000, "start": 1340.0, "end": 1347.84, "text": " nice numbers, which might be maybe the numbers of the discrete inputs, who knows.", "tokens": [1481, 3547, 11, 597, 1062, 312, 1310, 264, 3547, 295, 264, 27706, 15743, 11, 567, 3255, 13], "temperature": 0.0, "avg_logprob": -0.12084798812866211, "compression_ratio": 1.5654761904761905, "no_speech_prob": 2.9884695322834887e-05}, {"id": 185, "seek": 134000, "start": 1350.0, "end": 1356.56, "text": " And if you go back and back, you can see using the seek command, I can go back 68 bytes at the", "tokens": [400, 498, 291, 352, 646, 293, 646, 11, 291, 393, 536, 1228, 264, 8075, 5622, 11, 286, 393, 352, 646, 23317, 36088, 412, 264], "temperature": 0.0, "avg_logprob": -0.12084798812866211, "compression_ratio": 1.5654761904761905, "no_speech_prob": 2.9884695322834887e-05}, {"id": 186, "seek": 134000, "start": 1356.56, "end": 1365.68, "text": " time. And sooner or later, I get to a point where the format changes. 68 bytes before,", "tokens": [565, 13, 400, 15324, 420, 1780, 11, 286, 483, 281, 257, 935, 689, 264, 7877, 2962, 13, 23317, 36088, 949, 11], "temperature": 0.0, "avg_logprob": -0.12084798812866211, "compression_ratio": 1.5654761904761905, "no_speech_prob": 2.9884695322834887e-05}, {"id": 187, "seek": 136568, "start": 1365.68, "end": 1372.24, "text": " there's nothing like what was afterwards. So this was the beginning of the array. And now, I know", "tokens": [456, 311, 1825, 411, 437, 390, 10543, 13, 407, 341, 390, 264, 2863, 295, 264, 10225, 13, 400, 586, 11, 286, 458], "temperature": 0.0, "avg_logprob": -0.12873961050299149, "compression_ratio": 1.5052083333333333, "no_speech_prob": 7.290927896974608e-05}, {"id": 188, "seek": 136568, "start": 1372.24, "end": 1384.4, "text": " exactly which discrete input was with which name and so on. I can also tell to print data. So,", "tokens": [2293, 597, 27706, 4846, 390, 365, 597, 1315, 293, 370, 322, 13, 286, 393, 611, 980, 281, 4482, 1412, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.12873961050299149, "compression_ratio": 1.5052083333333333, "no_speech_prob": 7.290927896974608e-05}, {"id": 189, "seek": 136568, "start": 1384.4, "end": 1391.2, "text": " for example, this was a floating point number. And if I print it, it's 0.1. So the guess is that", "tokens": [337, 1365, 11, 341, 390, 257, 12607, 935, 1230, 13, 400, 498, 286, 4482, 309, 11, 309, 311, 1958, 13, 16, 13, 407, 264, 2041, 307, 300], "temperature": 0.0, "avg_logprob": -0.12873961050299149, "compression_ratio": 1.5052083333333333, "no_speech_prob": 7.290927896974608e-05}, {"id": 190, "seek": 139120, "start": 1391.2, "end": 1397.6000000000001, "text": " this would also be something related to the fixed point values. And now, it's time to actually find", "tokens": [341, 576, 611, 312, 746, 4077, 281, 264, 6806, 935, 4190, 13, 400, 586, 11, 309, 311, 565, 281, 767, 915], "temperature": 0.0, "avg_logprob": -0.08946210629231222, "compression_ratio": 1.5294117647058822, "no_speech_prob": 8.947247260948643e-05}, {"id": 191, "seek": 139120, "start": 1399.1200000000001, "end": 1407.76, "text": " the pointer to this. I do, I search for this address here. And I find it here. It's also", "tokens": [264, 23918, 281, 341, 13, 286, 360, 11, 286, 3164, 337, 341, 2985, 510, 13, 400, 286, 915, 309, 510, 13, 467, 311, 611], "temperature": 0.0, "avg_logprob": -0.08946210629231222, "compression_ratio": 1.5294117647058822, "no_speech_prob": 8.947247260948643e-05}, {"id": 192, "seek": 139120, "start": 1407.76, "end": 1414.48, "text": " address followed by the number of entries. So it's probably some kind of array descriptor for go.", "tokens": [2985, 6263, 538, 264, 1230, 295, 23041, 13, 407, 309, 311, 1391, 512, 733, 295, 10225, 31280, 284, 337, 352, 13], "temperature": 0.0, "avg_logprob": -0.08946210629231222, "compression_ratio": 1.5294117647058822, "no_speech_prob": 8.947247260948643e-05}, {"id": 193, "seek": 141448, "start": 1414.48, "end": 1422.08, "text": " And then, I search for the address of the descriptor. And then, if I go here, I see that there is", "tokens": [400, 550, 11, 286, 3164, 337, 264, 2985, 295, 264, 31280, 284, 13, 400, 550, 11, 498, 286, 352, 510, 11, 286, 536, 300, 456, 307], "temperature": 0.0, "avg_logprob": -0.1387990184665955, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.345523509779014e-05}, {"id": 194, "seek": 141448, "start": 1424.96, "end": 1430.16, "text": " a reference from the query function of my model of the inverter. So I guess we have a winner.", "tokens": [257, 6408, 490, 264, 14581, 2445, 295, 452, 2316, 295, 264, 47201, 13, 407, 286, 2041, 321, 362, 257, 8507, 13], "temperature": 0.0, "avg_logprob": -0.1387990184665955, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.345523509779014e-05}, {"id": 195, "seek": 141448, "start": 1431.6, "end": 1438.08, "text": " And in fact, what I did then was rewrite the software using Modbus. It outputs the logs", "tokens": [400, 294, 1186, 11, 437, 286, 630, 550, 390, 28132, 264, 4722, 1228, 6583, 21441, 13, 467, 23930, 264, 20820], "temperature": 0.0, "avg_logprob": -0.1387990184665955, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.345523509779014e-05}, {"id": 196, "seek": 141448, "start": 1438.08, "end": 1443.1200000000001, "text": " in exactly the same format. So I still have a continuous log from the date of the installation,", "tokens": [294, 2293, 264, 912, 7877, 13, 407, 286, 920, 362, 257, 10957, 3565, 490, 264, 4002, 295, 264, 13260, 11], "temperature": 0.0, "avg_logprob": -0.1387990184665955, "compression_ratio": 1.6666666666666667, "no_speech_prob": 3.345523509779014e-05}, {"id": 197, "seek": 144312, "start": 1443.12, "end": 1448.3999999999999, "text": " except I didn't fix, I didn't leave it exactly the same. I fixed the bugs. So,", "tokens": [3993, 286, 994, 380, 3191, 11, 286, 994, 380, 1856, 309, 2293, 264, 912, 13, 286, 6806, 264, 15120, 13, 407, 11], "temperature": 0.0, "avg_logprob": -0.11717768104708924, "compression_ratio": 1.5676855895196506, "no_speech_prob": 5.907846207264811e-05}, {"id": 198, "seek": 144312, "start": 1450.56, "end": 1457.28, "text": " no averages of dates. The scary flags are not logged anymore. I can see now whether it's using", "tokens": [572, 42257, 295, 11691, 13, 440, 6958, 23265, 366, 406, 27231, 3602, 13, 286, 393, 536, 586, 1968, 309, 311, 1228], "temperature": 0.0, "avg_logprob": -0.11717768104708924, "compression_ratio": 1.5676855895196506, "no_speech_prob": 5.907846207264811e-05}, {"id": 199, "seek": 144312, "start": 1457.9199999999998, "end": 1462.8799999999999, "text": " the battery or not. And I even got the grid non-flag during a blackout. So I guess that's", "tokens": [264, 5809, 420, 406, 13, 400, 286, 754, 658, 264, 10748, 2107, 12, 3423, 559, 1830, 257, 2211, 346, 13, 407, 286, 2041, 300, 311], "temperature": 0.0, "avg_logprob": -0.11717768104708924, "compression_ratio": 1.5676855895196506, "no_speech_prob": 5.907846207264811e-05}, {"id": 200, "seek": 144312, "start": 1462.8799999999999, "end": 1470.3999999999999, "text": " full confirmation that it works. It also does the same thing that I was doing before with curl.", "tokens": [1577, 21871, 300, 309, 1985, 13, 467, 611, 775, 264, 912, 551, 300, 286, 390, 884, 949, 365, 22591, 13], "temperature": 0.0, "avg_logprob": -0.11717768104708924, "compression_ratio": 1.5676855895196506, "no_speech_prob": 5.907846207264811e-05}, {"id": 201, "seek": 147040, "start": 1470.4, "end": 1476.16, "text": " Now, I do it natively. So every minute, I export it to MQTT with Home Assistant. I don't have the", "tokens": [823, 11, 286, 360, 309, 8470, 356, 13, 407, 633, 3456, 11, 286, 10725, 309, 281, 376, 48, 28178, 365, 8719, 14890, 13, 286, 500, 380, 362, 264], "temperature": 0.0, "avg_logprob": -0.10238718448724962, "compression_ratio": 1.5972696245733788, "no_speech_prob": 5.6801527534844354e-05}, {"id": 202, "seek": 147040, "start": 1476.16, "end": 1480.16, "text": " plot functionality, but I can get it from Home Assistant. So that's fine. This is the source", "tokens": [7542, 14980, 11, 457, 286, 393, 483, 309, 490, 8719, 14890, 13, 407, 300, 311, 2489, 13, 639, 307, 264, 4009], "temperature": 0.0, "avg_logprob": -0.10238718448724962, "compression_ratio": 1.5972696245733788, "no_speech_prob": 5.6801527534844354e-05}, {"id": 203, "seek": 147040, "start": 1480.16, "end": 1486.48, "text": " code. And sooner or later, I will try to put an Ansible playbook so that if the SD card dies", "tokens": [3089, 13, 400, 15324, 420, 1780, 11, 286, 486, 853, 281, 829, 364, 14590, 964, 862, 2939, 370, 300, 498, 264, 14638, 2920, 2714], "temperature": 0.0, "avg_logprob": -0.10238718448724962, "compression_ratio": 1.5972696245733788, "no_speech_prob": 5.6801527534844354e-05}, {"id": 204, "seek": 147040, "start": 1486.48, "end": 1493.0400000000002, "text": " once more, I will just have a very quick way to deploy it. As a bonus, for the last minute", "tokens": [1564, 544, 11, 286, 486, 445, 362, 257, 588, 1702, 636, 281, 7274, 309, 13, 1018, 257, 10882, 11, 337, 264, 1036, 3456], "temperature": 0.0, "avg_logprob": -0.10238718448724962, "compression_ratio": 1.5972696245733788, "no_speech_prob": 5.6801527534844354e-05}, {"id": 205, "seek": 147040, "start": 1493.0400000000002, "end": 1497.76, "text": " of the talk, I have a picture of the PCB because at some point, I wanted to update the DBN11.", "tokens": [295, 264, 751, 11, 286, 362, 257, 3036, 295, 264, 42065, 570, 412, 512, 935, 11, 286, 1415, 281, 5623, 264, 26754, 45, 5348, 13], "temperature": 0.0, "avg_logprob": -0.10238718448724962, "compression_ratio": 1.5972696245733788, "no_speech_prob": 5.6801527534844354e-05}, {"id": 206, "seek": 149776, "start": 1497.76, "end": 1506.16, "text": " The nickname changed, so it didn't get the network anymore. I had to really connect the Raspberry", "tokens": [440, 21641, 3105, 11, 370, 309, 994, 380, 483, 264, 3209, 3602, 13, 286, 632, 281, 534, 1745, 264, 41154], "temperature": 0.0, "avg_logprob": -0.1282729975382487, "compression_ratio": 1.4427860696517414, "no_speech_prob": 5.8281028032070026e-05}, {"id": 207, "seek": 149776, "start": 1506.16, "end": 1516.08, "text": " Pi to the keyboard and monitor. So here's the PCB. It's a work of art. It's all through whole", "tokens": [17741, 281, 264, 10186, 293, 6002, 13, 407, 510, 311, 264, 42065, 13, 467, 311, 257, 589, 295, 1523, 13, 467, 311, 439, 807, 1379], "temperature": 0.0, "avg_logprob": -0.1282729975382487, "compression_ratio": 1.4427860696517414, "no_speech_prob": 5.8281028032070026e-05}, {"id": 208, "seek": 149776, "start": 1516.08, "end": 1524.96, "text": " components. Don't ask me why. The inputs are voltage dividers, so learning that the blue resistors", "tokens": [6677, 13, 1468, 380, 1029, 385, 983, 13, 440, 15743, 366, 8352, 4996, 433, 11, 370, 2539, 300, 264, 3344, 4597, 830], "temperature": 0.0, "avg_logprob": -0.1282729975382487, "compression_ratio": 1.4427860696517414, "no_speech_prob": 5.8281028032070026e-05}, {"id": 209, "seek": 152496, "start": 1524.96, "end": 1532.16, "text": " are the more precise one finally paid off after, like, 40 years of my life. Here's the battery-backed", "tokens": [366, 264, 544, 13600, 472, 2721, 4835, 766, 934, 11, 411, 11, 3356, 924, 295, 452, 993, 13, 1692, 311, 264, 5809, 12, 3207, 292], "temperature": 0.0, "avg_logprob": -0.1372833251953125, "compression_ratio": 1.5903614457831325, "no_speech_prob": 2.590473923191894e-05}, {"id": 210, "seek": 152496, "start": 1532.16, "end": 1541.3600000000001, "text": " RTC. There's a power LED and an alert LED connected to the GPIO. This is nice. This is a driver I see", "tokens": [497, 18238, 13, 821, 311, 257, 1347, 11261, 293, 364, 9615, 11261, 4582, 281, 264, 26039, 15167, 13, 639, 307, 1481, 13, 639, 307, 257, 6787, 286, 536], "temperature": 0.0, "avg_logprob": -0.1372833251953125, "compression_ratio": 1.5903614457831325, "no_speech_prob": 2.590473923191894e-05}, {"id": 211, "seek": 152496, "start": 1541.3600000000001, "end": 1548.8, "text": " for the relays and also for the LEDs because these are powered in five volts, not 3.3. And there's", "tokens": [337, 264, 1039, 3772, 293, 611, 337, 264, 33366, 570, 613, 366, 17786, 294, 1732, 22322, 11, 406, 805, 13, 18, 13, 400, 456, 311], "temperature": 0.0, "avg_logprob": -0.1372833251953125, "compression_ratio": 1.5903614457831325, "no_speech_prob": 2.590473923191894e-05}, {"id": 212, "seek": 152496, "start": 1548.8, "end": 1552.96, "text": " also, this is nice if somebody wanted to hack further on it. These are test pins and they are", "tokens": [611, 11, 341, 307, 1481, 498, 2618, 1415, 281, 10339, 3052, 322, 309, 13, 1981, 366, 1500, 16392, 293, 436, 366], "temperature": 0.0, "avg_logprob": -0.1372833251953125, "compression_ratio": 1.5903614457831325, "no_speech_prob": 2.590473923191894e-05}, {"id": 213, "seek": 155296, "start": 1552.96, "end": 1559.76, "text": " connected to eight more GPIOs on the Raspberry Pi thing. But there's something really weird here", "tokens": [4582, 281, 3180, 544, 26039, 15167, 82, 322, 264, 41154, 17741, 551, 13, 583, 456, 311, 746, 534, 3657, 510], "temperature": 0.0, "avg_logprob": -0.1459717599969161, "compression_ratio": 1.5914893617021277, "no_speech_prob": 0.00011848326539620757}, {"id": 214, "seek": 155296, "start": 1559.76, "end": 1568.8, "text": " because this part, these Q-terminals are not exposed. They're unused. And this is a bias", "tokens": [570, 341, 644, 11, 613, 1249, 12, 29725, 1124, 366, 406, 9495, 13, 814, 434, 44383, 13, 400, 341, 307, 257, 12577], "temperature": 0.0, "avg_logprob": -0.1459717599969161, "compression_ratio": 1.5914893617021277, "no_speech_prob": 0.00011848326539620757}, {"id": 215, "seek": 155296, "start": 1568.8, "end": 1574.4, "text": " resistor. This is a terminal resistor. This is another RS485 transducer because remember that", "tokens": [37672, 13, 639, 307, 257, 14709, 37672, 13, 639, 307, 1071, 25855, 13318, 20, 1145, 769, 1776, 570, 1604, 300], "temperature": 0.0, "avg_logprob": -0.1459717599969161, "compression_ratio": 1.5914893617021277, "no_speech_prob": 0.00011848326539620757}, {"id": 216, "seek": 155296, "start": 1574.4, "end": 1579.52, "text": " it was connected through USB. And it actually works. I have no idea why it's there. But if you", "tokens": [309, 390, 4582, 807, 10109, 13, 400, 309, 767, 1985, 13, 286, 362, 572, 1558, 983, 309, 311, 456, 13, 583, 498, 291], "temperature": 0.0, "avg_logprob": -0.1459717599969161, "compression_ratio": 1.5914893617021277, "no_speech_prob": 0.00011848326539620757}, {"id": 217, "seek": 157952, "start": 1579.52, "end": 1583.44, "text": " look at the website, there is probably an older version of the board where you can actually", "tokens": [574, 412, 264, 3144, 11, 456, 307, 1391, 364, 4906, 3037, 295, 264, 3150, 689, 291, 393, 767], "temperature": 0.0, "avg_logprob": -0.1740682651470234, "compression_ratio": 1.6318681318681318, "no_speech_prob": 4.0765426092548296e-05}, {"id": 218, "seek": 157952, "start": 1584.08, "end": 1589.52, "text": " read here common A and B. So at some point they wanted to use it. And then they didn't so", "tokens": [1401, 510, 2689, 316, 293, 363, 13, 407, 412, 512, 935, 436, 1415, 281, 764, 309, 13, 400, 550, 436, 994, 380, 370], "temperature": 0.0, "avg_logprob": -0.1740682651470234, "compression_ratio": 1.6318681318681318, "no_speech_prob": 4.0765426092548296e-05}, {"id": 219, "seek": 157952, "start": 1591.28, "end": 1596.08, "text": " on the brochure picture, this is not used on the website picture. They still have the older version.", "tokens": [322, 264, 48147, 540, 3036, 11, 341, 307, 406, 1143, 322, 264, 3144, 3036, 13, 814, 920, 362, 264, 4906, 3037, 13], "temperature": 0.0, "avg_logprob": -0.1740682651470234, "compression_ratio": 1.6318681318681318, "no_speech_prob": 4.0765426092548296e-05}, {"id": 220, "seek": 159608, "start": 1596.08, "end": 1610.96, "text": " And that's it.", "tokens": [50364, 400, 300, 311, 309, 13, 51108], "temperature": 0.0, "avg_logprob": -0.5048327445983887, "compression_ratio": 0.6363636363636364, "no_speech_prob": 0.0018773601623252034}], "language": "en"}