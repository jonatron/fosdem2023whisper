{"text": " Okay. So, hello, everyone. This presentation is about open CSD, which is a computational storage emulation platform. And the reason we're emulating that, I'll get into shortly. But first, I think I owe you an explanation of computational storage and what it actually is. Because I don't think many people are familiar with that. Even in this deaf room, but I'm pretty sure most people are familiar with Cameroon eBPF. You can email me. There's a link to the repo. And this has been a long time collaboration with my master's thesis at the food. So, let's get started. I'm going to briefly explain who am I. I'm Cornelucca. My handle online is mostly Dentalian. I'm also a licensed ham radio operator, Popa Delta 3 Sierra Uniform that is. And my expertise is in parallel and distributed system. I've been in academia for some while, associate degree, bachelor degree, master's degree. And I've had some experiences throughout that time. So, I've worked on health technology for officially impact people. Worked on OpenStack with cloud optimizations. I've done computational storage for my master's thesis. That's what this talk is about. And currently, we're working on SCADA systems for the lower two radio telescope at Astron. So, why do we actually need computational storage? And that's because we live in a data-driven society nowadays. So, the world is practically exploding with data, so much so that we're expected to store 200 setabytes of data by 2050. And these high data and throughput requirements pose significant challenges on storage interfaces and technologies that we are using today. So, if you look at your traditional computer architecture, the one that's being used on X86, it's based on the von Neumann architecture. And here, we basically need to move all data into main system memory before we can begin processing. So, this poses memory bottlenecks and internet interconnect bottlenecks on networks or PCI Express, and it also drastically ad hinders energy efficiency to an extent. So, how much of a bandwidth gap are we talking here? Well, if you look at the server from 2021, say using Epic Milan with 64 SSDs, we're losing about four and a half times the amount of bandwidth that could be offered by all the SSDs in tandem, but can't be utilized because we can't move it into memory that fast. So, that's quite significant. Now, what is this computational sort? And how does this solve this actually? Well, we fit a computational storage device, so a flash storage device with its own CPU and memory. And now, the user, the host processor, can submit small programs to this computational device, let it execute, and only the result data from this computation can then be returned over the interconnect into system memory, thereby reducing data movement and potentially improving energy efficiency. Because these lower power cores using more specialized hardware are typically more energy efficient than your general purpose x86 processor. If we then look at the state of current prototypes as of September 2022, we see three main impediments. Firstly, is the API between the host and device interface. There's no standardization here. People aren't building hardware prototypes, but not so much looking at the software interfaces. And we also have the problem of a file system, because these flash devices, they're your file systems and we want to keep that synchronized between the host and device. So, how do we achieve that? We can't use cache coherent interconnects or shared virtual memory because by the time we back roundtrip between the PCI Express interface, we'll have lost all the performance that we decide to gain. And how do we stick to existing interfaces? People that access file systems, they read, they write, they use system calls. They are very used to this. If you would suddenly need to link a shared library to access your file system, people wouldn't be up for that. So, we need some solutions here. That's what OpenCSD and FluffleFS introduce. We have a simple and intuitive system. All the dependencies and the software itself can run in user space. You don't need any kernel modules or things like this. We manage you entirely. We use system calls that are available in all operating systems, nor all most typical operating systems, FreeBSD, Windows, Mac OS, and Linux. So, I'd say that's pretty good. And we do something that's never been done before in computational storage. We allow a regular user on the host to access a file. Concurrently, while a kernel that is executing on the computational storage device is also accessing that file. And this has never been done before. And we managed to do this using existing open-source libraries. So, we've boost, Scenium, Fuse, UBPF, and SBDK. Some of you will be familiar with some of these. And this allows any user like you to, after this talk, try and experience this yourself in Camu without buying any additional hardware. And I'll get into that hardware in a second, because there's some specialized hardware that if we want to have this physically in our hands, we have to do some things. And if we look at the design, then we see four key components and a fifth one that they'll explain on the next slide. We're using a log-structured file system which supports no in-place updates. So, everything is appended and appended. And we have a module interface where we have backends and frontends. So, this allows us to experiment and try out new things. We can basically swap the backends and keep the frontend the same. And we're using this new technology in Flash SSDs that's called zone namespaces. They are commercially available now, but they're pretty hard to get still, but that's going to improve in the future. And the system calls that we managed to reuse, those are extended attributes. So, extended attributes on any file and directory on most file systems, on the file system you are using likely now, you can set arbitrary key value pairs on these files. And we can use this as a hint from the user to the file system to instruct the file system that something special needs to happen. And basically, we just reserve some keys there and assign special behavior to them. Now, let's get back to the topic of zone namespaces because I only use some explanation here. Back when we had hard drives, we could perform arbitrary reads and writes to arbitrary sectors. Sectors could be rewritten all the time without requiring any erasure beforehand. This is what is known as the traditional block interface. But there's a problem, and that is that NAND flash doesn't actually support this behavior. So, when you have NAND flash, your sectors are concentrated in blocks and this block needs to be linearly written. And before you can rewrite the information in a block, the block needs to be erased as a whole. So, in order to accommodate, flash SSDs have to incorporate what is known as a flash translation layer, where basically all these requests that go to the same sectors are somehow translated and put somewhere else physically, just so that the user can still use this same block interface that they have been used to from the time of hard drives. So, there's this physical translation between these logical and physical blocks, and when we try to synchronize the file system from the host with the device while a kernel is running, this introduces a whole lot of problems. So, how do we solve this? Now, you know the answer. It's the sound namespaces. We basically present an interface that's not the block interface, and it's an interface that fits to NAND flash behavior. So, when you use the sound namespaces SSD, you need, as a developer of a file system or the kernel, need to linearly write each sector in the block, and you need to erase the block as a whole. So, effectively, you become the manager of this SSD, the flash translation layer, and the garbage collection lifts on the host, and we call this whole system host-managed. If we now combine this with a log-structured file system, which also didn't have any in-place updates, then you naturally see that this becomes a very good fit. And now, together with these two technologies, we can finally synchronize the host and the file system, and we can do that by making the file temporarily immutable while the kernel is running. And we do that using a snapshot consistency model by creating in-memory snapshots. So, we were able to create a representation of the file as it was on the host with metadata, put that to the computational storage device memory, and we can assure that all the data that is there will remain immutable during the execution of the kernel. Meanwhile, the user can actually still write to the file, and the metadata of the file on the host will differ, but that's not a problem. So, this is very powerful, and it allows us to also understand kernel behavior in a way, because we can now have metadata and send it to the computational storage device that says, well, actually, if the kernel tries to do this, remember, it's a user-submitted program, it might be malicious, then we want to block those actions, so we have a security interface as well. The final kick in the bucket for this design is that we want to be architecture-independent, and we do that through EBPF, the system that you're also using for network hooks and event hooks in the Linux kernel nowadays. With EBPF, you can define system calls and expose those in a header, and this is actually the format of how you would do that, that's a real example, and the vendor would implement that code, and you would define in a specification some behavior, but the vendor doesn't have to open source their code, which, in the case of Flash, SSDs and vendors, is pretty important because they don't seem to be that keen on that, and this way, we can still have an interface, the users can write programs once and reuse them across all vendors without any problem, and the nice thing about EBPF is that this instruction set architecture, what EBPF essentially is, is easily implementable in a VM. So there's even pre-existing open source implementations of this, and that's what we're using, UBPF. Now that I've explained all the key components to OpenCSD and FluffleFS, I want to start with a little demo and show you what are some of the actual practical use cases for this. So how can we use such a computational storage system in a way that it makes sense in terms of data reduction and energy efficiency? And for that, we're going to go to the example of Shannon entropy. This is heavily used by file systems who can perform background compression or by just compression programs that compress in the background. What you basically do is you try to quantify the randomness you have in a file. Typically, it's between 0 and 1, but for computers, that doesn't really make sense. So we use this log b that's over here to normalize this for bytes. Then we can say what's the distribution of bytes. So we create, because a byte has 265 different possible values, we create 265 bins, and we submit a program to calculate this. It runs in the background, and only the result is returned to the host operating system. And then the host operating system is free to decide whether or not this file should be compressed or not. So how does such a kernel look like, the kernel that you actually submit to the computational storage device, or you can just write them in C and compile them with Clang. So you write them in C, and we have two individual interfaces here that we are exposing. The yellow commands, those are introduced by the system calls, the ebpfi that we are defining, and the purple ones, those are introduced by a file system. What that means is that using this system as is now, that it's not agnostic to the file system. So it is agnostic to the vendor, and the architecture of the vendor. So we have this ARM or x86, that doesn't matter, but now it's specific to the FluffleFS file system that we have written. And I will address some possible solutions for this at the end. Other things we need to realize is that the ebpf stack size is typically very small. We're talking bytes here instead of kilobytes. So we need a way to address this. So what you can do is in ubpf you can allocate a heap, just as your stack, and then we have this bpf getmem info that we have defined as part of the ABI that allows you to get your heap pointer. Now currently you have to manually offset this, which is a bit tedious, if you will. You see that that is actually done here. To store the bins, we offset the buffer by the sector size, and then the data from the sector reads is actually stored at the top of the buffer, and the bins are stored at the offset for precisely one sector size. Now when we go to look at the file system interface and all the helpers and data structures and additional function calls that we introduced, we can later see that we can also make a basic implementation of malloc and free here and then just resolve this. But for now, for this example, it's a bit tedious. Now how do you actually trigger this? So we had the extended attributes, we had all these systems in place, but now you just have this kernel, you have compiled it, you have stored it to a file, and now you want to actually offload your computation, well, in an emulated fashion, but you want to learn, you want to see how you do that. So the first thing you do is you call start on the kernel object. So this is your compiled diecode, and then you get the inode number. This inode number you have then to remember and you then open the file that you want to read upon or write upon, but for the examples we're using read mostly. Then you use set extended attribute, you use our reserved key, you set it to the inode number of the kernel file, and then when you actually issue read commands, the read commands will actually go to the computational storage device and they'll run on there. But when do you actually take these snapshots? And the trick is as soon as you set extended attributes, this is just by design, right? It could also be once you call the first read or once you execute the first write, but we have decided to do it at the moment that you set extended attribute. That means that if you make any changes to your kernel, once you've actually set extended attribute, then nothing changes anymore. And the same goes to the file. Now I want to briefly explain some different types of kernel that you can have, and what the example here is mainly showing is what we call a stream kernel. So a stream kernel happens in place of the regular read or write request. So the regular read or write request doesn't happen, only the computational storage request happens on the computational storage device. And with an event kernel, it's like the opposite way around. First, the regular event happens normally, and then the kernel is presented with the metadata from that request and can do additional things. This is for databases interesting. For example, say you're writing a big table, and you want to know the average or the minimum or the maximum, and you want to emit that as metadata at the end of your table write. While you could use an event kernel to let it write as is, then you get presented with the data, and the kernel runs on the computational storage device, and you emit the metadata after, and you can store that as like an index. We have also decided to isolate the context of this computational storage offloading, so what is considered, once you set the attribute, by PID. But we also could make this by file handle, or you could even set it for the whole line node. More so, we could use specific keys for file handle PID or I node offloading, so it's just a matter of semantics here. Now, I have some source code in Python of these execution steps that I've just shown here, because there's a little bit of details that I left out in the brief overview. The first is that you have to stride your requests, and those have to be strided by 500 to 12k. Why is this so? Well, infuse the amount of kernel pages that are allocated to move data between the kernel and the user space is statically fixed. So if you go over this, then your request will seem filing from the user perspective, but what the kernel will do is it will chop up your requests. Why is that problematic? Well, then multiple kernels spawn, because from the context of the file system, every time it sees a read or write request, it will go to the kernel and move it to the computational storage device. Then here you can see how I set the extended attribute and get the kernel, the I node number, and what I want to show here at the bottom is that I'm getting 265 integers, and that's for each of the buckets of the entropy read, but I'm having a request of 512k. So that shows you the amount of data reduction that you can achieve using systems like this. 265 integers, 512k. Pretty good. Could be better though. The reason it's not better is floating point support in EBPF is limited to the fact where you need to implement fixed point match yourself. So we could do this as part of the file system helpers, but that's not done for this prototype at the moment. Now, some limitations. This was a master thesis work. This was my first time defining a file system ever. It's solely a proof of concept. There's no garbage collection, no deletion, no space reclaiming. Please don't use it. Please don't use it to store your files. Yeah. EBPF has an ending in this, just like any ISA would have, and there's currently no conversions. So if you happen to use something that uses different ending in this, all your data will be upside down. So you have to deal with that yourself for now, but once again, we can make it part of the file system helpers to help with these data structure layout conversions and the engineers conversions. As I mentioned briefly earlier, floating point support in EBPF is practically non-existent, but we can implement fixed point match. And currently, I haven't shown any performance examples because I don't think that they are that interesting because what's currently happening when you emulate offloading is that it just runs on the host processor as is in EBPF. So it isn't representative of the microcontrollers that you would find on SSDs. So the runtime, the time that it would take to execute these kernels would be much too fast. So that's something that we need to deal on, I think, because then we can more easily reason about what would be the actual performance if we would offload these applications to SSDs. Frankly, these SSDs do have very capable microcontrollers, typically even multi-core processors. The reason they do that is because they need to manage your flash sensations layer. So they are already fairly capable devices, actually. Only read stream kernels have been fully implemented for this prototype as well. And that's mainly because event kernel performance is problematic because the data from the event kernel, remember the IO request happens regularly, so all the data is moved back into the host processor and only then is the event kernel started. But what you really need is a two-stage system where you prevent the data being moved back from the host. This requires some more tinkering. And the final thing, we need to make this agnostic to the file system. And we can very easily achieve this using this file system runtime, where to an ICD, an installable client driver, much the same way that Falcon and OpenCL and OpenGL are working, you can dynamically load a shared library that implements all the functions you have defined in the header. And this can also dynamically compile your programs and then store the cache versions of this program. And using StataFS, we can easily identify on what file system is running. And that allows users to write their programs one, run on any architecture and for any computational file system, which I think is pretty powerful and flexible. So that's it. I encourage you to try this. I've also written a thesis on this that does have some performance metrics. It also shows you some interesting data structures that we had to design for the file system to be able to support these in-memory snapshots. There's a previous work called ZCSD that also has some early performance information. And I've written quite an extensive survey on the last decade's history or so of computational flash storage devices, which also quite interesting. So thank you. APPLAUSE Seven minutes for questions. Oh, that's quite good. I imagine this is quite difficult, right? Computational storage, what the fuck's that? So please don't hesitate to ask questions if anything is unclear. What's the availability of hardware that can do this? The computational storage? Yes, the computational storage. There is one vendor that is selling a computational storage device that's not based on zoned namespaces storage. So it's using conventional SSDs and it supports computational storage to a network interface. So you have the normal PCIe interface and then there's this transport over need to do TCPIP and then you basically just connect over it to SSH and then you can do things on the SSD. That one's commercially available. I don't know what they would ask for that product. What does ZCSD have to do with zoned namespaces? Nothing in principle, but you need a way to synchronize the file system between the host and device and zoned namespaces make that trivial, whereas conventional SSDs, the logical and physical block translation, severely hinders this, makes it extremely difficult to perform. So why didn't you include the performance projects from your pieces or better ones? Because the performance... Oh, sorry. Oh, yeah. Why don't I... Very good. I forgot that actually all the time. Yeah, so why didn't I include any performance metrics if I have them? And the answer is because I don't think I would have time and I don't think they're interesting enough to include. This is a very complicated subject. It's very new for most people, computational search. Most people have never heard of it. So I much rather spend the time to explain this properly and try to show you that this is a very interesting concept to solve this bandwidth gap rather than show you some metrics that are not representative anyway because the kernel is running on the host CPU and you're not going to have an additional host CPU on the Flash SSD. Can you talk about what kind of test setup you have for your metric? So I don't... Yeah, of the metrics themselves. Yeah, so the framework... Okay, yeah, yeah, very good. What kind of test setup I had to do all these analyses and to try these things out. So I run Camu on my own host machine, just a normal laptop, basically this one. And Camu then creates a virtual sound namespaces device that's actually quite recently introduced to Camu. So you can now try sound namespaces without owning sound namespaces. That's the whole reason Camu comes into play because otherwise people wouldn't need to buy a sound namespaces SSD which is quite badly available. And then you just run the prototype as is. So that's all you need. And you really don't need any special hardware. Yeah, it could be even on an ARM laptop. It doesn't matter. Did you test it? No, I did not test it. But whether or not I tested if it works on ARM. The answer is no, I did not test it. But I'm pretty sure Camu compiles some ARM. So I'm pretty sure we're good there. Because you have to remember that that's maybe not intrinsically clear from this presentation. But we didn't extend Camu in any way. It's just a normal Camu cumulation. You don't even need to custom install it. You can just get it from the package manager and use this. I have a lot of questions about that. Regarding the computational part, what are the limitations of what kind of CPU or kernel that it may run on these devices? I think the main limitations, what are the limitations as the kernels that you run on these devices? Well, first of all, you need to have data reduction, right? If you're going to read one gigabyte from the flash storage and you're going to return one gigabyte of data to the host, then there's no real point in offloading this because the data is going to be moved anyway. So the first thing that the limitation is that you have to find an application that is reductive in nature. Once you do the computation, you return less data. The nice thing is that's 99% of all workloads, right? So that's pretty good. And the second thing is that if it's timing critical and the computation takes a long time, then it's probably not that interesting because the latency will then be too bad because the performance of these cores is much less than your host processor. But you can implement specialized instructions that could be very efficient in doing database filtering or things like this. And that is where the whole ASIC and FPGA part would come into play. But if it's not timing critical and it's in the background, like the Shandom entropy compression, those are ideal cases. Reduction in data and not timing critical. So what you mean is we can have software kernels with the back end in hardware so we can also program the thermo. So like maybe a core like CPU board or GPU board. To repeat the question, whether or not it's just software or whether we also program the hardware. Of course, FPGAs can be reprogrammed on the fly and we have seen prototypes in the past for computational storage devices where they do just that. From the host device, the user sends a bit stream that dynamically reprograms the FPGA and then the kernel starts running. That's not what we're trying to achieve here. What I envision in this is that the FPGA has specialized logic to do certain computations and then from the ABI, from the EBPF ABI, whether code triggers those instructions will utilize the FPGA to do those computations but they would be defined in the specification beforehand. Because typically in reflashing a FPGA with a new bit stream takes quite some time so in the interest of performance it might not be that interesting. So I'm going to ask a question. You might have mentioned it but are there close source competitors? If there are close source competitors in the space of computational storage. Well, actually that's one of the things that's been growing really well in this scene. I'd say the vast majority of everything is open source. At least if you look at the recent things, if you look at the past decade then it's a bit worse because there is a lot of research published that doesn't actually publish the source code or rather the source code is published but everything is a hardware prototype and they didn't publish the bit streams or the FHDL or the Farrellock so you're then stuck as well or they didn't have any PCB designs so you can't reproduce the work if you will. I say this is a much bigger problem than just computational storage in the field of academia but it's also present here. Yes. Which one? The Python code. Complexity in terms of? The reason this is a nested loop, in the phase of performance I have a nested loop here so why that and why in the terms of performance how? And Python. The trick is this is just for demonstration purposes that's one you can easily make this example in C or C++ and you shit if you care about performance. The trick is that this program is already spending 99% of its time in IO weight because it's waiting for the kernel to complete so in the phase of that it's not that interesting and the reason we have a nested loop is because the floating point performance in EBP, the floating point in EBPF is not existent or at least I didn't implement a fixed point mod so what I have to do after this at the bottom what you don't see here is that from all these buckets of these bins I'm actually computing the distribution using floating point math in Python which is why I don't get a single number from this kernel because if I would have floating point implementation in EBPF I could already do that computation in EBPF and only return a single 32-bit float as a result instead of these 265 integers. But I still, the reason this is a loop is because I still have to strike for the read request because I can't go above 5 on the 12K even if my file is bigger than 5 on the 12K. You said it's spending a lot of time in IO weight. Couldn't you just write it there just to prove it or it doesn't make any sense in this case? Well, the trick is, okay, couldn't I implement multi-treading here? Currently, the EBPFVM runs as a single process so even if you submit multiple kernels only one will execute at a time. Why? It's a thesis prototype, right? Time, things like this. Okay. Thank you very much. No worries.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 9.68, "text": " Okay. So, hello, everyone.", "tokens": [1033, 13, 407, 11, 7751, 11, 1518, 13], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 1, "seek": 0, "start": 10.68, "end": 14.32, "text": " This presentation is about open CSD,", "tokens": [639, 5860, 307, 466, 1269, 9460, 35, 11], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 2, "seek": 0, "start": 14.32, "end": 17.28, "text": " which is a computational storage emulation platform.", "tokens": [597, 307, 257, 28270, 6725, 846, 2776, 3663, 13], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 3, "seek": 0, "start": 17.28, "end": 19.32, "text": " And the reason we're emulating that,", "tokens": [400, 264, 1778, 321, 434, 846, 12162, 300, 11], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 4, "seek": 0, "start": 19.32, "end": 20.76, "text": " I'll get into shortly.", "tokens": [286, 603, 483, 666, 13392, 13], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 5, "seek": 0, "start": 20.76, "end": 23.44, "text": " But first, I think I owe you an explanation of", "tokens": [583, 700, 11, 286, 519, 286, 16655, 291, 364, 10835, 295], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 6, "seek": 0, "start": 23.44, "end": 26.2, "text": " computational storage and what it actually is.", "tokens": [28270, 6725, 293, 437, 309, 767, 307, 13], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 7, "seek": 0, "start": 26.2, "end": 28.64, "text": " Because I don't think many people are familiar with that.", "tokens": [1436, 286, 500, 380, 519, 867, 561, 366, 4963, 365, 300, 13], "temperature": 0.0, "avg_logprob": -0.2911055061254608, "compression_ratio": 1.5545023696682465, "no_speech_prob": 0.25936636328697205}, {"id": 8, "seek": 2864, "start": 28.64, "end": 29.96, "text": " Even in this deaf room,", "tokens": [2754, 294, 341, 15559, 1808, 11], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 9, "seek": 2864, "start": 29.96, "end": 33.32, "text": " but I'm pretty sure most people are familiar with Cameroon eBPF.", "tokens": [457, 286, 478, 1238, 988, 881, 561, 366, 4963, 365, 6886, 2032, 266, 308, 33, 47, 37, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 10, "seek": 2864, "start": 33.32, "end": 35.92, "text": " You can email me. There's a link to the repo.", "tokens": [509, 393, 3796, 385, 13, 821, 311, 257, 2113, 281, 264, 49040, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 11, "seek": 2864, "start": 35.92, "end": 41.44, "text": " And this has been a long time collaboration with my master's thesis at the food.", "tokens": [400, 341, 575, 668, 257, 938, 565, 9363, 365, 452, 4505, 311, 22288, 412, 264, 1755, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 12, "seek": 2864, "start": 41.44, "end": 43.480000000000004, "text": " So, let's get started.", "tokens": [407, 11, 718, 311, 483, 1409, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 13, "seek": 2864, "start": 43.480000000000004, "end": 45.64, "text": " I'm going to briefly explain who am I.", "tokens": [286, 478, 516, 281, 10515, 2903, 567, 669, 286, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 14, "seek": 2864, "start": 45.64, "end": 48.519999999999996, "text": " I'm Cornelucca. My handle online is mostly Dentalian.", "tokens": [286, 478, 21590, 338, 1311, 496, 13, 1222, 4813, 2950, 307, 5240, 413, 14533, 952, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 15, "seek": 2864, "start": 48.519999999999996, "end": 50.84, "text": " I'm also a licensed ham radio operator,", "tokens": [286, 478, 611, 257, 25225, 7852, 6477, 12973, 11], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 16, "seek": 2864, "start": 50.84, "end": 53.08, "text": " Popa Delta 3 Sierra Uniform that is.", "tokens": [10215, 64, 18183, 805, 25182, 1156, 8629, 300, 307, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 17, "seek": 2864, "start": 53.08, "end": 56.519999999999996, "text": " And my expertise is in parallel and distributed system.", "tokens": [400, 452, 11769, 307, 294, 8952, 293, 12631, 1185, 13], "temperature": 0.0, "avg_logprob": -0.28054956076801685, "compression_ratio": 1.5518394648829432, "no_speech_prob": 0.00028396581183187664}, {"id": 18, "seek": 5652, "start": 56.52, "end": 59.2, "text": " I've been in academia for some while, associate degree,", "tokens": [286, 600, 668, 294, 28937, 337, 512, 1339, 11, 14644, 4314, 11], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 19, "seek": 5652, "start": 59.2, "end": 61.080000000000005, "text": " bachelor degree, master's degree.", "tokens": [25947, 4314, 11, 4505, 311, 4314, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 20, "seek": 5652, "start": 61.080000000000005, "end": 63.88, "text": " And I've had some experiences throughout that time.", "tokens": [400, 286, 600, 632, 512, 5235, 3710, 300, 565, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 21, "seek": 5652, "start": 63.88, "end": 66.92, "text": " So, I've worked on health technology for officially impact people.", "tokens": [407, 11, 286, 600, 2732, 322, 1585, 2899, 337, 12053, 2712, 561, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 22, "seek": 5652, "start": 66.92, "end": 69.84, "text": " Worked on OpenStack with cloud optimizations.", "tokens": [6603, 292, 322, 7238, 4520, 501, 365, 4588, 5028, 14455, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 23, "seek": 5652, "start": 69.84, "end": 72.96000000000001, "text": " I've done computational storage for my master's thesis.", "tokens": [286, 600, 1096, 28270, 6725, 337, 452, 4505, 311, 22288, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 24, "seek": 5652, "start": 72.96000000000001, "end": 74.4, "text": " That's what this talk is about.", "tokens": [663, 311, 437, 341, 751, 307, 466, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 25, "seek": 5652, "start": 74.4, "end": 75.64, "text": " And currently, we're working on", "tokens": [400, 4362, 11, 321, 434, 1364, 322], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 26, "seek": 5652, "start": 75.64, "end": 79.52000000000001, "text": " SCADA systems for the lower two radio telescope at Astron.", "tokens": [9028, 45852, 3652, 337, 264, 3126, 732, 6477, 26114, 412, 12884, 2044, 13], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 27, "seek": 5652, "start": 79.52000000000001, "end": 83.04, "text": " So, why do we actually need computational storage?", "tokens": [407, 11, 983, 360, 321, 767, 643, 28270, 6725, 30], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 28, "seek": 5652, "start": 83.04, "end": 84.32000000000001, "text": " And that's because we live in", "tokens": [400, 300, 311, 570, 321, 1621, 294], "temperature": 0.0, "avg_logprob": -0.17800037125895793, "compression_ratio": 1.6742671009771988, "no_speech_prob": 4.9060377932619303e-05}, {"id": 29, "seek": 8432, "start": 84.32, "end": 86.72, "text": " a data-driven society nowadays.", "tokens": [257, 1412, 12, 25456, 4086, 13434, 13], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 30, "seek": 8432, "start": 86.72, "end": 89.39999999999999, "text": " So, the world is practically exploding with data,", "tokens": [407, 11, 264, 1002, 307, 15667, 35175, 365, 1412, 11], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 31, "seek": 8432, "start": 89.39999999999999, "end": 91.83999999999999, "text": " so much so that we're expected to store", "tokens": [370, 709, 370, 300, 321, 434, 5176, 281, 3531], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 32, "seek": 8432, "start": 91.83999999999999, "end": 94.6, "text": " 200 setabytes of data by 2050.", "tokens": [2331, 992, 24538, 295, 1412, 538, 38308, 13], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 33, "seek": 8432, "start": 94.6, "end": 97.24, "text": " And these high data and throughput requirements", "tokens": [400, 613, 1090, 1412, 293, 44629, 7728], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 34, "seek": 8432, "start": 97.24, "end": 99.11999999999999, "text": " pose significant challenges on", "tokens": [10774, 4776, 4759, 322], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 35, "seek": 8432, "start": 99.11999999999999, "end": 102.63999999999999, "text": " storage interfaces and technologies that we are using today.", "tokens": [6725, 28416, 293, 7943, 300, 321, 366, 1228, 965, 13], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 36, "seek": 8432, "start": 102.63999999999999, "end": 107.08, "text": " So, if you look at your traditional computer architecture,", "tokens": [407, 11, 498, 291, 574, 412, 428, 5164, 3820, 9482, 11], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 37, "seek": 8432, "start": 107.08, "end": 109.6, "text": " the one that's being used on X86,", "tokens": [264, 472, 300, 311, 885, 1143, 322, 1783, 22193, 11], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 38, "seek": 8432, "start": 109.6, "end": 111.91999999999999, "text": " it's based on the von Neumann architecture.", "tokens": [309, 311, 2361, 322, 264, 2957, 1734, 449, 969, 9482, 13], "temperature": 0.0, "avg_logprob": -0.14961176181058272, "compression_ratio": 1.5888888888888888, "no_speech_prob": 5.305768718244508e-05}, {"id": 39, "seek": 11192, "start": 111.92, "end": 114.52, "text": " And here, we basically need to move all data", "tokens": [400, 510, 11, 321, 1936, 643, 281, 1286, 439, 1412], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 40, "seek": 11192, "start": 114.52, "end": 118.04, "text": " into main system memory before we can begin processing.", "tokens": [666, 2135, 1185, 4675, 949, 321, 393, 1841, 9007, 13], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 41, "seek": 11192, "start": 118.04, "end": 120.24000000000001, "text": " So, this poses memory bottlenecks and", "tokens": [407, 11, 341, 26059, 4675, 44641, 2761, 293], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 42, "seek": 11192, "start": 120.24000000000001, "end": 122.4, "text": " internet interconnect bottlenecks on", "tokens": [4705, 26253, 44641, 2761, 322], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 43, "seek": 11192, "start": 122.4, "end": 124.4, "text": " networks or PCI Express,", "tokens": [9590, 420, 6465, 40, 20212, 11], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 44, "seek": 11192, "start": 124.4, "end": 126.4, "text": " and it also drastically", "tokens": [293, 309, 611, 29673], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 45, "seek": 11192, "start": 126.4, "end": 129.24, "text": " ad hinders energy efficiency to an extent.", "tokens": [614, 20138, 433, 2281, 10493, 281, 364, 8396, 13], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 46, "seek": 11192, "start": 129.24, "end": 133.12, "text": " So, how much of a bandwidth gap are we talking here?", "tokens": [407, 11, 577, 709, 295, 257, 23647, 7417, 366, 321, 1417, 510, 30], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 47, "seek": 11192, "start": 133.12, "end": 136.4, "text": " Well, if you look at the server from 2021,", "tokens": [1042, 11, 498, 291, 574, 412, 264, 7154, 490, 7201, 11], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 48, "seek": 11192, "start": 136.4, "end": 139.84, "text": " say using Epic Milan with 64 SSDs,", "tokens": [584, 1228, 26785, 32874, 365, 12145, 30262, 82, 11], "temperature": 0.0, "avg_logprob": -0.18178451395480433, "compression_ratio": 1.5075757575757576, "no_speech_prob": 8.346998220076784e-05}, {"id": 49, "seek": 13984, "start": 139.84, "end": 142.84, "text": " we're losing about four and a half times the amount of bandwidth", "tokens": [321, 434, 7027, 466, 1451, 293, 257, 1922, 1413, 264, 2372, 295, 23647], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 50, "seek": 13984, "start": 142.84, "end": 145.0, "text": " that could be offered by all the SSDs in tandem,", "tokens": [300, 727, 312, 8059, 538, 439, 264, 30262, 82, 294, 48120, 11], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 51, "seek": 13984, "start": 145.0, "end": 146.52, "text": " but can't be utilized because we", "tokens": [457, 393, 380, 312, 28158, 570, 321], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 52, "seek": 13984, "start": 146.52, "end": 148.68, "text": " can't move it into memory that fast.", "tokens": [393, 380, 1286, 309, 666, 4675, 300, 2370, 13], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 53, "seek": 13984, "start": 148.68, "end": 151.12, "text": " So, that's quite significant.", "tokens": [407, 11, 300, 311, 1596, 4776, 13], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 54, "seek": 13984, "start": 151.12, "end": 153.2, "text": " Now, what is this computational sort?", "tokens": [823, 11, 437, 307, 341, 28270, 1333, 30], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 55, "seek": 13984, "start": 153.2, "end": 154.84, "text": " And how does this solve this actually?", "tokens": [400, 577, 775, 341, 5039, 341, 767, 30], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 56, "seek": 13984, "start": 154.84, "end": 158.52, "text": " Well, we fit a computational storage device,", "tokens": [1042, 11, 321, 3318, 257, 28270, 6725, 4302, 11], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 57, "seek": 13984, "start": 158.52, "end": 161.48000000000002, "text": " so a flash storage device with its own CPU and memory.", "tokens": [370, 257, 7319, 6725, 4302, 365, 1080, 1065, 13199, 293, 4675, 13], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 58, "seek": 13984, "start": 161.48000000000002, "end": 164.04, "text": " And now, the user, the host processor,", "tokens": [400, 586, 11, 264, 4195, 11, 264, 3975, 15321, 11], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 59, "seek": 13984, "start": 164.04, "end": 167.52, "text": " can submit small programs to this computational device,", "tokens": [393, 10315, 1359, 4268, 281, 341, 28270, 4302, 11], "temperature": 0.0, "avg_logprob": -0.14448711276054382, "compression_ratio": 1.7017543859649122, "no_speech_prob": 2.9765105864498764e-05}, {"id": 60, "seek": 16752, "start": 167.52, "end": 170.36, "text": " let it execute, and only the result data from", "tokens": [718, 309, 14483, 11, 293, 787, 264, 1874, 1412, 490], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 61, "seek": 16752, "start": 170.36, "end": 172.04000000000002, "text": " this computation can then be returned", "tokens": [341, 24903, 393, 550, 312, 8752], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 62, "seek": 16752, "start": 172.04000000000002, "end": 174.20000000000002, "text": " over the interconnect into system memory,", "tokens": [670, 264, 26253, 666, 1185, 4675, 11], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 63, "seek": 16752, "start": 174.20000000000002, "end": 176.12, "text": " thereby reducing data movement", "tokens": [28281, 12245, 1412, 3963], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 64, "seek": 16752, "start": 176.12, "end": 178.64000000000001, "text": " and potentially improving energy efficiency.", "tokens": [293, 7263, 11470, 2281, 10493, 13], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 65, "seek": 16752, "start": 178.64000000000001, "end": 181.44, "text": " Because these lower power cores using", "tokens": [1436, 613, 3126, 1347, 24826, 1228], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 66, "seek": 16752, "start": 181.44, "end": 183.48000000000002, "text": " more specialized hardware are typically", "tokens": [544, 19813, 8837, 366, 5850], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 67, "seek": 16752, "start": 183.48000000000002, "end": 184.60000000000002, "text": " more energy efficient than", "tokens": [544, 2281, 7148, 813], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 68, "seek": 16752, "start": 184.60000000000002, "end": 187.8, "text": " your general purpose x86 processor.", "tokens": [428, 2674, 4334, 2031, 22193, 15321, 13], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 69, "seek": 16752, "start": 187.8, "end": 189.60000000000002, "text": " If we then look at the state of", "tokens": [759, 321, 550, 574, 412, 264, 1785, 295], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 70, "seek": 16752, "start": 189.60000000000002, "end": 192.0, "text": " current prototypes as of September 2022,", "tokens": [2190, 42197, 382, 295, 7216, 20229, 11], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 71, "seek": 16752, "start": 192.0, "end": 194.44, "text": " we see three main impediments.", "tokens": [321, 536, 1045, 2135, 22584, 8321, 13], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 72, "seek": 16752, "start": 194.44, "end": 196.28, "text": " Firstly, is the API between", "tokens": [20042, 11, 307, 264, 9362, 1296], "temperature": 0.0, "avg_logprob": -0.1409794059959618, "compression_ratio": 1.6013513513513513, "no_speech_prob": 3.372559149283916e-05}, {"id": 73, "seek": 19628, "start": 196.28, "end": 197.6, "text": " the host and device interface.", "tokens": [264, 3975, 293, 4302, 9226, 13], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 74, "seek": 19628, "start": 197.6, "end": 199.36, "text": " There's no standardization here.", "tokens": [821, 311, 572, 3832, 2144, 510, 13], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 75, "seek": 19628, "start": 199.36, "end": 201.48, "text": " People aren't building hardware prototypes,", "tokens": [3432, 3212, 380, 2390, 8837, 42197, 11], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 76, "seek": 19628, "start": 201.48, "end": 204.16, "text": " but not so much looking at the software interfaces.", "tokens": [457, 406, 370, 709, 1237, 412, 264, 4722, 28416, 13], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 77, "seek": 19628, "start": 204.16, "end": 206.4, "text": " And we also have the problem of a file system,", "tokens": [400, 321, 611, 362, 264, 1154, 295, 257, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 78, "seek": 19628, "start": 206.4, "end": 207.68, "text": " because these flash devices,", "tokens": [570, 613, 7319, 5759, 11], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 79, "seek": 19628, "start": 207.68, "end": 209.24, "text": " they're your file systems and we want to", "tokens": [436, 434, 428, 3991, 3652, 293, 321, 528, 281], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 80, "seek": 19628, "start": 209.24, "end": 211.72, "text": " keep that synchronized between the host and device.", "tokens": [1066, 300, 19331, 1602, 1296, 264, 3975, 293, 4302, 13], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 81, "seek": 19628, "start": 211.72, "end": 213.36, "text": " So, how do we achieve that?", "tokens": [407, 11, 577, 360, 321, 4584, 300, 30], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 82, "seek": 19628, "start": 213.36, "end": 215.48, "text": " We can't use cache coherent interconnects", "tokens": [492, 393, 380, 764, 19459, 36239, 26253, 82], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 83, "seek": 19628, "start": 215.48, "end": 217.8, "text": " or shared virtual memory because by the time", "tokens": [420, 5507, 6374, 4675, 570, 538, 264, 565], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 84, "seek": 19628, "start": 217.8, "end": 219.28, "text": " we back roundtrip between", "tokens": [321, 646, 3098, 83, 8400, 1296], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 85, "seek": 19628, "start": 219.28, "end": 220.8, "text": " the PCI Express interface,", "tokens": [264, 6465, 40, 20212, 9226, 11], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 86, "seek": 19628, "start": 220.8, "end": 222.16, "text": " we'll have lost all the performance", "tokens": [321, 603, 362, 2731, 439, 264, 3389], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 87, "seek": 19628, "start": 222.16, "end": 223.76, "text": " that we decide to gain.", "tokens": [300, 321, 4536, 281, 6052, 13], "temperature": 0.0, "avg_logprob": -0.14637348749866225, "compression_ratio": 1.721362229102167, "no_speech_prob": 8.217326831072569e-05}, {"id": 88, "seek": 22376, "start": 223.76, "end": 227.16, "text": " And how do we stick to existing interfaces?", "tokens": [400, 577, 360, 321, 2897, 281, 6741, 28416, 30], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 89, "seek": 22376, "start": 227.16, "end": 228.92, "text": " People that access file systems,", "tokens": [3432, 300, 2105, 3991, 3652, 11], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 90, "seek": 22376, "start": 228.92, "end": 230.79999999999998, "text": " they read, they write, they use system calls.", "tokens": [436, 1401, 11, 436, 2464, 11, 436, 764, 1185, 5498, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 91, "seek": 22376, "start": 230.79999999999998, "end": 232.67999999999998, "text": " They are very used to this.", "tokens": [814, 366, 588, 1143, 281, 341, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 92, "seek": 22376, "start": 232.67999999999998, "end": 234.51999999999998, "text": " If you would suddenly need to link", "tokens": [759, 291, 576, 5800, 643, 281, 2113], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 93, "seek": 22376, "start": 234.51999999999998, "end": 236.88, "text": " a shared library to access your file system,", "tokens": [257, 5507, 6405, 281, 2105, 428, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 94, "seek": 22376, "start": 236.88, "end": 238.44, "text": " people wouldn't be up for that.", "tokens": [561, 2759, 380, 312, 493, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 95, "seek": 22376, "start": 238.44, "end": 240.84, "text": " So, we need some solutions here.", "tokens": [407, 11, 321, 643, 512, 6547, 510, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 96, "seek": 22376, "start": 240.84, "end": 244.23999999999998, "text": " That's what OpenCSD and FluffleFS introduce.", "tokens": [663, 311, 437, 7238, 34, 23969, 293, 3235, 21665, 29318, 5366, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 97, "seek": 22376, "start": 244.23999999999998, "end": 246.6, "text": " We have a simple and intuitive system.", "tokens": [492, 362, 257, 2199, 293, 21769, 1185, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 98, "seek": 22376, "start": 246.6, "end": 248.6, "text": " All the dependencies and the software itself", "tokens": [1057, 264, 36606, 293, 264, 4722, 2564], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 99, "seek": 22376, "start": 248.6, "end": 250.28, "text": " can run in user space.", "tokens": [393, 1190, 294, 4195, 1901, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 100, "seek": 22376, "start": 250.28, "end": 252.68, "text": " You don't need any kernel modules or things like this.", "tokens": [509, 500, 380, 643, 604, 28256, 16679, 420, 721, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.12334989464801291, "compression_ratio": 1.6459016393442623, "no_speech_prob": 6.601948552997783e-05}, {"id": 101, "seek": 25268, "start": 252.68, "end": 254.08, "text": " We manage you entirely.", "tokens": [492, 3067, 291, 7696, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 102, "seek": 25268, "start": 254.08, "end": 256.52, "text": " We use system calls that are", "tokens": [492, 764, 1185, 5498, 300, 366], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 103, "seek": 25268, "start": 256.52, "end": 258.56, "text": " available in all operating systems,", "tokens": [2435, 294, 439, 7447, 3652, 11], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 104, "seek": 25268, "start": 258.56, "end": 261.28000000000003, "text": " nor all most typical operating systems,", "tokens": [6051, 439, 881, 7476, 7447, 3652, 11], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 105, "seek": 25268, "start": 261.28000000000003, "end": 264.56, "text": " FreeBSD, Windows, Mac OS, and Linux.", "tokens": [11551, 8176, 35, 11, 8591, 11, 5707, 12731, 11, 293, 18734, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 106, "seek": 25268, "start": 264.56, "end": 266.12, "text": " So, I'd say that's pretty good.", "tokens": [407, 11, 286, 1116, 584, 300, 311, 1238, 665, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 107, "seek": 25268, "start": 266.12, "end": 268.44, "text": " And we do something that's never been done", "tokens": [400, 321, 360, 746, 300, 311, 1128, 668, 1096], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 108, "seek": 25268, "start": 268.44, "end": 270.24, "text": " before in computational storage.", "tokens": [949, 294, 28270, 6725, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 109, "seek": 25268, "start": 270.24, "end": 274.04, "text": " We allow a regular user on the host to access a file.", "tokens": [492, 2089, 257, 3890, 4195, 322, 264, 3975, 281, 2105, 257, 3991, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 110, "seek": 25268, "start": 274.04, "end": 276.28000000000003, "text": " Concurrently, while a kernel that is", "tokens": [2656, 49827, 356, 11, 1339, 257, 28256, 300, 307], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 111, "seek": 25268, "start": 276.28000000000003, "end": 278.64, "text": " executing on the computational storage device", "tokens": [32368, 322, 264, 28270, 6725, 4302], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 112, "seek": 25268, "start": 278.64, "end": 280.08, "text": " is also accessing that file.", "tokens": [307, 611, 26440, 300, 3991, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 113, "seek": 25268, "start": 280.08, "end": 282.12, "text": " And this has never been done before.", "tokens": [400, 341, 575, 1128, 668, 1096, 949, 13], "temperature": 0.0, "avg_logprob": -0.19883767641507663, "compression_ratio": 1.75, "no_speech_prob": 7.358023140113801e-05}, {"id": 114, "seek": 28212, "start": 282.12, "end": 284.76, "text": " And we managed to do this using", "tokens": [400, 321, 6453, 281, 360, 341, 1228], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 115, "seek": 28212, "start": 284.76, "end": 286.96, "text": " existing open-source libraries.", "tokens": [6741, 1269, 12, 41676, 15148, 13], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 116, "seek": 28212, "start": 286.96, "end": 290.36, "text": " So, we've boost, Scenium, Fuse, UBPF, and SBDK.", "tokens": [407, 11, 321, 600, 9194, 11, 2747, 268, 2197, 11, 479, 438, 11, 624, 33, 47, 37, 11, 293, 26944, 35, 42, 13], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 117, "seek": 28212, "start": 290.36, "end": 293.56, "text": " Some of you will be familiar with some of these.", "tokens": [2188, 295, 291, 486, 312, 4963, 365, 512, 295, 613, 13], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 118, "seek": 28212, "start": 294.44, "end": 297.68, "text": " And this allows any user like you to, after this talk,", "tokens": [400, 341, 4045, 604, 4195, 411, 291, 281, 11, 934, 341, 751, 11], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 119, "seek": 28212, "start": 297.68, "end": 299.92, "text": " try and experience this yourself in Camu", "tokens": [853, 293, 1752, 341, 1803, 294, 6886, 84], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 120, "seek": 28212, "start": 299.92, "end": 302.24, "text": " without buying any additional hardware.", "tokens": [1553, 6382, 604, 4497, 8837, 13], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 121, "seek": 28212, "start": 302.24, "end": 304.16, "text": " And I'll get into that hardware in a second,", "tokens": [400, 286, 603, 483, 666, 300, 8837, 294, 257, 1150, 11], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 122, "seek": 28212, "start": 304.16, "end": 305.68, "text": " because there's some specialized hardware", "tokens": [570, 456, 311, 512, 19813, 8837], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 123, "seek": 28212, "start": 305.68, "end": 308.08, "text": " that if we want to have this physically in our hands,", "tokens": [300, 498, 321, 528, 281, 362, 341, 9762, 294, 527, 2377, 11], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 124, "seek": 28212, "start": 308.08, "end": 309.4, "text": " we have to do some things.", "tokens": [321, 362, 281, 360, 512, 721, 13], "temperature": 0.0, "avg_logprob": -0.16983148944911672, "compression_ratio": 1.5945017182130585, "no_speech_prob": 5.561138823395595e-05}, {"id": 125, "seek": 30940, "start": 309.4, "end": 311.28, "text": " And if we look at the design,", "tokens": [400, 498, 321, 574, 412, 264, 1715, 11], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 126, "seek": 30940, "start": 311.28, "end": 313.28, "text": " then we see four key components", "tokens": [550, 321, 536, 1451, 2141, 6677], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 127, "seek": 30940, "start": 313.28, "end": 315.84, "text": " and a fifth one that they'll explain on the next slide.", "tokens": [293, 257, 9266, 472, 300, 436, 603, 2903, 322, 264, 958, 4137, 13], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 128, "seek": 30940, "start": 315.84, "end": 318.4, "text": " We're using a log-structured file system", "tokens": [492, 434, 1228, 257, 3565, 12, 372, 46847, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 129, "seek": 30940, "start": 318.4, "end": 320.4, "text": " which supports no in-place updates.", "tokens": [597, 9346, 572, 294, 12, 6742, 9205, 13], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 130, "seek": 30940, "start": 320.4, "end": 322.4, "text": " So, everything is appended and appended.", "tokens": [407, 11, 1203, 307, 724, 3502, 293, 724, 3502, 13], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 131, "seek": 30940, "start": 323.4, "end": 325.4, "text": " And we have a module interface", "tokens": [400, 321, 362, 257, 10088, 9226], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 132, "seek": 30940, "start": 325.4, "end": 327.4, "text": " where we have backends and frontends.", "tokens": [689, 321, 362, 646, 2581, 293, 1868, 2581, 13], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 133, "seek": 30940, "start": 327.4, "end": 330.4, "text": " So, this allows us to experiment and try out new things.", "tokens": [407, 11, 341, 4045, 505, 281, 5120, 293, 853, 484, 777, 721, 13], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 134, "seek": 30940, "start": 330.4, "end": 332.4, "text": " We can basically swap the backends", "tokens": [492, 393, 1936, 18135, 264, 646, 2581], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 135, "seek": 30940, "start": 332.4, "end": 334.4, "text": " and keep the frontend the same.", "tokens": [293, 1066, 264, 1868, 521, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 136, "seek": 30940, "start": 334.4, "end": 337.4, "text": " And we're using this new technology in Flash SSDs", "tokens": [400, 321, 434, 1228, 341, 777, 2899, 294, 20232, 30262, 82], "temperature": 0.0, "avg_logprob": -0.22337142096625434, "compression_ratio": 1.6890459363957597, "no_speech_prob": 7.469812408089638e-05}, {"id": 137, "seek": 33740, "start": 337.4, "end": 339.4, "text": " that's called zone namespaces.", "tokens": [300, 311, 1219, 6668, 5288, 79, 2116, 13], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 138, "seek": 33740, "start": 339.4, "end": 341.4, "text": " They are commercially available now,", "tokens": [814, 366, 41751, 2435, 586, 11], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 139, "seek": 33740, "start": 341.4, "end": 343.4, "text": " but they're pretty hard to get still,", "tokens": [457, 436, 434, 1238, 1152, 281, 483, 920, 11], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 140, "seek": 33740, "start": 343.4, "end": 346.4, "text": " but that's going to improve in the future.", "tokens": [457, 300, 311, 516, 281, 3470, 294, 264, 2027, 13], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 141, "seek": 33740, "start": 346.4, "end": 350.4, "text": " And the system calls that we managed to reuse,", "tokens": [400, 264, 1185, 5498, 300, 321, 6453, 281, 26225, 11], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 142, "seek": 33740, "start": 350.4, "end": 352.4, "text": " those are extended attributes.", "tokens": [729, 366, 10913, 17212, 13], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 143, "seek": 33740, "start": 352.4, "end": 355.4, "text": " So, extended attributes on any file and directory", "tokens": [407, 11, 10913, 17212, 322, 604, 3991, 293, 21120], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 144, "seek": 33740, "start": 355.4, "end": 357.4, "text": " on most file systems,", "tokens": [322, 881, 3991, 3652, 11], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 145, "seek": 33740, "start": 357.4, "end": 360.4, "text": " on the file system you are using likely now,", "tokens": [322, 264, 3991, 1185, 291, 366, 1228, 3700, 586, 11], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 146, "seek": 33740, "start": 360.4, "end": 364.4, "text": " you can set arbitrary key value pairs on these files.", "tokens": [291, 393, 992, 23211, 2141, 2158, 15494, 322, 613, 7098, 13], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 147, "seek": 33740, "start": 364.4, "end": 366.4, "text": " And we can use this as a hint", "tokens": [400, 321, 393, 764, 341, 382, 257, 12075], "temperature": 0.0, "avg_logprob": -0.10763919664465862, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.00010707420005928725}, {"id": 148, "seek": 36640, "start": 366.4, "end": 368.4, "text": " from the user to the file system", "tokens": [490, 264, 4195, 281, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 149, "seek": 36640, "start": 368.4, "end": 370.4, "text": " to instruct the file system", "tokens": [281, 7232, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 150, "seek": 36640, "start": 370.4, "end": 372.4, "text": " that something special needs to happen.", "tokens": [300, 746, 2121, 2203, 281, 1051, 13], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 151, "seek": 36640, "start": 372.4, "end": 374.4, "text": " And basically, we just reserve some keys there", "tokens": [400, 1936, 11, 321, 445, 17824, 512, 9317, 456], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 152, "seek": 36640, "start": 374.4, "end": 377.4, "text": " and assign special behavior to them.", "tokens": [293, 6269, 2121, 5223, 281, 552, 13], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 153, "seek": 36640, "start": 378.4, "end": 381.4, "text": " Now, let's get back to the topic of zone namespaces", "tokens": [823, 11, 718, 311, 483, 646, 281, 264, 4829, 295, 6668, 5288, 79, 2116], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 154, "seek": 36640, "start": 381.4, "end": 384.4, "text": " because I only use some explanation here.", "tokens": [570, 286, 787, 764, 512, 10835, 510, 13], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 155, "seek": 36640, "start": 384.4, "end": 386.4, "text": " Back when we had hard drives,", "tokens": [5833, 562, 321, 632, 1152, 11754, 11], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 156, "seek": 36640, "start": 386.4, "end": 388.4, "text": " we could perform arbitrary reads and writes", "tokens": [321, 727, 2042, 23211, 15700, 293, 13657], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 157, "seek": 36640, "start": 388.4, "end": 390.4, "text": " to arbitrary sectors.", "tokens": [281, 23211, 18373, 13], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 158, "seek": 36640, "start": 390.4, "end": 392.4, "text": " Sectors could be rewritten all the time", "tokens": [46244, 830, 727, 312, 319, 26859, 439, 264, 565], "temperature": 0.0, "avg_logprob": -0.06273119096402768, "compression_ratio": 1.649402390438247, "no_speech_prob": 2.2820640879217535e-05}, {"id": 159, "seek": 39240, "start": 392.4, "end": 397.4, "text": " without requiring any erasure beforehand.", "tokens": [1553, 24165, 604, 1189, 2508, 22893, 13], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 160, "seek": 39240, "start": 397.4, "end": 401.4, "text": " This is what is known as the traditional block interface.", "tokens": [639, 307, 437, 307, 2570, 382, 264, 5164, 3461, 9226, 13], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 161, "seek": 39240, "start": 401.4, "end": 403.4, "text": " But there's a problem,", "tokens": [583, 456, 311, 257, 1154, 11], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 162, "seek": 39240, "start": 403.4, "end": 405.4, "text": " and that is that NAND flash doesn't actually", "tokens": [293, 300, 307, 300, 426, 8070, 7319, 1177, 380, 767], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 163, "seek": 39240, "start": 405.4, "end": 407.4, "text": " support this behavior.", "tokens": [1406, 341, 5223, 13], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 164, "seek": 39240, "start": 407.4, "end": 409.4, "text": " So, when you have NAND flash,", "tokens": [407, 11, 562, 291, 362, 426, 8070, 7319, 11], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 165, "seek": 39240, "start": 409.4, "end": 413.4, "text": " your sectors are concentrated in blocks", "tokens": [428, 18373, 366, 21321, 294, 8474], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 166, "seek": 39240, "start": 413.4, "end": 416.4, "text": " and this block needs to be linearly written.", "tokens": [293, 341, 3461, 2203, 281, 312, 43586, 3720, 13], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 167, "seek": 39240, "start": 416.4, "end": 420.4, "text": " And before you can rewrite the information in a block,", "tokens": [400, 949, 291, 393, 28132, 264, 1589, 294, 257, 3461, 11], "temperature": 0.0, "avg_logprob": -0.08893570848690566, "compression_ratio": 1.5584415584415585, "no_speech_prob": 4.467515100259334e-05}, {"id": 168, "seek": 42040, "start": 420.4, "end": 422.4, "text": " the block needs to be erased as a whole.", "tokens": [264, 3461, 2203, 281, 312, 38359, 382, 257, 1379, 13], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 169, "seek": 42040, "start": 422.4, "end": 424.4, "text": " So, in order to accommodate,", "tokens": [407, 11, 294, 1668, 281, 21410, 11], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 170, "seek": 42040, "start": 424.4, "end": 426.4, "text": " flash SSDs have to incorporate", "tokens": [7319, 30262, 82, 362, 281, 16091], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 171, "seek": 42040, "start": 426.4, "end": 428.4, "text": " what is known as a flash translation layer,", "tokens": [437, 307, 2570, 382, 257, 7319, 12853, 4583, 11], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 172, "seek": 42040, "start": 428.4, "end": 430.4, "text": " where basically all these requests", "tokens": [689, 1936, 439, 613, 12475], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 173, "seek": 42040, "start": 430.4, "end": 432.4, "text": " that go to the same sectors", "tokens": [300, 352, 281, 264, 912, 18373], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 174, "seek": 42040, "start": 432.4, "end": 435.4, "text": " are somehow translated and put somewhere else physically,", "tokens": [366, 6063, 16805, 293, 829, 4079, 1646, 9762, 11], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 175, "seek": 42040, "start": 435.4, "end": 438.4, "text": " just so that the user can still use this same block interface", "tokens": [445, 370, 300, 264, 4195, 393, 920, 764, 341, 912, 3461, 9226], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 176, "seek": 42040, "start": 438.4, "end": 441.4, "text": " that they have been used to from the time of hard drives.", "tokens": [300, 436, 362, 668, 1143, 281, 490, 264, 565, 295, 1152, 11754, 13], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 177, "seek": 42040, "start": 441.4, "end": 443.4, "text": " So, there's this physical translation", "tokens": [407, 11, 456, 311, 341, 4001, 12853], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 178, "seek": 42040, "start": 443.4, "end": 445.4, "text": " between these logical and physical blocks,", "tokens": [1296, 613, 14978, 293, 4001, 8474, 11], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 179, "seek": 42040, "start": 445.4, "end": 448.4, "text": " and when we try to synchronize the file system", "tokens": [293, 562, 321, 853, 281, 19331, 1125, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.06173549486896184, "compression_ratio": 1.78125, "no_speech_prob": 3.702765388879925e-05}, {"id": 180, "seek": 44840, "start": 448.4, "end": 451.4, "text": " from the host with the device while a kernel is running,", "tokens": [490, 264, 3975, 365, 264, 4302, 1339, 257, 28256, 307, 2614, 11], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 181, "seek": 44840, "start": 451.4, "end": 454.4, "text": " this introduces a whole lot of problems.", "tokens": [341, 31472, 257, 1379, 688, 295, 2740, 13], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 182, "seek": 44840, "start": 454.4, "end": 455.4, "text": " So, how do we solve this?", "tokens": [407, 11, 577, 360, 321, 5039, 341, 30], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 183, "seek": 44840, "start": 455.4, "end": 456.4, "text": " Now, you know the answer.", "tokens": [823, 11, 291, 458, 264, 1867, 13], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 184, "seek": 44840, "start": 456.4, "end": 458.4, "text": " It's the sound namespaces.", "tokens": [467, 311, 264, 1626, 5288, 79, 2116, 13], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 185, "seek": 44840, "start": 458.4, "end": 461.4, "text": " We basically present an interface that's not the block interface,", "tokens": [492, 1936, 1974, 364, 9226, 300, 311, 406, 264, 3461, 9226, 11], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 186, "seek": 44840, "start": 461.4, "end": 465.4, "text": " and it's an interface that fits to NAND flash behavior.", "tokens": [293, 309, 311, 364, 9226, 300, 9001, 281, 426, 8070, 7319, 5223, 13], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 187, "seek": 44840, "start": 465.4, "end": 468.4, "text": " So, when you use the sound namespaces SSD,", "tokens": [407, 11, 562, 291, 764, 264, 1626, 5288, 79, 2116, 30262, 11], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 188, "seek": 44840, "start": 468.4, "end": 472.4, "text": " you need, as a developer of a file system or the kernel,", "tokens": [291, 643, 11, 382, 257, 10754, 295, 257, 3991, 1185, 420, 264, 28256, 11], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 189, "seek": 44840, "start": 472.4, "end": 475.4, "text": " need to linearly write each sector in the block,", "tokens": [643, 281, 43586, 2464, 1184, 6977, 294, 264, 3461, 11], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 190, "seek": 44840, "start": 475.4, "end": 477.4, "text": " and you need to erase the block as a whole.", "tokens": [293, 291, 643, 281, 23525, 264, 3461, 382, 257, 1379, 13], "temperature": 0.0, "avg_logprob": -0.10366022672584589, "compression_ratio": 1.7598566308243728, "no_speech_prob": 3.6455559893511236e-05}, {"id": 191, "seek": 47740, "start": 477.4, "end": 482.4, "text": " So, effectively, you become the manager of this SSD,", "tokens": [407, 11, 8659, 11, 291, 1813, 264, 6598, 295, 341, 30262, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 192, "seek": 47740, "start": 482.4, "end": 484.4, "text": " the flash translation layer,", "tokens": [264, 7319, 12853, 4583, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 193, "seek": 47740, "start": 484.4, "end": 487.4, "text": " and the garbage collection lifts on the host,", "tokens": [293, 264, 14150, 5765, 30501, 322, 264, 3975, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 194, "seek": 47740, "start": 487.4, "end": 490.4, "text": " and we call this whole system host-managed.", "tokens": [293, 321, 818, 341, 1379, 1185, 3975, 12, 1601, 2980, 13], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 195, "seek": 47740, "start": 490.4, "end": 494.4, "text": " If we now combine this with a log-structured file system,", "tokens": [759, 321, 586, 10432, 341, 365, 257, 3565, 12, 372, 46847, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 196, "seek": 47740, "start": 494.4, "end": 497.4, "text": " which also didn't have any in-place updates,", "tokens": [597, 611, 994, 380, 362, 604, 294, 12, 6742, 9205, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 197, "seek": 47740, "start": 497.4, "end": 500.4, "text": " then you naturally see that this becomes a very good fit.", "tokens": [550, 291, 8195, 536, 300, 341, 3643, 257, 588, 665, 3318, 13], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 198, "seek": 47740, "start": 500.4, "end": 503.4, "text": " And now, together with these two technologies,", "tokens": [400, 586, 11, 1214, 365, 613, 732, 7943, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 199, "seek": 47740, "start": 503.4, "end": 506.4, "text": " we can finally synchronize the host and the file system,", "tokens": [321, 393, 2721, 19331, 1125, 264, 3975, 293, 264, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.09645497695259427, "compression_ratio": 1.7098039215686274, "no_speech_prob": 9.51534093474038e-06}, {"id": 200, "seek": 50640, "start": 506.4, "end": 511.4, "text": " and we can do that by making the file temporarily immutable", "tokens": [293, 321, 393, 360, 300, 538, 1455, 264, 3991, 23750, 3397, 32148], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 201, "seek": 50640, "start": 511.4, "end": 513.4, "text": " while the kernel is running.", "tokens": [1339, 264, 28256, 307, 2614, 13], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 202, "seek": 50640, "start": 513.4, "end": 516.4, "text": " And we do that using a snapshot consistency model", "tokens": [400, 321, 360, 300, 1228, 257, 30163, 14416, 2316], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 203, "seek": 50640, "start": 516.4, "end": 518.4, "text": " by creating in-memory snapshots.", "tokens": [538, 4084, 294, 12, 17886, 827, 19206, 27495, 13], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 204, "seek": 50640, "start": 518.4, "end": 521.4, "text": " So, we were able to create a representation of the file", "tokens": [407, 11, 321, 645, 1075, 281, 1884, 257, 10290, 295, 264, 3991], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 205, "seek": 50640, "start": 521.4, "end": 524.4, "text": " as it was on the host with metadata,", "tokens": [382, 309, 390, 322, 264, 3975, 365, 26603, 11], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 206, "seek": 50640, "start": 524.4, "end": 527.4, "text": " put that to the computational storage device memory,", "tokens": [829, 300, 281, 264, 28270, 6725, 4302, 4675, 11], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 207, "seek": 50640, "start": 527.4, "end": 530.4, "text": " and we can assure that all the data that is there", "tokens": [293, 321, 393, 20968, 300, 439, 264, 1412, 300, 307, 456], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 208, "seek": 50640, "start": 530.4, "end": 534.4, "text": " will remain immutable during the execution of the kernel.", "tokens": [486, 6222, 3397, 32148, 1830, 264, 15058, 295, 264, 28256, 13], "temperature": 0.0, "avg_logprob": -0.04728155665927463, "compression_ratio": 1.7932489451476794, "no_speech_prob": 5.822527236887254e-05}, {"id": 209, "seek": 53440, "start": 534.4, "end": 538.4, "text": " Meanwhile, the user can actually still write to the file,", "tokens": [13879, 11, 264, 4195, 393, 767, 920, 2464, 281, 264, 3991, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 210, "seek": 53440, "start": 538.4, "end": 541.4, "text": " and the metadata of the file on the host will differ,", "tokens": [293, 264, 26603, 295, 264, 3991, 322, 264, 3975, 486, 743, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 211, "seek": 53440, "start": 541.4, "end": 544.4, "text": " but that's not a problem.", "tokens": [457, 300, 311, 406, 257, 1154, 13], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 212, "seek": 53440, "start": 544.4, "end": 546.4, "text": " So, this is very powerful,", "tokens": [407, 11, 341, 307, 588, 4005, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 213, "seek": 53440, "start": 546.4, "end": 550.4, "text": " and it allows us to also understand kernel behavior in a way,", "tokens": [293, 309, 4045, 505, 281, 611, 1223, 28256, 5223, 294, 257, 636, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 214, "seek": 53440, "start": 550.4, "end": 554.4, "text": " because we can now have metadata", "tokens": [570, 321, 393, 586, 362, 26603], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 215, "seek": 53440, "start": 554.4, "end": 556.4, "text": " and send it to the computational storage device", "tokens": [293, 2845, 309, 281, 264, 28270, 6725, 4302], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 216, "seek": 53440, "start": 556.4, "end": 559.4, "text": " that says, well, actually, if the kernel tries to do this,", "tokens": [300, 1619, 11, 731, 11, 767, 11, 498, 264, 28256, 9898, 281, 360, 341, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 217, "seek": 53440, "start": 559.4, "end": 561.4, "text": " remember, it's a user-submitted program,", "tokens": [1604, 11, 309, 311, 257, 4195, 12, 30131, 76, 3944, 1461, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 218, "seek": 53440, "start": 561.4, "end": 562.4, "text": " it might be malicious,", "tokens": [309, 1062, 312, 33496, 11], "temperature": 0.0, "avg_logprob": -0.07034042101948201, "compression_ratio": 1.6862745098039216, "no_speech_prob": 1.6700349078746513e-05}, {"id": 219, "seek": 56240, "start": 562.4, "end": 564.4, "text": " then we want to block those actions,", "tokens": [550, 321, 528, 281, 3461, 729, 5909, 11], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 220, "seek": 56240, "start": 564.4, "end": 567.4, "text": " so we have a security interface as well.", "tokens": [370, 321, 362, 257, 3825, 9226, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 221, "seek": 56240, "start": 567.4, "end": 569.4, "text": " The final kick in the bucket for this design", "tokens": [440, 2572, 4437, 294, 264, 13058, 337, 341, 1715], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 222, "seek": 56240, "start": 569.4, "end": 572.4, "text": " is that we want to be architecture-independent,", "tokens": [307, 300, 321, 528, 281, 312, 9482, 12, 471, 4217, 317, 11], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 223, "seek": 56240, "start": 572.4, "end": 574.4, "text": " and we do that through EBPF,", "tokens": [293, 321, 360, 300, 807, 50148, 47, 37, 11], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 224, "seek": 56240, "start": 574.4, "end": 576.4, "text": " the system that you're also using for network hooks", "tokens": [264, 1185, 300, 291, 434, 611, 1228, 337, 3209, 26485], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 225, "seek": 56240, "start": 576.4, "end": 579.4, "text": " and event hooks in the Linux kernel nowadays.", "tokens": [293, 2280, 26485, 294, 264, 18734, 28256, 13434, 13], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 226, "seek": 56240, "start": 579.4, "end": 584.4, "text": " With EBPF, you can define system calls", "tokens": [2022, 50148, 47, 37, 11, 291, 393, 6964, 1185, 5498], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 227, "seek": 56240, "start": 584.4, "end": 586.4, "text": " and expose those in a header,", "tokens": [293, 19219, 729, 294, 257, 23117, 11], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 228, "seek": 56240, "start": 586.4, "end": 588.4, "text": " and this is actually the format of how you would do that,", "tokens": [293, 341, 307, 767, 264, 7877, 295, 577, 291, 576, 360, 300, 11], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 229, "seek": 56240, "start": 588.4, "end": 590.4, "text": " that's a real example,", "tokens": [300, 311, 257, 957, 1365, 11], "temperature": 0.0, "avg_logprob": -0.0654940302409823, "compression_ratio": 1.6373626373626373, "no_speech_prob": 5.826989945489913e-05}, {"id": 230, "seek": 59040, "start": 590.4, "end": 592.4, "text": " and the vendor would implement that code,", "tokens": [293, 264, 24321, 576, 4445, 300, 3089, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 231, "seek": 59040, "start": 592.4, "end": 596.4, "text": " and you would define in a specification some behavior,", "tokens": [293, 291, 576, 6964, 294, 257, 31256, 512, 5223, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 232, "seek": 59040, "start": 596.4, "end": 599.4, "text": " but the vendor doesn't have to open source their code,", "tokens": [457, 264, 24321, 1177, 380, 362, 281, 1269, 4009, 641, 3089, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 233, "seek": 59040, "start": 599.4, "end": 602.4, "text": " which, in the case of Flash, SSDs and vendors,", "tokens": [597, 11, 294, 264, 1389, 295, 20232, 11, 30262, 82, 293, 22056, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 234, "seek": 59040, "start": 602.4, "end": 606.4, "text": " is pretty important because they don't seem to be that keen on that,", "tokens": [307, 1238, 1021, 570, 436, 500, 380, 1643, 281, 312, 300, 20297, 322, 300, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 235, "seek": 59040, "start": 606.4, "end": 608.4, "text": " and this way, we can still have an interface,", "tokens": [293, 341, 636, 11, 321, 393, 920, 362, 364, 9226, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 236, "seek": 59040, "start": 608.4, "end": 611.4, "text": " the users can write programs once", "tokens": [264, 5022, 393, 2464, 4268, 1564], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 237, "seek": 59040, "start": 611.4, "end": 614.4, "text": " and reuse them across all vendors without any problem,", "tokens": [293, 26225, 552, 2108, 439, 22056, 1553, 604, 1154, 11], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 238, "seek": 59040, "start": 614.4, "end": 616.4, "text": " and the nice thing about EBPF", "tokens": [293, 264, 1481, 551, 466, 50148, 47, 37], "temperature": 0.0, "avg_logprob": -0.11079804243239681, "compression_ratio": 1.6941176470588235, "no_speech_prob": 4.9074234993895516e-05}, {"id": 239, "seek": 61640, "start": 616.4, "end": 621.4, "text": " is that this instruction set architecture, what EBPF essentially is,", "tokens": [307, 300, 341, 10951, 992, 9482, 11, 437, 50148, 47, 37, 4476, 307, 11], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 240, "seek": 61640, "start": 621.4, "end": 624.4, "text": " is easily implementable in a VM.", "tokens": [307, 3612, 4445, 712, 294, 257, 18038, 13], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 241, "seek": 61640, "start": 624.4, "end": 628.4, "text": " So there's even pre-existing open source implementations of this,", "tokens": [407, 456, 311, 754, 659, 12, 36447, 1269, 4009, 4445, 763, 295, 341, 11], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 242, "seek": 61640, "start": 628.4, "end": 633.4, "text": " and that's what we're using, UBPF.", "tokens": [293, 300, 311, 437, 321, 434, 1228, 11, 624, 33, 47, 37, 13], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 243, "seek": 61640, "start": 633.4, "end": 636.4, "text": " Now that I've explained all the key components", "tokens": [823, 300, 286, 600, 8825, 439, 264, 2141, 6677], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 244, "seek": 61640, "start": 636.4, "end": 639.4, "text": " to OpenCSD and FluffleFS,", "tokens": [281, 7238, 34, 23969, 293, 3235, 21665, 29318, 11], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 245, "seek": 61640, "start": 639.4, "end": 642.4, "text": " I want to start with a little demo", "tokens": [286, 528, 281, 722, 365, 257, 707, 10723], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 246, "seek": 61640, "start": 642.4, "end": 645.4, "text": " and show you what are some of the actual practical use cases for this.", "tokens": [293, 855, 291, 437, 366, 512, 295, 264, 3539, 8496, 764, 3331, 337, 341, 13], "temperature": 0.0, "avg_logprob": -0.10435411665174696, "compression_ratio": 1.5119047619047619, "no_speech_prob": 4.9820686399471015e-05}, {"id": 247, "seek": 64540, "start": 645.4, "end": 649.4, "text": " So how can we use such a computational storage system", "tokens": [407, 577, 393, 321, 764, 1270, 257, 28270, 6725, 1185], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 248, "seek": 64540, "start": 649.4, "end": 653.4, "text": " in a way that it makes sense in terms of data reduction", "tokens": [294, 257, 636, 300, 309, 1669, 2020, 294, 2115, 295, 1412, 11004], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 249, "seek": 64540, "start": 653.4, "end": 655.4, "text": " and energy efficiency?", "tokens": [293, 2281, 10493, 30], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 250, "seek": 64540, "start": 655.4, "end": 658.4, "text": " And for that, we're going to go to the example of Shannon entropy.", "tokens": [400, 337, 300, 11, 321, 434, 516, 281, 352, 281, 264, 1365, 295, 28974, 30867, 13], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 251, "seek": 64540, "start": 658.4, "end": 661.4, "text": " This is heavily used by file systems", "tokens": [639, 307, 10950, 1143, 538, 3991, 3652], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 252, "seek": 64540, "start": 661.4, "end": 663.4, "text": " who can perform background compression", "tokens": [567, 393, 2042, 3678, 19355], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 253, "seek": 64540, "start": 663.4, "end": 668.4, "text": " or by just compression programs that compress in the background.", "tokens": [420, 538, 445, 19355, 4268, 300, 14778, 294, 264, 3678, 13], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 254, "seek": 64540, "start": 668.4, "end": 672.4, "text": " What you basically do is you try to quantify the randomness you have in a file.", "tokens": [708, 291, 1936, 360, 307, 291, 853, 281, 40421, 264, 4974, 1287, 291, 362, 294, 257, 3991, 13], "temperature": 0.0, "avg_logprob": -0.07660396500389174, "compression_ratio": 1.6216216216216217, "no_speech_prob": 9.021064033731818e-05}, {"id": 255, "seek": 67240, "start": 672.4, "end": 675.4, "text": " Typically, it's between 0 and 1, but for computers,", "tokens": [23129, 11, 309, 311, 1296, 1958, 293, 502, 11, 457, 337, 10807, 11], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 256, "seek": 67240, "start": 675.4, "end": 677.4, "text": " that doesn't really make sense.", "tokens": [300, 1177, 380, 534, 652, 2020, 13], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 257, "seek": 67240, "start": 677.4, "end": 680.4, "text": " So we use this log b that's over here", "tokens": [407, 321, 764, 341, 3565, 272, 300, 311, 670, 510], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 258, "seek": 67240, "start": 680.4, "end": 683.4, "text": " to normalize this for bytes.", "tokens": [281, 2710, 1125, 341, 337, 36088, 13], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 259, "seek": 67240, "start": 683.4, "end": 687.4, "text": " Then we can say what's the distribution of bytes.", "tokens": [1396, 321, 393, 584, 437, 311, 264, 7316, 295, 36088, 13], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 260, "seek": 67240, "start": 687.4, "end": 691.4, "text": " So we create, because a byte has 265 different possible values,", "tokens": [407, 321, 1884, 11, 570, 257, 40846, 575, 7551, 20, 819, 1944, 4190, 11], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 261, "seek": 67240, "start": 691.4, "end": 693.4, "text": " we create 265 bins,", "tokens": [321, 1884, 7551, 20, 41275, 11], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 262, "seek": 67240, "start": 693.4, "end": 696.4, "text": " and we submit a program to calculate this.", "tokens": [293, 321, 10315, 257, 1461, 281, 8873, 341, 13], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 263, "seek": 67240, "start": 696.4, "end": 698.4, "text": " It runs in the background,", "tokens": [467, 6676, 294, 264, 3678, 11], "temperature": 0.0, "avg_logprob": -0.10458553647532047, "compression_ratio": 1.5324675324675325, "no_speech_prob": 3.6455599911278114e-05}, {"id": 264, "seek": 69840, "start": 698.4, "end": 703.4, "text": " and only the result is returned to the host operating system.", "tokens": [293, 787, 264, 1874, 307, 8752, 281, 264, 3975, 7447, 1185, 13], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 265, "seek": 69840, "start": 703.4, "end": 706.4, "text": " And then the host operating system is free to decide", "tokens": [400, 550, 264, 3975, 7447, 1185, 307, 1737, 281, 4536], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 266, "seek": 69840, "start": 706.4, "end": 709.4, "text": " whether or not this file should be compressed or not.", "tokens": [1968, 420, 406, 341, 3991, 820, 312, 30353, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 267, "seek": 69840, "start": 709.4, "end": 713.4, "text": " So how does such a kernel look like,", "tokens": [407, 577, 775, 1270, 257, 28256, 574, 411, 11], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 268, "seek": 69840, "start": 713.4, "end": 717.4, "text": " the kernel that you actually submit to the computational storage device,", "tokens": [264, 28256, 300, 291, 767, 10315, 281, 264, 28270, 6725, 4302, 11], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 269, "seek": 69840, "start": 717.4, "end": 720.4, "text": " or you can just write them in C and compile them with Clang.", "tokens": [420, 291, 393, 445, 2464, 552, 294, 383, 293, 31413, 552, 365, 2033, 656, 13], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 270, "seek": 69840, "start": 720.4, "end": 722.4, "text": " So you write them in C,", "tokens": [407, 291, 2464, 552, 294, 383, 11], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 271, "seek": 69840, "start": 722.4, "end": 725.4, "text": " and we have two individual interfaces here", "tokens": [293, 321, 362, 732, 2609, 28416, 510], "temperature": 0.0, "avg_logprob": -0.09811046335956838, "compression_ratio": 1.7130801687763713, "no_speech_prob": 1.803259874577634e-05}, {"id": 272, "seek": 72540, "start": 725.4, "end": 728.4, "text": " that we are exposing. The yellow commands,", "tokens": [300, 321, 366, 33178, 13, 440, 5566, 16901, 11], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 273, "seek": 72540, "start": 728.4, "end": 731.4, "text": " those are introduced by the system calls,", "tokens": [729, 366, 7268, 538, 264, 1185, 5498, 11], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 274, "seek": 72540, "start": 731.4, "end": 734.4, "text": " the ebpfi that we are defining,", "tokens": [264, 308, 65, 79, 13325, 300, 321, 366, 17827, 11], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 275, "seek": 72540, "start": 734.4, "end": 736.4, "text": " and the purple ones,", "tokens": [293, 264, 9656, 2306, 11], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 276, "seek": 72540, "start": 736.4, "end": 740.4, "text": " those are introduced by a file system.", "tokens": [729, 366, 7268, 538, 257, 3991, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 277, "seek": 72540, "start": 740.4, "end": 745.4, "text": " What that means is that using this system as is now,", "tokens": [708, 300, 1355, 307, 300, 1228, 341, 1185, 382, 307, 586, 11], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 278, "seek": 72540, "start": 745.4, "end": 748.4, "text": " that it's not agnostic to the file system.", "tokens": [300, 309, 311, 406, 623, 77, 19634, 281, 264, 3991, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 279, "seek": 72540, "start": 748.4, "end": 751.4, "text": " So it is agnostic to the vendor,", "tokens": [407, 309, 307, 623, 77, 19634, 281, 264, 24321, 11], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 280, "seek": 72540, "start": 751.4, "end": 753.4, "text": " and the architecture of the vendor.", "tokens": [293, 264, 9482, 295, 264, 24321, 13], "temperature": 0.0, "avg_logprob": -0.1024756667637589, "compression_ratio": 1.8633879781420766, "no_speech_prob": 4.981343954568729e-05}, {"id": 281, "seek": 75340, "start": 753.4, "end": 756.4, "text": " So we have this ARM or x86, that doesn't matter,", "tokens": [407, 321, 362, 341, 45209, 420, 2031, 22193, 11, 300, 1177, 380, 1871, 11], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 282, "seek": 75340, "start": 756.4, "end": 760.4, "text": " but now it's specific to the FluffleFS file system that we have written.", "tokens": [457, 586, 309, 311, 2685, 281, 264, 3235, 21665, 29318, 3991, 1185, 300, 321, 362, 3720, 13], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 283, "seek": 75340, "start": 760.4, "end": 764.4, "text": " And I will address some possible solutions for this at the end.", "tokens": [400, 286, 486, 2985, 512, 1944, 6547, 337, 341, 412, 264, 917, 13], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 284, "seek": 75340, "start": 764.4, "end": 769.4, "text": " Other things we need to realize is that the ebpf stack size is typically very small.", "tokens": [5358, 721, 321, 643, 281, 4325, 307, 300, 264, 308, 65, 25302, 8630, 2744, 307, 5850, 588, 1359, 13], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 285, "seek": 75340, "start": 769.4, "end": 772.4, "text": " We're talking bytes here instead of kilobytes.", "tokens": [492, 434, 1417, 36088, 510, 2602, 295, 5128, 996, 43673, 13], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 286, "seek": 75340, "start": 772.4, "end": 775.4, "text": " So we need a way to address this.", "tokens": [407, 321, 643, 257, 636, 281, 2985, 341, 13], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 287, "seek": 75340, "start": 775.4, "end": 780.4, "text": " So what you can do is in ubpf you can allocate a heap,", "tokens": [407, 437, 291, 393, 360, 307, 294, 344, 65, 25302, 291, 393, 35713, 257, 33591, 11], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 288, "seek": 75340, "start": 780.4, "end": 782.4, "text": " just as your stack,", "tokens": [445, 382, 428, 8630, 11], "temperature": 0.0, "avg_logprob": -0.18640926236011943, "compression_ratio": 1.595505617977528, "no_speech_prob": 3.7627192796207964e-05}, {"id": 289, "seek": 78240, "start": 782.4, "end": 787.4, "text": " and then we have this bpf getmem info that we have defined as part of the ABI", "tokens": [293, 550, 321, 362, 341, 272, 25302, 483, 17886, 13614, 300, 321, 362, 7642, 382, 644, 295, 264, 316, 11291], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 290, "seek": 78240, "start": 787.4, "end": 790.4, "text": " that allows you to get your heap pointer.", "tokens": [300, 4045, 291, 281, 483, 428, 33591, 23918, 13], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 291, "seek": 78240, "start": 790.4, "end": 793.4, "text": " Now currently you have to manually offset this,", "tokens": [823, 4362, 291, 362, 281, 16945, 18687, 341, 11], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 292, "seek": 78240, "start": 793.4, "end": 795.4, "text": " which is a bit tedious, if you will.", "tokens": [597, 307, 257, 857, 38284, 11, 498, 291, 486, 13], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 293, "seek": 78240, "start": 795.4, "end": 798.4, "text": " You see that that is actually done here.", "tokens": [509, 536, 300, 300, 307, 767, 1096, 510, 13], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 294, "seek": 78240, "start": 798.4, "end": 802.4, "text": " To store the bins, we offset the buffer by the sector size,", "tokens": [1407, 3531, 264, 41275, 11, 321, 18687, 264, 21762, 538, 264, 6977, 2744, 11], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 295, "seek": 78240, "start": 802.4, "end": 808.4, "text": " and then the data from the sector reads is actually stored at the top of the buffer,", "tokens": [293, 550, 264, 1412, 490, 264, 6977, 15700, 307, 767, 12187, 412, 264, 1192, 295, 264, 21762, 11], "temperature": 0.0, "avg_logprob": -0.12017610640752883, "compression_ratio": 1.7333333333333334, "no_speech_prob": 2.6254534532199614e-05}, {"id": 296, "seek": 80840, "start": 808.4, "end": 812.4, "text": " and the bins are stored at the offset for precisely one sector size.", "tokens": [293, 264, 41275, 366, 12187, 412, 264, 18687, 337, 13402, 472, 6977, 2744, 13], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 297, "seek": 80840, "start": 812.4, "end": 816.4, "text": " Now when we go to look at the file system interface", "tokens": [823, 562, 321, 352, 281, 574, 412, 264, 3991, 1185, 9226], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 298, "seek": 80840, "start": 816.4, "end": 821.4, "text": " and all the helpers and data structures and additional function calls that we introduced,", "tokens": [293, 439, 264, 854, 433, 293, 1412, 9227, 293, 4497, 2445, 5498, 300, 321, 7268, 11], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 299, "seek": 80840, "start": 821.4, "end": 826.4, "text": " we can later see that we can also make a basic implementation of malloc and free here", "tokens": [321, 393, 1780, 536, 300, 321, 393, 611, 652, 257, 3875, 11420, 295, 16026, 905, 293, 1737, 510], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 300, "seek": 80840, "start": 826.4, "end": 828.4, "text": " and then just resolve this.", "tokens": [293, 550, 445, 14151, 341, 13], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 301, "seek": 80840, "start": 828.4, "end": 833.4, "text": " But for now, for this example, it's a bit tedious.", "tokens": [583, 337, 586, 11, 337, 341, 1365, 11, 309, 311, 257, 857, 38284, 13], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 302, "seek": 80840, "start": 833.4, "end": 835.4, "text": " Now how do you actually trigger this?", "tokens": [823, 577, 360, 291, 767, 7875, 341, 30], "temperature": 0.0, "avg_logprob": -0.08821305024971082, "compression_ratio": 1.6388888888888888, "no_speech_prob": 9.366402082378045e-06}, {"id": 303, "seek": 83540, "start": 835.4, "end": 839.4, "text": " So we had the extended attributes, we had all these systems in place,", "tokens": [407, 321, 632, 264, 10913, 17212, 11, 321, 632, 439, 613, 3652, 294, 1081, 11], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 304, "seek": 83540, "start": 839.4, "end": 843.4, "text": " but now you just have this kernel, you have compiled it, you have stored it to a file,", "tokens": [457, 586, 291, 445, 362, 341, 28256, 11, 291, 362, 36548, 309, 11, 291, 362, 12187, 309, 281, 257, 3991, 11], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 305, "seek": 83540, "start": 843.4, "end": 847.4, "text": " and now you want to actually offload your computation,", "tokens": [293, 586, 291, 528, 281, 767, 766, 2907, 428, 24903, 11], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 306, "seek": 83540, "start": 847.4, "end": 849.4, "text": " well, in an emulated fashion,", "tokens": [731, 11, 294, 364, 846, 6987, 6700, 11], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 307, "seek": 83540, "start": 849.4, "end": 852.4, "text": " but you want to learn, you want to see how you do that.", "tokens": [457, 291, 528, 281, 1466, 11, 291, 528, 281, 536, 577, 291, 360, 300, 13], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 308, "seek": 83540, "start": 852.4, "end": 856.4, "text": " So the first thing you do is you call start on the kernel object.", "tokens": [407, 264, 700, 551, 291, 360, 307, 291, 818, 722, 322, 264, 28256, 2657, 13], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 309, "seek": 83540, "start": 856.4, "end": 858.4, "text": " So this is your compiled diecode,", "tokens": [407, 341, 307, 428, 36548, 978, 22332, 11], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 310, "seek": 83540, "start": 858.4, "end": 861.4, "text": " and then you get the inode number.", "tokens": [293, 550, 291, 483, 264, 294, 1429, 1230, 13], "temperature": 0.0, "avg_logprob": -0.09316229025522868, "compression_ratio": 1.8620689655172413, "no_speech_prob": 4.609881216310896e-05}, {"id": 311, "seek": 86140, "start": 861.4, "end": 868.4, "text": " This inode number you have then to remember and you then open the file that you want to read upon", "tokens": [639, 294, 1429, 1230, 291, 362, 550, 281, 1604, 293, 291, 550, 1269, 264, 3991, 300, 291, 528, 281, 1401, 3564], "temperature": 0.0, "avg_logprob": -0.10499122017308285, "compression_ratio": 1.8186046511627907, "no_speech_prob": 3.534776624292135e-05}, {"id": 312, "seek": 86140, "start": 868.4, "end": 872.4, "text": " or write upon, but for the examples we're using read mostly.", "tokens": [420, 2464, 3564, 11, 457, 337, 264, 5110, 321, 434, 1228, 1401, 5240, 13], "temperature": 0.0, "avg_logprob": -0.10499122017308285, "compression_ratio": 1.8186046511627907, "no_speech_prob": 3.534776624292135e-05}, {"id": 313, "seek": 86140, "start": 872.4, "end": 877.4, "text": " Then you use set extended attribute, you use our reserved key,", "tokens": [1396, 291, 764, 992, 10913, 19667, 11, 291, 764, 527, 24819, 2141, 11], "temperature": 0.0, "avg_logprob": -0.10499122017308285, "compression_ratio": 1.8186046511627907, "no_speech_prob": 3.534776624292135e-05}, {"id": 314, "seek": 86140, "start": 877.4, "end": 880.4, "text": " you set it to the inode number of the kernel file,", "tokens": [291, 992, 309, 281, 264, 294, 1429, 1230, 295, 264, 28256, 3991, 11], "temperature": 0.0, "avg_logprob": -0.10499122017308285, "compression_ratio": 1.8186046511627907, "no_speech_prob": 3.534776624292135e-05}, {"id": 315, "seek": 86140, "start": 880.4, "end": 883.4, "text": " and then when you actually issue read commands,", "tokens": [293, 550, 562, 291, 767, 2734, 1401, 16901, 11], "temperature": 0.0, "avg_logprob": -0.10499122017308285, "compression_ratio": 1.8186046511627907, "no_speech_prob": 3.534776624292135e-05}, {"id": 316, "seek": 86140, "start": 883.4, "end": 888.4, "text": " the read commands will actually go to the computational storage device", "tokens": [264, 1401, 16901, 486, 767, 352, 281, 264, 28270, 6725, 4302], "temperature": 0.0, "avg_logprob": -0.10499122017308285, "compression_ratio": 1.8186046511627907, "no_speech_prob": 3.534776624292135e-05}, {"id": 317, "seek": 88840, "start": 888.4, "end": 891.4, "text": " and they'll run on there.", "tokens": [293, 436, 603, 1190, 322, 456, 13], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 318, "seek": 88840, "start": 891.4, "end": 893.4, "text": " But when do you actually take these snapshots?", "tokens": [583, 562, 360, 291, 767, 747, 613, 19206, 27495, 30], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 319, "seek": 88840, "start": 893.4, "end": 896.4, "text": " And the trick is as soon as you set extended attributes,", "tokens": [400, 264, 4282, 307, 382, 2321, 382, 291, 992, 10913, 17212, 11], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 320, "seek": 88840, "start": 896.4, "end": 898.4, "text": " this is just by design, right?", "tokens": [341, 307, 445, 538, 1715, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 321, "seek": 88840, "start": 898.4, "end": 901.4, "text": " It could also be once you call the first read or once you execute the first write,", "tokens": [467, 727, 611, 312, 1564, 291, 818, 264, 700, 1401, 420, 1564, 291, 14483, 264, 700, 2464, 11], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 322, "seek": 88840, "start": 901.4, "end": 905.4, "text": " but we have decided to do it at the moment that you set extended attribute.", "tokens": [457, 321, 362, 3047, 281, 360, 309, 412, 264, 1623, 300, 291, 992, 10913, 19667, 13], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 323, "seek": 88840, "start": 905.4, "end": 908.4, "text": " That means that if you make any changes to your kernel,", "tokens": [663, 1355, 300, 498, 291, 652, 604, 2962, 281, 428, 28256, 11], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 324, "seek": 88840, "start": 908.4, "end": 911.4, "text": " once you've actually set extended attribute,", "tokens": [1564, 291, 600, 767, 992, 10913, 19667, 11], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 325, "seek": 88840, "start": 911.4, "end": 913.4, "text": " then nothing changes anymore.", "tokens": [550, 1825, 2962, 3602, 13], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 326, "seek": 88840, "start": 913.4, "end": 916.4, "text": " And the same goes to the file.", "tokens": [400, 264, 912, 1709, 281, 264, 3991, 13], "temperature": 0.0, "avg_logprob": -0.07776753107706706, "compression_ratio": 1.8288973384030418, "no_speech_prob": 5.3064948588144034e-05}, {"id": 327, "seek": 91640, "start": 916.4, "end": 920.4, "text": " Now I want to briefly explain some different types of kernel that you can have,", "tokens": [823, 286, 528, 281, 10515, 2903, 512, 819, 3467, 295, 28256, 300, 291, 393, 362, 11], "temperature": 0.0, "avg_logprob": -0.07881559644426618, "compression_ratio": 1.8212765957446808, "no_speech_prob": 4.13316665799357e-05}, {"id": 328, "seek": 91640, "start": 920.4, "end": 926.4, "text": " and what the example here is mainly showing is what we call a stream kernel.", "tokens": [293, 437, 264, 1365, 510, 307, 8704, 4099, 307, 437, 321, 818, 257, 4309, 28256, 13], "temperature": 0.0, "avg_logprob": -0.07881559644426618, "compression_ratio": 1.8212765957446808, "no_speech_prob": 4.13316665799357e-05}, {"id": 329, "seek": 91640, "start": 926.4, "end": 930.4, "text": " So a stream kernel happens in place of the regular read or write request.", "tokens": [407, 257, 4309, 28256, 2314, 294, 1081, 295, 264, 3890, 1401, 420, 2464, 5308, 13], "temperature": 0.0, "avg_logprob": -0.07881559644426618, "compression_ratio": 1.8212765957446808, "no_speech_prob": 4.13316665799357e-05}, {"id": 330, "seek": 91640, "start": 930.4, "end": 933.4, "text": " So the regular read or write request doesn't happen,", "tokens": [407, 264, 3890, 1401, 420, 2464, 5308, 1177, 380, 1051, 11], "temperature": 0.0, "avg_logprob": -0.07881559644426618, "compression_ratio": 1.8212765957446808, "no_speech_prob": 4.13316665799357e-05}, {"id": 331, "seek": 91640, "start": 933.4, "end": 940.4, "text": " only the computational storage request happens on the computational storage device.", "tokens": [787, 264, 28270, 6725, 5308, 2314, 322, 264, 28270, 6725, 4302, 13], "temperature": 0.0, "avg_logprob": -0.07881559644426618, "compression_ratio": 1.8212765957446808, "no_speech_prob": 4.13316665799357e-05}, {"id": 332, "seek": 91640, "start": 940.4, "end": 944.4, "text": " And with an event kernel, it's like the opposite way around.", "tokens": [400, 365, 364, 2280, 28256, 11, 309, 311, 411, 264, 6182, 636, 926, 13], "temperature": 0.0, "avg_logprob": -0.07881559644426618, "compression_ratio": 1.8212765957446808, "no_speech_prob": 4.13316665799357e-05}, {"id": 333, "seek": 94440, "start": 944.4, "end": 947.4, "text": " First, the regular event happens normally,", "tokens": [2386, 11, 264, 3890, 2280, 2314, 5646, 11], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 334, "seek": 94440, "start": 947.4, "end": 951.4, "text": " and then the kernel is presented with the metadata from that request", "tokens": [293, 550, 264, 28256, 307, 8212, 365, 264, 26603, 490, 300, 5308], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 335, "seek": 94440, "start": 951.4, "end": 953.4, "text": " and can do additional things.", "tokens": [293, 393, 360, 4497, 721, 13], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 336, "seek": 94440, "start": 953.4, "end": 955.4, "text": " This is for databases interesting.", "tokens": [639, 307, 337, 22380, 1880, 13], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 337, "seek": 94440, "start": 955.4, "end": 958.4, "text": " For example, say you're writing a big table,", "tokens": [1171, 1365, 11, 584, 291, 434, 3579, 257, 955, 3199, 11], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 338, "seek": 94440, "start": 958.4, "end": 961.4, "text": " and you want to know the average or the minimum or the maximum,", "tokens": [293, 291, 528, 281, 458, 264, 4274, 420, 264, 7285, 420, 264, 6674, 11], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 339, "seek": 94440, "start": 961.4, "end": 965.4, "text": " and you want to emit that as metadata at the end of your table write.", "tokens": [293, 291, 528, 281, 32084, 300, 382, 26603, 412, 264, 917, 295, 428, 3199, 2464, 13], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 340, "seek": 94440, "start": 965.4, "end": 969.4, "text": " While you could use an event kernel to let it write as is,", "tokens": [3987, 291, 727, 764, 364, 2280, 28256, 281, 718, 309, 2464, 382, 307, 11], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 341, "seek": 94440, "start": 969.4, "end": 972.4, "text": " then you get presented with the data,", "tokens": [550, 291, 483, 8212, 365, 264, 1412, 11], "temperature": 0.0, "avg_logprob": -0.08459020697552225, "compression_ratio": 1.779527559055118, "no_speech_prob": 1.6699987099855207e-05}, {"id": 342, "seek": 97240, "start": 972.4, "end": 975.4, "text": " and the kernel runs on the computational storage device,", "tokens": [293, 264, 28256, 6676, 322, 264, 28270, 6725, 4302, 11], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 343, "seek": 97240, "start": 975.4, "end": 977.4, "text": " and you emit the metadata after,", "tokens": [293, 291, 32084, 264, 26603, 934, 11], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 344, "seek": 97240, "start": 977.4, "end": 981.4, "text": " and you can store that as like an index.", "tokens": [293, 291, 393, 3531, 300, 382, 411, 364, 8186, 13], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 345, "seek": 97240, "start": 981.4, "end": 987.4, "text": " We have also decided to isolate the context of this computational storage offloading,", "tokens": [492, 362, 611, 3047, 281, 25660, 264, 4319, 295, 341, 28270, 6725, 766, 2907, 278, 11], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 346, "seek": 97240, "start": 987.4, "end": 992.4, "text": " so what is considered, once you set the attribute, by PID.", "tokens": [370, 437, 307, 4888, 11, 1564, 291, 992, 264, 19667, 11, 538, 430, 2777, 13], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 347, "seek": 97240, "start": 992.4, "end": 995.4, "text": " But we also could make this by file handle,", "tokens": [583, 321, 611, 727, 652, 341, 538, 3991, 4813, 11], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 348, "seek": 97240, "start": 995.4, "end": 998.4, "text": " or you could even set it for the whole line node.", "tokens": [420, 291, 727, 754, 992, 309, 337, 264, 1379, 1622, 9984, 13], "temperature": 0.0, "avg_logprob": -0.1612218419710795, "compression_ratio": 1.669683257918552, "no_speech_prob": 2.1354180717025883e-05}, {"id": 349, "seek": 99840, "start": 998.4, "end": 1004.4, "text": " More so, we could use specific keys for file handle PID or I node offloading,", "tokens": [5048, 370, 11, 321, 727, 764, 2685, 9317, 337, 3991, 4813, 430, 2777, 420, 286, 9984, 766, 2907, 278, 11], "temperature": 0.0, "avg_logprob": -0.13697799789571316, "compression_ratio": 1.536, "no_speech_prob": 3.2373436624766327e-06}, {"id": 350, "seek": 99840, "start": 1004.4, "end": 1009.4, "text": " so it's just a matter of semantics here.", "tokens": [370, 309, 311, 445, 257, 1871, 295, 4361, 45298, 510, 13], "temperature": 0.0, "avg_logprob": -0.13697799789571316, "compression_ratio": 1.536, "no_speech_prob": 3.2373436624766327e-06}, {"id": 351, "seek": 99840, "start": 1009.4, "end": 1015.4, "text": " Now, I have some source code in Python of these execution steps that I've just shown here,", "tokens": [823, 11, 286, 362, 512, 4009, 3089, 294, 15329, 295, 613, 15058, 4439, 300, 286, 600, 445, 4898, 510, 11], "temperature": 0.0, "avg_logprob": -0.13697799789571316, "compression_ratio": 1.536, "no_speech_prob": 3.2373436624766327e-06}, {"id": 352, "seek": 99840, "start": 1015.4, "end": 1019.4, "text": " because there's a little bit of details that I left out in the brief overview.", "tokens": [570, 456, 311, 257, 707, 857, 295, 4365, 300, 286, 1411, 484, 294, 264, 5353, 12492, 13], "temperature": 0.0, "avg_logprob": -0.13697799789571316, "compression_ratio": 1.536, "no_speech_prob": 3.2373436624766327e-06}, {"id": 353, "seek": 99840, "start": 1019.4, "end": 1023.4, "text": " The first is that you have to stride your requests,", "tokens": [440, 700, 307, 300, 291, 362, 281, 1056, 482, 428, 12475, 11], "temperature": 0.0, "avg_logprob": -0.13697799789571316, "compression_ratio": 1.536, "no_speech_prob": 3.2373436624766327e-06}, {"id": 354, "seek": 99840, "start": 1023.4, "end": 1026.4, "text": " and those have to be strided by 500 to 12k.", "tokens": [293, 729, 362, 281, 312, 1056, 2112, 538, 5923, 281, 2272, 74, 13], "temperature": 0.0, "avg_logprob": -0.13697799789571316, "compression_ratio": 1.536, "no_speech_prob": 3.2373436624766327e-06}, {"id": 355, "seek": 102640, "start": 1026.4, "end": 1028.4, "text": " Why is this so?", "tokens": [1545, 307, 341, 370, 30], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 356, "seek": 102640, "start": 1028.4, "end": 1032.4, "text": " Well, infuse the amount of kernel pages that are allocated to move data between the kernel", "tokens": [1042, 11, 1536, 438, 264, 2372, 295, 28256, 7183, 300, 366, 29772, 281, 1286, 1412, 1296, 264, 28256], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 357, "seek": 102640, "start": 1032.4, "end": 1035.4, "text": " and the user space is statically fixed.", "tokens": [293, 264, 4195, 1901, 307, 2219, 984, 6806, 13], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 358, "seek": 102640, "start": 1035.4, "end": 1040.4, "text": " So if you go over this, then your request will seem filing from the user perspective,", "tokens": [407, 498, 291, 352, 670, 341, 11, 550, 428, 5308, 486, 1643, 26854, 490, 264, 4195, 4585, 11], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 359, "seek": 102640, "start": 1040.4, "end": 1043.4, "text": " but what the kernel will do is it will chop up your requests.", "tokens": [457, 437, 264, 28256, 486, 360, 307, 309, 486, 7931, 493, 428, 12475, 13], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 360, "seek": 102640, "start": 1043.4, "end": 1045.4, "text": " Why is that problematic?", "tokens": [1545, 307, 300, 19011, 30], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 361, "seek": 102640, "start": 1045.4, "end": 1048.4, "text": " Well, then multiple kernels spawn,", "tokens": [1042, 11, 550, 3866, 23434, 1625, 17088, 11], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 362, "seek": 102640, "start": 1048.4, "end": 1050.4, "text": " because from the context of the file system,", "tokens": [570, 490, 264, 4319, 295, 264, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 363, "seek": 102640, "start": 1050.4, "end": 1052.4, "text": " every time it sees a read or write request,", "tokens": [633, 565, 309, 8194, 257, 1401, 420, 2464, 5308, 11], "temperature": 0.0, "avg_logprob": -0.09758386118658657, "compression_ratio": 1.7509881422924902, "no_speech_prob": 2.354771459067706e-05}, {"id": 364, "seek": 105240, "start": 1052.4, "end": 1060.4, "text": " it will go to the kernel and move it to the computational storage device.", "tokens": [309, 486, 352, 281, 264, 28256, 293, 1286, 309, 281, 264, 28270, 6725, 4302, 13], "temperature": 0.0, "avg_logprob": -0.15527213517055716, "compression_ratio": 1.5904761904761904, "no_speech_prob": 4.681452628574334e-05}, {"id": 365, "seek": 105240, "start": 1060.4, "end": 1064.4, "text": " Then here you can see how I set the extended attribute and get the kernel,", "tokens": [1396, 510, 291, 393, 536, 577, 286, 992, 264, 10913, 19667, 293, 483, 264, 28256, 11], "temperature": 0.0, "avg_logprob": -0.15527213517055716, "compression_ratio": 1.5904761904761904, "no_speech_prob": 4.681452628574334e-05}, {"id": 366, "seek": 105240, "start": 1064.4, "end": 1066.4, "text": " the I node number,", "tokens": [264, 286, 9984, 1230, 11], "temperature": 0.0, "avg_logprob": -0.15527213517055716, "compression_ratio": 1.5904761904761904, "no_speech_prob": 4.681452628574334e-05}, {"id": 367, "seek": 105240, "start": 1066.4, "end": 1072.4, "text": " and what I want to show here at the bottom is that I'm getting 265 integers,", "tokens": [293, 437, 286, 528, 281, 855, 510, 412, 264, 2767, 307, 300, 286, 478, 1242, 7551, 20, 41674, 11], "temperature": 0.0, "avg_logprob": -0.15527213517055716, "compression_ratio": 1.5904761904761904, "no_speech_prob": 4.681452628574334e-05}, {"id": 368, "seek": 105240, "start": 1072.4, "end": 1076.4, "text": " and that's for each of the buckets of the entropy read,", "tokens": [293, 300, 311, 337, 1184, 295, 264, 32191, 295, 264, 30867, 1401, 11], "temperature": 0.0, "avg_logprob": -0.15527213517055716, "compression_ratio": 1.5904761904761904, "no_speech_prob": 4.681452628574334e-05}, {"id": 369, "seek": 105240, "start": 1076.4, "end": 1079.4, "text": " but I'm having a request of 512k.", "tokens": [457, 286, 478, 1419, 257, 5308, 295, 1025, 4762, 74, 13], "temperature": 0.0, "avg_logprob": -0.15527213517055716, "compression_ratio": 1.5904761904761904, "no_speech_prob": 4.681452628574334e-05}, {"id": 370, "seek": 107940, "start": 1079.4, "end": 1084.4, "text": " So that shows you the amount of data reduction that you can achieve using systems like this.", "tokens": [407, 300, 3110, 291, 264, 2372, 295, 1412, 11004, 300, 291, 393, 4584, 1228, 3652, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 371, "seek": 107940, "start": 1084.4, "end": 1088.4, "text": " 265 integers, 512k.", "tokens": [7551, 20, 41674, 11, 1025, 4762, 74, 13], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 372, "seek": 107940, "start": 1088.4, "end": 1089.4, "text": " Pretty good.", "tokens": [10693, 665, 13], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 373, "seek": 107940, "start": 1089.4, "end": 1090.4, "text": " Could be better though.", "tokens": [7497, 312, 1101, 1673, 13], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 374, "seek": 107940, "start": 1090.4, "end": 1095.4, "text": " The reason it's not better is floating point support in EBPF is limited", "tokens": [440, 1778, 309, 311, 406, 1101, 307, 12607, 935, 1406, 294, 50148, 47, 37, 307, 5567], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 375, "seek": 107940, "start": 1095.4, "end": 1099.4, "text": " to the fact where you need to implement fixed point match yourself.", "tokens": [281, 264, 1186, 689, 291, 643, 281, 4445, 6806, 935, 2995, 1803, 13], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 376, "seek": 107940, "start": 1099.4, "end": 1102.4, "text": " So we could do this as part of the file system helpers,", "tokens": [407, 321, 727, 360, 341, 382, 644, 295, 264, 3991, 1185, 854, 433, 11], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 377, "seek": 107940, "start": 1102.4, "end": 1108.4, "text": " but that's not done for this prototype at the moment.", "tokens": [457, 300, 311, 406, 1096, 337, 341, 19475, 412, 264, 1623, 13], "temperature": 0.0, "avg_logprob": -0.08624533180878541, "compression_ratio": 1.5647058823529412, "no_speech_prob": 1.2409193914209027e-05}, {"id": 378, "seek": 110840, "start": 1108.4, "end": 1109.4, "text": " Now, some limitations.", "tokens": [823, 11, 512, 15705, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 379, "seek": 110840, "start": 1109.4, "end": 1111.4, "text": " This was a master thesis work.", "tokens": [639, 390, 257, 4505, 22288, 589, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 380, "seek": 110840, "start": 1111.4, "end": 1114.4, "text": " This was my first time defining a file system ever.", "tokens": [639, 390, 452, 700, 565, 17827, 257, 3991, 1185, 1562, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 381, "seek": 110840, "start": 1114.4, "end": 1116.4, "text": " It's solely a proof of concept.", "tokens": [467, 311, 23309, 257, 8177, 295, 3410, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 382, "seek": 110840, "start": 1116.4, "end": 1121.4, "text": " There's no garbage collection, no deletion, no space reclaiming.", "tokens": [821, 311, 572, 14150, 5765, 11, 572, 1103, 302, 313, 11, 572, 1901, 40074, 278, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 383, "seek": 110840, "start": 1121.4, "end": 1124.4, "text": " Please don't use it.", "tokens": [2555, 500, 380, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 384, "seek": 110840, "start": 1124.4, "end": 1126.4, "text": " Please don't use it to store your files.", "tokens": [2555, 500, 380, 764, 309, 281, 3531, 428, 7098, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 385, "seek": 110840, "start": 1126.4, "end": 1127.4, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 386, "seek": 110840, "start": 1127.4, "end": 1131.4, "text": " EBPF has an ending in this, just like any ISA would have,", "tokens": [50148, 47, 37, 575, 364, 8121, 294, 341, 11, 445, 411, 604, 6205, 32, 576, 362, 11], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 387, "seek": 110840, "start": 1131.4, "end": 1133.4, "text": " and there's currently no conversions.", "tokens": [293, 456, 311, 4362, 572, 42256, 13], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 388, "seek": 110840, "start": 1133.4, "end": 1136.4, "text": " So if you happen to use something that uses different ending in this,", "tokens": [407, 498, 291, 1051, 281, 764, 746, 300, 4960, 819, 8121, 294, 341, 11], "temperature": 0.0, "avg_logprob": -0.11094468034158542, "compression_ratio": 1.620817843866171, "no_speech_prob": 3.4801232686731964e-05}, {"id": 389, "seek": 113640, "start": 1136.4, "end": 1138.4, "text": " all your data will be upside down.", "tokens": [439, 428, 1412, 486, 312, 14119, 760, 13], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 390, "seek": 113640, "start": 1138.4, "end": 1141.4, "text": " So you have to deal with that yourself for now,", "tokens": [407, 291, 362, 281, 2028, 365, 300, 1803, 337, 586, 11], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 391, "seek": 113640, "start": 1141.4, "end": 1145.4, "text": " but once again, we can make it part of the file system helpers", "tokens": [457, 1564, 797, 11, 321, 393, 652, 309, 644, 295, 264, 3991, 1185, 854, 433], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 392, "seek": 113640, "start": 1145.4, "end": 1148.4, "text": " to help with these data structure layout conversions", "tokens": [281, 854, 365, 613, 1412, 3877, 13333, 42256], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 393, "seek": 113640, "start": 1148.4, "end": 1150.4, "text": " and the engineers conversions.", "tokens": [293, 264, 11955, 42256, 13], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 394, "seek": 113640, "start": 1150.4, "end": 1152.4, "text": " As I mentioned briefly earlier,", "tokens": [1018, 286, 2835, 10515, 3071, 11], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 395, "seek": 113640, "start": 1152.4, "end": 1155.4, "text": " floating point support in EBPF is practically non-existent,", "tokens": [12607, 935, 1406, 294, 50148, 47, 37, 307, 15667, 2107, 12, 18217, 317, 11], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 396, "seek": 113640, "start": 1155.4, "end": 1159.4, "text": " but we can implement fixed point match.", "tokens": [457, 321, 393, 4445, 6806, 935, 2995, 13], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 397, "seek": 113640, "start": 1159.4, "end": 1164.4, "text": " And currently, I haven't shown any performance examples", "tokens": [400, 4362, 11, 286, 2378, 380, 4898, 604, 3389, 5110], "temperature": 0.0, "avg_logprob": -0.1067338126046317, "compression_ratio": 1.585551330798479, "no_speech_prob": 7.01926983310841e-05}, {"id": 398, "seek": 116440, "start": 1164.4, "end": 1167.4, "text": " because I don't think that they are that interesting", "tokens": [570, 286, 500, 380, 519, 300, 436, 366, 300, 1880], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 399, "seek": 116440, "start": 1167.4, "end": 1171.4, "text": " because what's currently happening when you emulate offloading", "tokens": [570, 437, 311, 4362, 2737, 562, 291, 45497, 766, 2907, 278], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 400, "seek": 116440, "start": 1171.4, "end": 1175.4, "text": " is that it just runs on the host processor as is in EBPF.", "tokens": [307, 300, 309, 445, 6676, 322, 264, 3975, 15321, 382, 307, 294, 50148, 47, 37, 13], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 401, "seek": 116440, "start": 1175.4, "end": 1178.4, "text": " So it isn't representative of the microcontrollers", "tokens": [407, 309, 1943, 380, 12424, 295, 264, 4532, 9000, 3970, 433], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 402, "seek": 116440, "start": 1178.4, "end": 1180.4, "text": " that you would find on SSDs.", "tokens": [300, 291, 576, 915, 322, 30262, 82, 13], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 403, "seek": 116440, "start": 1180.4, "end": 1183.4, "text": " So the runtime, the time that it would take to execute these kernels", "tokens": [407, 264, 34474, 11, 264, 565, 300, 309, 576, 747, 281, 14483, 613, 23434, 1625], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 404, "seek": 116440, "start": 1183.4, "end": 1185.4, "text": " would be much too fast.", "tokens": [576, 312, 709, 886, 2370, 13], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 405, "seek": 116440, "start": 1185.4, "end": 1188.4, "text": " So that's something that we need to deal on, I think,", "tokens": [407, 300, 311, 746, 300, 321, 643, 281, 2028, 322, 11, 286, 519, 11], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 406, "seek": 116440, "start": 1188.4, "end": 1191.4, "text": " because then we can more easily reason about", "tokens": [570, 550, 321, 393, 544, 3612, 1778, 466], "temperature": 0.0, "avg_logprob": -0.05766722334533179, "compression_ratio": 1.6920152091254752, "no_speech_prob": 3.5904602555092424e-05}, {"id": 407, "seek": 119140, "start": 1191.4, "end": 1194.4, "text": " what would be the actual performance if we would offload", "tokens": [437, 576, 312, 264, 3539, 3389, 498, 321, 576, 766, 2907], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 408, "seek": 119140, "start": 1194.4, "end": 1196.4, "text": " these applications to SSDs.", "tokens": [613, 5821, 281, 30262, 82, 13], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 409, "seek": 119140, "start": 1196.4, "end": 1200.4, "text": " Frankly, these SSDs do have very capable microcontrollers,", "tokens": [41344, 11, 613, 30262, 82, 360, 362, 588, 8189, 4532, 9000, 3970, 433, 11], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 410, "seek": 119140, "start": 1200.4, "end": 1202.4, "text": " typically even multi-core processors.", "tokens": [5850, 754, 4825, 12, 12352, 27751, 13], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 411, "seek": 119140, "start": 1202.4, "end": 1205.4, "text": " The reason they do that is because they need to manage", "tokens": [440, 1778, 436, 360, 300, 307, 570, 436, 643, 281, 3067], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 412, "seek": 119140, "start": 1205.4, "end": 1207.4, "text": " your flash sensations layer.", "tokens": [428, 7319, 36642, 4583, 13], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 413, "seek": 119140, "start": 1207.4, "end": 1210.4, "text": " So they are already fairly capable devices, actually.", "tokens": [407, 436, 366, 1217, 6457, 8189, 5759, 11, 767, 13], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 414, "seek": 119140, "start": 1210.4, "end": 1213.4, "text": " Only read stream kernels have been fully implemented", "tokens": [5686, 1401, 4309, 23434, 1625, 362, 668, 4498, 12270], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 415, "seek": 119140, "start": 1213.4, "end": 1215.4, "text": " for this prototype as well.", "tokens": [337, 341, 19475, 382, 731, 13], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 416, "seek": 119140, "start": 1215.4, "end": 1218.4, "text": " And that's mainly because event kernel performance", "tokens": [400, 300, 311, 8704, 570, 2280, 28256, 3389], "temperature": 0.0, "avg_logprob": -0.11255478640215112, "compression_ratio": 1.645985401459854, "no_speech_prob": 2.0461133317439817e-05}, {"id": 417, "seek": 121840, "start": 1218.4, "end": 1222.4, "text": " is problematic because the data from the event kernel,", "tokens": [307, 19011, 570, 264, 1412, 490, 264, 2280, 28256, 11], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 418, "seek": 121840, "start": 1222.4, "end": 1225.4, "text": " remember the IO request happens regularly,", "tokens": [1604, 264, 39839, 5308, 2314, 11672, 11], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 419, "seek": 121840, "start": 1225.4, "end": 1229.4, "text": " so all the data is moved back into the host processor", "tokens": [370, 439, 264, 1412, 307, 4259, 646, 666, 264, 3975, 15321], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 420, "seek": 121840, "start": 1229.4, "end": 1232.4, "text": " and only then is the event kernel started.", "tokens": [293, 787, 550, 307, 264, 2280, 28256, 1409, 13], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 421, "seek": 121840, "start": 1232.4, "end": 1235.4, "text": " But what you really need is a two-stage system", "tokens": [583, 437, 291, 534, 643, 307, 257, 732, 12, 17882, 1185], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 422, "seek": 121840, "start": 1235.4, "end": 1239.4, "text": " where you prevent the data being moved back from the host.", "tokens": [689, 291, 4871, 264, 1412, 885, 4259, 646, 490, 264, 3975, 13], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 423, "seek": 121840, "start": 1239.4, "end": 1242.4, "text": " This requires some more tinkering.", "tokens": [639, 7029, 512, 544, 256, 475, 1794, 13], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 424, "seek": 121840, "start": 1242.4, "end": 1245.4, "text": " And the final thing, we need to make this agnostic", "tokens": [400, 264, 2572, 551, 11, 321, 643, 281, 652, 341, 623, 77, 19634], "temperature": 0.0, "avg_logprob": -0.07309978176849057, "compression_ratio": 1.670995670995671, "no_speech_prob": 6.90545784891583e-05}, {"id": 425, "seek": 124540, "start": 1245.4, "end": 1249.4, "text": " to the file system. And we can very easily achieve this", "tokens": [281, 264, 3991, 1185, 13, 400, 321, 393, 588, 3612, 4584, 341], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 426, "seek": 124540, "start": 1249.4, "end": 1252.4, "text": " using this file system runtime,", "tokens": [1228, 341, 3991, 1185, 34474, 11], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 427, "seek": 124540, "start": 1252.4, "end": 1255.4, "text": " where to an ICD, an installable client driver,", "tokens": [689, 281, 364, 14360, 35, 11, 364, 3625, 712, 6423, 6787, 11], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 428, "seek": 124540, "start": 1255.4, "end": 1259.4, "text": " much the same way that Falcon and OpenCL and OpenGL are working,", "tokens": [709, 264, 912, 636, 300, 31801, 293, 7238, 22458, 293, 7238, 19440, 366, 1364, 11], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 429, "seek": 124540, "start": 1259.4, "end": 1261.4, "text": " you can dynamically load a shared library", "tokens": [291, 393, 43492, 3677, 257, 5507, 6405], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 430, "seek": 124540, "start": 1261.4, "end": 1265.4, "text": " that implements all the functions you have defined in the header.", "tokens": [300, 704, 17988, 439, 264, 6828, 291, 362, 7642, 294, 264, 23117, 13], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 431, "seek": 124540, "start": 1265.4, "end": 1268.4, "text": " And this can also dynamically compile your programs", "tokens": [400, 341, 393, 611, 43492, 31413, 428, 4268], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 432, "seek": 124540, "start": 1268.4, "end": 1272.4, "text": " and then store the cache versions of this program.", "tokens": [293, 550, 3531, 264, 19459, 9606, 295, 341, 1461, 13], "temperature": 0.0, "avg_logprob": -0.15350892284128925, "compression_ratio": 1.6666666666666667, "no_speech_prob": 8.214707486331463e-05}, {"id": 433, "seek": 127240, "start": 1272.4, "end": 1275.4, "text": " And using StataFS, we can easily identify", "tokens": [400, 1228, 745, 3274, 29318, 11, 321, 393, 3612, 5876], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 434, "seek": 127240, "start": 1275.4, "end": 1277.4, "text": " on what file system is running.", "tokens": [322, 437, 3991, 1185, 307, 2614, 13], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 435, "seek": 127240, "start": 1277.4, "end": 1280.4, "text": " And that allows users to write their programs one,", "tokens": [400, 300, 4045, 5022, 281, 2464, 641, 4268, 472, 11], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 436, "seek": 127240, "start": 1280.4, "end": 1284.4, "text": " run on any architecture and for any computational file system,", "tokens": [1190, 322, 604, 9482, 293, 337, 604, 28270, 3991, 1185, 11], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 437, "seek": 127240, "start": 1284.4, "end": 1288.4, "text": " which I think is pretty powerful and flexible.", "tokens": [597, 286, 519, 307, 1238, 4005, 293, 11358, 13], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 438, "seek": 127240, "start": 1288.4, "end": 1292.4, "text": " So that's it. I encourage you to try this.", "tokens": [407, 300, 311, 309, 13, 286, 5373, 291, 281, 853, 341, 13], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 439, "seek": 127240, "start": 1292.4, "end": 1294.4, "text": " I've also written a thesis on this", "tokens": [286, 600, 611, 3720, 257, 22288, 322, 341], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 440, "seek": 127240, "start": 1294.4, "end": 1296.4, "text": " that does have some performance metrics.", "tokens": [300, 775, 362, 512, 3389, 16367, 13], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 441, "seek": 127240, "start": 1296.4, "end": 1299.4, "text": " It also shows you some interesting data structures", "tokens": [467, 611, 3110, 291, 512, 1880, 1412, 9227], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 442, "seek": 127240, "start": 1299.4, "end": 1301.4, "text": " that we had to design for the file system", "tokens": [300, 321, 632, 281, 1715, 337, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.08315376686838875, "compression_ratio": 1.6704119850187267, "no_speech_prob": 4.19412535848096e-05}, {"id": 443, "seek": 130140, "start": 1301.4, "end": 1304.4, "text": " to be able to support these in-memory snapshots.", "tokens": [281, 312, 1075, 281, 1406, 613, 294, 12, 17886, 827, 19206, 27495, 13], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 444, "seek": 130140, "start": 1304.4, "end": 1307.4, "text": " There's a previous work called ZCSD", "tokens": [821, 311, 257, 3894, 589, 1219, 1176, 34, 23969], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 445, "seek": 130140, "start": 1307.4, "end": 1311.4, "text": " that also has some early performance information.", "tokens": [300, 611, 575, 512, 2440, 3389, 1589, 13], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 446, "seek": 130140, "start": 1311.4, "end": 1314.4, "text": " And I've written quite an extensive survey", "tokens": [400, 286, 600, 3720, 1596, 364, 13246, 8984], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 447, "seek": 130140, "start": 1314.4, "end": 1317.4, "text": " on the last decade's history or so", "tokens": [322, 264, 1036, 10378, 311, 2503, 420, 370], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 448, "seek": 130140, "start": 1317.4, "end": 1319.4, "text": " of computational flash storage devices,", "tokens": [295, 28270, 7319, 6725, 5759, 11], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 449, "seek": 130140, "start": 1319.4, "end": 1321.4, "text": " which also quite interesting.", "tokens": [597, 611, 1596, 1880, 13], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 450, "seek": 130140, "start": 1321.4, "end": 1323.4, "text": " So thank you.", "tokens": [407, 1309, 291, 13], "temperature": 0.0, "avg_logprob": -0.0989247635950016, "compression_ratio": 1.4368932038834952, "no_speech_prob": 4.327996794017963e-05}, {"id": 451, "seek": 132340, "start": 1323.4, "end": 1332.4, "text": " APPLAUSE", "tokens": [35298], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 452, "seek": 132340, "start": 1332.4, "end": 1334.4, "text": " Seven minutes for questions.", "tokens": [14868, 2077, 337, 1651, 13], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 453, "seek": 132340, "start": 1334.4, "end": 1336.4, "text": " Oh, that's quite good.", "tokens": [876, 11, 300, 311, 1596, 665, 13], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 454, "seek": 132340, "start": 1339.4, "end": 1341.4, "text": " I imagine this is quite difficult, right?", "tokens": [286, 3811, 341, 307, 1596, 2252, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 455, "seek": 132340, "start": 1341.4, "end": 1343.4, "text": " Computational storage, what the fuck's that?", "tokens": [37804, 1478, 6725, 11, 437, 264, 3275, 311, 300, 30], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 456, "seek": 132340, "start": 1343.4, "end": 1347.4, "text": " So please don't hesitate to ask questions", "tokens": [407, 1767, 500, 380, 20842, 281, 1029, 1651], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 457, "seek": 132340, "start": 1347.4, "end": 1349.4, "text": " if anything is unclear.", "tokens": [498, 1340, 307, 25636, 13], "temperature": 0.0, "avg_logprob": -0.18668232589471537, "compression_ratio": 1.3229813664596273, "no_speech_prob": 0.00023645824694540352}, {"id": 458, "seek": 134940, "start": 1349.4, "end": 1354.4, "text": " What's the availability of hardware that can do this?", "tokens": [708, 311, 264, 17945, 295, 8837, 300, 393, 360, 341, 30], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 459, "seek": 134940, "start": 1354.4, "end": 1356.4, "text": " The computational storage?", "tokens": [440, 28270, 6725, 30], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 460, "seek": 134940, "start": 1356.4, "end": 1358.4, "text": " Yes, the computational storage.", "tokens": [1079, 11, 264, 28270, 6725, 13], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 461, "seek": 134940, "start": 1358.4, "end": 1363.4, "text": " There is one vendor that is selling a computational storage device", "tokens": [821, 307, 472, 24321, 300, 307, 6511, 257, 28270, 6725, 4302], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 462, "seek": 134940, "start": 1363.4, "end": 1366.4, "text": " that's not based on zoned namespaces storage.", "tokens": [300, 311, 406, 2361, 322, 710, 19009, 5288, 79, 2116, 6725, 13], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 463, "seek": 134940, "start": 1366.4, "end": 1369.4, "text": " So it's using conventional SSDs", "tokens": [407, 309, 311, 1228, 16011, 30262, 82], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 464, "seek": 134940, "start": 1369.4, "end": 1373.4, "text": " and it supports computational storage to a network interface.", "tokens": [293, 309, 9346, 28270, 6725, 281, 257, 3209, 9226, 13], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 465, "seek": 134940, "start": 1373.4, "end": 1375.4, "text": " So you have the normal PCIe interface", "tokens": [407, 291, 362, 264, 2710, 6465, 40, 68, 9226], "temperature": 0.0, "avg_logprob": -0.1663838191465898, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.00013122968084644526}, {"id": 466, "seek": 137540, "start": 1375.4, "end": 1380.4, "text": " and then there's this transport over need to do TCPIP", "tokens": [293, 550, 456, 311, 341, 5495, 670, 643, 281, 360, 48965, 9139], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 467, "seek": 137540, "start": 1380.4, "end": 1383.4, "text": " and then you basically just connect over it to SSH", "tokens": [293, 550, 291, 1936, 445, 1745, 670, 309, 281, 12238, 39], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 468, "seek": 137540, "start": 1383.4, "end": 1385.4, "text": " and then you can do things on the SSD.", "tokens": [293, 550, 291, 393, 360, 721, 322, 264, 30262, 13], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 469, "seek": 137540, "start": 1385.4, "end": 1387.4, "text": " That one's commercially available.", "tokens": [663, 472, 311, 41751, 2435, 13], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 470, "seek": 137540, "start": 1387.4, "end": 1392.4, "text": " I don't know what they would ask for that product.", "tokens": [286, 500, 380, 458, 437, 436, 576, 1029, 337, 300, 1674, 13], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 471, "seek": 137540, "start": 1392.4, "end": 1396.4, "text": " What does ZCSD have to do with zoned namespaces?", "tokens": [708, 775, 1176, 34, 23969, 362, 281, 360, 365, 710, 19009, 5288, 79, 2116, 30], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 472, "seek": 137540, "start": 1396.4, "end": 1398.4, "text": " Nothing in principle,", "tokens": [6693, 294, 8665, 11], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 473, "seek": 137540, "start": 1398.4, "end": 1400.4, "text": " but you need a way to synchronize the file system", "tokens": [457, 291, 643, 257, 636, 281, 19331, 1125, 264, 3991, 1185], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 474, "seek": 137540, "start": 1400.4, "end": 1402.4, "text": " between the host and device", "tokens": [1296, 264, 3975, 293, 4302], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 475, "seek": 137540, "start": 1402.4, "end": 1404.4, "text": " and zoned namespaces make that trivial,", "tokens": [293, 710, 19009, 5288, 79, 2116, 652, 300, 26703, 11], "temperature": 0.0, "avg_logprob": -0.10891751919762563, "compression_ratio": 1.5954198473282444, "no_speech_prob": 0.00011728632671292871}, {"id": 476, "seek": 140440, "start": 1404.4, "end": 1406.4, "text": " whereas conventional SSDs,", "tokens": [9735, 16011, 30262, 82, 11], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 477, "seek": 140440, "start": 1406.4, "end": 1409.4, "text": " the logical and physical block translation,", "tokens": [264, 14978, 293, 4001, 3461, 12853, 11], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 478, "seek": 140440, "start": 1409.4, "end": 1411.4, "text": " severely hinders this,", "tokens": [26271, 20138, 433, 341, 11], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 479, "seek": 140440, "start": 1411.4, "end": 1414.4, "text": " makes it extremely difficult to perform.", "tokens": [1669, 309, 4664, 2252, 281, 2042, 13], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 480, "seek": 140440, "start": 1417.4, "end": 1420.4, "text": " So why didn't you include the performance projects", "tokens": [407, 983, 994, 380, 291, 4090, 264, 3389, 4455], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 481, "seek": 140440, "start": 1420.4, "end": 1423.4, "text": " from your pieces or better ones?", "tokens": [490, 428, 3755, 420, 1101, 2306, 30], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 482, "seek": 140440, "start": 1423.4, "end": 1425.4, "text": " Because the performance...", "tokens": [1436, 264, 3389, 485], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 483, "seek": 140440, "start": 1425.4, "end": 1426.4, "text": " Oh, sorry.", "tokens": [876, 11, 2597, 13], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 484, "seek": 140440, "start": 1426.4, "end": 1427.4, "text": " Oh, yeah.", "tokens": [876, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 485, "seek": 140440, "start": 1427.4, "end": 1428.4, "text": " Why don't I...", "tokens": [1545, 500, 380, 286, 485], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 486, "seek": 140440, "start": 1428.4, "end": 1429.4, "text": " Very good.", "tokens": [4372, 665, 13], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 487, "seek": 140440, "start": 1429.4, "end": 1431.4, "text": " I forgot that actually all the time.", "tokens": [286, 5298, 300, 767, 439, 264, 565, 13], "temperature": 0.0, "avg_logprob": -0.17261399614050033, "compression_ratio": 1.5022831050228311, "no_speech_prob": 8.987177716335282e-05}, {"id": 488, "seek": 143140, "start": 1431.4, "end": 1435.4, "text": " Yeah, so why didn't I include any performance metrics", "tokens": [865, 11, 370, 983, 994, 380, 286, 4090, 604, 3389, 16367], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 489, "seek": 143140, "start": 1435.4, "end": 1437.4, "text": " if I have them?", "tokens": [498, 286, 362, 552, 30], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 490, "seek": 143140, "start": 1437.4, "end": 1440.4, "text": " And the answer is because I don't think I would have time", "tokens": [400, 264, 1867, 307, 570, 286, 500, 380, 519, 286, 576, 362, 565], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 491, "seek": 143140, "start": 1440.4, "end": 1443.4, "text": " and I don't think they're interesting enough to include.", "tokens": [293, 286, 500, 380, 519, 436, 434, 1880, 1547, 281, 4090, 13], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 492, "seek": 143140, "start": 1443.4, "end": 1445.4, "text": " This is a very complicated subject.", "tokens": [639, 307, 257, 588, 6179, 3983, 13], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 493, "seek": 143140, "start": 1445.4, "end": 1447.4, "text": " It's very new for most people, computational search.", "tokens": [467, 311, 588, 777, 337, 881, 561, 11, 28270, 3164, 13], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 494, "seek": 143140, "start": 1447.4, "end": 1449.4, "text": " Most people have never heard of it.", "tokens": [4534, 561, 362, 1128, 2198, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 495, "seek": 143140, "start": 1449.4, "end": 1452.4, "text": " So I much rather spend the time to explain this properly", "tokens": [407, 286, 709, 2831, 3496, 264, 565, 281, 2903, 341, 6108], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 496, "seek": 143140, "start": 1452.4, "end": 1455.4, "text": " and try to show you that this is a very interesting concept", "tokens": [293, 853, 281, 855, 291, 300, 341, 307, 257, 588, 1880, 3410], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 497, "seek": 143140, "start": 1455.4, "end": 1457.4, "text": " to solve this bandwidth gap", "tokens": [281, 5039, 341, 23647, 7417], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 498, "seek": 143140, "start": 1457.4, "end": 1458.4, "text": " rather than show you some metrics", "tokens": [2831, 813, 855, 291, 512, 16367], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 499, "seek": 143140, "start": 1458.4, "end": 1460.4, "text": " that are not representative anyway", "tokens": [300, 366, 406, 12424, 4033], "temperature": 0.0, "avg_logprob": -0.05550500118371212, "compression_ratio": 1.7433333333333334, "no_speech_prob": 5.0621700211195275e-05}, {"id": 500, "seek": 146040, "start": 1460.4, "end": 1462.4, "text": " because the kernel is running on the host CPU", "tokens": [570, 264, 28256, 307, 2614, 322, 264, 3975, 13199], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 501, "seek": 146040, "start": 1462.4, "end": 1464.4, "text": " and you're not going to have an additional host CPU", "tokens": [293, 291, 434, 406, 516, 281, 362, 364, 4497, 3975, 13199], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 502, "seek": 146040, "start": 1464.4, "end": 1466.4, "text": " on the Flash SSD.", "tokens": [322, 264, 20232, 30262, 13], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 503, "seek": 146040, "start": 1468.4, "end": 1471.4, "text": " Can you talk about what kind of test setup", "tokens": [1664, 291, 751, 466, 437, 733, 295, 1500, 8657], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 504, "seek": 146040, "start": 1471.4, "end": 1473.4, "text": " you have for your metric?", "tokens": [291, 362, 337, 428, 20678, 30], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 505, "seek": 146040, "start": 1473.4, "end": 1474.4, "text": " So I don't...", "tokens": [407, 286, 500, 380, 485], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 506, "seek": 146040, "start": 1474.4, "end": 1476.4, "text": " Yeah, of the metrics themselves.", "tokens": [865, 11, 295, 264, 16367, 2969, 13], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 507, "seek": 146040, "start": 1476.4, "end": 1477.4, "text": " Yeah, so the framework...", "tokens": [865, 11, 370, 264, 8388, 485], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 508, "seek": 146040, "start": 1477.4, "end": 1479.4, "text": " Okay, yeah, yeah, very good.", "tokens": [1033, 11, 1338, 11, 1338, 11, 588, 665, 13], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 509, "seek": 146040, "start": 1479.4, "end": 1481.4, "text": " What kind of test setup I had", "tokens": [708, 733, 295, 1500, 8657, 286, 632], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 510, "seek": 146040, "start": 1481.4, "end": 1483.4, "text": " to do all these analyses", "tokens": [281, 360, 439, 613, 37560], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 511, "seek": 146040, "start": 1483.4, "end": 1485.4, "text": " and to try these things out.", "tokens": [293, 281, 853, 613, 721, 484, 13], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 512, "seek": 146040, "start": 1485.4, "end": 1487.4, "text": " So I run Camu on my own host machine,", "tokens": [407, 286, 1190, 6886, 84, 322, 452, 1065, 3975, 3479, 11], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 513, "seek": 146040, "start": 1487.4, "end": 1489.4, "text": " just a normal laptop, basically this one.", "tokens": [445, 257, 2710, 10732, 11, 1936, 341, 472, 13], "temperature": 0.0, "avg_logprob": -0.13296113294713638, "compression_ratio": 1.6363636363636365, "no_speech_prob": 8.873623301042244e-05}, {"id": 514, "seek": 148940, "start": 1489.4, "end": 1492.4, "text": " And Camu then creates a virtual", "tokens": [400, 6886, 84, 550, 7829, 257, 6374], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 515, "seek": 148940, "start": 1492.4, "end": 1494.4, "text": " sound namespaces device", "tokens": [1626, 5288, 79, 2116, 4302], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 516, "seek": 148940, "start": 1494.4, "end": 1496.4, "text": " that's actually quite recently introduced to Camu.", "tokens": [300, 311, 767, 1596, 3938, 7268, 281, 6886, 84, 13], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 517, "seek": 148940, "start": 1496.4, "end": 1498.4, "text": " So you can now try sound namespaces", "tokens": [407, 291, 393, 586, 853, 1626, 5288, 79, 2116], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 518, "seek": 148940, "start": 1498.4, "end": 1500.4, "text": " without owning sound namespaces.", "tokens": [1553, 29820, 1626, 5288, 79, 2116, 13], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 519, "seek": 148940, "start": 1500.4, "end": 1502.4, "text": " That's the whole reason Camu comes into play", "tokens": [663, 311, 264, 1379, 1778, 6886, 84, 1487, 666, 862], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 520, "seek": 148940, "start": 1502.4, "end": 1505.4, "text": " because otherwise people wouldn't need", "tokens": [570, 5911, 561, 2759, 380, 643], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 521, "seek": 148940, "start": 1505.4, "end": 1507.4, "text": " to buy a sound namespaces SSD", "tokens": [281, 2256, 257, 1626, 5288, 79, 2116, 30262], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 522, "seek": 148940, "start": 1507.4, "end": 1509.4, "text": " which is quite badly available.", "tokens": [597, 307, 1596, 13425, 2435, 13], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 523, "seek": 148940, "start": 1509.4, "end": 1512.4, "text": " And then you just run the prototype as is.", "tokens": [400, 550, 291, 445, 1190, 264, 19475, 382, 307, 13], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 524, "seek": 148940, "start": 1512.4, "end": 1514.4, "text": " So that's all you need.", "tokens": [407, 300, 311, 439, 291, 643, 13], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 525, "seek": 148940, "start": 1514.4, "end": 1517.4, "text": " And you really don't need any special hardware.", "tokens": [400, 291, 534, 500, 380, 643, 604, 2121, 8837, 13], "temperature": 0.0, "avg_logprob": -0.09110688769127712, "compression_ratio": 1.7651821862348178, "no_speech_prob": 0.00010546291741775349}, {"id": 526, "seek": 151740, "start": 1517.4, "end": 1520.4, "text": " Yeah, it could be even on an ARM laptop.", "tokens": [865, 11, 309, 727, 312, 754, 322, 364, 45209, 10732, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 527, "seek": 151740, "start": 1520.4, "end": 1522.4, "text": " It doesn't matter.", "tokens": [467, 1177, 380, 1871, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 528, "seek": 151740, "start": 1522.4, "end": 1523.4, "text": " Did you test it?", "tokens": [2589, 291, 1500, 309, 30], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 529, "seek": 151740, "start": 1523.4, "end": 1525.4, "text": " No, I did not test it.", "tokens": [883, 11, 286, 630, 406, 1500, 309, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 530, "seek": 151740, "start": 1525.4, "end": 1528.4, "text": " But whether or not I tested if it works on ARM.", "tokens": [583, 1968, 420, 406, 286, 8246, 498, 309, 1985, 322, 45209, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 531, "seek": 151740, "start": 1528.4, "end": 1530.4, "text": " The answer is no, I did not test it.", "tokens": [440, 1867, 307, 572, 11, 286, 630, 406, 1500, 309, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 532, "seek": 151740, "start": 1530.4, "end": 1532.4, "text": " But I'm pretty sure Camu compiles some ARM.", "tokens": [583, 286, 478, 1238, 988, 6886, 84, 715, 4680, 512, 45209, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 533, "seek": 151740, "start": 1532.4, "end": 1534.4, "text": " So I'm pretty sure we're good there.", "tokens": [407, 286, 478, 1238, 988, 321, 434, 665, 456, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 534, "seek": 151740, "start": 1534.4, "end": 1536.4, "text": " Because you have to remember", "tokens": [1436, 291, 362, 281, 1604], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 535, "seek": 151740, "start": 1536.4, "end": 1539.4, "text": " that that's maybe not intrinsically clear", "tokens": [300, 300, 311, 1310, 406, 28621, 984, 1850], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 536, "seek": 151740, "start": 1539.4, "end": 1540.4, "text": " from this presentation.", "tokens": [490, 341, 5860, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 537, "seek": 151740, "start": 1540.4, "end": 1542.4, "text": " But we didn't extend Camu in any way.", "tokens": [583, 321, 994, 380, 10101, 6886, 84, 294, 604, 636, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 538, "seek": 151740, "start": 1542.4, "end": 1544.4, "text": " It's just a normal Camu cumulation.", "tokens": [467, 311, 445, 257, 2710, 6886, 84, 12713, 2776, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 539, "seek": 151740, "start": 1544.4, "end": 1546.4, "text": " You don't even need to custom install it.", "tokens": [509, 500, 380, 754, 643, 281, 2375, 3625, 309, 13], "temperature": 0.0, "avg_logprob": -0.12145922058507015, "compression_ratio": 1.676056338028169, "no_speech_prob": 0.0003143599024042487}, {"id": 540, "seek": 154640, "start": 1546.4, "end": 1548.4, "text": " You can just get it from the package manager", "tokens": [509, 393, 445, 483, 309, 490, 264, 7372, 6598], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 541, "seek": 154640, "start": 1548.4, "end": 1550.4, "text": " and use this.", "tokens": [293, 764, 341, 13], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 542, "seek": 154640, "start": 1550.4, "end": 1552.4, "text": " I have a lot of questions about that.", "tokens": [286, 362, 257, 688, 295, 1651, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 543, "seek": 154640, "start": 1552.4, "end": 1555.4, "text": " Regarding the computational part,", "tokens": [35523, 264, 28270, 644, 11], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 544, "seek": 154640, "start": 1555.4, "end": 1559.4, "text": " what are the limitations of what kind of CPU or kernel", "tokens": [437, 366, 264, 15705, 295, 437, 733, 295, 13199, 420, 28256], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 545, "seek": 154640, "start": 1559.4, "end": 1562.4, "text": " that it may run on these devices?", "tokens": [300, 309, 815, 1190, 322, 613, 5759, 30], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 546, "seek": 154640, "start": 1562.4, "end": 1564.4, "text": " I think the main limitations,", "tokens": [286, 519, 264, 2135, 15705, 11], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 547, "seek": 154640, "start": 1564.4, "end": 1566.4, "text": " what are the limitations as the kernels", "tokens": [437, 366, 264, 15705, 382, 264, 23434, 1625], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 548, "seek": 154640, "start": 1566.4, "end": 1568.4, "text": " that you run on these devices?", "tokens": [300, 291, 1190, 322, 613, 5759, 30], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 549, "seek": 154640, "start": 1568.4, "end": 1572.4, "text": " Well, first of all, you need to have data reduction, right?", "tokens": [1042, 11, 700, 295, 439, 11, 291, 643, 281, 362, 1412, 11004, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 550, "seek": 154640, "start": 1572.4, "end": 1575.4, "text": " If you're going to read one gigabyte from the flash storage", "tokens": [759, 291, 434, 516, 281, 1401, 472, 8741, 34529, 490, 264, 7319, 6725], "temperature": 0.0, "avg_logprob": -0.15438115095891872, "compression_ratio": 1.76, "no_speech_prob": 0.0001461474021198228}, {"id": 551, "seek": 157540, "start": 1575.4, "end": 1578.4, "text": " and you're going to return one gigabyte of data to the host,", "tokens": [293, 291, 434, 516, 281, 2736, 472, 8741, 34529, 295, 1412, 281, 264, 3975, 11], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 552, "seek": 157540, "start": 1578.4, "end": 1580.4, "text": " then there's no real point in offloading this", "tokens": [550, 456, 311, 572, 957, 935, 294, 766, 2907, 278, 341], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 553, "seek": 157540, "start": 1580.4, "end": 1583.4, "text": " because the data is going to be moved anyway.", "tokens": [570, 264, 1412, 307, 516, 281, 312, 4259, 4033, 13], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 554, "seek": 157540, "start": 1583.4, "end": 1586.4, "text": " So the first thing that the limitation is", "tokens": [407, 264, 700, 551, 300, 264, 27432, 307], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 555, "seek": 157540, "start": 1586.4, "end": 1588.4, "text": " that you have to find an application", "tokens": [300, 291, 362, 281, 915, 364, 3861], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 556, "seek": 157540, "start": 1588.4, "end": 1590.4, "text": " that is reductive in nature.", "tokens": [300, 307, 2783, 20221, 294, 3687, 13], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 557, "seek": 157540, "start": 1590.4, "end": 1593.4, "text": " Once you do the computation, you return less data.", "tokens": [3443, 291, 360, 264, 24903, 11, 291, 2736, 1570, 1412, 13], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 558, "seek": 157540, "start": 1593.4, "end": 1598.4, "text": " The nice thing is that's 99% of all workloads, right?", "tokens": [440, 1481, 551, 307, 300, 311, 11803, 4, 295, 439, 32452, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 559, "seek": 157540, "start": 1598.4, "end": 1600.4, "text": " So that's pretty good.", "tokens": [407, 300, 311, 1238, 665, 13], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 560, "seek": 157540, "start": 1600.4, "end": 1604.4, "text": " And the second thing is that if it's timing critical", "tokens": [400, 264, 1150, 551, 307, 300, 498, 309, 311, 10822, 4924], "temperature": 0.0, "avg_logprob": -0.07103785530465548, "compression_ratio": 1.72265625, "no_speech_prob": 1.8917246052296832e-05}, {"id": 561, "seek": 160440, "start": 1604.4, "end": 1606.4, "text": " and the computation takes a long time,", "tokens": [293, 264, 24903, 2516, 257, 938, 565, 11], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 562, "seek": 160440, "start": 1606.4, "end": 1608.4, "text": " then it's probably not that interesting", "tokens": [550, 309, 311, 1391, 406, 300, 1880], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 563, "seek": 160440, "start": 1608.4, "end": 1611.4, "text": " because the latency will then be too bad", "tokens": [570, 264, 27043, 486, 550, 312, 886, 1578], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 564, "seek": 160440, "start": 1611.4, "end": 1613.4, "text": " because the performance of these cores", "tokens": [570, 264, 3389, 295, 613, 24826], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 565, "seek": 160440, "start": 1613.4, "end": 1615.4, "text": " is much less than your host processor.", "tokens": [307, 709, 1570, 813, 428, 3975, 15321, 13], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 566, "seek": 160440, "start": 1615.4, "end": 1619.4, "text": " But you can implement specialized instructions", "tokens": [583, 291, 393, 4445, 19813, 9415], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 567, "seek": 160440, "start": 1619.4, "end": 1621.4, "text": " that could be very efficient", "tokens": [300, 727, 312, 588, 7148], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 568, "seek": 160440, "start": 1621.4, "end": 1623.4, "text": " in doing database filtering or things like this.", "tokens": [294, 884, 8149, 30822, 420, 721, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 569, "seek": 160440, "start": 1623.4, "end": 1626.4, "text": " And that is where the whole ASIC and FPGA part", "tokens": [400, 300, 307, 689, 264, 1379, 7469, 2532, 293, 36655, 12570, 644], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 570, "seek": 160440, "start": 1626.4, "end": 1628.4, "text": " would come into play.", "tokens": [576, 808, 666, 862, 13], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 571, "seek": 160440, "start": 1628.4, "end": 1632.4, "text": " But if it's not timing critical and it's in the background,", "tokens": [583, 498, 309, 311, 406, 10822, 4924, 293, 309, 311, 294, 264, 3678, 11], "temperature": 0.0, "avg_logprob": -0.04727467043059213, "compression_ratio": 1.6164874551971327, "no_speech_prob": 9.367826351081021e-06}, {"id": 572, "seek": 163240, "start": 1632.4, "end": 1634.4, "text": " like the Shandom entropy compression,", "tokens": [411, 264, 1160, 474, 298, 30867, 19355, 11], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 573, "seek": 163240, "start": 1634.4, "end": 1636.4, "text": " those are ideal cases.", "tokens": [729, 366, 7157, 3331, 13], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 574, "seek": 163240, "start": 1636.4, "end": 1640.4, "text": " Reduction in data and not timing critical.", "tokens": [4477, 27549, 294, 1412, 293, 406, 10822, 4924, 13], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 575, "seek": 163240, "start": 1640.4, "end": 1643.4, "text": " So what you mean is we can have software kernels", "tokens": [407, 437, 291, 914, 307, 321, 393, 362, 4722, 23434, 1625], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 576, "seek": 163240, "start": 1643.4, "end": 1646.4, "text": " with the back end in hardware", "tokens": [365, 264, 646, 917, 294, 8837], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 577, "seek": 163240, "start": 1646.4, "end": 1649.4, "text": " so we can also program the thermo.", "tokens": [370, 321, 393, 611, 1461, 264, 8810, 78, 13], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 578, "seek": 163240, "start": 1649.4, "end": 1654.4, "text": " So like maybe a core like CPU board or GPU board.", "tokens": [407, 411, 1310, 257, 4965, 411, 13199, 3150, 420, 18407, 3150, 13], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 579, "seek": 163240, "start": 1654.4, "end": 1656.4, "text": " To repeat the question,", "tokens": [1407, 7149, 264, 1168, 11], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 580, "seek": 163240, "start": 1656.4, "end": 1658.4, "text": " whether or not it's just software", "tokens": [1968, 420, 406, 309, 311, 445, 4722], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 581, "seek": 163240, "start": 1658.4, "end": 1661.4, "text": " or whether we also program the hardware.", "tokens": [420, 1968, 321, 611, 1461, 264, 8837, 13], "temperature": 0.0, "avg_logprob": -0.23956425984700522, "compression_ratio": 1.641255605381166, "no_speech_prob": 5.4738102335250005e-05}, {"id": 582, "seek": 166140, "start": 1661.4, "end": 1664.4, "text": " Of course, FPGAs can be reprogrammed on the fly", "tokens": [2720, 1164, 11, 36655, 38, 10884, 393, 312, 35257, 1342, 1912, 322, 264, 3603], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 583, "seek": 166140, "start": 1664.4, "end": 1666.4, "text": " and we have seen prototypes in the past", "tokens": [293, 321, 362, 1612, 42197, 294, 264, 1791], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 584, "seek": 166140, "start": 1666.4, "end": 1669.4, "text": " for computational storage devices where they do just that.", "tokens": [337, 28270, 6725, 5759, 689, 436, 360, 445, 300, 13], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 585, "seek": 166140, "start": 1669.4, "end": 1672.4, "text": " From the host device, the user sends a bit stream", "tokens": [3358, 264, 3975, 4302, 11, 264, 4195, 14790, 257, 857, 4309], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 586, "seek": 166140, "start": 1672.4, "end": 1674.4, "text": " that dynamically reprograms the FPGA", "tokens": [300, 43492, 35257, 1342, 82, 264, 36655, 12570], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 587, "seek": 166140, "start": 1674.4, "end": 1676.4, "text": " and then the kernel starts running.", "tokens": [293, 550, 264, 28256, 3719, 2614, 13], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 588, "seek": 166140, "start": 1676.4, "end": 1678.4, "text": " That's not what we're trying to achieve here.", "tokens": [663, 311, 406, 437, 321, 434, 1382, 281, 4584, 510, 13], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 589, "seek": 166140, "start": 1678.4, "end": 1681.4, "text": " What I envision in this is that the FPGA", "tokens": [708, 286, 24739, 294, 341, 307, 300, 264, 36655, 12570], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 590, "seek": 166140, "start": 1681.4, "end": 1686.4, "text": " has specialized logic to do certain computations", "tokens": [575, 19813, 9952, 281, 360, 1629, 2807, 763], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 591, "seek": 166140, "start": 1686.4, "end": 1690.4, "text": " and then from the ABI, from the EBPF ABI,", "tokens": [293, 550, 490, 264, 316, 11291, 11, 490, 264, 50148, 47, 37, 316, 11291, 11], "temperature": 0.0, "avg_logprob": -0.08276507162278698, "compression_ratio": 1.6555555555555554, "no_speech_prob": 6.0108770412625745e-05}, {"id": 592, "seek": 169040, "start": 1690.4, "end": 1692.4, "text": " whether code triggers those instructions", "tokens": [1968, 3089, 22827, 729, 9415], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 593, "seek": 169040, "start": 1692.4, "end": 1695.4, "text": " will utilize the FPGA to do those computations", "tokens": [486, 16117, 264, 36655, 12570, 281, 360, 729, 2807, 763], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 594, "seek": 169040, "start": 1695.4, "end": 1699.4, "text": " but they would be defined in the specification beforehand.", "tokens": [457, 436, 576, 312, 7642, 294, 264, 31256, 22893, 13], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 595, "seek": 169040, "start": 1699.4, "end": 1702.4, "text": " Because typically in reflashing a FPGA", "tokens": [1436, 5850, 294, 1895, 7743, 571, 257, 36655, 12570], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 596, "seek": 169040, "start": 1702.4, "end": 1704.4, "text": " with a new bit stream takes quite some time", "tokens": [365, 257, 777, 857, 4309, 2516, 1596, 512, 565], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 597, "seek": 169040, "start": 1704.4, "end": 1706.4, "text": " so in the interest of performance", "tokens": [370, 294, 264, 1179, 295, 3389], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 598, "seek": 169040, "start": 1706.4, "end": 1709.4, "text": " it might not be that interesting.", "tokens": [309, 1062, 406, 312, 300, 1880, 13], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 599, "seek": 169040, "start": 1714.4, "end": 1716.4, "text": " So I'm going to ask a question.", "tokens": [407, 286, 478, 516, 281, 1029, 257, 1168, 13], "temperature": 0.0, "avg_logprob": -0.19985392007483058, "compression_ratio": 1.5231481481481481, "no_speech_prob": 9.447074990021065e-05}, {"id": 600, "seek": 171640, "start": 1716.4, "end": 1723.4, "text": " You might have mentioned it but are there close source competitors?", "tokens": [509, 1062, 362, 2835, 309, 457, 366, 456, 1998, 4009, 18333, 30], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 601, "seek": 171640, "start": 1723.4, "end": 1725.4, "text": " If there are close source competitors", "tokens": [759, 456, 366, 1998, 4009, 18333], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 602, "seek": 171640, "start": 1725.4, "end": 1727.4, "text": " in the space of computational storage.", "tokens": [294, 264, 1901, 295, 28270, 6725, 13], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 603, "seek": 171640, "start": 1727.4, "end": 1729.4, "text": " Well, actually that's one of the things", "tokens": [1042, 11, 767, 300, 311, 472, 295, 264, 721], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 604, "seek": 171640, "start": 1729.4, "end": 1731.4, "text": " that's been growing really well in this scene.", "tokens": [300, 311, 668, 4194, 534, 731, 294, 341, 4145, 13], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 605, "seek": 171640, "start": 1731.4, "end": 1735.4, "text": " I'd say the vast majority of everything is open source.", "tokens": [286, 1116, 584, 264, 8369, 6286, 295, 1203, 307, 1269, 4009, 13], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 606, "seek": 171640, "start": 1735.4, "end": 1740.4, "text": " At least if you look at the recent things,", "tokens": [1711, 1935, 498, 291, 574, 412, 264, 5162, 721, 11], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 607, "seek": 171640, "start": 1740.4, "end": 1743.4, "text": " if you look at the past decade then it's a bit worse", "tokens": [498, 291, 574, 412, 264, 1791, 10378, 550, 309, 311, 257, 857, 5324], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 608, "seek": 171640, "start": 1743.4, "end": 1745.4, "text": " because there is a lot of research published", "tokens": [570, 456, 307, 257, 688, 295, 2132, 6572], "temperature": 0.0, "avg_logprob": -0.1373371320350148, "compression_ratio": 1.7469387755102042, "no_speech_prob": 0.00011939596879528835}, {"id": 609, "seek": 174540, "start": 1745.4, "end": 1747.4, "text": " that doesn't actually publish the source code", "tokens": [300, 1177, 380, 767, 11374, 264, 4009, 3089], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 610, "seek": 174540, "start": 1747.4, "end": 1749.4, "text": " or rather the source code is published", "tokens": [420, 2831, 264, 4009, 3089, 307, 6572], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 611, "seek": 174540, "start": 1749.4, "end": 1751.4, "text": " but everything is a hardware prototype", "tokens": [457, 1203, 307, 257, 8837, 19475], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 612, "seek": 174540, "start": 1751.4, "end": 1753.4, "text": " and they didn't publish the bit streams", "tokens": [293, 436, 994, 380, 11374, 264, 857, 15842], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 613, "seek": 174540, "start": 1753.4, "end": 1755.4, "text": " or the FHDL or the Farrellock", "tokens": [420, 264, 479, 22859, 43, 420, 264, 9067, 19771, 1560], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 614, "seek": 174540, "start": 1755.4, "end": 1757.4, "text": " so you're then stuck as well", "tokens": [370, 291, 434, 550, 5541, 382, 731], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 615, "seek": 174540, "start": 1757.4, "end": 1759.4, "text": " or they didn't have any PCB designs", "tokens": [420, 436, 994, 380, 362, 604, 42065, 11347], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 616, "seek": 174540, "start": 1759.4, "end": 1762.4, "text": " so you can't reproduce the work if you will.", "tokens": [370, 291, 393, 380, 29501, 264, 589, 498, 291, 486, 13], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 617, "seek": 174540, "start": 1762.4, "end": 1765.4, "text": " I say this is a much bigger problem", "tokens": [286, 584, 341, 307, 257, 709, 3801, 1154], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 618, "seek": 174540, "start": 1765.4, "end": 1768.4, "text": " than just computational storage in the field of academia", "tokens": [813, 445, 28270, 6725, 294, 264, 2519, 295, 28937], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 619, "seek": 174540, "start": 1768.4, "end": 1771.4, "text": " but it's also present here.", "tokens": [457, 309, 311, 611, 1974, 510, 13], "temperature": 0.0, "avg_logprob": -0.12084552461067133, "compression_ratio": 1.65625, "no_speech_prob": 0.00010874143481487408}, {"id": 620, "seek": 177140, "start": 1771.4, "end": 1776.4, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.4009759521484375, "compression_ratio": 0.875, "no_speech_prob": 0.00019954057643190026}, {"id": 621, "seek": 177140, "start": 1776.4, "end": 1779.4, "text": " Which one?", "tokens": [3013, 472, 30], "temperature": 0.0, "avg_logprob": -0.4009759521484375, "compression_ratio": 0.875, "no_speech_prob": 0.00019954057643190026}, {"id": 622, "seek": 177140, "start": 1779.4, "end": 1781.4, "text": " The Python code.", "tokens": [440, 15329, 3089, 13], "temperature": 0.0, "avg_logprob": -0.4009759521484375, "compression_ratio": 0.875, "no_speech_prob": 0.00019954057643190026}, {"id": 623, "seek": 177140, "start": 1789.4, "end": 1791.4, "text": " Complexity in terms of?", "tokens": [41184, 507, 294, 2115, 295, 30], "temperature": 0.0, "avg_logprob": -0.4009759521484375, "compression_ratio": 0.875, "no_speech_prob": 0.00019954057643190026}, {"id": 624, "seek": 179140, "start": 1791.4, "end": 1801.4, "text": " The reason this is a nested loop,", "tokens": [440, 1778, 341, 307, 257, 15646, 292, 6367, 11], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 625, "seek": 179140, "start": 1801.4, "end": 1804.4, "text": " in the phase of performance I have a nested loop here", "tokens": [294, 264, 5574, 295, 3389, 286, 362, 257, 15646, 292, 6367, 510], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 626, "seek": 179140, "start": 1804.4, "end": 1807.4, "text": " so why that and why in the terms of performance how?", "tokens": [370, 983, 300, 293, 983, 294, 264, 2115, 295, 3389, 577, 30], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 627, "seek": 179140, "start": 1807.4, "end": 1809.4, "text": " And Python.", "tokens": [400, 15329, 13], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 628, "seek": 179140, "start": 1809.4, "end": 1813.4, "text": " The trick is this is just for demonstration purposes", "tokens": [440, 4282, 307, 341, 307, 445, 337, 16520, 9932], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 629, "seek": 179140, "start": 1813.4, "end": 1815.4, "text": " that's one you can easily make this example", "tokens": [300, 311, 472, 291, 393, 3612, 652, 341, 1365], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 630, "seek": 179140, "start": 1815.4, "end": 1818.4, "text": " in C or C++ and you shit if you care about performance.", "tokens": [294, 383, 420, 383, 25472, 293, 291, 4611, 498, 291, 1127, 466, 3389, 13], "temperature": 0.0, "avg_logprob": -0.2234482765197754, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.00022097954933997244}, {"id": 631, "seek": 181840, "start": 1818.4, "end": 1821.4, "text": " The trick is that this program is already spending 99%", "tokens": [440, 4282, 307, 300, 341, 1461, 307, 1217, 6434, 11803, 4], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 632, "seek": 181840, "start": 1821.4, "end": 1822.4, "text": " of its time in IO weight", "tokens": [295, 1080, 565, 294, 39839, 3364], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 633, "seek": 181840, "start": 1822.4, "end": 1824.4, "text": " because it's waiting for the kernel to complete", "tokens": [570, 309, 311, 3806, 337, 264, 28256, 281, 3566], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 634, "seek": 181840, "start": 1824.4, "end": 1826.4, "text": " so in the phase of that it's not that interesting", "tokens": [370, 294, 264, 5574, 295, 300, 309, 311, 406, 300, 1880], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 635, "seek": 181840, "start": 1826.4, "end": 1829.4, "text": " and the reason we have a nested loop", "tokens": [293, 264, 1778, 321, 362, 257, 15646, 292, 6367], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 636, "seek": 181840, "start": 1829.4, "end": 1832.4, "text": " is because the floating point performance in EBP,", "tokens": [307, 570, 264, 12607, 935, 3389, 294, 50148, 47, 11], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 637, "seek": 181840, "start": 1832.4, "end": 1836.4, "text": " the floating point in EBPF is not existent", "tokens": [264, 12607, 935, 294, 50148, 47, 37, 307, 406, 2514, 317], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 638, "seek": 181840, "start": 1836.4, "end": 1838.4, "text": " or at least I didn't implement a fixed point mod", "tokens": [420, 412, 1935, 286, 994, 380, 4445, 257, 6806, 935, 1072], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 639, "seek": 181840, "start": 1838.4, "end": 1840.4, "text": " so what I have to do after this", "tokens": [370, 437, 286, 362, 281, 360, 934, 341], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 640, "seek": 181840, "start": 1840.4, "end": 1842.4, "text": " at the bottom what you don't see here", "tokens": [412, 264, 2767, 437, 291, 500, 380, 536, 510], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 641, "seek": 181840, "start": 1842.4, "end": 1845.4, "text": " is that from all these buckets of these bins", "tokens": [307, 300, 490, 439, 613, 32191, 295, 613, 41275], "temperature": 0.0, "avg_logprob": -0.13665111362934113, "compression_ratio": 1.7065217391304348, "no_speech_prob": 2.4282848244183697e-05}, {"id": 642, "seek": 184540, "start": 1845.4, "end": 1848.4, "text": " I'm actually computing the distribution", "tokens": [286, 478, 767, 15866, 264, 7316], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 643, "seek": 184540, "start": 1848.4, "end": 1851.4, "text": " using floating point math in Python", "tokens": [1228, 12607, 935, 5221, 294, 15329], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 644, "seek": 184540, "start": 1851.4, "end": 1854.4, "text": " which is why I don't get a single number from this kernel", "tokens": [597, 307, 983, 286, 500, 380, 483, 257, 2167, 1230, 490, 341, 28256], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 645, "seek": 184540, "start": 1854.4, "end": 1858.4, "text": " because if I would have floating point implementation", "tokens": [570, 498, 286, 576, 362, 12607, 935, 11420], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 646, "seek": 184540, "start": 1858.4, "end": 1863.4, "text": " in EBPF I could already do that computation in EBPF", "tokens": [294, 50148, 47, 37, 286, 727, 1217, 360, 300, 24903, 294, 50148, 47, 37], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 647, "seek": 184540, "start": 1863.4, "end": 1867.4, "text": " and only return a single 32-bit float as a result", "tokens": [293, 787, 2736, 257, 2167, 8858, 12, 5260, 15706, 382, 257, 1874], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 648, "seek": 184540, "start": 1867.4, "end": 1870.4, "text": " instead of these 265 integers.", "tokens": [2602, 295, 613, 7551, 20, 41674, 13], "temperature": 0.0, "avg_logprob": -0.11679865674274724, "compression_ratio": 1.5311004784688995, "no_speech_prob": 3.822356666205451e-05}, {"id": 649, "seek": 187040, "start": 1870.4, "end": 1874.4, "text": " But I still, the reason this is a loop", "tokens": [583, 286, 920, 11, 264, 1778, 341, 307, 257, 6367], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 650, "seek": 187040, "start": 1874.4, "end": 1877.4, "text": " is because I still have to strike for the read request", "tokens": [307, 570, 286, 920, 362, 281, 9302, 337, 264, 1401, 5308], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 651, "seek": 187040, "start": 1877.4, "end": 1879.4, "text": " because I can't go above 5 on the 12K", "tokens": [570, 286, 393, 380, 352, 3673, 1025, 322, 264, 2272, 42], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 652, "seek": 187040, "start": 1879.4, "end": 1882.4, "text": " even if my file is bigger than 5 on the 12K.", "tokens": [754, 498, 452, 3991, 307, 3801, 813, 1025, 322, 264, 2272, 42, 13], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 653, "seek": 187040, "start": 1882.4, "end": 1886.4, "text": " You said it's spending a lot of time in IO weight.", "tokens": [509, 848, 309, 311, 6434, 257, 688, 295, 565, 294, 39839, 3364, 13], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 654, "seek": 187040, "start": 1886.4, "end": 1889.4, "text": " Couldn't you just write it there just to prove it", "tokens": [35800, 380, 291, 445, 2464, 309, 456, 445, 281, 7081, 309], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 655, "seek": 187040, "start": 1889.4, "end": 1892.4, "text": " or it doesn't make any sense in this case?", "tokens": [420, 309, 1177, 380, 652, 604, 2020, 294, 341, 1389, 30], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 656, "seek": 187040, "start": 1892.4, "end": 1896.4, "text": " Well, the trick is, okay,", "tokens": [1042, 11, 264, 4282, 307, 11, 1392, 11], "temperature": 0.0, "avg_logprob": -0.2345534990418632, "compression_ratio": 1.5585585585585586, "no_speech_prob": 4.983216422260739e-05}, {"id": 657, "seek": 189640, "start": 1896.4, "end": 1900.4, "text": " couldn't I implement multi-treading here?", "tokens": [2809, 380, 286, 4445, 4825, 12, 83, 35908, 510, 30], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 658, "seek": 189640, "start": 1900.4, "end": 1905.4, "text": " Currently, the EBPFVM runs as a single process", "tokens": [19964, 11, 264, 50148, 47, 37, 53, 44, 6676, 382, 257, 2167, 1399], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 659, "seek": 189640, "start": 1905.4, "end": 1908.4, "text": " so even if you submit multiple kernels", "tokens": [370, 754, 498, 291, 10315, 3866, 23434, 1625], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 660, "seek": 189640, "start": 1908.4, "end": 1910.4, "text": " only one will execute at a time.", "tokens": [787, 472, 486, 14483, 412, 257, 565, 13], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 661, "seek": 189640, "start": 1910.4, "end": 1913.4, "text": " Why? It's a thesis prototype, right?", "tokens": [1545, 30, 467, 311, 257, 22288, 19475, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 662, "seek": 189640, "start": 1913.4, "end": 1915.4, "text": " Time, things like this.", "tokens": [6161, 11, 721, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 663, "seek": 189640, "start": 1915.4, "end": 1917.4, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 664, "seek": 189640, "start": 1917.4, "end": 1918.4, "text": " Thank you very much.", "tokens": [1044, 291, 588, 709, 13], "temperature": 0.0, "avg_logprob": -0.13032709984552293, "compression_ratio": 1.3265306122448979, "no_speech_prob": 3.935980566893704e-05}, {"id": 665, "seek": 191840, "start": 1918.4, "end": 1930.4, "text": " No worries.", "tokens": [50364, 883, 16340, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1889317830403646, "compression_ratio": 0.5789473684210527, "no_speech_prob": 0.00027200710610486567}], "language": "en"}