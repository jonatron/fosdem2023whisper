{"text": " All right, good. So thank you for joining me this afternoon for this presentation. I'm a researcher at KU Leuven, and I'll be talking about our work on a reasoning engine for FODOT. So this morning, I connected to Chad GPT, and I asked him, or it, I don't know, what's the, I'm twice the age of my son, who is 15 years younger than me, or old MI. And it started pretty well by saying that let's give it, let's give a variable a name, and then let's write the formula. But then when it tried to solve the equation, somehow he got lost, and he was not able to find the correct answer. And that shows that Chad GPT is very capable at understanding English, but not so much about reasoning, about, it does not have the cognitive skills to solve the equation. And so if we ever will be able to create a machine that can pass the Turing test, of course it needs to be able to handle natural language, but it also has to have the cognitive skills that we human have, like those listed here, we should be able, it should be able to learn from others through symbolic communication. It should be able to apply knowledge in new ways to perform new tasks, like the capacity to solve an equation, that's a knowledge that you can apply in many different settings. And it should have other cognitive skills, like the capability to ask relevant questions, and to explain its reasoning. In all these types of skills, we try to implement them, and the field of study at the university is called knowledge representation and reasoning, and that's what we are working on. Now one way to have a computer solve a riddle, like on the edge that I gave earlier, is to program the system, to program the computer. But there's a big difference between a statement in a program and a statement of knowledge. If, for example, I write in a program that F is equal to M multiplied by A, that's a statement in a procedure, you can compute F if you know M and A. But that's quite different from what you would see in a physics book, where the second law of motion would really mean that given any two of those quantities, you can compute the third one. And so you can really reason in multiple directions, unlike in a procedural statement. So that's a big difference between a program and knowledge. And you might think that a prologue, because it's a so-called declarative language, does not have that problem, but in fact it does. If you have a prologue program, like you can vote if you are more than 18, it can only compute vote from the fact that you are more than 18 or not. It cannot go the other way around. And that's quite unlike what you would write in a logic statement, that you can vote if and only if your age is larger than 18. And with that kind of statement, you should be able to say, to infer your age or at least a minimum value of your age from your right to vote. So really, a prologue is a programming language. It's not a knowledge representation language. Now, what is programming? It's actually the process of translating the knowledge that we have of a problem into a program that can then give a problem, solve it. And then if you have another problem, you have to apply that knowledge and convert it into another program, possibly, to solve it. And so depending on what kind of information you get as input and what kind of information you want as output, you will have to write different programs. And sometimes these programs will be quite different, which is a pity because the knowledge that is implicit in the program is the same. So why do we have to write so many different programs? This process, the industry of converting knowledge into a program is, of course, a big industry. It's the acting industry. That's what makes us live. But still, there's possibly a better way to do it, and that's what we are working on. If we can represent the knowledge into a knowledge base and then develop some generic inferences depending on the type of problem that you have, then you don't have to rewrite the program every time. You can use a generic inference, give it the knowledge base that you have, the input of your problem, and it will give you the answer. So for example, for the age riddle that I had in the beginning, the generic inference is what we call model search. So we search for a model of the equation, and that's a very generic skill that can be implemented once and then applied in many different ways. So what is knowledge then? Knowledge is a statement of knowledge, it's a statement that is true in all possible worlds, like for example, the second law of motion. It's true in all possible worlds that you can imagine. You can also say that a statement of knowledge is true in all acceptable worlds. That's what the law says, like the regulations, what is acceptable as a behavior. Sometimes a statement of knowledge can be about what you desire the world to be. So it's an expectation, or it can be about a particular situation that you face, and all these are different propositional attitudes. If you are interested in philosophy, you can go and look at Wittgenstein and his book, but that's the idea behind this. And so we have been thinking about what would be a good knowledge representation language, what could be its good attributes, and it should be, it should use symbols that have very simple semantics, like the age of a person, like very simple predicates and functions. It should have statements that are close to natural language, so it should be very easy to express a statement in natural language into a statement in knowledge representation, and vice versa, when you have a representation of knowledge, you should be able to read it very easily into a natural language. And it should be expressive. It should be able to express complex forms of knowledge. So first order logic is a nice candidate for expressing knowledge. That's why it's one of the basic language to express scientific knowledge, for example. We do use it in school for a good purpose. It has indeed some symbols with simple semantics. The statements are close to natural language, but still it is not as expressive as we would like it to be. So it has a construct like quantification. You can say for every x something is true, or there is an x such that something is true, but it doesn't have aggregates. It doesn't have inductive definitions, which are complex ways of explaining how you would compute the value of some elements. And so we introduce a language called fo dot, the dot being representing a list of extensions. And so it's first order logic extended with types, or so-called sorts in the literature, with definitions or inductive definitions, with arithmetic so that you can do some computations. It's still this point limited to linear arithmetic, so you cannot do transcendental functions like sine and cosine. It supports aggregates, like counting the cardinality of elements that satisfy some conditions, as well as the minimal or maximum, et cetera, and it has some more advanced functions like you're dealing with partial functions, functions that are undefined for some values of their arguments and intentional objects. You can look at the documentation if you want to have more details. Maybe I can give you some examples of statements. The first one would be for regulation about COVID, and you could read it like this. So if you want to do an activity of outdoor sports, then you have to finish it before 8 p.m. in the evening, and then either you have a mask or you have a COVID-safe ticket. So the hat is a symbol, is a logic symbol for and, and the V is a logic symbol for all. The second statement would be like for an organization of an event like this one, or for a course, planning of a course. For every course provided by the university, the number of students that attend the course should be less than the capacity of the room of the course. That's really a very simple statement that can then be used into, for the search of a correct planning. The bottom example is an example of a definition where you have rules that can be applied. And the first, so it looks a little bit like a prologue statement that can then be used to define the tax rate of, for, for, for, for selling a house, for example. And so at KU Leuven, we have developed, we are developing these technologies. I mentioned FODOT, which is one of the two knowledge representation language. This is the more powerful one. CDMN is a table-like way to, to introduce decision tables. And it can be used by business, by, by business analysts, I would say, in a, and it's a little bit simpler than, than FODOT. Then IDPZ3 is your reasoning engine that can use that knowledge base, as well as some inputs to compute, to, to, to perform some reasoning tasks. And on top of that, we have developed the IC, the Interactive Concertant, as we call it. So it's a little bit like a machine that can pass a Turing test, but we vote the knowledge, the natural language capabilities, but it can reason like a Turing test machine would, would need to do. And these parts are really generic. So once it is developed, then it can be reused very, very easily. So the IDPZ3 is the reasoning engine that has these capabilities. It can ask questions like, is it possible, according to the knowledge base of the possible words that we give him. That's called model checking. It can ask, you can ask him what would be a possible word, again, according to the knowledge, the knowledge base. That's model generation or model search, model expansion. What is relevant? What would, what should I get for, as information to check, to, to be able to construct a model of the, of the, of the, of the knowledge base? What are the consequences of some partial information that I have about a situation? I have some information about the situation that I face. What are the consequences of that? It can then give you some explanations about those consequences. Why this is a consequence? So it can explain its own reasoning. And it can also do some kind of optimization. Again, you can look at the website to have some more information there. So the reasoning engine is hosted in a Python program. So it's a Python program that will tell which inference to, to, to, to perform. And so it's easily downloadable from the, the Python package index. And so let me talk about the interactive consultants. Let's say that you have some challenge to engineer a design that meets some customer requirements. Well, to address that challenge, we develop a novel class of applets that can perform various forms of reasoning in, in the domain of expertise. And that will help the engineer finds proper design. So how does that work? So you have the requirements that come from, from the outside, from the environment, from, from, from the customer. So you have a set of requirements. The engineer will then interact with the application to enter the requirements that he knows. As well as some tentative decisions that he thinks would be proper design. And then in return, the system will ask him some additional question. And really, you, you, you should know exactly what is the property of this material or what is the expected operating temperature of the, of the system. So it's, it's starting to have a conversation with the engineer. It will tell him what are the prerequisites of his tentative decisions. So if he says, oh, I'd like to use steel, well, the system says, okay, but then you need to have, I don't know, some kind of pressure that is not higher than, than something else, whatever. It will tell him the consequences of his, of his decisions. It will be able to give some explanations and then some do some optimization of the design. So it's really a consultant that will help the engineer come to a solution. And all that with some proprietary expertise of the domain of, of, of interest that will be used to do the, the reasoning. If I have time, I'll give you a quick demo, maybe I'll go through the slides first. So we are developing that in partnership with some industrial partners. It is a big multinational that prefers to keep privates. I have five minutes left. Thank you. But we are also working with Siemens with Flandersmake, which is a research lab for the industry in, in, in, in Flanders. We entirely select in the, the banking sector, heads up with notaries. And the idea is to reduce the decision time of, of some experts. For example, in the Flandersmake, it was to reduce the time to select a glue, to glue two materials together. And typically they had to go through data sheets and to find the proper glue. And with the tool, they cannot do it in less than five minutes. And with the development cause, that was quite, quite low. This is an example with the big multinational company. They had to design custom industrial components. The expertise of doing that was in the head of the experienced engineers. But they wanted to empower the younger engineers. And so we formalized the knowledge of the experts into the system. And then with the interactive consultant, the younger engineers can play around with the different options and find a proper design that is right the first time. And the fact of formalizing the knowledge in, in the system really makes that knowledge an asset of the company that can then be managed as an over asset. And the organization becomes a learning organization. So why do we do this now? Why, why is it possible now and not before? That's because there are new solvers that are capable of making those types of reasoning. It's a big progress in the artificial intelligence world, but it's a little bit less well known than neural networks and so on. But it is quite, quite a nice progress. And we try to put that into, into practice. And also, we are getting a new understanding of what is knowledge and how to use it. And that's why this is, this is an interesting area. Let me go back to, to the demo. So you can go to the IDPZ3, ooh, I don't have internet. I did have it before. Yeah, sorry about that. So I won't be able to show it, but that's, that's the end of my presentation. If there are any questions, I'll be happy to answer. Thank you. Yes. Can you explain how this, how you approach differences from the classical expert systems? What's the next step? So, so yeah, the, the question is how is this, if I understand well, how is this different from expert systems, right? Because expert systems were quite popular back in the 80s and 90s. And this looks very much the same. But the thing is that expert systems were very much like prologue. And so they could make inferences in one direction, but, but they could not reason with, with, in, in any other direction. So it could not reason with partial information, for example. Well, here, even with partial information, it's capable of doing some, some, some, to, to come up with, with some conclusions. So it's very different from, from programming from, from knowledge. Yeah. Yeah. So in the use case you presented, you said that you took the expert note. How can you formalize it in order to be used by the original engine? Yeah. So the representation of the data is on FODAR. Yes. The representation of the knowledge is in FODAR. Yes. Okay. How, what's the process of transferring the data? We're just discussing with experts. Right. Yeah. So for the moment it's done by a knowledge engineer, as we call it, who talks with the experts and who looks in the data sheets and then that formalize it. It's like a programmer if you want, but for knowledge. So he has to, to, to formalize the knowledge into the, the, the formal language. Okay. And one more follow-up. So data representation is something like a decision tree or something? The, the representation is what I showed earlier. These are statements in logic, like the one I showed. Like this, this one's here. Let's, let's go ahead and show. So it would be statements like these that look very much like statement in English, but they would use some kind of formal. So the knowledge base is really just a text file. Okay. Steven? Yeah. Maybe one more. You mentioned humor. You mentioned humor. Yes. It's not capable of that yet, but we are working on it. All right. All right. Yeah. One more. Yeah. Was it a lot of work to customize Z3 to work with this? To work with this? Yeah. It was some, some work. Yes. So the question is, we use Z3 as a back end for the reasoning engine. How much work did it require to build to the reasoning engine, engine that we, we have? Of course, Z3 is already quite capable. So it's very, very useful. On top of that, we have new language constructs like aggregates that Z3 does not have. Natively. And we have also some additional inference or reasoning capabilities on top of it. Like the term, determination of what is the relevant question in the particular case. So, yeah. The system capable of recognizing or even pointing out some coherent specifications in the knowledge base. Could you speak a bit louder? I don't hear you. Yes, indeed. Right. Yeah. Yeah. So the question is, what happens is the knowledge base have conflicting statements in it, because then it cannot reason correctly. And actually, we have an inference that will try to extract the minimum set of instances of statements in it. That will make the, that makes the knowledge base inconsistent. And then from that inconsistent set of statements, we can try, the knowledge engineer can try to resolve it. Has that been used in practice? It is used, yes, indeed. Has that helped the specific case? In that specific case, I don't remember exactly. I couldn't say, but it could be. I don't know if. Yeah, this should come in. No, no, come on. And your picture is a big form. I thought you were expecting the general picture. There's still one question. If you could stay quiet, please. So the question is whether this could have applications in the medical field, where you have some, I need to reason with some probabilities. If there is this set of symptoms, there's a probability of such that this could happen. At this point, we are not focusing on this type of reasoning with probabilities. There's another group at KU11 that has developed the logic called probabilistic logic, which is an evolution of prologue, which goes in that direction. But this one does not do it. All right, thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.56, "text": " All right, good.", "tokens": [1057, 558, 11, 665, 13], "temperature": 0.0, "avg_logprob": -0.26292041431773794, "compression_ratio": 1.2836879432624113, "no_speech_prob": 0.06495054811239243}, {"id": 1, "seek": 0, "start": 8.56, "end": 13.6, "text": " So thank you for joining me this afternoon for this presentation.", "tokens": [407, 1309, 291, 337, 5549, 385, 341, 6499, 337, 341, 5860, 13], "temperature": 0.0, "avg_logprob": -0.26292041431773794, "compression_ratio": 1.2836879432624113, "no_speech_prob": 0.06495054811239243}, {"id": 2, "seek": 0, "start": 13.6, "end": 20.2, "text": " I'm a researcher at KU Leuven, and I'll be talking about our work on a reasoning engine", "tokens": [286, 478, 257, 21751, 412, 591, 52, 1456, 84, 553, 11, 293, 286, 603, 312, 1417, 466, 527, 589, 322, 257, 21577, 2848], "temperature": 0.0, "avg_logprob": -0.26292041431773794, "compression_ratio": 1.2836879432624113, "no_speech_prob": 0.06495054811239243}, {"id": 3, "seek": 0, "start": 20.2, "end": 23.96, "text": " for FODOT.", "tokens": [337, 23501, 35, 5068, 13], "temperature": 0.0, "avg_logprob": -0.26292041431773794, "compression_ratio": 1.2836879432624113, "no_speech_prob": 0.06495054811239243}, {"id": 4, "seek": 2396, "start": 23.96, "end": 32.0, "text": " So this morning, I connected to Chad GPT, and I asked him, or it, I don't know, what's", "tokens": [407, 341, 2446, 11, 286, 4582, 281, 22268, 26039, 51, 11, 293, 286, 2351, 796, 11, 420, 309, 11, 286, 500, 380, 458, 11, 437, 311], "temperature": 0.0, "avg_logprob": -0.20171321834529843, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.00046375280362553895}, {"id": 5, "seek": 2396, "start": 32.0, "end": 38.08, "text": " the, I'm twice the age of my son, who is 15 years younger than me, or old MI.", "tokens": [264, 11, 286, 478, 6091, 264, 3205, 295, 452, 1872, 11, 567, 307, 2119, 924, 7037, 813, 385, 11, 420, 1331, 13696, 13], "temperature": 0.0, "avg_logprob": -0.20171321834529843, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.00046375280362553895}, {"id": 6, "seek": 2396, "start": 38.08, "end": 43.32, "text": " And it started pretty well by saying that let's give it, let's give a variable a name,", "tokens": [400, 309, 1409, 1238, 731, 538, 1566, 300, 718, 311, 976, 309, 11, 718, 311, 976, 257, 7006, 257, 1315, 11], "temperature": 0.0, "avg_logprob": -0.20171321834529843, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.00046375280362553895}, {"id": 7, "seek": 2396, "start": 43.32, "end": 45.760000000000005, "text": " and then let's write the formula.", "tokens": [293, 550, 718, 311, 2464, 264, 8513, 13], "temperature": 0.0, "avg_logprob": -0.20171321834529843, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.00046375280362553895}, {"id": 8, "seek": 2396, "start": 45.760000000000005, "end": 51.56, "text": " But then when it tried to solve the equation, somehow he got lost, and he was not able to", "tokens": [583, 550, 562, 309, 3031, 281, 5039, 264, 5367, 11, 6063, 415, 658, 2731, 11, 293, 415, 390, 406, 1075, 281], "temperature": 0.0, "avg_logprob": -0.20171321834529843, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.00046375280362553895}, {"id": 9, "seek": 5156, "start": 51.56, "end": 54.120000000000005, "text": " find the correct answer.", "tokens": [915, 264, 3006, 1867, 13], "temperature": 0.0, "avg_logprob": -0.129006696783978, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.00017332470451947302}, {"id": 10, "seek": 5156, "start": 54.120000000000005, "end": 60.800000000000004, "text": " And that shows that Chad GPT is very capable at understanding English, but not so much", "tokens": [400, 300, 3110, 300, 22268, 26039, 51, 307, 588, 8189, 412, 3701, 3669, 11, 457, 406, 370, 709], "temperature": 0.0, "avg_logprob": -0.129006696783978, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.00017332470451947302}, {"id": 11, "seek": 5156, "start": 60.800000000000004, "end": 69.4, "text": " about reasoning, about, it does not have the cognitive skills to solve the equation.", "tokens": [466, 21577, 11, 466, 11, 309, 775, 406, 362, 264, 15605, 3942, 281, 5039, 264, 5367, 13], "temperature": 0.0, "avg_logprob": -0.129006696783978, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.00017332470451947302}, {"id": 12, "seek": 5156, "start": 69.4, "end": 74.92, "text": " And so if we ever will be able to create a machine that can pass the Turing test, of", "tokens": [400, 370, 498, 321, 1562, 486, 312, 1075, 281, 1884, 257, 3479, 300, 393, 1320, 264, 314, 1345, 1500, 11, 295], "temperature": 0.0, "avg_logprob": -0.129006696783978, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.00017332470451947302}, {"id": 13, "seek": 5156, "start": 74.92, "end": 81.24000000000001, "text": " course it needs to be able to handle natural language, but it also has to have the cognitive", "tokens": [1164, 309, 2203, 281, 312, 1075, 281, 4813, 3303, 2856, 11, 457, 309, 611, 575, 281, 362, 264, 15605], "temperature": 0.0, "avg_logprob": -0.129006696783978, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.00017332470451947302}, {"id": 14, "seek": 8124, "start": 81.24, "end": 86.32, "text": " skills that we human have, like those listed here, we should be able, it should be able", "tokens": [3942, 300, 321, 1952, 362, 11, 411, 729, 10052, 510, 11, 321, 820, 312, 1075, 11, 309, 820, 312, 1075], "temperature": 0.0, "avg_logprob": -0.1419335651397705, "compression_ratio": 1.7836734693877552, "no_speech_prob": 4.627427915693261e-05}, {"id": 15, "seek": 8124, "start": 86.32, "end": 90.6, "text": " to learn from others through symbolic communication.", "tokens": [281, 1466, 490, 2357, 807, 25755, 6101, 13], "temperature": 0.0, "avg_logprob": -0.1419335651397705, "compression_ratio": 1.7836734693877552, "no_speech_prob": 4.627427915693261e-05}, {"id": 16, "seek": 8124, "start": 90.6, "end": 95.16, "text": " It should be able to apply knowledge in new ways to perform new tasks, like the capacity", "tokens": [467, 820, 312, 1075, 281, 3079, 3601, 294, 777, 2098, 281, 2042, 777, 9608, 11, 411, 264, 6042], "temperature": 0.0, "avg_logprob": -0.1419335651397705, "compression_ratio": 1.7836734693877552, "no_speech_prob": 4.627427915693261e-05}, {"id": 17, "seek": 8124, "start": 95.16, "end": 101.6, "text": " to solve an equation, that's a knowledge that you can apply in many different settings.", "tokens": [281, 5039, 364, 5367, 11, 300, 311, 257, 3601, 300, 291, 393, 3079, 294, 867, 819, 6257, 13], "temperature": 0.0, "avg_logprob": -0.1419335651397705, "compression_ratio": 1.7836734693877552, "no_speech_prob": 4.627427915693261e-05}, {"id": 18, "seek": 8124, "start": 101.6, "end": 107.52, "text": " And it should have other cognitive skills, like the capability to ask relevant questions,", "tokens": [400, 309, 820, 362, 661, 15605, 3942, 11, 411, 264, 13759, 281, 1029, 7340, 1651, 11], "temperature": 0.0, "avg_logprob": -0.1419335651397705, "compression_ratio": 1.7836734693877552, "no_speech_prob": 4.627427915693261e-05}, {"id": 19, "seek": 8124, "start": 107.52, "end": 109.91999999999999, "text": " and to explain its reasoning.", "tokens": [293, 281, 2903, 1080, 21577, 13], "temperature": 0.0, "avg_logprob": -0.1419335651397705, "compression_ratio": 1.7836734693877552, "no_speech_prob": 4.627427915693261e-05}, {"id": 20, "seek": 10992, "start": 109.92, "end": 116.76, "text": " In all these types of skills, we try to implement them, and the field of study at the university", "tokens": [682, 439, 613, 3467, 295, 3942, 11, 321, 853, 281, 4445, 552, 11, 293, 264, 2519, 295, 2979, 412, 264, 5454], "temperature": 0.0, "avg_logprob": -0.18639007722488557, "compression_ratio": 1.7257383966244726, "no_speech_prob": 7.034621376078576e-05}, {"id": 21, "seek": 10992, "start": 116.76, "end": 122.84, "text": " is called knowledge representation and reasoning, and that's what we are working on.", "tokens": [307, 1219, 3601, 10290, 293, 21577, 11, 293, 300, 311, 437, 321, 366, 1364, 322, 13], "temperature": 0.0, "avg_logprob": -0.18639007722488557, "compression_ratio": 1.7257383966244726, "no_speech_prob": 7.034621376078576e-05}, {"id": 22, "seek": 10992, "start": 122.84, "end": 129.8, "text": " Now one way to have a computer solve a riddle, like on the edge that I gave earlier, is to", "tokens": [823, 472, 636, 281, 362, 257, 3820, 5039, 257, 3973, 2285, 11, 411, 322, 264, 4691, 300, 286, 2729, 3071, 11, 307, 281], "temperature": 0.0, "avg_logprob": -0.18639007722488557, "compression_ratio": 1.7257383966244726, "no_speech_prob": 7.034621376078576e-05}, {"id": 23, "seek": 10992, "start": 129.8, "end": 133.4, "text": " program the system, to program the computer.", "tokens": [1461, 264, 1185, 11, 281, 1461, 264, 3820, 13], "temperature": 0.0, "avg_logprob": -0.18639007722488557, "compression_ratio": 1.7257383966244726, "no_speech_prob": 7.034621376078576e-05}, {"id": 24, "seek": 10992, "start": 133.4, "end": 138.96, "text": " But there's a big difference between a statement in a program and a statement of knowledge.", "tokens": [583, 456, 311, 257, 955, 2649, 1296, 257, 5629, 294, 257, 1461, 293, 257, 5629, 295, 3601, 13], "temperature": 0.0, "avg_logprob": -0.18639007722488557, "compression_ratio": 1.7257383966244726, "no_speech_prob": 7.034621376078576e-05}, {"id": 25, "seek": 13896, "start": 138.96, "end": 147.44, "text": " If, for example, I write in a program that F is equal to M multiplied by A, that's a", "tokens": [759, 11, 337, 1365, 11, 286, 2464, 294, 257, 1461, 300, 479, 307, 2681, 281, 376, 17207, 538, 316, 11, 300, 311, 257], "temperature": 0.0, "avg_logprob": -0.13261771202087402, "compression_ratio": 1.5767441860465117, "no_speech_prob": 3.16704208671581e-05}, {"id": 26, "seek": 13896, "start": 147.44, "end": 153.8, "text": " statement in a procedure, you can compute F if you know M and A. But that's quite different", "tokens": [5629, 294, 257, 10747, 11, 291, 393, 14722, 479, 498, 291, 458, 376, 293, 316, 13, 583, 300, 311, 1596, 819], "temperature": 0.0, "avg_logprob": -0.13261771202087402, "compression_ratio": 1.5767441860465117, "no_speech_prob": 3.16704208671581e-05}, {"id": 27, "seek": 13896, "start": 153.8, "end": 160.08, "text": " from what you would see in a physics book, where the second law of motion would really", "tokens": [490, 437, 291, 576, 536, 294, 257, 10649, 1446, 11, 689, 264, 1150, 2101, 295, 5394, 576, 534], "temperature": 0.0, "avg_logprob": -0.13261771202087402, "compression_ratio": 1.5767441860465117, "no_speech_prob": 3.16704208671581e-05}, {"id": 28, "seek": 13896, "start": 160.08, "end": 166.24, "text": " mean that given any two of those quantities, you can compute the third one.", "tokens": [914, 300, 2212, 604, 732, 295, 729, 22927, 11, 291, 393, 14722, 264, 2636, 472, 13], "temperature": 0.0, "avg_logprob": -0.13261771202087402, "compression_ratio": 1.5767441860465117, "no_speech_prob": 3.16704208671581e-05}, {"id": 29, "seek": 16624, "start": 166.24, "end": 171.36, "text": " And so you can really reason in multiple directions, unlike in a procedural statement.", "tokens": [400, 370, 291, 393, 534, 1778, 294, 3866, 11095, 11, 8343, 294, 257, 43951, 5629, 13], "temperature": 0.0, "avg_logprob": -0.11545723676681519, "compression_ratio": 1.708, "no_speech_prob": 3.444332105573267e-05}, {"id": 30, "seek": 16624, "start": 171.36, "end": 175.88, "text": " So that's a big difference between a program and knowledge.", "tokens": [407, 300, 311, 257, 955, 2649, 1296, 257, 1461, 293, 3601, 13], "temperature": 0.0, "avg_logprob": -0.11545723676681519, "compression_ratio": 1.708, "no_speech_prob": 3.444332105573267e-05}, {"id": 31, "seek": 16624, "start": 175.88, "end": 180.32000000000002, "text": " And you might think that a prologue, because it's a so-called declarative language, does", "tokens": [400, 291, 1062, 519, 300, 257, 447, 4987, 622, 11, 570, 309, 311, 257, 370, 12, 11880, 16694, 1166, 2856, 11, 775], "temperature": 0.0, "avg_logprob": -0.11545723676681519, "compression_ratio": 1.708, "no_speech_prob": 3.444332105573267e-05}, {"id": 32, "seek": 16624, "start": 180.32000000000002, "end": 184.0, "text": " not have that problem, but in fact it does.", "tokens": [406, 362, 300, 1154, 11, 457, 294, 1186, 309, 775, 13], "temperature": 0.0, "avg_logprob": -0.11545723676681519, "compression_ratio": 1.708, "no_speech_prob": 3.444332105573267e-05}, {"id": 33, "seek": 16624, "start": 184.0, "end": 190.76000000000002, "text": " If you have a prologue program, like you can vote if you are more than 18, it can only", "tokens": [759, 291, 362, 257, 447, 4987, 622, 1461, 11, 411, 291, 393, 4740, 498, 291, 366, 544, 813, 2443, 11, 309, 393, 787], "temperature": 0.0, "avg_logprob": -0.11545723676681519, "compression_ratio": 1.708, "no_speech_prob": 3.444332105573267e-05}, {"id": 34, "seek": 16624, "start": 190.76000000000002, "end": 195.56, "text": " compute vote from the fact that you are more than 18 or not.", "tokens": [14722, 4740, 490, 264, 1186, 300, 291, 366, 544, 813, 2443, 420, 406, 13], "temperature": 0.0, "avg_logprob": -0.11545723676681519, "compression_ratio": 1.708, "no_speech_prob": 3.444332105573267e-05}, {"id": 35, "seek": 19556, "start": 195.56, "end": 197.64000000000001, "text": " It cannot go the other way around.", "tokens": [467, 2644, 352, 264, 661, 636, 926, 13], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 36, "seek": 19556, "start": 197.64000000000001, "end": 202.36, "text": " And that's quite unlike what you would write in a logic statement, that you can vote if", "tokens": [400, 300, 311, 1596, 8343, 437, 291, 576, 2464, 294, 257, 9952, 5629, 11, 300, 291, 393, 4740, 498], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 37, "seek": 19556, "start": 202.36, "end": 207.16, "text": " and only if your age is larger than 18.", "tokens": [293, 787, 498, 428, 3205, 307, 4833, 813, 2443, 13], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 38, "seek": 19556, "start": 207.16, "end": 211.8, "text": " And with that kind of statement, you should be able to say, to infer your age or at least", "tokens": [400, 365, 300, 733, 295, 5629, 11, 291, 820, 312, 1075, 281, 584, 11, 281, 13596, 428, 3205, 420, 412, 1935], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 39, "seek": 19556, "start": 211.8, "end": 217.28, "text": " a minimum value of your age from your right to vote.", "tokens": [257, 7285, 2158, 295, 428, 3205, 490, 428, 558, 281, 4740, 13], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 40, "seek": 19556, "start": 217.28, "end": 219.2, "text": " So really, a prologue is a programming language.", "tokens": [407, 534, 11, 257, 447, 4987, 622, 307, 257, 9410, 2856, 13], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 41, "seek": 19556, "start": 219.2, "end": 223.32, "text": " It's not a knowledge representation language.", "tokens": [467, 311, 406, 257, 3601, 10290, 2856, 13], "temperature": 0.0, "avg_logprob": -0.16838359832763672, "compression_ratio": 1.6597510373443984, "no_speech_prob": 6.080520688556135e-05}, {"id": 42, "seek": 22332, "start": 223.32, "end": 227.51999999999998, "text": " Now, what is programming?", "tokens": [823, 11, 437, 307, 9410, 30], "temperature": 0.0, "avg_logprob": -0.13048831276271655, "compression_ratio": 1.832535885167464, "no_speech_prob": 7.221395935630426e-05}, {"id": 43, "seek": 22332, "start": 227.51999999999998, "end": 233.2, "text": " It's actually the process of translating the knowledge that we have of a problem into a", "tokens": [467, 311, 767, 264, 1399, 295, 35030, 264, 3601, 300, 321, 362, 295, 257, 1154, 666, 257], "temperature": 0.0, "avg_logprob": -0.13048831276271655, "compression_ratio": 1.832535885167464, "no_speech_prob": 7.221395935630426e-05}, {"id": 44, "seek": 22332, "start": 233.2, "end": 238.23999999999998, "text": " program that can then give a problem, solve it.", "tokens": [1461, 300, 393, 550, 976, 257, 1154, 11, 5039, 309, 13], "temperature": 0.0, "avg_logprob": -0.13048831276271655, "compression_ratio": 1.832535885167464, "no_speech_prob": 7.221395935630426e-05}, {"id": 45, "seek": 22332, "start": 238.23999999999998, "end": 241.72, "text": " And then if you have another problem, you have to apply that knowledge and convert it", "tokens": [400, 550, 498, 291, 362, 1071, 1154, 11, 291, 362, 281, 3079, 300, 3601, 293, 7620, 309], "temperature": 0.0, "avg_logprob": -0.13048831276271655, "compression_ratio": 1.832535885167464, "no_speech_prob": 7.221395935630426e-05}, {"id": 46, "seek": 22332, "start": 241.72, "end": 244.68, "text": " into another program, possibly, to solve it.", "tokens": [666, 1071, 1461, 11, 6264, 11, 281, 5039, 309, 13], "temperature": 0.0, "avg_logprob": -0.13048831276271655, "compression_ratio": 1.832535885167464, "no_speech_prob": 7.221395935630426e-05}, {"id": 47, "seek": 22332, "start": 244.68, "end": 250.64, "text": " And so depending on what kind of information you get as input and what kind of information", "tokens": [400, 370, 5413, 322, 437, 733, 295, 1589, 291, 483, 382, 4846, 293, 437, 733, 295, 1589], "temperature": 0.0, "avg_logprob": -0.13048831276271655, "compression_ratio": 1.832535885167464, "no_speech_prob": 7.221395935630426e-05}, {"id": 48, "seek": 25064, "start": 250.64, "end": 254.83999999999997, "text": " you want as output, you will have to write different programs.", "tokens": [291, 528, 382, 5598, 11, 291, 486, 362, 281, 2464, 819, 4268, 13], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 49, "seek": 25064, "start": 254.83999999999997, "end": 260.15999999999997, "text": " And sometimes these programs will be quite different, which is a pity because the knowledge", "tokens": [400, 2171, 613, 4268, 486, 312, 1596, 819, 11, 597, 307, 257, 21103, 570, 264, 3601], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 50, "seek": 25064, "start": 260.15999999999997, "end": 262.12, "text": " that is implicit in the program is the same.", "tokens": [300, 307, 26947, 294, 264, 1461, 307, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 51, "seek": 25064, "start": 262.12, "end": 266.68, "text": " So why do we have to write so many different programs?", "tokens": [407, 983, 360, 321, 362, 281, 2464, 370, 867, 819, 4268, 30], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 52, "seek": 25064, "start": 266.68, "end": 273.03999999999996, "text": " This process, the industry of converting knowledge into a program is, of course, a big industry.", "tokens": [639, 1399, 11, 264, 3518, 295, 29942, 3601, 666, 257, 1461, 307, 11, 295, 1164, 11, 257, 955, 3518, 13], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 53, "seek": 25064, "start": 273.03999999999996, "end": 274.59999999999997, "text": " It's the acting industry.", "tokens": [467, 311, 264, 6577, 3518, 13], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 54, "seek": 25064, "start": 274.59999999999997, "end": 277.8, "text": " That's what makes us live.", "tokens": [663, 311, 437, 1669, 505, 1621, 13], "temperature": 0.0, "avg_logprob": -0.1553946018218994, "compression_ratio": 1.7797356828193833, "no_speech_prob": 6.723530532326549e-05}, {"id": 55, "seek": 27780, "start": 277.8, "end": 282.68, "text": " But still, there's possibly a better way to do it, and that's what we are working on.", "tokens": [583, 920, 11, 456, 311, 6264, 257, 1101, 636, 281, 360, 309, 11, 293, 300, 311, 437, 321, 366, 1364, 322, 13], "temperature": 0.0, "avg_logprob": -0.11995674314953032, "compression_ratio": 1.7796610169491525, "no_speech_prob": 3.193791053490713e-05}, {"id": 56, "seek": 27780, "start": 282.68, "end": 291.24, "text": " If we can represent the knowledge into a knowledge base and then develop some generic inferences", "tokens": [759, 321, 393, 2906, 264, 3601, 666, 257, 3601, 3096, 293, 550, 1499, 512, 19577, 13596, 2667], "temperature": 0.0, "avg_logprob": -0.11995674314953032, "compression_ratio": 1.7796610169491525, "no_speech_prob": 3.193791053490713e-05}, {"id": 57, "seek": 27780, "start": 291.24, "end": 297.92, "text": " depending on the type of problem that you have, then you don't have to rewrite the program", "tokens": [5413, 322, 264, 2010, 295, 1154, 300, 291, 362, 11, 550, 291, 500, 380, 362, 281, 28132, 264, 1461], "temperature": 0.0, "avg_logprob": -0.11995674314953032, "compression_ratio": 1.7796610169491525, "no_speech_prob": 3.193791053490713e-05}, {"id": 58, "seek": 27780, "start": 297.92, "end": 298.92, "text": " every time.", "tokens": [633, 565, 13], "temperature": 0.0, "avg_logprob": -0.11995674314953032, "compression_ratio": 1.7796610169491525, "no_speech_prob": 3.193791053490713e-05}, {"id": 59, "seek": 27780, "start": 298.92, "end": 303.48, "text": " You can use a generic inference, give it the knowledge base that you have, the input of", "tokens": [509, 393, 764, 257, 19577, 38253, 11, 976, 309, 264, 3601, 3096, 300, 291, 362, 11, 264, 4846, 295], "temperature": 0.0, "avg_logprob": -0.11995674314953032, "compression_ratio": 1.7796610169491525, "no_speech_prob": 3.193791053490713e-05}, {"id": 60, "seek": 27780, "start": 303.48, "end": 306.32, "text": " your problem, and it will give you the answer.", "tokens": [428, 1154, 11, 293, 309, 486, 976, 291, 264, 1867, 13], "temperature": 0.0, "avg_logprob": -0.11995674314953032, "compression_ratio": 1.7796610169491525, "no_speech_prob": 3.193791053490713e-05}, {"id": 61, "seek": 30632, "start": 306.32, "end": 311.88, "text": " So for example, for the age riddle that I had in the beginning, the generic inference", "tokens": [407, 337, 1365, 11, 337, 264, 3205, 3973, 2285, 300, 286, 632, 294, 264, 2863, 11, 264, 19577, 38253], "temperature": 0.0, "avg_logprob": -0.13569003182488518, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.365486190887168e-05}, {"id": 62, "seek": 30632, "start": 311.88, "end": 314.36, "text": " is what we call model search.", "tokens": [307, 437, 321, 818, 2316, 3164, 13], "temperature": 0.0, "avg_logprob": -0.13569003182488518, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.365486190887168e-05}, {"id": 63, "seek": 30632, "start": 314.36, "end": 320.28, "text": " So we search for a model of the equation, and that's a very generic skill that can be", "tokens": [407, 321, 3164, 337, 257, 2316, 295, 264, 5367, 11, 293, 300, 311, 257, 588, 19577, 5389, 300, 393, 312], "temperature": 0.0, "avg_logprob": -0.13569003182488518, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.365486190887168e-05}, {"id": 64, "seek": 30632, "start": 320.28, "end": 327.28, "text": " implemented once and then applied in many different ways.", "tokens": [12270, 1564, 293, 550, 6456, 294, 867, 819, 2098, 13], "temperature": 0.0, "avg_logprob": -0.13569003182488518, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.365486190887168e-05}, {"id": 65, "seek": 30632, "start": 327.28, "end": 330.8, "text": " So what is knowledge then?", "tokens": [407, 437, 307, 3601, 550, 30], "temperature": 0.0, "avg_logprob": -0.13569003182488518, "compression_ratio": 1.5977653631284916, "no_speech_prob": 3.365486190887168e-05}, {"id": 66, "seek": 33080, "start": 330.8, "end": 336.52000000000004, "text": " Knowledge is a statement of knowledge, it's a statement that is true in all possible worlds,", "tokens": [32906, 307, 257, 5629, 295, 3601, 11, 309, 311, 257, 5629, 300, 307, 2074, 294, 439, 1944, 13401, 11], "temperature": 0.0, "avg_logprob": -0.19104832616345635, "compression_ratio": 1.923913043478261, "no_speech_prob": 9.269655856769532e-05}, {"id": 67, "seek": 33080, "start": 336.52000000000004, "end": 339.12, "text": " like for example, the second law of motion.", "tokens": [411, 337, 1365, 11, 264, 1150, 2101, 295, 5394, 13], "temperature": 0.0, "avg_logprob": -0.19104832616345635, "compression_ratio": 1.923913043478261, "no_speech_prob": 9.269655856769532e-05}, {"id": 68, "seek": 33080, "start": 339.12, "end": 344.04, "text": " It's true in all possible worlds that you can imagine.", "tokens": [467, 311, 2074, 294, 439, 1944, 13401, 300, 291, 393, 3811, 13], "temperature": 0.0, "avg_logprob": -0.19104832616345635, "compression_ratio": 1.923913043478261, "no_speech_prob": 9.269655856769532e-05}, {"id": 69, "seek": 33080, "start": 344.04, "end": 348.32, "text": " You can also say that a statement of knowledge is true in all acceptable worlds.", "tokens": [509, 393, 611, 584, 300, 257, 5629, 295, 3601, 307, 2074, 294, 439, 15513, 13401, 13], "temperature": 0.0, "avg_logprob": -0.19104832616345635, "compression_ratio": 1.923913043478261, "no_speech_prob": 9.269655856769532e-05}, {"id": 70, "seek": 33080, "start": 348.32, "end": 355.76, "text": " That's what the law says, like the regulations, what is acceptable as a behavior.", "tokens": [663, 311, 437, 264, 2101, 1619, 11, 411, 264, 12563, 11, 437, 307, 15513, 382, 257, 5223, 13], "temperature": 0.0, "avg_logprob": -0.19104832616345635, "compression_ratio": 1.923913043478261, "no_speech_prob": 9.269655856769532e-05}, {"id": 71, "seek": 35576, "start": 355.76, "end": 360.84, "text": " Sometimes a statement of knowledge can be about what you desire the world to be.", "tokens": [4803, 257, 5629, 295, 3601, 393, 312, 466, 437, 291, 7516, 264, 1002, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.13926335877063228, "compression_ratio": 1.6732283464566928, "no_speech_prob": 5.862382386112586e-05}, {"id": 72, "seek": 35576, "start": 360.84, "end": 367.03999999999996, "text": " So it's an expectation, or it can be about a particular situation that you face, and", "tokens": [407, 309, 311, 364, 14334, 11, 420, 309, 393, 312, 466, 257, 1729, 2590, 300, 291, 1851, 11, 293], "temperature": 0.0, "avg_logprob": -0.13926335877063228, "compression_ratio": 1.6732283464566928, "no_speech_prob": 5.862382386112586e-05}, {"id": 73, "seek": 35576, "start": 367.03999999999996, "end": 370.24, "text": " all these are different propositional attitudes.", "tokens": [439, 613, 366, 819, 7532, 2628, 25853, 13], "temperature": 0.0, "avg_logprob": -0.13926335877063228, "compression_ratio": 1.6732283464566928, "no_speech_prob": 5.862382386112586e-05}, {"id": 74, "seek": 35576, "start": 370.24, "end": 374.28, "text": " If you are interested in philosophy, you can go and look at Wittgenstein and his book,", "tokens": [759, 291, 366, 3102, 294, 10675, 11, 291, 393, 352, 293, 574, 412, 343, 593, 1766, 9089, 293, 702, 1446, 11], "temperature": 0.0, "avg_logprob": -0.13926335877063228, "compression_ratio": 1.6732283464566928, "no_speech_prob": 5.862382386112586e-05}, {"id": 75, "seek": 35576, "start": 374.28, "end": 380.24, "text": " but that's the idea behind this.", "tokens": [457, 300, 311, 264, 1558, 2261, 341, 13], "temperature": 0.0, "avg_logprob": -0.13926335877063228, "compression_ratio": 1.6732283464566928, "no_speech_prob": 5.862382386112586e-05}, {"id": 76, "seek": 35576, "start": 380.24, "end": 385.44, "text": " And so we have been thinking about what would be a good knowledge representation language,", "tokens": [400, 370, 321, 362, 668, 1953, 466, 437, 576, 312, 257, 665, 3601, 10290, 2856, 11], "temperature": 0.0, "avg_logprob": -0.13926335877063228, "compression_ratio": 1.6732283464566928, "no_speech_prob": 5.862382386112586e-05}, {"id": 77, "seek": 38544, "start": 385.44, "end": 391.88, "text": " what could be its good attributes, and it should be, it should use symbols that have", "tokens": [437, 727, 312, 1080, 665, 17212, 11, 293, 309, 820, 312, 11, 309, 820, 764, 16944, 300, 362], "temperature": 0.0, "avg_logprob": -0.14874430547786666, "compression_ratio": 1.8578947368421053, "no_speech_prob": 7.675993401790038e-05}, {"id": 78, "seek": 38544, "start": 391.88, "end": 403.44, "text": " very simple semantics, like the age of a person, like very simple predicates and functions.", "tokens": [588, 2199, 4361, 45298, 11, 411, 264, 3205, 295, 257, 954, 11, 411, 588, 2199, 47336, 1024, 293, 6828, 13], "temperature": 0.0, "avg_logprob": -0.14874430547786666, "compression_ratio": 1.8578947368421053, "no_speech_prob": 7.675993401790038e-05}, {"id": 79, "seek": 38544, "start": 403.44, "end": 407.4, "text": " It should have statements that are close to natural language, so it should be very easy", "tokens": [467, 820, 362, 12363, 300, 366, 1998, 281, 3303, 2856, 11, 370, 309, 820, 312, 588, 1858], "temperature": 0.0, "avg_logprob": -0.14874430547786666, "compression_ratio": 1.8578947368421053, "no_speech_prob": 7.675993401790038e-05}, {"id": 80, "seek": 38544, "start": 407.4, "end": 412.28, "text": " to express a statement in natural language into a statement in knowledge representation,", "tokens": [281, 5109, 257, 5629, 294, 3303, 2856, 666, 257, 5629, 294, 3601, 10290, 11], "temperature": 0.0, "avg_logprob": -0.14874430547786666, "compression_ratio": 1.8578947368421053, "no_speech_prob": 7.675993401790038e-05}, {"id": 81, "seek": 41228, "start": 412.28, "end": 416.15999999999997, "text": " and vice versa, when you have a representation of knowledge, you should be able to read it", "tokens": [293, 11964, 25650, 11, 562, 291, 362, 257, 10290, 295, 3601, 11, 291, 820, 312, 1075, 281, 1401, 309], "temperature": 0.0, "avg_logprob": -0.13338143798126573, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00014729944814462215}, {"id": 82, "seek": 41228, "start": 416.15999999999997, "end": 420.08, "text": " very easily into a natural language.", "tokens": [588, 3612, 666, 257, 3303, 2856, 13], "temperature": 0.0, "avg_logprob": -0.13338143798126573, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00014729944814462215}, {"id": 83, "seek": 41228, "start": 420.08, "end": 421.32, "text": " And it should be expressive.", "tokens": [400, 309, 820, 312, 40189, 13], "temperature": 0.0, "avg_logprob": -0.13338143798126573, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00014729944814462215}, {"id": 84, "seek": 41228, "start": 421.32, "end": 426.79999999999995, "text": " It should be able to express complex forms of knowledge.", "tokens": [467, 820, 312, 1075, 281, 5109, 3997, 6422, 295, 3601, 13], "temperature": 0.0, "avg_logprob": -0.13338143798126573, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00014729944814462215}, {"id": 85, "seek": 41228, "start": 426.79999999999995, "end": 434.44, "text": " So first order logic is a nice candidate for expressing knowledge.", "tokens": [407, 700, 1668, 9952, 307, 257, 1481, 11532, 337, 22171, 3601, 13], "temperature": 0.0, "avg_logprob": -0.13338143798126573, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00014729944814462215}, {"id": 86, "seek": 41228, "start": 434.44, "end": 440.91999999999996, "text": " That's why it's one of the basic language to express scientific knowledge, for example.", "tokens": [663, 311, 983, 309, 311, 472, 295, 264, 3875, 2856, 281, 5109, 8134, 3601, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.13338143798126573, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.00014729944814462215}, {"id": 87, "seek": 44092, "start": 440.92, "end": 445.84000000000003, "text": " We do use it in school for a good purpose.", "tokens": [492, 360, 764, 309, 294, 1395, 337, 257, 665, 4334, 13], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 88, "seek": 44092, "start": 445.84000000000003, "end": 450.92, "text": " It has indeed some symbols with simple semantics.", "tokens": [467, 575, 6451, 512, 16944, 365, 2199, 4361, 45298, 13], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 89, "seek": 44092, "start": 450.92, "end": 456.16, "text": " The statements are close to natural language, but still it is not as expressive as we would", "tokens": [440, 12363, 366, 1998, 281, 3303, 2856, 11, 457, 920, 309, 307, 406, 382, 40189, 382, 321, 576], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 90, "seek": 44092, "start": 456.16, "end": 457.92, "text": " like it to be.", "tokens": [411, 309, 281, 312, 13], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 91, "seek": 44092, "start": 457.92, "end": 462.04, "text": " So it has a construct like quantification.", "tokens": [407, 309, 575, 257, 7690, 411, 4426, 3774, 13], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 92, "seek": 44092, "start": 462.04, "end": 467.52000000000004, "text": " You can say for every x something is true, or there is an x such that something is true,", "tokens": [509, 393, 584, 337, 633, 2031, 746, 307, 2074, 11, 420, 456, 307, 364, 2031, 1270, 300, 746, 307, 2074, 11], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 93, "seek": 44092, "start": 467.52000000000004, "end": 469.52000000000004, "text": " but it doesn't have aggregates.", "tokens": [457, 309, 1177, 380, 362, 16743, 1024, 13], "temperature": 0.0, "avg_logprob": -0.14140593275731925, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.0001560537057230249}, {"id": 94, "seek": 46952, "start": 469.52, "end": 475.32, "text": " It doesn't have inductive definitions, which are complex ways of explaining how you would", "tokens": [467, 1177, 380, 362, 31612, 488, 21988, 11, 597, 366, 3997, 2098, 295, 13468, 577, 291, 576], "temperature": 0.0, "avg_logprob": -0.16286182403564453, "compression_ratio": 1.545, "no_speech_prob": 0.00015806336887180805}, {"id": 95, "seek": 46952, "start": 475.32, "end": 480.91999999999996, "text": " compute the value of some elements.", "tokens": [14722, 264, 2158, 295, 512, 4959, 13], "temperature": 0.0, "avg_logprob": -0.16286182403564453, "compression_ratio": 1.545, "no_speech_prob": 0.00015806336887180805}, {"id": 96, "seek": 46952, "start": 480.91999999999996, "end": 489.84, "text": " And so we introduce a language called fo dot, the dot being representing a list of extensions.", "tokens": [400, 370, 321, 5366, 257, 2856, 1219, 726, 5893, 11, 264, 5893, 885, 13460, 257, 1329, 295, 25129, 13], "temperature": 0.0, "avg_logprob": -0.16286182403564453, "compression_ratio": 1.545, "no_speech_prob": 0.00015806336887180805}, {"id": 97, "seek": 46952, "start": 489.84, "end": 498.28, "text": " And so it's first order logic extended with types, or so-called sorts in the literature,", "tokens": [400, 370, 309, 311, 700, 1668, 9952, 10913, 365, 3467, 11, 420, 370, 12, 11880, 7527, 294, 264, 10394, 11], "temperature": 0.0, "avg_logprob": -0.16286182403564453, "compression_ratio": 1.545, "no_speech_prob": 0.00015806336887180805}, {"id": 98, "seek": 49828, "start": 498.28, "end": 504.88, "text": " with definitions or inductive definitions, with arithmetic so that you can do some computations.", "tokens": [365, 21988, 420, 31612, 488, 21988, 11, 365, 42973, 370, 300, 291, 393, 360, 512, 2807, 763, 13], "temperature": 0.0, "avg_logprob": -0.2022822733675496, "compression_ratio": 1.7124463519313304, "no_speech_prob": 5.556444375542924e-05}, {"id": 99, "seek": 49828, "start": 504.88, "end": 510.2, "text": " It's still this point limited to linear arithmetic, so you cannot do transcendental functions", "tokens": [467, 311, 920, 341, 935, 5567, 281, 8213, 42973, 11, 370, 291, 2644, 360, 28535, 14533, 6828], "temperature": 0.0, "avg_logprob": -0.2022822733675496, "compression_ratio": 1.7124463519313304, "no_speech_prob": 5.556444375542924e-05}, {"id": 100, "seek": 49828, "start": 510.2, "end": 513.92, "text": " like sine and cosine.", "tokens": [411, 18609, 293, 23565, 13], "temperature": 0.0, "avg_logprob": -0.2022822733675496, "compression_ratio": 1.7124463519313304, "no_speech_prob": 5.556444375542924e-05}, {"id": 101, "seek": 49828, "start": 513.92, "end": 521.16, "text": " It supports aggregates, like counting the cardinality of elements that satisfy some conditions,", "tokens": [467, 9346, 16743, 1024, 11, 411, 13251, 264, 2920, 259, 1860, 295, 4959, 300, 19319, 512, 4487, 11], "temperature": 0.0, "avg_logprob": -0.2022822733675496, "compression_ratio": 1.7124463519313304, "no_speech_prob": 5.556444375542924e-05}, {"id": 102, "seek": 49828, "start": 521.16, "end": 526.64, "text": " as well as the minimal or maximum, et cetera, and it has some more advanced functions like", "tokens": [382, 731, 382, 264, 13206, 420, 6674, 11, 1030, 11458, 11, 293, 309, 575, 512, 544, 7339, 6828, 411], "temperature": 0.0, "avg_logprob": -0.2022822733675496, "compression_ratio": 1.7124463519313304, "no_speech_prob": 5.556444375542924e-05}, {"id": 103, "seek": 52664, "start": 526.64, "end": 531.04, "text": " you're dealing with partial functions, functions that are undefined for some values of their", "tokens": [291, 434, 6260, 365, 14641, 6828, 11, 6828, 300, 366, 674, 5666, 2001, 337, 512, 4190, 295, 641], "temperature": 0.0, "avg_logprob": -0.10840580680153587, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0002968295302707702}, {"id": 104, "seek": 52664, "start": 531.04, "end": 534.72, "text": " arguments and intentional objects.", "tokens": [12869, 293, 21935, 6565, 13], "temperature": 0.0, "avg_logprob": -0.10840580680153587, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0002968295302707702}, {"id": 105, "seek": 52664, "start": 534.72, "end": 539.28, "text": " You can look at the documentation if you want to have more details.", "tokens": [509, 393, 574, 412, 264, 14333, 498, 291, 528, 281, 362, 544, 4365, 13], "temperature": 0.0, "avg_logprob": -0.10840580680153587, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0002968295302707702}, {"id": 106, "seek": 52664, "start": 539.28, "end": 543.52, "text": " Maybe I can give you some examples of statements.", "tokens": [2704, 286, 393, 976, 291, 512, 5110, 295, 12363, 13], "temperature": 0.0, "avg_logprob": -0.10840580680153587, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0002968295302707702}, {"id": 107, "seek": 52664, "start": 543.52, "end": 552.24, "text": " The first one would be for regulation about COVID, and you could read it like this.", "tokens": [440, 700, 472, 576, 312, 337, 15062, 466, 4566, 11, 293, 291, 727, 1401, 309, 411, 341, 13], "temperature": 0.0, "avg_logprob": -0.10840580680153587, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.0002968295302707702}, {"id": 108, "seek": 55224, "start": 552.24, "end": 558.96, "text": " So if you want to do an activity of outdoor sports, then you have to finish it before", "tokens": [407, 498, 291, 528, 281, 360, 364, 5191, 295, 15942, 6573, 11, 550, 291, 362, 281, 2413, 309, 949], "temperature": 0.0, "avg_logprob": -0.17089532876943614, "compression_ratio": 1.6012269938650308, "no_speech_prob": 0.00016954116290435195}, {"id": 109, "seek": 55224, "start": 558.96, "end": 566.64, "text": " 8 p.m. in the evening, and then either you have a mask or you have a COVID-safe ticket.", "tokens": [1649, 280, 13, 76, 13, 294, 264, 5634, 11, 293, 550, 2139, 291, 362, 257, 6094, 420, 291, 362, 257, 4566, 12, 5790, 2106, 10550, 13], "temperature": 0.0, "avg_logprob": -0.17089532876943614, "compression_ratio": 1.6012269938650308, "no_speech_prob": 0.00016954116290435195}, {"id": 110, "seek": 55224, "start": 566.64, "end": 577.36, "text": " So the hat is a symbol, is a logic symbol for and, and the V is a logic symbol for all.", "tokens": [407, 264, 2385, 307, 257, 5986, 11, 307, 257, 9952, 5986, 337, 293, 11, 293, 264, 691, 307, 257, 9952, 5986, 337, 439, 13], "temperature": 0.0, "avg_logprob": -0.17089532876943614, "compression_ratio": 1.6012269938650308, "no_speech_prob": 0.00016954116290435195}, {"id": 111, "seek": 57736, "start": 577.36, "end": 582.96, "text": " The second statement would be like for an organization of an event like this one, or", "tokens": [440, 1150, 5629, 576, 312, 411, 337, 364, 4475, 295, 364, 2280, 411, 341, 472, 11, 420], "temperature": 0.0, "avg_logprob": -0.19754175039438102, "compression_ratio": 1.7688679245283019, "no_speech_prob": 0.00015779657405801117}, {"id": 112, "seek": 57736, "start": 582.96, "end": 586.16, "text": " for a course, planning of a course.", "tokens": [337, 257, 1164, 11, 5038, 295, 257, 1164, 13], "temperature": 0.0, "avg_logprob": -0.19754175039438102, "compression_ratio": 1.7688679245283019, "no_speech_prob": 0.00015779657405801117}, {"id": 113, "seek": 57736, "start": 586.16, "end": 593.6800000000001, "text": " For every course provided by the university, the number of students that attend the course", "tokens": [1171, 633, 1164, 5649, 538, 264, 5454, 11, 264, 1230, 295, 1731, 300, 6888, 264, 1164], "temperature": 0.0, "avg_logprob": -0.19754175039438102, "compression_ratio": 1.7688679245283019, "no_speech_prob": 0.00015779657405801117}, {"id": 114, "seek": 57736, "start": 593.6800000000001, "end": 597.8000000000001, "text": " should be less than the capacity of the room of the course.", "tokens": [820, 312, 1570, 813, 264, 6042, 295, 264, 1808, 295, 264, 1164, 13], "temperature": 0.0, "avg_logprob": -0.19754175039438102, "compression_ratio": 1.7688679245283019, "no_speech_prob": 0.00015779657405801117}, {"id": 115, "seek": 57736, "start": 597.8000000000001, "end": 602.64, "text": " That's really a very simple statement that can then be used into, for the search of a", "tokens": [663, 311, 534, 257, 588, 2199, 5629, 300, 393, 550, 312, 1143, 666, 11, 337, 264, 3164, 295, 257], "temperature": 0.0, "avg_logprob": -0.19754175039438102, "compression_ratio": 1.7688679245283019, "no_speech_prob": 0.00015779657405801117}, {"id": 116, "seek": 57736, "start": 602.64, "end": 606.24, "text": " correct planning.", "tokens": [3006, 5038, 13], "temperature": 0.0, "avg_logprob": -0.19754175039438102, "compression_ratio": 1.7688679245283019, "no_speech_prob": 0.00015779657405801117}, {"id": 117, "seek": 60624, "start": 606.24, "end": 614.6, "text": " The bottom example is an example of a definition where you have rules that can be applied.", "tokens": [440, 2767, 1365, 307, 364, 1365, 295, 257, 7123, 689, 291, 362, 4474, 300, 393, 312, 6456, 13], "temperature": 0.0, "avg_logprob": -0.1465452839346493, "compression_ratio": 1.5776397515527951, "no_speech_prob": 5.5911823437782004e-05}, {"id": 118, "seek": 60624, "start": 614.6, "end": 620.84, "text": " And the first, so it looks a little bit like a prologue statement that can then be used", "tokens": [400, 264, 700, 11, 370, 309, 1542, 257, 707, 857, 411, 257, 447, 4987, 622, 5629, 300, 393, 550, 312, 1143], "temperature": 0.0, "avg_logprob": -0.1465452839346493, "compression_ratio": 1.5776397515527951, "no_speech_prob": 5.5911823437782004e-05}, {"id": 119, "seek": 60624, "start": 620.84, "end": 629.84, "text": " to define the tax rate of, for, for, for, for selling a house, for example.", "tokens": [281, 6964, 264, 3366, 3314, 295, 11, 337, 11, 337, 11, 337, 11, 337, 6511, 257, 1782, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.1465452839346493, "compression_ratio": 1.5776397515527951, "no_speech_prob": 5.5911823437782004e-05}, {"id": 120, "seek": 62984, "start": 629.84, "end": 636.52, "text": " And so at KU Leuven, we have developed, we are developing these technologies.", "tokens": [400, 370, 412, 591, 52, 1456, 84, 553, 11, 321, 362, 4743, 11, 321, 366, 6416, 613, 7943, 13], "temperature": 0.0, "avg_logprob": -0.24123838905976197, "compression_ratio": 1.4979757085020242, "no_speech_prob": 0.00012334116036072373}, {"id": 121, "seek": 62984, "start": 636.52, "end": 640.24, "text": " I mentioned FODOT, which is one of the two knowledge representation language.", "tokens": [286, 2835, 479, 14632, 5068, 11, 597, 307, 472, 295, 264, 732, 3601, 10290, 2856, 13], "temperature": 0.0, "avg_logprob": -0.24123838905976197, "compression_ratio": 1.4979757085020242, "no_speech_prob": 0.00012334116036072373}, {"id": 122, "seek": 62984, "start": 640.24, "end": 641.84, "text": " This is the more powerful one.", "tokens": [639, 307, 264, 544, 4005, 472, 13], "temperature": 0.0, "avg_logprob": -0.24123838905976197, "compression_ratio": 1.4979757085020242, "no_speech_prob": 0.00012334116036072373}, {"id": 123, "seek": 62984, "start": 641.84, "end": 648.84, "text": " CDMN is a table-like way to, to introduce decision tables.", "tokens": [6743, 44, 45, 307, 257, 3199, 12, 4092, 636, 281, 11, 281, 5366, 3537, 8020, 13], "temperature": 0.0, "avg_logprob": -0.24123838905976197, "compression_ratio": 1.4979757085020242, "no_speech_prob": 0.00012334116036072373}, {"id": 124, "seek": 62984, "start": 648.84, "end": 654.36, "text": " And it can be used by business, by, by business analysts, I would say, in a, and it's a little", "tokens": [400, 309, 393, 312, 1143, 538, 1606, 11, 538, 11, 538, 1606, 31388, 11, 286, 576, 584, 11, 294, 257, 11, 293, 309, 311, 257, 707], "temperature": 0.0, "avg_logprob": -0.24123838905976197, "compression_ratio": 1.4979757085020242, "no_speech_prob": 0.00012334116036072373}, {"id": 125, "seek": 62984, "start": 654.36, "end": 657.44, "text": " bit simpler than, than FODOT.", "tokens": [857, 18587, 813, 11, 813, 479, 14632, 5068, 13], "temperature": 0.0, "avg_logprob": -0.24123838905976197, "compression_ratio": 1.4979757085020242, "no_speech_prob": 0.00012334116036072373}, {"id": 126, "seek": 65744, "start": 657.44, "end": 662.6800000000001, "text": " Then IDPZ3 is your reasoning engine that can use that knowledge base, as well as some", "tokens": [1396, 7348, 47, 57, 18, 307, 428, 21577, 2848, 300, 393, 764, 300, 3601, 3096, 11, 382, 731, 382, 512], "temperature": 0.0, "avg_logprob": -0.19731041363307408, "compression_ratio": 1.699588477366255, "no_speech_prob": 9.500052692601457e-05}, {"id": 127, "seek": 65744, "start": 662.6800000000001, "end": 668.1600000000001, "text": " inputs to compute, to, to, to perform some reasoning tasks.", "tokens": [15743, 281, 14722, 11, 281, 11, 281, 11, 281, 2042, 512, 21577, 9608, 13], "temperature": 0.0, "avg_logprob": -0.19731041363307408, "compression_ratio": 1.699588477366255, "no_speech_prob": 9.500052692601457e-05}, {"id": 128, "seek": 65744, "start": 668.1600000000001, "end": 672.5200000000001, "text": " And on top of that, we have developed the IC, the Interactive Concertant, as we call", "tokens": [400, 322, 1192, 295, 300, 11, 321, 362, 4743, 264, 14360, 11, 264, 5751, 12596, 18200, 911, 394, 11, 382, 321, 818], "temperature": 0.0, "avg_logprob": -0.19731041363307408, "compression_ratio": 1.699588477366255, "no_speech_prob": 9.500052692601457e-05}, {"id": 129, "seek": 65744, "start": 672.5200000000001, "end": 673.5200000000001, "text": " it.", "tokens": [309, 13], "temperature": 0.0, "avg_logprob": -0.19731041363307408, "compression_ratio": 1.699588477366255, "no_speech_prob": 9.500052692601457e-05}, {"id": 130, "seek": 65744, "start": 673.5200000000001, "end": 679.84, "text": " So it's a little bit like a machine that can pass a Turing test, but we vote the knowledge,", "tokens": [407, 309, 311, 257, 707, 857, 411, 257, 3479, 300, 393, 1320, 257, 314, 1345, 1500, 11, 457, 321, 4740, 264, 3601, 11], "temperature": 0.0, "avg_logprob": -0.19731041363307408, "compression_ratio": 1.699588477366255, "no_speech_prob": 9.500052692601457e-05}, {"id": 131, "seek": 65744, "start": 679.84, "end": 684.8000000000001, "text": " the natural language capabilities, but it can reason like a Turing test machine would,", "tokens": [264, 3303, 2856, 10862, 11, 457, 309, 393, 1778, 411, 257, 314, 1345, 1500, 3479, 576, 11], "temperature": 0.0, "avg_logprob": -0.19731041363307408, "compression_ratio": 1.699588477366255, "no_speech_prob": 9.500052692601457e-05}, {"id": 132, "seek": 68480, "start": 684.8, "end": 687.9599999999999, "text": " would need to do.", "tokens": [576, 643, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 133, "seek": 68480, "start": 687.9599999999999, "end": 690.52, "text": " And these parts are really generic.", "tokens": [400, 613, 3166, 366, 534, 19577, 13], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 134, "seek": 68480, "start": 690.52, "end": 696.76, "text": " So once it is developed, then it can be reused very, very easily.", "tokens": [407, 1564, 309, 307, 4743, 11, 550, 309, 393, 312, 319, 4717, 588, 11, 588, 3612, 13], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 135, "seek": 68480, "start": 696.76, "end": 701.5999999999999, "text": " So the IDPZ3 is the reasoning engine that has these capabilities.", "tokens": [407, 264, 7348, 47, 57, 18, 307, 264, 21577, 2848, 300, 575, 613, 10862, 13], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 136, "seek": 68480, "start": 701.5999999999999, "end": 706.9599999999999, "text": " It can ask questions like, is it possible, according to the knowledge base of the possible", "tokens": [467, 393, 1029, 1651, 411, 11, 307, 309, 1944, 11, 4650, 281, 264, 3601, 3096, 295, 264, 1944], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 137, "seek": 68480, "start": 706.9599999999999, "end": 709.4399999999999, "text": " words that we give him.", "tokens": [2283, 300, 321, 976, 796, 13], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 138, "seek": 68480, "start": 709.4399999999999, "end": 711.3199999999999, "text": " That's called model checking.", "tokens": [663, 311, 1219, 2316, 8568, 13], "temperature": 0.0, "avg_logprob": -0.15150924258761936, "compression_ratio": 1.5137614678899083, "no_speech_prob": 6.0829876019852236e-05}, {"id": 139, "seek": 71132, "start": 711.32, "end": 717.8000000000001, "text": " It can ask, you can ask him what would be a possible word, again, according to the knowledge,", "tokens": [467, 393, 1029, 11, 291, 393, 1029, 796, 437, 576, 312, 257, 1944, 1349, 11, 797, 11, 4650, 281, 264, 3601, 11], "temperature": 0.0, "avg_logprob": -0.21047268743100372, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.00024326385755557567}, {"id": 140, "seek": 71132, "start": 717.8000000000001, "end": 719.48, "text": " the knowledge base.", "tokens": [264, 3601, 3096, 13], "temperature": 0.0, "avg_logprob": -0.21047268743100372, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.00024326385755557567}, {"id": 141, "seek": 71132, "start": 719.48, "end": 723.5200000000001, "text": " That's model generation or model search, model expansion.", "tokens": [663, 311, 2316, 5125, 420, 2316, 3164, 11, 2316, 11260, 13], "temperature": 0.0, "avg_logprob": -0.21047268743100372, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.00024326385755557567}, {"id": 142, "seek": 71132, "start": 723.5200000000001, "end": 724.6, "text": " What is relevant?", "tokens": [708, 307, 7340, 30], "temperature": 0.0, "avg_logprob": -0.21047268743100372, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.00024326385755557567}, {"id": 143, "seek": 71132, "start": 724.6, "end": 731.1600000000001, "text": " What would, what should I get for, as information to check, to, to be able to construct a model", "tokens": [708, 576, 11, 437, 820, 286, 483, 337, 11, 382, 1589, 281, 1520, 11, 281, 11, 281, 312, 1075, 281, 7690, 257, 2316], "temperature": 0.0, "avg_logprob": -0.21047268743100372, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.00024326385755557567}, {"id": 144, "seek": 71132, "start": 731.1600000000001, "end": 737.2800000000001, "text": " of the, of the, of the, of the knowledge base?", "tokens": [295, 264, 11, 295, 264, 11, 295, 264, 11, 295, 264, 3601, 3096, 30], "temperature": 0.0, "avg_logprob": -0.21047268743100372, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.00024326385755557567}, {"id": 145, "seek": 73728, "start": 737.28, "end": 742.52, "text": " What are the consequences of some partial information that I have about a situation?", "tokens": [708, 366, 264, 10098, 295, 512, 14641, 1589, 300, 286, 362, 466, 257, 2590, 30], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 146, "seek": 73728, "start": 742.52, "end": 745.56, "text": " I have some information about the situation that I face.", "tokens": [286, 362, 512, 1589, 466, 264, 2590, 300, 286, 1851, 13], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 147, "seek": 73728, "start": 745.56, "end": 748.0799999999999, "text": " What are the consequences of that?", "tokens": [708, 366, 264, 10098, 295, 300, 30], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 148, "seek": 73728, "start": 748.0799999999999, "end": 752.3199999999999, "text": " It can then give you some explanations about those consequences.", "tokens": [467, 393, 550, 976, 291, 512, 28708, 466, 729, 10098, 13], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 149, "seek": 73728, "start": 752.3199999999999, "end": 753.56, "text": " Why this is a consequence?", "tokens": [1545, 341, 307, 257, 18326, 30], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 150, "seek": 73728, "start": 753.56, "end": 756.56, "text": " So it can explain its own reasoning.", "tokens": [407, 309, 393, 2903, 1080, 1065, 21577, 13], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 151, "seek": 73728, "start": 756.56, "end": 759.64, "text": " And it can also do some kind of optimization.", "tokens": [400, 309, 393, 611, 360, 512, 733, 295, 19618, 13], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 152, "seek": 73728, "start": 759.64, "end": 766.28, "text": " Again, you can look at the website to have some more information there.", "tokens": [3764, 11, 291, 393, 574, 412, 264, 3144, 281, 362, 512, 544, 1589, 456, 13], "temperature": 0.0, "avg_logprob": -0.13431468812545927, "compression_ratio": 1.9674418604651163, "no_speech_prob": 0.00010155192285310477}, {"id": 153, "seek": 76628, "start": 766.28, "end": 770.0, "text": " So the reasoning engine is hosted in a Python program.", "tokens": [407, 264, 21577, 2848, 307, 19204, 294, 257, 15329, 1461, 13], "temperature": 0.0, "avg_logprob": -0.14137716004342743, "compression_ratio": 1.5421686746987953, "no_speech_prob": 8.069765317486599e-05}, {"id": 154, "seek": 76628, "start": 770.0, "end": 776.88, "text": " So it's a Python program that will tell which inference to, to, to, to perform.", "tokens": [407, 309, 311, 257, 15329, 1461, 300, 486, 980, 597, 38253, 281, 11, 281, 11, 281, 11, 281, 2042, 13], "temperature": 0.0, "avg_logprob": -0.14137716004342743, "compression_ratio": 1.5421686746987953, "no_speech_prob": 8.069765317486599e-05}, {"id": 155, "seek": 76628, "start": 776.88, "end": 784.24, "text": " And so it's easily downloadable from the, the Python package index.", "tokens": [400, 370, 309, 311, 3612, 5484, 712, 490, 264, 11, 264, 15329, 7372, 8186, 13], "temperature": 0.0, "avg_logprob": -0.14137716004342743, "compression_ratio": 1.5421686746987953, "no_speech_prob": 8.069765317486599e-05}, {"id": 156, "seek": 76628, "start": 784.24, "end": 788.4, "text": " And so let me talk about the interactive consultants.", "tokens": [400, 370, 718, 385, 751, 466, 264, 15141, 38935, 13], "temperature": 0.0, "avg_logprob": -0.14137716004342743, "compression_ratio": 1.5421686746987953, "no_speech_prob": 8.069765317486599e-05}, {"id": 157, "seek": 78840, "start": 788.4, "end": 797.72, "text": " Let's say that you have some challenge to engineer a design that meets some customer requirements.", "tokens": [961, 311, 584, 300, 291, 362, 512, 3430, 281, 11403, 257, 1715, 300, 13961, 512, 5474, 7728, 13], "temperature": 0.0, "avg_logprob": -0.20289777454576993, "compression_ratio": 1.5870646766169154, "no_speech_prob": 5.571115616476163e-05}, {"id": 158, "seek": 78840, "start": 797.72, "end": 803.72, "text": " Well, to address that challenge, we develop a novel class of applets that can perform", "tokens": [1042, 11, 281, 2985, 300, 3430, 11, 321, 1499, 257, 7613, 1508, 295, 4988, 1385, 300, 393, 2042], "temperature": 0.0, "avg_logprob": -0.20289777454576993, "compression_ratio": 1.5870646766169154, "no_speech_prob": 5.571115616476163e-05}, {"id": 159, "seek": 78840, "start": 803.72, "end": 806.68, "text": " various forms of reasoning in, in the domain of expertise.", "tokens": [3683, 6422, 295, 21577, 294, 11, 294, 264, 9274, 295, 11769, 13], "temperature": 0.0, "avg_logprob": -0.20289777454576993, "compression_ratio": 1.5870646766169154, "no_speech_prob": 5.571115616476163e-05}, {"id": 160, "seek": 78840, "start": 806.68, "end": 813.48, "text": " And that will help the engineer finds proper design.", "tokens": [400, 300, 486, 854, 264, 11403, 10704, 2296, 1715, 13], "temperature": 0.0, "avg_logprob": -0.20289777454576993, "compression_ratio": 1.5870646766169154, "no_speech_prob": 5.571115616476163e-05}, {"id": 161, "seek": 78840, "start": 813.48, "end": 816.24, "text": " So how does that work?", "tokens": [407, 577, 775, 300, 589, 30], "temperature": 0.0, "avg_logprob": -0.20289777454576993, "compression_ratio": 1.5870646766169154, "no_speech_prob": 5.571115616476163e-05}, {"id": 162, "seek": 81624, "start": 816.24, "end": 822.4, "text": " So you have the requirements that come from, from the outside, from the environment, from,", "tokens": [407, 291, 362, 264, 7728, 300, 808, 490, 11, 490, 264, 2380, 11, 490, 264, 2823, 11, 490, 11], "temperature": 0.0, "avg_logprob": -0.17036037859709366, "compression_ratio": 1.8177570093457944, "no_speech_prob": 4.0559967601438984e-05}, {"id": 163, "seek": 81624, "start": 822.4, "end": 823.6, "text": " from, from the customer.", "tokens": [490, 11, 490, 264, 5474, 13], "temperature": 0.0, "avg_logprob": -0.17036037859709366, "compression_ratio": 1.8177570093457944, "no_speech_prob": 4.0559967601438984e-05}, {"id": 164, "seek": 81624, "start": 823.6, "end": 825.5600000000001, "text": " So you have a set of requirements.", "tokens": [407, 291, 362, 257, 992, 295, 7728, 13], "temperature": 0.0, "avg_logprob": -0.17036037859709366, "compression_ratio": 1.8177570093457944, "no_speech_prob": 4.0559967601438984e-05}, {"id": 165, "seek": 81624, "start": 825.5600000000001, "end": 831.5600000000001, "text": " The engineer will then interact with the application to enter the requirements that he knows.", "tokens": [440, 11403, 486, 550, 4648, 365, 264, 3861, 281, 3242, 264, 7728, 300, 415, 3255, 13], "temperature": 0.0, "avg_logprob": -0.17036037859709366, "compression_ratio": 1.8177570093457944, "no_speech_prob": 4.0559967601438984e-05}, {"id": 166, "seek": 81624, "start": 831.5600000000001, "end": 838.0, "text": " As well as some tentative decisions that he thinks would be proper design.", "tokens": [1018, 731, 382, 512, 7054, 1166, 5327, 300, 415, 7309, 576, 312, 2296, 1715, 13], "temperature": 0.0, "avg_logprob": -0.17036037859709366, "compression_ratio": 1.8177570093457944, "no_speech_prob": 4.0559967601438984e-05}, {"id": 167, "seek": 81624, "start": 838.0, "end": 842.5600000000001, "text": " And then in return, the system will ask him some additional question.", "tokens": [400, 550, 294, 2736, 11, 264, 1185, 486, 1029, 796, 512, 4497, 1168, 13], "temperature": 0.0, "avg_logprob": -0.17036037859709366, "compression_ratio": 1.8177570093457944, "no_speech_prob": 4.0559967601438984e-05}, {"id": 168, "seek": 84256, "start": 842.56, "end": 848.4, "text": " And really, you, you, you should know exactly what is the property of this material or what", "tokens": [400, 534, 11, 291, 11, 291, 11, 291, 820, 458, 2293, 437, 307, 264, 4707, 295, 341, 2527, 420, 437], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 169, "seek": 84256, "start": 848.4, "end": 851.92, "text": " is the expected operating temperature of the, of the system.", "tokens": [307, 264, 5176, 7447, 4292, 295, 264, 11, 295, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 170, "seek": 84256, "start": 851.92, "end": 856.04, "text": " So it's, it's starting to have a conversation with the engineer.", "tokens": [407, 309, 311, 11, 309, 311, 2891, 281, 362, 257, 3761, 365, 264, 11403, 13], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 171, "seek": 84256, "start": 856.04, "end": 860.4799999999999, "text": " It will tell him what are the prerequisites of his tentative decisions.", "tokens": [467, 486, 980, 796, 437, 366, 264, 38333, 15398, 3324, 295, 702, 7054, 1166, 5327, 13], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 172, "seek": 84256, "start": 860.4799999999999, "end": 864.92, "text": " So if he says, oh, I'd like to use steel, well, the system says, okay, but then you", "tokens": [407, 498, 415, 1619, 11, 1954, 11, 286, 1116, 411, 281, 764, 8269, 11, 731, 11, 264, 1185, 1619, 11, 1392, 11, 457, 550, 291], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 173, "seek": 84256, "start": 864.92, "end": 868.9599999999999, "text": " need to have, I don't know, some kind of pressure that is not higher than, than something", "tokens": [643, 281, 362, 11, 286, 500, 380, 458, 11, 512, 733, 295, 3321, 300, 307, 406, 2946, 813, 11, 813, 746], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 174, "seek": 84256, "start": 868.9599999999999, "end": 871.92, "text": " else, whatever.", "tokens": [1646, 11, 2035, 13], "temperature": 0.0, "avg_logprob": -0.1624755859375, "compression_ratio": 1.7418181818181817, "no_speech_prob": 2.8283309802645817e-05}, {"id": 175, "seek": 87192, "start": 871.92, "end": 875.8399999999999, "text": " It will tell him the consequences of his, of his decisions.", "tokens": [467, 486, 980, 796, 264, 10098, 295, 702, 11, 295, 702, 5327, 13], "temperature": 0.0, "avg_logprob": -0.1113256853680278, "compression_ratio": 1.674641148325359, "no_speech_prob": 6.370626942953095e-05}, {"id": 176, "seek": 87192, "start": 875.8399999999999, "end": 881.9599999999999, "text": " It will be able to give some explanations and then some do some optimization of the design.", "tokens": [467, 486, 312, 1075, 281, 976, 512, 28708, 293, 550, 512, 360, 512, 19618, 295, 264, 1715, 13], "temperature": 0.0, "avg_logprob": -0.1113256853680278, "compression_ratio": 1.674641148325359, "no_speech_prob": 6.370626942953095e-05}, {"id": 177, "seek": 87192, "start": 881.9599999999999, "end": 888.1999999999999, "text": " So it's really a consultant that will help the engineer come to a solution.", "tokens": [407, 309, 311, 534, 257, 24676, 300, 486, 854, 264, 11403, 808, 281, 257, 3827, 13], "temperature": 0.0, "avg_logprob": -0.1113256853680278, "compression_ratio": 1.674641148325359, "no_speech_prob": 6.370626942953095e-05}, {"id": 178, "seek": 87192, "start": 888.1999999999999, "end": 893.88, "text": " And all that with some proprietary expertise of the domain of, of, of interest that will", "tokens": [400, 439, 300, 365, 512, 38992, 11769, 295, 264, 9274, 295, 11, 295, 11, 295, 1179, 300, 486], "temperature": 0.0, "avg_logprob": -0.1113256853680278, "compression_ratio": 1.674641148325359, "no_speech_prob": 6.370626942953095e-05}, {"id": 179, "seek": 87192, "start": 893.88, "end": 897.68, "text": " be used to do the, the reasoning.", "tokens": [312, 1143, 281, 360, 264, 11, 264, 21577, 13], "temperature": 0.0, "avg_logprob": -0.1113256853680278, "compression_ratio": 1.674641148325359, "no_speech_prob": 6.370626942953095e-05}, {"id": 180, "seek": 89768, "start": 897.68, "end": 903.88, "text": " If I have time, I'll give you a quick demo, maybe I'll go through the slides first.", "tokens": [759, 286, 362, 565, 11, 286, 603, 976, 291, 257, 1702, 10723, 11, 1310, 286, 603, 352, 807, 264, 9788, 700, 13], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 181, "seek": 89768, "start": 903.88, "end": 908.0799999999999, "text": " So we are developing that in partnership with some industrial partners.", "tokens": [407, 321, 366, 6416, 300, 294, 9982, 365, 512, 9987, 4462, 13], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 182, "seek": 89768, "start": 908.0799999999999, "end": 912.4799999999999, "text": " It is a big multinational that prefers to keep privates.", "tokens": [467, 307, 257, 955, 45872, 1478, 300, 44334, 281, 1066, 2915, 1024, 13], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 183, "seek": 89768, "start": 912.4799999999999, "end": 913.64, "text": " I have five minutes left.", "tokens": [286, 362, 1732, 2077, 1411, 13], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 184, "seek": 89768, "start": 913.64, "end": 914.64, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 185, "seek": 89768, "start": 914.64, "end": 920.68, "text": " But we are also working with Siemens with Flandersmake, which is a research lab for", "tokens": [583, 321, 366, 611, 1364, 365, 3559, 45743, 365, 479, 1661, 433, 38705, 11, 597, 307, 257, 2132, 2715, 337], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 186, "seek": 89768, "start": 920.68, "end": 924.4399999999999, "text": " the industry in, in, in, in Flanders.", "tokens": [264, 3518, 294, 11, 294, 11, 294, 11, 294, 479, 1661, 433, 13], "temperature": 0.0, "avg_logprob": -0.20741460890997024, "compression_ratio": 1.592274678111588, "no_speech_prob": 0.0003144271904602647}, {"id": 187, "seek": 92444, "start": 924.44, "end": 930.72, "text": " We entirely select in the, the banking sector, heads up with notaries.", "tokens": [492, 7696, 3048, 294, 264, 11, 264, 18261, 6977, 11, 8050, 493, 365, 406, 4889, 13], "temperature": 0.0, "avg_logprob": -0.20709527925003407, "compression_ratio": 1.6395939086294415, "no_speech_prob": 0.000162809737958014}, {"id": 188, "seek": 92444, "start": 930.72, "end": 937.0, "text": " And the idea is to reduce the decision time of, of some experts.", "tokens": [400, 264, 1558, 307, 281, 5407, 264, 3537, 565, 295, 11, 295, 512, 8572, 13], "temperature": 0.0, "avg_logprob": -0.20709527925003407, "compression_ratio": 1.6395939086294415, "no_speech_prob": 0.000162809737958014}, {"id": 189, "seek": 92444, "start": 937.0, "end": 944.48, "text": " For example, in the Flandersmake, it was to reduce the time to select a glue, to glue", "tokens": [1171, 1365, 11, 294, 264, 479, 1661, 433, 38705, 11, 309, 390, 281, 5407, 264, 565, 281, 3048, 257, 8998, 11, 281, 8998], "temperature": 0.0, "avg_logprob": -0.20709527925003407, "compression_ratio": 1.6395939086294415, "no_speech_prob": 0.000162809737958014}, {"id": 190, "seek": 92444, "start": 944.48, "end": 946.8800000000001, "text": " two materials together.", "tokens": [732, 5319, 1214, 13], "temperature": 0.0, "avg_logprob": -0.20709527925003407, "compression_ratio": 1.6395939086294415, "no_speech_prob": 0.000162809737958014}, {"id": 191, "seek": 92444, "start": 946.8800000000001, "end": 952.08, "text": " And typically they had to go through data sheets and to find the proper glue.", "tokens": [400, 5850, 436, 632, 281, 352, 807, 1412, 15421, 293, 281, 915, 264, 2296, 8998, 13], "temperature": 0.0, "avg_logprob": -0.20709527925003407, "compression_ratio": 1.6395939086294415, "no_speech_prob": 0.000162809737958014}, {"id": 192, "seek": 95208, "start": 952.08, "end": 955.0400000000001, "text": " And with the tool, they cannot do it in less than five minutes.", "tokens": [400, 365, 264, 2290, 11, 436, 2644, 360, 309, 294, 1570, 813, 1732, 2077, 13], "temperature": 0.0, "avg_logprob": -0.19249103182838076, "compression_ratio": 1.6587677725118484, "no_speech_prob": 0.00012805373989976943}, {"id": 193, "seek": 95208, "start": 955.0400000000001, "end": 961.44, "text": " And with the development cause, that was quite, quite low.", "tokens": [400, 365, 264, 3250, 3082, 11, 300, 390, 1596, 11, 1596, 2295, 13], "temperature": 0.0, "avg_logprob": -0.19249103182838076, "compression_ratio": 1.6587677725118484, "no_speech_prob": 0.00012805373989976943}, {"id": 194, "seek": 95208, "start": 961.44, "end": 966.24, "text": " This is an example with the big multinational company.", "tokens": [639, 307, 364, 1365, 365, 264, 955, 45872, 1478, 2237, 13], "temperature": 0.0, "avg_logprob": -0.19249103182838076, "compression_ratio": 1.6587677725118484, "no_speech_prob": 0.00012805373989976943}, {"id": 195, "seek": 95208, "start": 966.24, "end": 970.2, "text": " They had to design custom industrial components.", "tokens": [814, 632, 281, 1715, 2375, 9987, 6677, 13], "temperature": 0.0, "avg_logprob": -0.19249103182838076, "compression_ratio": 1.6587677725118484, "no_speech_prob": 0.00012805373989976943}, {"id": 196, "seek": 95208, "start": 970.2, "end": 975.72, "text": " The expertise of doing that was in the head of the experienced engineers.", "tokens": [440, 11769, 295, 884, 300, 390, 294, 264, 1378, 295, 264, 6751, 11955, 13], "temperature": 0.0, "avg_logprob": -0.19249103182838076, "compression_ratio": 1.6587677725118484, "no_speech_prob": 0.00012805373989976943}, {"id": 197, "seek": 95208, "start": 975.72, "end": 978.0, "text": " But they wanted to empower the younger engineers.", "tokens": [583, 436, 1415, 281, 11071, 264, 7037, 11955, 13], "temperature": 0.0, "avg_logprob": -0.19249103182838076, "compression_ratio": 1.6587677725118484, "no_speech_prob": 0.00012805373989976943}, {"id": 198, "seek": 97800, "start": 978.0, "end": 982.8, "text": " And so we formalized the knowledge of the experts into the system.", "tokens": [400, 370, 321, 9860, 1602, 264, 3601, 295, 264, 8572, 666, 264, 1185, 13], "temperature": 0.0, "avg_logprob": -0.11948854898669056, "compression_ratio": 1.8361344537815125, "no_speech_prob": 4.795995482709259e-05}, {"id": 199, "seek": 97800, "start": 982.8, "end": 986.48, "text": " And then with the interactive consultant, the younger engineers can play around with", "tokens": [400, 550, 365, 264, 15141, 24676, 11, 264, 7037, 11955, 393, 862, 926, 365], "temperature": 0.0, "avg_logprob": -0.11948854898669056, "compression_ratio": 1.8361344537815125, "no_speech_prob": 4.795995482709259e-05}, {"id": 200, "seek": 97800, "start": 986.48, "end": 992.28, "text": " the different options and find a proper design that is right the first time.", "tokens": [264, 819, 3956, 293, 915, 257, 2296, 1715, 300, 307, 558, 264, 700, 565, 13], "temperature": 0.0, "avg_logprob": -0.11948854898669056, "compression_ratio": 1.8361344537815125, "no_speech_prob": 4.795995482709259e-05}, {"id": 201, "seek": 97800, "start": 992.28, "end": 997.28, "text": " And the fact of formalizing the knowledge in, in the system really makes that knowledge", "tokens": [400, 264, 1186, 295, 9860, 3319, 264, 3601, 294, 11, 294, 264, 1185, 534, 1669, 300, 3601], "temperature": 0.0, "avg_logprob": -0.11948854898669056, "compression_ratio": 1.8361344537815125, "no_speech_prob": 4.795995482709259e-05}, {"id": 202, "seek": 97800, "start": 997.28, "end": 1002.12, "text": " an asset of the company that can then be managed as an over asset.", "tokens": [364, 11999, 295, 264, 2237, 300, 393, 550, 312, 6453, 382, 364, 670, 11999, 13], "temperature": 0.0, "avg_logprob": -0.11948854898669056, "compression_ratio": 1.8361344537815125, "no_speech_prob": 4.795995482709259e-05}, {"id": 203, "seek": 97800, "start": 1002.12, "end": 1006.96, "text": " And the organization becomes a learning organization.", "tokens": [400, 264, 4475, 3643, 257, 2539, 4475, 13], "temperature": 0.0, "avg_logprob": -0.11948854898669056, "compression_ratio": 1.8361344537815125, "no_speech_prob": 4.795995482709259e-05}, {"id": 204, "seek": 100696, "start": 1006.96, "end": 1009.24, "text": " So why do we do this now?", "tokens": [407, 983, 360, 321, 360, 341, 586, 30], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 205, "seek": 100696, "start": 1009.24, "end": 1012.2, "text": " Why, why is it possible now and not before?", "tokens": [1545, 11, 983, 307, 309, 1944, 586, 293, 406, 949, 30], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 206, "seek": 100696, "start": 1012.2, "end": 1018.9200000000001, "text": " That's because there are new solvers that are capable of making those types of reasoning.", "tokens": [663, 311, 570, 456, 366, 777, 1404, 840, 300, 366, 8189, 295, 1455, 729, 3467, 295, 21577, 13], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 207, "seek": 100696, "start": 1018.9200000000001, "end": 1024.76, "text": " It's a big progress in the artificial intelligence world, but it's a little bit less well known", "tokens": [467, 311, 257, 955, 4205, 294, 264, 11677, 7599, 1002, 11, 457, 309, 311, 257, 707, 857, 1570, 731, 2570], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 208, "seek": 100696, "start": 1024.76, "end": 1026.72, "text": " than neural networks and so on.", "tokens": [813, 18161, 9590, 293, 370, 322, 13], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 209, "seek": 100696, "start": 1026.72, "end": 1029.56, "text": " But it is quite, quite a nice progress.", "tokens": [583, 309, 307, 1596, 11, 1596, 257, 1481, 4205, 13], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 210, "seek": 100696, "start": 1029.56, "end": 1033.88, "text": " And we try to put that into, into practice.", "tokens": [400, 321, 853, 281, 829, 300, 666, 11, 666, 3124, 13], "temperature": 0.0, "avg_logprob": -0.2140065561426748, "compression_ratio": 1.5720338983050848, "no_speech_prob": 0.0005018063238821924}, {"id": 211, "seek": 103388, "start": 1033.88, "end": 1037.7600000000002, "text": " And also, we are getting a new understanding of what is knowledge and how to use it.", "tokens": [400, 611, 11, 321, 366, 1242, 257, 777, 3701, 295, 437, 307, 3601, 293, 577, 281, 764, 309, 13], "temperature": 0.0, "avg_logprob": -0.23571917654454022, "compression_ratio": 1.4491978609625669, "no_speech_prob": 0.0001504034298704937}, {"id": 212, "seek": 103388, "start": 1037.7600000000002, "end": 1043.4, "text": " And that's why this is, this is an interesting area.", "tokens": [400, 300, 311, 983, 341, 307, 11, 341, 307, 364, 1880, 1859, 13], "temperature": 0.0, "avg_logprob": -0.23571917654454022, "compression_ratio": 1.4491978609625669, "no_speech_prob": 0.0001504034298704937}, {"id": 213, "seek": 103388, "start": 1043.4, "end": 1047.88, "text": " Let me go back to, to the demo.", "tokens": [961, 385, 352, 646, 281, 11, 281, 264, 10723, 13], "temperature": 0.0, "avg_logprob": -0.23571917654454022, "compression_ratio": 1.4491978609625669, "no_speech_prob": 0.0001504034298704937}, {"id": 214, "seek": 103388, "start": 1047.88, "end": 1054.96, "text": " So you can go to the IDPZ3, ooh, I don't have internet.", "tokens": [407, 291, 393, 352, 281, 264, 7348, 47, 57, 18, 11, 17024, 11, 286, 500, 380, 362, 4705, 13], "temperature": 0.0, "avg_logprob": -0.23571917654454022, "compression_ratio": 1.4491978609625669, "no_speech_prob": 0.0001504034298704937}, {"id": 215, "seek": 103388, "start": 1054.96, "end": 1057.96, "text": " I did have it before.", "tokens": [286, 630, 362, 309, 949, 13], "temperature": 0.0, "avg_logprob": -0.23571917654454022, "compression_ratio": 1.4491978609625669, "no_speech_prob": 0.0001504034298704937}, {"id": 216, "seek": 103388, "start": 1057.96, "end": 1062.0, "text": " Yeah, sorry about that.", "tokens": [865, 11, 2597, 466, 300, 13], "temperature": 0.0, "avg_logprob": -0.23571917654454022, "compression_ratio": 1.4491978609625669, "no_speech_prob": 0.0001504034298704937}, {"id": 217, "seek": 106200, "start": 1062.0, "end": 1065.64, "text": " So I won't be able to show it, but that's, that's the end of my presentation.", "tokens": [407, 286, 1582, 380, 312, 1075, 281, 855, 309, 11, 457, 300, 311, 11, 300, 311, 264, 917, 295, 452, 5860, 13], "temperature": 0.0, "avg_logprob": -0.3404796248988101, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.00019461232295725495}, {"id": 218, "seek": 106200, "start": 1065.64, "end": 1068.92, "text": " If there are any questions, I'll be happy to answer.", "tokens": [759, 456, 366, 604, 1651, 11, 286, 603, 312, 2055, 281, 1867, 13], "temperature": 0.0, "avg_logprob": -0.3404796248988101, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.00019461232295725495}, {"id": 219, "seek": 106200, "start": 1068.92, "end": 1069.92, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.3404796248988101, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.00019461232295725495}, {"id": 220, "seek": 106200, "start": 1069.92, "end": 1070.92, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.3404796248988101, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.00019461232295725495}, {"id": 221, "seek": 106200, "start": 1070.92, "end": 1085.92, "text": " Can you explain how this, how you approach differences from the classical expert systems?", "tokens": [1664, 291, 2903, 577, 341, 11, 577, 291, 3109, 7300, 490, 264, 13735, 5844, 3652, 30], "temperature": 0.0, "avg_logprob": -0.3404796248988101, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.00019461232295725495}, {"id": 222, "seek": 106200, "start": 1085.92, "end": 1088.92, "text": " What's the next step?", "tokens": [708, 311, 264, 958, 1823, 30], "temperature": 0.0, "avg_logprob": -0.3404796248988101, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.00019461232295725495}, {"id": 223, "seek": 108892, "start": 1088.92, "end": 1094.2, "text": " So, so yeah, the, the question is how is this, if I understand well, how is this different", "tokens": [407, 11, 370, 1338, 11, 264, 11, 264, 1168, 307, 577, 307, 341, 11, 498, 286, 1223, 731, 11, 577, 307, 341, 819], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 224, "seek": 108892, "start": 1094.2, "end": 1095.8000000000002, "text": " from expert systems, right?", "tokens": [490, 5844, 3652, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 225, "seek": 108892, "start": 1095.8000000000002, "end": 1099.76, "text": " Because expert systems were quite popular back in the 80s and 90s.", "tokens": [1436, 5844, 3652, 645, 1596, 3743, 646, 294, 264, 4688, 82, 293, 4289, 82, 13], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 226, "seek": 108892, "start": 1099.76, "end": 1101.76, "text": " And this looks very much the same.", "tokens": [400, 341, 1542, 588, 709, 264, 912, 13], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 227, "seek": 108892, "start": 1101.76, "end": 1104.96, "text": " But the thing is that expert systems were very much like prologue.", "tokens": [583, 264, 551, 307, 300, 5844, 3652, 645, 588, 709, 411, 447, 4987, 622, 13], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 228, "seek": 108892, "start": 1104.96, "end": 1110.52, "text": " And so they could make inferences in one direction, but, but they could not reason with, with,", "tokens": [400, 370, 436, 727, 652, 13596, 2667, 294, 472, 3513, 11, 457, 11, 457, 436, 727, 406, 1778, 365, 11, 365, 11], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 229, "seek": 108892, "start": 1110.52, "end": 1112.0800000000002, "text": " in, in any other direction.", "tokens": [294, 11, 294, 604, 661, 3513, 13], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 230, "seek": 108892, "start": 1112.0800000000002, "end": 1115.04, "text": " So it could not reason with partial information, for example.", "tokens": [407, 309, 727, 406, 1778, 365, 14641, 1589, 11, 337, 1365, 13], "temperature": 0.0, "avg_logprob": -0.1810239004710364, "compression_ratio": 1.8223938223938223, "no_speech_prob": 4.64083204860799e-05}, {"id": 231, "seek": 111504, "start": 1115.04, "end": 1120.12, "text": " Well, here, even with partial information, it's capable of doing some, some, some, to,", "tokens": [1042, 11, 510, 11, 754, 365, 14641, 1589, 11, 309, 311, 8189, 295, 884, 512, 11, 512, 11, 512, 11, 281, 11], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 232, "seek": 111504, "start": 1120.12, "end": 1123.1599999999999, "text": " to come up with, with some conclusions.", "tokens": [281, 808, 493, 365, 11, 365, 512, 22865, 13], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 233, "seek": 111504, "start": 1123.1599999999999, "end": 1128.1599999999999, "text": " So it's very different from, from programming from, from knowledge.", "tokens": [407, 309, 311, 588, 819, 490, 11, 490, 9410, 490, 11, 490, 3601, 13], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 234, "seek": 111504, "start": 1128.1599999999999, "end": 1129.1599999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 235, "seek": 111504, "start": 1129.1599999999999, "end": 1130.1599999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 236, "seek": 111504, "start": 1130.1599999999999, "end": 1137.1599999999999, "text": " So in the use case you presented, you said that you took the expert note.", "tokens": [407, 294, 264, 764, 1389, 291, 8212, 11, 291, 848, 300, 291, 1890, 264, 5844, 3637, 13], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 237, "seek": 111504, "start": 1137.1599999999999, "end": 1142.1599999999999, "text": " How can you formalize it in order to be used by the original engine?", "tokens": [1012, 393, 291, 9860, 1125, 309, 294, 1668, 281, 312, 1143, 538, 264, 3380, 2848, 30], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 238, "seek": 111504, "start": 1142.1599999999999, "end": 1143.1599999999999, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.31414589227414597, "compression_ratio": 1.628440366972477, "no_speech_prob": 0.0003374163352418691}, {"id": 239, "seek": 114316, "start": 1143.16, "end": 1146.16, "text": " So the representation of the data is on FODAR.", "tokens": [407, 264, 10290, 295, 264, 1412, 307, 322, 23501, 35, 1899, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 240, "seek": 114316, "start": 1146.16, "end": 1147.16, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 241, "seek": 114316, "start": 1147.16, "end": 1149.16, "text": " The representation of the knowledge is in FODAR.", "tokens": [440, 10290, 295, 264, 3601, 307, 294, 23501, 35, 1899, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 242, "seek": 114316, "start": 1149.16, "end": 1150.16, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 243, "seek": 114316, "start": 1150.16, "end": 1151.16, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 244, "seek": 114316, "start": 1151.16, "end": 1154.16, "text": " How, what's the process of transferring the data?", "tokens": [1012, 11, 437, 311, 264, 1399, 295, 31437, 264, 1412, 30], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 245, "seek": 114316, "start": 1154.16, "end": 1156.16, "text": " We're just discussing with experts.", "tokens": [492, 434, 445, 10850, 365, 8572, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 246, "seek": 114316, "start": 1156.16, "end": 1157.16, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 247, "seek": 114316, "start": 1157.16, "end": 1158.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 248, "seek": 114316, "start": 1158.16, "end": 1161.44, "text": " So for the moment it's done by a knowledge engineer, as we call it, who talks with the", "tokens": [407, 337, 264, 1623, 309, 311, 1096, 538, 257, 3601, 11403, 11, 382, 321, 818, 309, 11, 567, 6686, 365, 264], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 249, "seek": 114316, "start": 1161.44, "end": 1165.16, "text": " experts and who looks in the data sheets and then that formalize it.", "tokens": [8572, 293, 567, 1542, 294, 264, 1412, 15421, 293, 550, 300, 9860, 1125, 309, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 250, "seek": 114316, "start": 1165.16, "end": 1168.0800000000002, "text": " It's like a programmer if you want, but for knowledge.", "tokens": [467, 311, 411, 257, 32116, 498, 291, 528, 11, 457, 337, 3601, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 251, "seek": 114316, "start": 1168.0800000000002, "end": 1172.16, "text": " So he has to, to, to formalize the knowledge into the, the, the formal language.", "tokens": [407, 415, 575, 281, 11, 281, 11, 281, 9860, 1125, 264, 3601, 666, 264, 11, 264, 11, 264, 9860, 2856, 13], "temperature": 0.0, "avg_logprob": -0.26942413125262166, "compression_ratio": 1.8057553956834533, "no_speech_prob": 0.000107682375528384}, {"id": 252, "seek": 117216, "start": 1172.16, "end": 1173.16, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 253, "seek": 117216, "start": 1173.16, "end": 1174.16, "text": " And one more follow-up.", "tokens": [400, 472, 544, 1524, 12, 1010, 13], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 254, "seek": 117216, "start": 1174.16, "end": 1179.16, "text": " So data representation is something like a decision tree or something?", "tokens": [407, 1412, 10290, 307, 746, 411, 257, 3537, 4230, 420, 746, 30], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 255, "seek": 117216, "start": 1179.16, "end": 1183.16, "text": " The, the representation is what I showed earlier.", "tokens": [440, 11, 264, 10290, 307, 437, 286, 4712, 3071, 13], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 256, "seek": 117216, "start": 1183.16, "end": 1190.16, "text": " These are statements in logic, like the one I showed.", "tokens": [1981, 366, 12363, 294, 9952, 11, 411, 264, 472, 286, 4712, 13], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 257, "seek": 117216, "start": 1190.16, "end": 1196.16, "text": " Like this, this one's here.", "tokens": [1743, 341, 11, 341, 472, 311, 510, 13], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 258, "seek": 117216, "start": 1196.16, "end": 1200.16, "text": " Let's, let's go ahead and show.", "tokens": [961, 311, 11, 718, 311, 352, 2286, 293, 855, 13], "temperature": 0.0, "avg_logprob": -0.3132474824979708, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.0004030523123219609}, {"id": 259, "seek": 120016, "start": 1200.16, "end": 1207.16, "text": " So it would be statements like these that look very much like statement in English, but", "tokens": [407, 309, 576, 312, 12363, 411, 613, 300, 574, 588, 709, 411, 5629, 294, 3669, 11, 457], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 260, "seek": 120016, "start": 1207.16, "end": 1209.16, "text": " they would use some kind of formal.", "tokens": [436, 576, 764, 512, 733, 295, 9860, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 261, "seek": 120016, "start": 1209.16, "end": 1212.16, "text": " So the knowledge base is really just a text file.", "tokens": [407, 264, 3601, 3096, 307, 534, 445, 257, 2487, 3991, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 262, "seek": 120016, "start": 1212.16, "end": 1213.16, "text": " Okay.", "tokens": [1033, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 263, "seek": 120016, "start": 1213.16, "end": 1214.16, "text": " Steven?", "tokens": [12754, 30], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 264, "seek": 120016, "start": 1214.16, "end": 1215.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 265, "seek": 120016, "start": 1215.16, "end": 1216.16, "text": " Maybe one more.", "tokens": [2704, 472, 544, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 266, "seek": 120016, "start": 1216.16, "end": 1218.16, "text": " You mentioned humor.", "tokens": [509, 2835, 14318, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 267, "seek": 120016, "start": 1218.16, "end": 1220.16, "text": " You mentioned humor.", "tokens": [509, 2835, 14318, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 268, "seek": 120016, "start": 1220.16, "end": 1221.16, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 269, "seek": 120016, "start": 1221.16, "end": 1225.16, "text": " It's not capable of that yet, but we are working on it.", "tokens": [467, 311, 406, 8189, 295, 300, 1939, 11, 457, 321, 366, 1364, 322, 309, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 270, "seek": 120016, "start": 1225.16, "end": 1226.16, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 271, "seek": 120016, "start": 1226.16, "end": 1227.16, "text": " All right.", "tokens": [1057, 558, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 272, "seek": 120016, "start": 1227.16, "end": 1228.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.17698259966089092, "compression_ratio": 1.5813953488372092, "no_speech_prob": 0.000471132923848927}, {"id": 273, "seek": 122816, "start": 1228.16, "end": 1230.16, "text": " One more.", "tokens": [1485, 544, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 274, "seek": 122816, "start": 1230.16, "end": 1231.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 275, "seek": 122816, "start": 1231.16, "end": 1238.16, "text": " Was it a lot of work to customize Z3 to work with this?", "tokens": [3027, 309, 257, 688, 295, 589, 281, 19734, 1176, 18, 281, 589, 365, 341, 30], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 276, "seek": 122816, "start": 1238.16, "end": 1239.16, "text": " To work with this?", "tokens": [1407, 589, 365, 341, 30], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 277, "seek": 122816, "start": 1239.16, "end": 1240.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 278, "seek": 122816, "start": 1240.16, "end": 1241.16, "text": " It was some, some work.", "tokens": [467, 390, 512, 11, 512, 589, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 279, "seek": 122816, "start": 1241.16, "end": 1242.16, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 280, "seek": 122816, "start": 1242.16, "end": 1247.16, "text": " So the question is, we use Z3 as a back end for the reasoning engine.", "tokens": [407, 264, 1168, 307, 11, 321, 764, 1176, 18, 382, 257, 646, 917, 337, 264, 21577, 2848, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 281, "seek": 122816, "start": 1247.16, "end": 1252.16, "text": " How much work did it require to build to the reasoning engine, engine that we, we have?", "tokens": [1012, 709, 589, 630, 309, 3651, 281, 1322, 281, 264, 21577, 2848, 11, 2848, 300, 321, 11, 321, 362, 30], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 282, "seek": 122816, "start": 1252.16, "end": 1255.16, "text": " Of course, Z3 is already quite capable.", "tokens": [2720, 1164, 11, 1176, 18, 307, 1217, 1596, 8189, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 283, "seek": 122816, "start": 1255.16, "end": 1257.16, "text": " So it's very, very useful.", "tokens": [407, 309, 311, 588, 11, 588, 4420, 13], "temperature": 0.0, "avg_logprob": -0.18431663513183594, "compression_ratio": 1.6055045871559632, "no_speech_prob": 0.0002841473906300962}, {"id": 284, "seek": 125716, "start": 1257.16, "end": 1262.16, "text": " On top of that, we have new language constructs like aggregates that Z3 does not have.", "tokens": [1282, 1192, 295, 300, 11, 321, 362, 777, 2856, 7690, 82, 411, 16743, 1024, 300, 1176, 18, 775, 406, 362, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 285, "seek": 125716, "start": 1262.16, "end": 1263.16, "text": " Natively.", "tokens": [6821, 3413, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 286, "seek": 125716, "start": 1263.16, "end": 1269.16, "text": " And we have also some additional inference or reasoning capabilities on top of it.", "tokens": [400, 321, 362, 611, 512, 4497, 38253, 420, 21577, 10862, 322, 1192, 295, 309, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 287, "seek": 125716, "start": 1269.16, "end": 1274.16, "text": " Like the term, determination of what is the relevant question in the particular case.", "tokens": [1743, 264, 1433, 11, 18432, 295, 437, 307, 264, 7340, 1168, 294, 264, 1729, 1389, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 288, "seek": 125716, "start": 1274.16, "end": 1276.16, "text": " So, yeah.", "tokens": [407, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 289, "seek": 125716, "start": 1276.16, "end": 1281.16, "text": " The system capable of recognizing or even pointing out some coherent specifications in the knowledge", "tokens": [440, 1185, 8189, 295, 18538, 420, 754, 12166, 484, 512, 36239, 29448, 294, 264, 3601], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 290, "seek": 125716, "start": 1281.16, "end": 1282.16, "text": " base.", "tokens": [3096, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 291, "seek": 125716, "start": 1282.16, "end": 1283.16, "text": " Could you speak a bit louder?", "tokens": [7497, 291, 1710, 257, 857, 22717, 30], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 292, "seek": 125716, "start": 1283.16, "end": 1284.16, "text": " I don't hear you.", "tokens": [286, 500, 380, 1568, 291, 13], "temperature": 0.0, "avg_logprob": -0.27522300580225956, "compression_ratio": 1.5693430656934306, "no_speech_prob": 0.00026739281020127237}, {"id": 293, "seek": 128416, "start": 1284.16, "end": 1289.16, "text": " Yes, indeed.", "tokens": [1079, 11, 6451, 13], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 294, "seek": 128416, "start": 1289.16, "end": 1290.16, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 295, "seek": 128416, "start": 1290.16, "end": 1291.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 296, "seek": 128416, "start": 1291.16, "end": 1292.16, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 297, "seek": 128416, "start": 1292.16, "end": 1297.16, "text": " So the question is, what happens is the knowledge base have conflicting statements in it, because", "tokens": [407, 264, 1168, 307, 11, 437, 2314, 307, 264, 3601, 3096, 362, 43784, 12363, 294, 309, 11, 570], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 298, "seek": 128416, "start": 1297.16, "end": 1300.16, "text": " then it cannot reason correctly.", "tokens": [550, 309, 2644, 1778, 8944, 13], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 299, "seek": 128416, "start": 1300.16, "end": 1307.16, "text": " And actually, we have an inference that will try to extract the minimum set of instances", "tokens": [400, 767, 11, 321, 362, 364, 38253, 300, 486, 853, 281, 8947, 264, 7285, 992, 295, 14519], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 300, "seek": 128416, "start": 1307.16, "end": 1308.16, "text": " of statements in it.", "tokens": [295, 12363, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.23881342604353623, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.00023187669285107404}, {"id": 301, "seek": 130816, "start": 1308.16, "end": 1315.16, "text": " That will make the, that makes the knowledge base inconsistent.", "tokens": [663, 486, 652, 264, 11, 300, 1669, 264, 3601, 3096, 36891, 13], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 302, "seek": 130816, "start": 1315.16, "end": 1321.16, "text": " And then from that inconsistent set of statements, we can try, the knowledge engineer can try", "tokens": [400, 550, 490, 300, 36891, 992, 295, 12363, 11, 321, 393, 853, 11, 264, 3601, 11403, 393, 853], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 303, "seek": 130816, "start": 1321.16, "end": 1322.16, "text": " to resolve it.", "tokens": [281, 14151, 309, 13], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 304, "seek": 130816, "start": 1322.16, "end": 1324.16, "text": " Has that been used in practice?", "tokens": [8646, 300, 668, 1143, 294, 3124, 30], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 305, "seek": 130816, "start": 1324.16, "end": 1326.16, "text": " It is used, yes, indeed.", "tokens": [467, 307, 1143, 11, 2086, 11, 6451, 13], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 306, "seek": 130816, "start": 1326.16, "end": 1329.16, "text": " Has that helped the specific case?", "tokens": [8646, 300, 4254, 264, 2685, 1389, 30], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 307, "seek": 130816, "start": 1329.16, "end": 1332.16, "text": " In that specific case, I don't remember exactly.", "tokens": [682, 300, 2685, 1389, 11, 286, 500, 380, 1604, 2293, 13], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 308, "seek": 130816, "start": 1332.16, "end": 1335.16, "text": " I couldn't say, but it could be.", "tokens": [286, 2809, 380, 584, 11, 457, 309, 727, 312, 13], "temperature": 0.0, "avg_logprob": -0.18779049923545435, "compression_ratio": 1.6796116504854368, "no_speech_prob": 0.0002561808505561203}, {"id": 309, "seek": 133516, "start": 1335.16, "end": 1338.16, "text": " I don't know if.", "tokens": [286, 500, 380, 458, 498, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 310, "seek": 133516, "start": 1338.16, "end": 1341.16, "text": " Yeah, this should come in.", "tokens": [865, 11, 341, 820, 808, 294, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 311, "seek": 133516, "start": 1341.16, "end": 1346.16, "text": " No, no, come on.", "tokens": [883, 11, 572, 11, 808, 322, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 312, "seek": 133516, "start": 1346.16, "end": 1349.16, "text": " And your picture is a big form.", "tokens": [400, 428, 3036, 307, 257, 955, 1254, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 313, "seek": 133516, "start": 1349.16, "end": 1356.16, "text": " I thought you were expecting the general picture.", "tokens": [286, 1194, 291, 645, 9650, 264, 2674, 3036, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 314, "seek": 133516, "start": 1356.16, "end": 1358.16, "text": " There's still one question.", "tokens": [821, 311, 920, 472, 1168, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 315, "seek": 133516, "start": 1358.16, "end": 1360.16, "text": " If you could stay quiet, please.", "tokens": [759, 291, 727, 1754, 5677, 11, 1767, 13], "temperature": 0.0, "avg_logprob": -0.4421228152602466, "compression_ratio": 1.3355263157894737, "no_speech_prob": 0.010655288584530354}, {"id": 316, "seek": 136016, "start": 1360.16, "end": 1382.16, "text": " So the question is whether this could have applications in the medical field, where you", "tokens": [407, 264, 1168, 307, 1968, 341, 727, 362, 5821, 294, 264, 4625, 2519, 11, 689, 291], "temperature": 0.0, "avg_logprob": -0.3228857733986594, "compression_ratio": 1.2727272727272727, "no_speech_prob": 0.001960810273885727}, {"id": 317, "seek": 136016, "start": 1382.16, "end": 1386.16, "text": " have some, I need to reason with some probabilities.", "tokens": [362, 512, 11, 286, 643, 281, 1778, 365, 512, 33783, 13], "temperature": 0.0, "avg_logprob": -0.3228857733986594, "compression_ratio": 1.2727272727272727, "no_speech_prob": 0.001960810273885727}, {"id": 318, "seek": 138616, "start": 1386.16, "end": 1393.16, "text": " If there is this set of symptoms, there's a probability of such that this could happen.", "tokens": [759, 456, 307, 341, 992, 295, 8332, 11, 456, 311, 257, 8482, 295, 1270, 300, 341, 727, 1051, 13], "temperature": 0.0, "avg_logprob": -0.11870758099989458, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.00040701954276300967}, {"id": 319, "seek": 138616, "start": 1393.16, "end": 1397.16, "text": " At this point, we are not focusing on this type of reasoning with probabilities.", "tokens": [1711, 341, 935, 11, 321, 366, 406, 8416, 322, 341, 2010, 295, 21577, 365, 33783, 13], "temperature": 0.0, "avg_logprob": -0.11870758099989458, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.00040701954276300967}, {"id": 320, "seek": 138616, "start": 1397.16, "end": 1403.16, "text": " There's another group at KU11 that has developed the logic called probabilistic logic, which", "tokens": [821, 311, 1071, 1594, 412, 591, 52, 5348, 300, 575, 4743, 264, 9952, 1219, 31959, 3142, 9952, 11, 597], "temperature": 0.0, "avg_logprob": -0.11870758099989458, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.00040701954276300967}, {"id": 321, "seek": 138616, "start": 1403.16, "end": 1408.16, "text": " is an evolution of prologue, which goes in that direction.", "tokens": [307, 364, 9303, 295, 447, 4987, 622, 11, 597, 1709, 294, 300, 3513, 13], "temperature": 0.0, "avg_logprob": -0.11870758099989458, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.00040701954276300967}, {"id": 322, "seek": 138616, "start": 1408.16, "end": 1413.16, "text": " But this one does not do it.", "tokens": [583, 341, 472, 775, 406, 360, 309, 13], "temperature": 0.0, "avg_logprob": -0.11870758099989458, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.00040701954276300967}, {"id": 323, "seek": 141316, "start": 1413.16, "end": 1416.16, "text": " All right, thank you very much.", "tokens": [50364, 1057, 558, 11, 1309, 291, 588, 709, 13, 50514], "temperature": 0.0, "avg_logprob": -0.19785694642500443, "compression_ratio": 0.7948717948717948, "no_speech_prob": 0.0007996725616976619}], "language": "en"}