{"text": " Hello everybody. Thanks for being here. I'm so glad to be here for them. That's the first time in three years it's we're in person. So yeah, I'm so glad. So I'm Julien. I work at Mozilla for like 10 years now and so you can find me on mastodon, you can find me on Twitter, you can find me on Matrix, you can find me in Paris. And of course, so Mozilla you know that so well. We are responsible for Firefox. It's high performance, open-source, privacy-conscious. So I'm sure you already have it on desktop, you'll have it on your phone. So you link them together and use your history and your password. You know that already. Mozilla is also famous for the MGM of course, for all your development fantasies. And for VPN and for Firefox monitor, a lot of good stuff. But today I want to talk about the Firefox Profiler. So you can find this slide here and with the QR code as well. And let's dive in. So this is the thing I want you to leave the room with today. First, I want you to know what a Profiler is. I want you to know how you capture and how you can share a profile. How you can share a profile with your colleagues, but also how you can share a profile with us Mozilla in case you have performance problems with Firefox. And finally, we will do a quick tour of the UI so that you can have the first glance of how you can analyze a profile. So first, the Firefox Profiler, at least the UI, it's just a web app. It's a React-based web app with no privilege at all. It's used as a service worker so that it works offline. And it's also an open source project. You can find it on GitHub. You can do contributions. You can look at the source code. You can even adapt it for your needs. So yeah, come and do some React-based contribution with us. So first, what is a Profiler? So I was scared by this cat because it's so big here. So yeah, how do you measure prep performance? You can measure it on three different places, basically. You can measure it locally on your computer. You can measure on the CI with automated tests and benchmarks. And you can measure on your user's computer. This is called real user monitor. But there are also different timings characteristic, right? Locally, you get the results right away. You profile, you look at it, you get a measure. On the CI, you can get the result after maybe one hour. And with the real user monitor, of course, that takes a few days. And the Profiler, this is locally. So this has some advantages. Of course, you get the result right away. But this also has some drawbacks that we dive into later. So basically, this is a tool. This is just a tool in your toolbox, right? This helps you analyze performance issues in your application or in Firefox. But here it's more for your application, for your JavaScript or CSS stuff. This gives you insight and clues. But this is really detective work. When you have a bug and when you have a performance bug, that's the same. It's just a detective work. You have to look at the problem for different angles with different tools. With console.log sometimes. And this tool can make things easier. But it's just a tool. And yeah, that's something I think the most important with performance is that if you try to guess, you will guess wrong. Very commonly. Like, you know the web, right? You get some property on some DOM element and suddenly you get a full reflow of the whole page and it takes a few hundred milliseconds. And you can't see that really clearly with the code. So also with the JIT, with the JavaScript virtual machines, the JIT can optimize it for you, can optimize a lot of good things. And for other things, they will just be very slow and it's very difficult to know in advance. So yeah, do not guess. Try to measure being with the Firefox profiler, with the Chrome profiler or anything, even with performance that measure with timer in your code. But try to measure because not everything is always, it can be confused on the web, right? So now I'll try to do a live demo. Let's hopefully that will work. So I will show you how to capture a performance profile. Let's switch to that view. So this is a view of the profiler, but don't pay attention to the UI right now. Just because I have a bug. A bug was reported lately. This is very slow when we do a panning here. Like when I pan here, it's not so slow right now because the resolution is smaller here, but it's quite kind of slow here. So I want to measure this. I want to profile this. So what I'm doing is first I'm going on the profiler website. And there is this handy button here. Just click here. This has a profiler icon on the top with a bunch of settings here. So you can use, there's a settings title for web developer here. Or you can profile the whole navigator if you prefer, the whole browser. You can also edit settings here. You can change the interval, for example, if you want to reduce the overhead, or you can change some features. I will maybe talk about that later if I have enough time. But now I will just start the recording. And I will run my scenario. Like that. And then I can capture. And I get a view into what happened here. So we will type into the UI a bit later. And I will zoom in also because maybe it's a bit small for you. But I want to just to show you that you can also upload the profile then. Of course, there can be personal information in anything you can show from your browser. There can be things about URL you visited, about the tab that you have currently opened. Maybe there are some tabs you don't want anybody, everybody to know. And there can be paths in on your local computer. So you can disable some of these things. So for example, I will remove the, yes, the thread that I don't see here. I can upload here. The Wi-Fi works surprisingly well today. And then you have this ND URL. You can take this URL, give that to your co-worker. And this will open exactly the same view with the same profile. And so this is very handy to discuss that with your colleagues. And some of you can have different understanding of different types, different parts of your code. And so you can have different views like that. You can also share this URL with Gecko developers. If you have a problem in Firefox, you can open a bug, put this URL there. And that will help the Firefox developers solve problems that you may find in the browser. And finally, because that's your data, you can also delete it. There is a delete button here. You can delete the data that was uploaded. Because otherwise, it's public. You need to understand that it's very public. Of course, you need to know the URL. But otherwise, it's public. There is no password, whatever. So you can delete it when you don't need it anymore. So now I come back to the talk. We'll dive into the UI a bit later. But first, I want to explain how do you have your good data, yes. You need to isolate the problem as much as possible. Like, let's say you have a lot of tabs, lots of websites in background that are running stuff. The problem you want to test can be isolated. And maybe it will be some performance differences just because you have some websites in background. Or maybe you're building something in background of your computer and that will skew the results. So try to isolate the problem. Try to have a computer that is not too busy at that moment. When you get the data, try to ensure that the results you get are the ones you kind of expected. I can look at the screenshots, see if this is the thing you actually wanted. And you can keep recording. There is not one truth. There is several truths here. Depending on if your system wasn't in the best shape at that moment, maybe you need to record again so that you have something that you can work with. So no, yeah. Now I want to go into the capture data. So we have two types of data. The first type of data we do is sampling. So what we are doing is every interval, every millisecond here, we look at what the current program is executing. So we look at the stack. Here for example, this is an example of a program that starts with main. This is the main function of a program that we call A, that we call B, that we call C, C will return, et cetera. So this is like a normal program calling normal functions. And every millisecond we look at where we are. So here we are in A, no, we are in main, sorry. A, we don't see it here. But here we are in B. So we are in B, but we are also in A, right? And we are also in main. And then at this point we are also in B, in A and main. Here we are just in main, for example, and here we are both in main, in A, in B, and in C. And then so we take all these data and then we squeeze them together, which is a technical term to mean that we aggregate the data. So we squeeze them and so we show this information as far as the culture like that. So that's basically the same. So if I come back here, we can see basically main, we spend 100% there, right? It's the same function in the whole program. In A we spend maybe 70% there and in B we spend maybe 50%. And that's what we see in the culture then. Here the one at the top, we spend like 98% in it. But we spend also 56 samples in, right in this function. So the difference between this column and this column is that this column is this function including everything it's called. And this column is this function only, excluding everything it called. Another view is the frame graph. The frame graph is the same data, it's just more visual. The time we spend in one function is the width of a rectangle. The one at the top are the one where we are at one point. So very visually we can see where we spend time. So here we can see we do a lot of converse rendering stuff. This is exactly the scenario I was playing earlier, by the way. So we see that we're spending some time on the converse and we are maybe redrawing too much stuff at that point. So we can dive into that later also if we have time. I don't know how much and we have, okay. So yes, sampling is a view into the program that is currently executing. But we can miss things. Like you've seen here, because we do only every millisecond we can miss some of the codes and maybe they're important, right? So in this case we see only once because it was a bit longer but the small ones here we don't see that. This can be missed. So that's why we can instrument the code. So Firefox itself is instrumented for important things like the reflows, the restyles, or the GC, or things like that. But you can also instrument your own code with the performance timing API, performance.mark and performance.measure. You will see that in the profile. So that's what we call markers in our little technical jargon, some other profiler called that events. And we get like another view on what's happening in the program here. So for example, we get, we see all the events here. This one is the mouse move event because that's exactly what I was doing, right? I was moving the mouse while I was panning. So I get mouse move events that are pretty big actually. 30 milliseconds for one event, that means we spend maybe too much time there. We also see all the user timing because the code of the profiler is instrumented to add performance.measure anytime we do some converse drawing. But you can also see things that's happening inside Firefox. We can see, for example, the restyles here, the reflow here. We can see some GC. We can see some, when it's awake or when it's idle. So we can see all stuff, more or less complicated. We want to make this view a bit simpler for web developers. Currently you have still everything. And you need to probably ignore a part of this and just focus on what's important for you, like DOM events or restyles and graphic stuff. But it gives a, like a quite, yeah, you get all the stuff here. So you can dive into how Firefox works. You get the animation stuff. I don't have animations here, but you can see CSS animation. You can see the target of this seven. So yeah, markers are pretty interesting. So there are limits. As I said earlier, you're measuring on your own computer. And this also has drawbacks. Your computer, as a developer, usually it's very, it's very performant, right? You have the best CPU and you have a sheet load of memory. And so this means that the performance on your computer might be different than the performance on your user's computer. And also just the act of profiling itself can skew the results. Because we're, by inserting markers, for example, we need to lock the memory in some place to insert the data there. And we need to capture the stack sometimes. And this takes a lot of time. And so that can skew the results. We try it to be constant over read, but it's not always the case. So there are limits. And you need to sometimes take a step back. Sometimes what you're looking at, it's not an absolute truth, right? It can be, yeah, it's just a tool again. It's not absolute truth. You can take a step back. Maybe what I'm saying is not exactly the truth. Yeah, that's about it. So more and more about the UI now. I will show you how we can navigate in this UI. So you can put that full screen. It's not this one. Yeah, full screen. And zooming a bit. Okay. Come back at the first one. Okay. So what we have at the top? I can't choose the laser because you have to use the laser that reloads everything on this computer. So I don't use the laser. I use my finger. So at the top here, you have what we call the timeline. It's a chronological view of what's happening. At the top, you can see the screenshots. You can even, even over them and can see what's happening. So here I was on the first tab and then I go to the second tab and here I'm scrolling them, scrolling it and panning it. And yeah, that makes it possible visually to see what's happening and what was your scenario. And then you have a bunch of tracks here that are interesting. The first one here is the parent process. This is the process that is for the UI of Firefox. That's not really interesting in your case. There is also the localhost here. This is the localhost because I was running my UI on the localhost so that I could get the name of the functions. They're not minified because we don't support source maps yet. That will happen hopefully this year. But currently, we're not supporting that. So if we want to see the functions I'm profiling on the development version of our application, which also has some implication because, of course, the development version does use the development version of React. And the development version of React, it's slower than the production version of React. So again, taking a step back is always a good idea. Knowing that, we can dive into what's happening. So I can dive into this part because that's where things are happening, right? There is nothing elsewhere. So here you have what we call the category graph because the colors correspond to some category. Like the blue is dumb stuff. Yellow is JavaScript stuff. So here we clearly see that we don't do a lot of JavaScript. We mostly do a lot of something else. So dumb in this case is Canvas stuff. I will switch to JavaScript actually. Yeah. And then we see that we are doing the field stack stuff. So we see the stack when we hover, right? So we see this is a full stack of React sheet stuff. And then at the end, we do a, we just call field racks on the convasse API. That's where we are here. And so I can hover and have just a sense of what's happening. Also, I'm also setting field style here, for example. And I can click there and just select whatever is below. So this is basically a way to navigate into this profile. There is a red stuff here. The red stuff means we spend more than 50 milliseconds on waiting on the browser to catch up. That's probably a part where we want to zoom in, by the way. So we can do that. I can click there. I can zoom in here. And I can look at what's below. So better is what you can, all details you can see. So there are a bunch of tabs. The first one is the code tree. I already explained you a bit of that. Then there is a frame graph. I can show the frame graph by clicking. It's better, right? This is something I was showing up earlier. So I can also hover and see what was the stack and have an idea of what's happening here. The stack chart is chronological way of looking at your data. So here we can see, for example, I think we can see that we're rendering twice, I think, for example. So we're doing twice the same thing. And I think we see that more here. Like for one mouse move here, I have two renderers here. So that's how markers are handy, right? Here it's clear. It's clear that for one mouse move we do two renderers. And we shouldn't do that. So I guess I fixed my problem here. I need to look at the code. Of course, that doesn't solve everything. But I have an idea of where to look at my code. It means probably that I changed some state on some red component and that does a new render. So we need to look at the code then and see what's going on. Because this is just a tool. This doesn't solve everything. But that saves a shitload of time to find the right data. So let's come back at the slides. Okay. Some more advanced topics now. We also do, so the advanced topics are less exposed for a reason because they're also less finished, less polished. You can enable this stuff from the edit settings button that I was showing earlier. And one thing you can do is memory allocations. So we have two types of instrumentation for that. And I think this is working only in Firefox nightly. One of them is you can see every allocations happening in Firefox. Allocations and deallocations and things that are written, that are not deallocated, but they should. So you can see all these and where they were allocated to. And so another one is the JavaScript allocation. And that works also in release, I think. So you can have a look at the documentation here. So one thing that could be interesting for you is we have an importer for Chrome and Node also. So you can take the JSON of Chrome, put that in the profiler from the profiler homepage, and then you can do all the things I was showing you earlier. You can share it. You can zoom in maybe better than in the UI of Chrome and use some transform that I didn't explain today. But advanced stuff you can do with the UI. We do that Chrome count. And that's a parenthesis. Chrome tools are also very good. And that provides a different angle to your application. So because it's a different browser engine. So on Firefox and on Chrome, maybe it makes sense that they don't work the same. So they won't show the same thing. That's interesting to use both tools and the one in other browsers too. But you can import a new tool and share with your colleagues. So that's pretty interesting. And you can also compare profiles. So there are some documentation in your docs. So that makes it possible to see the impact of a change. Like you think you fixed the problem, you can compare the profile before and after and maybe check that you actually fixed your problem. Because as I said earlier, you need to measure. Sometimes you think you fixed it and you didn't. Or maybe you fixed one part of it. Like you fixed one state change. But there was another one elsewhere. And so there is still an update happening. So my conclusion now. Again, the most important thing is measure and guess. I think you really remember this sentence. This is just a tool in your toolbox. And yeah, sometimes you need to take a step back. You can also use a profiler to debug. I didn't insist much on that. But because you can instrument your code, you can also use it to just debug your code. It's not just for performance. You can just get a view of what your program looks like. What's happening in your program. And finally, you can share profiles with your team. Especially when you're distributed like we are at Mozilla. You can share it, put it on metrics or ISC or whatever things you're using and go to a Zoom code and then talk about that together. And thank you for being here at that time of the Sunday. So you can find the Firefox Profiler website here. Documentation also here. We have a matrix channel. So come tell if you have questions. If you have a question about a profile you want to ask or help to analyze it, come here. Ask us. We will gladly help you. And this slide you can find them here with this QR code too. So happy to answer questions now if you have questions. Thank you. So the microphone is here. There is a question there. I am very curious how you ensure security of the profile information because if I am on my usual admin account and I'm debugging and all the network information is there, it will have all the tokens and everything. All the API responses probably have the API keys because I'm debugging stuff. And somebody nefarious with a strong Russian accent could be waiting and just iterating over all the possible URLs all the time. And how do you deal with that? So let me refer to the question. What about the security? Because you can have API keys in the capture data, right, for example. So yes, that happens. But when you share a profile, you can uncheck the thing, include URLs and that will remove everything related to URLs. So you won't have that anymore. We don't capture headers and all that currently. We just capture the URLs. Even in the network configuration? Yeah. Okay. So it's not like the normal. Thanks for the talk. Small question. I believe there is kind of the same tool in the performance tab of the Firefox developer edition DevTools. Is there any difference between the two programs? Good question. I wanted to mention that I forgot. There used to be a performance panel in DevTools. We removed it. Now it's been replaced by this one. But we still have a performance panel in the DevTools. It's the same thing, except that when you open your DevTools, you have some overhead. So our recommendation is that you use the pop-up like I've shown here. Okay. So general recommendation, use the external profile. Okay. You can also profile your Firefox Android and you can profile remotely like that using the DevTools. Smaller question. Are there plans to add support for like flame graphs generated from birth, for example, for native applications just to use it as a kind of a viewer for other births not related to the web? Yes. So we have an importer for Linux birth, actually. We have some documentation about that. There is also the fantastic tool by Markus, which is somewhere here called Sempli. That is very well integrated with the profiler to profile native applications to. So it's called Sempli, S-A-M-P-L-Y. You can compile it on your computer. It's made in Rust and this is just an amazing tool to profile your native applications. So you can try that. Hello. It is the way to profile a full stack application. I mean the front end and the back end in the same time. You can't do that in the same time currently. What you can do is you can profile with of course the full stack. So it's probably not in back end maybe. Not Python. So there is a tool called FunctionTrade that I don't know well. That is using the profiler to profile Python applications. I don't know much about that. So I don't want to say too much things about that. So currently we can't do what you're saying directly. So sorry. Last question and then we'll close the room after of course all of us pick up all the trash that would be left if any. Thank you for the talk. Is there any plans to add support for importing P-Profiles which like some profilers output? So can you repeat that again? Sorry. Are there any plans to add support for P-Profiles which like for instance Go produces as an output of the profiler? You mean to have output of no I think I didn't get the question. Sorry. The output like the P-Profile format which is for profiling like we can get P-Profs with this viewer. Okay. We don't have we don't have really a plan but it's easy to I mean easy. It's not really easy but it's possible to write converters for our format. Our format is very well documented. So we have converter for Linux perf for Valgrants format called DHAT I think for ArcTrace for Chrome. And currently that's all but we also have an external converter for ETW from Windows and for I think GPR for GVM stuff. So it's possible to do converters. No we just need somebody to do it. Sorry. But if there is enough interest now maybe you can look at looking to it or at least help somebody doing do it. Thanks again and I don't know if you're going to be hanging around outside if you want to chat. And there are more stickers. And there were stickers. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.16, "text": " Hello everybody. Thanks for being here. I'm so glad to be here for them. That's the first", "tokens": [50364, 2425, 2201, 13, 2561, 337, 885, 510, 13, 286, 478, 370, 5404, 281, 312, 510, 337, 552, 13, 663, 311, 264, 700, 50922], "temperature": 0.0, "avg_logprob": -0.3365921915313344, "compression_ratio": 1.5470588235294118, "no_speech_prob": 0.2511743903160095}, {"id": 1, "seek": 0, "start": 11.16, "end": 18.400000000000002, "text": " time in three years it's we're in person. So yeah, I'm so glad. So I'm Julien. I work", "tokens": [50922, 565, 294, 1045, 924, 309, 311, 321, 434, 294, 954, 13, 407, 1338, 11, 286, 478, 370, 5404, 13, 407, 286, 478, 7174, 1053, 13, 286, 589, 51284], "temperature": 0.0, "avg_logprob": -0.3365921915313344, "compression_ratio": 1.5470588235294118, "no_speech_prob": 0.2511743903160095}, {"id": 2, "seek": 0, "start": 18.400000000000002, "end": 24.6, "text": " at Mozilla for like 10 years now and so you can find me on mastodon, you can find me on", "tokens": [51284, 412, 3335, 26403, 337, 411, 1266, 924, 586, 293, 370, 291, 393, 915, 385, 322, 27055, 378, 266, 11, 291, 393, 915, 385, 322, 51594], "temperature": 0.0, "avg_logprob": -0.3365921915313344, "compression_ratio": 1.5470588235294118, "no_speech_prob": 0.2511743903160095}, {"id": 3, "seek": 2460, "start": 24.6, "end": 31.6, "text": " Twitter, you can find me on Matrix, you can find me in Paris. And of course, so Mozilla", "tokens": [50364, 5794, 11, 291, 393, 915, 385, 322, 36274, 11, 291, 393, 915, 385, 294, 8380, 13, 400, 295, 1164, 11, 370, 3335, 26403, 50714], "temperature": 0.0, "avg_logprob": -0.34569264462119653, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.05826014280319214}, {"id": 4, "seek": 2460, "start": 31.6, "end": 38.72, "text": " you know that so well. We are responsible for Firefox. It's high performance, open-source,", "tokens": [50714, 291, 458, 300, 370, 731, 13, 492, 366, 6250, 337, 46613, 13, 467, 311, 1090, 3389, 11, 1269, 12, 41676, 11, 51070], "temperature": 0.0, "avg_logprob": -0.34569264462119653, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.05826014280319214}, {"id": 5, "seek": 2460, "start": 38.72, "end": 44.8, "text": " privacy-conscious. So I'm sure you already have it on desktop, you'll have it on your", "tokens": [51070, 11427, 12, 19877, 13, 407, 286, 478, 988, 291, 1217, 362, 309, 322, 14502, 11, 291, 603, 362, 309, 322, 428, 51374], "temperature": 0.0, "avg_logprob": -0.34569264462119653, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.05826014280319214}, {"id": 6, "seek": 2460, "start": 44.8, "end": 52.36, "text": " phone. So you link them together and use your history and your password. You know that already.", "tokens": [51374, 2593, 13, 407, 291, 2113, 552, 1214, 293, 764, 428, 2503, 293, 428, 11524, 13, 509, 458, 300, 1217, 13, 51752], "temperature": 0.0, "avg_logprob": -0.34569264462119653, "compression_ratio": 1.5584415584415585, "no_speech_prob": 0.05826014280319214}, {"id": 7, "seek": 5236, "start": 52.36, "end": 61.4, "text": " Mozilla is also famous for the MGM of course, for all your development fantasies. And for", "tokens": [50364, 3335, 26403, 307, 611, 4618, 337, 264, 376, 25152, 295, 1164, 11, 337, 439, 428, 3250, 31255, 530, 13, 400, 337, 50816], "temperature": 0.0, "avg_logprob": -0.26176490386327106, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.005290735047310591}, {"id": 8, "seek": 5236, "start": 61.4, "end": 65.64, "text": " VPN and for Firefox monitor, a lot of good stuff. But today I want to talk about the", "tokens": [50816, 24512, 293, 337, 46613, 6002, 11, 257, 688, 295, 665, 1507, 13, 583, 965, 286, 528, 281, 751, 466, 264, 51028], "temperature": 0.0, "avg_logprob": -0.26176490386327106, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.005290735047310591}, {"id": 9, "seek": 5236, "start": 65.64, "end": 72.24, "text": " Firefox Profiler. So you can find this slide here and with the QR code as well. And let's", "tokens": [51028, 46613, 6039, 5441, 13, 407, 291, 393, 915, 341, 4137, 510, 293, 365, 264, 32784, 3089, 382, 731, 13, 400, 718, 311, 51358], "temperature": 0.0, "avg_logprob": -0.26176490386327106, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.005290735047310591}, {"id": 10, "seek": 5236, "start": 72.24, "end": 81.0, "text": " dive in. So this is the thing I want you to leave the room with today. First, I want you", "tokens": [51358, 9192, 294, 13, 407, 341, 307, 264, 551, 286, 528, 291, 281, 1856, 264, 1808, 365, 965, 13, 2386, 11, 286, 528, 291, 51796], "temperature": 0.0, "avg_logprob": -0.26176490386327106, "compression_ratio": 1.5619469026548674, "no_speech_prob": 0.005290735047310591}, {"id": 11, "seek": 8100, "start": 81.04, "end": 86.16, "text": " to know what a Profiler is. I want you to know how you capture and how you can share", "tokens": [50366, 281, 458, 437, 257, 6039, 5441, 307, 13, 286, 528, 291, 281, 458, 577, 291, 7983, 293, 577, 291, 393, 2073, 50622], "temperature": 0.0, "avg_logprob": -0.17618045643863514, "compression_ratio": 1.842323651452282, "no_speech_prob": 0.015720991417765617}, {"id": 12, "seek": 8100, "start": 86.16, "end": 89.24, "text": " a profile. How you can share a profile with your colleagues, but also how you can share", "tokens": [50622, 257, 7964, 13, 1012, 291, 393, 2073, 257, 7964, 365, 428, 7734, 11, 457, 611, 577, 291, 393, 2073, 50776], "temperature": 0.0, "avg_logprob": -0.17618045643863514, "compression_ratio": 1.842323651452282, "no_speech_prob": 0.015720991417765617}, {"id": 13, "seek": 8100, "start": 89.24, "end": 95.32, "text": " a profile with us Mozilla in case you have performance problems with Firefox. And finally,", "tokens": [50776, 257, 7964, 365, 505, 3335, 26403, 294, 1389, 291, 362, 3389, 2740, 365, 46613, 13, 400, 2721, 11, 51080], "temperature": 0.0, "avg_logprob": -0.17618045643863514, "compression_ratio": 1.842323651452282, "no_speech_prob": 0.015720991417765617}, {"id": 14, "seek": 8100, "start": 95.32, "end": 99.6, "text": " we will do a quick tour of the UI so that you can have the first glance of how you can", "tokens": [51080, 321, 486, 360, 257, 1702, 3512, 295, 264, 15682, 370, 300, 291, 393, 362, 264, 700, 21094, 295, 577, 291, 393, 51294], "temperature": 0.0, "avg_logprob": -0.17618045643863514, "compression_ratio": 1.842323651452282, "no_speech_prob": 0.015720991417765617}, {"id": 15, "seek": 8100, "start": 99.6, "end": 107.4, "text": " analyze a profile. So first, the Firefox Profiler, at least the UI, it's just a web app. It's", "tokens": [51294, 12477, 257, 7964, 13, 407, 700, 11, 264, 46613, 6039, 5441, 11, 412, 1935, 264, 15682, 11, 309, 311, 445, 257, 3670, 724, 13, 467, 311, 51684], "temperature": 0.0, "avg_logprob": -0.17618045643863514, "compression_ratio": 1.842323651452282, "no_speech_prob": 0.015720991417765617}, {"id": 16, "seek": 10740, "start": 107.4, "end": 112.80000000000001, "text": " a React-based web app with no privilege at all. It's used as a service worker so that", "tokens": [50364, 257, 30644, 12, 6032, 3670, 724, 365, 572, 12122, 412, 439, 13, 467, 311, 1143, 382, 257, 2643, 11346, 370, 300, 50634], "temperature": 0.0, "avg_logprob": -0.21575923801697405, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.007808515802025795}, {"id": 17, "seek": 10740, "start": 112.80000000000001, "end": 119.16000000000001, "text": " it works offline. And it's also an open source project. You can find it on GitHub. You can", "tokens": [50634, 309, 1985, 21857, 13, 400, 309, 311, 611, 364, 1269, 4009, 1716, 13, 509, 393, 915, 309, 322, 23331, 13, 509, 393, 50952], "temperature": 0.0, "avg_logprob": -0.21575923801697405, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.007808515802025795}, {"id": 18, "seek": 10740, "start": 119.16000000000001, "end": 125.04, "text": " do contributions. You can look at the source code. You can even adapt it for your needs.", "tokens": [50952, 360, 15725, 13, 509, 393, 574, 412, 264, 4009, 3089, 13, 509, 393, 754, 6231, 309, 337, 428, 2203, 13, 51246], "temperature": 0.0, "avg_logprob": -0.21575923801697405, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.007808515802025795}, {"id": 19, "seek": 10740, "start": 125.04, "end": 135.64000000000001, "text": " So yeah, come and do some React-based contribution with us. So first, what is a Profiler? So", "tokens": [51246, 407, 1338, 11, 808, 293, 360, 512, 30644, 12, 6032, 13150, 365, 505, 13, 407, 700, 11, 437, 307, 257, 6039, 5441, 30, 407, 51776], "temperature": 0.0, "avg_logprob": -0.21575923801697405, "compression_ratio": 1.6272727272727272, "no_speech_prob": 0.007808515802025795}, {"id": 20, "seek": 13564, "start": 136.35999999999999, "end": 144.51999999999998, "text": " I was scared by this cat because it's so big here. So yeah, how do you measure", "tokens": [50400, 286, 390, 5338, 538, 341, 3857, 570, 309, 311, 370, 955, 510, 13, 407, 1338, 11, 577, 360, 291, 3481, 50808], "temperature": 0.0, "avg_logprob": -0.2567883673168364, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.005736582912504673}, {"id": 21, "seek": 13564, "start": 144.51999999999998, "end": 150.67999999999998, "text": " prep performance? You can measure it on three different places, basically. You can measure", "tokens": [50808, 2666, 3389, 30, 509, 393, 3481, 309, 322, 1045, 819, 3190, 11, 1936, 13, 509, 393, 3481, 51116], "temperature": 0.0, "avg_logprob": -0.2567883673168364, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.005736582912504673}, {"id": 22, "seek": 13564, "start": 150.67999999999998, "end": 159.79999999999998, "text": " it locally on your computer. You can measure on the CI with automated tests and benchmarks.", "tokens": [51116, 309, 16143, 322, 428, 3820, 13, 509, 393, 3481, 322, 264, 37777, 365, 18473, 6921, 293, 43751, 13, 51572], "temperature": 0.0, "avg_logprob": -0.2567883673168364, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.005736582912504673}, {"id": 23, "seek": 13564, "start": 159.79999999999998, "end": 165.11999999999998, "text": " And you can measure on your user's computer. This is called real user monitor. But there", "tokens": [51572, 400, 291, 393, 3481, 322, 428, 4195, 311, 3820, 13, 639, 307, 1219, 957, 4195, 6002, 13, 583, 456, 51838], "temperature": 0.0, "avg_logprob": -0.2567883673168364, "compression_ratio": 1.6990291262135921, "no_speech_prob": 0.005736582912504673}, {"id": 24, "seek": 16512, "start": 165.12, "end": 170.8, "text": " are also different timings characteristic, right? Locally, you get the results right away.", "tokens": [50364, 366, 611, 819, 524, 1109, 16282, 11, 558, 30, 12859, 379, 11, 291, 483, 264, 3542, 558, 1314, 13, 50648], "temperature": 0.0, "avg_logprob": -0.19056853269919372, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.001054600696079433}, {"id": 25, "seek": 16512, "start": 170.8, "end": 175.0, "text": " You profile, you look at it, you get a measure. On the CI, you can get the result after maybe", "tokens": [50648, 509, 7964, 11, 291, 574, 412, 309, 11, 291, 483, 257, 3481, 13, 1282, 264, 37777, 11, 291, 393, 483, 264, 1874, 934, 1310, 50858], "temperature": 0.0, "avg_logprob": -0.19056853269919372, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.001054600696079433}, {"id": 26, "seek": 16512, "start": 175.0, "end": 181.6, "text": " one hour. And with the real user monitor, of course, that takes a few days. And the", "tokens": [50858, 472, 1773, 13, 400, 365, 264, 957, 4195, 6002, 11, 295, 1164, 11, 300, 2516, 257, 1326, 1708, 13, 400, 264, 51188], "temperature": 0.0, "avg_logprob": -0.19056853269919372, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.001054600696079433}, {"id": 27, "seek": 16512, "start": 181.6, "end": 187.28, "text": " Profiler, this is locally. So this has some advantages. Of course, you get the result right", "tokens": [51188, 6039, 5441, 11, 341, 307, 16143, 13, 407, 341, 575, 512, 14906, 13, 2720, 1164, 11, 291, 483, 264, 1874, 558, 51472], "temperature": 0.0, "avg_logprob": -0.19056853269919372, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.001054600696079433}, {"id": 28, "seek": 16512, "start": 187.28, "end": 193.52, "text": " away. But this also has some drawbacks that we dive into later. So basically, this is", "tokens": [51472, 1314, 13, 583, 341, 611, 575, 512, 2642, 17758, 300, 321, 9192, 666, 1780, 13, 407, 1936, 11, 341, 307, 51784], "temperature": 0.0, "avg_logprob": -0.19056853269919372, "compression_ratio": 1.7768924302788844, "no_speech_prob": 0.001054600696079433}, {"id": 29, "seek": 19352, "start": 193.60000000000002, "end": 199.48000000000002, "text": " a tool. This is just a tool in your toolbox, right? This helps you analyze performance", "tokens": [50368, 257, 2290, 13, 639, 307, 445, 257, 2290, 294, 428, 44593, 11, 558, 30, 639, 3665, 291, 12477, 3389, 50662], "temperature": 0.0, "avg_logprob": -0.17711956096145343, "compression_ratio": 1.768, "no_speech_prob": 0.0048247287049889565}, {"id": 30, "seek": 19352, "start": 199.48000000000002, "end": 204.52, "text": " issues in your application or in Firefox. But here it's more for your application, for", "tokens": [50662, 2663, 294, 428, 3861, 420, 294, 46613, 13, 583, 510, 309, 311, 544, 337, 428, 3861, 11, 337, 50914], "temperature": 0.0, "avg_logprob": -0.17711956096145343, "compression_ratio": 1.768, "no_speech_prob": 0.0048247287049889565}, {"id": 31, "seek": 19352, "start": 204.52, "end": 211.76000000000002, "text": " your JavaScript or CSS stuff. This gives you insight and clues. But this is really detective", "tokens": [50914, 428, 15778, 420, 24387, 1507, 13, 639, 2709, 291, 11269, 293, 20936, 13, 583, 341, 307, 534, 25571, 51276], "temperature": 0.0, "avg_logprob": -0.17711956096145343, "compression_ratio": 1.768, "no_speech_prob": 0.0048247287049889565}, {"id": 32, "seek": 19352, "start": 211.76000000000002, "end": 215.92000000000002, "text": " work. When you have a bug and when you have a performance bug, that's the same. It's just", "tokens": [51276, 589, 13, 1133, 291, 362, 257, 7426, 293, 562, 291, 362, 257, 3389, 7426, 11, 300, 311, 264, 912, 13, 467, 311, 445, 51484], "temperature": 0.0, "avg_logprob": -0.17711956096145343, "compression_ratio": 1.768, "no_speech_prob": 0.0048247287049889565}, {"id": 33, "seek": 19352, "start": 215.92000000000002, "end": 221.4, "text": " a detective work. You have to look at the problem for different angles with different", "tokens": [51484, 257, 25571, 589, 13, 509, 362, 281, 574, 412, 264, 1154, 337, 819, 14708, 365, 819, 51758], "temperature": 0.0, "avg_logprob": -0.17711956096145343, "compression_ratio": 1.768, "no_speech_prob": 0.0048247287049889565}, {"id": 34, "seek": 22140, "start": 221.44, "end": 227.8, "text": " tools. With console.log sometimes. And this tool can make things easier. But it's just", "tokens": [50366, 3873, 13, 2022, 11076, 13, 4987, 2171, 13, 400, 341, 2290, 393, 652, 721, 3571, 13, 583, 309, 311, 445, 50684], "temperature": 0.0, "avg_logprob": -0.2384993949632966, "compression_ratio": 1.5309734513274336, "no_speech_prob": 0.002666688524186611}, {"id": 35, "seek": 22140, "start": 227.8, "end": 235.52, "text": " a tool. And yeah, that's something I think the most important with performance is that", "tokens": [50684, 257, 2290, 13, 400, 1338, 11, 300, 311, 746, 286, 519, 264, 881, 1021, 365, 3389, 307, 300, 51070], "temperature": 0.0, "avg_logprob": -0.2384993949632966, "compression_ratio": 1.5309734513274336, "no_speech_prob": 0.002666688524186611}, {"id": 36, "seek": 22140, "start": 235.52, "end": 242.52, "text": " if you try to guess, you will guess wrong. Very commonly. Like, you know the web, right?", "tokens": [51070, 498, 291, 853, 281, 2041, 11, 291, 486, 2041, 2085, 13, 4372, 12719, 13, 1743, 11, 291, 458, 264, 3670, 11, 558, 30, 51420], "temperature": 0.0, "avg_logprob": -0.2384993949632966, "compression_ratio": 1.5309734513274336, "no_speech_prob": 0.002666688524186611}, {"id": 37, "seek": 22140, "start": 242.52, "end": 247.92000000000002, "text": " You get some property on some DOM element and suddenly you get a full reflow of the", "tokens": [51420, 509, 483, 512, 4707, 322, 512, 35727, 4478, 293, 5800, 291, 483, 257, 1577, 1895, 14107, 295, 264, 51690], "temperature": 0.0, "avg_logprob": -0.2384993949632966, "compression_ratio": 1.5309734513274336, "no_speech_prob": 0.002666688524186611}, {"id": 38, "seek": 24792, "start": 247.95999999999998, "end": 253.95999999999998, "text": " whole page and it takes a few hundred milliseconds. And you can't see that really clearly with", "tokens": [50366, 1379, 3028, 293, 309, 2516, 257, 1326, 3262, 34184, 13, 400, 291, 393, 380, 536, 300, 534, 4448, 365, 50666], "temperature": 0.0, "avg_logprob": -0.22268227771320173, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.007793410215526819}, {"id": 39, "seek": 24792, "start": 253.95999999999998, "end": 260.96, "text": " the code. So also with the JIT, with the JavaScript virtual machines, the JIT can optimize it", "tokens": [50666, 264, 3089, 13, 407, 611, 365, 264, 508, 3927, 11, 365, 264, 15778, 6374, 8379, 11, 264, 508, 3927, 393, 19719, 309, 51016], "temperature": 0.0, "avg_logprob": -0.22268227771320173, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.007793410215526819}, {"id": 40, "seek": 24792, "start": 261.56, "end": 267.56, "text": " for you, can optimize a lot of good things. And for other things, they will just be very", "tokens": [51046, 337, 291, 11, 393, 19719, 257, 688, 295, 665, 721, 13, 400, 337, 661, 721, 11, 436, 486, 445, 312, 588, 51346], "temperature": 0.0, "avg_logprob": -0.22268227771320173, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.007793410215526819}, {"id": 41, "seek": 24792, "start": 267.56, "end": 272.71999999999997, "text": " slow and it's very difficult to know in advance. So yeah, do not guess. Try to measure being", "tokens": [51346, 2964, 293, 309, 311, 588, 2252, 281, 458, 294, 7295, 13, 407, 1338, 11, 360, 406, 2041, 13, 6526, 281, 3481, 885, 51604], "temperature": 0.0, "avg_logprob": -0.22268227771320173, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.007793410215526819}, {"id": 42, "seek": 24792, "start": 272.71999999999997, "end": 277.32, "text": " with the Firefox profiler, with the Chrome profiler or anything, even with performance", "tokens": [51604, 365, 264, 46613, 1740, 5441, 11, 365, 264, 15327, 1740, 5441, 420, 1340, 11, 754, 365, 3389, 51834], "temperature": 0.0, "avg_logprob": -0.22268227771320173, "compression_ratio": 1.6925925925925926, "no_speech_prob": 0.007793410215526819}, {"id": 43, "seek": 27732, "start": 277.36, "end": 283.36, "text": " that measure with timer in your code. But try to measure because not everything is always,", "tokens": [50366, 300, 3481, 365, 19247, 294, 428, 3089, 13, 583, 853, 281, 3481, 570, 406, 1203, 307, 1009, 11, 50666], "temperature": 0.0, "avg_logprob": -0.24730930725733438, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.001126940711401403}, {"id": 44, "seek": 27732, "start": 283.36, "end": 290.36, "text": " it can be confused on the web, right? So now I'll try to do a live demo. Let's hopefully", "tokens": [50666, 309, 393, 312, 9019, 322, 264, 3670, 11, 558, 30, 407, 586, 286, 603, 853, 281, 360, 257, 1621, 10723, 13, 961, 311, 4696, 51016], "temperature": 0.0, "avg_logprob": -0.24730930725733438, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.001126940711401403}, {"id": 45, "seek": 27732, "start": 290.56, "end": 297.56, "text": " that will work. So I will show you how to capture a performance profile. Let's switch", "tokens": [51026, 300, 486, 589, 13, 407, 286, 486, 855, 291, 577, 281, 7983, 257, 3389, 7964, 13, 961, 311, 3679, 51376], "temperature": 0.0, "avg_logprob": -0.24730930725733438, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.001126940711401403}, {"id": 46, "seek": 27732, "start": 297.84, "end": 302.48, "text": " to that view. So this is a view of the profiler, but don't pay attention to the UI right now.", "tokens": [51390, 281, 300, 1910, 13, 407, 341, 307, 257, 1910, 295, 264, 1740, 5441, 11, 457, 500, 380, 1689, 3202, 281, 264, 15682, 558, 586, 13, 51622], "temperature": 0.0, "avg_logprob": -0.24730930725733438, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.001126940711401403}, {"id": 47, "seek": 30248, "start": 302.6, "end": 309.6, "text": " Just because I have a bug. A bug was reported lately. This is very slow when we do a panning", "tokens": [50370, 1449, 570, 286, 362, 257, 7426, 13, 316, 7426, 390, 7055, 12881, 13, 639, 307, 588, 2964, 562, 321, 360, 257, 2462, 773, 50720], "temperature": 0.0, "avg_logprob": -0.1852367243815943, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.005517595447599888}, {"id": 48, "seek": 30248, "start": 309.76, "end": 316.76, "text": " here. Like when I pan here, it's not so slow right now because the resolution is smaller", "tokens": [50728, 510, 13, 1743, 562, 286, 2462, 510, 11, 309, 311, 406, 370, 2964, 558, 586, 570, 264, 8669, 307, 4356, 51078], "temperature": 0.0, "avg_logprob": -0.1852367243815943, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.005517595447599888}, {"id": 49, "seek": 30248, "start": 317.84000000000003, "end": 324.84000000000003, "text": " here, but it's quite kind of slow here. So I want to measure this. I want to profile", "tokens": [51132, 510, 11, 457, 309, 311, 1596, 733, 295, 2964, 510, 13, 407, 286, 528, 281, 3481, 341, 13, 286, 528, 281, 7964, 51482], "temperature": 0.0, "avg_logprob": -0.1852367243815943, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.005517595447599888}, {"id": 50, "seek": 30248, "start": 325.04, "end": 331.88, "text": " this. So what I'm doing is first I'm going on the profiler website. And there is this", "tokens": [51492, 341, 13, 407, 437, 286, 478, 884, 307, 700, 286, 478, 516, 322, 264, 1740, 5441, 3144, 13, 400, 456, 307, 341, 51834], "temperature": 0.0, "avg_logprob": -0.1852367243815943, "compression_ratio": 1.6221198156682028, "no_speech_prob": 0.005517595447599888}, {"id": 51, "seek": 33188, "start": 331.96, "end": 338.24, "text": " handy button here. Just click here. This has a profiler icon on the top with a bunch of", "tokens": [50368, 13239, 2960, 510, 13, 1449, 2052, 510, 13, 639, 575, 257, 1740, 5441, 6528, 322, 264, 1192, 365, 257, 3840, 295, 50682], "temperature": 0.0, "avg_logprob": -0.26445034572056364, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.00222000596113503}, {"id": 52, "seek": 33188, "start": 338.24, "end": 344.64, "text": " settings here. So you can use, there's a settings title for web developer here. Or you can profile", "tokens": [50682, 6257, 510, 13, 407, 291, 393, 764, 11, 456, 311, 257, 6257, 4876, 337, 3670, 10754, 510, 13, 1610, 291, 393, 7964, 51002], "temperature": 0.0, "avg_logprob": -0.26445034572056364, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.00222000596113503}, {"id": 53, "seek": 33188, "start": 344.64, "end": 350.44, "text": " the whole navigator if you prefer, the whole browser. You can also edit settings here.", "tokens": [51002, 264, 1379, 7407, 1639, 498, 291, 4382, 11, 264, 1379, 11185, 13, 509, 393, 611, 8129, 6257, 510, 13, 51292], "temperature": 0.0, "avg_logprob": -0.26445034572056364, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.00222000596113503}, {"id": 54, "seek": 33188, "start": 350.44, "end": 355.32, "text": " You can change the interval, for example, if you want to reduce the overhead, or you", "tokens": [51292, 509, 393, 1319, 264, 15035, 11, 337, 1365, 11, 498, 291, 528, 281, 5407, 264, 19922, 11, 420, 291, 51536], "temperature": 0.0, "avg_logprob": -0.26445034572056364, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.00222000596113503}, {"id": 55, "seek": 33188, "start": 355.32, "end": 361.4, "text": " can change some features. I will maybe talk about that later if I have enough time. But", "tokens": [51536, 393, 1319, 512, 4122, 13, 286, 486, 1310, 751, 466, 300, 1780, 498, 286, 362, 1547, 565, 13, 583, 51840], "temperature": 0.0, "avg_logprob": -0.26445034572056364, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.00222000596113503}, {"id": 56, "seek": 36140, "start": 361.4, "end": 368.4, "text": " now I will just start the recording. And I will run my scenario. Like that. And then", "tokens": [50364, 586, 286, 486, 445, 722, 264, 6613, 13, 400, 286, 486, 1190, 452, 9005, 13, 1743, 300, 13, 400, 550, 50714], "temperature": 0.0, "avg_logprob": -0.22491640514797634, "compression_ratio": 1.5207100591715976, "no_speech_prob": 0.0005442639230750501}, {"id": 57, "seek": 36140, "start": 371.4, "end": 378.4, "text": " I can capture. And I get a view into what happened here. So we will type into the UI", "tokens": [50864, 286, 393, 7983, 13, 400, 286, 483, 257, 1910, 666, 437, 2011, 510, 13, 407, 321, 486, 2010, 666, 264, 15682, 51214], "temperature": 0.0, "avg_logprob": -0.22491640514797634, "compression_ratio": 1.5207100591715976, "no_speech_prob": 0.0005442639230750501}, {"id": 58, "seek": 36140, "start": 382.44, "end": 386.4, "text": " a bit later. And I will zoom in also because maybe it's a bit small for you. But I want", "tokens": [51416, 257, 857, 1780, 13, 400, 286, 486, 8863, 294, 611, 570, 1310, 309, 311, 257, 857, 1359, 337, 291, 13, 583, 286, 528, 51614], "temperature": 0.0, "avg_logprob": -0.22491640514797634, "compression_ratio": 1.5207100591715976, "no_speech_prob": 0.0005442639230750501}, {"id": 59, "seek": 38640, "start": 386.44, "end": 391.91999999999996, "text": " to just to show you that you can also upload the profile then. Of course, there can be", "tokens": [50366, 281, 445, 281, 855, 291, 300, 291, 393, 611, 6580, 264, 7964, 550, 13, 2720, 1164, 11, 456, 393, 312, 50640], "temperature": 0.0, "avg_logprob": -0.22376400956483644, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.013005862943828106}, {"id": 60, "seek": 38640, "start": 391.91999999999996, "end": 396.23999999999995, "text": " personal information in anything you can show from your browser. There can be things about", "tokens": [50640, 2973, 1589, 294, 1340, 291, 393, 855, 490, 428, 11185, 13, 821, 393, 312, 721, 466, 50856], "temperature": 0.0, "avg_logprob": -0.22376400956483644, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.013005862943828106}, {"id": 61, "seek": 38640, "start": 396.23999999999995, "end": 401.52, "text": " URL you visited, about the tab that you have currently opened. Maybe there are some tabs", "tokens": [50856, 12905, 291, 11220, 11, 466, 264, 4421, 300, 291, 362, 4362, 5625, 13, 2704, 456, 366, 512, 20743, 51120], "temperature": 0.0, "avg_logprob": -0.22376400956483644, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.013005862943828106}, {"id": 62, "seek": 38640, "start": 401.52, "end": 407.88, "text": " you don't want anybody, everybody to know. And there can be paths in on your local computer.", "tokens": [51120, 291, 500, 380, 528, 4472, 11, 2201, 281, 458, 13, 400, 456, 393, 312, 14518, 294, 322, 428, 2654, 3820, 13, 51438], "temperature": 0.0, "avg_logprob": -0.22376400956483644, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.013005862943828106}, {"id": 63, "seek": 38640, "start": 407.88, "end": 414.88, "text": " So you can disable some of these things. So for example, I will remove the, yes, the", "tokens": [51438, 407, 291, 393, 28362, 512, 295, 613, 721, 13, 407, 337, 1365, 11, 286, 486, 4159, 264, 11, 2086, 11, 264, 51788], "temperature": 0.0, "avg_logprob": -0.22376400956483644, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.013005862943828106}, {"id": 64, "seek": 41640, "start": 416.4, "end": 423.4, "text": " thread that I don't see here. I can upload here. The Wi-Fi works surprisingly well today.", "tokens": [50364, 7207, 300, 286, 500, 380, 536, 510, 13, 286, 393, 6580, 510, 13, 440, 14035, 12, 13229, 1985, 17600, 731, 965, 13, 50714], "temperature": 0.0, "avg_logprob": -0.18879239804276796, "compression_ratio": 1.7469879518072289, "no_speech_prob": 0.0023389565758407116}, {"id": 65, "seek": 41640, "start": 425.08, "end": 430.67999999999995, "text": " And then you have this ND URL. You can take this URL, give that to your co-worker. And", "tokens": [50798, 400, 550, 291, 362, 341, 40709, 12905, 13, 509, 393, 747, 341, 12905, 11, 976, 300, 281, 428, 598, 12, 49402, 13, 400, 51078], "temperature": 0.0, "avg_logprob": -0.18879239804276796, "compression_ratio": 1.7469879518072289, "no_speech_prob": 0.0023389565758407116}, {"id": 66, "seek": 41640, "start": 430.67999999999995, "end": 434.67999999999995, "text": " this will open exactly the same view with the same profile. And so this is very handy", "tokens": [51078, 341, 486, 1269, 2293, 264, 912, 1910, 365, 264, 912, 7964, 13, 400, 370, 341, 307, 588, 13239, 51278], "temperature": 0.0, "avg_logprob": -0.18879239804276796, "compression_ratio": 1.7469879518072289, "no_speech_prob": 0.0023389565758407116}, {"id": 67, "seek": 41640, "start": 434.67999999999995, "end": 440.59999999999997, "text": " to discuss that with your colleagues. And some of you can have different understanding", "tokens": [51278, 281, 2248, 300, 365, 428, 7734, 13, 400, 512, 295, 291, 393, 362, 819, 3701, 51574], "temperature": 0.0, "avg_logprob": -0.18879239804276796, "compression_ratio": 1.7469879518072289, "no_speech_prob": 0.0023389565758407116}, {"id": 68, "seek": 41640, "start": 440.59999999999997, "end": 444.08, "text": " of different types, different parts of your code. And so you can have different views", "tokens": [51574, 295, 819, 3467, 11, 819, 3166, 295, 428, 3089, 13, 400, 370, 291, 393, 362, 819, 6809, 51748], "temperature": 0.0, "avg_logprob": -0.18879239804276796, "compression_ratio": 1.7469879518072289, "no_speech_prob": 0.0023389565758407116}, {"id": 69, "seek": 44408, "start": 444.12, "end": 448.84, "text": " like that. You can also share this URL with Gecko developers. If you have a problem in", "tokens": [50366, 411, 300, 13, 509, 393, 611, 2073, 341, 12905, 365, 2876, 41416, 8849, 13, 759, 291, 362, 257, 1154, 294, 50602], "temperature": 0.0, "avg_logprob": -0.2103196203181174, "compression_ratio": 1.7451737451737452, "no_speech_prob": 0.005003669299185276}, {"id": 70, "seek": 44408, "start": 448.84, "end": 454.2, "text": " Firefox, you can open a bug, put this URL there. And that will help the Firefox developers", "tokens": [50602, 46613, 11, 291, 393, 1269, 257, 7426, 11, 829, 341, 12905, 456, 13, 400, 300, 486, 854, 264, 46613, 8849, 50870], "temperature": 0.0, "avg_logprob": -0.2103196203181174, "compression_ratio": 1.7451737451737452, "no_speech_prob": 0.005003669299185276}, {"id": 71, "seek": 44408, "start": 454.2, "end": 461.2, "text": " solve problems that you may find in the browser. And finally, because that's your data, you", "tokens": [50870, 5039, 2740, 300, 291, 815, 915, 294, 264, 11185, 13, 400, 2721, 11, 570, 300, 311, 428, 1412, 11, 291, 51220], "temperature": 0.0, "avg_logprob": -0.2103196203181174, "compression_ratio": 1.7451737451737452, "no_speech_prob": 0.005003669299185276}, {"id": 72, "seek": 44408, "start": 461.2, "end": 466.84, "text": " can also delete it. There is a delete button here. You can delete the data that was uploaded.", "tokens": [51220, 393, 611, 12097, 309, 13, 821, 307, 257, 12097, 2960, 510, 13, 509, 393, 12097, 264, 1412, 300, 390, 17135, 13, 51502], "temperature": 0.0, "avg_logprob": -0.2103196203181174, "compression_ratio": 1.7451737451737452, "no_speech_prob": 0.005003669299185276}, {"id": 73, "seek": 44408, "start": 466.84, "end": 470.24, "text": " Because otherwise, it's public. You need to understand that it's very public. Of course,", "tokens": [51502, 1436, 5911, 11, 309, 311, 1908, 13, 509, 643, 281, 1223, 300, 309, 311, 588, 1908, 13, 2720, 1164, 11, 51672], "temperature": 0.0, "avg_logprob": -0.2103196203181174, "compression_ratio": 1.7451737451737452, "no_speech_prob": 0.005003669299185276}, {"id": 74, "seek": 47024, "start": 470.24, "end": 474.12, "text": " you need to know the URL. But otherwise, it's public. There is no password, whatever.", "tokens": [50364, 291, 643, 281, 458, 264, 12905, 13, 583, 5911, 11, 309, 311, 1908, 13, 821, 307, 572, 11524, 11, 2035, 13, 50558], "temperature": 0.0, "avg_logprob": -0.2612014015515645, "compression_ratio": 1.5065502183406114, "no_speech_prob": 0.006201805546879768}, {"id": 75, "seek": 47024, "start": 474.12, "end": 481.12, "text": " So you can delete it when you don't need it anymore. So now I come back to the talk.", "tokens": [50558, 407, 291, 393, 12097, 309, 562, 291, 500, 380, 643, 309, 3602, 13, 407, 586, 286, 808, 646, 281, 264, 751, 13, 50908], "temperature": 0.0, "avg_logprob": -0.2612014015515645, "compression_ratio": 1.5065502183406114, "no_speech_prob": 0.006201805546879768}, {"id": 76, "seek": 47024, "start": 486.40000000000003, "end": 492.12, "text": " We'll dive into the UI a bit later. But first, I want to explain how do you have your good", "tokens": [51172, 492, 603, 9192, 666, 264, 15682, 257, 857, 1780, 13, 583, 700, 11, 286, 528, 281, 2903, 577, 360, 291, 362, 428, 665, 51458], "temperature": 0.0, "avg_logprob": -0.2612014015515645, "compression_ratio": 1.5065502183406114, "no_speech_prob": 0.006201805546879768}, {"id": 77, "seek": 47024, "start": 492.12, "end": 499.12, "text": " data, yes. You need to isolate the problem as much as possible. Like, let's say you", "tokens": [51458, 1412, 11, 2086, 13, 509, 643, 281, 25660, 264, 1154, 382, 709, 382, 1944, 13, 1743, 11, 718, 311, 584, 291, 51808], "temperature": 0.0, "avg_logprob": -0.2612014015515645, "compression_ratio": 1.5065502183406114, "no_speech_prob": 0.006201805546879768}, {"id": 78, "seek": 50024, "start": 500.44, "end": 507.44, "text": " have a lot of tabs, lots of websites in background that are running stuff. The problem you want", "tokens": [50374, 362, 257, 688, 295, 20743, 11, 3195, 295, 12891, 294, 3678, 300, 366, 2614, 1507, 13, 440, 1154, 291, 528, 50724], "temperature": 0.0, "avg_logprob": -0.2913658012778072, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.0020823064260184765}, {"id": 79, "seek": 50024, "start": 509.64, "end": 516.64, "text": " to test can be isolated. And maybe it will be some performance differences just because", "tokens": [50834, 281, 1500, 393, 312, 14621, 13, 400, 1310, 309, 486, 312, 512, 3389, 7300, 445, 570, 51184], "temperature": 0.0, "avg_logprob": -0.2913658012778072, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.0020823064260184765}, {"id": 80, "seek": 50024, "start": 519.88, "end": 525.64, "text": " you have some websites in background. Or maybe you're building something in background", "tokens": [51346, 291, 362, 512, 12891, 294, 3678, 13, 1610, 1310, 291, 434, 2390, 746, 294, 3678, 51634], "temperature": 0.0, "avg_logprob": -0.2913658012778072, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.0020823064260184765}, {"id": 81, "seek": 52564, "start": 525.64, "end": 530.36, "text": " of your computer and that will skew the results. So try to isolate the problem. Try to have", "tokens": [50364, 295, 428, 3820, 293, 300, 486, 8756, 86, 264, 3542, 13, 407, 853, 281, 25660, 264, 1154, 13, 6526, 281, 362, 50600], "temperature": 0.0, "avg_logprob": -0.1846440008708409, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.023313717916607857}, {"id": 82, "seek": 52564, "start": 530.36, "end": 537.36, "text": " a computer that is not too busy at that moment. When you get the data, try to ensure that", "tokens": [50600, 257, 3820, 300, 307, 406, 886, 5856, 412, 300, 1623, 13, 1133, 291, 483, 264, 1412, 11, 853, 281, 5586, 300, 50950], "temperature": 0.0, "avg_logprob": -0.1846440008708409, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.023313717916607857}, {"id": 83, "seek": 52564, "start": 538.36, "end": 542.96, "text": " the results you get are the ones you kind of expected. I can look at the screenshots,", "tokens": [51000, 264, 3542, 291, 483, 366, 264, 2306, 291, 733, 295, 5176, 13, 286, 393, 574, 412, 264, 40661, 11, 51230], "temperature": 0.0, "avg_logprob": -0.1846440008708409, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.023313717916607857}, {"id": 84, "seek": 52564, "start": 542.96, "end": 547.88, "text": " see if this is the thing you actually wanted. And you can keep recording. There is not one", "tokens": [51230, 536, 498, 341, 307, 264, 551, 291, 767, 1415, 13, 400, 291, 393, 1066, 6613, 13, 821, 307, 406, 472, 51476], "temperature": 0.0, "avg_logprob": -0.1846440008708409, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.023313717916607857}, {"id": 85, "seek": 52564, "start": 547.88, "end": 554.88, "text": " truth. There is several truths here. Depending on if your system wasn't in the best shape", "tokens": [51476, 3494, 13, 821, 307, 2940, 30079, 510, 13, 22539, 322, 498, 428, 1185, 2067, 380, 294, 264, 1151, 3909, 51826], "temperature": 0.0, "avg_logprob": -0.1846440008708409, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.023313717916607857}, {"id": 86, "seek": 55488, "start": 555.24, "end": 559.52, "text": " at that moment, maybe you need to record again so that you have something that you can work", "tokens": [50382, 412, 300, 1623, 11, 1310, 291, 643, 281, 2136, 797, 370, 300, 291, 362, 746, 300, 291, 393, 589, 50596], "temperature": 0.0, "avg_logprob": -0.19090341266832853, "compression_ratio": 1.6948356807511737, "no_speech_prob": 0.0011490721954032779}, {"id": 87, "seek": 55488, "start": 559.52, "end": 566.52, "text": " with. So no, yeah. Now I want to go into the capture data. So we have two types of data.", "tokens": [50596, 365, 13, 407, 572, 11, 1338, 13, 823, 286, 528, 281, 352, 666, 264, 7983, 1412, 13, 407, 321, 362, 732, 3467, 295, 1412, 13, 50946], "temperature": 0.0, "avg_logprob": -0.19090341266832853, "compression_ratio": 1.6948356807511737, "no_speech_prob": 0.0011490721954032779}, {"id": 88, "seek": 55488, "start": 568.36, "end": 575.12, "text": " The first type of data we do is sampling. So what we are doing is every interval, every", "tokens": [51038, 440, 700, 2010, 295, 1412, 321, 360, 307, 21179, 13, 407, 437, 321, 366, 884, 307, 633, 15035, 11, 633, 51376], "temperature": 0.0, "avg_logprob": -0.19090341266832853, "compression_ratio": 1.6948356807511737, "no_speech_prob": 0.0011490721954032779}, {"id": 89, "seek": 55488, "start": 575.12, "end": 580.52, "text": " millisecond here, we look at what the current program is executing. So we look at the stack.", "tokens": [51376, 27940, 18882, 510, 11, 321, 574, 412, 437, 264, 2190, 1461, 307, 32368, 13, 407, 321, 574, 412, 264, 8630, 13, 51646], "temperature": 0.0, "avg_logprob": -0.19090341266832853, "compression_ratio": 1.6948356807511737, "no_speech_prob": 0.0011490721954032779}, {"id": 90, "seek": 58052, "start": 580.56, "end": 585.64, "text": " Here for example, this is an example of a program that starts with main. This is the", "tokens": [50366, 1692, 337, 1365, 11, 341, 307, 364, 1365, 295, 257, 1461, 300, 3719, 365, 2135, 13, 639, 307, 264, 50620], "temperature": 0.0, "avg_logprob": -0.2303806598369892, "compression_ratio": 1.947136563876652, "no_speech_prob": 0.0026968223974108696}, {"id": 91, "seek": 58052, "start": 585.64, "end": 590.48, "text": " main function of a program that we call A, that we call B, that we call C, C will return,", "tokens": [50620, 2135, 2445, 295, 257, 1461, 300, 321, 818, 316, 11, 300, 321, 818, 363, 11, 300, 321, 818, 383, 11, 383, 486, 2736, 11, 50862], "temperature": 0.0, "avg_logprob": -0.2303806598369892, "compression_ratio": 1.947136563876652, "no_speech_prob": 0.0026968223974108696}, {"id": 92, "seek": 58052, "start": 590.48, "end": 595.4, "text": " et cetera. So this is like a normal program calling normal functions. And every millisecond", "tokens": [50862, 1030, 11458, 13, 407, 341, 307, 411, 257, 2710, 1461, 5141, 2710, 6828, 13, 400, 633, 27940, 18882, 51108], "temperature": 0.0, "avg_logprob": -0.2303806598369892, "compression_ratio": 1.947136563876652, "no_speech_prob": 0.0026968223974108696}, {"id": 93, "seek": 58052, "start": 595.4, "end": 602.4, "text": " we look at where we are. So here we are in A, no, we are in main, sorry. A, we don't see", "tokens": [51108, 321, 574, 412, 689, 321, 366, 13, 407, 510, 321, 366, 294, 316, 11, 572, 11, 321, 366, 294, 2135, 11, 2597, 13, 316, 11, 321, 500, 380, 536, 51458], "temperature": 0.0, "avg_logprob": -0.2303806598369892, "compression_ratio": 1.947136563876652, "no_speech_prob": 0.0026968223974108696}, {"id": 94, "seek": 58052, "start": 603.1999999999999, "end": 607.64, "text": " it here. But here we are in B. So we are in B, but we are also in A, right? And we are", "tokens": [51498, 309, 510, 13, 583, 510, 321, 366, 294, 363, 13, 407, 321, 366, 294, 363, 11, 457, 321, 366, 611, 294, 316, 11, 558, 30, 400, 321, 366, 51720], "temperature": 0.0, "avg_logprob": -0.2303806598369892, "compression_ratio": 1.947136563876652, "no_speech_prob": 0.0026968223974108696}, {"id": 95, "seek": 60764, "start": 607.72, "end": 614.72, "text": " also in main. And then at this point we are also in B, in A and main. Here we are just", "tokens": [50368, 611, 294, 2135, 13, 400, 550, 412, 341, 935, 321, 366, 611, 294, 363, 11, 294, 316, 293, 2135, 13, 1692, 321, 366, 445, 50718], "temperature": 0.0, "avg_logprob": -0.20044118530896246, "compression_ratio": 1.7766497461928934, "no_speech_prob": 0.0010975656332448125}, {"id": 96, "seek": 60764, "start": 614.72, "end": 621.96, "text": " in main, for example, and here we are both in main, in A, in B, and in C. And then so", "tokens": [50718, 294, 2135, 11, 337, 1365, 11, 293, 510, 321, 366, 1293, 294, 2135, 11, 294, 316, 11, 294, 363, 11, 293, 294, 383, 13, 400, 550, 370, 51080], "temperature": 0.0, "avg_logprob": -0.20044118530896246, "compression_ratio": 1.7766497461928934, "no_speech_prob": 0.0010975656332448125}, {"id": 97, "seek": 60764, "start": 621.96, "end": 628.64, "text": " we take all these data and then we squeeze them together, which is a technical term to", "tokens": [51080, 321, 747, 439, 613, 1412, 293, 550, 321, 13578, 552, 1214, 11, 597, 307, 257, 6191, 1433, 281, 51414], "temperature": 0.0, "avg_logprob": -0.20044118530896246, "compression_ratio": 1.7766497461928934, "no_speech_prob": 0.0010975656332448125}, {"id": 98, "seek": 60764, "start": 628.64, "end": 635.64, "text": " mean that we aggregate the data. So we squeeze them and so we show this information as far", "tokens": [51414, 914, 300, 321, 26118, 264, 1412, 13, 407, 321, 13578, 552, 293, 370, 321, 855, 341, 1589, 382, 1400, 51764], "temperature": 0.0, "avg_logprob": -0.20044118530896246, "compression_ratio": 1.7766497461928934, "no_speech_prob": 0.0010975656332448125}, {"id": 99, "seek": 63564, "start": 635.72, "end": 641.52, "text": " as the culture like that. So that's basically the same. So if I come back here, we can see", "tokens": [50368, 382, 264, 3713, 411, 300, 13, 407, 300, 311, 1936, 264, 912, 13, 407, 498, 286, 808, 646, 510, 11, 321, 393, 536, 50658], "temperature": 0.0, "avg_logprob": -0.23335472106933594, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.008795837871730328}, {"id": 100, "seek": 63564, "start": 641.52, "end": 648.4399999999999, "text": " basically main, we spend 100% there, right? It's the same function in the whole program.", "tokens": [50658, 1936, 2135, 11, 321, 3496, 2319, 4, 456, 11, 558, 30, 467, 311, 264, 912, 2445, 294, 264, 1379, 1461, 13, 51004], "temperature": 0.0, "avg_logprob": -0.23335472106933594, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.008795837871730328}, {"id": 101, "seek": 63564, "start": 648.4399999999999, "end": 654.16, "text": " In A we spend maybe 70% there and in B we spend maybe 50%. And that's what we see in", "tokens": [51004, 682, 316, 321, 3496, 1310, 5285, 4, 456, 293, 294, 363, 321, 3496, 1310, 2625, 6856, 400, 300, 311, 437, 321, 536, 294, 51290], "temperature": 0.0, "avg_logprob": -0.23335472106933594, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.008795837871730328}, {"id": 102, "seek": 63564, "start": 654.16, "end": 661.16, "text": " the culture then. Here the one at the top, we spend like 98% in it. But we spend also", "tokens": [51290, 264, 3713, 550, 13, 1692, 264, 472, 412, 264, 1192, 11, 321, 3496, 411, 20860, 4, 294, 309, 13, 583, 321, 3496, 611, 51640], "temperature": 0.0, "avg_logprob": -0.23335472106933594, "compression_ratio": 1.7241379310344827, "no_speech_prob": 0.008795837871730328}, {"id": 103, "seek": 66116, "start": 662.04, "end": 669.04, "text": " 56 samples in, right in this function. So the difference between this column and this", "tokens": [50408, 19687, 10938, 294, 11, 558, 294, 341, 2445, 13, 407, 264, 2649, 1296, 341, 7738, 293, 341, 50758], "temperature": 0.0, "avg_logprob": -0.22531383793528487, "compression_ratio": 1.9351351351351351, "no_speech_prob": 0.003130522556602955}, {"id": 104, "seek": 66116, "start": 669.68, "end": 676.1999999999999, "text": " column is that this column is this function including everything it's called. And this", "tokens": [50790, 7738, 307, 300, 341, 7738, 307, 341, 2445, 3009, 1203, 309, 311, 1219, 13, 400, 341, 51116], "temperature": 0.0, "avg_logprob": -0.22531383793528487, "compression_ratio": 1.9351351351351351, "no_speech_prob": 0.003130522556602955}, {"id": 105, "seek": 66116, "start": 676.1999999999999, "end": 683.1999999999999, "text": " column is this function only, excluding everything it called. Another view is the frame graph.", "tokens": [51116, 7738, 307, 341, 2445, 787, 11, 49999, 1203, 309, 1219, 13, 3996, 1910, 307, 264, 3920, 4295, 13, 51466], "temperature": 0.0, "avg_logprob": -0.22531383793528487, "compression_ratio": 1.9351351351351351, "no_speech_prob": 0.003130522556602955}, {"id": 106, "seek": 66116, "start": 683.88, "end": 689.76, "text": " The frame graph is the same data, it's just more visual. The time we spend in one function", "tokens": [51500, 440, 3920, 4295, 307, 264, 912, 1412, 11, 309, 311, 445, 544, 5056, 13, 440, 565, 321, 3496, 294, 472, 2445, 51794], "temperature": 0.0, "avg_logprob": -0.22531383793528487, "compression_ratio": 1.9351351351351351, "no_speech_prob": 0.003130522556602955}, {"id": 107, "seek": 68976, "start": 689.76, "end": 696.76, "text": " is the width of a rectangle. The one at the top are the one where we are at one point.", "tokens": [50364, 307, 264, 11402, 295, 257, 21930, 13, 440, 472, 412, 264, 1192, 366, 264, 472, 689, 321, 366, 412, 472, 935, 13, 50714], "temperature": 0.0, "avg_logprob": -0.15327550570170084, "compression_ratio": 1.788, "no_speech_prob": 0.0016723517328500748}, {"id": 108, "seek": 68976, "start": 698.36, "end": 704.0, "text": " So very visually we can see where we spend time. So here we can see we do a lot of converse", "tokens": [50794, 407, 588, 19622, 321, 393, 536, 689, 321, 3496, 565, 13, 407, 510, 321, 393, 536, 321, 360, 257, 688, 295, 416, 4308, 51076], "temperature": 0.0, "avg_logprob": -0.15327550570170084, "compression_ratio": 1.788, "no_speech_prob": 0.0016723517328500748}, {"id": 109, "seek": 68976, "start": 704.0, "end": 709.2, "text": " rendering stuff. This is exactly the scenario I was playing earlier, by the way. So we see", "tokens": [51076, 22407, 1507, 13, 639, 307, 2293, 264, 9005, 286, 390, 2433, 3071, 11, 538, 264, 636, 13, 407, 321, 536, 51336], "temperature": 0.0, "avg_logprob": -0.15327550570170084, "compression_ratio": 1.788, "no_speech_prob": 0.0016723517328500748}, {"id": 110, "seek": 68976, "start": 709.2, "end": 713.84, "text": " that we're spending some time on the converse and we are maybe redrawing too much stuff", "tokens": [51336, 300, 321, 434, 6434, 512, 565, 322, 264, 416, 4308, 293, 321, 366, 1310, 2182, 5131, 278, 886, 709, 1507, 51568], "temperature": 0.0, "avg_logprob": -0.15327550570170084, "compression_ratio": 1.788, "no_speech_prob": 0.0016723517328500748}, {"id": 111, "seek": 68976, "start": 713.84, "end": 718.72, "text": " at that point. So we can dive into that later also if we have time. I don't know how much", "tokens": [51568, 412, 300, 935, 13, 407, 321, 393, 9192, 666, 300, 1780, 611, 498, 321, 362, 565, 13, 286, 500, 380, 458, 577, 709, 51812], "temperature": 0.0, "avg_logprob": -0.15327550570170084, "compression_ratio": 1.788, "no_speech_prob": 0.0016723517328500748}, {"id": 112, "seek": 71872, "start": 718.8000000000001, "end": 725.8000000000001, "text": " and we have, okay. So yes, sampling is a view into the program that is currently executing.", "tokens": [50368, 293, 321, 362, 11, 1392, 13, 407, 2086, 11, 21179, 307, 257, 1910, 666, 264, 1461, 300, 307, 4362, 32368, 13, 50718], "temperature": 0.0, "avg_logprob": -0.22038051771081013, "compression_ratio": 1.6851851851851851, "no_speech_prob": 0.000660309917293489}, {"id": 113, "seek": 71872, "start": 728.0, "end": 733.0, "text": " But we can miss things. Like you've seen here, because we do only every millisecond we can", "tokens": [50828, 583, 321, 393, 1713, 721, 13, 1743, 291, 600, 1612, 510, 11, 570, 321, 360, 787, 633, 27940, 18882, 321, 393, 51078], "temperature": 0.0, "avg_logprob": -0.22038051771081013, "compression_ratio": 1.6851851851851851, "no_speech_prob": 0.000660309917293489}, {"id": 114, "seek": 71872, "start": 733.0, "end": 738.32, "text": " miss some of the codes and maybe they're important, right? So in this case we see only once because", "tokens": [51078, 1713, 512, 295, 264, 14211, 293, 1310, 436, 434, 1021, 11, 558, 30, 407, 294, 341, 1389, 321, 536, 787, 1564, 570, 51344], "temperature": 0.0, "avg_logprob": -0.22038051771081013, "compression_ratio": 1.6851851851851851, "no_speech_prob": 0.000660309917293489}, {"id": 115, "seek": 71872, "start": 738.32, "end": 743.08, "text": " it was a bit longer but the small ones here we don't see that. This can be missed. So", "tokens": [51344, 309, 390, 257, 857, 2854, 457, 264, 1359, 2306, 510, 321, 500, 380, 536, 300, 13, 639, 393, 312, 6721, 13, 407, 51582], "temperature": 0.0, "avg_logprob": -0.22038051771081013, "compression_ratio": 1.6851851851851851, "no_speech_prob": 0.000660309917293489}, {"id": 116, "seek": 71872, "start": 743.08, "end": 748.0, "text": " that's why we can instrument the code. So Firefox itself is instrumented for important", "tokens": [51582, 300, 311, 983, 321, 393, 7198, 264, 3089, 13, 407, 46613, 2564, 307, 7198, 292, 337, 1021, 51828], "temperature": 0.0, "avg_logprob": -0.22038051771081013, "compression_ratio": 1.6851851851851851, "no_speech_prob": 0.000660309917293489}, {"id": 117, "seek": 74800, "start": 748.0, "end": 752.8, "text": " things like the reflows, the restyles, or the GC, or things like that. But you can also", "tokens": [50364, 721, 411, 264, 1895, 75, 1509, 11, 264, 1472, 88, 904, 11, 420, 264, 29435, 11, 420, 721, 411, 300, 13, 583, 291, 393, 611, 50604], "temperature": 0.0, "avg_logprob": -0.24098404315339417, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.004030071664601564}, {"id": 118, "seek": 74800, "start": 752.8, "end": 758.8, "text": " instrument your own code with the performance timing API, performance.mark and performance.measure.", "tokens": [50604, 7198, 428, 1065, 3089, 365, 264, 3389, 10822, 9362, 11, 3389, 13, 5638, 293, 3389, 13, 1398, 2508, 13, 50904], "temperature": 0.0, "avg_logprob": -0.24098404315339417, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.004030071664601564}, {"id": 119, "seek": 74800, "start": 758.8, "end": 763.68, "text": " You will see that in the profile. So that's what we call markers in our little technical", "tokens": [50904, 509, 486, 536, 300, 294, 264, 7964, 13, 407, 300, 311, 437, 321, 818, 19175, 294, 527, 707, 6191, 51148], "temperature": 0.0, "avg_logprob": -0.24098404315339417, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.004030071664601564}, {"id": 120, "seek": 74800, "start": 763.68, "end": 770.68, "text": " jargon, some other profiler called that events. And we get like another view on what's happening", "tokens": [51148, 15181, 10660, 11, 512, 661, 1740, 5441, 1219, 300, 3931, 13, 400, 321, 483, 411, 1071, 1910, 322, 437, 311, 2737, 51498], "temperature": 0.0, "avg_logprob": -0.24098404315339417, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.004030071664601564}, {"id": 121, "seek": 74800, "start": 771.36, "end": 776.0, "text": " in the program here. So for example, we get, we see all the events here. This one is the", "tokens": [51532, 294, 264, 1461, 510, 13, 407, 337, 1365, 11, 321, 483, 11, 321, 536, 439, 264, 3931, 510, 13, 639, 472, 307, 264, 51764], "temperature": 0.0, "avg_logprob": -0.24098404315339417, "compression_ratio": 1.7769230769230768, "no_speech_prob": 0.004030071664601564}, {"id": 122, "seek": 77600, "start": 776.08, "end": 781.32, "text": " mouse move event because that's exactly what I was doing, right? I was moving the mouse", "tokens": [50368, 9719, 1286, 2280, 570, 300, 311, 2293, 437, 286, 390, 884, 11, 558, 30, 286, 390, 2684, 264, 9719, 50630], "temperature": 0.0, "avg_logprob": -0.18970911591141312, "compression_ratio": 1.6568265682656826, "no_speech_prob": 0.004679102450609207}, {"id": 123, "seek": 77600, "start": 781.32, "end": 787.16, "text": " while I was panning. So I get mouse move events that are pretty big actually. 30 milliseconds", "tokens": [50630, 1339, 286, 390, 2462, 773, 13, 407, 286, 483, 9719, 1286, 3931, 300, 366, 1238, 955, 767, 13, 2217, 34184, 50922], "temperature": 0.0, "avg_logprob": -0.18970911591141312, "compression_ratio": 1.6568265682656826, "no_speech_prob": 0.004679102450609207}, {"id": 124, "seek": 77600, "start": 787.16, "end": 792.32, "text": " for one event, that means we spend maybe too much time there. We also see all the user", "tokens": [50922, 337, 472, 2280, 11, 300, 1355, 321, 3496, 1310, 886, 709, 565, 456, 13, 492, 611, 536, 439, 264, 4195, 51180], "temperature": 0.0, "avg_logprob": -0.18970911591141312, "compression_ratio": 1.6568265682656826, "no_speech_prob": 0.004679102450609207}, {"id": 125, "seek": 77600, "start": 792.32, "end": 798.12, "text": " timing because the code of the profiler is instrumented to add performance.measure anytime", "tokens": [51180, 10822, 570, 264, 3089, 295, 264, 1740, 5441, 307, 7198, 292, 281, 909, 3389, 13, 1398, 2508, 13038, 51470], "temperature": 0.0, "avg_logprob": -0.18970911591141312, "compression_ratio": 1.6568265682656826, "no_speech_prob": 0.004679102450609207}, {"id": 126, "seek": 77600, "start": 798.12, "end": 804.0, "text": " we do some converse drawing. But you can also see things that's happening inside Firefox.", "tokens": [51470, 321, 360, 512, 416, 4308, 6316, 13, 583, 291, 393, 611, 536, 721, 300, 311, 2737, 1854, 46613, 13, 51764], "temperature": 0.0, "avg_logprob": -0.18970911591141312, "compression_ratio": 1.6568265682656826, "no_speech_prob": 0.004679102450609207}, {"id": 127, "seek": 80400, "start": 804.0, "end": 810.36, "text": " We can see, for example, the restyles here, the reflow here. We can see some GC. We can", "tokens": [50364, 492, 393, 536, 11, 337, 1365, 11, 264, 1472, 88, 904, 510, 11, 264, 1895, 14107, 510, 13, 492, 393, 536, 512, 29435, 13, 492, 393, 50682], "temperature": 0.0, "avg_logprob": -0.1885207039969308, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.005908250343054533}, {"id": 128, "seek": 80400, "start": 810.36, "end": 817.36, "text": " see some, when it's awake or when it's idle. So we can see all stuff, more or less complicated.", "tokens": [50682, 536, 512, 11, 562, 309, 311, 15994, 420, 562, 309, 311, 30650, 13, 407, 321, 393, 536, 439, 1507, 11, 544, 420, 1570, 6179, 13, 51032], "temperature": 0.0, "avg_logprob": -0.1885207039969308, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.005908250343054533}, {"id": 129, "seek": 80400, "start": 818.16, "end": 824.92, "text": " We want to make this view a bit simpler for web developers. Currently you have still everything.", "tokens": [51072, 492, 528, 281, 652, 341, 1910, 257, 857, 18587, 337, 3670, 8849, 13, 19964, 291, 362, 920, 1203, 13, 51410], "temperature": 0.0, "avg_logprob": -0.1885207039969308, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.005908250343054533}, {"id": 130, "seek": 80400, "start": 824.92, "end": 828.68, "text": " And you need to probably ignore a part of this and just focus on what's important for", "tokens": [51410, 400, 291, 643, 281, 1391, 11200, 257, 644, 295, 341, 293, 445, 1879, 322, 437, 311, 1021, 337, 51598], "temperature": 0.0, "avg_logprob": -0.1885207039969308, "compression_ratio": 1.641255605381166, "no_speech_prob": 0.005908250343054533}, {"id": 131, "seek": 82868, "start": 828.68, "end": 835.68, "text": " you, like DOM events or restyles and graphic stuff. But it gives a, like a quite, yeah,", "tokens": [50364, 291, 11, 411, 35727, 3931, 420, 1472, 88, 904, 293, 14089, 1507, 13, 583, 309, 2709, 257, 11, 411, 257, 1596, 11, 1338, 11, 50714], "temperature": 0.0, "avg_logprob": -0.2642161921450966, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.0067512947134673595}, {"id": 132, "seek": 82868, "start": 837.4399999999999, "end": 842.4399999999999, "text": " you get all the stuff here. So you can dive into how Firefox works. You get the animation", "tokens": [50802, 291, 483, 439, 264, 1507, 510, 13, 407, 291, 393, 9192, 666, 577, 46613, 1985, 13, 509, 483, 264, 9603, 51052], "temperature": 0.0, "avg_logprob": -0.2642161921450966, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.0067512947134673595}, {"id": 133, "seek": 82868, "start": 842.4399999999999, "end": 846.92, "text": " stuff. I don't have animations here, but you can see CSS animation. You can see the target", "tokens": [51052, 1507, 13, 286, 500, 380, 362, 22868, 510, 11, 457, 291, 393, 536, 24387, 9603, 13, 509, 393, 536, 264, 3779, 51276], "temperature": 0.0, "avg_logprob": -0.2642161921450966, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.0067512947134673595}, {"id": 134, "seek": 82868, "start": 846.92, "end": 853.92, "text": " of this seven. So yeah, markers are pretty interesting. So there are limits. As I said", "tokens": [51276, 295, 341, 3407, 13, 407, 1338, 11, 19175, 366, 1238, 1880, 13, 407, 456, 366, 10406, 13, 1018, 286, 848, 51626], "temperature": 0.0, "avg_logprob": -0.2642161921450966, "compression_ratio": 1.6210045662100456, "no_speech_prob": 0.0067512947134673595}, {"id": 135, "seek": 85392, "start": 853.92, "end": 860.92, "text": " earlier, you're measuring on your own computer. And this also has drawbacks. Your computer,", "tokens": [50364, 3071, 11, 291, 434, 13389, 322, 428, 1065, 3820, 13, 400, 341, 611, 575, 2642, 17758, 13, 2260, 3820, 11, 50714], "temperature": 0.0, "avg_logprob": -0.24119767275723544, "compression_ratio": 1.708133971291866, "no_speech_prob": 0.0015769152669236064}, {"id": 136, "seek": 85392, "start": 865.12, "end": 872.12, "text": " as a developer, usually it's very, it's very performant, right? You have the best CPU and", "tokens": [50924, 382, 257, 10754, 11, 2673, 309, 311, 588, 11, 309, 311, 588, 2042, 394, 11, 558, 30, 509, 362, 264, 1151, 13199, 293, 51274], "temperature": 0.0, "avg_logprob": -0.24119767275723544, "compression_ratio": 1.708133971291866, "no_speech_prob": 0.0015769152669236064}, {"id": 137, "seek": 85392, "start": 872.7199999999999, "end": 877.24, "text": " you have a sheet load of memory. And so this means that the performance on your computer", "tokens": [51304, 291, 362, 257, 8193, 3677, 295, 4675, 13, 400, 370, 341, 1355, 300, 264, 3389, 322, 428, 3820, 51530], "temperature": 0.0, "avg_logprob": -0.24119767275723544, "compression_ratio": 1.708133971291866, "no_speech_prob": 0.0015769152669236064}, {"id": 138, "seek": 85392, "start": 877.24, "end": 883.52, "text": " might be different than the performance on your user's computer. And also just the act", "tokens": [51530, 1062, 312, 819, 813, 264, 3389, 322, 428, 4195, 311, 3820, 13, 400, 611, 445, 264, 605, 51844], "temperature": 0.0, "avg_logprob": -0.24119767275723544, "compression_ratio": 1.708133971291866, "no_speech_prob": 0.0015769152669236064}, {"id": 139, "seek": 88352, "start": 883.56, "end": 890.56, "text": " of profiling itself can skew the results. Because we're, by inserting markers, for example,", "tokens": [50366, 295, 1740, 4883, 2564, 393, 8756, 86, 264, 3542, 13, 1436, 321, 434, 11, 538, 46567, 19175, 11, 337, 1365, 11, 50716], "temperature": 0.0, "avg_logprob": -0.22010056515957446, "compression_ratio": 1.6650943396226414, "no_speech_prob": 0.0023906403221189976}, {"id": 140, "seek": 88352, "start": 891.4399999999999, "end": 896.96, "text": " we need to lock the memory in some place to insert the data there. And we need to capture", "tokens": [50760, 321, 643, 281, 4017, 264, 4675, 294, 512, 1081, 281, 8969, 264, 1412, 456, 13, 400, 321, 643, 281, 7983, 51036], "temperature": 0.0, "avg_logprob": -0.22010056515957446, "compression_ratio": 1.6650943396226414, "no_speech_prob": 0.0023906403221189976}, {"id": 141, "seek": 88352, "start": 896.96, "end": 902.4399999999999, "text": " the stack sometimes. And this takes a lot of time. And so that can skew the results.", "tokens": [51036, 264, 8630, 2171, 13, 400, 341, 2516, 257, 688, 295, 565, 13, 400, 370, 300, 393, 8756, 86, 264, 3542, 13, 51310], "temperature": 0.0, "avg_logprob": -0.22010056515957446, "compression_ratio": 1.6650943396226414, "no_speech_prob": 0.0023906403221189976}, {"id": 142, "seek": 88352, "start": 902.4399999999999, "end": 909.4399999999999, "text": " We try it to be constant over read, but it's not always the case. So there are limits.", "tokens": [51310, 492, 853, 309, 281, 312, 5754, 670, 1401, 11, 457, 309, 311, 406, 1009, 264, 1389, 13, 407, 456, 366, 10406, 13, 51660], "temperature": 0.0, "avg_logprob": -0.22010056515957446, "compression_ratio": 1.6650943396226414, "no_speech_prob": 0.0023906403221189976}, {"id": 143, "seek": 90944, "start": 910.0400000000001, "end": 914.1600000000001, "text": " And you need to sometimes take a step back. Sometimes what you're looking at, it's not", "tokens": [50394, 400, 291, 643, 281, 2171, 747, 257, 1823, 646, 13, 4803, 437, 291, 434, 1237, 412, 11, 309, 311, 406, 50600], "temperature": 0.0, "avg_logprob": -0.15645021261628142, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.0015082861064001918}, {"id": 144, "seek": 90944, "start": 914.1600000000001, "end": 919.0400000000001, "text": " an absolute truth, right? It can be, yeah, it's just a tool again. It's not absolute", "tokens": [50600, 364, 8236, 3494, 11, 558, 30, 467, 393, 312, 11, 1338, 11, 309, 311, 445, 257, 2290, 797, 13, 467, 311, 406, 8236, 50844], "temperature": 0.0, "avg_logprob": -0.15645021261628142, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.0015082861064001918}, {"id": 145, "seek": 90944, "start": 919.0400000000001, "end": 926.0400000000001, "text": " truth. You can take a step back. Maybe what I'm saying is not exactly the truth. Yeah,", "tokens": [50844, 3494, 13, 509, 393, 747, 257, 1823, 646, 13, 2704, 437, 286, 478, 1566, 307, 406, 2293, 264, 3494, 13, 865, 11, 51194], "temperature": 0.0, "avg_logprob": -0.15645021261628142, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.0015082861064001918}, {"id": 146, "seek": 90944, "start": 926.5200000000001, "end": 933.12, "text": " that's about it. So more and more about the UI now. I will show you how we can navigate", "tokens": [51218, 300, 311, 466, 309, 13, 407, 544, 293, 544, 466, 264, 15682, 586, 13, 286, 486, 855, 291, 577, 321, 393, 12350, 51548], "temperature": 0.0, "avg_logprob": -0.15645021261628142, "compression_ratio": 1.6476190476190475, "no_speech_prob": 0.0015082861064001918}, {"id": 147, "seek": 93312, "start": 933.2, "end": 940.2, "text": " in this UI. So you can put that full screen. It's not this one. Yeah, full screen. And", "tokens": [50368, 294, 341, 15682, 13, 407, 291, 393, 829, 300, 1577, 2568, 13, 467, 311, 406, 341, 472, 13, 865, 11, 1577, 2568, 13, 400, 50718], "temperature": 0.0, "avg_logprob": -0.26974996767546, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0021391885820776224}, {"id": 148, "seek": 93312, "start": 944.52, "end": 951.52, "text": " zooming a bit. Okay. Come back at the first one. Okay. So what we have at the top? I can't", "tokens": [50934, 48226, 257, 857, 13, 1033, 13, 2492, 646, 412, 264, 700, 472, 13, 1033, 13, 407, 437, 321, 362, 412, 264, 1192, 30, 286, 393, 380, 51284], "temperature": 0.0, "avg_logprob": -0.26974996767546, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0021391885820776224}, {"id": 149, "seek": 93312, "start": 957.12, "end": 961.0, "text": " choose the laser because you have to use the laser that reloads everything on this computer.", "tokens": [51564, 2826, 264, 12530, 570, 291, 362, 281, 764, 264, 12530, 300, 25628, 82, 1203, 322, 341, 3820, 13, 51758], "temperature": 0.0, "avg_logprob": -0.26974996767546, "compression_ratio": 1.5340909090909092, "no_speech_prob": 0.0021391885820776224}, {"id": 150, "seek": 96100, "start": 961.08, "end": 965.72, "text": " So I don't use the laser. I use my finger. So at the top here, you have what we call", "tokens": [50368, 407, 286, 500, 380, 764, 264, 12530, 13, 286, 764, 452, 5984, 13, 407, 412, 264, 1192, 510, 11, 291, 362, 437, 321, 818, 50600], "temperature": 0.0, "avg_logprob": -0.17788810403937969, "compression_ratio": 1.8227848101265822, "no_speech_prob": 0.005671747028827667}, {"id": 151, "seek": 96100, "start": 965.72, "end": 970.56, "text": " the timeline. It's a chronological view of what's happening. At the top, you can see", "tokens": [50600, 264, 12933, 13, 467, 311, 257, 19393, 4383, 1910, 295, 437, 311, 2737, 13, 1711, 264, 1192, 11, 291, 393, 536, 50842], "temperature": 0.0, "avg_logprob": -0.17788810403937969, "compression_ratio": 1.8227848101265822, "no_speech_prob": 0.005671747028827667}, {"id": 152, "seek": 96100, "start": 970.56, "end": 976.64, "text": " the screenshots. You can even, even over them and can see what's happening. So here I was", "tokens": [50842, 264, 40661, 13, 509, 393, 754, 11, 754, 670, 552, 293, 393, 536, 437, 311, 2737, 13, 407, 510, 286, 390, 51146], "temperature": 0.0, "avg_logprob": -0.17788810403937969, "compression_ratio": 1.8227848101265822, "no_speech_prob": 0.005671747028827667}, {"id": 153, "seek": 96100, "start": 976.64, "end": 982.0, "text": " on the first tab and then I go to the second tab and here I'm scrolling them, scrolling", "tokens": [51146, 322, 264, 700, 4421, 293, 550, 286, 352, 281, 264, 1150, 4421, 293, 510, 286, 478, 29053, 552, 11, 29053, 51414], "temperature": 0.0, "avg_logprob": -0.17788810403937969, "compression_ratio": 1.8227848101265822, "no_speech_prob": 0.005671747028827667}, {"id": 154, "seek": 96100, "start": 982.0, "end": 988.16, "text": " it and panning it. And yeah, that makes it possible visually to see what's happening", "tokens": [51414, 309, 293, 2462, 773, 309, 13, 400, 1338, 11, 300, 1669, 309, 1944, 19622, 281, 536, 437, 311, 2737, 51722], "temperature": 0.0, "avg_logprob": -0.17788810403937969, "compression_ratio": 1.8227848101265822, "no_speech_prob": 0.005671747028827667}, {"id": 155, "seek": 98816, "start": 988.16, "end": 993.52, "text": " and what was your scenario. And then you have a bunch of tracks here that are interesting.", "tokens": [50364, 293, 437, 390, 428, 9005, 13, 400, 550, 291, 362, 257, 3840, 295, 10218, 510, 300, 366, 1880, 13, 50632], "temperature": 0.0, "avg_logprob": -0.16684726337054828, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.005073795560747385}, {"id": 156, "seek": 98816, "start": 993.52, "end": 999.36, "text": " The first one here is the parent process. This is the process that is for the UI of Firefox.", "tokens": [50632, 440, 700, 472, 510, 307, 264, 2596, 1399, 13, 639, 307, 264, 1399, 300, 307, 337, 264, 15682, 295, 46613, 13, 50924], "temperature": 0.0, "avg_logprob": -0.16684726337054828, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.005073795560747385}, {"id": 157, "seek": 98816, "start": 999.36, "end": 1004.24, "text": " That's not really interesting in your case. There is also the localhost here. This is", "tokens": [50924, 663, 311, 406, 534, 1880, 294, 428, 1389, 13, 821, 307, 611, 264, 2654, 6037, 510, 13, 639, 307, 51168], "temperature": 0.0, "avg_logprob": -0.16684726337054828, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.005073795560747385}, {"id": 158, "seek": 98816, "start": 1004.24, "end": 1010.36, "text": " the localhost because I was running my UI on the localhost so that I could get the name", "tokens": [51168, 264, 2654, 6037, 570, 286, 390, 2614, 452, 15682, 322, 264, 2654, 6037, 370, 300, 286, 727, 483, 264, 1315, 51474], "temperature": 0.0, "avg_logprob": -0.16684726337054828, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.005073795560747385}, {"id": 159, "seek": 98816, "start": 1010.36, "end": 1015.8399999999999, "text": " of the functions. They're not minified because we don't support source maps yet. That will", "tokens": [51474, 295, 264, 6828, 13, 814, 434, 406, 923, 2587, 570, 321, 500, 380, 1406, 4009, 11317, 1939, 13, 663, 486, 51748], "temperature": 0.0, "avg_logprob": -0.16684726337054828, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.005073795560747385}, {"id": 160, "seek": 101584, "start": 1015.9200000000001, "end": 1019.96, "text": " happen hopefully this year. But currently, we're not supporting that. So if we want to", "tokens": [50368, 1051, 4696, 341, 1064, 13, 583, 4362, 11, 321, 434, 406, 7231, 300, 13, 407, 498, 321, 528, 281, 50570], "temperature": 0.0, "avg_logprob": -0.2267334945802766, "compression_ratio": 1.9277978339350181, "no_speech_prob": 0.0024609111715108156}, {"id": 161, "seek": 101584, "start": 1019.96, "end": 1026.56, "text": " see the functions I'm profiling on the development version of our application, which also has", "tokens": [50570, 536, 264, 6828, 286, 478, 1740, 4883, 322, 264, 3250, 3037, 295, 527, 3861, 11, 597, 611, 575, 50900], "temperature": 0.0, "avg_logprob": -0.2267334945802766, "compression_ratio": 1.9277978339350181, "no_speech_prob": 0.0024609111715108156}, {"id": 162, "seek": 101584, "start": 1026.56, "end": 1030.0, "text": " some implication because, of course, the development version does use the development", "tokens": [50900, 512, 37814, 570, 11, 295, 1164, 11, 264, 3250, 3037, 775, 764, 264, 3250, 51072], "temperature": 0.0, "avg_logprob": -0.2267334945802766, "compression_ratio": 1.9277978339350181, "no_speech_prob": 0.0024609111715108156}, {"id": 163, "seek": 101584, "start": 1030.0, "end": 1034.88, "text": " version of React. And the development version of React, it's slower than the production version", "tokens": [51072, 3037, 295, 30644, 13, 400, 264, 3250, 3037, 295, 30644, 11, 309, 311, 14009, 813, 264, 4265, 3037, 51316], "temperature": 0.0, "avg_logprob": -0.2267334945802766, "compression_ratio": 1.9277978339350181, "no_speech_prob": 0.0024609111715108156}, {"id": 164, "seek": 101584, "start": 1034.88, "end": 1040.04, "text": " of React. So again, taking a step back is always a good idea. Knowing that, we can dive", "tokens": [51316, 295, 30644, 13, 407, 797, 11, 1940, 257, 1823, 646, 307, 1009, 257, 665, 1558, 13, 25499, 300, 11, 321, 393, 9192, 51574], "temperature": 0.0, "avg_logprob": -0.2267334945802766, "compression_ratio": 1.9277978339350181, "no_speech_prob": 0.0024609111715108156}, {"id": 165, "seek": 101584, "start": 1040.04, "end": 1044.92, "text": " into what's happening. So I can dive into this part because that's where things are", "tokens": [51574, 666, 437, 311, 2737, 13, 407, 286, 393, 9192, 666, 341, 644, 570, 300, 311, 689, 721, 366, 51818], "temperature": 0.0, "avg_logprob": -0.2267334945802766, "compression_ratio": 1.9277978339350181, "no_speech_prob": 0.0024609111715108156}, {"id": 166, "seek": 104492, "start": 1045.0, "end": 1051.5600000000002, "text": " happening, right? There is nothing elsewhere. So here you have what we call the category graph", "tokens": [50368, 2737, 11, 558, 30, 821, 307, 1825, 14517, 13, 407, 510, 291, 362, 437, 321, 818, 264, 7719, 4295, 50696], "temperature": 0.0, "avg_logprob": -0.2003778393348951, "compression_ratio": 1.6846846846846846, "no_speech_prob": 0.008571133948862553}, {"id": 167, "seek": 104492, "start": 1051.5600000000002, "end": 1060.04, "text": " because the colors correspond to some category. Like the blue is dumb stuff. Yellow is JavaScript", "tokens": [50696, 570, 264, 4577, 6805, 281, 512, 7719, 13, 1743, 264, 3344, 307, 10316, 1507, 13, 17550, 307, 15778, 51120], "temperature": 0.0, "avg_logprob": -0.2003778393348951, "compression_ratio": 1.6846846846846846, "no_speech_prob": 0.008571133948862553}, {"id": 168, "seek": 104492, "start": 1060.04, "end": 1065.5600000000002, "text": " stuff. So here we clearly see that we don't do a lot of JavaScript. We mostly do a lot of", "tokens": [51120, 1507, 13, 407, 510, 321, 4448, 536, 300, 321, 500, 380, 360, 257, 688, 295, 15778, 13, 492, 5240, 360, 257, 688, 295, 51396], "temperature": 0.0, "avg_logprob": -0.2003778393348951, "compression_ratio": 1.6846846846846846, "no_speech_prob": 0.008571133948862553}, {"id": 169, "seek": 104492, "start": 1066.28, "end": 1071.48, "text": " something else. So dumb in this case is Canvas stuff. I will switch to JavaScript actually.", "tokens": [51432, 746, 1646, 13, 407, 10316, 294, 341, 1389, 307, 25725, 1507, 13, 286, 486, 3679, 281, 15778, 767, 13, 51692], "temperature": 0.0, "avg_logprob": -0.2003778393348951, "compression_ratio": 1.6846846846846846, "no_speech_prob": 0.008571133948862553}, {"id": 170, "seek": 107148, "start": 1072.2, "end": 1079.88, "text": " Yeah. And then we see that we are doing the field stack stuff. So we see the stack when we hover,", "tokens": [50400, 865, 13, 400, 550, 321, 536, 300, 321, 366, 884, 264, 2519, 8630, 1507, 13, 407, 321, 536, 264, 8630, 562, 321, 20076, 11, 50784], "temperature": 0.0, "avg_logprob": -0.20965153316281876, "compression_ratio": 1.7072072072072073, "no_speech_prob": 0.002305110916495323}, {"id": 171, "seek": 107148, "start": 1079.88, "end": 1086.84, "text": " right? So we see this is a full stack of React sheet stuff. And then at the end, we do a, we just", "tokens": [50784, 558, 30, 407, 321, 536, 341, 307, 257, 1577, 8630, 295, 30644, 8193, 1507, 13, 400, 550, 412, 264, 917, 11, 321, 360, 257, 11, 321, 445, 51132], "temperature": 0.0, "avg_logprob": -0.20965153316281876, "compression_ratio": 1.7072072072072073, "no_speech_prob": 0.002305110916495323}, {"id": 172, "seek": 107148, "start": 1086.84, "end": 1092.68, "text": " call field racks on the convasse API. That's where we are here. And so I can hover and have", "tokens": [51132, 818, 2519, 47063, 322, 264, 416, 7967, 405, 9362, 13, 663, 311, 689, 321, 366, 510, 13, 400, 370, 286, 393, 20076, 293, 362, 51424], "temperature": 0.0, "avg_logprob": -0.20965153316281876, "compression_ratio": 1.7072072072072073, "no_speech_prob": 0.002305110916495323}, {"id": 173, "seek": 107148, "start": 1093.24, "end": 1098.92, "text": " just a sense of what's happening. Also, I'm also setting field style here, for example. And", "tokens": [51452, 445, 257, 2020, 295, 437, 311, 2737, 13, 2743, 11, 286, 478, 611, 3287, 2519, 3758, 510, 11, 337, 1365, 13, 400, 51736], "temperature": 0.0, "avg_logprob": -0.20965153316281876, "compression_ratio": 1.7072072072072073, "no_speech_prob": 0.002305110916495323}, {"id": 174, "seek": 110148, "start": 1102.44, "end": 1108.04, "text": " I can click there and just select whatever is below. So this is basically a way to navigate", "tokens": [50412, 286, 393, 2052, 456, 293, 445, 3048, 2035, 307, 2507, 13, 407, 341, 307, 1936, 257, 636, 281, 12350, 50692], "temperature": 0.0, "avg_logprob": -0.09978756250119676, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0004980621160939336}, {"id": 175, "seek": 110148, "start": 1108.04, "end": 1114.1200000000001, "text": " into this profile. There is a red stuff here. The red stuff means we spend more than 50 milliseconds", "tokens": [50692, 666, 341, 7964, 13, 821, 307, 257, 2182, 1507, 510, 13, 440, 2182, 1507, 1355, 321, 3496, 544, 813, 2625, 34184, 50996], "temperature": 0.0, "avg_logprob": -0.09978756250119676, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0004980621160939336}, {"id": 176, "seek": 110148, "start": 1114.1200000000001, "end": 1120.28, "text": " on waiting on the browser to catch up. That's probably a part where we want to zoom in, by the", "tokens": [50996, 322, 3806, 322, 264, 11185, 281, 3745, 493, 13, 663, 311, 1391, 257, 644, 689, 321, 528, 281, 8863, 294, 11, 538, 264, 51304], "temperature": 0.0, "avg_logprob": -0.09978756250119676, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0004980621160939336}, {"id": 177, "seek": 110148, "start": 1120.28, "end": 1129.96, "text": " way. So we can do that. I can click there. I can zoom in here. And I can look at what's below. So", "tokens": [51304, 636, 13, 407, 321, 393, 360, 300, 13, 286, 393, 2052, 456, 13, 286, 393, 8863, 294, 510, 13, 400, 286, 393, 574, 412, 437, 311, 2507, 13, 407, 51788], "temperature": 0.0, "avg_logprob": -0.09978756250119676, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0004980621160939336}, {"id": 178, "seek": 112996, "start": 1130.92, "end": 1136.6000000000001, "text": " better is what you can, all details you can see. So there are a bunch of tabs.", "tokens": [50412, 1101, 307, 437, 291, 393, 11, 439, 4365, 291, 393, 536, 13, 407, 456, 366, 257, 3840, 295, 20743, 13, 50696], "temperature": 0.0, "avg_logprob": -0.19048903385798135, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.0006661481456831098}, {"id": 179, "seek": 112996, "start": 1137.4, "end": 1142.04, "text": " The first one is the code tree. I already explained you a bit of that. Then there is a", "tokens": [50736, 440, 700, 472, 307, 264, 3089, 4230, 13, 286, 1217, 8825, 291, 257, 857, 295, 300, 13, 1396, 456, 307, 257, 50968], "temperature": 0.0, "avg_logprob": -0.19048903385798135, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.0006661481456831098}, {"id": 180, "seek": 112996, "start": 1142.04, "end": 1148.52, "text": " frame graph. I can show the frame graph by clicking. It's better, right? This is something I was", "tokens": [50968, 3920, 4295, 13, 286, 393, 855, 264, 3920, 4295, 538, 9697, 13, 467, 311, 1101, 11, 558, 30, 639, 307, 746, 286, 390, 51292], "temperature": 0.0, "avg_logprob": -0.19048903385798135, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.0006661481456831098}, {"id": 181, "seek": 112996, "start": 1148.52, "end": 1155.32, "text": " showing up earlier. So I can also hover and see what was the stack and have an idea of what's", "tokens": [51292, 4099, 493, 3071, 13, 407, 286, 393, 611, 20076, 293, 536, 437, 390, 264, 8630, 293, 362, 364, 1558, 295, 437, 311, 51632], "temperature": 0.0, "avg_logprob": -0.19048903385798135, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.0006661481456831098}, {"id": 182, "seek": 115532, "start": 1155.32, "end": 1163.08, "text": " happening here. The stack chart is chronological way of looking at your data. So here we can see,", "tokens": [50364, 2737, 510, 13, 440, 8630, 6927, 307, 19393, 4383, 636, 295, 1237, 412, 428, 1412, 13, 407, 510, 321, 393, 536, 11, 50752], "temperature": 0.0, "avg_logprob": -0.09726715723673503, "compression_ratio": 1.6627218934911243, "no_speech_prob": 0.0012080365559086204}, {"id": 183, "seek": 115532, "start": 1163.08, "end": 1172.52, "text": " for example, I think we can see that we're rendering twice, I think, for example. So we're", "tokens": [50752, 337, 1365, 11, 286, 519, 321, 393, 536, 300, 321, 434, 22407, 6091, 11, 286, 519, 11, 337, 1365, 13, 407, 321, 434, 51224], "temperature": 0.0, "avg_logprob": -0.09726715723673503, "compression_ratio": 1.6627218934911243, "no_speech_prob": 0.0012080365559086204}, {"id": 184, "seek": 115532, "start": 1172.52, "end": 1178.4399999999998, "text": " doing twice the same thing. And I think we see that more here. Like for one mouse move here,", "tokens": [51224, 884, 6091, 264, 912, 551, 13, 400, 286, 519, 321, 536, 300, 544, 510, 13, 1743, 337, 472, 9719, 1286, 510, 11, 51520], "temperature": 0.0, "avg_logprob": -0.09726715723673503, "compression_ratio": 1.6627218934911243, "no_speech_prob": 0.0012080365559086204}, {"id": 185, "seek": 117844, "start": 1179.0800000000002, "end": 1187.0, "text": " I have two renderers here. So that's how markers are handy, right? Here it's clear. It's clear that", "tokens": [50396, 286, 362, 732, 15529, 433, 510, 13, 407, 300, 311, 577, 19175, 366, 13239, 11, 558, 30, 1692, 309, 311, 1850, 13, 467, 311, 1850, 300, 50792], "temperature": 0.0, "avg_logprob": -0.17678154216093175, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0012197124306112528}, {"id": 186, "seek": 117844, "start": 1187.0, "end": 1195.96, "text": " for one mouse move we do two renderers. And we shouldn't do that. So I guess I fixed my problem", "tokens": [50792, 337, 472, 9719, 1286, 321, 360, 732, 15529, 433, 13, 400, 321, 4659, 380, 360, 300, 13, 407, 286, 2041, 286, 6806, 452, 1154, 51240], "temperature": 0.0, "avg_logprob": -0.17678154216093175, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0012197124306112528}, {"id": 187, "seek": 117844, "start": 1195.96, "end": 1201.56, "text": " here. I need to look at the code. Of course, that doesn't solve everything. But I have an", "tokens": [51240, 510, 13, 286, 643, 281, 574, 412, 264, 3089, 13, 2720, 1164, 11, 300, 1177, 380, 5039, 1203, 13, 583, 286, 362, 364, 51520], "temperature": 0.0, "avg_logprob": -0.17678154216093175, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0012197124306112528}, {"id": 188, "seek": 117844, "start": 1201.56, "end": 1206.76, "text": " idea of where to look at my code. It means probably that I changed some state on some", "tokens": [51520, 1558, 295, 689, 281, 574, 412, 452, 3089, 13, 467, 1355, 1391, 300, 286, 3105, 512, 1785, 322, 512, 51780], "temperature": 0.0, "avg_logprob": -0.17678154216093175, "compression_ratio": 1.6200873362445414, "no_speech_prob": 0.0012197124306112528}, {"id": 189, "seek": 120676, "start": 1206.76, "end": 1212.84, "text": " red component and that does a new render. So we need to look at the code then and see what's", "tokens": [50364, 2182, 6542, 293, 300, 775, 257, 777, 15529, 13, 407, 321, 643, 281, 574, 412, 264, 3089, 550, 293, 536, 437, 311, 50668], "temperature": 0.0, "avg_logprob": -0.2090120453765427, "compression_ratio": 1.4853801169590644, "no_speech_prob": 0.0011557255638763309}, {"id": 190, "seek": 120676, "start": 1212.84, "end": 1217.96, "text": " going on. Because this is just a tool. This doesn't solve everything. But that saves a", "tokens": [50668, 516, 322, 13, 1436, 341, 307, 445, 257, 2290, 13, 639, 1177, 380, 5039, 1203, 13, 583, 300, 19155, 257, 50924], "temperature": 0.0, "avg_logprob": -0.2090120453765427, "compression_ratio": 1.4853801169590644, "no_speech_prob": 0.0011557255638763309}, {"id": 191, "seek": 120676, "start": 1217.96, "end": 1226.6, "text": " shitload of time to find the right data. So let's come back at the slides.", "tokens": [50924, 4611, 2907, 295, 565, 281, 915, 264, 558, 1412, 13, 407, 718, 311, 808, 646, 412, 264, 9788, 13, 51356], "temperature": 0.0, "avg_logprob": -0.2090120453765427, "compression_ratio": 1.4853801169590644, "no_speech_prob": 0.0011557255638763309}, {"id": 192, "seek": 122660, "start": 1227.1599999999999, "end": 1237.0, "text": " Okay. Some more advanced topics now. We also do, so the advanced topics are", "tokens": [50392, 1033, 13, 2188, 544, 7339, 8378, 586, 13, 492, 611, 360, 11, 370, 264, 7339, 8378, 366, 50884], "temperature": 0.0, "avg_logprob": -0.14326853979201543, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.005600412376224995}, {"id": 193, "seek": 122660, "start": 1238.12, "end": 1243.8, "text": " less exposed for a reason because they're also less finished, less polished. You can enable this", "tokens": [50940, 1570, 9495, 337, 257, 1778, 570, 436, 434, 611, 1570, 4335, 11, 1570, 29079, 13, 509, 393, 9528, 341, 51224], "temperature": 0.0, "avg_logprob": -0.14326853979201543, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.005600412376224995}, {"id": 194, "seek": 122660, "start": 1243.8, "end": 1249.8799999999999, "text": " stuff from the edit settings button that I was showing earlier. And one thing you can do is", "tokens": [51224, 1507, 490, 264, 8129, 6257, 2960, 300, 286, 390, 4099, 3071, 13, 400, 472, 551, 291, 393, 360, 307, 51528], "temperature": 0.0, "avg_logprob": -0.14326853979201543, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.005600412376224995}, {"id": 195, "seek": 122660, "start": 1249.8799999999999, "end": 1253.8799999999999, "text": " memory allocations. So we have two types of instrumentation for that. And I think this", "tokens": [51528, 4675, 12660, 763, 13, 407, 321, 362, 732, 3467, 295, 7198, 399, 337, 300, 13, 400, 286, 519, 341, 51728], "temperature": 0.0, "avg_logprob": -0.14326853979201543, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.005600412376224995}, {"id": 196, "seek": 125388, "start": 1253.88, "end": 1260.6000000000001, "text": " is working only in Firefox nightly. One of them is you can see every allocations happening in", "tokens": [50364, 307, 1364, 787, 294, 46613, 1818, 356, 13, 1485, 295, 552, 307, 291, 393, 536, 633, 12660, 763, 2737, 294, 50700], "temperature": 0.0, "avg_logprob": -0.1758084978376116, "compression_ratio": 1.8518518518518519, "no_speech_prob": 0.0045064715668559074}, {"id": 197, "seek": 125388, "start": 1260.6000000000001, "end": 1265.88, "text": " Firefox. Allocations and deallocations and things that are written, that are not", "tokens": [50700, 46613, 13, 1057, 905, 763, 293, 368, 336, 905, 763, 293, 721, 300, 366, 3720, 11, 300, 366, 406, 50964], "temperature": 0.0, "avg_logprob": -0.1758084978376116, "compression_ratio": 1.8518518518518519, "no_speech_prob": 0.0045064715668559074}, {"id": 198, "seek": 125388, "start": 1266.5200000000002, "end": 1271.16, "text": " deallocated, but they should. So you can see all these and where they were allocated to.", "tokens": [50996, 368, 336, 905, 770, 11, 457, 436, 820, 13, 407, 291, 393, 536, 439, 613, 293, 689, 436, 645, 29772, 281, 13, 51228], "temperature": 0.0, "avg_logprob": -0.1758084978376116, "compression_ratio": 1.8518518518518519, "no_speech_prob": 0.0045064715668559074}, {"id": 199, "seek": 125388, "start": 1272.0400000000002, "end": 1276.92, "text": " And so another one is the JavaScript allocation. And that works also in release, I think.", "tokens": [51272, 400, 370, 1071, 472, 307, 264, 15778, 27599, 13, 400, 300, 1985, 611, 294, 4374, 11, 286, 519, 13, 51516], "temperature": 0.0, "avg_logprob": -0.1758084978376116, "compression_ratio": 1.8518518518518519, "no_speech_prob": 0.0045064715668559074}, {"id": 200, "seek": 125388, "start": 1277.96, "end": 1283.5600000000002, "text": " So you can have a look at the documentation here. So one thing that could be interesting for you", "tokens": [51568, 407, 291, 393, 362, 257, 574, 412, 264, 14333, 510, 13, 407, 472, 551, 300, 727, 312, 1880, 337, 291, 51848], "temperature": 0.0, "avg_logprob": -0.1758084978376116, "compression_ratio": 1.8518518518518519, "no_speech_prob": 0.0045064715668559074}, {"id": 201, "seek": 128356, "start": 1283.56, "end": 1289.8, "text": " is we have an importer for Chrome and Node also. So you can take the JSON of Chrome,", "tokens": [50364, 307, 321, 362, 364, 704, 6122, 337, 15327, 293, 38640, 611, 13, 407, 291, 393, 747, 264, 31828, 295, 15327, 11, 50676], "temperature": 0.0, "avg_logprob": -0.17651216607344777, "compression_ratio": 1.6636363636363636, "no_speech_prob": 0.0026403453666716814}, {"id": 202, "seek": 128356, "start": 1290.9199999999998, "end": 1295.8, "text": " put that in the profiler from the profiler homepage, and then you can do all the things", "tokens": [50732, 829, 300, 294, 264, 1740, 5441, 490, 264, 1740, 5441, 31301, 11, 293, 550, 291, 393, 360, 439, 264, 721, 50976], "temperature": 0.0, "avg_logprob": -0.17651216607344777, "compression_ratio": 1.6636363636363636, "no_speech_prob": 0.0026403453666716814}, {"id": 203, "seek": 128356, "start": 1295.8, "end": 1302.6, "text": " I was showing you earlier. You can share it. You can zoom in maybe better than in the UI of Chrome", "tokens": [50976, 286, 390, 4099, 291, 3071, 13, 509, 393, 2073, 309, 13, 509, 393, 8863, 294, 1310, 1101, 813, 294, 264, 15682, 295, 15327, 51316], "temperature": 0.0, "avg_logprob": -0.17651216607344777, "compression_ratio": 1.6636363636363636, "no_speech_prob": 0.0026403453666716814}, {"id": 204, "seek": 128356, "start": 1302.6, "end": 1309.56, "text": " and use some transform that I didn't explain today. But advanced stuff you can do with the UI.", "tokens": [51316, 293, 764, 512, 4088, 300, 286, 994, 380, 2903, 965, 13, 583, 7339, 1507, 291, 393, 360, 365, 264, 15682, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17651216607344777, "compression_ratio": 1.6636363636363636, "no_speech_prob": 0.0026403453666716814}, {"id": 205, "seek": 130956, "start": 1309.56, "end": 1316.52, "text": " We do that Chrome count. And that's a parenthesis. Chrome tools are also very good. And that", "tokens": [50364, 492, 360, 300, 15327, 1207, 13, 400, 300, 311, 257, 23350, 9374, 13, 15327, 3873, 366, 611, 588, 665, 13, 400, 300, 50712], "temperature": 0.0, "avg_logprob": -0.1769649370581703, "compression_ratio": 1.744360902255639, "no_speech_prob": 0.006667643319815397}, {"id": 206, "seek": 130956, "start": 1316.52, "end": 1321.72, "text": " provides a different angle to your application. So because it's a different browser engine.", "tokens": [50712, 6417, 257, 819, 5802, 281, 428, 3861, 13, 407, 570, 309, 311, 257, 819, 11185, 2848, 13, 50972], "temperature": 0.0, "avg_logprob": -0.1769649370581703, "compression_ratio": 1.744360902255639, "no_speech_prob": 0.006667643319815397}, {"id": 207, "seek": 130956, "start": 1321.72, "end": 1327.1599999999999, "text": " So on Firefox and on Chrome, maybe it makes sense that they don't work the same. So they", "tokens": [50972, 407, 322, 46613, 293, 322, 15327, 11, 1310, 309, 1669, 2020, 300, 436, 500, 380, 589, 264, 912, 13, 407, 436, 51244], "temperature": 0.0, "avg_logprob": -0.1769649370581703, "compression_ratio": 1.744360902255639, "no_speech_prob": 0.006667643319815397}, {"id": 208, "seek": 130956, "start": 1327.1599999999999, "end": 1331.6399999999999, "text": " won't show the same thing. That's interesting to use both tools and the one in other browsers too.", "tokens": [51244, 1582, 380, 855, 264, 912, 551, 13, 663, 311, 1880, 281, 764, 1293, 3873, 293, 264, 472, 294, 661, 36069, 886, 13, 51468], "temperature": 0.0, "avg_logprob": -0.1769649370581703, "compression_ratio": 1.744360902255639, "no_speech_prob": 0.006667643319815397}, {"id": 209, "seek": 130956, "start": 1333.0, "end": 1336.6799999999998, "text": " But you can import a new tool and share with your colleagues. So that's pretty interesting.", "tokens": [51536, 583, 291, 393, 974, 257, 777, 2290, 293, 2073, 365, 428, 7734, 13, 407, 300, 311, 1238, 1880, 13, 51720], "temperature": 0.0, "avg_logprob": -0.1769649370581703, "compression_ratio": 1.744360902255639, "no_speech_prob": 0.006667643319815397}, {"id": 210, "seek": 133668, "start": 1337.64, "end": 1344.6000000000001, "text": " And you can also compare profiles. So there are some documentation in your docs. So that makes it", "tokens": [50412, 400, 291, 393, 611, 6794, 23693, 13, 407, 456, 366, 512, 14333, 294, 428, 45623, 13, 407, 300, 1669, 309, 50760], "temperature": 0.0, "avg_logprob": -0.1769610813685826, "compression_ratio": 1.7410714285714286, "no_speech_prob": 0.0020572261419147253}, {"id": 211, "seek": 133668, "start": 1344.6000000000001, "end": 1353.0, "text": " possible to see the impact of a change. Like you think you fixed the problem, you can compare", "tokens": [50760, 1944, 281, 536, 264, 2712, 295, 257, 1319, 13, 1743, 291, 519, 291, 6806, 264, 1154, 11, 291, 393, 6794, 51180], "temperature": 0.0, "avg_logprob": -0.1769610813685826, "compression_ratio": 1.7410714285714286, "no_speech_prob": 0.0020572261419147253}, {"id": 212, "seek": 133668, "start": 1353.0, "end": 1358.52, "text": " the profile before and after and maybe check that you actually fixed your problem. Because as I said", "tokens": [51180, 264, 7964, 949, 293, 934, 293, 1310, 1520, 300, 291, 767, 6806, 428, 1154, 13, 1436, 382, 286, 848, 51456], "temperature": 0.0, "avg_logprob": -0.1769610813685826, "compression_ratio": 1.7410714285714286, "no_speech_prob": 0.0020572261419147253}, {"id": 213, "seek": 133668, "start": 1358.52, "end": 1363.4, "text": " earlier, you need to measure. Sometimes you think you fixed it and you didn't. Or maybe you fixed", "tokens": [51456, 3071, 11, 291, 643, 281, 3481, 13, 4803, 291, 519, 291, 6806, 309, 293, 291, 994, 380, 13, 1610, 1310, 291, 6806, 51700], "temperature": 0.0, "avg_logprob": -0.1769610813685826, "compression_ratio": 1.7410714285714286, "no_speech_prob": 0.0020572261419147253}, {"id": 214, "seek": 136340, "start": 1363.4, "end": 1368.2800000000002, "text": " one part of it. Like you fixed one state change. But there was another one elsewhere. And so", "tokens": [50364, 472, 644, 295, 309, 13, 1743, 291, 6806, 472, 1785, 1319, 13, 583, 456, 390, 1071, 472, 14517, 13, 400, 370, 50608], "temperature": 0.0, "avg_logprob": -0.18762477047472115, "compression_ratio": 1.518181818181818, "no_speech_prob": 0.0034541150089353323}, {"id": 215, "seek": 136340, "start": 1368.2800000000002, "end": 1372.92, "text": " there is still an update happening. So my conclusion now.", "tokens": [50608, 456, 307, 920, 364, 5623, 2737, 13, 407, 452, 10063, 586, 13, 50840], "temperature": 0.0, "avg_logprob": -0.18762477047472115, "compression_ratio": 1.518181818181818, "no_speech_prob": 0.0034541150089353323}, {"id": 216, "seek": 136340, "start": 1377.24, "end": 1383.16, "text": " Again, the most important thing is measure and guess. I think you really remember this sentence.", "tokens": [51056, 3764, 11, 264, 881, 1021, 551, 307, 3481, 293, 2041, 13, 286, 519, 291, 534, 1604, 341, 8174, 13, 51352], "temperature": 0.0, "avg_logprob": -0.18762477047472115, "compression_ratio": 1.518181818181818, "no_speech_prob": 0.0034541150089353323}, {"id": 217, "seek": 136340, "start": 1383.72, "end": 1389.4, "text": " This is just a tool in your toolbox. And yeah, sometimes you need to take a step back.", "tokens": [51380, 639, 307, 445, 257, 2290, 294, 428, 44593, 13, 400, 1338, 11, 2171, 291, 643, 281, 747, 257, 1823, 646, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18762477047472115, "compression_ratio": 1.518181818181818, "no_speech_prob": 0.0034541150089353323}, {"id": 218, "seek": 138940, "start": 1390.3600000000001, "end": 1396.6000000000001, "text": " You can also use a profiler to debug. I didn't insist much on that. But because you can instrument", "tokens": [50412, 509, 393, 611, 764, 257, 1740, 5441, 281, 24083, 13, 286, 994, 380, 13466, 709, 322, 300, 13, 583, 570, 291, 393, 7198, 50724], "temperature": 0.0, "avg_logprob": -0.16207085442297237, "compression_ratio": 1.668103448275862, "no_speech_prob": 0.013890844769775867}, {"id": 219, "seek": 138940, "start": 1396.6000000000001, "end": 1401.64, "text": " your code, you can also use it to just debug your code. It's not just for performance. You can just", "tokens": [50724, 428, 3089, 11, 291, 393, 611, 764, 309, 281, 445, 24083, 428, 3089, 13, 467, 311, 406, 445, 337, 3389, 13, 509, 393, 445, 50976], "temperature": 0.0, "avg_logprob": -0.16207085442297237, "compression_ratio": 1.668103448275862, "no_speech_prob": 0.013890844769775867}, {"id": 220, "seek": 138940, "start": 1401.64, "end": 1408.2, "text": " get a view of what your program looks like. What's happening in your program. And finally,", "tokens": [50976, 483, 257, 1910, 295, 437, 428, 1461, 1542, 411, 13, 708, 311, 2737, 294, 428, 1461, 13, 400, 2721, 11, 51304], "temperature": 0.0, "avg_logprob": -0.16207085442297237, "compression_ratio": 1.668103448275862, "no_speech_prob": 0.013890844769775867}, {"id": 221, "seek": 138940, "start": 1408.2, "end": 1412.2800000000002, "text": " you can share profiles with your team. Especially when you're distributed like we are at Mozilla.", "tokens": [51304, 291, 393, 2073, 23693, 365, 428, 1469, 13, 8545, 562, 291, 434, 12631, 411, 321, 366, 412, 3335, 26403, 13, 51508], "temperature": 0.0, "avg_logprob": -0.16207085442297237, "compression_ratio": 1.668103448275862, "no_speech_prob": 0.013890844769775867}, {"id": 222, "seek": 141228, "start": 1413.24, "end": 1419.56, "text": " You can share it, put it on metrics or ISC or whatever things you're using and go to a Zoom", "tokens": [50412, 509, 393, 2073, 309, 11, 829, 309, 322, 16367, 420, 6205, 34, 420, 2035, 721, 291, 434, 1228, 293, 352, 281, 257, 13453, 50728], "temperature": 0.0, "avg_logprob": -0.2634576225280762, "compression_ratio": 1.3428571428571427, "no_speech_prob": 0.01942390389740467}, {"id": 223, "seek": 141228, "start": 1419.56, "end": 1430.12, "text": " code and then talk about that together. And thank you for being here at that time of the Sunday.", "tokens": [50728, 3089, 293, 550, 751, 466, 300, 1214, 13, 400, 1309, 291, 337, 885, 510, 412, 300, 565, 295, 264, 7776, 13, 51256], "temperature": 0.0, "avg_logprob": -0.2634576225280762, "compression_ratio": 1.3428571428571427, "no_speech_prob": 0.01942390389740467}, {"id": 224, "seek": 143012, "start": 1430.4399999999998, "end": 1441.9599999999998, "text": " So you can find the Firefox Profiler website here. Documentation also here. We have a", "tokens": [50380, 407, 291, 393, 915, 264, 46613, 6039, 5441, 3144, 510, 13, 37684, 399, 611, 510, 13, 492, 362, 257, 50956], "temperature": 0.0, "avg_logprob": -0.2718649814003392, "compression_ratio": 1.7488372093023257, "no_speech_prob": 0.10169851779937744}, {"id": 225, "seek": 143012, "start": 1441.9599999999998, "end": 1447.7199999999998, "text": " matrix channel. So come tell if you have questions. If you have a question about a profile you want to", "tokens": [50956, 8141, 2269, 13, 407, 808, 980, 498, 291, 362, 1651, 13, 759, 291, 362, 257, 1168, 466, 257, 7964, 291, 528, 281, 51244], "temperature": 0.0, "avg_logprob": -0.2718649814003392, "compression_ratio": 1.7488372093023257, "no_speech_prob": 0.10169851779937744}, {"id": 226, "seek": 143012, "start": 1447.7199999999998, "end": 1453.7199999999998, "text": " ask or help to analyze it, come here. Ask us. We will gladly help you. And this slide you can", "tokens": [51244, 1029, 420, 854, 281, 12477, 309, 11, 808, 510, 13, 12320, 505, 13, 492, 486, 47307, 854, 291, 13, 400, 341, 4137, 291, 393, 51544], "temperature": 0.0, "avg_logprob": -0.2718649814003392, "compression_ratio": 1.7488372093023257, "no_speech_prob": 0.10169851779937744}, {"id": 227, "seek": 143012, "start": 1453.7199999999998, "end": 1458.52, "text": " find them here with this QR code too. So happy to answer questions now if you have questions.", "tokens": [51544, 915, 552, 510, 365, 341, 32784, 3089, 886, 13, 407, 2055, 281, 1867, 1651, 586, 498, 291, 362, 1651, 13, 51784], "temperature": 0.0, "avg_logprob": -0.2718649814003392, "compression_ratio": 1.7488372093023257, "no_speech_prob": 0.10169851779937744}, {"id": 228, "seek": 145852, "start": 1458.52, "end": 1462.2, "text": " Thank you. So the microphone is here. There is a question there.", "tokens": [50364, 1044, 291, 13, 407, 264, 10952, 307, 510, 13, 821, 307, 257, 1168, 456, 13, 50548], "temperature": 0.0, "avg_logprob": -0.14563404886346115, "compression_ratio": 1.5845410628019323, "no_speech_prob": 0.029611771926283836}, {"id": 229, "seek": 145852, "start": 1466.04, "end": 1470.84, "text": " I am very curious how you ensure security of the profile information because if I am", "tokens": [50740, 286, 669, 588, 6369, 577, 291, 5586, 3825, 295, 264, 7964, 1589, 570, 498, 286, 669, 50980], "temperature": 0.0, "avg_logprob": -0.14563404886346115, "compression_ratio": 1.5845410628019323, "no_speech_prob": 0.029611771926283836}, {"id": 230, "seek": 145852, "start": 1471.8, "end": 1476.76, "text": " on my usual admin account and I'm debugging and all the network information is there,", "tokens": [51028, 322, 452, 7713, 24236, 2696, 293, 286, 478, 45592, 293, 439, 264, 3209, 1589, 307, 456, 11, 51276], "temperature": 0.0, "avg_logprob": -0.14563404886346115, "compression_ratio": 1.5845410628019323, "no_speech_prob": 0.029611771926283836}, {"id": 231, "seek": 145852, "start": 1476.76, "end": 1482.2, "text": " it will have all the tokens and everything. All the API responses probably have the API keys", "tokens": [51276, 309, 486, 362, 439, 264, 22667, 293, 1203, 13, 1057, 264, 9362, 13019, 1391, 362, 264, 9362, 9317, 51548], "temperature": 0.0, "avg_logprob": -0.14563404886346115, "compression_ratio": 1.5845410628019323, "no_speech_prob": 0.029611771926283836}, {"id": 232, "seek": 148220, "start": 1482.2, "end": 1488.44, "text": " because I'm debugging stuff. And somebody nefarious with a strong Russian accent could be", "tokens": [50364, 570, 286, 478, 45592, 1507, 13, 400, 2618, 408, 21196, 851, 365, 257, 2068, 7220, 11982, 727, 312, 50676], "temperature": 0.0, "avg_logprob": -0.2063606034463911, "compression_ratio": 1.422680412371134, "no_speech_prob": 0.07965507358312607}, {"id": 233, "seek": 148220, "start": 1489.32, "end": 1495.0, "text": " waiting and just iterating over all the possible URLs all the time. And how do you deal with that?", "tokens": [50720, 3806, 293, 445, 17138, 990, 670, 439, 264, 1944, 43267, 439, 264, 565, 13, 400, 577, 360, 291, 2028, 365, 300, 30, 51004], "temperature": 0.0, "avg_logprob": -0.2063606034463911, "compression_ratio": 1.422680412371134, "no_speech_prob": 0.07965507358312607}, {"id": 234, "seek": 148220, "start": 1496.2, "end": 1504.68, "text": " So let me refer to the question. What about the security? Because you can have API keys", "tokens": [51064, 407, 718, 385, 2864, 281, 264, 1168, 13, 708, 466, 264, 3825, 30, 1436, 291, 393, 362, 9362, 9317, 51488], "temperature": 0.0, "avg_logprob": -0.2063606034463911, "compression_ratio": 1.422680412371134, "no_speech_prob": 0.07965507358312607}, {"id": 235, "seek": 150468, "start": 1505.48, "end": 1512.8400000000001, "text": " in the capture data, right, for example. So yes, that happens. But when you share a profile,", "tokens": [50404, 294, 264, 7983, 1412, 11, 558, 11, 337, 1365, 13, 407, 2086, 11, 300, 2314, 13, 583, 562, 291, 2073, 257, 7964, 11, 50772], "temperature": 0.0, "avg_logprob": -0.2166500720348987, "compression_ratio": 1.5622317596566524, "no_speech_prob": 0.1917547583580017}, {"id": 236, "seek": 150468, "start": 1512.8400000000001, "end": 1518.68, "text": " you can uncheck the thing, include URLs and that will remove everything related to URLs. So", "tokens": [50772, 291, 393, 46672, 264, 551, 11, 4090, 43267, 293, 300, 486, 4159, 1203, 4077, 281, 43267, 13, 407, 51064], "temperature": 0.0, "avg_logprob": -0.2166500720348987, "compression_ratio": 1.5622317596566524, "no_speech_prob": 0.1917547583580017}, {"id": 237, "seek": 150468, "start": 1519.48, "end": 1524.04, "text": " you won't have that anymore. We don't capture headers and all that currently. We just capture", "tokens": [51104, 291, 1582, 380, 362, 300, 3602, 13, 492, 500, 380, 7983, 45101, 293, 439, 300, 4362, 13, 492, 445, 7983, 51332], "temperature": 0.0, "avg_logprob": -0.2166500720348987, "compression_ratio": 1.5622317596566524, "no_speech_prob": 0.1917547583580017}, {"id": 238, "seek": 150468, "start": 1524.04, "end": 1531.8, "text": " the URLs. Even in the network configuration? Yeah. Okay. So it's not like the normal.", "tokens": [51332, 264, 43267, 13, 2754, 294, 264, 3209, 11694, 30, 865, 13, 1033, 13, 407, 309, 311, 406, 411, 264, 2710, 13, 51720], "temperature": 0.0, "avg_logprob": -0.2166500720348987, "compression_ratio": 1.5622317596566524, "no_speech_prob": 0.1917547583580017}, {"id": 239, "seek": 153468, "start": 1534.68, "end": 1542.3600000000001, "text": " Thanks for the talk. Small question. I believe there is kind of the same tool in the performance", "tokens": [50364, 2561, 337, 264, 751, 13, 15287, 1168, 13, 286, 1697, 456, 307, 733, 295, 264, 912, 2290, 294, 264, 3389, 50748], "temperature": 0.0, "avg_logprob": -0.1390243140600061, "compression_ratio": 1.6594827586206897, "no_speech_prob": 0.01587538979947567}, {"id": 240, "seek": 153468, "start": 1542.3600000000001, "end": 1549.48, "text": " tab of the Firefox developer edition DevTools. Is there any difference between the two programs?", "tokens": [50748, 4421, 295, 264, 46613, 10754, 11377, 9096, 51, 29298, 13, 1119, 456, 604, 2649, 1296, 264, 732, 4268, 30, 51104], "temperature": 0.0, "avg_logprob": -0.1390243140600061, "compression_ratio": 1.6594827586206897, "no_speech_prob": 0.01587538979947567}, {"id": 241, "seek": 153468, "start": 1549.48, "end": 1555.24, "text": " Good question. I wanted to mention that I forgot. There used to be a performance panel in DevTools.", "tokens": [51104, 2205, 1168, 13, 286, 1415, 281, 2152, 300, 286, 5298, 13, 821, 1143, 281, 312, 257, 3389, 4831, 294, 9096, 51, 29298, 13, 51392], "temperature": 0.0, "avg_logprob": -0.1390243140600061, "compression_ratio": 1.6594827586206897, "no_speech_prob": 0.01587538979947567}, {"id": 242, "seek": 153468, "start": 1555.88, "end": 1561.88, "text": " We removed it. Now it's been replaced by this one. But we still have a performance panel in", "tokens": [51424, 492, 7261, 309, 13, 823, 309, 311, 668, 10772, 538, 341, 472, 13, 583, 321, 920, 362, 257, 3389, 4831, 294, 51724], "temperature": 0.0, "avg_logprob": -0.1390243140600061, "compression_ratio": 1.6594827586206897, "no_speech_prob": 0.01587538979947567}, {"id": 243, "seek": 156188, "start": 1562.3600000000001, "end": 1568.2, "text": " the DevTools. It's the same thing, except that when you open your DevTools, you have some overhead.", "tokens": [50388, 264, 9096, 51, 29298, 13, 467, 311, 264, 912, 551, 11, 3993, 300, 562, 291, 1269, 428, 9096, 51, 29298, 11, 291, 362, 512, 19922, 13, 50680], "temperature": 0.0, "avg_logprob": -0.2356091211008471, "compression_ratio": 1.6633663366336633, "no_speech_prob": 0.014837097376585007}, {"id": 244, "seek": 156188, "start": 1569.0800000000002, "end": 1573.88, "text": " So our recommendation is that you use the pop-up like I've shown here.", "tokens": [50724, 407, 527, 11879, 307, 300, 291, 764, 264, 1665, 12, 1010, 411, 286, 600, 4898, 510, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2356091211008471, "compression_ratio": 1.6633663366336633, "no_speech_prob": 0.014837097376585007}, {"id": 245, "seek": 156188, "start": 1575.0, "end": 1579.0, "text": " Okay. So general recommendation, use the external profile. Okay.", "tokens": [51020, 1033, 13, 407, 2674, 11879, 11, 764, 264, 8320, 7964, 13, 1033, 13, 51220], "temperature": 0.0, "avg_logprob": -0.2356091211008471, "compression_ratio": 1.6633663366336633, "no_speech_prob": 0.014837097376585007}, {"id": 246, "seek": 156188, "start": 1580.44, "end": 1586.3600000000001, "text": " You can also profile your Firefox Android and you can profile remotely like that using the DevTools.", "tokens": [51292, 509, 393, 611, 7964, 428, 46613, 8853, 293, 291, 393, 7964, 20824, 411, 300, 1228, 264, 9096, 51, 29298, 13, 51588], "temperature": 0.0, "avg_logprob": -0.2356091211008471, "compression_ratio": 1.6633663366336633, "no_speech_prob": 0.014837097376585007}, {"id": 247, "seek": 158636, "start": 1587.0, "end": 1592.52, "text": " Smaller question. Are there plans to add support for like flame graphs generated from", "tokens": [50396, 15287, 260, 1168, 13, 2014, 456, 5482, 281, 909, 1406, 337, 411, 13287, 24877, 10833, 490, 50672], "temperature": 0.0, "avg_logprob": -0.18712166377476283, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.006297960877418518}, {"id": 248, "seek": 158636, "start": 1593.3999999999999, "end": 1597.8, "text": " birth, for example, for native applications just to use it as a kind of a viewer for", "tokens": [50716, 3965, 11, 337, 1365, 11, 337, 8470, 5821, 445, 281, 764, 309, 382, 257, 733, 295, 257, 16767, 337, 50936], "temperature": 0.0, "avg_logprob": -0.18712166377476283, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.006297960877418518}, {"id": 249, "seek": 158636, "start": 1598.36, "end": 1603.08, "text": " other births not related to the web? Yes. So we have an importer for Linux birth,", "tokens": [50964, 661, 3965, 82, 406, 4077, 281, 264, 3670, 30, 1079, 13, 407, 321, 362, 364, 704, 6122, 337, 18734, 3965, 11, 51200], "temperature": 0.0, "avg_logprob": -0.18712166377476283, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.006297960877418518}, {"id": 250, "seek": 158636, "start": 1603.08, "end": 1608.6, "text": " actually. We have some documentation about that. There is also the fantastic tool by Markus,", "tokens": [51200, 767, 13, 492, 362, 512, 14333, 466, 300, 13, 821, 307, 611, 264, 5456, 2290, 538, 45041, 11, 51476], "temperature": 0.0, "avg_logprob": -0.18712166377476283, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.006297960877418518}, {"id": 251, "seek": 160860, "start": 1608.6799999999998, "end": 1615.7199999999998, "text": " which is somewhere here called Sempli. That is very well integrated with the profiler to", "tokens": [50368, 597, 307, 4079, 510, 1219, 14421, 564, 72, 13, 663, 307, 588, 731, 10919, 365, 264, 1740, 5441, 281, 50720], "temperature": 0.0, "avg_logprob": -0.21367924030010516, "compression_ratio": 1.53551912568306, "no_speech_prob": 0.053645603358745575}, {"id": 252, "seek": 160860, "start": 1616.9199999999998, "end": 1625.1599999999999, "text": " profile native applications to. So it's called Sempli, S-A-M-P-L-Y. You can compile it on your", "tokens": [50780, 7964, 8470, 5821, 281, 13, 407, 309, 311, 1219, 14421, 564, 72, 11, 318, 12, 32, 12, 44, 12, 47, 12, 43, 12, 56, 13, 509, 393, 31413, 309, 322, 428, 51192], "temperature": 0.0, "avg_logprob": -0.21367924030010516, "compression_ratio": 1.53551912568306, "no_speech_prob": 0.053645603358745575}, {"id": 253, "seek": 160860, "start": 1625.1599999999999, "end": 1633.6399999999999, "text": " computer. It's made in Rust and this is just an amazing tool to profile your native applications.", "tokens": [51192, 3820, 13, 467, 311, 1027, 294, 34952, 293, 341, 307, 445, 364, 2243, 2290, 281, 7964, 428, 8470, 5821, 13, 51616], "temperature": 0.0, "avg_logprob": -0.21367924030010516, "compression_ratio": 1.53551912568306, "no_speech_prob": 0.053645603358745575}, {"id": 254, "seek": 163364, "start": 1633.64, "end": 1640.5200000000002, "text": " So you can try that. Hello. It is the way to profile a full stack application.", "tokens": [50364, 407, 291, 393, 853, 300, 13, 2425, 13, 467, 307, 264, 636, 281, 7964, 257, 1577, 8630, 3861, 13, 50708], "temperature": 0.0, "avg_logprob": -0.15729641145275486, "compression_ratio": 1.5594405594405594, "no_speech_prob": 0.010440426878631115}, {"id": 255, "seek": 163364, "start": 1641.5600000000002, "end": 1645.96, "text": " I mean the front end and the back end in the same time.", "tokens": [50760, 286, 914, 264, 1868, 917, 293, 264, 646, 917, 294, 264, 912, 565, 13, 50980], "temperature": 0.0, "avg_logprob": -0.15729641145275486, "compression_ratio": 1.5594405594405594, "no_speech_prob": 0.010440426878631115}, {"id": 256, "seek": 163364, "start": 1649.8000000000002, "end": 1659.3200000000002, "text": " You can't do that in the same time currently. What you can do is you can profile with of", "tokens": [51172, 509, 393, 380, 360, 300, 294, 264, 912, 565, 4362, 13, 708, 291, 393, 360, 307, 291, 393, 7964, 365, 295, 51648], "temperature": 0.0, "avg_logprob": -0.15729641145275486, "compression_ratio": 1.5594405594405594, "no_speech_prob": 0.010440426878631115}, {"id": 257, "seek": 165932, "start": 1659.32, "end": 1666.6, "text": " course the full stack. So it's probably not in back end maybe. Not Python. So there is a", "tokens": [50364, 1164, 264, 1577, 8630, 13, 407, 309, 311, 1391, 406, 294, 646, 917, 1310, 13, 1726, 15329, 13, 407, 456, 307, 257, 50728], "temperature": 0.0, "avg_logprob": -0.22210356653953084, "compression_ratio": 1.6343612334801763, "no_speech_prob": 0.01441758032888174}, {"id": 258, "seek": 165932, "start": 1666.6, "end": 1672.4399999999998, "text": " tool called FunctionTrade that I don't know well. That is using the profiler to profile", "tokens": [50728, 2290, 1219, 11166, 882, 14252, 762, 300, 286, 500, 380, 458, 731, 13, 663, 307, 1228, 264, 1740, 5441, 281, 7964, 51020], "temperature": 0.0, "avg_logprob": -0.22210356653953084, "compression_ratio": 1.6343612334801763, "no_speech_prob": 0.01441758032888174}, {"id": 259, "seek": 165932, "start": 1672.4399999999998, "end": 1677.3999999999999, "text": " Python applications. I don't know much about that. So I don't want to say too much things about that.", "tokens": [51020, 15329, 5821, 13, 286, 500, 380, 458, 709, 466, 300, 13, 407, 286, 500, 380, 528, 281, 584, 886, 709, 721, 466, 300, 13, 51268], "temperature": 0.0, "avg_logprob": -0.22210356653953084, "compression_ratio": 1.6343612334801763, "no_speech_prob": 0.01441758032888174}, {"id": 260, "seek": 165932, "start": 1678.28, "end": 1686.84, "text": " So currently we can't do what you're saying directly. So sorry. Last question and then we'll", "tokens": [51312, 407, 4362, 321, 393, 380, 360, 437, 291, 434, 1566, 3838, 13, 407, 2597, 13, 5264, 1168, 293, 550, 321, 603, 51740], "temperature": 0.0, "avg_logprob": -0.22210356653953084, "compression_ratio": 1.6343612334801763, "no_speech_prob": 0.01441758032888174}, {"id": 261, "seek": 168684, "start": 1686.84, "end": 1693.0, "text": " close the room after of course all of us pick up all the trash that would be left if any.", "tokens": [50364, 1998, 264, 1808, 934, 295, 1164, 439, 295, 505, 1888, 493, 439, 264, 11321, 300, 576, 312, 1411, 498, 604, 13, 50672], "temperature": 0.0, "avg_logprob": -0.15382392510123874, "compression_ratio": 1.751219512195122, "no_speech_prob": 0.03783407807350159}, {"id": 262, "seek": 168684, "start": 1694.84, "end": 1701.0, "text": " Thank you for the talk. Is there any plans to add support for importing P-Profiles which like", "tokens": [50764, 1044, 291, 337, 264, 751, 13, 1119, 456, 604, 5482, 281, 909, 1406, 337, 43866, 430, 12, 43227, 4680, 597, 411, 51072], "temperature": 0.0, "avg_logprob": -0.15382392510123874, "compression_ratio": 1.751219512195122, "no_speech_prob": 0.03783407807350159}, {"id": 263, "seek": 168684, "start": 1701.0, "end": 1709.32, "text": " some profilers output? So can you repeat that again? Sorry. Are there any plans to add support", "tokens": [51072, 512, 1740, 388, 433, 5598, 30, 407, 393, 291, 7149, 300, 797, 30, 4919, 13, 2014, 456, 604, 5482, 281, 909, 1406, 51488], "temperature": 0.0, "avg_logprob": -0.15382392510123874, "compression_ratio": 1.751219512195122, "no_speech_prob": 0.03783407807350159}, {"id": 264, "seek": 168684, "start": 1709.32, "end": 1714.6, "text": " for P-Profiles which like for instance Go produces as an output of the profiler?", "tokens": [51488, 337, 430, 12, 43227, 4680, 597, 411, 337, 5197, 1037, 14725, 382, 364, 5598, 295, 264, 1740, 5441, 30, 51752], "temperature": 0.0, "avg_logprob": -0.15382392510123874, "compression_ratio": 1.751219512195122, "no_speech_prob": 0.03783407807350159}, {"id": 265, "seek": 171684, "start": 1717.48, "end": 1724.1999999999998, "text": " You mean to have output of no I think I didn't get the question. Sorry. The output like the", "tokens": [50396, 509, 914, 281, 362, 5598, 295, 572, 286, 519, 286, 994, 380, 483, 264, 1168, 13, 4919, 13, 440, 5598, 411, 264, 50732], "temperature": 0.0, "avg_logprob": -0.19566574837397605, "compression_ratio": 1.6577777777777778, "no_speech_prob": 0.007207089103758335}, {"id": 266, "seek": 171684, "start": 1724.1999999999998, "end": 1731.8799999999999, "text": " P-Profile format which is for profiling like we can get P-Profs with this viewer. Okay. We don't", "tokens": [50732, 430, 12, 43227, 794, 7877, 597, 307, 337, 1740, 4883, 411, 321, 393, 483, 430, 12, 43227, 82, 365, 341, 16767, 13, 1033, 13, 492, 500, 380, 51116], "temperature": 0.0, "avg_logprob": -0.19566574837397605, "compression_ratio": 1.6577777777777778, "no_speech_prob": 0.007207089103758335}, {"id": 267, "seek": 171684, "start": 1731.8799999999999, "end": 1739.48, "text": " have we don't have really a plan but it's easy to I mean easy. It's not really easy but it's", "tokens": [51116, 362, 321, 500, 380, 362, 534, 257, 1393, 457, 309, 311, 1858, 281, 286, 914, 1858, 13, 467, 311, 406, 534, 1858, 457, 309, 311, 51496], "temperature": 0.0, "avg_logprob": -0.19566574837397605, "compression_ratio": 1.6577777777777778, "no_speech_prob": 0.007207089103758335}, {"id": 268, "seek": 171684, "start": 1739.48, "end": 1744.76, "text": " possible to write converters for our format. Our format is very well documented. So we have", "tokens": [51496, 1944, 281, 2464, 9652, 1559, 337, 527, 7877, 13, 2621, 7877, 307, 588, 731, 23007, 13, 407, 321, 362, 51760], "temperature": 0.0, "avg_logprob": -0.19566574837397605, "compression_ratio": 1.6577777777777778, "no_speech_prob": 0.007207089103758335}, {"id": 269, "seek": 174476, "start": 1744.76, "end": 1755.4, "text": " converter for Linux perf for Valgrants format called DHAT I think for ArcTrace for Chrome.", "tokens": [50364, 33905, 337, 18734, 13826, 337, 691, 20422, 10968, 7877, 1219, 28606, 2218, 286, 519, 337, 21727, 14252, 617, 337, 15327, 13, 50896], "temperature": 0.0, "avg_logprob": -0.3254400052522358, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0039227623492479324}, {"id": 270, "seek": 174476, "start": 1756.2, "end": 1764.12, "text": " And currently that's all but we also have an external converter for ETW from Windows and for", "tokens": [50936, 400, 4362, 300, 311, 439, 457, 321, 611, 362, 364, 8320, 33905, 337, 36953, 54, 490, 8591, 293, 337, 51332], "temperature": 0.0, "avg_logprob": -0.3254400052522358, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0039227623492479324}, {"id": 271, "seek": 174476, "start": 1764.12, "end": 1771.8799999999999, "text": " I think GPR for GVM stuff. So it's possible to do converters. No we just need somebody to do it.", "tokens": [51332, 286, 519, 460, 15958, 337, 460, 53, 44, 1507, 13, 407, 309, 311, 1944, 281, 360, 9652, 1559, 13, 883, 321, 445, 643, 2618, 281, 360, 309, 13, 51720], "temperature": 0.0, "avg_logprob": -0.3254400052522358, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0039227623492479324}, {"id": 272, "seek": 177188, "start": 1772.8400000000001, "end": 1779.24, "text": " Sorry. But if there is enough interest now maybe you can look at looking to it or at least help", "tokens": [50412, 4919, 13, 583, 498, 456, 307, 1547, 1179, 586, 1310, 291, 393, 574, 412, 1237, 281, 309, 420, 412, 1935, 854, 50732], "temperature": 0.0, "avg_logprob": -0.20975343731866367, "compression_ratio": 1.606936416184971, "no_speech_prob": 0.04201376810669899}, {"id": 273, "seek": 177188, "start": 1779.24, "end": 1786.2, "text": " somebody doing do it. Thanks again and I don't know if you're going to be hanging around outside", "tokens": [50732, 2618, 884, 360, 309, 13, 2561, 797, 293, 286, 500, 380, 458, 498, 291, 434, 516, 281, 312, 8345, 926, 2380, 51080], "temperature": 0.0, "avg_logprob": -0.20975343731866367, "compression_ratio": 1.606936416184971, "no_speech_prob": 0.04201376810669899}, {"id": 274, "seek": 177188, "start": 1786.2, "end": 1792.5200000000002, "text": " if you want to chat. And there are more stickers. And there were stickers. Thank you.", "tokens": [51080, 498, 291, 528, 281, 5081, 13, 400, 456, 366, 544, 21019, 13, 400, 456, 645, 21019, 13, 1044, 291, 13, 51396], "temperature": 0.0, "avg_logprob": -0.20975343731866367, "compression_ratio": 1.606936416184971, "no_speech_prob": 0.04201376810669899}], "language": "en"}