{"text": " So, our museum is located in Namur, so it's not far from here, so if you have some time to come, you're welcome. So we have different missions, of course. One of it is to preserve all machines, to show them to the public, and also to study those machines to keep understanding them. So my talk is more precisely about that. And actually, why this machine? Actually we have a big collection, part of our museum is actually a big mechanical graphic collection, you can see it's here. So we have a whole bunch of machines, electrical and mechanical machines that are still being maintained. Unfortunately, we don't have the bull gamma tree, it's very rare, but it was connected with those machines. So we have many documentation about those machines, and we were interested to study that machine more specifically. So I will go through the historical context, make you discover the machine, and then go into it to try to emulate it, looking at some existing emulators, and then detailing our own emulator and what we learn with it. So let's go back in time, so you know we are here now in 2023. So if we go back, how long is it, 70 years ago, in the 50s, just after World War I, the first generation of computers was developed. So at that time, the technology was very different than today, because there were no integrated circuits, there were no CPU, microprocessor, they were developed in the 70s. There were no TTL circuits, there were no transistors, there were no magnetic cores. Actually when you really want to build a computer, you have technology like vacuum tubes and delay lines to try to store some memory and drums. So it was really a very different technology, and of course, you can imagine, the memory was very small. And so another point is that at that time, well, most of the processing was made because of course there was automation before the computer, so most of the automation was done through electromechanical machines, so a tabulating machine, you know it was developed in the end of the 19th century with the already tabulating machine, and then it became the IBM company. And you can see here that there was some kind of transition between that area and those machines, those computers that were starting to be developed. And actually the interesting point is that one that I will show you, actually at the beginning it was not really a computer, it was still some kind of auxiliary calculator for a tabulating machine, that one that you can see in our museum. And after, actually, it began to improve and the dependency between the machine was reversed. So the gamma-3 became the computer and the tabulating became the peripheral. So you can see other machines after, of course, you can see that both developed also the gamma-60, gamma-30 machine in the second generation, so I will not focus on that. So maybe in the next one. And so how did we study the machine? Of course, we have documentation at the museum. There is also a number of existing examples of that machine, one in Angers where it was built by Bull in Grenoble, they acquired one and they preserved it, and one in Frankfurt. So, of course, we don't have one, but we have those documentation and we have also many documentation that was also provided by Akonis, which is another museum located in Grenoble. And there are a few emulators, so we'll come back to that later. Have a look at the hardware, so as I told you, it's a first-generation computer, it's based on vacuum tube delay lines. Actually, the code was stored in a connection panel, so you can see it on the top there. So in order to program it, actually, you had to plug the instruction to say, well, the first instruction, it has four characters, but the first character, it's that exact decimal code, the second one is that code, and so on. So it's really like that spaghetti coding, and for that reason, actually, that spaghetti coding was also used in a tabulating machine, so it was the way to code at that time. And that's also the reason why we cannot really call it a computer in that form, because it does not follow the von Neumann architecture, because in that architecture, you have to have the code inside the main memory, although somehow that panel was memory mapped, so you could consider it like some kind of read-only memory. What about the memory? The memory itself, actually, it was only seven registers. And in order to keep the information, actually, the information, it was the equivalent of six bytes, so it's 12 characters of four bits. It was just circulating in a line with a regeneration system, so it's an LC circuit, and for just one word, for six bytes, you can see the device here, it's more than eight kilograms. You imagine the start of the... It was really very big. About the computation, it was also based more on diodes, so I will not go into all the details. It was mostly addition and subtraction, as I will see, the multiplication and division were implemented through iterative addition and subtraction. And what about the frequency? The frequency was 2.5 hertz. Why that? Actually, it could go, the inner could go faster, but it was just because it was synchronized with the mechanical machine, with punch cards, so it was limited by that part. And you can see also there is a nice drawer, it's really easy to open, of course, for the maintenance because when a vacuum tube had a problem, you had to replace it and it was designed for that. So is it a computer or a calculator? So in French, we have different names, but as I told you, we cannot really consider it as a computer first time because of that it was not following the von Neumann architecture and it was really designed as an auxiliary machine for the tabulating. So as you can see there, a quote from a guy who designed the machine in 1953. So it's really an extension and the good point is that that computation was so fast that there was no delay by the calculation, so it was really transparent for the tabulating. And actually at that time, the programs inside the machine were more like auxiliary computation that were augmenting the capability of the tabulating machine. And there there were evolution, that's the interesting point. There was a version, of course, that first version is only adding and subtracting integers, so there was a version that was able to do floating points. And then in 1957, there was a drum extension, that's the interesting point, it's about 100 kilobytes and it could store the program. So from that time, we can say that it's really the first French computer and it's also the transition between the electro-mechanical device, the electro-mechanical area and the computer area. Also, another interesting point is that those first computers were not using binary or exact decimal representation, they were still computing in decimal. So it's interesting because I found, it's in French with this transition there, there was a whole discussion about should we use decimal or should we use binary or exact decimal for computation. So there were some advantages, benefits and some disadvantages. So you can see the advantages, two figures, zero and one, it's really powerful for the relay, it's ideal to map and for the disadvantageous binary, it's become very long, very long word and we need to translate back and forth with the decimal. So the conclusion, it's quite funny, we will use semi-decimal, which actually is the name for binary coded decimal and they introduce those coding for the binary coded decimal. So that was for the first version, after they came back on that decision and actually the update for the drum extension was able to support the binary, the full binary mode. So what do we have as memory, as I told you we have those registers, actually we have seven main registers, you can see here a bit more because there were extensions. So a register is one word of 12 digits, 12 characters, so those four bits, so it's actually six bytes, so the main memory was only 42 bytes, so you see it's very, very limited. And if you look at the full architecture here, the full gamma tree with all the extensions, you can see on the top left the panel, the main registers are on the left, the top one, the M1 actually is the only one where you can read and write, so all the computation will be performed in that one and the other one, M2 to M7 will be used as a register to read operands. And the instruction, you can see the decoding of the instruction, the structure of the instruction is composed of four parts, I will detail them after, it's called TO, AD, OD and OF and the rest are extensions, so this is more memory, so you can switch those registers with those ones and the drum extension can also map on those octets, so you can load a part of program from there, from the drum to those parts and then execute them into the computer. So about the instruction set, you can see that there are four parts, so the first is quite natural, it's just the type of operation, so you can have addition, subtraction, I will detail after. The second part also quite natural, it's just the address, it means which operand we will use, so for the addition for AOE we can see it means M4, the register number four and what's a bit different and word is that then we have two other pieces of information in the instruction that we tell you which range in a register you will manipulate, because the reason is that the memory was scarce and so if you wanted to store two different information in the same register you could then address one part of it and you could really select if it was two bits and then ten bits and things like that. So you can see here a very simple addition, so I can decode it with you, so this means a transfer from one register to the accumulator, so the M0 register, so it's from M4, so you can see M4 we have two parts A and B, so A is from 6 to 9 and B is from 1 to 5, so the first thing is that we will load the part 6 to 9 into the accumulator, then we will ask to perform an addition with what we can find in the same register four in part 1.5, you can see 1.5 here and you can see that as an internal flag it also remembers the part that is used for the shift part that it should use for the addition and then it can perform the addition and will have A plus B inside the register and then you will put back the result, so it's a reverse instead of B or it's UB to store back the result in M4 and of course here you have to think oh I've done an addition so maybe there is one carry overflow so you can see here that we have provisioned one byte more to be able to store the result back, so you can see all the mental gymnastics you have to do to be able to program with that kind of range in the registers, so it means that when you are coding you have to use that kind of sheet, you can see of course the mnemonic, you see here the translation where you have to think about those range and you have then to facilitate that for the range you have to allocate your range and reason about your range also on this sheet, so you can see here the problem is computing that formula and then you will just perform the different calculation, multiplication, shift shift to have the right power and then divide by a square root of three. Okay quickly this is the full instruction set that you can see it's not very regular, well a natural thing is that no operation is still zero, it was already zero, you have operations to different kind of jumps, there was an inner flag to remember how to jump, you have different memory transfer, I will not go into details, of course to set memory to zero or to load a value to make the transfer between different kind of registers to, there is a logical ant, I didn't find any logical or, I don't know if there was one to be true, but okay different comparison and then of course the most important one from A, B, C, D, E, F the addition and the arithmetic operation and you can see there are two flavors for the multiplication and division because there was one what was called reduced multiplication and reduced division that was faster but that we will not operate on a double register because of course if you have a big to the result of multiplication could of course take twice as much as space. Okay so this is the code card, so it summarizes the whole instruction set and it reflects the complexity of its organization, you can point just three things, first it's called ordinateur, so in French the name was ordinateur but the name ordinateur was coined one year after for IBM machine so it was not, it didn't exist yet so you have to think about all that, you can see here the different arithmetic operation for A to F, so 12, 13, 14, 15 and you can see the order is not, it's not always in the order, the seven is presented higher because just the shift and operation and the two is not represented because it was an extension for the drum. Okay let me go quickly, so about existing emulators, so this one was written in 1995 by Vincent Gauguin, it's in sorry in x86 assembly code and it's still run but well thanks for the emulators because you need those bugs to run it, we don't have the source code, you can just see there, well it's just emulating everything so it's quite good complete and you can see there that it's just loading some information so it's just loading 0, 9, 4, 2, 7 in the memory tree register and then you can, well there is a drum emulated and then you have a number of programs on the drum you can try, a more recent one it's available online so this one is very interesting because it's very well documented and you can even play with the panel, there is a full console where you can step in and actually it was one of the sources of inspiration of our work because that one was in java 6 and oh it's in java so we kind of transposed and first studied that code and there was there is also an extension visualization 3d visualization which is funny because you can you can explore inside the machine you can see here the connection and there were big cables to connect the machine with the tabulating okay about the emulation structure of course what we have modeled is all the components so you have the machine you have the different kind of memories, banal memories it's just the registers, different series groups and then a special one which is the panel which is actually as you can see memory mapped to one of the series and of course you can also have connected machines and the drum then of course the whole instruction set you can see there the modeling the way the instructions are structured depending on their kind if it's for drum transfer it's of all the arithmetic operations have some common parts so we have some hierarchy there and of course there is some execution management and test and you can see the code there on github and what's interesting from also the emulation point of view of course all operation will have to specify the different information so for the addition this is an inner operation just to show you how it's implemented so of course you have to specify the range where you are performing the addition and this is quite a standard implementation where you just loop over the different the different bit and then you propagate the carry what is interesting is just that you have the base so that code would work if both for the binary and for the decimal implementation actually the variant of the machine so this this is trying to mimic the whole the whole operations another one very much simple is just to use the Java operations for example for the for the subtraction we just translate everything in decimal perform the subtraction and then start the result there is only one one thing that that must be we must be careful is that we have to use long in Java because 12 those 12 numbers are more than 32 bits in in Java we skip the division so the current implementation while we have our prototype just in Java so we are just using here the eclipses as an environment and running the the test so this is just test we have a small interface this not yet finished and you can see here a quick code that just showed the Fibonacci suite and well you can see the result here I will not go into the detail but you can you can see there is actually a loop so there is a jump for 10 iterations and then you you have the different number you can see the number after a few iterations you have 13 8 13 and six like that which which are being computed so it's it's working and now I will finish so what what what did we learn so it was quite quite funny to uh and strange to look at that machine it's not so complex to code but there are many many implementation details you see about those range manipulation and we are still have a lot a lot to explore for example all the floating points improving the user interface and of course we are at the start so we would like to really to study what was used and as as code at that time so in summary it was it was very and it's still very rewarding from the technical but also from the historical and cultural point of view okay thank you and if you have questions you're welcome you have some some reference there about all the the guys who have worked on the on that machine yeah like the core memory and the reading that was required to rewrite it again once you read so so the question is about the the core memory simulating the reading of the memory so the well it's a good question because I don't know how to call this a simulator or an emulator but uh the the components well the the machine is is quite quite also at it's uh what we are emulating it's kind of an abstraction of the machine I would say uh so one limitation is done that we don't really know the physics of the reading so uh we are assuming that we can read reliably the information and that we don't have any timing issue if the the things that are bothering you but of course we don't have a working machine to to compare with so we can only uh compare with expected result or with what order the older emulator as is delivering actually the older emulator had a problem we discovered there was a mistake discovered so it was corrected by the the guy who's still maintaining it somehow but yeah so the the point would be really to uh to be able to to study the electronic circuitry if we would like to go to that to that level but we don't have one sorry yeah there's a question from the stream yeah is there a compiler for gamma 3 a compiler uh well is there a compiler for the gamma 3 so you can you could see well assembly code was assembly language was invented two years before I think by uh uh and the assembly was was done manually at that time so at that time the question the answer is no there were no compiler but no today actually uh the guys from akonit have developed uh uh a compiler from a language that looks like uh java I think uh so you can uh you you you actually yes you can compile from that pseudo code language into uh into the gamma 3 yeah that was done I didn't try it but I did the question is was the program the program that I showed was uh in uh coded was was executed from the panel so well the panel is just a way to to specify the content of the memory is the is the same but just with wire but the the emulator supports the drum yeah yeah it could yeah yeah it could could load instructions so the drum could contain instructions or it could contain uh data yeah yeah yeah there is yeah so the the the question is about the the cycle count of the different instructions so yeah we we have uh time about timing uh about the uh the addition subtraction and different kind of multiplication so that's that's available and that's a good point because the emulator is not uh taking that into account so it would probably be a good good point to try to reproduce that that behavior thank you very much so maybe", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.56, "text": " So, our museum is located in Namur, so it's not far from here, so if you have some time", "tokens": [50364, 407, 11, 527, 8441, 307, 6870, 294, 10684, 374, 11, 370, 309, 311, 406, 1400, 490, 510, 11, 370, 498, 291, 362, 512, 565, 51042], "temperature": 0.0, "avg_logprob": -0.2415321929545342, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.19757121801376343}, {"id": 1, "seek": 0, "start": 13.56, "end": 16.56, "text": " to come, you're welcome.", "tokens": [51042, 281, 808, 11, 291, 434, 2928, 13, 51192], "temperature": 0.0, "avg_logprob": -0.2415321929545342, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.19757121801376343}, {"id": 2, "seek": 0, "start": 16.56, "end": 18.72, "text": " So we have different missions, of course.", "tokens": [51192, 407, 321, 362, 819, 13744, 11, 295, 1164, 13, 51300], "temperature": 0.0, "avg_logprob": -0.2415321929545342, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.19757121801376343}, {"id": 3, "seek": 0, "start": 18.72, "end": 25.6, "text": " One of it is to preserve all machines, to show them to the public, and also to study", "tokens": [51300, 1485, 295, 309, 307, 281, 15665, 439, 8379, 11, 281, 855, 552, 281, 264, 1908, 11, 293, 611, 281, 2979, 51644], "temperature": 0.0, "avg_logprob": -0.2415321929545342, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.19757121801376343}, {"id": 4, "seek": 0, "start": 25.6, "end": 27.88, "text": " those machines to keep understanding them.", "tokens": [51644, 729, 8379, 281, 1066, 3701, 552, 13, 51758], "temperature": 0.0, "avg_logprob": -0.2415321929545342, "compression_ratio": 1.5326086956521738, "no_speech_prob": 0.19757121801376343}, {"id": 5, "seek": 2788, "start": 27.88, "end": 32.04, "text": " So my talk is more precisely about that.", "tokens": [50364, 407, 452, 751, 307, 544, 13402, 466, 300, 13, 50572], "temperature": 0.0, "avg_logprob": -0.27988386154174805, "compression_ratio": 1.4244604316546763, "no_speech_prob": 0.008751887828111649}, {"id": 6, "seek": 2788, "start": 32.04, "end": 35.879999999999995, "text": " And actually, why this machine?", "tokens": [50572, 400, 767, 11, 983, 341, 3479, 30, 50764], "temperature": 0.0, "avg_logprob": -0.27988386154174805, "compression_ratio": 1.4244604316546763, "no_speech_prob": 0.008751887828111649}, {"id": 7, "seek": 2788, "start": 35.879999999999995, "end": 44.28, "text": " Actually we have a big collection, part of our museum is actually a big mechanical graphic", "tokens": [50764, 5135, 321, 362, 257, 955, 5765, 11, 644, 295, 527, 8441, 307, 767, 257, 955, 12070, 14089, 51184], "temperature": 0.0, "avg_logprob": -0.27988386154174805, "compression_ratio": 1.4244604316546763, "no_speech_prob": 0.008751887828111649}, {"id": 8, "seek": 2788, "start": 44.28, "end": 49.120000000000005, "text": " collection, you can see it's here.", "tokens": [51184, 5765, 11, 291, 393, 536, 309, 311, 510, 13, 51426], "temperature": 0.0, "avg_logprob": -0.27988386154174805, "compression_ratio": 1.4244604316546763, "no_speech_prob": 0.008751887828111649}, {"id": 9, "seek": 4912, "start": 49.12, "end": 57.519999999999996, "text": " So we have a whole bunch of machines, electrical and mechanical machines that are still being", "tokens": [50364, 407, 321, 362, 257, 1379, 3840, 295, 8379, 11, 12147, 293, 12070, 8379, 300, 366, 920, 885, 50784], "temperature": 0.0, "avg_logprob": -0.2787687871363256, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.009828978218138218}, {"id": 10, "seek": 4912, "start": 57.519999999999996, "end": 58.519999999999996, "text": " maintained.", "tokens": [50784, 17578, 13, 50834], "temperature": 0.0, "avg_logprob": -0.2787687871363256, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.009828978218138218}, {"id": 11, "seek": 4912, "start": 58.519999999999996, "end": 66.36, "text": " Unfortunately, we don't have the bull gamma tree, it's very rare, but it was connected", "tokens": [50834, 8590, 11, 321, 500, 380, 362, 264, 4693, 15546, 4230, 11, 309, 311, 588, 5892, 11, 457, 309, 390, 4582, 51226], "temperature": 0.0, "avg_logprob": -0.2787687871363256, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.009828978218138218}, {"id": 12, "seek": 4912, "start": 66.36, "end": 67.36, "text": " with those machines.", "tokens": [51226, 365, 729, 8379, 13, 51276], "temperature": 0.0, "avg_logprob": -0.2787687871363256, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.009828978218138218}, {"id": 13, "seek": 4912, "start": 67.36, "end": 75.44, "text": " So we have many documentation about those machines, and we were interested to study", "tokens": [51276, 407, 321, 362, 867, 14333, 466, 729, 8379, 11, 293, 321, 645, 3102, 281, 2979, 51680], "temperature": 0.0, "avg_logprob": -0.2787687871363256, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.009828978218138218}, {"id": 14, "seek": 4912, "start": 75.44, "end": 77.72, "text": " that machine more specifically.", "tokens": [51680, 300, 3479, 544, 4682, 13, 51794], "temperature": 0.0, "avg_logprob": -0.2787687871363256, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.009828978218138218}, {"id": 15, "seek": 7772, "start": 77.72, "end": 82.8, "text": " So I will go through the historical context, make you discover the machine, and then go", "tokens": [50364, 407, 286, 486, 352, 807, 264, 8584, 4319, 11, 652, 291, 4411, 264, 3479, 11, 293, 550, 352, 50618], "temperature": 0.0, "avg_logprob": -0.19521222432454427, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.002345021814107895}, {"id": 16, "seek": 7772, "start": 82.8, "end": 90.4, "text": " into it to try to emulate it, looking at some existing emulators, and then detailing our", "tokens": [50618, 666, 309, 281, 853, 281, 45497, 309, 11, 1237, 412, 512, 6741, 846, 39265, 11, 293, 550, 42459, 527, 50998], "temperature": 0.0, "avg_logprob": -0.19521222432454427, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.002345021814107895}, {"id": 17, "seek": 7772, "start": 90.4, "end": 94.36, "text": " own emulator and what we learn with it.", "tokens": [50998, 1065, 846, 16381, 293, 437, 321, 1466, 365, 309, 13, 51196], "temperature": 0.0, "avg_logprob": -0.19521222432454427, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.002345021814107895}, {"id": 18, "seek": 7772, "start": 94.36, "end": 102.16, "text": " So let's go back in time, so you know we are here now in 2023.", "tokens": [51196, 407, 718, 311, 352, 646, 294, 565, 11, 370, 291, 458, 321, 366, 510, 586, 294, 44377, 13, 51586], "temperature": 0.0, "avg_logprob": -0.19521222432454427, "compression_ratio": 1.516304347826087, "no_speech_prob": 0.002345021814107895}, {"id": 19, "seek": 10216, "start": 102.16, "end": 111.8, "text": " So if we go back, how long is it, 70 years ago, in the 50s, just after World War I, the", "tokens": [50364, 407, 498, 321, 352, 646, 11, 577, 938, 307, 309, 11, 5285, 924, 2057, 11, 294, 264, 2625, 82, 11, 445, 934, 3937, 3630, 286, 11, 264, 50846], "temperature": 0.0, "avg_logprob": -0.23188430507008623, "compression_ratio": 1.4950980392156863, "no_speech_prob": 0.20791101455688477}, {"id": 20, "seek": 10216, "start": 111.8, "end": 117.44, "text": " first generation of computers was developed.", "tokens": [50846, 700, 5125, 295, 10807, 390, 4743, 13, 51128], "temperature": 0.0, "avg_logprob": -0.23188430507008623, "compression_ratio": 1.4950980392156863, "no_speech_prob": 0.20791101455688477}, {"id": 21, "seek": 10216, "start": 117.44, "end": 124.96, "text": " So at that time, the technology was very different than today, because there were no integrated", "tokens": [51128, 407, 412, 300, 565, 11, 264, 2899, 390, 588, 819, 813, 965, 11, 570, 456, 645, 572, 10919, 51504], "temperature": 0.0, "avg_logprob": -0.23188430507008623, "compression_ratio": 1.4950980392156863, "no_speech_prob": 0.20791101455688477}, {"id": 22, "seek": 10216, "start": 124.96, "end": 131.76, "text": " circuits, there were no CPU, microprocessor, they were developed in the 70s.", "tokens": [51504, 26354, 11, 456, 645, 572, 13199, 11, 3123, 1513, 340, 25432, 11, 436, 645, 4743, 294, 264, 5285, 82, 13, 51844], "temperature": 0.0, "avg_logprob": -0.23188430507008623, "compression_ratio": 1.4950980392156863, "no_speech_prob": 0.20791101455688477}, {"id": 23, "seek": 13176, "start": 131.76, "end": 139.07999999999998, "text": " There were no TTL circuits, there were no transistors, there were no magnetic cores.", "tokens": [50364, 821, 645, 572, 32576, 43, 26354, 11, 456, 645, 572, 1145, 46976, 11, 456, 645, 572, 12688, 24826, 13, 50730], "temperature": 0.0, "avg_logprob": -0.20527993178949122, "compression_ratio": 1.665, "no_speech_prob": 0.12388672679662704}, {"id": 24, "seek": 13176, "start": 139.07999999999998, "end": 145.16, "text": " Actually when you really want to build a computer, you have technology like vacuum tubes and", "tokens": [50730, 5135, 562, 291, 534, 528, 281, 1322, 257, 3820, 11, 291, 362, 2899, 411, 14224, 21458, 293, 51034], "temperature": 0.0, "avg_logprob": -0.20527993178949122, "compression_ratio": 1.665, "no_speech_prob": 0.12388672679662704}, {"id": 25, "seek": 13176, "start": 145.16, "end": 149.12, "text": " delay lines to try to store some memory and drums.", "tokens": [51034, 8577, 3876, 281, 853, 281, 3531, 512, 4675, 293, 20420, 13, 51232], "temperature": 0.0, "avg_logprob": -0.20527993178949122, "compression_ratio": 1.665, "no_speech_prob": 0.12388672679662704}, {"id": 26, "seek": 13176, "start": 149.12, "end": 155.32, "text": " So it was really a very different technology, and of course, you can imagine, the memory", "tokens": [51232, 407, 309, 390, 534, 257, 588, 819, 2899, 11, 293, 295, 1164, 11, 291, 393, 3811, 11, 264, 4675, 51542], "temperature": 0.0, "avg_logprob": -0.20527993178949122, "compression_ratio": 1.665, "no_speech_prob": 0.12388672679662704}, {"id": 27, "seek": 13176, "start": 155.32, "end": 159.16, "text": " was very small.", "tokens": [51542, 390, 588, 1359, 13, 51734], "temperature": 0.0, "avg_logprob": -0.20527993178949122, "compression_ratio": 1.665, "no_speech_prob": 0.12388672679662704}, {"id": 28, "seek": 15916, "start": 159.16, "end": 169.48, "text": " And so another point is that at that time, well, most of the processing was made because", "tokens": [50364, 400, 370, 1071, 935, 307, 300, 412, 300, 565, 11, 731, 11, 881, 295, 264, 9007, 390, 1027, 570, 50880], "temperature": 0.0, "avg_logprob": -0.18169932067394257, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.004848387558013201}, {"id": 29, "seek": 15916, "start": 169.48, "end": 175.32, "text": " of course there was automation before the computer, so most of the automation was done", "tokens": [50880, 295, 1164, 456, 390, 17769, 949, 264, 3820, 11, 370, 881, 295, 264, 17769, 390, 1096, 51172], "temperature": 0.0, "avg_logprob": -0.18169932067394257, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.004848387558013201}, {"id": 30, "seek": 15916, "start": 175.32, "end": 182.68, "text": " through electromechanical machines, so a tabulating machine, you know it was developed in the end", "tokens": [51172, 807, 7072, 423, 3484, 804, 8379, 11, 370, 257, 4421, 12162, 3479, 11, 291, 458, 309, 390, 4743, 294, 264, 917, 51540], "temperature": 0.0, "avg_logprob": -0.18169932067394257, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.004848387558013201}, {"id": 31, "seek": 18268, "start": 182.68, "end": 192.48000000000002, "text": " of the 19th century with the already tabulating machine, and then it became the IBM company.", "tokens": [50364, 295, 264, 1294, 392, 4901, 365, 264, 1217, 4421, 12162, 3479, 11, 293, 550, 309, 3062, 264, 23487, 2237, 13, 50854], "temperature": 0.0, "avg_logprob": -0.22663477579752603, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.042143408209085464}, {"id": 32, "seek": 18268, "start": 192.48000000000002, "end": 199.24, "text": " And you can see here that there was some kind of transition between that area and those", "tokens": [50854, 400, 291, 393, 536, 510, 300, 456, 390, 512, 733, 295, 6034, 1296, 300, 1859, 293, 729, 51192], "temperature": 0.0, "avg_logprob": -0.22663477579752603, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.042143408209085464}, {"id": 33, "seek": 18268, "start": 199.24, "end": 204.28, "text": " machines, those computers that were starting to be developed.", "tokens": [51192, 8379, 11, 729, 10807, 300, 645, 2891, 281, 312, 4743, 13, 51444], "temperature": 0.0, "avg_logprob": -0.22663477579752603, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.042143408209085464}, {"id": 34, "seek": 18268, "start": 204.28, "end": 211.24, "text": " And actually the interesting point is that one that I will show you, actually at the", "tokens": [51444, 400, 767, 264, 1880, 935, 307, 300, 472, 300, 286, 486, 855, 291, 11, 767, 412, 264, 51792], "temperature": 0.0, "avg_logprob": -0.22663477579752603, "compression_ratio": 1.626865671641791, "no_speech_prob": 0.042143408209085464}, {"id": 35, "seek": 21124, "start": 211.24, "end": 217.88, "text": " beginning it was not really a computer, it was still some kind of auxiliary calculator", "tokens": [50364, 2863, 309, 390, 406, 534, 257, 3820, 11, 309, 390, 920, 512, 733, 295, 43741, 24993, 50696], "temperature": 0.0, "avg_logprob": -0.2028153682577199, "compression_ratio": 1.5060975609756098, "no_speech_prob": 0.00729828467592597}, {"id": 36, "seek": 21124, "start": 217.88, "end": 222.64000000000001, "text": " for a tabulating machine, that one that you can see in our museum.", "tokens": [50696, 337, 257, 4421, 12162, 3479, 11, 300, 472, 300, 291, 393, 536, 294, 527, 8441, 13, 50934], "temperature": 0.0, "avg_logprob": -0.2028153682577199, "compression_ratio": 1.5060975609756098, "no_speech_prob": 0.00729828467592597}, {"id": 37, "seek": 21124, "start": 222.64000000000001, "end": 233.68, "text": " And after, actually, it began to improve and the dependency between the machine was reversed.", "tokens": [50934, 400, 934, 11, 767, 11, 309, 4283, 281, 3470, 293, 264, 33621, 1296, 264, 3479, 390, 30563, 13, 51486], "temperature": 0.0, "avg_logprob": -0.2028153682577199, "compression_ratio": 1.5060975609756098, "no_speech_prob": 0.00729828467592597}, {"id": 38, "seek": 23368, "start": 233.68, "end": 241.6, "text": " So the gamma-3 became the computer and the tabulating became the peripheral.", "tokens": [50364, 407, 264, 15546, 12, 18, 3062, 264, 3820, 293, 264, 4421, 12162, 3062, 264, 40235, 13, 50760], "temperature": 0.0, "avg_logprob": -0.34199058846251607, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.1716902107000351}, {"id": 39, "seek": 23368, "start": 241.6, "end": 248.56, "text": " So you can see other machines after, of course, you can see that both developed also the gamma-60,", "tokens": [50760, 407, 291, 393, 536, 661, 8379, 934, 11, 295, 1164, 11, 291, 393, 536, 300, 1293, 4743, 611, 264, 15546, 12, 4550, 11, 51108], "temperature": 0.0, "avg_logprob": -0.34199058846251607, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.1716902107000351}, {"id": 40, "seek": 23368, "start": 248.56, "end": 256.16, "text": " gamma-30 machine in the second generation, so I will not focus on that.", "tokens": [51108, 15546, 12, 3446, 3479, 294, 264, 1150, 5125, 11, 370, 286, 486, 406, 1879, 322, 300, 13, 51488], "temperature": 0.0, "avg_logprob": -0.34199058846251607, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.1716902107000351}, {"id": 41, "seek": 23368, "start": 256.16, "end": 259.84000000000003, "text": " So maybe in the next one.", "tokens": [51488, 407, 1310, 294, 264, 958, 472, 13, 51672], "temperature": 0.0, "avg_logprob": -0.34199058846251607, "compression_ratio": 1.6153846153846154, "no_speech_prob": 0.1716902107000351}, {"id": 42, "seek": 25984, "start": 259.84, "end": 262.32, "text": " And so how did we study the machine?", "tokens": [50364, 400, 370, 577, 630, 321, 2979, 264, 3479, 30, 50488], "temperature": 0.0, "avg_logprob": -0.2413796963899032, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.02712986245751381}, {"id": 43, "seek": 25984, "start": 262.32, "end": 267.08, "text": " Of course, we have documentation at the museum.", "tokens": [50488, 2720, 1164, 11, 321, 362, 14333, 412, 264, 8441, 13, 50726], "temperature": 0.0, "avg_logprob": -0.2413796963899032, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.02712986245751381}, {"id": 44, "seek": 25984, "start": 267.08, "end": 273.44, "text": " There is also a number of existing examples of that machine, one in Angers where it was", "tokens": [50726, 821, 307, 611, 257, 1230, 295, 6741, 5110, 295, 300, 3479, 11, 472, 294, 4521, 433, 689, 309, 390, 51044], "temperature": 0.0, "avg_logprob": -0.2413796963899032, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.02712986245751381}, {"id": 45, "seek": 25984, "start": 273.44, "end": 280.76, "text": " built by Bull in Grenoble, they acquired one and they preserved it, and one in Frankfurt.", "tokens": [51044, 3094, 538, 14131, 294, 24913, 78, 638, 11, 436, 17554, 472, 293, 436, 22242, 309, 11, 293, 472, 294, 36530, 13, 51410], "temperature": 0.0, "avg_logprob": -0.2413796963899032, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.02712986245751381}, {"id": 46, "seek": 25984, "start": 280.76, "end": 288.47999999999996, "text": " So, of course, we don't have one, but we have those documentation and we have also many", "tokens": [51410, 407, 11, 295, 1164, 11, 321, 500, 380, 362, 472, 11, 457, 321, 362, 729, 14333, 293, 321, 362, 611, 867, 51796], "temperature": 0.0, "avg_logprob": -0.2413796963899032, "compression_ratio": 1.5981735159817352, "no_speech_prob": 0.02712986245751381}, {"id": 47, "seek": 28848, "start": 288.52000000000004, "end": 295.52000000000004, "text": " documentation that was also provided by Akonis, which is another museum located in Grenoble.", "tokens": [50366, 14333, 300, 390, 611, 5649, 538, 9629, 266, 271, 11, 597, 307, 1071, 8441, 6870, 294, 24913, 78, 638, 13, 50716], "temperature": 0.0, "avg_logprob": -0.26194760706517606, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.00339492317289114}, {"id": 48, "seek": 28848, "start": 295.52000000000004, "end": 299.20000000000005, "text": " And there are a few emulators, so we'll come back to that later.", "tokens": [50716, 400, 456, 366, 257, 1326, 846, 39265, 11, 370, 321, 603, 808, 646, 281, 300, 1780, 13, 50900], "temperature": 0.0, "avg_logprob": -0.26194760706517606, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.00339492317289114}, {"id": 49, "seek": 28848, "start": 299.20000000000005, "end": 308.20000000000005, "text": " Have a look at the hardware, so as I told you, it's a first-generation computer, it's", "tokens": [50900, 3560, 257, 574, 412, 264, 8837, 11, 370, 382, 286, 1907, 291, 11, 309, 311, 257, 700, 12, 30372, 3820, 11, 309, 311, 51350], "temperature": 0.0, "avg_logprob": -0.26194760706517606, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.00339492317289114}, {"id": 50, "seek": 28848, "start": 308.20000000000005, "end": 312.0, "text": " based on vacuum tube delay lines.", "tokens": [51350, 2361, 322, 14224, 9917, 8577, 3876, 13, 51540], "temperature": 0.0, "avg_logprob": -0.26194760706517606, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.00339492317289114}, {"id": 51, "seek": 31200, "start": 312.0, "end": 318.28, "text": " Actually, the code was stored in a connection panel, so you can see it on the top there.", "tokens": [50364, 5135, 11, 264, 3089, 390, 12187, 294, 257, 4984, 4831, 11, 370, 291, 393, 536, 309, 322, 264, 1192, 456, 13, 50678], "temperature": 0.0, "avg_logprob": -0.2679387058120176, "compression_ratio": 1.710382513661202, "no_speech_prob": 0.07342826575040817}, {"id": 52, "seek": 31200, "start": 318.28, "end": 328.8, "text": " So in order to program it, actually, you had to plug the instruction to say, well, the", "tokens": [50678, 407, 294, 1668, 281, 1461, 309, 11, 767, 11, 291, 632, 281, 5452, 264, 10951, 281, 584, 11, 731, 11, 264, 51204], "temperature": 0.0, "avg_logprob": -0.2679387058120176, "compression_ratio": 1.710382513661202, "no_speech_prob": 0.07342826575040817}, {"id": 53, "seek": 31200, "start": 328.8, "end": 337.2, "text": " first instruction, it has four characters, but the first character, it's that exact decimal", "tokens": [51204, 700, 10951, 11, 309, 575, 1451, 4342, 11, 457, 264, 700, 2517, 11, 309, 311, 300, 1900, 26601, 51624], "temperature": 0.0, "avg_logprob": -0.2679387058120176, "compression_ratio": 1.710382513661202, "no_speech_prob": 0.07342826575040817}, {"id": 54, "seek": 31200, "start": 337.2, "end": 339.8, "text": " code, the second one is that code, and so on.", "tokens": [51624, 3089, 11, 264, 1150, 472, 307, 300, 3089, 11, 293, 370, 322, 13, 51754], "temperature": 0.0, "avg_logprob": -0.2679387058120176, "compression_ratio": 1.710382513661202, "no_speech_prob": 0.07342826575040817}, {"id": 55, "seek": 33980, "start": 339.8, "end": 346.16, "text": " So it's really like that spaghetti coding, and for that reason, actually, that spaghetti", "tokens": [50364, 407, 309, 311, 534, 411, 300, 28556, 17720, 11, 293, 337, 300, 1778, 11, 767, 11, 300, 28556, 50682], "temperature": 0.0, "avg_logprob": -0.1700975045390513, "compression_ratio": 1.7438423645320198, "no_speech_prob": 0.009797973558306694}, {"id": 56, "seek": 33980, "start": 346.16, "end": 352.96000000000004, "text": " coding was also used in a tabulating machine, so it was the way to code at that time.", "tokens": [50682, 17720, 390, 611, 1143, 294, 257, 4421, 12162, 3479, 11, 370, 309, 390, 264, 636, 281, 3089, 412, 300, 565, 13, 51022], "temperature": 0.0, "avg_logprob": -0.1700975045390513, "compression_ratio": 1.7438423645320198, "no_speech_prob": 0.009797973558306694}, {"id": 57, "seek": 33980, "start": 352.96000000000004, "end": 358.08000000000004, "text": " And that's also the reason why we cannot really call it a computer in that form, because", "tokens": [51022, 400, 300, 311, 611, 264, 1778, 983, 321, 2644, 534, 818, 309, 257, 3820, 294, 300, 1254, 11, 570, 51278], "temperature": 0.0, "avg_logprob": -0.1700975045390513, "compression_ratio": 1.7438423645320198, "no_speech_prob": 0.009797973558306694}, {"id": 58, "seek": 33980, "start": 358.08000000000004, "end": 363.40000000000003, "text": " it does not follow the von Neumann architecture, because in that architecture, you have to", "tokens": [51278, 309, 775, 406, 1524, 264, 2957, 1734, 449, 969, 9482, 11, 570, 294, 300, 9482, 11, 291, 362, 281, 51544], "temperature": 0.0, "avg_logprob": -0.1700975045390513, "compression_ratio": 1.7438423645320198, "no_speech_prob": 0.009797973558306694}, {"id": 59, "seek": 36340, "start": 363.4, "end": 371.84, "text": " have the code inside the main memory, although somehow that panel was memory mapped, so you", "tokens": [50364, 362, 264, 3089, 1854, 264, 2135, 4675, 11, 4878, 6063, 300, 4831, 390, 4675, 33318, 11, 370, 291, 50786], "temperature": 0.0, "avg_logprob": -0.20108014887029474, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.055196233093738556}, {"id": 60, "seek": 36340, "start": 371.84, "end": 376.52, "text": " could consider it like some kind of read-only memory.", "tokens": [50786, 727, 1949, 309, 411, 512, 733, 295, 1401, 12, 25202, 4675, 13, 51020], "temperature": 0.0, "avg_logprob": -0.20108014887029474, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.055196233093738556}, {"id": 61, "seek": 36340, "start": 376.52, "end": 378.52, "text": " What about the memory?", "tokens": [51020, 708, 466, 264, 4675, 30, 51120], "temperature": 0.0, "avg_logprob": -0.20108014887029474, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.055196233093738556}, {"id": 62, "seek": 36340, "start": 378.52, "end": 382.88, "text": " The memory itself, actually, it was only seven registers.", "tokens": [51120, 440, 4675, 2564, 11, 767, 11, 309, 390, 787, 3407, 38351, 13, 51338], "temperature": 0.0, "avg_logprob": -0.20108014887029474, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.055196233093738556}, {"id": 63, "seek": 36340, "start": 382.88, "end": 389.88, "text": " And in order to keep the information, actually, the information, it was the equivalent of", "tokens": [51338, 400, 294, 1668, 281, 1066, 264, 1589, 11, 767, 11, 264, 1589, 11, 309, 390, 264, 10344, 295, 51688], "temperature": 0.0, "avg_logprob": -0.20108014887029474, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.055196233093738556}, {"id": 64, "seek": 38988, "start": 389.88, "end": 398.04, "text": " six bytes, so it's 12 characters of four bits.", "tokens": [50364, 2309, 36088, 11, 370, 309, 311, 2272, 4342, 295, 1451, 9239, 13, 50772], "temperature": 0.0, "avg_logprob": -0.1921322749211238, "compression_ratio": 1.4556962025316456, "no_speech_prob": 0.01111666765064001}, {"id": 65, "seek": 38988, "start": 398.04, "end": 407.32, "text": " It was just circulating in a line with a regeneration system, so it's an LC circuit,", "tokens": [50772, 467, 390, 445, 39749, 294, 257, 1622, 365, 257, 43813, 1185, 11, 370, 309, 311, 364, 42198, 9048, 11, 51236], "temperature": 0.0, "avg_logprob": -0.1921322749211238, "compression_ratio": 1.4556962025316456, "no_speech_prob": 0.01111666765064001}, {"id": 66, "seek": 38988, "start": 407.32, "end": 415.15999999999997, "text": " and for just one word, for six bytes, you can see the device here, it's more than eight", "tokens": [51236, 293, 337, 445, 472, 1349, 11, 337, 2309, 36088, 11, 291, 393, 536, 264, 4302, 510, 11, 309, 311, 544, 813, 3180, 51628], "temperature": 0.0, "avg_logprob": -0.1921322749211238, "compression_ratio": 1.4556962025316456, "no_speech_prob": 0.01111666765064001}, {"id": 67, "seek": 38988, "start": 415.15999999999997, "end": 416.15999999999997, "text": " kilograms.", "tokens": [51628, 30690, 13, 51678], "temperature": 0.0, "avg_logprob": -0.1921322749211238, "compression_ratio": 1.4556962025316456, "no_speech_prob": 0.01111666765064001}, {"id": 68, "seek": 41616, "start": 416.16, "end": 425.04, "text": " You imagine the start of the...", "tokens": [50364, 509, 3811, 264, 722, 295, 264, 485, 50808], "temperature": 0.0, "avg_logprob": -0.23944135030110678, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.015741340816020966}, {"id": 69, "seek": 41616, "start": 425.04, "end": 428.32000000000005, "text": " It was really very big.", "tokens": [50808, 467, 390, 534, 588, 955, 13, 50972], "temperature": 0.0, "avg_logprob": -0.23944135030110678, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.015741340816020966}, {"id": 70, "seek": 41616, "start": 428.32000000000005, "end": 434.6, "text": " About the computation, it was also based more on diodes, so I will not go into all the details.", "tokens": [50972, 7769, 264, 24903, 11, 309, 390, 611, 2361, 544, 322, 1026, 4789, 11, 370, 286, 486, 406, 352, 666, 439, 264, 4365, 13, 51286], "temperature": 0.0, "avg_logprob": -0.23944135030110678, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.015741340816020966}, {"id": 71, "seek": 41616, "start": 434.6, "end": 439.52000000000004, "text": " It was mostly addition and subtraction, as I will see, the multiplication and division", "tokens": [51286, 467, 390, 5240, 4500, 293, 16390, 313, 11, 382, 286, 486, 536, 11, 264, 27290, 293, 10044, 51532], "temperature": 0.0, "avg_logprob": -0.23944135030110678, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.015741340816020966}, {"id": 72, "seek": 41616, "start": 439.52000000000004, "end": 444.08000000000004, "text": " were implemented through iterative addition and subtraction.", "tokens": [51532, 645, 12270, 807, 17138, 1166, 4500, 293, 16390, 313, 13, 51760], "temperature": 0.0, "avg_logprob": -0.23944135030110678, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.015741340816020966}, {"id": 73, "seek": 44408, "start": 444.08, "end": 445.52, "text": " And what about the frequency?", "tokens": [50364, 400, 437, 466, 264, 7893, 30, 50436], "temperature": 0.0, "avg_logprob": -0.2238514112389606, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.09262128919363022}, {"id": 74, "seek": 44408, "start": 445.52, "end": 449.0, "text": " The frequency was 2.5 hertz.", "tokens": [50436, 440, 7893, 390, 568, 13, 20, 45830, 13, 50610], "temperature": 0.0, "avg_logprob": -0.2238514112389606, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.09262128919363022}, {"id": 75, "seek": 44408, "start": 449.0, "end": 450.0, "text": " Why that?", "tokens": [50610, 1545, 300, 30, 50660], "temperature": 0.0, "avg_logprob": -0.2238514112389606, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.09262128919363022}, {"id": 76, "seek": 44408, "start": 450.0, "end": 455.88, "text": " Actually, it could go, the inner could go faster, but it was just because it was synchronized", "tokens": [50660, 5135, 11, 309, 727, 352, 11, 264, 7284, 727, 352, 4663, 11, 457, 309, 390, 445, 570, 309, 390, 19331, 1602, 50954], "temperature": 0.0, "avg_logprob": -0.2238514112389606, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.09262128919363022}, {"id": 77, "seek": 44408, "start": 455.88, "end": 463.96, "text": " with the mechanical machine, with punch cards, so it was limited by that part.", "tokens": [50954, 365, 264, 12070, 3479, 11, 365, 8135, 5632, 11, 370, 309, 390, 5567, 538, 300, 644, 13, 51358], "temperature": 0.0, "avg_logprob": -0.2238514112389606, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.09262128919363022}, {"id": 78, "seek": 44408, "start": 463.96, "end": 468.56, "text": " And you can see also there is a nice drawer, it's really easy to open, of course, for the", "tokens": [51358, 400, 291, 393, 536, 611, 456, 307, 257, 1481, 24039, 11, 309, 311, 534, 1858, 281, 1269, 11, 295, 1164, 11, 337, 264, 51588], "temperature": 0.0, "avg_logprob": -0.2238514112389606, "compression_ratio": 1.5395348837209302, "no_speech_prob": 0.09262128919363022}, {"id": 79, "seek": 46856, "start": 468.56, "end": 476.6, "text": " maintenance because when a vacuum tube had a problem, you had to replace it and it was", "tokens": [50364, 11258, 570, 562, 257, 14224, 9917, 632, 257, 1154, 11, 291, 632, 281, 7406, 309, 293, 309, 390, 50766], "temperature": 0.0, "avg_logprob": -0.24710919427090003, "compression_ratio": 1.4135802469135803, "no_speech_prob": 0.004633697215467691}, {"id": 80, "seek": 46856, "start": 476.6, "end": 479.8, "text": " designed for that.", "tokens": [50766, 4761, 337, 300, 13, 50926], "temperature": 0.0, "avg_logprob": -0.24710919427090003, "compression_ratio": 1.4135802469135803, "no_speech_prob": 0.004633697215467691}, {"id": 81, "seek": 46856, "start": 479.8, "end": 482.36, "text": " So is it a computer or a calculator?", "tokens": [50926, 407, 307, 309, 257, 3820, 420, 257, 24993, 30, 51054], "temperature": 0.0, "avg_logprob": -0.24710919427090003, "compression_ratio": 1.4135802469135803, "no_speech_prob": 0.004633697215467691}, {"id": 82, "seek": 46856, "start": 482.36, "end": 492.04, "text": " So in French, we have different names, but as I told you, we cannot really consider it", "tokens": [51054, 407, 294, 5522, 11, 321, 362, 819, 5288, 11, 457, 382, 286, 1907, 291, 11, 321, 2644, 534, 1949, 309, 51538], "temperature": 0.0, "avg_logprob": -0.24710919427090003, "compression_ratio": 1.4135802469135803, "no_speech_prob": 0.004633697215467691}, {"id": 83, "seek": 49204, "start": 492.04, "end": 499.20000000000005, "text": " as a computer first time because of that it was not following the von Neumann architecture", "tokens": [50364, 382, 257, 3820, 700, 565, 570, 295, 300, 309, 390, 406, 3480, 264, 2957, 1734, 449, 969, 9482, 50722], "temperature": 0.0, "avg_logprob": -0.19123631816799358, "compression_ratio": 1.4397590361445782, "no_speech_prob": 0.017062529921531677}, {"id": 84, "seek": 49204, "start": 499.20000000000005, "end": 507.36, "text": " and it was really designed as an auxiliary machine for the tabulating.", "tokens": [50722, 293, 309, 390, 534, 4761, 382, 364, 43741, 3479, 337, 264, 4421, 12162, 13, 51130], "temperature": 0.0, "avg_logprob": -0.19123631816799358, "compression_ratio": 1.4397590361445782, "no_speech_prob": 0.017062529921531677}, {"id": 85, "seek": 49204, "start": 507.36, "end": 516.24, "text": " So as you can see there, a quote from a guy who designed the machine in 1953.", "tokens": [51130, 407, 382, 291, 393, 536, 456, 11, 257, 6513, 490, 257, 2146, 567, 4761, 264, 3479, 294, 48528, 13, 51574], "temperature": 0.0, "avg_logprob": -0.19123631816799358, "compression_ratio": 1.4397590361445782, "no_speech_prob": 0.017062529921531677}, {"id": 86, "seek": 51624, "start": 516.24, "end": 525.52, "text": " So it's really an extension and the good point is that that computation was so fast", "tokens": [50364, 407, 309, 311, 534, 364, 10320, 293, 264, 665, 935, 307, 300, 300, 24903, 390, 370, 2370, 50828], "temperature": 0.0, "avg_logprob": -0.1511583457121978, "compression_ratio": 1.7268041237113403, "no_speech_prob": 0.029256990179419518}, {"id": 87, "seek": 51624, "start": 525.52, "end": 533.6, "text": " that there was no delay by the calculation, so it was really transparent for the tabulating.", "tokens": [50828, 300, 456, 390, 572, 8577, 538, 264, 17108, 11, 370, 309, 390, 534, 12737, 337, 264, 4421, 12162, 13, 51232], "temperature": 0.0, "avg_logprob": -0.1511583457121978, "compression_ratio": 1.7268041237113403, "no_speech_prob": 0.029256990179419518}, {"id": 88, "seek": 51624, "start": 533.6, "end": 539.8, "text": " And actually at that time, the programs inside the machine were more like auxiliary computation", "tokens": [51232, 400, 767, 412, 300, 565, 11, 264, 4268, 1854, 264, 3479, 645, 544, 411, 43741, 24903, 51542], "temperature": 0.0, "avg_logprob": -0.1511583457121978, "compression_ratio": 1.7268041237113403, "no_speech_prob": 0.029256990179419518}, {"id": 89, "seek": 51624, "start": 539.8, "end": 544.28, "text": " that were augmenting the capability of the tabulating machine.", "tokens": [51542, 300, 645, 29919, 278, 264, 13759, 295, 264, 4421, 12162, 3479, 13, 51766], "temperature": 0.0, "avg_logprob": -0.1511583457121978, "compression_ratio": 1.7268041237113403, "no_speech_prob": 0.029256990179419518}, {"id": 90, "seek": 54428, "start": 544.3199999999999, "end": 546.92, "text": " And there there were evolution, that's the interesting point.", "tokens": [50366, 400, 456, 456, 645, 9303, 11, 300, 311, 264, 1880, 935, 13, 50496], "temperature": 0.0, "avg_logprob": -0.23795952194038478, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.010126737877726555}, {"id": 91, "seek": 54428, "start": 546.92, "end": 554.4399999999999, "text": " There was a version, of course, that first version is only adding and subtracting integers,", "tokens": [50496, 821, 390, 257, 3037, 11, 295, 1164, 11, 300, 700, 3037, 307, 787, 5127, 293, 16390, 278, 41674, 11, 50872], "temperature": 0.0, "avg_logprob": -0.23795952194038478, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.010126737877726555}, {"id": 92, "seek": 54428, "start": 554.4399999999999, "end": 560.24, "text": " so there was a version that was able to do floating points.", "tokens": [50872, 370, 456, 390, 257, 3037, 300, 390, 1075, 281, 360, 12607, 2793, 13, 51162], "temperature": 0.0, "avg_logprob": -0.23795952194038478, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.010126737877726555}, {"id": 93, "seek": 54428, "start": 560.24, "end": 567.6, "text": " And then in 1957, there was a drum extension, that's the interesting point, it's about", "tokens": [51162, 400, 550, 294, 46256, 11, 456, 390, 257, 10206, 10320, 11, 300, 311, 264, 1880, 935, 11, 309, 311, 466, 51530], "temperature": 0.0, "avg_logprob": -0.23795952194038478, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.010126737877726555}, {"id": 94, "seek": 54428, "start": 567.6, "end": 573.52, "text": " 100 kilobytes and it could store the program.", "tokens": [51530, 2319, 5128, 996, 43673, 293, 309, 727, 3531, 264, 1461, 13, 51826], "temperature": 0.0, "avg_logprob": -0.23795952194038478, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.010126737877726555}, {"id": 95, "seek": 57352, "start": 573.52, "end": 579.0799999999999, "text": " So from that time, we can say that it's really the first French computer and it's also the", "tokens": [50364, 407, 490, 300, 565, 11, 321, 393, 584, 300, 309, 311, 534, 264, 700, 5522, 3820, 293, 309, 311, 611, 264, 50642], "temperature": 0.0, "avg_logprob": -0.27125706392176013, "compression_ratio": 1.5403225806451613, "no_speech_prob": 0.0016358662396669388}, {"id": 96, "seek": 57352, "start": 579.0799999999999, "end": 587.76, "text": " transition between the electro-mechanical device, the electro-mechanical area and the", "tokens": [50642, 6034, 1296, 264, 16717, 12, 1398, 3484, 804, 4302, 11, 264, 16717, 12, 1398, 3484, 804, 1859, 293, 264, 51076], "temperature": 0.0, "avg_logprob": -0.27125706392176013, "compression_ratio": 1.5403225806451613, "no_speech_prob": 0.0016358662396669388}, {"id": 97, "seek": 57352, "start": 587.76, "end": 590.96, "text": " computer area.", "tokens": [51076, 3820, 1859, 13, 51236], "temperature": 0.0, "avg_logprob": -0.27125706392176013, "compression_ratio": 1.5403225806451613, "no_speech_prob": 0.0016358662396669388}, {"id": 98, "seek": 59096, "start": 591.9200000000001, "end": 605.72, "text": " Also, another interesting point is that those first computers were not using binary or", "tokens": [50412, 2743, 11, 1071, 1880, 935, 307, 300, 729, 700, 10807, 645, 406, 1228, 17434, 420, 51102], "temperature": 0.0, "avg_logprob": -0.28725517713106596, "compression_ratio": 1.509433962264151, "no_speech_prob": 0.002796690445393324}, {"id": 99, "seek": 59096, "start": 605.72, "end": 611.1600000000001, "text": " exact decimal representation, they were still computing in decimal.", "tokens": [51102, 1900, 26601, 10290, 11, 436, 645, 920, 15866, 294, 26601, 13, 51374], "temperature": 0.0, "avg_logprob": -0.28725517713106596, "compression_ratio": 1.509433962264151, "no_speech_prob": 0.002796690445393324}, {"id": 100, "seek": 59096, "start": 611.1600000000001, "end": 616.72, "text": " So it's interesting because I found, it's in French with this transition there, there", "tokens": [51374, 407, 309, 311, 1880, 570, 286, 1352, 11, 309, 311, 294, 5522, 365, 341, 6034, 456, 11, 456, 51652], "temperature": 0.0, "avg_logprob": -0.28725517713106596, "compression_ratio": 1.509433962264151, "no_speech_prob": 0.002796690445393324}, {"id": 101, "seek": 61672, "start": 616.72, "end": 626.32, "text": " was a whole discussion about should we use decimal or should we use binary or exact decimal", "tokens": [50364, 390, 257, 1379, 5017, 466, 820, 321, 764, 26601, 420, 820, 321, 764, 17434, 420, 1900, 26601, 50844], "temperature": 0.0, "avg_logprob": -0.33005486160028175, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.014270693995058537}, {"id": 102, "seek": 61672, "start": 626.32, "end": 628.32, "text": " for computation.", "tokens": [50844, 337, 24903, 13, 50944], "temperature": 0.0, "avg_logprob": -0.33005486160028175, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.014270693995058537}, {"id": 103, "seek": 61672, "start": 628.32, "end": 634.36, "text": " So there were some advantages, benefits and some disadvantages.", "tokens": [50944, 407, 456, 645, 512, 14906, 11, 5311, 293, 512, 37431, 13, 51246], "temperature": 0.0, "avg_logprob": -0.33005486160028175, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.014270693995058537}, {"id": 104, "seek": 61672, "start": 634.36, "end": 640.52, "text": " So you can see the advantages, two figures, zero and one, it's really powerful for the", "tokens": [51246, 407, 291, 393, 536, 264, 14906, 11, 732, 9624, 11, 4018, 293, 472, 11, 309, 311, 534, 4005, 337, 264, 51554], "temperature": 0.0, "avg_logprob": -0.33005486160028175, "compression_ratio": 1.5987654320987654, "no_speech_prob": 0.014270693995058537}, {"id": 105, "seek": 64052, "start": 640.52, "end": 647.88, "text": " relay, it's ideal to map and for the disadvantageous binary, it's become very long, very long", "tokens": [50364, 24214, 11, 309, 311, 7157, 281, 4471, 293, 337, 264, 24292, 563, 17434, 11, 309, 311, 1813, 588, 938, 11, 588, 938, 50732], "temperature": 0.0, "avg_logprob": -0.2570487464346537, "compression_ratio": 1.6903553299492386, "no_speech_prob": 0.012921302579343319}, {"id": 106, "seek": 64052, "start": 647.88, "end": 652.52, "text": " word and we need to translate back and forth with the decimal.", "tokens": [50732, 1349, 293, 321, 643, 281, 13799, 646, 293, 5220, 365, 264, 26601, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2570487464346537, "compression_ratio": 1.6903553299492386, "no_speech_prob": 0.012921302579343319}, {"id": 107, "seek": 64052, "start": 652.52, "end": 658.1999999999999, "text": " So the conclusion, it's quite funny, we will use semi-decimal, which actually is the name", "tokens": [50964, 407, 264, 10063, 11, 309, 311, 1596, 4074, 11, 321, 486, 764, 12909, 12, 42821, 10650, 11, 597, 767, 307, 264, 1315, 51248], "temperature": 0.0, "avg_logprob": -0.2570487464346537, "compression_ratio": 1.6903553299492386, "no_speech_prob": 0.012921302579343319}, {"id": 108, "seek": 64052, "start": 658.1999999999999, "end": 666.12, "text": " for binary coded decimal and they introduce those coding for the binary coded decimal.", "tokens": [51248, 337, 17434, 34874, 26601, 293, 436, 5366, 729, 17720, 337, 264, 17434, 34874, 26601, 13, 51644], "temperature": 0.0, "avg_logprob": -0.2570487464346537, "compression_ratio": 1.6903553299492386, "no_speech_prob": 0.012921302579343319}, {"id": 109, "seek": 66612, "start": 666.12, "end": 672.4, "text": " So that was for the first version, after they came back on that decision and actually the", "tokens": [50364, 407, 300, 390, 337, 264, 700, 3037, 11, 934, 436, 1361, 646, 322, 300, 3537, 293, 767, 264, 50678], "temperature": 0.0, "avg_logprob": -0.18404752236825447, "compression_ratio": 1.7171717171717171, "no_speech_prob": 0.005940889474004507}, {"id": 110, "seek": 66612, "start": 672.4, "end": 682.64, "text": " update for the drum extension was able to support the binary, the full binary mode.", "tokens": [50678, 5623, 337, 264, 10206, 10320, 390, 1075, 281, 1406, 264, 17434, 11, 264, 1577, 17434, 4391, 13, 51190], "temperature": 0.0, "avg_logprob": -0.18404752236825447, "compression_ratio": 1.7171717171717171, "no_speech_prob": 0.005940889474004507}, {"id": 111, "seek": 66612, "start": 682.64, "end": 688.76, "text": " So what do we have as memory, as I told you we have those registers, actually we have seven", "tokens": [51190, 407, 437, 360, 321, 362, 382, 4675, 11, 382, 286, 1907, 291, 321, 362, 729, 38351, 11, 767, 321, 362, 3407, 51496], "temperature": 0.0, "avg_logprob": -0.18404752236825447, "compression_ratio": 1.7171717171717171, "no_speech_prob": 0.005940889474004507}, {"id": 112, "seek": 66612, "start": 688.76, "end": 693.4, "text": " main registers, you can see here a bit more because there were extensions.", "tokens": [51496, 2135, 38351, 11, 291, 393, 536, 510, 257, 857, 544, 570, 456, 645, 25129, 13, 51728], "temperature": 0.0, "avg_logprob": -0.18404752236825447, "compression_ratio": 1.7171717171717171, "no_speech_prob": 0.005940889474004507}, {"id": 113, "seek": 69340, "start": 693.4, "end": 704.52, "text": " So a register is one word of 12 digits, 12 characters, so those four bits, so it's actually", "tokens": [50364, 407, 257, 7280, 307, 472, 1349, 295, 2272, 27011, 11, 2272, 4342, 11, 370, 729, 1451, 9239, 11, 370, 309, 311, 767, 50920], "temperature": 0.0, "avg_logprob": -0.23249228571502256, "compression_ratio": 1.5141242937853108, "no_speech_prob": 0.005566423758864403}, {"id": 114, "seek": 69340, "start": 704.52, "end": 716.84, "text": " six bytes, so the main memory was only 42 bytes, so you see it's very, very limited.", "tokens": [50920, 2309, 36088, 11, 370, 264, 2135, 4675, 390, 787, 14034, 36088, 11, 370, 291, 536, 309, 311, 588, 11, 588, 5567, 13, 51536], "temperature": 0.0, "avg_logprob": -0.23249228571502256, "compression_ratio": 1.5141242937853108, "no_speech_prob": 0.005566423758864403}, {"id": 115, "seek": 69340, "start": 716.84, "end": 723.0799999999999, "text": " And if you look at the full architecture here, the full gamma tree with all the extensions,", "tokens": [51536, 400, 498, 291, 574, 412, 264, 1577, 9482, 510, 11, 264, 1577, 15546, 4230, 365, 439, 264, 25129, 11, 51848], "temperature": 0.0, "avg_logprob": -0.23249228571502256, "compression_ratio": 1.5141242937853108, "no_speech_prob": 0.005566423758864403}, {"id": 116, "seek": 72308, "start": 723.08, "end": 737.8000000000001, "text": " you can see on the top left the panel, the main registers are on the left, the top one,", "tokens": [50364, 291, 393, 536, 322, 264, 1192, 1411, 264, 4831, 11, 264, 2135, 38351, 366, 322, 264, 1411, 11, 264, 1192, 472, 11, 51100], "temperature": 0.0, "avg_logprob": -0.20037119729178293, "compression_ratio": 1.5, "no_speech_prob": 0.004022075794637203}, {"id": 117, "seek": 72308, "start": 737.8000000000001, "end": 743.48, "text": " the M1 actually is the only one where you can read and write, so all the computation will be", "tokens": [51100, 264, 376, 16, 767, 307, 264, 787, 472, 689, 291, 393, 1401, 293, 2464, 11, 370, 439, 264, 24903, 486, 312, 51384], "temperature": 0.0, "avg_logprob": -0.20037119729178293, "compression_ratio": 1.5, "no_speech_prob": 0.004022075794637203}, {"id": 118, "seek": 74348, "start": 743.48, "end": 754.84, "text": " performed in that one and the other one, M2 to M7 will be used as a register to read operands.", "tokens": [50364, 10332, 294, 300, 472, 293, 264, 661, 472, 11, 376, 17, 281, 376, 22, 486, 312, 1143, 382, 257, 7280, 281, 1401, 2208, 2967, 13, 50932], "temperature": 0.0, "avg_logprob": -0.25875036340010793, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.06332600861787796}, {"id": 119, "seek": 74348, "start": 754.84, "end": 760.6, "text": " And the instruction, you can see the decoding of the instruction, the structure of the instruction", "tokens": [50932, 400, 264, 10951, 11, 291, 393, 536, 264, 979, 8616, 295, 264, 10951, 11, 264, 3877, 295, 264, 10951, 51220], "temperature": 0.0, "avg_logprob": -0.25875036340010793, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.06332600861787796}, {"id": 120, "seek": 74348, "start": 760.6, "end": 768.28, "text": " is composed of four parts, I will detail them after, it's called TO, AD, OD and OF and the", "tokens": [51220, 307, 18204, 295, 1451, 3166, 11, 286, 486, 2607, 552, 934, 11, 309, 311, 1219, 8232, 11, 9135, 11, 48447, 293, 11944, 293, 264, 51604], "temperature": 0.0, "avg_logprob": -0.25875036340010793, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.06332600861787796}, {"id": 121, "seek": 76828, "start": 768.28, "end": 778.36, "text": " rest are extensions, so this is more memory, so you can switch those registers with those ones", "tokens": [50364, 1472, 366, 25129, 11, 370, 341, 307, 544, 4675, 11, 370, 291, 393, 3679, 729, 38351, 365, 729, 2306, 50868], "temperature": 0.0, "avg_logprob": -0.2082640606424083, "compression_ratio": 1.576271186440678, "no_speech_prob": 0.015001273714005947}, {"id": 122, "seek": 76828, "start": 778.36, "end": 795.48, "text": " and the drum extension can also map on those octets, so you can load a part of program from", "tokens": [50868, 293, 264, 10206, 10320, 393, 611, 4471, 322, 729, 13350, 1385, 11, 370, 291, 393, 3677, 257, 644, 295, 1461, 490, 51724], "temperature": 0.0, "avg_logprob": -0.2082640606424083, "compression_ratio": 1.576271186440678, "no_speech_prob": 0.015001273714005947}, {"id": 123, "seek": 79548, "start": 795.5600000000001, "end": 804.2, "text": " there, from the drum to those parts and then execute them into the computer. So about the", "tokens": [50368, 456, 11, 490, 264, 10206, 281, 729, 3166, 293, 550, 14483, 552, 666, 264, 3820, 13, 407, 466, 264, 50800], "temperature": 0.0, "avg_logprob": -0.13190054557692837, "compression_ratio": 1.574585635359116, "no_speech_prob": 0.002654191805049777}, {"id": 124, "seek": 79548, "start": 807.16, "end": 812.76, "text": " instruction set, you can see that there are four parts, so the first is quite natural, it's just", "tokens": [50948, 10951, 992, 11, 291, 393, 536, 300, 456, 366, 1451, 3166, 11, 370, 264, 700, 307, 1596, 3303, 11, 309, 311, 445, 51228], "temperature": 0.0, "avg_logprob": -0.13190054557692837, "compression_ratio": 1.574585635359116, "no_speech_prob": 0.002654191805049777}, {"id": 125, "seek": 79548, "start": 812.76, "end": 819.96, "text": " the type of operation, so you can have addition, subtraction, I will detail after. The second part", "tokens": [51228, 264, 2010, 295, 6916, 11, 370, 291, 393, 362, 4500, 11, 16390, 313, 11, 286, 486, 2607, 934, 13, 440, 1150, 644, 51588], "temperature": 0.0, "avg_logprob": -0.13190054557692837, "compression_ratio": 1.574585635359116, "no_speech_prob": 0.002654191805049777}, {"id": 126, "seek": 81996, "start": 819.96, "end": 826.9200000000001, "text": " also quite natural, it's just the address, it means which operand we will use, so for the addition", "tokens": [50364, 611, 1596, 3303, 11, 309, 311, 445, 264, 2985, 11, 309, 1355, 597, 2208, 474, 321, 486, 764, 11, 370, 337, 264, 4500, 50712], "temperature": 0.0, "avg_logprob": -0.2312183380126953, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.007102250121533871}, {"id": 127, "seek": 81996, "start": 827.8000000000001, "end": 837.1600000000001, "text": " for AOE we can see it means M4, the register number four and what's a bit different and", "tokens": [50756, 337, 40684, 36, 321, 393, 536, 309, 1355, 376, 19, 11, 264, 7280, 1230, 1451, 293, 437, 311, 257, 857, 819, 293, 51224], "temperature": 0.0, "avg_logprob": -0.2312183380126953, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.007102250121533871}, {"id": 128, "seek": 81996, "start": 837.1600000000001, "end": 848.0400000000001, "text": " word is that then we have two other pieces of information in the instruction that we tell you", "tokens": [51224, 1349, 307, 300, 550, 321, 362, 732, 661, 3755, 295, 1589, 294, 264, 10951, 300, 321, 980, 291, 51768], "temperature": 0.0, "avg_logprob": -0.2312183380126953, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.007102250121533871}, {"id": 129, "seek": 84804, "start": 848.04, "end": 855.88, "text": " which range in a register you will manipulate, because the reason is that the memory was scarce", "tokens": [50364, 597, 3613, 294, 257, 7280, 291, 486, 20459, 11, 570, 264, 1778, 307, 300, 264, 4675, 390, 41340, 50756], "temperature": 0.0, "avg_logprob": -0.13572550576830666, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0027615611907094717}, {"id": 130, "seek": 84804, "start": 855.88, "end": 861.64, "text": " and so if you wanted to store two different information in the same register you could then", "tokens": [50756, 293, 370, 498, 291, 1415, 281, 3531, 732, 819, 1589, 294, 264, 912, 7280, 291, 727, 550, 51044], "temperature": 0.0, "avg_logprob": -0.13572550576830666, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0027615611907094717}, {"id": 131, "seek": 84804, "start": 861.64, "end": 868.4399999999999, "text": " address one part of it and you could really select if it was two bits and then ten bits and", "tokens": [51044, 2985, 472, 644, 295, 309, 293, 291, 727, 534, 3048, 498, 309, 390, 732, 9239, 293, 550, 2064, 9239, 293, 51384], "temperature": 0.0, "avg_logprob": -0.13572550576830666, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.0027615611907094717}, {"id": 132, "seek": 86844, "start": 868.44, "end": 877.0, "text": " things like that. So you can see here a very simple addition, so I can decode it with you,", "tokens": [50364, 721, 411, 300, 13, 407, 291, 393, 536, 510, 257, 588, 2199, 4500, 11, 370, 286, 393, 979, 1429, 309, 365, 291, 11, 50792], "temperature": 0.0, "avg_logprob": -0.161887397368749, "compression_ratio": 1.3515625, "no_speech_prob": 0.00621953047811985}, {"id": 133, "seek": 86844, "start": 877.5600000000001, "end": 888.36, "text": " so this means a transfer from one register to the accumulator, so the M0 register,", "tokens": [50820, 370, 341, 1355, 257, 5003, 490, 472, 7280, 281, 264, 12989, 16381, 11, 370, 264, 376, 15, 7280, 11, 51360], "temperature": 0.0, "avg_logprob": -0.161887397368749, "compression_ratio": 1.3515625, "no_speech_prob": 0.00621953047811985}, {"id": 134, "seek": 88836, "start": 888.52, "end": 900.6, "text": " so it's from M4, so you can see M4 we have two parts A and B, so A is from 6 to 9 and B is", "tokens": [50372, 370, 309, 311, 490, 376, 19, 11, 370, 291, 393, 536, 376, 19, 321, 362, 732, 3166, 316, 293, 363, 11, 370, 316, 307, 490, 1386, 281, 1722, 293, 363, 307, 50976], "temperature": 0.0, "avg_logprob": -0.1132939303362811, "compression_ratio": 1.5823529411764705, "no_speech_prob": 0.0014248351799324155}, {"id": 135, "seek": 88836, "start": 900.6, "end": 908.6800000000001, "text": " from 1 to 5, so the first thing is that we will load the part 6 to 9 into the accumulator,", "tokens": [50976, 490, 502, 281, 1025, 11, 370, 264, 700, 551, 307, 300, 321, 486, 3677, 264, 644, 1386, 281, 1722, 666, 264, 12989, 16381, 11, 51380], "temperature": 0.0, "avg_logprob": -0.1132939303362811, "compression_ratio": 1.5823529411764705, "no_speech_prob": 0.0014248351799324155}, {"id": 136, "seek": 88836, "start": 909.32, "end": 915.24, "text": " then we will ask to perform an addition with what we can find in the same register four", "tokens": [51412, 550, 321, 486, 1029, 281, 2042, 364, 4500, 365, 437, 321, 393, 915, 294, 264, 912, 7280, 1451, 51708], "temperature": 0.0, "avg_logprob": -0.1132939303362811, "compression_ratio": 1.5823529411764705, "no_speech_prob": 0.0014248351799324155}, {"id": 137, "seek": 91524, "start": 916.12, "end": 927.0, "text": " in part 1.5, you can see 1.5 here and you can see that as an internal flag it also", "tokens": [50408, 294, 644, 502, 13, 20, 11, 291, 393, 536, 502, 13, 20, 510, 293, 291, 393, 536, 300, 382, 364, 6920, 7166, 309, 611, 50952], "temperature": 0.0, "avg_logprob": -0.13908664273544097, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.002387893619015813}, {"id": 138, "seek": 91524, "start": 927.0, "end": 933.8, "text": " remembers the part that is used for the shift part that it should use for the addition and then", "tokens": [50952, 26228, 264, 644, 300, 307, 1143, 337, 264, 5513, 644, 300, 309, 820, 764, 337, 264, 4500, 293, 550, 51292], "temperature": 0.0, "avg_logprob": -0.13908664273544097, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.002387893619015813}, {"id": 139, "seek": 91524, "start": 933.8, "end": 941.5600000000001, "text": " it can perform the addition and will have A plus B inside the register and then you will put back", "tokens": [51292, 309, 393, 2042, 264, 4500, 293, 486, 362, 316, 1804, 363, 1854, 264, 7280, 293, 550, 291, 486, 829, 646, 51680], "temperature": 0.0, "avg_logprob": -0.13908664273544097, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.002387893619015813}, {"id": 140, "seek": 94156, "start": 941.56, "end": 948.8399999999999, "text": " the result, so it's a reverse instead of B or it's UB to store back the result in M4 and of", "tokens": [50364, 264, 1874, 11, 370, 309, 311, 257, 9943, 2602, 295, 363, 420, 309, 311, 624, 33, 281, 3531, 646, 264, 1874, 294, 376, 19, 293, 295, 50728], "temperature": 0.0, "avg_logprob": -0.13072493235270183, "compression_ratio": 1.5852272727272727, "no_speech_prob": 0.001966981217265129}, {"id": 141, "seek": 94156, "start": 948.8399999999999, "end": 958.4399999999999, "text": " course here you have to think oh I've done an addition so maybe there is one carry overflow", "tokens": [50728, 1164, 510, 291, 362, 281, 519, 1954, 286, 600, 1096, 364, 4500, 370, 1310, 456, 307, 472, 3985, 37772, 51208], "temperature": 0.0, "avg_logprob": -0.13072493235270183, "compression_ratio": 1.5852272727272727, "no_speech_prob": 0.001966981217265129}, {"id": 142, "seek": 94156, "start": 958.4399999999999, "end": 963.4799999999999, "text": " so you can see here that we have provisioned one byte more to be able to store the result back,", "tokens": [51208, 370, 291, 393, 536, 510, 300, 321, 362, 17225, 292, 472, 40846, 544, 281, 312, 1075, 281, 3531, 264, 1874, 646, 11, 51460], "temperature": 0.0, "avg_logprob": -0.13072493235270183, "compression_ratio": 1.5852272727272727, "no_speech_prob": 0.001966981217265129}, {"id": 143, "seek": 96348, "start": 963.48, "end": 975.08, "text": " so you can see all the mental gymnastics you have to do to be able to program with that kind of", "tokens": [50364, 370, 291, 393, 536, 439, 264, 4973, 48461, 291, 362, 281, 360, 281, 312, 1075, 281, 1461, 365, 300, 733, 295, 50944], "temperature": 0.0, "avg_logprob": -0.12289395597245958, "compression_ratio": 1.771604938271605, "no_speech_prob": 0.005268405191600323}, {"id": 144, "seek": 96348, "start": 977.16, "end": 983.72, "text": " range in the registers, so it means that when you are coding you have to use that kind of sheet,", "tokens": [51048, 3613, 294, 264, 38351, 11, 370, 309, 1355, 300, 562, 291, 366, 17720, 291, 362, 281, 764, 300, 733, 295, 8193, 11, 51376], "temperature": 0.0, "avg_logprob": -0.12289395597245958, "compression_ratio": 1.771604938271605, "no_speech_prob": 0.005268405191600323}, {"id": 145, "seek": 96348, "start": 984.9200000000001, "end": 991.64, "text": " you can see of course the mnemonic, you see here the translation where you have to think about", "tokens": [51436, 291, 393, 536, 295, 1164, 264, 275, 25989, 11630, 11, 291, 536, 510, 264, 12853, 689, 291, 362, 281, 519, 466, 51772], "temperature": 0.0, "avg_logprob": -0.12289395597245958, "compression_ratio": 1.771604938271605, "no_speech_prob": 0.005268405191600323}, {"id": 146, "seek": 99164, "start": 991.64, "end": 999.4, "text": " those range and you have then to facilitate that for the range you have to allocate your range and", "tokens": [50364, 729, 3613, 293, 291, 362, 550, 281, 20207, 300, 337, 264, 3613, 291, 362, 281, 35713, 428, 3613, 293, 50752], "temperature": 0.0, "avg_logprob": -0.18488928579515027, "compression_ratio": 1.7515151515151515, "no_speech_prob": 0.0011480628745630383}, {"id": 147, "seek": 99164, "start": 999.4, "end": 1005.96, "text": " reason about your range also on this sheet, so you can see here the problem is computing that", "tokens": [50752, 1778, 466, 428, 3613, 611, 322, 341, 8193, 11, 370, 291, 393, 536, 510, 264, 1154, 307, 15866, 300, 51080], "temperature": 0.0, "avg_logprob": -0.18488928579515027, "compression_ratio": 1.7515151515151515, "no_speech_prob": 0.0011480628745630383}, {"id": 148, "seek": 99164, "start": 1005.96, "end": 1014.36, "text": " formula and then you will just perform the different calculation, multiplication, shift shift to", "tokens": [51080, 8513, 293, 550, 291, 486, 445, 2042, 264, 819, 17108, 11, 27290, 11, 5513, 5513, 281, 51500], "temperature": 0.0, "avg_logprob": -0.18488928579515027, "compression_ratio": 1.7515151515151515, "no_speech_prob": 0.0011480628745630383}, {"id": 149, "seek": 101436, "start": 1015.16, "end": 1022.6800000000001, "text": " have the right power and then divide by a square root of three.", "tokens": [50404, 362, 264, 558, 1347, 293, 550, 9845, 538, 257, 3732, 5593, 295, 1045, 13, 50780], "temperature": 0.0, "avg_logprob": -0.21351745672393263, "compression_ratio": 1.4645161290322581, "no_speech_prob": 0.0005342310178093612}, {"id": 150, "seek": 101436, "start": 1026.1200000000001, "end": 1030.76, "text": " Okay quickly this is the full instruction set that you can see it's not very regular,", "tokens": [50952, 1033, 2661, 341, 307, 264, 1577, 10951, 992, 300, 291, 393, 536, 309, 311, 406, 588, 3890, 11, 51184], "temperature": 0.0, "avg_logprob": -0.21351745672393263, "compression_ratio": 1.4645161290322581, "no_speech_prob": 0.0005342310178093612}, {"id": 151, "seek": 101436, "start": 1032.68, "end": 1038.6, "text": " well a natural thing is that no operation is still zero, it was already zero,", "tokens": [51280, 731, 257, 3303, 551, 307, 300, 572, 6916, 307, 920, 4018, 11, 309, 390, 1217, 4018, 11, 51576], "temperature": 0.0, "avg_logprob": -0.21351745672393263, "compression_ratio": 1.4645161290322581, "no_speech_prob": 0.0005342310178093612}, {"id": 152, "seek": 103860, "start": 1039.32, "end": 1049.6399999999999, "text": " you have operations to different kind of jumps, there was an inner flag to remember how to jump,", "tokens": [50400, 291, 362, 7705, 281, 819, 733, 295, 16704, 11, 456, 390, 364, 7284, 7166, 281, 1604, 577, 281, 3012, 11, 50916], "temperature": 0.0, "avg_logprob": -0.21154624857801071, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.0026941834948956966}, {"id": 153, "seek": 103860, "start": 1050.84, "end": 1059.7199999999998, "text": " you have different memory transfer, I will not go into details, of course to set memory to zero or", "tokens": [50976, 291, 362, 819, 4675, 5003, 11, 286, 486, 406, 352, 666, 4365, 11, 295, 1164, 281, 992, 4675, 281, 4018, 420, 51420], "temperature": 0.0, "avg_logprob": -0.21154624857801071, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.0026941834948956966}, {"id": 154, "seek": 105972, "start": 1059.72, "end": 1069.8, "text": " to load a value to make the transfer between different kind of registers to, there is a logical", "tokens": [50364, 281, 3677, 257, 2158, 281, 652, 264, 5003, 1296, 819, 733, 295, 38351, 281, 11, 456, 307, 257, 14978, 50868], "temperature": 0.0, "avg_logprob": -0.20082135633988815, "compression_ratio": 1.5513513513513513, "no_speech_prob": 0.004315109923481941}, {"id": 155, "seek": 105972, "start": 1069.8, "end": 1077.0, "text": " ant, I didn't find any logical or, I don't know if there was one to be true, but okay different", "tokens": [50868, 2511, 11, 286, 994, 380, 915, 604, 14978, 420, 11, 286, 500, 380, 458, 498, 456, 390, 472, 281, 312, 2074, 11, 457, 1392, 819, 51228], "temperature": 0.0, "avg_logprob": -0.20082135633988815, "compression_ratio": 1.5513513513513513, "no_speech_prob": 0.004315109923481941}, {"id": 156, "seek": 105972, "start": 1077.0, "end": 1085.8, "text": " comparison and then of course the most important one from A, B, C, D, E, F the addition and the", "tokens": [51228, 9660, 293, 550, 295, 1164, 264, 881, 1021, 472, 490, 316, 11, 363, 11, 383, 11, 413, 11, 462, 11, 479, 264, 4500, 293, 264, 51668], "temperature": 0.0, "avg_logprob": -0.20082135633988815, "compression_ratio": 1.5513513513513513, "no_speech_prob": 0.004315109923481941}, {"id": 157, "seek": 108580, "start": 1085.8, "end": 1092.76, "text": " arithmetic operation and you can see there are two flavors for the multiplication and division", "tokens": [50364, 42973, 6916, 293, 291, 393, 536, 456, 366, 732, 16303, 337, 264, 27290, 293, 10044, 50712], "temperature": 0.0, "avg_logprob": -0.1763760161726442, "compression_ratio": 1.8783068783068784, "no_speech_prob": 0.00073008902836591}, {"id": 158, "seek": 108580, "start": 1092.76, "end": 1098.68, "text": " because there was one what was called reduced multiplication and reduced division that was", "tokens": [50712, 570, 456, 390, 472, 437, 390, 1219, 9212, 27290, 293, 9212, 10044, 300, 390, 51008], "temperature": 0.0, "avg_logprob": -0.1763760161726442, "compression_ratio": 1.8783068783068784, "no_speech_prob": 0.00073008902836591}, {"id": 159, "seek": 108580, "start": 1099.32, "end": 1105.6399999999999, "text": " faster but that we will not operate on a double register because of course if you have a big", "tokens": [51040, 4663, 457, 300, 321, 486, 406, 9651, 322, 257, 3834, 7280, 570, 295, 1164, 498, 291, 362, 257, 955, 51356], "temperature": 0.0, "avg_logprob": -0.1763760161726442, "compression_ratio": 1.8783068783068784, "no_speech_prob": 0.00073008902836591}, {"id": 160, "seek": 108580, "start": 1106.6, "end": 1113.08, "text": " to the result of multiplication could of course take twice as much as space.", "tokens": [51404, 281, 264, 1874, 295, 27290, 727, 295, 1164, 747, 6091, 382, 709, 382, 1901, 13, 51728], "temperature": 0.0, "avg_logprob": -0.1763760161726442, "compression_ratio": 1.8783068783068784, "no_speech_prob": 0.00073008902836591}, {"id": 161, "seek": 111308, "start": 1113.08, "end": 1126.04, "text": " Okay so this is the code card, so it summarizes the whole instruction set and it reflects", "tokens": [50364, 1033, 370, 341, 307, 264, 3089, 2920, 11, 370, 309, 14611, 5660, 264, 1379, 10951, 992, 293, 309, 18926, 51012], "temperature": 0.0, "avg_logprob": -0.2450623304947563, "compression_ratio": 1.3722627737226278, "no_speech_prob": 0.0013478163164108992}, {"id": 162, "seek": 111308, "start": 1126.84, "end": 1134.36, "text": " the complexity of its organization, you can point just three things, first it's called ordinateur,", "tokens": [51052, 264, 14024, 295, 1080, 4475, 11, 291, 393, 935, 445, 1045, 721, 11, 700, 309, 311, 1219, 4792, 13923, 374, 11, 51428], "temperature": 0.0, "avg_logprob": -0.2450623304947563, "compression_ratio": 1.3722627737226278, "no_speech_prob": 0.0013478163164108992}, {"id": 163, "seek": 113436, "start": 1134.36, "end": 1141.8, "text": " so in French the name was ordinateur but the name ordinateur was coined one year after", "tokens": [50364, 370, 294, 5522, 264, 1315, 390, 4792, 13923, 374, 457, 264, 1315, 4792, 13923, 374, 390, 45222, 472, 1064, 934, 50736], "temperature": 0.0, "avg_logprob": -0.153827385163643, "compression_ratio": 1.4628571428571429, "no_speech_prob": 0.021910693496465683}, {"id": 164, "seek": 113436, "start": 1142.6, "end": 1148.52, "text": " for IBM machine so it was not, it didn't exist yet so you have to think about all that,", "tokens": [50776, 337, 23487, 3479, 370, 309, 390, 406, 11, 309, 994, 380, 2514, 1939, 370, 291, 362, 281, 519, 466, 439, 300, 11, 51072], "temperature": 0.0, "avg_logprob": -0.153827385163643, "compression_ratio": 1.4628571428571429, "no_speech_prob": 0.021910693496465683}, {"id": 165, "seek": 113436, "start": 1149.8, "end": 1162.28, "text": " you can see here the different arithmetic operation for A to F, so 12, 13, 14, 15", "tokens": [51136, 291, 393, 536, 510, 264, 819, 42973, 6916, 337, 316, 281, 479, 11, 370, 2272, 11, 3705, 11, 3499, 11, 2119, 51760], "temperature": 0.0, "avg_logprob": -0.153827385163643, "compression_ratio": 1.4628571428571429, "no_speech_prob": 0.021910693496465683}, {"id": 166, "seek": 116228, "start": 1162.92, "end": 1169.3999999999999, "text": " and you can see the order is not, it's not always in the order, the seven is presented", "tokens": [50396, 293, 291, 393, 536, 264, 1668, 307, 406, 11, 309, 311, 406, 1009, 294, 264, 1668, 11, 264, 3407, 307, 8212, 50720], "temperature": 0.0, "avg_logprob": -0.15033990945389022, "compression_ratio": 1.6, "no_speech_prob": 0.0004953150055371225}, {"id": 167, "seek": 116228, "start": 1169.3999999999999, "end": 1181.0, "text": " higher because just the shift and operation and the two is not represented because it was", "tokens": [50720, 2946, 570, 445, 264, 5513, 293, 6916, 293, 264, 732, 307, 406, 10379, 570, 309, 390, 51300], "temperature": 0.0, "avg_logprob": -0.15033990945389022, "compression_ratio": 1.6, "no_speech_prob": 0.0004953150055371225}, {"id": 168, "seek": 116228, "start": 1181.0, "end": 1191.08, "text": " an extension for the drum. Okay let me go quickly, so about existing emulators, so this one was", "tokens": [51300, 364, 10320, 337, 264, 10206, 13, 1033, 718, 385, 352, 2661, 11, 370, 466, 6741, 846, 39265, 11, 370, 341, 472, 390, 51804], "temperature": 0.0, "avg_logprob": -0.15033990945389022, "compression_ratio": 1.6, "no_speech_prob": 0.0004953150055371225}, {"id": 169, "seek": 119108, "start": 1191.1599999999999, "end": 1203.08, "text": " written in 1995 by Vincent Gauguin, it's in sorry in x86 assembly code and it's still run but", "tokens": [50368, 3720, 294, 22601, 538, 28003, 10384, 697, 9445, 11, 309, 311, 294, 2597, 294, 2031, 22193, 12103, 3089, 293, 309, 311, 920, 1190, 457, 50964], "temperature": 0.0, "avg_logprob": -0.21502982100395307, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.009766092523932457}, {"id": 170, "seek": 119108, "start": 1203.6399999999999, "end": 1210.84, "text": " well thanks for the emulators because you need those bugs to run it, we don't have the source code,", "tokens": [50992, 731, 3231, 337, 264, 846, 39265, 570, 291, 643, 729, 15120, 281, 1190, 309, 11, 321, 500, 380, 362, 264, 4009, 3089, 11, 51352], "temperature": 0.0, "avg_logprob": -0.21502982100395307, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.009766092523932457}, {"id": 171, "seek": 119108, "start": 1212.6, "end": 1217.0, "text": " you can just see there, well it's just emulating everything so it's quite good", "tokens": [51440, 291, 393, 445, 536, 456, 11, 731, 309, 311, 445, 846, 12162, 1203, 370, 309, 311, 1596, 665, 51660], "temperature": 0.0, "avg_logprob": -0.21502982100395307, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.009766092523932457}, {"id": 172, "seek": 121700, "start": 1217.72, "end": 1222.92, "text": " complete and you can see there that it's just loading some information so it's just loading", "tokens": [50400, 3566, 293, 291, 393, 536, 456, 300, 309, 311, 445, 15114, 512, 1589, 370, 309, 311, 445, 15114, 50660], "temperature": 0.0, "avg_logprob": -0.13825194936403087, "compression_ratio": 1.6134969325153374, "no_speech_prob": 0.007570343557745218}, {"id": 173, "seek": 121700, "start": 1223.8, "end": 1231.56, "text": " 0, 9, 4, 2, 7 in the memory tree register and then you can, well there is a drum", "tokens": [50704, 1958, 11, 1722, 11, 1017, 11, 568, 11, 1614, 294, 264, 4675, 4230, 7280, 293, 550, 291, 393, 11, 731, 456, 307, 257, 10206, 51092], "temperature": 0.0, "avg_logprob": -0.13825194936403087, "compression_ratio": 1.6134969325153374, "no_speech_prob": 0.007570343557745218}, {"id": 174, "seek": 121700, "start": 1232.76, "end": 1241.0, "text": " emulated and then you have a number of programs on the drum you can try, a more recent one", "tokens": [51152, 846, 6987, 293, 550, 291, 362, 257, 1230, 295, 4268, 322, 264, 10206, 291, 393, 853, 11, 257, 544, 5162, 472, 51564], "temperature": 0.0, "avg_logprob": -0.13825194936403087, "compression_ratio": 1.6134969325153374, "no_speech_prob": 0.007570343557745218}, {"id": 175, "seek": 124100, "start": 1241.96, "end": 1247.96, "text": " it's available online so this one is very interesting because it's very well documented and you can", "tokens": [50412, 309, 311, 2435, 2950, 370, 341, 472, 307, 588, 1880, 570, 309, 311, 588, 731, 23007, 293, 291, 393, 50712], "temperature": 0.0, "avg_logprob": -0.10749869597585578, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.019346198067069054}, {"id": 176, "seek": 124100, "start": 1247.96, "end": 1256.36, "text": " even play with the panel, there is a full console where you can step in", "tokens": [50712, 754, 862, 365, 264, 4831, 11, 456, 307, 257, 1577, 11076, 689, 291, 393, 1823, 294, 51132], "temperature": 0.0, "avg_logprob": -0.10749869597585578, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.019346198067069054}, {"id": 177, "seek": 124100, "start": 1258.76, "end": 1265.08, "text": " and actually it was one of the sources of inspiration of our work because", "tokens": [51252, 293, 767, 309, 390, 472, 295, 264, 7139, 295, 10249, 295, 527, 589, 570, 51568], "temperature": 0.0, "avg_logprob": -0.10749869597585578, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.019346198067069054}, {"id": 178, "seek": 126508, "start": 1265.6399999999999, "end": 1272.84, "text": " that one was in java 6 and oh it's in java so we kind of transposed and first", "tokens": [50392, 300, 472, 390, 294, 361, 4061, 1386, 293, 1954, 309, 311, 294, 361, 4061, 370, 321, 733, 295, 7132, 1744, 293, 700, 50752], "temperature": 0.0, "avg_logprob": -0.18482257158328325, "compression_ratio": 1.7956989247311828, "no_speech_prob": 0.0021352460607886314}, {"id": 179, "seek": 126508, "start": 1274.04, "end": 1280.4399999999998, "text": " studied that code and there was there is also an extension visualization 3d visualization which", "tokens": [50812, 9454, 300, 3089, 293, 456, 390, 456, 307, 611, 364, 10320, 25801, 805, 67, 25801, 597, 51132], "temperature": 0.0, "avg_logprob": -0.18482257158328325, "compression_ratio": 1.7956989247311828, "no_speech_prob": 0.0021352460607886314}, {"id": 180, "seek": 126508, "start": 1280.4399999999998, "end": 1285.3999999999999, "text": " is funny because you can you can explore inside the machine you can see here the connection", "tokens": [51132, 307, 4074, 570, 291, 393, 291, 393, 6839, 1854, 264, 3479, 291, 393, 536, 510, 264, 4984, 51380], "temperature": 0.0, "avg_logprob": -0.18482257158328325, "compression_ratio": 1.7956989247311828, "no_speech_prob": 0.0021352460607886314}, {"id": 181, "seek": 126508, "start": 1285.3999999999999, "end": 1289.6399999999999, "text": " and there were big cables to connect the machine with the tabulating", "tokens": [51380, 293, 456, 645, 955, 17555, 281, 1745, 264, 3479, 365, 264, 4421, 12162, 51592], "temperature": 0.0, "avg_logprob": -0.18482257158328325, "compression_ratio": 1.7956989247311828, "no_speech_prob": 0.0021352460607886314}, {"id": 182, "seek": 128964, "start": 1289.72, "end": 1298.3600000000001, "text": " okay about the emulation structure of course what we have modeled is all the components so", "tokens": [50368, 1392, 466, 264, 846, 2776, 3877, 295, 1164, 437, 321, 362, 37140, 307, 439, 264, 6677, 370, 50800], "temperature": 0.0, "avg_logprob": -0.16909372515794707, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.004179392475634813}, {"id": 183, "seek": 128964, "start": 1298.3600000000001, "end": 1303.5600000000002, "text": " you have the machine you have the different kind of memories, banal memories it's just the", "tokens": [50800, 291, 362, 264, 3479, 291, 362, 264, 819, 733, 295, 8495, 11, 5643, 304, 8495, 309, 311, 445, 264, 51060], "temperature": 0.0, "avg_logprob": -0.16909372515794707, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.004179392475634813}, {"id": 184, "seek": 128964, "start": 1303.5600000000002, "end": 1309.88, "text": " registers, different series groups and then a special one which is the panel which is actually", "tokens": [51060, 38351, 11, 819, 2638, 3935, 293, 550, 257, 2121, 472, 597, 307, 264, 4831, 597, 307, 767, 51376], "temperature": 0.0, "avg_logprob": -0.16909372515794707, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.004179392475634813}, {"id": 185, "seek": 128964, "start": 1309.88, "end": 1315.4, "text": " as you can see memory mapped to one of the series and of course you can also have connected", "tokens": [51376, 382, 291, 393, 536, 4675, 33318, 281, 472, 295, 264, 2638, 293, 295, 1164, 291, 393, 611, 362, 4582, 51652], "temperature": 0.0, "avg_logprob": -0.16909372515794707, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.004179392475634813}, {"id": 186, "seek": 131540, "start": 1315.4, "end": 1320.3600000000001, "text": " machines and the drum then of course the whole instruction set you can see there the", "tokens": [50364, 8379, 293, 264, 10206, 550, 295, 1164, 264, 1379, 10951, 992, 291, 393, 536, 456, 264, 50612], "temperature": 0.0, "avg_logprob": -0.207138834328487, "compression_ratio": 1.725, "no_speech_prob": 0.000950427376665175}, {"id": 187, "seek": 131540, "start": 1321.8000000000002, "end": 1328.3600000000001, "text": " modeling the way the instructions are structured depending on their kind if it's for drum transfer", "tokens": [50684, 15983, 264, 636, 264, 9415, 366, 18519, 5413, 322, 641, 733, 498, 309, 311, 337, 10206, 5003, 51012], "temperature": 0.0, "avg_logprob": -0.207138834328487, "compression_ratio": 1.725, "no_speech_prob": 0.000950427376665175}, {"id": 188, "seek": 131540, "start": 1328.3600000000001, "end": 1338.2, "text": " it's of all the arithmetic operations have some common parts so we have some hierarchy there", "tokens": [51012, 309, 311, 295, 439, 264, 42973, 7705, 362, 512, 2689, 3166, 370, 321, 362, 512, 22333, 456, 51504], "temperature": 0.0, "avg_logprob": -0.207138834328487, "compression_ratio": 1.725, "no_speech_prob": 0.000950427376665175}, {"id": 189, "seek": 133820, "start": 1338.52, "end": 1347.0800000000002, "text": " and of course there is some execution management and test and you can see the code there on", "tokens": [50380, 293, 295, 1164, 456, 307, 512, 15058, 4592, 293, 1500, 293, 291, 393, 536, 264, 3089, 456, 322, 50808], "temperature": 0.0, "avg_logprob": -0.1998630932399205, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.0008988717454485595}, {"id": 190, "seek": 133820, "start": 1347.0800000000002, "end": 1354.92, "text": " github and what's interesting from also the emulation point of view of course all operation will", "tokens": [50808, 290, 355, 836, 293, 437, 311, 1880, 490, 611, 264, 846, 2776, 935, 295, 1910, 295, 1164, 439, 6916, 486, 51200], "temperature": 0.0, "avg_logprob": -0.1998630932399205, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.0008988717454485595}, {"id": 191, "seek": 133820, "start": 1357.0, "end": 1364.8400000000001, "text": " have to specify the different information so for the addition", "tokens": [51304, 362, 281, 16500, 264, 819, 1589, 370, 337, 264, 4500, 51696], "temperature": 0.0, "avg_logprob": -0.1998630932399205, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.0008988717454485595}, {"id": 192, "seek": 136484, "start": 1365.56, "end": 1372.6, "text": " this is an inner operation just to show you how it's implemented so of course you have to specify", "tokens": [50400, 341, 307, 364, 7284, 6916, 445, 281, 855, 291, 577, 309, 311, 12270, 370, 295, 1164, 291, 362, 281, 16500, 50752], "temperature": 0.0, "avg_logprob": -0.19588708877563477, "compression_ratio": 1.6170212765957446, "no_speech_prob": 0.0025054109282791615}, {"id": 193, "seek": 136484, "start": 1372.6, "end": 1379.8, "text": " the range where you are performing the addition and this is quite a standard", "tokens": [50752, 264, 3613, 689, 291, 366, 10205, 264, 4500, 293, 341, 307, 1596, 257, 3832, 51112], "temperature": 0.0, "avg_logprob": -0.19588708877563477, "compression_ratio": 1.6170212765957446, "no_speech_prob": 0.0025054109282791615}, {"id": 194, "seek": 136484, "start": 1382.6799999999998, "end": 1385.32, "text": " implementation where you just loop over the different", "tokens": [51256, 11420, 689, 291, 445, 6367, 670, 264, 819, 51388], "temperature": 0.0, "avg_logprob": -0.19588708877563477, "compression_ratio": 1.6170212765957446, "no_speech_prob": 0.0025054109282791615}, {"id": 195, "seek": 138532, "start": 1386.28, "end": 1396.6799999999998, "text": " the different bit and then you propagate the carry what is interesting is just that", "tokens": [50412, 264, 819, 857, 293, 550, 291, 48256, 264, 3985, 437, 307, 1880, 307, 445, 300, 50932], "temperature": 0.0, "avg_logprob": -0.20869823296864828, "compression_ratio": 1.5422535211267605, "no_speech_prob": 0.0023726322688162327}, {"id": 196, "seek": 138532, "start": 1396.6799999999998, "end": 1404.76, "text": " you have the base so that code would work if both for the binary and for the decimal", "tokens": [50932, 291, 362, 264, 3096, 370, 300, 3089, 576, 589, 498, 1293, 337, 264, 17434, 293, 337, 264, 26601, 51336], "temperature": 0.0, "avg_logprob": -0.20869823296864828, "compression_ratio": 1.5422535211267605, "no_speech_prob": 0.0023726322688162327}, {"id": 197, "seek": 138532, "start": 1405.3999999999999, "end": 1409.1599999999999, "text": " implementation actually the variant of the machine", "tokens": [51368, 11420, 767, 264, 17501, 295, 264, 3479, 51556], "temperature": 0.0, "avg_logprob": -0.20869823296864828, "compression_ratio": 1.5422535211267605, "no_speech_prob": 0.0023726322688162327}, {"id": 198, "seek": 140916, "start": 1409.88, "end": 1419.16, "text": " so this this is trying to mimic the whole the whole operations another one very", "tokens": [50400, 370, 341, 341, 307, 1382, 281, 31075, 264, 1379, 264, 1379, 7705, 1071, 472, 588, 50864], "temperature": 0.0, "avg_logprob": -0.18896481028774328, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.011495120823383331}, {"id": 199, "seek": 140916, "start": 1419.16, "end": 1425.24, "text": " much simple is just to use the Java operations for example for the for the subtraction we just", "tokens": [50864, 709, 2199, 307, 445, 281, 764, 264, 10745, 7705, 337, 1365, 337, 264, 337, 264, 16390, 313, 321, 445, 51168], "temperature": 0.0, "avg_logprob": -0.18896481028774328, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.011495120823383331}, {"id": 200, "seek": 140916, "start": 1425.24, "end": 1433.0800000000002, "text": " translate everything in decimal perform the subtraction and then start the result there is", "tokens": [51168, 13799, 1203, 294, 26601, 2042, 264, 16390, 313, 293, 550, 722, 264, 1874, 456, 307, 51560], "temperature": 0.0, "avg_logprob": -0.18896481028774328, "compression_ratio": 1.7666666666666666, "no_speech_prob": 0.011495120823383331}, {"id": 201, "seek": 143308, "start": 1433.08, "end": 1440.52, "text": " only one one thing that that must be we must be careful is that we have to use long in Java because", "tokens": [50364, 787, 472, 472, 551, 300, 300, 1633, 312, 321, 1633, 312, 5026, 307, 300, 321, 362, 281, 764, 938, 294, 10745, 570, 50736], "temperature": 0.0, "avg_logprob": -0.10477079978355995, "compression_ratio": 1.6606060606060606, "no_speech_prob": 0.0024605183862149715}, {"id": 202, "seek": 143308, "start": 1440.52, "end": 1450.9199999999998, "text": " 12 those 12 numbers are more than 32 bits in in Java we skip the division so the current", "tokens": [50736, 2272, 729, 2272, 3547, 366, 544, 813, 8858, 9239, 294, 294, 10745, 321, 10023, 264, 10044, 370, 264, 2190, 51256], "temperature": 0.0, "avg_logprob": -0.10477079978355995, "compression_ratio": 1.6606060606060606, "no_speech_prob": 0.0024605183862149715}, {"id": 203, "seek": 143308, "start": 1450.9199999999998, "end": 1457.96, "text": " implementation while we have our prototype just in Java so we are just using here the", "tokens": [51256, 11420, 1339, 321, 362, 527, 19475, 445, 294, 10745, 370, 321, 366, 445, 1228, 510, 264, 51608], "temperature": 0.0, "avg_logprob": -0.10477079978355995, "compression_ratio": 1.6606060606060606, "no_speech_prob": 0.0024605183862149715}, {"id": 204, "seek": 145796, "start": 1458.1200000000001, "end": 1467.48, "text": " eclipses as an environment and running the the test so this is just test we have a small", "tokens": [50372, 308, 3474, 2600, 279, 382, 364, 2823, 293, 2614, 264, 264, 1500, 370, 341, 307, 445, 1500, 321, 362, 257, 1359, 50840], "temperature": 0.0, "avg_logprob": -0.2650818479233894, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001991523429751396}, {"id": 205, "seek": 145796, "start": 1467.48, "end": 1472.92, "text": " interface this not yet finished and you can see here a quick code that just showed the", "tokens": [50840, 9226, 341, 406, 1939, 4335, 293, 291, 393, 536, 510, 257, 1702, 3089, 300, 445, 4712, 264, 51112], "temperature": 0.0, "avg_logprob": -0.2650818479233894, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001991523429751396}, {"id": 206, "seek": 145796, "start": 1475.96, "end": 1483.4, "text": " Fibonacci suite and well you can see the result here I will not go into the detail but you can", "tokens": [51264, 479, 897, 266, 43870, 14205, 293, 731, 291, 393, 536, 264, 1874, 510, 286, 486, 406, 352, 666, 264, 2607, 457, 291, 393, 51636], "temperature": 0.0, "avg_logprob": -0.2650818479233894, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.001991523429751396}, {"id": 207, "seek": 148340, "start": 1484.2, "end": 1490.0400000000002, "text": " you can see there is actually a loop so there is a jump for 10 iterations and then you you", "tokens": [50404, 291, 393, 536, 456, 307, 767, 257, 6367, 370, 456, 307, 257, 3012, 337, 1266, 36540, 293, 550, 291, 291, 50696], "temperature": 0.0, "avg_logprob": -0.17502797539554424, "compression_ratio": 1.6407185628742516, "no_speech_prob": 0.00448608910664916}, {"id": 208, "seek": 148340, "start": 1490.0400000000002, "end": 1495.8000000000002, "text": " have the different number you can see the number after a few iterations you have 13 8 13 and", "tokens": [50696, 362, 264, 819, 1230, 291, 393, 536, 264, 1230, 934, 257, 1326, 36540, 291, 362, 3705, 1649, 3705, 293, 50984], "temperature": 0.0, "avg_logprob": -0.17502797539554424, "compression_ratio": 1.6407185628742516, "no_speech_prob": 0.00448608910664916}, {"id": 209, "seek": 148340, "start": 1495.8000000000002, "end": 1504.0400000000002, "text": " six like that which which are being computed so it's it's working and now I will finish so", "tokens": [50984, 2309, 411, 300, 597, 597, 366, 885, 40610, 370, 309, 311, 309, 311, 1364, 293, 586, 286, 486, 2413, 370, 51396], "temperature": 0.0, "avg_logprob": -0.17502797539554424, "compression_ratio": 1.6407185628742516, "no_speech_prob": 0.00448608910664916}, {"id": 210, "seek": 150404, "start": 1504.12, "end": 1513.1599999999999, "text": " what what what did we learn so it was quite quite funny to uh and strange to look at that machine", "tokens": [50368, 437, 437, 437, 630, 321, 1466, 370, 309, 390, 1596, 1596, 4074, 281, 2232, 293, 5861, 281, 574, 412, 300, 3479, 50820], "temperature": 0.0, "avg_logprob": -0.1433836207670324, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.007428467273712158}, {"id": 211, "seek": 150404, "start": 1513.1599999999999, "end": 1518.84, "text": " it's not so complex to code but there are many many implementation details you see about those", "tokens": [50820, 309, 311, 406, 370, 3997, 281, 3089, 457, 456, 366, 867, 867, 11420, 4365, 291, 536, 466, 729, 51104], "temperature": 0.0, "avg_logprob": -0.1433836207670324, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.007428467273712158}, {"id": 212, "seek": 150404, "start": 1518.84, "end": 1525.1599999999999, "text": " range manipulation and we are still have a lot a lot to explore for example all the floating points", "tokens": [51104, 3613, 26475, 293, 321, 366, 920, 362, 257, 688, 257, 688, 281, 6839, 337, 1365, 439, 264, 12607, 2793, 51420], "temperature": 0.0, "avg_logprob": -0.1433836207670324, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.007428467273712158}, {"id": 213, "seek": 150404, "start": 1526.04, "end": 1531.0, "text": " improving the user interface and of course we are at the start so we would like to", "tokens": [51464, 11470, 264, 4195, 9226, 293, 295, 1164, 321, 366, 412, 264, 722, 370, 321, 576, 411, 281, 51712], "temperature": 0.0, "avg_logprob": -0.1433836207670324, "compression_ratio": 1.7361111111111112, "no_speech_prob": 0.007428467273712158}, {"id": 214, "seek": 153100, "start": 1531.0, "end": 1540.28, "text": " really to study what was used and as as code at that time so in summary it was it was very", "tokens": [50364, 534, 281, 2979, 437, 390, 1143, 293, 382, 382, 3089, 412, 300, 565, 370, 294, 12691, 309, 390, 309, 390, 588, 50828], "temperature": 0.0, "avg_logprob": -0.18046767895038313, "compression_ratio": 1.672514619883041, "no_speech_prob": 0.0017554211663082242}, {"id": 215, "seek": 153100, "start": 1540.28, "end": 1547.24, "text": " and it's still very rewarding from the technical but also from the historical and cultural point of", "tokens": [50828, 293, 309, 311, 920, 588, 20063, 490, 264, 6191, 457, 611, 490, 264, 8584, 293, 6988, 935, 295, 51176], "temperature": 0.0, "avg_logprob": -0.18046767895038313, "compression_ratio": 1.672514619883041, "no_speech_prob": 0.0017554211663082242}, {"id": 216, "seek": 153100, "start": 1547.24, "end": 1553.64, "text": " view okay thank you and if you have questions you're welcome you have some some reference there", "tokens": [51176, 1910, 1392, 1309, 291, 293, 498, 291, 362, 1651, 291, 434, 2928, 291, 362, 512, 512, 6408, 456, 51496], "temperature": 0.0, "avg_logprob": -0.18046767895038313, "compression_ratio": 1.672514619883041, "no_speech_prob": 0.0017554211663082242}, {"id": 217, "seek": 155364, "start": 1553.64, "end": 1556.2800000000002, "text": " about all the the guys who have worked on the on that machine", "tokens": [50364, 466, 439, 264, 264, 1074, 567, 362, 2732, 322, 264, 322, 300, 3479, 50496], "temperature": 0.0, "avg_logprob": -0.4469956398010254, "compression_ratio": 1.0476190476190477, "no_speech_prob": 0.009998729452490807}, {"id": 218, "seek": 155364, "start": 1569.0800000000002, "end": 1570.2800000000002, "text": " yeah", "tokens": [51136, 1338, 51196], "temperature": 0.0, "avg_logprob": -0.4469956398010254, "compression_ratio": 1.0476190476190477, "no_speech_prob": 0.009998729452490807}, {"id": 219, "seek": 157028, "start": 1570.44, "end": 1576.76, "text": " like the core memory and the reading that was required to rewrite it again once you read", "tokens": [50372, 411, 264, 4965, 4675, 293, 264, 3760, 300, 390, 4739, 281, 28132, 309, 797, 1564, 291, 1401, 50688], "temperature": 0.0, "avg_logprob": -0.24717773090709338, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005919740069657564}, {"id": 220, "seek": 157028, "start": 1577.8, "end": 1586.6, "text": " so so the question is about the the core memory simulating the reading of the memory so the", "tokens": [50740, 370, 370, 264, 1168, 307, 466, 264, 264, 4965, 4675, 1034, 12162, 264, 3760, 295, 264, 4675, 370, 264, 51180], "temperature": 0.0, "avg_logprob": -0.24717773090709338, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005919740069657564}, {"id": 221, "seek": 157028, "start": 1586.6, "end": 1594.84, "text": " well it's a good question because I don't know how to call this a simulator or an emulator but", "tokens": [51180, 731, 309, 311, 257, 665, 1168, 570, 286, 500, 380, 458, 577, 281, 818, 341, 257, 32974, 420, 364, 846, 16381, 457, 51592], "temperature": 0.0, "avg_logprob": -0.24717773090709338, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.005919740069657564}, {"id": 222, "seek": 159484, "start": 1595.48, "end": 1605.8, "text": " uh the the components well the the machine is is quite quite also at it's uh what we are emulating", "tokens": [50396, 2232, 264, 264, 6677, 731, 264, 264, 3479, 307, 307, 1596, 1596, 611, 412, 309, 311, 2232, 437, 321, 366, 846, 12162, 50912], "temperature": 0.0, "avg_logprob": -0.17039145060947963, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0008161019650287926}, {"id": 223, "seek": 159484, "start": 1605.8, "end": 1614.6, "text": " it's kind of an abstraction of the machine I would say uh so one limitation is done that we", "tokens": [50912, 309, 311, 733, 295, 364, 37765, 295, 264, 3479, 286, 576, 584, 2232, 370, 472, 27432, 307, 1096, 300, 321, 51352], "temperature": 0.0, "avg_logprob": -0.17039145060947963, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0008161019650287926}, {"id": 224, "seek": 159484, "start": 1614.6, "end": 1623.9599999999998, "text": " don't really know the physics of the reading so uh we are assuming that we can read reliably the", "tokens": [51352, 500, 380, 534, 458, 264, 10649, 295, 264, 3760, 370, 2232, 321, 366, 11926, 300, 321, 393, 1401, 49927, 264, 51820], "temperature": 0.0, "avg_logprob": -0.17039145060947963, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.0008161019650287926}, {"id": 225, "seek": 162396, "start": 1624.04, "end": 1630.04, "text": " information and that we don't have any timing issue if the the things that are bothering you", "tokens": [50368, 1589, 293, 300, 321, 500, 380, 362, 604, 10822, 2734, 498, 264, 264, 721, 300, 366, 31432, 291, 50668], "temperature": 0.0, "avg_logprob": -0.15586410660341563, "compression_ratio": 1.8374384236453203, "no_speech_prob": 0.0011245411587879062}, {"id": 226, "seek": 162396, "start": 1631.16, "end": 1638.1200000000001, "text": " but of course we don't have a working machine to to compare with so we can only uh compare with", "tokens": [50724, 457, 295, 1164, 321, 500, 380, 362, 257, 1364, 3479, 281, 281, 6794, 365, 370, 321, 393, 787, 2232, 6794, 365, 51072], "temperature": 0.0, "avg_logprob": -0.15586410660341563, "compression_ratio": 1.8374384236453203, "no_speech_prob": 0.0011245411587879062}, {"id": 227, "seek": 162396, "start": 1638.1200000000001, "end": 1645.8, "text": " expected result or with what order the older emulator as is delivering actually the older", "tokens": [51072, 5176, 1874, 420, 365, 437, 1668, 264, 4906, 846, 16381, 382, 307, 14666, 767, 264, 4906, 51456], "temperature": 0.0, "avg_logprob": -0.15586410660341563, "compression_ratio": 1.8374384236453203, "no_speech_prob": 0.0011245411587879062}, {"id": 228, "seek": 162396, "start": 1645.8, "end": 1651.72, "text": " emulator had a problem we discovered there was a mistake discovered so it was corrected by the", "tokens": [51456, 846, 16381, 632, 257, 1154, 321, 6941, 456, 390, 257, 6146, 6941, 370, 309, 390, 31687, 538, 264, 51752], "temperature": 0.0, "avg_logprob": -0.15586410660341563, "compression_ratio": 1.8374384236453203, "no_speech_prob": 0.0011245411587879062}, {"id": 229, "seek": 165172, "start": 1651.72, "end": 1659.8, "text": " the guy who's still maintaining it somehow but yeah so the the point would be really to uh", "tokens": [50364, 264, 2146, 567, 311, 920, 14916, 309, 6063, 457, 1338, 370, 264, 264, 935, 576, 312, 534, 281, 2232, 50768], "temperature": 0.0, "avg_logprob": -0.15278484510338824, "compression_ratio": 1.6091954022988506, "no_speech_prob": 0.006924486253410578}, {"id": 230, "seek": 165172, "start": 1661.0, "end": 1667.24, "text": " to be able to to study the electronic circuitry if we would like to go to that to that level", "tokens": [50828, 281, 312, 1075, 281, 281, 2979, 264, 10092, 9048, 627, 498, 321, 576, 411, 281, 352, 281, 300, 281, 300, 1496, 51140], "temperature": 0.0, "avg_logprob": -0.15278484510338824, "compression_ratio": 1.6091954022988506, "no_speech_prob": 0.006924486253410578}, {"id": 231, "seek": 165172, "start": 1667.88, "end": 1674.6000000000001, "text": " but we don't have one sorry yeah there's a question from the stream yeah is there a compiler for", "tokens": [51172, 457, 321, 500, 380, 362, 472, 2597, 1338, 456, 311, 257, 1168, 490, 264, 4309, 1338, 307, 456, 257, 31958, 337, 51508], "temperature": 0.0, "avg_logprob": -0.15278484510338824, "compression_ratio": 1.6091954022988506, "no_speech_prob": 0.006924486253410578}, {"id": 232, "seek": 167460, "start": 1674.6, "end": 1683.24, "text": " gamma 3 a compiler uh well is there a compiler for the gamma 3 so you can you could see well", "tokens": [50364, 15546, 805, 257, 31958, 2232, 731, 307, 456, 257, 31958, 337, 264, 15546, 805, 370, 291, 393, 291, 727, 536, 731, 50796], "temperature": 0.0, "avg_logprob": -0.18121594101635377, "compression_ratio": 1.75, "no_speech_prob": 0.005026501603424549}, {"id": 233, "seek": 167460, "start": 1683.24, "end": 1691.7199999999998, "text": " assembly code was assembly language was invented two years before I think by uh uh and the assembly", "tokens": [50796, 12103, 3089, 390, 12103, 2856, 390, 14479, 732, 924, 949, 286, 519, 538, 2232, 2232, 293, 264, 12103, 51220], "temperature": 0.0, "avg_logprob": -0.18121594101635377, "compression_ratio": 1.75, "no_speech_prob": 0.005026501603424549}, {"id": 234, "seek": 167460, "start": 1691.7199999999998, "end": 1697.24, "text": " was was done manually at that time so at that time the question the answer is no there were no", "tokens": [51220, 390, 390, 1096, 16945, 412, 300, 565, 370, 412, 300, 565, 264, 1168, 264, 1867, 307, 572, 456, 645, 572, 51496], "temperature": 0.0, "avg_logprob": -0.18121594101635377, "compression_ratio": 1.75, "no_speech_prob": 0.005026501603424549}, {"id": 235, "seek": 169724, "start": 1697.24, "end": 1705.72, "text": " compiler but no today actually uh the guys from akonit have developed uh uh a compiler", "tokens": [50364, 31958, 457, 572, 965, 767, 2232, 264, 1074, 490, 9308, 266, 270, 362, 4743, 2232, 2232, 257, 31958, 50788], "temperature": 0.0, "avg_logprob": -0.21213122147780197, "compression_ratio": 1.6898734177215189, "no_speech_prob": 0.01572614349424839}, {"id": 236, "seek": 169724, "start": 1706.52, "end": 1713.24, "text": " from a language that looks like uh java I think uh so you can uh you you you actually yes you can", "tokens": [50828, 490, 257, 2856, 300, 1542, 411, 2232, 361, 4061, 286, 519, 2232, 370, 291, 393, 2232, 291, 291, 291, 767, 2086, 291, 393, 51164], "temperature": 0.0, "avg_logprob": -0.21213122147780197, "compression_ratio": 1.6898734177215189, "no_speech_prob": 0.01572614349424839}, {"id": 237, "seek": 169724, "start": 1713.24, "end": 1720.36, "text": " compile from that pseudo code language into uh into the gamma 3 yeah that was done", "tokens": [51164, 31413, 490, 300, 35899, 3089, 2856, 666, 2232, 666, 264, 15546, 805, 1338, 300, 390, 1096, 51520], "temperature": 0.0, "avg_logprob": -0.21213122147780197, "compression_ratio": 1.6898734177215189, "no_speech_prob": 0.01572614349424839}, {"id": 238, "seek": 172036, "start": 1721.32, "end": 1723.9599999999998, "text": " I didn't try it but I did", "tokens": [50412, 286, 994, 380, 853, 309, 457, 286, 630, 50544], "temperature": 0.0, "avg_logprob": -0.3842060782692649, "compression_ratio": 1.367816091954023, "no_speech_prob": 0.0341683067381382}, {"id": 239, "seek": 172036, "start": 1738.12, "end": 1747.6399999999999, "text": " the question is was the program the program that I showed was uh in uh coded was was executed", "tokens": [51252, 264, 1168, 307, 390, 264, 1461, 264, 1461, 300, 286, 4712, 390, 2232, 294, 2232, 34874, 390, 390, 17577, 51728], "temperature": 0.0, "avg_logprob": -0.3842060782692649, "compression_ratio": 1.367816091954023, "no_speech_prob": 0.0341683067381382}, {"id": 240, "seek": 174764, "start": 1747.64, "end": 1755.96, "text": " from the panel so well the panel is just a way to to specify the content of the memory", "tokens": [50364, 490, 264, 4831, 370, 731, 264, 4831, 307, 445, 257, 636, 281, 281, 16500, 264, 2701, 295, 264, 4675, 50780], "temperature": 0.0, "avg_logprob": -0.15691855748494465, "compression_ratio": 1.818840579710145, "no_speech_prob": 0.007871500216424465}, {"id": 241, "seek": 174764, "start": 1755.96, "end": 1762.2, "text": " is the is the same but just with wire but the the emulator supports the drum", "tokens": [50780, 307, 264, 307, 264, 912, 457, 445, 365, 6234, 457, 264, 264, 846, 16381, 9346, 264, 10206, 51092], "temperature": 0.0, "avg_logprob": -0.15691855748494465, "compression_ratio": 1.818840579710145, "no_speech_prob": 0.007871500216424465}, {"id": 242, "seek": 174764, "start": 1765.72, "end": 1770.2800000000002, "text": " yeah yeah it could yeah yeah it could could load instructions so the drum could contain", "tokens": [51268, 1338, 1338, 309, 727, 1338, 1338, 309, 727, 727, 3677, 9415, 370, 264, 10206, 727, 5304, 51496], "temperature": 0.0, "avg_logprob": -0.15691855748494465, "compression_ratio": 1.818840579710145, "no_speech_prob": 0.007871500216424465}, {"id": 243, "seek": 177028, "start": 1770.36, "end": 1774.04, "text": " instructions or it could contain uh data yeah", "tokens": [50368, 9415, 420, 309, 727, 5304, 2232, 1412, 1338, 50552], "temperature": 0.0, "avg_logprob": -0.1965578906940964, "compression_ratio": 1.8203125, "no_speech_prob": 0.005678302142769098}, {"id": 244, "seek": 177028, "start": 1777.6399999999999, "end": 1788.04, "text": " yeah yeah there is yeah so the the the question is about the the cycle count of the different", "tokens": [50732, 1338, 1338, 456, 307, 1338, 370, 264, 264, 264, 1168, 307, 466, 264, 264, 6586, 1207, 295, 264, 819, 51252], "temperature": 0.0, "avg_logprob": -0.1965578906940964, "compression_ratio": 1.8203125, "no_speech_prob": 0.005678302142769098}, {"id": 245, "seek": 177028, "start": 1788.04, "end": 1797.56, "text": " instructions so yeah we we have uh time about timing uh about the uh the addition subtraction", "tokens": [51252, 9415, 370, 1338, 321, 321, 362, 2232, 565, 466, 10822, 2232, 466, 264, 2232, 264, 4500, 16390, 313, 51728], "temperature": 0.0, "avg_logprob": -0.1965578906940964, "compression_ratio": 1.8203125, "no_speech_prob": 0.005678302142769098}, {"id": 246, "seek": 179756, "start": 1797.56, "end": 1803.72, "text": " and different kind of multiplication so that's that's available and that's a good point because", "tokens": [50364, 293, 819, 733, 295, 27290, 370, 300, 311, 300, 311, 2435, 293, 300, 311, 257, 665, 935, 570, 50672], "temperature": 0.0, "avg_logprob": -0.16680932449082198, "compression_ratio": 1.6217948717948718, "no_speech_prob": 0.010681040585041046}, {"id": 247, "seek": 179756, "start": 1803.72, "end": 1811.72, "text": " the emulator is not uh taking that into account so it would probably be a good good point to try to", "tokens": [50672, 264, 846, 16381, 307, 406, 2232, 1940, 300, 666, 2696, 370, 309, 576, 1391, 312, 257, 665, 665, 935, 281, 853, 281, 51072], "temperature": 0.0, "avg_logprob": -0.16680932449082198, "compression_ratio": 1.6217948717948718, "no_speech_prob": 0.010681040585041046}, {"id": 248, "seek": 179756, "start": 1812.52, "end": 1814.36, "text": " reproduce that that behavior", "tokens": [51112, 29501, 300, 300, 5223, 51204], "temperature": 0.0, "avg_logprob": -0.16680932449082198, "compression_ratio": 1.6217948717948718, "no_speech_prob": 0.010681040585041046}, {"id": 249, "seek": 179756, "start": 1816.76, "end": 1818.36, "text": " thank you very much so maybe", "tokens": [51324, 1309, 291, 588, 709, 370, 1310, 51404], "temperature": 0.0, "avg_logprob": -0.16680932449082198, "compression_ratio": 1.6217948717948718, "no_speech_prob": 0.010681040585041046}], "language": "en"}