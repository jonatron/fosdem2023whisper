{"text": " People here are organizing the deaf room, particularly Manolis who has done a lot of the work before we organized this room. Anyway, I'm going to talk a little bit about Guy and Zig. So I prepared two talks. One talk you can download online. There was kind of an overview of why I made these choices and why we're doing this. But I think it's better just to hit the command line or a shell. Right, so many people will recognize this Emacs. The letters fall off on the side, it shouldn't matter too much. And then I'm going to run in a shell. So I don't know if everyone is aware, but the gig shell is a proper container. So only the tools are pulled in that we define. And this is done in the gig.scheme file. In the gig.scheme file we define the dependency we want. Right, so Guy is there and Zig is there. So in the file we find Zig version. In the container, right, and then Guy minus V is also there. But Vi, for example, is not. And if this was properly running on Debian, it would be visible. So what I'm going to do is I'm going to run Zig to build my library. It's a dynamic library. And then I use package config to pick up the Guile compile switches. And I'm going to compile it against a little C file. Uh-oh. Yeah. Right, yeah, I missed the second line, I see, yeah. Right. So Guile is almost designed for linking against C. Right, so I wrote a little C program to show you that. And it can, it calls Guile functions. So scheme from int is a Guile function. So it switches, it turns test into a Guile integer, essentially. And then a boolean, and then I call this function here in C. Right, my increment in function. And you can see that it uses Guile objects to pass into the function. And there's also a Guile object returned. Right. So it's very minimalistic code. And I just need to get a compile it. Now it did compile, but now it doesn't find the library. So I need to add the library path. So I'm just doing this raw so you can see what is happening. You know, I mean, if you had a proper build script, you can account for all this. But you can see it says hello world from 3 to 4. Right, so that's what the C function does. Now I want to do the same thing in Zig. Right, so I created, actually what I want to do is I want to call Zig from, you know, the same library that I'm using. I want to call this from Guile. Right. So let's try that. So I'm in Guile now and I added the local search path for the library. Right. Yeah, so here we load the shared library libmy.so. Right, it loads into Guile. And I want to try something like, and it says it doesn't find the procedure because I haven't defined it. Yeah, so that doesn't work very well. Let me see where we are. Yeah, so call it ping Zig with an underscore. All right, that's not very Guile-like, is it? Yeah, so that's some conventions and I already ignored it. Yeah, so Guile has a wide range of C functions in the library. And these can be called. You know, so if you look for the C function, which one did we use before? Yeah, or a scheme from int you can see here, right? Scheme from int. And so in the Guile reference manual, you see in the reference manual almost on every page you see the sort of the C functions that you could also call as list functions. You know, and the scheme from int should be there. It's a long list, but that's the idea. So when you actually use the Guile manual, you will see the C interface to the CABI. Now the interesting thing about Zig is that it faithfully, you know, uses the CABI. So, you know, anything you can, you define in Zig, you can essentially access from Guile. So let's look at my Zig file and I say ping. Yeah, so this is the equivalent C function, sorry, ZigVinc function that we had defined in C earlier. Yeah, you have a ping Zig. It takes a scheme object as an input and it returns a scheme object, right? And it just pings it back. So how can I see the scheme object as it is defined now? And as a matter of fact, Zig can export, sorry, can import C include files. Yeah, it's actually one command. Yeah, so you say Zig translate C, right, then the path to the include file, then include file itself, and it turns into a proper Zig file. And this Zig file you can just import and it will work. Yeah, so all the functions that are defined by Guile that are exported that you could use from C in principle are now available in Zig, including the objects. Yes, if you look at this Zig file, it doesn't look very nice, right? But it's all there and it actually just worked in one go. I had to delete one line in it. All right, so yeah, the other thing of course is that I'm using ping Zig1 right now. Okay, so let's try hello. And it pings back hello, right? I mean that's what we see in the Zig function here. And Guile is not a strictly typed language. Yeah, I mean it's typed, but it's not in the sense that here we have a variable that you can, you know, in the one case I'm using an integer, in the next case I'm using a string. Yeah, and this makes for, apart from the fact that I'm using a rappel where I'm actually talking to the, you know, to the Zig backend, it also gives me a lot of flexibility in what, you know, how I define these functions and these variables that get passed. Okay, so let's do something a little bit more complex. And, you know, this exploration that I had with Zig and C and Guile, it's also all online, you can just read it. It's in a GitLab repository. Yeah, so if you define a function in Zig, you know, just naively like ping Zig here, it won't be immediately visible to Guile. So you need to create a mapping for that. Yeah, and this is in the Guile documentation, it's exactly the same thing in C. See if I can find it, yeah, here it is. So when you initialize the module, which means when you load the shared library, right, it will call this function, and you will define a sub, sorry, it will, yeah, define the function call here. So in Zig here is ping Zig, right, ping Zig and it has one argument. You need to do that to make the symbol visible to the Guile interpreter. That's basically what you have to do. There's nothing more to it, which is kind of boring, you know. So yeah, I'm also opinion that, you know, that we need multiple programming languages. Yeah, there's the, when you talk about Zig, there's often, or even C++, you know, there's often the elephant in the room. I'm not going to name it. But this is a language that tries to be everything, you know, and you end up with a very complex language. Also, the compiler is dog slow. I don't know if anyone is using the unnamed language. And then it has, you know, it has a borough checker, which acts like, you know, a nagging wife, you know, it keeps talking to you. And I tried it, you know, and I tried to love it because it's a functional language, you know, it's a functional programming language. But it kept talking to me and it kept going me out of my flow, you know, I just couldn't keep moving. So I think, you know, it's probably wiser to have a language like C, which is, you know, you have to realize that most of the code in the world today is written in C++, C++ still. If you want a type of performance, you will end up with a strictly typed language, which is, you know, imperative to some degree because CPUs are imperative, right? We don't have, at this point, we don't really have functional programming CPUs. So to optimize that stuff, you end up, you know, with a type of language that has to cater for that. But nobody loves programming in C++, you know, and in C programming is also hard, you know, to shoot yourself in the food language. I call it. So it's nice if you can have a language that has some somewhat stronger guarantees, but it's still blazingly fast and still, you know, kind of imperative. And then have something like Gile, which actually allows you to be, you know, productive, right? And do functional programming when you want to. So you end up with this type of mixture. Have we got five minutes? Five minutes. Five minutes to two questions. Okay, so one thing, one additional thing I would like to show you. Sorry, that's mine. Yeah, so you can, I mean, using the Gile libraries, you can essentially build up lists, you know, which is the fundamental for many list-like programming efforts. But, you know, when you talk about performance, you'd like to deal with arrays of data. So it continues blocks of memory where you have integers in a row or doubles in a row, and you're able to address these integers and doubles. Of course, you can do that from Gile, but, you know, if you want to do, if you write high-performance code like we do, you want to be able to, you know, use it as a vector in ZIG. Yeah, so you have an index, the base pointer to the vector, and then you have an index, and you should be able to fetch out the data object that you want. So just write a little example here. So this is the list example. Let me see if I can, the vector array. Yeah, so you have, I wrote a little, let me move that down. A little ZIG function, which has my increment in floating point 64 bits vector ZIG, you know, I'm very good at naming, apparently. You pass in a Gile vector, which is, again, a scheme object. It returns a scheme object, which is, again, a vector, right? And then it calls this Gile function, scheme f64, oh, that's where the naming came from. It came from Gile, yes, so I set X, you know, so I set, I'm set in the vector, I set at position one, right? So index one, I set the value 3.7. So this is kind of happening in Gile-ish C code, so it's calling essentially Gile C functions. Yeah, and I prove that it works, you can look it up. But here, here I'm using a proper index, I think, let me see, yeah. So you increment the f64 vector, right? This is the old version. Here I get a handle on the array. And then I get the data, so I get a vector here. If our data is a vector, yeah, of the elements of the vector array, right? And then I index the data points based on the vector, you know, of the floating points, and show 0, 1, and number 2. Yeah, and that's what it shows, so I'm not going to do that live, but that's the idea. Yeah, I'm done. Yeah, so it's in a nutshell, the code and the slides are online, so you can have a look, have a go. Any questions? Yes. I tried quite long actually, so I read five books. I probably took two months and wrote a thousand lines of code or so to decide it wasn't for me. But yeah, I hear quite a few stories like this, which are very similar. I think, you know, it's a language for masochists. A language for masochists. You have to be a brilliant person, right? Well, a brilliant masochist, let's put it that way. You have to be brilliant to keep that all in your head. Yeah, so see. Yeah, you know, I'm not complaining about it because people who program in Rust, they do better than in C++. So the compiler does help a lot, and I think it does lead to better code. I've given students, you know, work in Rust, and they do write better code because the compiler actually helps you. All right, but it also takes them a long time to get something done. So it depends on what your goals are, right? I mean, if you have to write, you know, perfect software to launch your rocket, you might, you know, want to do it that way. But if it's just like me, you know, in my job, we write mostly throw away code. It doesn't pay. Bioinformatics, so I'm in science. We have long-lived code, but it's usually by accident, right? So you write something, and people start using it, and then 10 years later, it becomes mainstream. It's actually happened to one of our projects, yeah. It's kind of, yeah. And then, you know, then it's too late to do better. So at one point, you showed us how to convert the ZIG file to C, right? But it wasn't really necessary in order to, or it wasn't necessary in order to call the style stuff from within ZIG? No, I mean, it's, the guy that adheres to the C ABI, right? So it has a C calling interface. You can use the scheme object, yeah, so that came from there. But actually, the scheme object is really simple when you look at it. So it could be that, you know, just, you can just roll your own. Yeah? So you create the language for scratch. So why did you decide to use the semicolons and curly braces in it? Well, I didn't design ZIG. I should have been clearer. Nor have I any input on guile, unlike other people here. But, yeah, you know, I dabble in languages. You know, I use, people often ask me, what is the language of the year? I think at that point it was Scala. I'm embarrassed to say. But, no, I think, you know, ZIG does appeal to me. Yeah? The second question is, so if I'm running, if I want to make a formal program, and I do them in Fortran or Julia, why would they use it? So Fortran is, you know, it's a bit difficult, because the very different language is Fortran and Julia. But I think, you know, ZIG tries to be in the space of C. Yeah. It's a general purpose systems programming and uncompromising speed. And it is fast. Yes, the compiler itself compiles itself in 10 minutes about on a standard machine. But I think, for example, it doesn't have exception handling. Yeah, it uses a different approach, which is more like a maybe monad. You know, and even C++, typically you'll have exception handling, which, you know, every time you call a function, it has to carry state with it to be able to unroll the stack. And this causes overheads. That's one thing. Now, with C++, the other thing is that in the background, there's often a lot of memory allocation going on. Yeah, especially when, I mean, it's kind of unavoidable to use the SEL these days. That's best practice. And I find that in ZIG, because it's closer to the C philosophy, it's actually much faster. Yeah, so. Oh, hey. Are you planning to write like a tutorial in the guide manual for how to do this? Yeah, we should. Yeah, we should. I think the next speaker needs to go on. No? How much time do we have? Two minutes, one and a half. Yeah, you can. It's good to switch. Thank you. Thank you. Thank you. I'll switch on.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.0, "text": " People here are organizing the deaf room, particularly Manolis who has done a lot of", "tokens": [3432, 510, 366, 17608, 264, 15559, 1808, 11, 4098, 2458, 16466, 567, 575, 1096, 257, 688, 295], "temperature": 0.0, "avg_logprob": -0.35106647198016827, "compression_ratio": 1.3771428571428572, "no_speech_prob": 0.4121457040309906}, {"id": 1, "seek": 0, "start": 10.0, "end": 20.0, "text": " the work before we organized this room.", "tokens": [264, 589, 949, 321, 9983, 341, 1808, 13], "temperature": 0.0, "avg_logprob": -0.35106647198016827, "compression_ratio": 1.3771428571428572, "no_speech_prob": 0.4121457040309906}, {"id": 2, "seek": 0, "start": 20.0, "end": 23.0, "text": " Anyway, I'm going to talk a little bit about Guy and Zig.", "tokens": [5684, 11, 286, 478, 516, 281, 751, 257, 707, 857, 466, 14690, 293, 50004, 13], "temperature": 0.0, "avg_logprob": -0.35106647198016827, "compression_ratio": 1.3771428571428572, "no_speech_prob": 0.4121457040309906}, {"id": 3, "seek": 0, "start": 23.0, "end": 26.0, "text": " So I prepared two talks.", "tokens": [407, 286, 4927, 732, 6686, 13], "temperature": 0.0, "avg_logprob": -0.35106647198016827, "compression_ratio": 1.3771428571428572, "no_speech_prob": 0.4121457040309906}, {"id": 4, "seek": 0, "start": 26.0, "end": 29.0, "text": " One talk you can download online.", "tokens": [1485, 751, 291, 393, 5484, 2950, 13], "temperature": 0.0, "avg_logprob": -0.35106647198016827, "compression_ratio": 1.3771428571428572, "no_speech_prob": 0.4121457040309906}, {"id": 5, "seek": 2900, "start": 29.0, "end": 36.0, "text": " There was kind of an overview of why I made these choices and why we're doing this.", "tokens": [821, 390, 733, 295, 364, 12492, 295, 983, 286, 1027, 613, 7994, 293, 983, 321, 434, 884, 341, 13], "temperature": 0.0, "avg_logprob": -0.15897891890834753, "compression_ratio": 1.4184782608695652, "no_speech_prob": 0.000570041942410171}, {"id": 6, "seek": 2900, "start": 36.0, "end": 45.0, "text": " But I think it's better just to hit the command line or a shell.", "tokens": [583, 286, 519, 309, 311, 1101, 445, 281, 2045, 264, 5622, 1622, 420, 257, 8720, 13], "temperature": 0.0, "avg_logprob": -0.15897891890834753, "compression_ratio": 1.4184782608695652, "no_speech_prob": 0.000570041942410171}, {"id": 7, "seek": 2900, "start": 45.0, "end": 48.0, "text": " Right, so many people will recognize this Emacs.", "tokens": [1779, 11, 370, 867, 561, 486, 5521, 341, 3968, 44937, 13], "temperature": 0.0, "avg_logprob": -0.15897891890834753, "compression_ratio": 1.4184782608695652, "no_speech_prob": 0.000570041942410171}, {"id": 8, "seek": 2900, "start": 48.0, "end": 53.0, "text": " The letters fall off on the side, it shouldn't matter too much.", "tokens": [440, 7825, 2100, 766, 322, 264, 1252, 11, 309, 4659, 380, 1871, 886, 709, 13], "temperature": 0.0, "avg_logprob": -0.15897891890834753, "compression_ratio": 1.4184782608695652, "no_speech_prob": 0.000570041942410171}, {"id": 9, "seek": 5300, "start": 53.0, "end": 65.0, "text": " And then I'm going to run in a shell.", "tokens": [400, 550, 286, 478, 516, 281, 1190, 294, 257, 8720, 13], "temperature": 0.0, "avg_logprob": -0.13493621592618982, "compression_ratio": 1.3225806451612903, "no_speech_prob": 0.0001771804818417877}, {"id": 10, "seek": 5300, "start": 65.0, "end": 69.0, "text": " So I don't know if everyone is aware, but the gig shell is a proper container.", "tokens": [407, 286, 500, 380, 458, 498, 1518, 307, 3650, 11, 457, 264, 8741, 8720, 307, 257, 2296, 10129, 13], "temperature": 0.0, "avg_logprob": -0.13493621592618982, "compression_ratio": 1.3225806451612903, "no_speech_prob": 0.0001771804818417877}, {"id": 11, "seek": 5300, "start": 69.0, "end": 75.0, "text": " So only the tools are pulled in that we define.", "tokens": [407, 787, 264, 3873, 366, 7373, 294, 300, 321, 6964, 13], "temperature": 0.0, "avg_logprob": -0.13493621592618982, "compression_ratio": 1.3225806451612903, "no_speech_prob": 0.0001771804818417877}, {"id": 12, "seek": 7500, "start": 75.0, "end": 90.0, "text": " And this is done in the gig.scheme file.", "tokens": [400, 341, 307, 1096, 294, 264, 8741, 13, 6145, 5729, 3991, 13], "temperature": 0.0, "avg_logprob": -0.17981958389282227, "compression_ratio": 1.4621848739495797, "no_speech_prob": 0.00020449508156161755}, {"id": 13, "seek": 7500, "start": 90.0, "end": 94.0, "text": " In the gig.scheme file we define the dependency we want.", "tokens": [682, 264, 8741, 13, 6145, 5729, 3991, 321, 6964, 264, 33621, 321, 528, 13], "temperature": 0.0, "avg_logprob": -0.17981958389282227, "compression_ratio": 1.4621848739495797, "no_speech_prob": 0.00020449508156161755}, {"id": 14, "seek": 7500, "start": 94.0, "end": 97.0, "text": " Right, so Guy is there and Zig is there.", "tokens": [1779, 11, 370, 14690, 307, 456, 293, 50004, 307, 456, 13], "temperature": 0.0, "avg_logprob": -0.17981958389282227, "compression_ratio": 1.4621848739495797, "no_speech_prob": 0.00020449508156161755}, {"id": 15, "seek": 7500, "start": 97.0, "end": 104.0, "text": " So in the file we find Zig version.", "tokens": [407, 294, 264, 3991, 321, 915, 50004, 3037, 13], "temperature": 0.0, "avg_logprob": -0.17981958389282227, "compression_ratio": 1.4621848739495797, "no_speech_prob": 0.00020449508156161755}, {"id": 16, "seek": 10400, "start": 104.0, "end": 109.0, "text": " In the container, right, and then Guy minus V is also there.", "tokens": [682, 264, 10129, 11, 558, 11, 293, 550, 14690, 3175, 691, 307, 611, 456, 13], "temperature": 0.0, "avg_logprob": -0.1622603316056101, "compression_ratio": 1.4034090909090908, "no_speech_prob": 4.859926411882043e-05}, {"id": 17, "seek": 10400, "start": 109.0, "end": 111.0, "text": " But Vi, for example, is not.", "tokens": [583, 6626, 11, 337, 1365, 11, 307, 406, 13], "temperature": 0.0, "avg_logprob": -0.1622603316056101, "compression_ratio": 1.4034090909090908, "no_speech_prob": 4.859926411882043e-05}, {"id": 18, "seek": 10400, "start": 111.0, "end": 124.0, "text": " And if this was properly running on Debian, it would be visible.", "tokens": [400, 498, 341, 390, 6108, 2614, 322, 1346, 20196, 11, 309, 576, 312, 8974, 13], "temperature": 0.0, "avg_logprob": -0.1622603316056101, "compression_ratio": 1.4034090909090908, "no_speech_prob": 4.859926411882043e-05}, {"id": 19, "seek": 10400, "start": 124.0, "end": 129.0, "text": " So what I'm going to do is I'm going to run Zig to build my library.", "tokens": [407, 437, 286, 478, 516, 281, 360, 307, 286, 478, 516, 281, 1190, 50004, 281, 1322, 452, 6405, 13], "temperature": 0.0, "avg_logprob": -0.1622603316056101, "compression_ratio": 1.4034090909090908, "no_speech_prob": 4.859926411882043e-05}, {"id": 20, "seek": 10400, "start": 129.0, "end": 133.0, "text": " It's a dynamic library.", "tokens": [467, 311, 257, 8546, 6405, 13], "temperature": 0.0, "avg_logprob": -0.1622603316056101, "compression_ratio": 1.4034090909090908, "no_speech_prob": 4.859926411882043e-05}, {"id": 21, "seek": 13300, "start": 133.0, "end": 143.0, "text": " And then I use package config to pick up the Guile compile switches.", "tokens": [400, 550, 286, 764, 7372, 6662, 281, 1888, 493, 264, 2694, 794, 31413, 19458, 13], "temperature": 0.0, "avg_logprob": -0.23416032791137695, "compression_ratio": 1.2075471698113207, "no_speech_prob": 0.00036017392994835973}, {"id": 22, "seek": 13300, "start": 143.0, "end": 151.0, "text": " And I'm going to compile it against a little C file.", "tokens": [400, 286, 478, 516, 281, 31413, 309, 1970, 257, 707, 383, 3991, 13], "temperature": 0.0, "avg_logprob": -0.23416032791137695, "compression_ratio": 1.2075471698113207, "no_speech_prob": 0.00036017392994835973}, {"id": 23, "seek": 13300, "start": 151.0, "end": 155.0, "text": " Uh-oh.", "tokens": [4019, 12, 1445, 13], "temperature": 0.0, "avg_logprob": -0.23416032791137695, "compression_ratio": 1.2075471698113207, "no_speech_prob": 0.00036017392994835973}, {"id": 24, "seek": 15500, "start": 155.0, "end": 165.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.19314013719558715, "compression_ratio": 1.1855670103092784, "no_speech_prob": 0.00020464191038627177}, {"id": 25, "seek": 15500, "start": 165.0, "end": 172.0, "text": " Right, yeah, I missed the second line, I see, yeah.", "tokens": [1779, 11, 1338, 11, 286, 6721, 264, 1150, 1622, 11, 286, 536, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.19314013719558715, "compression_ratio": 1.1855670103092784, "no_speech_prob": 0.00020464191038627177}, {"id": 26, "seek": 15500, "start": 172.0, "end": 177.0, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.19314013719558715, "compression_ratio": 1.1855670103092784, "no_speech_prob": 0.00020464191038627177}, {"id": 27, "seek": 15500, "start": 177.0, "end": 183.0, "text": " So Guile is almost designed for linking against C.", "tokens": [407, 2694, 794, 307, 1920, 4761, 337, 25775, 1970, 383, 13], "temperature": 0.0, "avg_logprob": -0.19314013719558715, "compression_ratio": 1.1855670103092784, "no_speech_prob": 0.00020464191038627177}, {"id": 28, "seek": 18300, "start": 183.0, "end": 189.0, "text": " Right, so I wrote a little C program to show you that.", "tokens": [1779, 11, 370, 286, 4114, 257, 707, 383, 1461, 281, 855, 291, 300, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 29, "seek": 18300, "start": 189.0, "end": 193.0, "text": " And it can, it calls Guile functions.", "tokens": [400, 309, 393, 11, 309, 5498, 2694, 794, 6828, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 30, "seek": 18300, "start": 193.0, "end": 195.0, "text": " So scheme from int is a Guile function.", "tokens": [407, 12232, 490, 560, 307, 257, 2694, 794, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 31, "seek": 18300, "start": 195.0, "end": 201.0, "text": " So it switches, it turns test into a Guile integer, essentially.", "tokens": [407, 309, 19458, 11, 309, 4523, 1500, 666, 257, 2694, 794, 24922, 11, 4476, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 32, "seek": 18300, "start": 201.0, "end": 205.0, "text": " And then a boolean, and then I call this function here in C.", "tokens": [400, 550, 257, 748, 4812, 282, 11, 293, 550, 286, 818, 341, 2445, 510, 294, 383, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 33, "seek": 18300, "start": 205.0, "end": 207.0, "text": " Right, my increment in function.", "tokens": [1779, 11, 452, 26200, 294, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 34, "seek": 18300, "start": 207.0, "end": 211.0, "text": " And you can see that it uses Guile objects to pass into the function.", "tokens": [400, 291, 393, 536, 300, 309, 4960, 2694, 794, 6565, 281, 1320, 666, 264, 2445, 13], "temperature": 0.0, "avg_logprob": -0.13495128268287296, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.00011380041541997343}, {"id": 35, "seek": 21100, "start": 211.0, "end": 213.0, "text": " And there's also a Guile object returned.", "tokens": [400, 456, 311, 611, 257, 2694, 794, 2657, 8752, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 36, "seek": 21100, "start": 213.0, "end": 215.0, "text": " Right.", "tokens": [1779, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 37, "seek": 21100, "start": 215.0, "end": 217.0, "text": " So it's very minimalistic code.", "tokens": [407, 309, 311, 588, 13206, 3142, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 38, "seek": 21100, "start": 217.0, "end": 229.0, "text": " And I just need to get a compile it.", "tokens": [400, 286, 445, 643, 281, 483, 257, 31413, 309, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 39, "seek": 21100, "start": 229.0, "end": 234.0, "text": " Now it did compile, but now it doesn't find the library.", "tokens": [823, 309, 630, 31413, 11, 457, 586, 309, 1177, 380, 915, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 40, "seek": 21100, "start": 234.0, "end": 236.0, "text": " So I need to add the library path.", "tokens": [407, 286, 643, 281, 909, 264, 6405, 3100, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 41, "seek": 21100, "start": 236.0, "end": 239.0, "text": " So I'm just doing this raw so you can see what is happening.", "tokens": [407, 286, 478, 445, 884, 341, 8936, 370, 291, 393, 536, 437, 307, 2737, 13], "temperature": 0.0, "avg_logprob": -0.11550250507536389, "compression_ratio": 1.4917127071823204, "no_speech_prob": 4.530709338723682e-05}, {"id": 42, "seek": 23900, "start": 239.0, "end": 244.0, "text": " You know, I mean, if you had a proper build script, you can account for all this.", "tokens": [509, 458, 11, 286, 914, 11, 498, 291, 632, 257, 2296, 1322, 5755, 11, 291, 393, 2696, 337, 439, 341, 13], "temperature": 0.0, "avg_logprob": -0.1378949514710077, "compression_ratio": 1.5809523809523809, "no_speech_prob": 8.060733671300113e-05}, {"id": 43, "seek": 23900, "start": 244.0, "end": 247.0, "text": " But you can see it says hello world from 3 to 4.", "tokens": [583, 291, 393, 536, 309, 1619, 7751, 1002, 490, 805, 281, 1017, 13], "temperature": 0.0, "avg_logprob": -0.1378949514710077, "compression_ratio": 1.5809523809523809, "no_speech_prob": 8.060733671300113e-05}, {"id": 44, "seek": 23900, "start": 247.0, "end": 253.0, "text": " Right, so that's what the C function does.", "tokens": [1779, 11, 370, 300, 311, 437, 264, 383, 2445, 775, 13], "temperature": 0.0, "avg_logprob": -0.1378949514710077, "compression_ratio": 1.5809523809523809, "no_speech_prob": 8.060733671300113e-05}, {"id": 45, "seek": 23900, "start": 253.0, "end": 255.0, "text": " Now I want to do the same thing in Zig.", "tokens": [823, 286, 528, 281, 360, 264, 912, 551, 294, 50004, 13], "temperature": 0.0, "avg_logprob": -0.1378949514710077, "compression_ratio": 1.5809523809523809, "no_speech_prob": 8.060733671300113e-05}, {"id": 46, "seek": 23900, "start": 255.0, "end": 261.0, "text": " Right, so I created, actually what I want to do is I want to call Zig from,", "tokens": [1779, 11, 370, 286, 2942, 11, 767, 437, 286, 528, 281, 360, 307, 286, 528, 281, 818, 50004, 490, 11], "temperature": 0.0, "avg_logprob": -0.1378949514710077, "compression_ratio": 1.5809523809523809, "no_speech_prob": 8.060733671300113e-05}, {"id": 47, "seek": 23900, "start": 261.0, "end": 264.0, "text": " you know, the same library that I'm using.", "tokens": [291, 458, 11, 264, 912, 6405, 300, 286, 478, 1228, 13], "temperature": 0.0, "avg_logprob": -0.1378949514710077, "compression_ratio": 1.5809523809523809, "no_speech_prob": 8.060733671300113e-05}, {"id": 48, "seek": 26400, "start": 264.0, "end": 272.0, "text": " I want to call this from Guile. Right.", "tokens": [286, 528, 281, 818, 341, 490, 2694, 794, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.13958026038275825, "compression_ratio": 1.2616822429906542, "no_speech_prob": 3.633923188317567e-05}, {"id": 49, "seek": 26400, "start": 272.0, "end": 278.0, "text": " So let's try that.", "tokens": [407, 718, 311, 853, 300, 13], "temperature": 0.0, "avg_logprob": -0.13958026038275825, "compression_ratio": 1.2616822429906542, "no_speech_prob": 3.633923188317567e-05}, {"id": 50, "seek": 26400, "start": 278.0, "end": 291.0, "text": " So I'm in Guile now and I added the local search path for the library. Right.", "tokens": [407, 286, 478, 294, 2694, 794, 586, 293, 286, 3869, 264, 2654, 3164, 3100, 337, 264, 6405, 13, 1779, 13], "temperature": 0.0, "avg_logprob": -0.13958026038275825, "compression_ratio": 1.2616822429906542, "no_speech_prob": 3.633923188317567e-05}, {"id": 51, "seek": 29100, "start": 291.0, "end": 296.0, "text": " Yeah, so here we load the shared library libmy.so.", "tokens": [865, 11, 370, 510, 321, 3677, 264, 5507, 6405, 22854, 2226, 13, 539, 13], "temperature": 0.0, "avg_logprob": -0.18924648621503046, "compression_ratio": 1.414012738853503, "no_speech_prob": 6.227094127098098e-05}, {"id": 52, "seek": 29100, "start": 296.0, "end": 299.0, "text": " Right, it loads into Guile.", "tokens": [1779, 11, 309, 12668, 666, 2694, 794, 13], "temperature": 0.0, "avg_logprob": -0.18924648621503046, "compression_ratio": 1.414012738853503, "no_speech_prob": 6.227094127098098e-05}, {"id": 53, "seek": 29100, "start": 299.0, "end": 307.0, "text": " And I want to try something like,", "tokens": [400, 286, 528, 281, 853, 746, 411, 11], "temperature": 0.0, "avg_logprob": -0.18924648621503046, "compression_ratio": 1.414012738853503, "no_speech_prob": 6.227094127098098e-05}, {"id": 54, "seek": 29100, "start": 307.0, "end": 310.0, "text": " and it says it doesn't find the procedure because I haven't defined it.", "tokens": [293, 309, 1619, 309, 1177, 380, 915, 264, 10747, 570, 286, 2378, 380, 7642, 309, 13], "temperature": 0.0, "avg_logprob": -0.18924648621503046, "compression_ratio": 1.414012738853503, "no_speech_prob": 6.227094127098098e-05}, {"id": 55, "seek": 29100, "start": 310.0, "end": 318.0, "text": " Yeah, so that doesn't work very well.", "tokens": [865, 11, 370, 300, 1177, 380, 589, 588, 731, 13], "temperature": 0.0, "avg_logprob": -0.18924648621503046, "compression_ratio": 1.414012738853503, "no_speech_prob": 6.227094127098098e-05}, {"id": 56, "seek": 31800, "start": 318.0, "end": 347.0, "text": " Let me see where we are.", "tokens": [961, 385, 536, 689, 321, 366, 13], "temperature": 0.0, "avg_logprob": -0.1114888841455633, "compression_ratio": 0.8, "no_speech_prob": 0.00025688615278340876}, {"id": 57, "seek": 34700, "start": 347.0, "end": 352.0, "text": " Yeah, so call it ping Zig with an underscore.", "tokens": [865, 11, 370, 818, 309, 26151, 50004, 365, 364, 37556, 13], "temperature": 0.0, "avg_logprob": -0.21551562008792408, "compression_ratio": 1.4251497005988023, "no_speech_prob": 5.170169970369898e-05}, {"id": 58, "seek": 34700, "start": 352.0, "end": 356.0, "text": " All right, that's not very Guile-like, is it?", "tokens": [1057, 558, 11, 300, 311, 406, 588, 2694, 794, 12, 4092, 11, 307, 309, 30], "temperature": 0.0, "avg_logprob": -0.21551562008792408, "compression_ratio": 1.4251497005988023, "no_speech_prob": 5.170169970369898e-05}, {"id": 59, "seek": 34700, "start": 356.0, "end": 362.0, "text": " Yeah, so that's some conventions and I already ignored it.", "tokens": [865, 11, 370, 300, 311, 512, 33520, 293, 286, 1217, 19735, 309, 13], "temperature": 0.0, "avg_logprob": -0.21551562008792408, "compression_ratio": 1.4251497005988023, "no_speech_prob": 5.170169970369898e-05}, {"id": 60, "seek": 34700, "start": 362.0, "end": 368.0, "text": " Yeah, so Guile has a wide range of C functions in the library.", "tokens": [865, 11, 370, 2694, 794, 575, 257, 4874, 3613, 295, 383, 6828, 294, 264, 6405, 13], "temperature": 0.0, "avg_logprob": -0.21551562008792408, "compression_ratio": 1.4251497005988023, "no_speech_prob": 5.170169970369898e-05}, {"id": 61, "seek": 34700, "start": 368.0, "end": 370.0, "text": " And these can be called.", "tokens": [400, 613, 393, 312, 1219, 13], "temperature": 0.0, "avg_logprob": -0.21551562008792408, "compression_ratio": 1.4251497005988023, "no_speech_prob": 5.170169970369898e-05}, {"id": 62, "seek": 37000, "start": 370.0, "end": 381.0, "text": " You know, so if you look for the C function, which one did we use before?", "tokens": [509, 458, 11, 370, 498, 291, 574, 337, 264, 383, 2445, 11, 597, 472, 630, 321, 764, 949, 30], "temperature": 0.0, "avg_logprob": -0.21612900954026443, "compression_ratio": 1.2135922330097086, "no_speech_prob": 0.00020164076704531908}, {"id": 63, "seek": 37000, "start": 381.0, "end": 387.0, "text": " Yeah, or a scheme from int you can see here, right?", "tokens": [865, 11, 420, 257, 12232, 490, 560, 291, 393, 536, 510, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21612900954026443, "compression_ratio": 1.2135922330097086, "no_speech_prob": 0.00020164076704531908}, {"id": 64, "seek": 38700, "start": 387.0, "end": 402.0, "text": " Scheme from int. And so in the Guile reference manual,", "tokens": [2065, 5729, 490, 560, 13, 400, 370, 294, 264, 2694, 794, 6408, 9688, 11], "temperature": 0.0, "avg_logprob": -0.21854877471923828, "compression_ratio": 1.5973154362416107, "no_speech_prob": 4.1938284994103014e-05}, {"id": 65, "seek": 38700, "start": 402.0, "end": 410.0, "text": " you see in the reference manual almost on every page you see the sort of the C functions that you could also call as list functions.", "tokens": [291, 536, 294, 264, 6408, 9688, 1920, 322, 633, 3028, 291, 536, 264, 1333, 295, 264, 383, 6828, 300, 291, 727, 611, 818, 382, 1329, 6828, 13], "temperature": 0.0, "avg_logprob": -0.21854877471923828, "compression_ratio": 1.5973154362416107, "no_speech_prob": 4.1938284994103014e-05}, {"id": 66, "seek": 38700, "start": 410.0, "end": 413.0, "text": " You know, and the scheme from int should be there.", "tokens": [509, 458, 11, 293, 264, 12232, 490, 560, 820, 312, 456, 13], "temperature": 0.0, "avg_logprob": -0.21854877471923828, "compression_ratio": 1.5973154362416107, "no_speech_prob": 4.1938284994103014e-05}, {"id": 67, "seek": 41300, "start": 413.0, "end": 417.0, "text": " It's a long list, but that's the idea. So when you actually use the Guile manual,", "tokens": [467, 311, 257, 938, 1329, 11, 457, 300, 311, 264, 1558, 13, 407, 562, 291, 767, 764, 264, 2694, 794, 9688, 11], "temperature": 0.0, "avg_logprob": -0.1818936556235127, "compression_ratio": 1.6054054054054054, "no_speech_prob": 5.199131919653155e-05}, {"id": 68, "seek": 41300, "start": 417.0, "end": 424.0, "text": " you will see the C interface to the CABI.", "tokens": [291, 486, 536, 264, 383, 9226, 281, 264, 383, 13868, 40, 13], "temperature": 0.0, "avg_logprob": -0.1818936556235127, "compression_ratio": 1.6054054054054054, "no_speech_prob": 5.199131919653155e-05}, {"id": 69, "seek": 41300, "start": 424.0, "end": 430.0, "text": " Now the interesting thing about Zig is that it faithfully, you know, uses the CABI.", "tokens": [823, 264, 1880, 551, 466, 50004, 307, 300, 309, 4522, 2277, 11, 291, 458, 11, 4960, 264, 383, 13868, 40, 13], "temperature": 0.0, "avg_logprob": -0.1818936556235127, "compression_ratio": 1.6054054054054054, "no_speech_prob": 5.199131919653155e-05}, {"id": 70, "seek": 41300, "start": 430.0, "end": 439.0, "text": " So, you know, anything you can, you define in Zig, you can essentially access from Guile.", "tokens": [407, 11, 291, 458, 11, 1340, 291, 393, 11, 291, 6964, 294, 50004, 11, 291, 393, 4476, 2105, 490, 2694, 794, 13], "temperature": 0.0, "avg_logprob": -0.1818936556235127, "compression_ratio": 1.6054054054054054, "no_speech_prob": 5.199131919653155e-05}, {"id": 71, "seek": 43900, "start": 439.0, "end": 446.0, "text": " So let's look at my Zig file and I say ping.", "tokens": [407, 718, 311, 574, 412, 452, 50004, 3991, 293, 286, 584, 26151, 13], "temperature": 0.0, "avg_logprob": -0.2071139613787333, "compression_ratio": 1.5857142857142856, "no_speech_prob": 2.5797226044232957e-05}, {"id": 72, "seek": 43900, "start": 446.0, "end": 453.0, "text": " Yeah, so this is the equivalent C function, sorry, ZigVinc function that we had defined in C earlier.", "tokens": [865, 11, 370, 341, 307, 264, 10344, 383, 2445, 11, 2597, 11, 50004, 53, 4647, 2445, 300, 321, 632, 7642, 294, 383, 3071, 13], "temperature": 0.0, "avg_logprob": -0.2071139613787333, "compression_ratio": 1.5857142857142856, "no_speech_prob": 2.5797226044232957e-05}, {"id": 73, "seek": 43900, "start": 453.0, "end": 459.0, "text": " Yeah, you have a ping Zig. It takes a scheme object as an input and it returns a scheme object, right?", "tokens": [865, 11, 291, 362, 257, 26151, 50004, 13, 467, 2516, 257, 12232, 2657, 382, 364, 4846, 293, 309, 11247, 257, 12232, 2657, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.2071139613787333, "compression_ratio": 1.5857142857142856, "no_speech_prob": 2.5797226044232957e-05}, {"id": 74, "seek": 43900, "start": 459.0, "end": 463.0, "text": " And it just pings it back.", "tokens": [400, 309, 445, 280, 1109, 309, 646, 13], "temperature": 0.0, "avg_logprob": -0.2071139613787333, "compression_ratio": 1.5857142857142856, "no_speech_prob": 2.5797226044232957e-05}, {"id": 75, "seek": 43900, "start": 463.0, "end": 467.0, "text": " So how can I see the scheme object as it is defined now?", "tokens": [407, 577, 393, 286, 536, 264, 12232, 2657, 382, 309, 307, 7642, 586, 30], "temperature": 0.0, "avg_logprob": -0.2071139613787333, "compression_ratio": 1.5857142857142856, "no_speech_prob": 2.5797226044232957e-05}, {"id": 76, "seek": 46700, "start": 467.0, "end": 479.0, "text": " And as a matter of fact, Zig can export, sorry, can import C include files.", "tokens": [400, 382, 257, 1871, 295, 1186, 11, 50004, 393, 10725, 11, 2597, 11, 393, 974, 383, 4090, 7098, 13], "temperature": 0.0, "avg_logprob": -0.16714835889411694, "compression_ratio": 1.1020408163265305, "no_speech_prob": 0.00010367480717832223}, {"id": 77, "seek": 46700, "start": 479.0, "end": 491.0, "text": " Yeah, it's actually one command.", "tokens": [865, 11, 309, 311, 767, 472, 5622, 13], "temperature": 0.0, "avg_logprob": -0.16714835889411694, "compression_ratio": 1.1020408163265305, "no_speech_prob": 0.00010367480717832223}, {"id": 78, "seek": 49100, "start": 491.0, "end": 498.0, "text": " Yeah, so you say Zig translate C, right, then the path to the include file, then include file itself,", "tokens": [865, 11, 370, 291, 584, 50004, 13799, 383, 11, 558, 11, 550, 264, 3100, 281, 264, 4090, 3991, 11, 550, 4090, 3991, 2564, 11], "temperature": 0.0, "avg_logprob": -0.13520890539819067, "compression_ratio": 1.6572769953051643, "no_speech_prob": 6.981169281061739e-05}, {"id": 79, "seek": 49100, "start": 498.0, "end": 502.0, "text": " and it turns into a proper Zig file.", "tokens": [293, 309, 4523, 666, 257, 2296, 50004, 3991, 13], "temperature": 0.0, "avg_logprob": -0.13520890539819067, "compression_ratio": 1.6572769953051643, "no_speech_prob": 6.981169281061739e-05}, {"id": 80, "seek": 49100, "start": 502.0, "end": 505.0, "text": " And this Zig file you can just import and it will work.", "tokens": [400, 341, 50004, 3991, 291, 393, 445, 974, 293, 309, 486, 589, 13], "temperature": 0.0, "avg_logprob": -0.13520890539819067, "compression_ratio": 1.6572769953051643, "no_speech_prob": 6.981169281061739e-05}, {"id": 81, "seek": 49100, "start": 505.0, "end": 513.0, "text": " Yeah, so all the functions that are defined by Guile that are exported that you could use from C in principle", "tokens": [865, 11, 370, 439, 264, 6828, 300, 366, 7642, 538, 2694, 794, 300, 366, 42055, 300, 291, 727, 764, 490, 383, 294, 8665], "temperature": 0.0, "avg_logprob": -0.13520890539819067, "compression_ratio": 1.6572769953051643, "no_speech_prob": 6.981169281061739e-05}, {"id": 82, "seek": 49100, "start": 513.0, "end": 518.0, "text": " are now available in Zig, including the objects.", "tokens": [366, 586, 2435, 294, 50004, 11, 3009, 264, 6565, 13], "temperature": 0.0, "avg_logprob": -0.13520890539819067, "compression_ratio": 1.6572769953051643, "no_speech_prob": 6.981169281061739e-05}, {"id": 83, "seek": 51800, "start": 518.0, "end": 524.0, "text": " Yes, if you look at this Zig file, it doesn't look very nice, right?", "tokens": [1079, 11, 498, 291, 574, 412, 341, 50004, 3991, 11, 309, 1177, 380, 574, 588, 1481, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1388994057973226, "compression_ratio": 1.469945355191257, "no_speech_prob": 6.913079414516687e-05}, {"id": 84, "seek": 51800, "start": 524.0, "end": 527.0, "text": " But it's all there and it actually just worked in one go.", "tokens": [583, 309, 311, 439, 456, 293, 309, 767, 445, 2732, 294, 472, 352, 13], "temperature": 0.0, "avg_logprob": -0.1388994057973226, "compression_ratio": 1.469945355191257, "no_speech_prob": 6.913079414516687e-05}, {"id": 85, "seek": 51800, "start": 527.0, "end": 534.0, "text": " I had to delete one line in it.", "tokens": [286, 632, 281, 12097, 472, 1622, 294, 309, 13], "temperature": 0.0, "avg_logprob": -0.1388994057973226, "compression_ratio": 1.469945355191257, "no_speech_prob": 6.913079414516687e-05}, {"id": 86, "seek": 51800, "start": 534.0, "end": 540.0, "text": " All right, so yeah, the other thing of course is that I'm using ping Zig1 right now.", "tokens": [1057, 558, 11, 370, 1338, 11, 264, 661, 551, 295, 1164, 307, 300, 286, 478, 1228, 26151, 50004, 16, 558, 586, 13], "temperature": 0.0, "avg_logprob": -0.1388994057973226, "compression_ratio": 1.469945355191257, "no_speech_prob": 6.913079414516687e-05}, {"id": 87, "seek": 51800, "start": 540.0, "end": 547.0, "text": " Okay, so let's try hello.", "tokens": [1033, 11, 370, 718, 311, 853, 7751, 13], "temperature": 0.0, "avg_logprob": -0.1388994057973226, "compression_ratio": 1.469945355191257, "no_speech_prob": 6.913079414516687e-05}, {"id": 88, "seek": 54700, "start": 547.0, "end": 549.0, "text": " And it pings back hello, right?", "tokens": [400, 309, 280, 1109, 646, 7751, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1352478265762329, "compression_ratio": 1.7569721115537849, "no_speech_prob": 6.912659591762349e-05}, {"id": 89, "seek": 54700, "start": 549.0, "end": 552.0, "text": " I mean that's what we see in the Zig function here.", "tokens": [286, 914, 300, 311, 437, 321, 536, 294, 264, 50004, 2445, 510, 13], "temperature": 0.0, "avg_logprob": -0.1352478265762329, "compression_ratio": 1.7569721115537849, "no_speech_prob": 6.912659591762349e-05}, {"id": 90, "seek": 54700, "start": 552.0, "end": 557.0, "text": " And Guile is not a strictly typed language.", "tokens": [400, 2694, 794, 307, 406, 257, 20792, 33941, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1352478265762329, "compression_ratio": 1.7569721115537849, "no_speech_prob": 6.912659591762349e-05}, {"id": 91, "seek": 54700, "start": 557.0, "end": 564.0, "text": " Yeah, I mean it's typed, but it's not in the sense that here we have a variable that you can, you know,", "tokens": [865, 11, 286, 914, 309, 311, 33941, 11, 457, 309, 311, 406, 294, 264, 2020, 300, 510, 321, 362, 257, 7006, 300, 291, 393, 11, 291, 458, 11], "temperature": 0.0, "avg_logprob": -0.1352478265762329, "compression_ratio": 1.7569721115537849, "no_speech_prob": 6.912659591762349e-05}, {"id": 92, "seek": 54700, "start": 564.0, "end": 568.0, "text": " in the one case I'm using an integer, in the next case I'm using a string.", "tokens": [294, 264, 472, 1389, 286, 478, 1228, 364, 24922, 11, 294, 264, 958, 1389, 286, 478, 1228, 257, 6798, 13], "temperature": 0.0, "avg_logprob": -0.1352478265762329, "compression_ratio": 1.7569721115537849, "no_speech_prob": 6.912659591762349e-05}, {"id": 93, "seek": 54700, "start": 568.0, "end": 575.0, "text": " Yeah, and this makes for, apart from the fact that I'm using a rappel where I'm actually talking to the, you know, to the Zig backend,", "tokens": [865, 11, 293, 341, 1669, 337, 11, 4936, 490, 264, 1186, 300, 286, 478, 1228, 257, 8125, 338, 689, 286, 478, 767, 1417, 281, 264, 11, 291, 458, 11, 281, 264, 50004, 38087, 11], "temperature": 0.0, "avg_logprob": -0.1352478265762329, "compression_ratio": 1.7569721115537849, "no_speech_prob": 6.912659591762349e-05}, {"id": 94, "seek": 57500, "start": 575.0, "end": 585.0, "text": " it also gives me a lot of flexibility in what, you know, how I define these functions and these variables that get passed.", "tokens": [309, 611, 2709, 385, 257, 688, 295, 12635, 294, 437, 11, 291, 458, 11, 577, 286, 6964, 613, 6828, 293, 613, 9102, 300, 483, 4678, 13], "temperature": 0.0, "avg_logprob": -0.12575560675726996, "compression_ratio": 1.3014705882352942, "no_speech_prob": 1.7476806533522904e-05}, {"id": 95, "seek": 57500, "start": 585.0, "end": 597.0, "text": " Okay, so let's do something a little bit more complex.", "tokens": [1033, 11, 370, 718, 311, 360, 746, 257, 707, 857, 544, 3997, 13], "temperature": 0.0, "avg_logprob": -0.12575560675726996, "compression_ratio": 1.3014705882352942, "no_speech_prob": 1.7476806533522904e-05}, {"id": 96, "seek": 59700, "start": 597.0, "end": 605.0, "text": " And, you know, this exploration that I had with Zig and C and Guile, it's also all online, you can just read it.", "tokens": [400, 11, 291, 458, 11, 341, 16197, 300, 286, 632, 365, 50004, 293, 383, 293, 2694, 794, 11, 309, 311, 611, 439, 2950, 11, 291, 393, 445, 1401, 309, 13], "temperature": 0.0, "avg_logprob": -0.13990618632389948, "compression_ratio": 1.4486486486486487, "no_speech_prob": 3.117126107099466e-05}, {"id": 97, "seek": 59700, "start": 605.0, "end": 613.0, "text": " It's in a GitLab repository.", "tokens": [467, 311, 294, 257, 16939, 37880, 25841, 13], "temperature": 0.0, "avg_logprob": -0.13990618632389948, "compression_ratio": 1.4486486486486487, "no_speech_prob": 3.117126107099466e-05}, {"id": 98, "seek": 59700, "start": 613.0, "end": 624.0, "text": " Yeah, so if you define a function in Zig, you know, just naively like ping Zig here, it won't be immediately visible to Guile.", "tokens": [865, 11, 370, 498, 291, 6964, 257, 2445, 294, 50004, 11, 291, 458, 11, 445, 1667, 3413, 411, 26151, 50004, 510, 11, 309, 1582, 380, 312, 4258, 8974, 281, 2694, 794, 13], "temperature": 0.0, "avg_logprob": -0.13990618632389948, "compression_ratio": 1.4486486486486487, "no_speech_prob": 3.117126107099466e-05}, {"id": 99, "seek": 62400, "start": 624.0, "end": 627.0, "text": " So you need to create a mapping for that.", "tokens": [407, 291, 643, 281, 1884, 257, 18350, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.1826383113861084, "compression_ratio": 1.717741935483871, "no_speech_prob": 6.486880738520995e-05}, {"id": 100, "seek": 62400, "start": 627.0, "end": 631.0, "text": " Yeah, and this is in the Guile documentation, it's exactly the same thing in C.", "tokens": [865, 11, 293, 341, 307, 294, 264, 2694, 794, 14333, 11, 309, 311, 2293, 264, 912, 551, 294, 383, 13], "temperature": 0.0, "avg_logprob": -0.1826383113861084, "compression_ratio": 1.717741935483871, "no_speech_prob": 6.486880738520995e-05}, {"id": 101, "seek": 62400, "start": 631.0, "end": 633.0, "text": " See if I can find it, yeah, here it is.", "tokens": [3008, 498, 286, 393, 915, 309, 11, 1338, 11, 510, 309, 307, 13], "temperature": 0.0, "avg_logprob": -0.1826383113861084, "compression_ratio": 1.717741935483871, "no_speech_prob": 6.486880738520995e-05}, {"id": 102, "seek": 62400, "start": 633.0, "end": 640.0, "text": " So when you initialize the module, which means when you load the shared library, right, it will call this function,", "tokens": [407, 562, 291, 5883, 1125, 264, 10088, 11, 597, 1355, 562, 291, 3677, 264, 5507, 6405, 11, 558, 11, 309, 486, 818, 341, 2445, 11], "temperature": 0.0, "avg_logprob": -0.1826383113861084, "compression_ratio": 1.717741935483871, "no_speech_prob": 6.486880738520995e-05}, {"id": 103, "seek": 62400, "start": 640.0, "end": 647.0, "text": " and you will define a sub, sorry, it will, yeah, define the function call here.", "tokens": [293, 291, 486, 6964, 257, 1422, 11, 2597, 11, 309, 486, 11, 1338, 11, 6964, 264, 2445, 818, 510, 13], "temperature": 0.0, "avg_logprob": -0.1826383113861084, "compression_ratio": 1.717741935483871, "no_speech_prob": 6.486880738520995e-05}, {"id": 104, "seek": 62400, "start": 647.0, "end": 652.0, "text": " So in Zig here is ping Zig, right, ping Zig and it has one argument.", "tokens": [407, 294, 50004, 510, 307, 26151, 50004, 11, 558, 11, 26151, 50004, 293, 309, 575, 472, 6770, 13], "temperature": 0.0, "avg_logprob": -0.1826383113861084, "compression_ratio": 1.717741935483871, "no_speech_prob": 6.486880738520995e-05}, {"id": 105, "seek": 65200, "start": 652.0, "end": 658.0, "text": " You need to do that to make the symbol visible to the Guile interpreter.", "tokens": [509, 643, 281, 360, 300, 281, 652, 264, 5986, 8974, 281, 264, 2694, 794, 34132, 13], "temperature": 0.0, "avg_logprob": -0.1387359619140625, "compression_ratio": 1.4772727272727273, "no_speech_prob": 6.227884296094999e-05}, {"id": 106, "seek": 65200, "start": 658.0, "end": 660.0, "text": " That's basically what you have to do.", "tokens": [663, 311, 1936, 437, 291, 362, 281, 360, 13], "temperature": 0.0, "avg_logprob": -0.1387359619140625, "compression_ratio": 1.4772727272727273, "no_speech_prob": 6.227884296094999e-05}, {"id": 107, "seek": 65200, "start": 660.0, "end": 670.0, "text": " There's nothing more to it, which is kind of boring, you know.", "tokens": [821, 311, 1825, 544, 281, 309, 11, 597, 307, 733, 295, 9989, 11, 291, 458, 13], "temperature": 0.0, "avg_logprob": -0.1387359619140625, "compression_ratio": 1.4772727272727273, "no_speech_prob": 6.227884296094999e-05}, {"id": 108, "seek": 65200, "start": 670.0, "end": 676.0, "text": " So yeah, I'm also opinion that, you know, that we need multiple programming languages.", "tokens": [407, 1338, 11, 286, 478, 611, 4800, 300, 11, 291, 458, 11, 300, 321, 643, 3866, 9410, 8650, 13], "temperature": 0.0, "avg_logprob": -0.1387359619140625, "compression_ratio": 1.4772727272727273, "no_speech_prob": 6.227884296094999e-05}, {"id": 109, "seek": 67600, "start": 676.0, "end": 682.0, "text": " Yeah, there's the, when you talk about Zig, there's often, or even C++, you know, there's often the elephant in the room.", "tokens": [865, 11, 456, 311, 264, 11, 562, 291, 751, 466, 50004, 11, 456, 311, 2049, 11, 420, 754, 383, 25472, 11, 291, 458, 11, 456, 311, 2049, 264, 19791, 294, 264, 1808, 13], "temperature": 0.0, "avg_logprob": -0.1366911031761948, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.00011809203715529293}, {"id": 110, "seek": 67600, "start": 682.0, "end": 684.0, "text": " I'm not going to name it.", "tokens": [286, 478, 406, 516, 281, 1315, 309, 13], "temperature": 0.0, "avg_logprob": -0.1366911031761948, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.00011809203715529293}, {"id": 111, "seek": 67600, "start": 684.0, "end": 691.0, "text": " But this is a language that tries to be everything, you know, and you end up with a very complex language.", "tokens": [583, 341, 307, 257, 2856, 300, 9898, 281, 312, 1203, 11, 291, 458, 11, 293, 291, 917, 493, 365, 257, 588, 3997, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1366911031761948, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.00011809203715529293}, {"id": 112, "seek": 67600, "start": 691.0, "end": 694.0, "text": " Also, the compiler is dog slow.", "tokens": [2743, 11, 264, 31958, 307, 3000, 2964, 13], "temperature": 0.0, "avg_logprob": -0.1366911031761948, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.00011809203715529293}, {"id": 113, "seek": 67600, "start": 694.0, "end": 700.0, "text": " I don't know if anyone is using the unnamed language.", "tokens": [286, 500, 380, 458, 498, 2878, 307, 1228, 264, 517, 33465, 2856, 13], "temperature": 0.0, "avg_logprob": -0.1366911031761948, "compression_ratio": 1.6585365853658536, "no_speech_prob": 0.00011809203715529293}, {"id": 114, "seek": 70000, "start": 700.0, "end": 708.0, "text": " And then it has, you know, it has a borough checker, which acts like, you know, a nagging wife, you know, it keeps talking to you.", "tokens": [400, 550, 309, 575, 11, 291, 458, 11, 309, 575, 257, 14828, 581, 1520, 260, 11, 597, 10672, 411, 11, 291, 458, 11, 257, 17096, 3249, 3836, 11, 291, 458, 11, 309, 5965, 1417, 281, 291, 13], "temperature": 0.0, "avg_logprob": -0.12651541358546206, "compression_ratio": 1.926056338028169, "no_speech_prob": 6.57282434985973e-05}, {"id": 115, "seek": 70000, "start": 708.0, "end": 713.0, "text": " And I tried it, you know, and I tried to love it because it's a functional language, you know, it's a functional programming language.", "tokens": [400, 286, 3031, 309, 11, 291, 458, 11, 293, 286, 3031, 281, 959, 309, 570, 309, 311, 257, 11745, 2856, 11, 291, 458, 11, 309, 311, 257, 11745, 9410, 2856, 13], "temperature": 0.0, "avg_logprob": -0.12651541358546206, "compression_ratio": 1.926056338028169, "no_speech_prob": 6.57282434985973e-05}, {"id": 116, "seek": 70000, "start": 713.0, "end": 719.0, "text": " But it kept talking to me and it kept going me out of my flow, you know, I just couldn't keep moving.", "tokens": [583, 309, 4305, 1417, 281, 385, 293, 309, 4305, 516, 385, 484, 295, 452, 3095, 11, 291, 458, 11, 286, 445, 2809, 380, 1066, 2684, 13], "temperature": 0.0, "avg_logprob": -0.12651541358546206, "compression_ratio": 1.926056338028169, "no_speech_prob": 6.57282434985973e-05}, {"id": 117, "seek": 70000, "start": 719.0, "end": 729.0, "text": " So I think, you know, it's probably wiser to have a language like C, which is, you know, you have to realize that most of the code in the world today is written in C++, C++ still.", "tokens": [407, 286, 519, 11, 291, 458, 11, 309, 311, 1391, 261, 6694, 281, 362, 257, 2856, 411, 383, 11, 597, 307, 11, 291, 458, 11, 291, 362, 281, 4325, 300, 881, 295, 264, 3089, 294, 264, 1002, 965, 307, 3720, 294, 383, 25472, 11, 383, 25472, 920, 13], "temperature": 0.0, "avg_logprob": -0.12651541358546206, "compression_ratio": 1.926056338028169, "no_speech_prob": 6.57282434985973e-05}, {"id": 118, "seek": 72900, "start": 729.0, "end": 741.0, "text": " If you want a type of performance, you will end up with a strictly typed language, which is, you know, imperative to some degree because CPUs are imperative, right?", "tokens": [759, 291, 528, 257, 2010, 295, 3389, 11, 291, 486, 917, 493, 365, 257, 20792, 33941, 2856, 11, 597, 307, 11, 291, 458, 11, 32490, 281, 512, 4314, 570, 13199, 82, 366, 32490, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.13126072883605958, "compression_ratio": 1.7865168539325842, "no_speech_prob": 9.289090667152777e-05}, {"id": 119, "seek": 72900, "start": 741.0, "end": 745.0, "text": " We don't have, at this point, we don't really have functional programming CPUs.", "tokens": [492, 500, 380, 362, 11, 412, 341, 935, 11, 321, 500, 380, 534, 362, 11745, 9410, 13199, 82, 13], "temperature": 0.0, "avg_logprob": -0.13126072883605958, "compression_ratio": 1.7865168539325842, "no_speech_prob": 9.289090667152777e-05}, {"id": 120, "seek": 72900, "start": 745.0, "end": 750.0, "text": " So to optimize that stuff, you end up, you know, with a type of language that has to cater for that.", "tokens": [407, 281, 19719, 300, 1507, 11, 291, 917, 493, 11, 291, 458, 11, 365, 257, 2010, 295, 2856, 300, 575, 281, 21557, 337, 300, 13], "temperature": 0.0, "avg_logprob": -0.13126072883605958, "compression_ratio": 1.7865168539325842, "no_speech_prob": 9.289090667152777e-05}, {"id": 121, "seek": 72900, "start": 750.0, "end": 758.0, "text": " But nobody loves programming in C++, you know, and in C programming is also hard, you know, to shoot yourself in the food language.", "tokens": [583, 5079, 6752, 9410, 294, 383, 25472, 11, 291, 458, 11, 293, 294, 383, 9410, 307, 611, 1152, 11, 291, 458, 11, 281, 3076, 1803, 294, 264, 1755, 2856, 13], "temperature": 0.0, "avg_logprob": -0.13126072883605958, "compression_ratio": 1.7865168539325842, "no_speech_prob": 9.289090667152777e-05}, {"id": 122, "seek": 75800, "start": 758.0, "end": 760.0, "text": " I call it.", "tokens": [286, 818, 309, 13], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 123, "seek": 75800, "start": 760.0, "end": 769.0, "text": " So it's nice if you can have a language that has some somewhat stronger guarantees, but it's still blazingly fast and still, you know, kind of imperative.", "tokens": [407, 309, 311, 1481, 498, 291, 393, 362, 257, 2856, 300, 575, 512, 8344, 7249, 32567, 11, 457, 309, 311, 920, 16379, 8781, 356, 2370, 293, 920, 11, 291, 458, 11, 733, 295, 32490, 13], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 124, "seek": 75800, "start": 769.0, "end": 775.0, "text": " And then have something like Gile, which actually allows you to be, you know, productive, right?", "tokens": [400, 550, 362, 746, 411, 460, 794, 11, 597, 767, 4045, 291, 281, 312, 11, 291, 458, 11, 13304, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 125, "seek": 75800, "start": 775.0, "end": 777.0, "text": " And do functional programming when you want to.", "tokens": [400, 360, 11745, 9410, 562, 291, 528, 281, 13], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 126, "seek": 75800, "start": 777.0, "end": 779.0, "text": " So you end up with this type of mixture.", "tokens": [407, 291, 917, 493, 365, 341, 2010, 295, 9925, 13], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 127, "seek": 75800, "start": 779.0, "end": 783.0, "text": " Have we got five minutes?", "tokens": [3560, 321, 658, 1732, 2077, 30], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 128, "seek": 75800, "start": 783.0, "end": 784.0, "text": " Five minutes.", "tokens": [9436, 2077, 13], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 129, "seek": 75800, "start": 784.0, "end": 786.0, "text": " Five minutes to two questions.", "tokens": [9436, 2077, 281, 732, 1651, 13], "temperature": 0.0, "avg_logprob": -0.16593796384018078, "compression_ratio": 1.6356589147286822, "no_speech_prob": 8.044738933676854e-05}, {"id": 130, "seek": 78600, "start": 786.0, "end": 796.0, "text": " Okay, so one thing, one additional thing I would like to show you.", "tokens": [1033, 11, 370, 472, 551, 11, 472, 4497, 551, 286, 576, 411, 281, 855, 291, 13], "temperature": 0.0, "avg_logprob": -0.14930945723804076, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.00010317070700693876}, {"id": 131, "seek": 78600, "start": 796.0, "end": 802.0, "text": " Sorry, that's mine.", "tokens": [4919, 11, 300, 311, 3892, 13], "temperature": 0.0, "avg_logprob": -0.14930945723804076, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.00010317070700693876}, {"id": 132, "seek": 78600, "start": 802.0, "end": 815.0, "text": " Yeah, so you can, I mean, using the Gile libraries, you can essentially build up lists, you know, which is the fundamental for many list-like programming efforts.", "tokens": [865, 11, 370, 291, 393, 11, 286, 914, 11, 1228, 264, 460, 794, 15148, 11, 291, 393, 4476, 1322, 493, 14511, 11, 291, 458, 11, 597, 307, 264, 8088, 337, 867, 1329, 12, 4092, 9410, 6484, 13], "temperature": 0.0, "avg_logprob": -0.14930945723804076, "compression_ratio": 1.439306358381503, "no_speech_prob": 0.00010317070700693876}, {"id": 133, "seek": 81500, "start": 815.0, "end": 821.0, "text": " But, you know, when you talk about performance, you'd like to deal with arrays of data.", "tokens": [583, 11, 291, 458, 11, 562, 291, 751, 466, 3389, 11, 291, 1116, 411, 281, 2028, 365, 41011, 295, 1412, 13], "temperature": 0.0, "avg_logprob": -0.11219046996520446, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.579585119150579e-05}, {"id": 134, "seek": 81500, "start": 821.0, "end": 832.0, "text": " So it continues blocks of memory where you have integers in a row or doubles in a row, and you're able to address these integers and doubles.", "tokens": [407, 309, 6515, 8474, 295, 4675, 689, 291, 362, 41674, 294, 257, 5386, 420, 31634, 294, 257, 5386, 11, 293, 291, 434, 1075, 281, 2985, 613, 41674, 293, 31634, 13], "temperature": 0.0, "avg_logprob": -0.11219046996520446, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.579585119150579e-05}, {"id": 135, "seek": 81500, "start": 832.0, "end": 842.0, "text": " Of course, you can do that from Gile, but, you know, if you want to do, if you write high-performance code like we do, you want to be able to, you know, use it as a vector in ZIG.", "tokens": [2720, 1164, 11, 291, 393, 360, 300, 490, 460, 794, 11, 457, 11, 291, 458, 11, 498, 291, 528, 281, 360, 11, 498, 291, 2464, 1090, 12, 50242, 3089, 411, 321, 360, 11, 291, 528, 281, 312, 1075, 281, 11, 291, 458, 11, 764, 309, 382, 257, 8062, 294, 1176, 10489, 13], "temperature": 0.0, "avg_logprob": -0.11219046996520446, "compression_ratio": 1.7782608695652173, "no_speech_prob": 8.579585119150579e-05}, {"id": 136, "seek": 84200, "start": 842.0, "end": 851.0, "text": " Yeah, so you have an index, the base pointer to the vector, and then you have an index, and you should be able to fetch out the data object that you want.", "tokens": [865, 11, 370, 291, 362, 364, 8186, 11, 264, 3096, 23918, 281, 264, 8062, 11, 293, 550, 291, 362, 364, 8186, 11, 293, 291, 820, 312, 1075, 281, 23673, 484, 264, 1412, 2657, 300, 291, 528, 13], "temperature": 0.0, "avg_logprob": -0.12089556196461552, "compression_ratio": 1.696808510638298, "no_speech_prob": 3.7029760278528556e-05}, {"id": 137, "seek": 84200, "start": 851.0, "end": 856.0, "text": " So just write a little example here.", "tokens": [407, 445, 2464, 257, 707, 1365, 510, 13], "temperature": 0.0, "avg_logprob": -0.12089556196461552, "compression_ratio": 1.696808510638298, "no_speech_prob": 3.7029760278528556e-05}, {"id": 138, "seek": 84200, "start": 856.0, "end": 857.0, "text": " So this is the list example.", "tokens": [407, 341, 307, 264, 1329, 1365, 13], "temperature": 0.0, "avg_logprob": -0.12089556196461552, "compression_ratio": 1.696808510638298, "no_speech_prob": 3.7029760278528556e-05}, {"id": 139, "seek": 84200, "start": 857.0, "end": 865.0, "text": " Let me see if I can, the vector array.", "tokens": [961, 385, 536, 498, 286, 393, 11, 264, 8062, 10225, 13], "temperature": 0.0, "avg_logprob": -0.12089556196461552, "compression_ratio": 1.696808510638298, "no_speech_prob": 3.7029760278528556e-05}, {"id": 140, "seek": 84200, "start": 865.0, "end": 871.0, "text": " Yeah, so you have, I wrote a little, let me move that down.", "tokens": [865, 11, 370, 291, 362, 11, 286, 4114, 257, 707, 11, 718, 385, 1286, 300, 760, 13], "temperature": 0.0, "avg_logprob": -0.12089556196461552, "compression_ratio": 1.696808510638298, "no_speech_prob": 3.7029760278528556e-05}, {"id": 141, "seek": 87100, "start": 871.0, "end": 881.0, "text": " A little ZIG function, which has my increment in floating point 64 bits vector ZIG, you know, I'm very good at naming, apparently.", "tokens": [316, 707, 1176, 10489, 2445, 11, 597, 575, 452, 26200, 294, 12607, 935, 12145, 9239, 8062, 1176, 10489, 11, 291, 458, 11, 286, 478, 588, 665, 412, 25290, 11, 7970, 13], "temperature": 0.0, "avg_logprob": -0.1745170514608167, "compression_ratio": 1.6208530805687205, "no_speech_prob": 6.906007183715701e-05}, {"id": 142, "seek": 87100, "start": 881.0, "end": 886.0, "text": " You pass in a Gile vector, which is, again, a scheme object.", "tokens": [509, 1320, 294, 257, 460, 794, 8062, 11, 597, 307, 11, 797, 11, 257, 12232, 2657, 13], "temperature": 0.0, "avg_logprob": -0.1745170514608167, "compression_ratio": 1.6208530805687205, "no_speech_prob": 6.906007183715701e-05}, {"id": 143, "seek": 87100, "start": 886.0, "end": 890.0, "text": " It returns a scheme object, which is, again, a vector, right?", "tokens": [467, 11247, 257, 12232, 2657, 11, 597, 307, 11, 797, 11, 257, 8062, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1745170514608167, "compression_ratio": 1.6208530805687205, "no_speech_prob": 6.906007183715701e-05}, {"id": 144, "seek": 87100, "start": 890.0, "end": 897.0, "text": " And then it calls this Gile function, scheme f64, oh, that's where the naming came from.", "tokens": [400, 550, 309, 5498, 341, 460, 794, 2445, 11, 12232, 283, 19395, 11, 1954, 11, 300, 311, 689, 264, 25290, 1361, 490, 13], "temperature": 0.0, "avg_logprob": -0.1745170514608167, "compression_ratio": 1.6208530805687205, "no_speech_prob": 6.906007183715701e-05}, {"id": 145, "seek": 89700, "start": 897.0, "end": 909.0, "text": " It came from Gile, yes, so I set X, you know, so I set, I'm set in the vector, I set at position one, right?", "tokens": [467, 1361, 490, 460, 794, 11, 2086, 11, 370, 286, 992, 1783, 11, 291, 458, 11, 370, 286, 992, 11, 286, 478, 992, 294, 264, 8062, 11, 286, 992, 412, 2535, 472, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.21736726881582527, "compression_ratio": 1.4251497005988023, "no_speech_prob": 3.4152253647334874e-05}, {"id": 146, "seek": 89700, "start": 909.0, "end": 913.0, "text": " So index one, I set the value 3.7.", "tokens": [407, 8186, 472, 11, 286, 992, 264, 2158, 805, 13, 22, 13], "temperature": 0.0, "avg_logprob": -0.21736726881582527, "compression_ratio": 1.4251497005988023, "no_speech_prob": 3.4152253647334874e-05}, {"id": 147, "seek": 89700, "start": 913.0, "end": 922.0, "text": " So this is kind of happening in Gile-ish C code, so it's calling essentially Gile C functions.", "tokens": [407, 341, 307, 733, 295, 2737, 294, 460, 794, 12, 742, 383, 3089, 11, 370, 309, 311, 5141, 4476, 460, 794, 383, 6828, 13], "temperature": 0.0, "avg_logprob": -0.21736726881582527, "compression_ratio": 1.4251497005988023, "no_speech_prob": 3.4152253647334874e-05}, {"id": 148, "seek": 92200, "start": 922.0, "end": 931.0, "text": " Yeah, and I prove that it works, you can look it up.", "tokens": [865, 11, 293, 286, 7081, 300, 309, 1985, 11, 291, 393, 574, 309, 493, 13], "temperature": 0.0, "avg_logprob": -0.12321241696675618, "compression_ratio": 1.3353658536585367, "no_speech_prob": 3.617247784859501e-05}, {"id": 149, "seek": 92200, "start": 931.0, "end": 937.0, "text": " But here, here I'm using a proper index, I think, let me see, yeah.", "tokens": [583, 510, 11, 510, 286, 478, 1228, 257, 2296, 8186, 11, 286, 519, 11, 718, 385, 536, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.12321241696675618, "compression_ratio": 1.3353658536585367, "no_speech_prob": 3.617247784859501e-05}, {"id": 150, "seek": 92200, "start": 937.0, "end": 942.0, "text": " So you increment the f64 vector, right?", "tokens": [407, 291, 26200, 264, 283, 19395, 8062, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.12321241696675618, "compression_ratio": 1.3353658536585367, "no_speech_prob": 3.617247784859501e-05}, {"id": 151, "seek": 92200, "start": 942.0, "end": 944.0, "text": " This is the old version.", "tokens": [639, 307, 264, 1331, 3037, 13], "temperature": 0.0, "avg_logprob": -0.12321241696675618, "compression_ratio": 1.3353658536585367, "no_speech_prob": 3.617247784859501e-05}, {"id": 152, "seek": 92200, "start": 944.0, "end": 949.0, "text": " Here I get a handle on the array.", "tokens": [1692, 286, 483, 257, 4813, 322, 264, 10225, 13], "temperature": 0.0, "avg_logprob": -0.12321241696675618, "compression_ratio": 1.3353658536585367, "no_speech_prob": 3.617247784859501e-05}, {"id": 153, "seek": 94900, "start": 949.0, "end": 954.0, "text": " And then I get the data, so I get a vector here.", "tokens": [400, 550, 286, 483, 264, 1412, 11, 370, 286, 483, 257, 8062, 510, 13], "temperature": 0.0, "avg_logprob": -0.1304175805072395, "compression_ratio": 1.7301587301587302, "no_speech_prob": 1.9193837943021208e-05}, {"id": 154, "seek": 94900, "start": 954.0, "end": 959.0, "text": " If our data is a vector, yeah, of the elements of the vector array, right?", "tokens": [759, 527, 1412, 307, 257, 8062, 11, 1338, 11, 295, 264, 4959, 295, 264, 8062, 10225, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1304175805072395, "compression_ratio": 1.7301587301587302, "no_speech_prob": 1.9193837943021208e-05}, {"id": 155, "seek": 94900, "start": 959.0, "end": 970.0, "text": " And then I index the data points based on the vector, you know, of the floating points, and show 0, 1, and number 2.", "tokens": [400, 550, 286, 8186, 264, 1412, 2793, 2361, 322, 264, 8062, 11, 291, 458, 11, 295, 264, 12607, 2793, 11, 293, 855, 1958, 11, 502, 11, 293, 1230, 568, 13], "temperature": 0.0, "avg_logprob": -0.1304175805072395, "compression_ratio": 1.7301587301587302, "no_speech_prob": 1.9193837943021208e-05}, {"id": 156, "seek": 94900, "start": 970.0, "end": 978.0, "text": " Yeah, and that's what it shows, so I'm not going to do that live, but that's the idea.", "tokens": [865, 11, 293, 300, 311, 437, 309, 3110, 11, 370, 286, 478, 406, 516, 281, 360, 300, 1621, 11, 457, 300, 311, 264, 1558, 13], "temperature": 0.0, "avg_logprob": -0.1304175805072395, "compression_ratio": 1.7301587301587302, "no_speech_prob": 1.9193837943021208e-05}, {"id": 157, "seek": 97800, "start": 978.0, "end": 982.0, "text": " Yeah, I'm done.", "tokens": [865, 11, 286, 478, 1096, 13], "temperature": 0.0, "avg_logprob": -0.21613123151991104, "compression_ratio": 1.2264150943396226, "no_speech_prob": 0.0002375854382989928}, {"id": 158, "seek": 97800, "start": 982.0, "end": 990.0, "text": " Yeah, so it's in a nutshell, the code and the slides are online, so you can have a look, have a go.", "tokens": [865, 11, 370, 309, 311, 294, 257, 37711, 11, 264, 3089, 293, 264, 9788, 366, 2950, 11, 370, 291, 393, 362, 257, 574, 11, 362, 257, 352, 13], "temperature": 0.0, "avg_logprob": -0.21613123151991104, "compression_ratio": 1.2264150943396226, "no_speech_prob": 0.0002375854382989928}, {"id": 159, "seek": 97800, "start": 990.0, "end": 992.0, "text": " Any questions?", "tokens": [2639, 1651, 30], "temperature": 0.0, "avg_logprob": -0.21613123151991104, "compression_ratio": 1.2264150943396226, "no_speech_prob": 0.0002375854382989928}, {"id": 160, "seek": 99200, "start": 992.0, "end": 1013.0, "text": " Yes.", "tokens": [1079, 13], "temperature": 0.0, "avg_logprob": -0.2632896423339844, "compression_ratio": 0.8870967741935484, "no_speech_prob": 0.0005198916187509894}, {"id": 161, "seek": 99200, "start": 1013.0, "end": 1017.0, "text": " I tried quite long actually, so I read five books.", "tokens": [286, 3031, 1596, 938, 767, 11, 370, 286, 1401, 1732, 3642, 13], "temperature": 0.0, "avg_logprob": -0.2632896423339844, "compression_ratio": 0.8870967741935484, "no_speech_prob": 0.0005198916187509894}, {"id": 162, "seek": 101700, "start": 1017.0, "end": 1025.0, "text": " I probably took two months and wrote a thousand lines of code or so to decide it wasn't for me.", "tokens": [286, 1391, 1890, 732, 2493, 293, 4114, 257, 4714, 3876, 295, 3089, 420, 370, 281, 4536, 309, 2067, 380, 337, 385, 13], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 163, "seek": 101700, "start": 1025.0, "end": 1030.0, "text": " But yeah, I hear quite a few stories like this, which are very similar.", "tokens": [583, 1338, 11, 286, 1568, 1596, 257, 1326, 3676, 411, 341, 11, 597, 366, 588, 2531, 13], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 164, "seek": 101700, "start": 1030.0, "end": 1035.0, "text": " I think, you know, it's a language for masochists.", "tokens": [286, 519, 11, 291, 458, 11, 309, 311, 257, 2856, 337, 2300, 8997, 1751, 13], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 165, "seek": 101700, "start": 1035.0, "end": 1037.0, "text": " A language for masochists.", "tokens": [316, 2856, 337, 2300, 8997, 1751, 13], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 166, "seek": 101700, "start": 1037.0, "end": 1039.0, "text": " You have to be a brilliant person, right?", "tokens": [509, 362, 281, 312, 257, 10248, 954, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 167, "seek": 101700, "start": 1039.0, "end": 1041.0, "text": " Well, a brilliant masochist, let's put it that way.", "tokens": [1042, 11, 257, 10248, 2300, 8997, 468, 11, 718, 311, 829, 309, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 168, "seek": 101700, "start": 1041.0, "end": 1045.0, "text": " You have to be brilliant to keep that all in your head.", "tokens": [509, 362, 281, 312, 10248, 281, 1066, 300, 439, 294, 428, 1378, 13], "temperature": 0.0, "avg_logprob": -0.08533513442329739, "compression_ratio": 1.6808510638297873, "no_speech_prob": 0.00017363775987178087}, {"id": 169, "seek": 104500, "start": 1045.0, "end": 1050.0, "text": " Yeah, so see.", "tokens": [865, 11, 370, 536, 13], "temperature": 0.0, "avg_logprob": -0.18214592479524158, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.0007145393756218255}, {"id": 170, "seek": 104500, "start": 1050.0, "end": 1061.0, "text": " Yeah, you know, I'm not complaining about it because people who program in Rust, they do better than in C++.", "tokens": [865, 11, 291, 458, 11, 286, 478, 406, 20740, 466, 309, 570, 561, 567, 1461, 294, 34952, 11, 436, 360, 1101, 813, 294, 383, 25472, 13], "temperature": 0.0, "avg_logprob": -0.18214592479524158, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.0007145393756218255}, {"id": 171, "seek": 104500, "start": 1061.0, "end": 1065.0, "text": " So the compiler does help a lot, and I think it does lead to better code.", "tokens": [407, 264, 31958, 775, 854, 257, 688, 11, 293, 286, 519, 309, 775, 1477, 281, 1101, 3089, 13], "temperature": 0.0, "avg_logprob": -0.18214592479524158, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.0007145393756218255}, {"id": 172, "seek": 104500, "start": 1065.0, "end": 1074.0, "text": " I've given students, you know, work in Rust, and they do write better code because the compiler actually helps you.", "tokens": [286, 600, 2212, 1731, 11, 291, 458, 11, 589, 294, 34952, 11, 293, 436, 360, 2464, 1101, 3089, 570, 264, 31958, 767, 3665, 291, 13], "temperature": 0.0, "avg_logprob": -0.18214592479524158, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.0007145393756218255}, {"id": 173, "seek": 107400, "start": 1074.0, "end": 1080.0, "text": " All right, but it also takes them a long time to get something done.", "tokens": [1057, 558, 11, 457, 309, 611, 2516, 552, 257, 938, 565, 281, 483, 746, 1096, 13], "temperature": 0.0, "avg_logprob": -0.11768261302601207, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.00014496370567940176}, {"id": 174, "seek": 107400, "start": 1080.0, "end": 1082.0, "text": " So it depends on what your goals are, right?", "tokens": [407, 309, 5946, 322, 437, 428, 5493, 366, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.11768261302601207, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.00014496370567940176}, {"id": 175, "seek": 107400, "start": 1082.0, "end": 1089.0, "text": " I mean, if you have to write, you know, perfect software to launch your rocket, you might, you know, want to do it that way.", "tokens": [286, 914, 11, 498, 291, 362, 281, 2464, 11, 291, 458, 11, 2176, 4722, 281, 4025, 428, 13012, 11, 291, 1062, 11, 291, 458, 11, 528, 281, 360, 309, 300, 636, 13], "temperature": 0.0, "avg_logprob": -0.11768261302601207, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.00014496370567940176}, {"id": 176, "seek": 107400, "start": 1089.0, "end": 1094.0, "text": " But if it's just like me, you know, in my job, we write mostly throw away code.", "tokens": [583, 498, 309, 311, 445, 411, 385, 11, 291, 458, 11, 294, 452, 1691, 11, 321, 2464, 5240, 3507, 1314, 3089, 13], "temperature": 0.0, "avg_logprob": -0.11768261302601207, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.00014496370567940176}, {"id": 177, "seek": 107400, "start": 1094.0, "end": 1099.0, "text": " It doesn't pay.", "tokens": [467, 1177, 380, 1689, 13], "temperature": 0.0, "avg_logprob": -0.11768261302601207, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.00014496370567940176}, {"id": 178, "seek": 107400, "start": 1099.0, "end": 1103.0, "text": " Bioinformatics, so I'm in science.", "tokens": [26840, 37811, 30292, 11, 370, 286, 478, 294, 3497, 13], "temperature": 0.0, "avg_logprob": -0.11768261302601207, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.00014496370567940176}, {"id": 179, "seek": 110300, "start": 1103.0, "end": 1106.0, "text": " We have long-lived code, but it's usually by accident, right?", "tokens": [492, 362, 938, 12, 46554, 3089, 11, 457, 309, 311, 2673, 538, 6398, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.17569954424019318, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.00019839438027702272}, {"id": 180, "seek": 110300, "start": 1106.0, "end": 1114.0, "text": " So you write something, and people start using it, and then 10 years later, it becomes mainstream.", "tokens": [407, 291, 2464, 746, 11, 293, 561, 722, 1228, 309, 11, 293, 550, 1266, 924, 1780, 11, 309, 3643, 15960, 13], "temperature": 0.0, "avg_logprob": -0.17569954424019318, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.00019839438027702272}, {"id": 181, "seek": 110300, "start": 1114.0, "end": 1117.0, "text": " It's actually happened to one of our projects, yeah.", "tokens": [467, 311, 767, 2011, 281, 472, 295, 527, 4455, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.17569954424019318, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.00019839438027702272}, {"id": 182, "seek": 110300, "start": 1117.0, "end": 1119.0, "text": " It's kind of, yeah.", "tokens": [467, 311, 733, 295, 11, 1338, 13], "temperature": 0.0, "avg_logprob": -0.17569954424019318, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.00019839438027702272}, {"id": 183, "seek": 110300, "start": 1119.0, "end": 1123.0, "text": " And then, you know, then it's too late to do better.", "tokens": [400, 550, 11, 291, 458, 11, 550, 309, 311, 886, 3469, 281, 360, 1101, 13], "temperature": 0.0, "avg_logprob": -0.17569954424019318, "compression_ratio": 1.4818652849740932, "no_speech_prob": 0.00019839438027702272}, {"id": 184, "seek": 112300, "start": 1123.0, "end": 1133.0, "text": " So at one point, you showed us how to convert the ZIG file to C, right?", "tokens": [407, 412, 472, 935, 11, 291, 4712, 505, 577, 281, 7620, 264, 1176, 10489, 3991, 281, 383, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1931185611458712, "compression_ratio": 1.518918918918919, "no_speech_prob": 8.21307476144284e-05}, {"id": 185, "seek": 112300, "start": 1133.0, "end": 1142.0, "text": " But it wasn't really necessary in order to, or it wasn't necessary in order to call the style stuff from within ZIG?", "tokens": [583, 309, 2067, 380, 534, 4818, 294, 1668, 281, 11, 420, 309, 2067, 380, 4818, 294, 1668, 281, 818, 264, 3758, 1507, 490, 1951, 1176, 10489, 30], "temperature": 0.0, "avg_logprob": -0.1931185611458712, "compression_ratio": 1.518918918918919, "no_speech_prob": 8.21307476144284e-05}, {"id": 186, "seek": 112300, "start": 1142.0, "end": 1146.0, "text": " No, I mean, it's, the guy that adheres to the C ABI, right?", "tokens": [883, 11, 286, 914, 11, 309, 311, 11, 264, 2146, 300, 614, 19464, 281, 264, 383, 316, 11291, 11, 558, 30], "temperature": 0.0, "avg_logprob": -0.1931185611458712, "compression_ratio": 1.518918918918919, "no_speech_prob": 8.21307476144284e-05}, {"id": 187, "seek": 112300, "start": 1146.0, "end": 1149.0, "text": " So it has a C calling interface.", "tokens": [407, 309, 575, 257, 383, 5141, 9226, 13], "temperature": 0.0, "avg_logprob": -0.1931185611458712, "compression_ratio": 1.518918918918919, "no_speech_prob": 8.21307476144284e-05}, {"id": 188, "seek": 114900, "start": 1149.0, "end": 1153.0, "text": " You can use the scheme object, yeah, so that came from there.", "tokens": [509, 393, 764, 264, 12232, 2657, 11, 1338, 11, 370, 300, 1361, 490, 456, 13], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 189, "seek": 114900, "start": 1153.0, "end": 1156.0, "text": " But actually, the scheme object is really simple when you look at it.", "tokens": [583, 767, 11, 264, 12232, 2657, 307, 534, 2199, 562, 291, 574, 412, 309, 13], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 190, "seek": 114900, "start": 1156.0, "end": 1161.0, "text": " So it could be that, you know, just, you can just roll your own.", "tokens": [407, 309, 727, 312, 300, 11, 291, 458, 11, 445, 11, 291, 393, 445, 3373, 428, 1065, 13], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 191, "seek": 114900, "start": 1161.0, "end": 1163.0, "text": " Yeah?", "tokens": [865, 30], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 192, "seek": 114900, "start": 1163.0, "end": 1167.0, "text": " So you create the language for scratch.", "tokens": [407, 291, 1884, 264, 2856, 337, 8459, 13], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 193, "seek": 114900, "start": 1167.0, "end": 1172.0, "text": " So why did you decide to use the semicolons and curly braces in it?", "tokens": [407, 983, 630, 291, 4536, 281, 764, 264, 27515, 401, 892, 293, 32066, 41537, 294, 309, 30], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 194, "seek": 114900, "start": 1172.0, "end": 1173.0, "text": " Well, I didn't design ZIG.", "tokens": [1042, 11, 286, 994, 380, 1715, 1176, 10489, 13], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 195, "seek": 114900, "start": 1173.0, "end": 1175.0, "text": " I should have been clearer.", "tokens": [286, 820, 362, 668, 26131, 13], "temperature": 0.0, "avg_logprob": -0.15830564498901367, "compression_ratio": 1.5732758620689655, "no_speech_prob": 6.907266651978716e-05}, {"id": 196, "seek": 117500, "start": 1175.0, "end": 1181.0, "text": " Nor have I any input on guile, unlike other people here.", "tokens": [6966, 362, 286, 604, 4846, 322, 695, 794, 11, 8343, 661, 561, 510, 13], "temperature": 0.0, "avg_logprob": -0.15813947493030178, "compression_ratio": 1.5133689839572193, "no_speech_prob": 0.0001925872202264145}, {"id": 197, "seek": 117500, "start": 1181.0, "end": 1187.0, "text": " But, yeah, you know, I dabble in languages.", "tokens": [583, 11, 1338, 11, 291, 458, 11, 286, 28964, 638, 294, 8650, 13], "temperature": 0.0, "avg_logprob": -0.15813947493030178, "compression_ratio": 1.5133689839572193, "no_speech_prob": 0.0001925872202264145}, {"id": 198, "seek": 117500, "start": 1187.0, "end": 1192.0, "text": " You know, I use, people often ask me, what is the language of the year?", "tokens": [509, 458, 11, 286, 764, 11, 561, 2049, 1029, 385, 11, 437, 307, 264, 2856, 295, 264, 1064, 30], "temperature": 0.0, "avg_logprob": -0.15813947493030178, "compression_ratio": 1.5133689839572193, "no_speech_prob": 0.0001925872202264145}, {"id": 199, "seek": 117500, "start": 1192.0, "end": 1195.0, "text": " I think at that point it was Scala.", "tokens": [286, 519, 412, 300, 935, 309, 390, 2747, 5159, 13], "temperature": 0.0, "avg_logprob": -0.15813947493030178, "compression_ratio": 1.5133689839572193, "no_speech_prob": 0.0001925872202264145}, {"id": 200, "seek": 117500, "start": 1195.0, "end": 1197.0, "text": " I'm embarrassed to say.", "tokens": [286, 478, 16843, 281, 584, 13], "temperature": 0.0, "avg_logprob": -0.15813947493030178, "compression_ratio": 1.5133689839572193, "no_speech_prob": 0.0001925872202264145}, {"id": 201, "seek": 117500, "start": 1197.0, "end": 1203.0, "text": " But, no, I think, you know, ZIG does appeal to me.", "tokens": [583, 11, 572, 11, 286, 519, 11, 291, 458, 11, 1176, 10489, 775, 13668, 281, 385, 13], "temperature": 0.0, "avg_logprob": -0.15813947493030178, "compression_ratio": 1.5133689839572193, "no_speech_prob": 0.0001925872202264145}, {"id": 202, "seek": 120300, "start": 1203.0, "end": 1205.0, "text": " Yeah?", "tokens": [865, 30], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 203, "seek": 120300, "start": 1205.0, "end": 1210.0, "text": " The second question is, so if I'm running, if I want to make a formal program,", "tokens": [440, 1150, 1168, 307, 11, 370, 498, 286, 478, 2614, 11, 498, 286, 528, 281, 652, 257, 9860, 1461, 11], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 204, "seek": 120300, "start": 1210.0, "end": 1219.0, "text": " and I do them in Fortran or Julia, why would they use it?", "tokens": [293, 286, 360, 552, 294, 11002, 4257, 420, 18551, 11, 983, 576, 436, 764, 309, 30], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 205, "seek": 120300, "start": 1219.0, "end": 1222.0, "text": " So Fortran is, you know, it's a bit difficult,", "tokens": [407, 11002, 4257, 307, 11, 291, 458, 11, 309, 311, 257, 857, 2252, 11], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 206, "seek": 120300, "start": 1222.0, "end": 1226.0, "text": " because the very different language is Fortran and Julia.", "tokens": [570, 264, 588, 819, 2856, 307, 11002, 4257, 293, 18551, 13], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 207, "seek": 120300, "start": 1226.0, "end": 1230.0, "text": " But I think, you know, ZIG tries to be in the space of C.", "tokens": [583, 286, 519, 11, 291, 458, 11, 1176, 10489, 9898, 281, 312, 294, 264, 1901, 295, 383, 13], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 208, "seek": 120300, "start": 1230.0, "end": 1232.0, "text": " Yeah.", "tokens": [865, 13], "temperature": 0.0, "avg_logprob": -0.1963519664725872, "compression_ratio": 1.4669811320754718, "no_speech_prob": 0.0002663695195224136}, {"id": 209, "seek": 123200, "start": 1232.0, "end": 1238.0, "text": " It's a general purpose systems programming and uncompromising speed.", "tokens": [467, 311, 257, 2674, 4334, 3652, 9410, 293, 8585, 28722, 3436, 3073, 13], "temperature": 0.0, "avg_logprob": -0.17115145463209885, "compression_ratio": 1.4851485148514851, "no_speech_prob": 0.00018996847211383283}, {"id": 210, "seek": 123200, "start": 1238.0, "end": 1240.0, "text": " And it is fast.", "tokens": [400, 309, 307, 2370, 13], "temperature": 0.0, "avg_logprob": -0.17115145463209885, "compression_ratio": 1.4851485148514851, "no_speech_prob": 0.00018996847211383283}, {"id": 211, "seek": 123200, "start": 1240.0, "end": 1247.0, "text": " Yes, the compiler itself compiles itself in 10 minutes about on a standard machine.", "tokens": [1079, 11, 264, 31958, 2564, 715, 4680, 2564, 294, 1266, 2077, 466, 322, 257, 3832, 3479, 13], "temperature": 0.0, "avg_logprob": -0.17115145463209885, "compression_ratio": 1.4851485148514851, "no_speech_prob": 0.00018996847211383283}, {"id": 212, "seek": 123200, "start": 1247.0, "end": 1252.0, "text": " But I think, for example, it doesn't have exception handling.", "tokens": [583, 286, 519, 11, 337, 1365, 11, 309, 1177, 380, 362, 11183, 13175, 13], "temperature": 0.0, "avg_logprob": -0.17115145463209885, "compression_ratio": 1.4851485148514851, "no_speech_prob": 0.00018996847211383283}, {"id": 213, "seek": 123200, "start": 1252.0, "end": 1257.0, "text": " Yeah, it uses a different approach, which is more like a maybe monad.", "tokens": [865, 11, 309, 4960, 257, 819, 3109, 11, 597, 307, 544, 411, 257, 1310, 1108, 345, 13], "temperature": 0.0, "avg_logprob": -0.17115145463209885, "compression_ratio": 1.4851485148514851, "no_speech_prob": 0.00018996847211383283}, {"id": 214, "seek": 125700, "start": 1257.0, "end": 1262.0, "text": " You know, and even C++, typically you'll have exception handling,", "tokens": [509, 458, 11, 293, 754, 383, 25472, 11, 5850, 291, 603, 362, 11183, 13175, 11], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 215, "seek": 125700, "start": 1262.0, "end": 1265.0, "text": " which, you know, every time you call a function, it has to carry state with it", "tokens": [597, 11, 291, 458, 11, 633, 565, 291, 818, 257, 2445, 11, 309, 575, 281, 3985, 1785, 365, 309], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 216, "seek": 125700, "start": 1265.0, "end": 1267.0, "text": " to be able to unroll the stack.", "tokens": [281, 312, 1075, 281, 517, 3970, 264, 8630, 13], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 217, "seek": 125700, "start": 1267.0, "end": 1269.0, "text": " And this causes overheads.", "tokens": [400, 341, 7700, 19922, 82, 13], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 218, "seek": 125700, "start": 1269.0, "end": 1271.0, "text": " That's one thing.", "tokens": [663, 311, 472, 551, 13], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 219, "seek": 125700, "start": 1271.0, "end": 1274.0, "text": " Now, with C++, the other thing is that in the background,", "tokens": [823, 11, 365, 383, 25472, 11, 264, 661, 551, 307, 300, 294, 264, 3678, 11], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 220, "seek": 125700, "start": 1274.0, "end": 1277.0, "text": " there's often a lot of memory allocation going on.", "tokens": [456, 311, 2049, 257, 688, 295, 4675, 27599, 516, 322, 13], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 221, "seek": 125700, "start": 1277.0, "end": 1281.0, "text": " Yeah, especially when, I mean, it's kind of unavoidable to use the SEL these days.", "tokens": [865, 11, 2318, 562, 11, 286, 914, 11, 309, 311, 733, 295, 36541, 17079, 712, 281, 764, 264, 318, 3158, 613, 1708, 13], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 222, "seek": 125700, "start": 1281.0, "end": 1283.0, "text": " That's best practice.", "tokens": [663, 311, 1151, 3124, 13], "temperature": 0.0, "avg_logprob": -0.11775790899991989, "compression_ratio": 1.5934065934065933, "no_speech_prob": 0.000275125028565526}, {"id": 223, "seek": 128300, "start": 1283.0, "end": 1287.0, "text": " And I find that in ZIG, because it's closer to the C philosophy,", "tokens": [400, 286, 915, 300, 294, 1176, 10489, 11, 570, 309, 311, 4966, 281, 264, 383, 10675, 11], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 224, "seek": 128300, "start": 1287.0, "end": 1289.0, "text": " it's actually much faster.", "tokens": [309, 311, 767, 709, 4663, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 225, "seek": 128300, "start": 1289.0, "end": 1291.0, "text": " Yeah, so.", "tokens": [865, 11, 370, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 226, "seek": 128300, "start": 1291.0, "end": 1293.0, "text": " Oh, hey.", "tokens": [876, 11, 4177, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 227, "seek": 128300, "start": 1293.0, "end": 1299.0, "text": " Are you planning to write like a tutorial in the guide manual for how to do this?", "tokens": [2014, 291, 5038, 281, 2464, 411, 257, 7073, 294, 264, 5934, 9688, 337, 577, 281, 360, 341, 30], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 228, "seek": 128300, "start": 1299.0, "end": 1300.0, "text": " Yeah, we should.", "tokens": [865, 11, 321, 820, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 229, "seek": 128300, "start": 1300.0, "end": 1301.0, "text": " Yeah, we should.", "tokens": [865, 11, 321, 820, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 230, "seek": 128300, "start": 1301.0, "end": 1303.0, "text": " I think the next speaker needs to go on.", "tokens": [286, 519, 264, 958, 8145, 2203, 281, 352, 322, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 231, "seek": 128300, "start": 1303.0, "end": 1304.0, "text": " No?", "tokens": [883, 30], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 232, "seek": 128300, "start": 1304.0, "end": 1306.0, "text": " How much time do we have?", "tokens": [1012, 709, 565, 360, 321, 362, 30], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 233, "seek": 128300, "start": 1306.0, "end": 1308.0, "text": " Two minutes, one and a half.", "tokens": [4453, 2077, 11, 472, 293, 257, 1922, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 234, "seek": 128300, "start": 1308.0, "end": 1309.0, "text": " Yeah, you can.", "tokens": [865, 11, 291, 393, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 235, "seek": 128300, "start": 1309.0, "end": 1311.0, "text": " It's good to switch.", "tokens": [467, 311, 665, 281, 3679, 13], "temperature": 0.0, "avg_logprob": -0.14329032897949218, "compression_ratio": 1.5210084033613445, "no_speech_prob": 0.00010909483535215259}, {"id": 236, "seek": 131100, "start": 1311.0, "end": 1313.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.5140869306481403, "compression_ratio": 1.2972972972972974, "no_speech_prob": 0.0013826395152136683}, {"id": 237, "seek": 131100, "start": 1313.0, "end": 1315.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.5140869306481403, "compression_ratio": 1.2972972972972974, "no_speech_prob": 0.0013826395152136683}, {"id": 238, "seek": 131100, "start": 1315.0, "end": 1317.0, "text": " Thank you.", "tokens": [1044, 291, 13], "temperature": 0.0, "avg_logprob": -0.5140869306481403, "compression_ratio": 1.2972972972972974, "no_speech_prob": 0.0013826395152136683}, {"id": 239, "seek": 131700, "start": 1317.0, "end": 1342.0, "text": " I'll switch on.", "tokens": [50364, 286, 603, 3679, 322, 13, 51614], "temperature": 0.0, "avg_logprob": -0.610693097114563, "compression_ratio": 0.6521739130434783, "no_speech_prob": 0.0011749942786991596}], "language": "en"}