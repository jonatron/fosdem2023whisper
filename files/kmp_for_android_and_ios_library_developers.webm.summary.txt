 We use this, for example, to initialize some components of our library that require a context for doing a background job, for example. So, if you include this library, this is the API you will be able to provide. So, it's just a context, that he'll get from the outside, but you don't need to worry about that, because the operating system will inject it, and what you can do is just access it, when it's available. Now, let's take the example of the Repository class. If the constructor of the repository takes an application context and somebody wants to use your library on iOS, the interface does not change, but in this case, the library will get the context from the code that is injected by the operating system. Now, the consumer of your library will not notice the difference. So, this was our journey in the multiplatform world of making libraries and making those libraries enjoyable for both Android and iOS developers.